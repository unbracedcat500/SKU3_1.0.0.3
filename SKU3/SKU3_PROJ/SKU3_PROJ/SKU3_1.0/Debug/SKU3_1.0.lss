
SKU3_1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006e8  00800200  0001d970  0001da04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0001d970  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000011ea  008008e8  008008e8  0001e0ec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0001e0ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0001e148  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00001280  00000000  00000000  0001e188  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0004c36f  00000000  00000000  0001f408  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000081fa  00000000  00000000  0006b777  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00017022  00000000  00000000  00073971  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000452c  00000000  00000000  0008a994  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00015024  00000000  00000000  0008eec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0001ba3e  00000000  00000000  000a3ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000015d0  00000000  00000000  000bf922  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a9 23 	jmp	0x4752	; 0x4752 <__ctors_end>
       4:	0c 94 1b df 	jmp	0x1be36	; 0x1be36 <__vector_1>
       8:	0c 94 46 df 	jmp	0x1be8c	; 0x1be8c <__vector_2>
       c:	0c 94 71 df 	jmp	0x1bee2	; 0x1bee2 <__vector_3>
      10:	0c 94 9c df 	jmp	0x1bf38	; 0x1bf38 <__vector_4>
      14:	0c 94 c7 df 	jmp	0x1bf8e	; 0x1bf8e <__vector_5>
      18:	0c 94 f2 df 	jmp	0x1bfe4	; 0x1bfe4 <__vector_6>
      1c:	0c 94 1d e0 	jmp	0x1c03a	; 0x1c03a <__vector_7>
      20:	0c 94 48 e0 	jmp	0x1c090	; 0x1c090 <__vector_8>
      24:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      28:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      2c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      30:	0c 94 a5 61 	jmp	0xc34a	; 0xc34a <__vector_12>
      34:	0c 94 92 63 	jmp	0xc724	; 0xc724 <__vector_13>
      38:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      3c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      40:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      44:	0c 94 fb 61 	jmp	0xc3f6	; 0xc3f6 <__vector_17>
      48:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      4c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      50:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      54:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      58:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      5c:	0c 94 f5 d2 	jmp	0x1a5ea	; 0x1a5ea <__vector_23>
      60:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      64:	0c 94 42 cf 	jmp	0x19e84	; 0x19e84 <__vector_25>
      68:	0c 94 7c cf 	jmp	0x19ef8	; 0x19ef8 <__vector_26>
      6c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      70:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      74:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      78:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      7c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      80:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      84:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      88:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      8c:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      90:	0c 94 d2 cf 	jmp	0x19fa4	; 0x19fa4 <__vector_36>
      94:	0c 94 0c d0 	jmp	0x1a018	; 0x1a018 <__vector_37>
      98:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      9c:	0c 94 18 e4 	jmp	0x1c830	; 0x1c830 <__vector_39>
      a0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      a4:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      a8:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      ac:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      b0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      b4:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      b8:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      bc:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      c0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      c4:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      c8:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      cc:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      d0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      d4:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      d8:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      dc:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      e0:	0c 94 da 23 	jmp	0x47b4	; 0x47b4 <__bad_interrupt>
      e4:	2f 32       	cpi	r18, 0x2F	; 47
      e6:	2f 32       	cpi	r18, 0x2F	; 47
      e8:	65 32       	cpi	r22, 0x25	; 37
      ea:	2f 32       	cpi	r18, 0x2F	; 47
      ec:	4d 32       	cpi	r20, 0x2D	; 45
      ee:	2f 32       	cpi	r18, 0x2F	; 47
      f0:	4d 32       	cpi	r20, 0x2D	; 45
      f2:	2f 32       	cpi	r18, 0x2F	; 47
      f4:	2f 32       	cpi	r18, 0x2F	; 47
      f6:	4d 32       	cpi	r20, 0x2D	; 45
      f8:	2f 32       	cpi	r18, 0x2F	; 47
      fa:	4d 32       	cpi	r20, 0x2D	; 45
      fc:	3c 32       	cpi	r19, 0x2C	; 44
      fe:	3e 32       	cpi	r19, 0x2E	; 46
     100:	41 32       	cpi	r20, 0x21	; 33
     102:	43 32       	cpi	r20, 0x23	; 35
     104:	41 32       	cpi	r20, 0x21	; 33
     106:	45 32       	cpi	r20, 0x25	; 37
     108:	41 32       	cpi	r20, 0x21	; 33
     10a:	47 32       	cpi	r20, 0x27	; 39
     10c:	49 32       	cpi	r20, 0x29	; 41
     10e:	41 32       	cpi	r20, 0x21	; 33
     110:	4b 32       	cpi	r20, 0x2B	; 43
     112:	23 33       	cpi	r18, 0x33	; 51
     114:	25 33       	cpi	r18, 0x35	; 53
     116:	27 33       	cpi	r18, 0x37	; 55
     118:	2e 33       	cpi	r18, 0x3E	; 62
     11a:	30 33       	cpi	r19, 0x30	; 48
     11c:	32 33       	cpi	r19, 0x32	; 50
     11e:	34 33       	cpi	r19, 0x34	; 52
     120:	36 33       	cpi	r19, 0x36	; 54
     122:	38 33       	cpi	r19, 0x38	; 56
     124:	3a 33       	cpi	r19, 0x3A	; 58
     126:	3c 33       	cpi	r19, 0x3C	; 60
     128:	3f 33       	cpi	r19, 0x3F	; 63
     12a:	4b 33       	cpi	r20, 0x3B	; 59
     12c:	4f 33       	cpi	r20, 0x3F	; 63
     12e:	53 33       	cpi	r21, 0x33	; 51
     130:	5c 33       	cpi	r21, 0x3C	; 60
     132:	60 33       	cpi	r22, 0x30	; 48
     134:	64 33       	cpi	r22, 0x34	; 52
     136:	68 33       	cpi	r22, 0x38	; 56
     138:	6c 33       	cpi	r22, 0x3C	; 60
     13a:	70 33       	cpi	r23, 0x30	; 48
     13c:	74 33       	cpi	r23, 0x34	; 52
     13e:	78 33       	cpi	r23, 0x38	; 56
     140:	7c 33       	cpi	r23, 0x3C	; 60
     142:	6f 34       	cpi	r22, 0x4F	; 79
     144:	50 35       	cpi	r21, 0x50	; 80
     146:	a7 34       	cpi	r26, 0x47	; 71
     148:	97 35       	cpi	r25, 0x57	; 87
     14a:	c8 34       	cpi	r28, 0x48	; 72
     14c:	b9 35       	cpi	r27, 0x59	; 89
     14e:	ea 34       	cpi	r30, 0x4A	; 74
     150:	0c 35       	cpi	r16, 0x5C	; 92
     152:	db 35       	cpi	r29, 0x5B	; 91
     154:	2e 35       	cpi	r18, 0x5E	; 94
     156:	fb 35       	cpi	r31, 0x5B	; 91
     158:	47 34       	cpi	r20, 0x47	; 71
     15a:	80 36       	cpi	r24, 0x60	; 96
     15c:	45 37       	cpi	r20, 0x75	; 117
     15e:	a0 36       	cpi	r26, 0x60	; 96
     160:	8a 37       	cpi	r24, 0x7A	; 122
     162:	c1 36       	cpi	r28, 0x61	; 97
     164:	ab 37       	cpi	r26, 0x7B	; 123
     166:	e2 36       	cpi	r30, 0x62	; 98
     168:	03 37       	cpi	r16, 0x73	; 115
     16a:	cc 37       	cpi	r28, 0x7C	; 124
     16c:	24 37       	cpi	r18, 0x74	; 116
     16e:	ec 37       	cpi	r30, 0x7C	; 124
     170:	4a 36       	cpi	r20, 0x6A	; 106
     172:	34 39       	cpi	r19, 0x94	; 148
     174:	f4 39       	cpi	r31, 0x94	; 148
     176:	54 39       	cpi	r21, 0x94	; 148
     178:	37 3a       	cpi	r19, 0xA7	; 167
     17a:	74 39       	cpi	r23, 0x94	; 148
     17c:	57 3a       	cpi	r21, 0xA7	; 167
     17e:	94 39       	cpi	r25, 0x94	; 148
     180:	b4 39       	cpi	r27, 0x94	; 148
     182:	77 3a       	cpi	r23, 0xA7	; 167
     184:	d4 39       	cpi	r29, 0x94	; 148
     186:	96 3a       	cpi	r25, 0xA6	; 166
     188:	0c 39       	cpi	r16, 0x9C	; 156
     18a:	1c 3b       	cpi	r17, 0xBC	; 188
     18c:	d6 3b       	cpi	r29, 0xB6	; 182
     18e:	3b 3b       	cpi	r19, 0xBB	; 187
     190:	17 3c       	cpi	r17, 0xC7	; 199
     192:	5a 3b       	cpi	r21, 0xBA	; 186
     194:	36 3c       	cpi	r19, 0xC6	; 198
     196:	79 3b       	cpi	r23, 0xB9	; 185
     198:	98 3b       	cpi	r25, 0xB8	; 184
     19a:	55 3c       	cpi	r21, 0xC5	; 197
     19c:	b7 3b       	cpi	r27, 0xB7	; 183
     19e:	7b 3c       	cpi	r23, 0xCB	; 203
     1a0:	ff 3a       	cpi	r31, 0xAF	; 175
     1a2:	bf 45       	sbci	r27, 0x5F	; 95
     1a4:	ad 45       	sbci	r26, 0x5D	; 93
     1a6:	bf 45       	sbci	r27, 0x5F	; 95
     1a8:	bc 45       	sbci	r27, 0x5C	; 92
     1aa:	bf 45       	sbci	r27, 0x5F	; 95
     1ac:	bc 45       	sbci	r27, 0x5C	; 92
     1ae:	bf 45       	sbci	r27, 0x5F	; 95
     1b0:	bf 45       	sbci	r27, 0x5F	; 95
     1b2:	bc 45       	sbci	r27, 0x5C	; 92
     1b4:	bf 45       	sbci	r27, 0x5F	; 95
     1b6:	bc 45       	sbci	r27, 0x5C	; 92
     1b8:	bf 45       	sbci	r27, 0x5F	; 95
     1ba:	78 66       	ori	r23, 0x68	; 104
     1bc:	7e 66       	ori	r23, 0x6E	; 110
     1be:	87 66       	ori	r24, 0x67	; 103
     1c0:	94 66       	ori	r25, 0x64	; 100
     1c2:	a3 66       	ori	r26, 0x63	; 99
     1c4:	b0 66       	ori	r27, 0x60	; 96
     1c6:	bd 66       	ori	r27, 0x6D	; 109
     1c8:	cb 66       	ori	r28, 0x6B	; 107
     1ca:	d2 66       	ori	r29, 0x62	; 98
     1cc:	dd 66       	ori	r29, 0x6D	; 109
     1ce:	d4 90       	lpm	r13, Z
     1d0:	ca 90       	ld	r12, -Y
     1d2:	e8 90       	.word	0x90e8	; ????
     1d4:	db 90       	.word	0x90db	; ????
     1d6:	d8 90       	.word	0x90d8	; ????
     1d8:	a0 90 c2 90 	lds	r10, 0x90C2	; 0x8090c2 <__bss_end+0x75f0>
     1dc:	95 90       	lpm	r9, Z+
     1de:	45 9a       	sbi	0x08, 5	; 8
     1e0:	4e 9b       	sbis	0x09, 6	; 9
     1e2:	6b 9b       	sbis	0x0d, 3	; 13
     1e4:	85 9b       	sbis	0x10, 5	; 16
     1e6:	b8 9b       	sbis	0x17, 0	; 23
     1e8:	d0 9b       	sbis	0x1a, 0	; 26
     1ea:	e7 9b       	sbis	0x1c, 7	; 28
     1ec:	fc 9b       	sbis	0x1f, 4	; 31
     1ee:	32 d4       	rcall	.+2148   	; 0xa54 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x32>
     1f0:	35 d4       	rcall	.+2154   	; 0xa5c <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x3a>
     1f2:	24 d4       	rcall	.+2120   	; 0xa3c <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x1a>
     1f4:	28 d4       	rcall	.+2128   	; 0xa46 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x24>
     1f6:	2e d4       	rcall	.+2140   	; 0xa54 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x32>
     1f8:	6c d4       	rcall	.+2264   	; 0xad2 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x1d>
     1fa:	39 d4       	rcall	.+2162   	; 0xa6e <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8+0x4c>
     1fc:	3d d4       	rcall	.+2170   	; 0xa78 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x7>
     1fe:	43 d4       	rcall	.+2182   	; 0xa86 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x15>
     200:	47 d4       	rcall	.+2190   	; 0xa90 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x1f>
     202:	4b d4       	rcall	.+2198   	; 0xa9a <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x29>
     204:	51 d4       	rcall	.+2210   	; 0xaa8 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x37>
     206:	55 d4       	rcall	.+2218   	; 0xab2 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x41>
     208:	59 d4       	rcall	.+2226   	; 0xabc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x7>
     20a:	6c d4       	rcall	.+2264   	; 0xae4 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x2f>
     20c:	5f d4       	rcall	.+2238   	; 0xacc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x17>
     20e:	63 d4       	rcall	.+2246   	; 0xad6 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x21>
     210:	67 d4       	rcall	.+2254   	; 0xae0 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6+0x2b>
     212:	96 dd       	rcall	.-1236   	; 0xfffffd40 <__eeprom_end+0xff7efd40>
     214:	83 dd       	rcall	.-1274   	; 0xfffffd1c <__eeprom_end+0xff7efd1c>
     216:	85 dd       	rcall	.-1270   	; 0xfffffd22 <__eeprom_end+0xff7efd22>
     218:	87 dd       	rcall	.-1266   	; 0xfffffd28 <__eeprom_end+0xff7efd28>
     21a:	89 dd       	rcall	.-1262   	; 0xfffffd2e <__eeprom_end+0xff7efd2e>
     21c:	8b dd       	rcall	.-1258   	; 0xfffffd34 <__eeprom_end+0xff7efd34>
     21e:	8d dd       	rcall	.-1254   	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
     220:	8f dd       	rcall	.-1250   	; 0xfffffd40 <__eeprom_end+0xff7efd40>
     222:	f5 de       	rcall	.-534    	; 0xe <__FUSE_REGION_LENGTH__+0xb>
     224:	bf de       	rcall	.-642    	; 0xffffffa4 <__eeprom_end+0xff7effa4>
     226:	c7 de       	rcall	.-626    	; 0xffffffb6 <__eeprom_end+0xff7effb6>
     228:	d3 de       	rcall	.-602    	; 0xffffffd0 <__eeprom_end+0xff7effd0>
     22a:	e0 de       	rcall	.-576    	; 0xffffffec <__eeprom_end+0xff7effec>
     22c:	01 df       	rcall	.-510    	; 0x30 <__FUSE_REGION_LENGTH__+0x2d>
     22e:	0e df       	rcall	.-484    	; 0x4c <__SREG__+0xd>
     230:	07 63       	ori	r16, 0x37	; 55
     232:	42 36       	cpi	r20, 0x62	; 98
     234:	b7 9b       	sbis	0x16, 7	; 22
     236:	d8 a7       	std	Y+40, r29	; 0x28
     238:	1a 39       	cpi	r17, 0x9A	; 154
     23a:	68 56       	subi	r22, 0x68	; 104
     23c:	18 ae       	std	Y+56, r1	; 0x38
     23e:	ba ab       	std	Y+50, r27	; 0x32
     240:	55 8c       	ldd	r5, Z+29	; 0x1d
     242:	1d 3c       	cpi	r17, 0xCD	; 205
     244:	b7 cc       	rjmp	.-1682   	; 0xfffffbb4 <__eeprom_end+0xff7efbb4>
     246:	57 63       	ori	r21, 0x37	; 55
     248:	bd 6d       	ori	r27, 0xDD	; 221
     24a:	ed fd       	.word	0xfded	; ????
     24c:	75 3e       	cpi	r23, 0xE5	; 229
     24e:	f6 17       	cp	r31, r22
     250:	72 31       	cpi	r23, 0x12	; 18
     252:	bf 00       	.word	0x00bf	; ????
     254:	00 00       	nop
     256:	80 3f       	cpi	r24, 0xF0	; 240
     258:	08 00       	.word	0x0008	; ????
     25a:	00 00       	nop
     25c:	be 92       	st	-X, r11
     25e:	24 49       	sbci	r18, 0x94	; 148
     260:	12 3e       	cpi	r17, 0xE2	; 226
     262:	ab aa       	std	Y+51, r10	; 0x33
     264:	aa 2a       	or	r10, r26
     266:	be cd       	rjmp	.-1156   	; 0xfffffde4 <__eeprom_end+0xff7efde4>
     268:	cc cc       	rjmp	.-1640   	; 0xfffffc02 <__eeprom_end+0xff7efc02>
     26a:	4c 3e       	cpi	r20, 0xEC	; 236
     26c:	00 00       	nop
     26e:	00 80       	ld	r0, Z
     270:	be ab       	std	Y+54, r27	; 0x36
     272:	aa aa       	std	Y+50, r10	; 0x32
     274:	aa 3e       	cpi	r26, 0xEA	; 234
     276:	00 00       	nop
     278:	00 00       	nop
     27a:	bf 00       	.word	0x00bf	; ????
     27c:	00 00       	nop
     27e:	80 3f       	cpi	r24, 0xF0	; 240
     280:	00 00       	nop
     282:	00 00       	nop
     284:	00 08       	sbc	r0, r0
     286:	41 78       	andi	r20, 0x81	; 129
     288:	d3 bb       	out	0x13, r29	; 19
     28a:	43 87       	std	Z+11, r20	; 0x0b
     28c:	d1 13       	cpse	r29, r17
     28e:	3d 19       	sub	r19, r13
     290:	0e 3c       	cpi	r16, 0xCE	; 206
     292:	c3 bd       	out	0x23, r28	; 35
     294:	42 82       	std	Z+2, r4	; 0x02
     296:	ad 2b       	or	r26, r29
     298:	3e 68       	ori	r19, 0x8E	; 142
     29a:	ec 82       	std	Y+4, r14	; 0x04
     29c:	76 be       	out	0x36, r7	; 54
     29e:	d9 8f       	std	Y+25, r29	; 0x19
     2a0:	e1 a9       	ldd	r30, Z+49	; 0x31
     2a2:	3e 4c       	sbci	r19, 0xCE	; 206
     2a4:	80 ef       	ldi	r24, 0xF0	; 240
     2a6:	ff be       	out	0x3f, r15	; 63
     2a8:	01 c4       	rjmp	.+2050   	; 0xaac <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7+0x3b>
     2aa:	ff 7f       	andi	r31, 0xFF	; 255
     2ac:	3f 00       	.word	0x003f	; ????
     2ae:	00 00       	nop
	...

000002b2 <__trampolines_end>:
     2b2:	46 6c       	ori	r20, 0xC6	; 198
     2b4:	75 73       	andi	r23, 0x35	; 53
     2b6:	68 5f       	subi	r22, 0xF8	; 248
     2b8:	52 75       	andi	r21, 0x52	; 82
     2ba:	6e 6e       	ori	r22, 0xEE	; 238
     2bc:	69 6e       	ori	r22, 0xE9	; 233
     2be:	67 20       	and	r6, r7
     2c0:	36 3a       	cpi	r19, 0xA6	; 166
     2c2:	20 00       	.word	0x0020	; ????

000002c4 <_ZZ17Flush_ControllingvE3__c_1>:
     2c4:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 33 3a     Flush_Running 3:
     2d4:	20 00                                                .

000002d6 <_ZZ17Flush_ControllingvE3__c_0>:
     2d6:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 32 3a     Flush_Running 2:
     2e6:	20 00                                                .

000002e8 <_ZZ17Flush_ControllingvE3__c>:
     2e8:	46 6c 75 73 68 5f 52 75 6e 6e 69 6e 67 20 30 3a     Flush_Running 0:
     2f8:	20 00                                                .

000002fa <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_42>:
     2fa:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     30a:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000319 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_41>:
     319:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     329:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     339:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     349:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000354 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_40>:
     354:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     364:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     374:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     384:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000038f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_39>:
     38f:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     39f:	69 6c 00                                            il.

000003a2 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_38>:
     3a2:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     3b2:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     3c2:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000003cd <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_37>:
     3cd:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     3dd:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000003eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_36>:
     3eb:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     3fb:	74 61 20 3a 20 00                                   ta : .

00000401 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_35>:
     401:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     411:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     421:	65 20 31 00                                         e 1.

00000425 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_34>:
     425:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     435:	6d 62 65 72 20 00                                   mber .

0000043b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_33>:
     43b:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     44b:	6f 2e 20 00                                         o. .

0000044f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_32>:
     44f:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
     45f:	6e 6f 20 3a 20 00                                   no : .

00000465 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_31>:
     465:	20 00                                                .

00000467 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_30>:
     467:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00000475 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_29>:
     475:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     485:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000494 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_28>:
     494:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4a4:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4b4:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4c4:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

000004cf <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_27>:
     4cf:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     4df:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     4ef:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     4ff:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

0000050a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_26>:
     50a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     51a:	4f 5f 46 45 45 44 42 41 43 4b 20 31 00              O_FEEDBACK 1.

00000527 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_25>:
     527:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     537:	69 6c 00                                            il.

0000053a <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_24>:
     53a:	5f 65 49 52 52 49 47 5f 53 54 41 54 5f 45 55 52     _eIRRIG_STAT_EUR
     54a:	4f 5f 46 45 45 44 42 41 43 4b 20 30 00              O_FEEDBACK 0.

00000557 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_23>:
     557:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     567:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     577:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000582 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_22>:
     582:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
     592:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000005a0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_21>:
     5a0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
     5b0:	74 61 20 3a 20 00                                   ta : .

000005b6 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_20>:
     5b6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     5c6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     5d6:	65 20 31 00                                         e 1.

000005da <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_19>:
     5da:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
     5ea:	6d 62 65 72 20 00                                   mber .

000005f0 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_18>:
     5f0:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
     600:	6f 2e 20 00                                         o. .

00000604 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_17>:
     604:	54 61 72 67 65 74 5f 50 6c 6f 74 5f 4e 75 6d 20     Target_Plot_Num 
     614:	70 6c 6f 74 20 6e 6f 20 3a 20 00                    plot no : .

0000061f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_16>:
     61f:	20 00                                                .

00000621 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_15>:
     621:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

0000062f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_14>:
     62f:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
     63f:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
     64f:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

0000065d <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_13>:
     65d:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     66d:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
     67d:	29 00                                               ).

0000067f <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_12>:
     67f:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     68f:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     69f:	20 6f 6e 6e 29 00                                    onn).

000006a5 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_11>:
     6a5:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     6b5:	61 20 3a 20 00                                      a : .

000006ba <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_10>:
     6ba:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     6ca:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     6da:	65 20 3b 00                                         e ;.

000006de <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_9>:
     6de:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     6ee:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     6fe:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00000709 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_8>:
     709:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
     719:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
     729:	61 64 79 20 6f 6e 00                                ady on.

00000730 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_7>:
     730:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
     740:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00000751 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_6>:
     751:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
     761:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
     771:	20 6f 6e 29 00                                       on).

00000776 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_5>:
     776:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
     786:	61 20 3a 20 00                                      a : .

0000078b <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_4>:
     78b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
     79b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
     7ab:	65 20 00                                            e .

000007ae <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_3>:
     7ae:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
     7be:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
     7ce:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

000007d9 <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_2>:
     7d9:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     7e9:	20 00                                                .

000007eb <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_1>:
     7eb:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

000007fc <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c_0>:
     7fc:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
     80c:	20 00                                                .

0000080e <_ZZ40Valve_Grouping_Handler_For_wireless_PumphhE3__c>:
     80e:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000081f <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_5>:
     81f:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000830 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_4>:
     830:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 20     wireless pump 3 
	...

00000841 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_3>:
     841:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 35 20     wireless pump 5 
	...

00000852 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_2>:
     852:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 34 20     wireless pump 4 
     862:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     872:	23 23 23 23 23 23 23 23 23 23 00                    ##########.

0000087d <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_1>:
     87d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 33 2e     wireless pump 3.
     88d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
     89d:	2e 2e 2e 2c 2c 2c 2c 2c 2c 2c 20 00                 ...,,,,,,, .

000008a9 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c_0>:
     8a9:	53 65 6c 65 63 74 65 64 20 77 69 72 65 6c 65 73     Selected wireles
     8b9:	73 20 70 75 6d 70 20 3e 20 00                       s pump > .

000008c3 <_ZZ35Wireless_Motor_Enable_Disable_CheckvE3__c>:
     8c3:	53 65 6c 65 63 74 65 64 20 76 61 6c 76 65 20 6e     Selected valve n
     8d3:	75 6d 62 65 72 20 77 69 72 65 6c 65 73 73 20 70     umber wireless p
     8e3:	75 6d 70 20 3e 20 00                                ump > .

000008ea <_ZZ16Set_Trigger_TimevE3__c>:
     8ea:	74 72 69 67 67 65 72 20 74 69 6d 65 20 73 65 74     trigger time set
	...

000008fb <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_12>:
     8fb:	63 68 65 63 6b 5f 74 72 75 65 5f 63 6f 6e 64 69     check_true_condi
     90b:	74 69 6f 6e 00                                      tion.

00000910 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_11>:
     910:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     920:	30 2e 34 00                                         0.4.

00000924 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_10>:
     924:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 33 00     sc 1 enter 15.3.

00000934 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_9>:
     934:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 32 00     sc 1 enter 15.2.

00000944 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_8>:
     944:	73 63 20 31 20 65 6e 74 65 72 20 31 35 2e 31 00     sc 1 enter 15.1.

00000954 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_7>:
     954:	73 63 20 31 20 65 6e 74 65 72 20 31 35 00           sc 1 enter 15.

00000962 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_6>:
     962:	73 63 20 31 20 65 6e 74 65 72 20 31 34 00           sc 1 enter 14.

00000970 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_5>:
     970:	73 63 20 31 20 65 6e 74 65 72 20 31 33 00           sc 1 enter 13.

0000097e <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_4>:
     97e:	73 63 20 31 20 65 6e 74 65 72 20 31 32 00           sc 1 enter 12.

0000098c <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_3>:
     98c:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     99c:	30 2e 32 00                                         0.2.

000009a0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_2>:
     9a0:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 2e     sc 1 enter 12.0.
     9b0:	30 2e 31 00                                         0.1.

000009b4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_1>:
     9b4:	73 63 20 31 20 65 6e 74 65 72 20 31 32 2e 30 00     sc 1 enter 12.0.

000009c4 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c_0>:
     9c4:	73 63 20 65 6e 74 65 72 20 32 33 00                 sc enter 23.

000009d0 <_ZZ30Compare_Trigger_And_Reset_TimevE3__c>:
     9d0:	73 63 20 65 6e 74 65 72 20 32 32 00                 sc enter 22.

000009dc <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_9>:
     9dc:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     9ec:	75 70 61 64 74 65 20 35 2e 32 2f 2f 2f 2f 2f 2f     upadte 5.2//////
     9fc:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a0c:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a1c:	2f 2f 2f 2f 2f 00                                   /////.

00000a22 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_8>:
     a22:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     a32:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     a42:	35 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     5.1/////////////
     a52:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     a62:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000a71 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_7>:
     a71:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     a81:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     a91:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     aa1:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ab1:	2f 2f 2f 00                                         ///.

00000ab5 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_6>:
     ab5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     ac5:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     ad5:	34 2e 31 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4.1/////////////
     ae5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     af5:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00        //////////////.

00000b04 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_5>:
     b04:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     b14:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     b24:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     b34:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     b44:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000b51 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_4>:
     b51:	73 63 20 65 6e 74 65 72 20 33 30 2e 31 2e 31 00     sc enter 30.1.1.

00000b61 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_3>:
     b61:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 30 2e     sc enter 11.2.0.
     b71:	32 00                                               2.

00000b73 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_2>:
     b73:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b83:	31 00                                               1.

00000b85 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_1>:
     b85:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 2e 30 2e     sc enter 11.1.0.
     b95:	30 2e 30 00                                         0.0.

00000b99 <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c_0>:
     b99:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     ba9:	75 70 61 64 74 65 20 35 2f 2f 2f 2f 2f 2f 2f 2f     upadte 5////////
     bb9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bc9:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     bd9:	2f 2f 2f 00                                         ///.

00000bdd <_ZZ34Check_Time_For_Schedule_To_TriggerhhE3__c>:
     bdd:	5f 73 53 63 68 65 64 75 6c 65 73 2e 53 74 61 72     _sSchedules.Star
     bed:	74 65 64 5f 44 61 74 65 20 75 70 61 64 74 65 20     ted_Date upadte 
     bfd:	34 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     4///////////////
     c0d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     c1d:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 00              ////////////.

00000c2a <_ZZ18Next_Day_CalculatehhE3__c_1>:
     c2a:	64 69 61 79 73 20 69 6e 20 62 65 74 65 77 65 65     diays in betewee
     c3a:	65 6e 20 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     en .............
     c4a:	3a 20 00                                            : .

00000c4d <_ZZ18Next_Day_CalculatehhE3__c_0>:
     c4d:	43 75 72 72 65 6e 74 20 64 61 74 65 20 32 3a 20     Current date 2: 
	...

00000c5e <_ZZ18Next_Day_CalculatehhE3__c>:
     c5e:	43 75 72 72 65 6e 74 20 64 61 74 65 20 31 3a 20     Current date 1: 
	...

00000c6f <_ZZ22Do_Not_Repeat_SchedulevE3__c_1>:
     c6f:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     c7f:	68 65 64 75 6c 65 20 32 20 23 23 23 23 23 23 23     hedule 2 #######
     c8f:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     c9f:	23 23 23 23 23 23 23 00                             #######.

00000ca7 <_ZZ22Do_Not_Repeat_SchedulevE3__c_0>:
     ca7:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cb7:	68 65 64 75 6c 65 20 31 2e 31 20 23 23 23 23 23     hedule 1.1 #####
     cc7:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     cd7:	23 23 23 23 23 23 23 23 23 00                       #########.

00000ce1 <_ZZ22Do_Not_Repeat_SchedulevE3__c>:
     ce1:	44 6f 5f 4e 6f 74 5f 52 65 70 65 61 74 5f 53 63     Do_Not_Repeat_Sc
     cf1:	68 65 64 75 6c 65 20 31 20 23 23 23 23 23 23 23     hedule 1 #######
     d01:	23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23     ################
     d11:	23 23 23 23 23 23 23 00                             #######.

00000d19 <_ZZ18Edited_In_SchedulevE3__c_21>:
     d19:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     d29:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     d39:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d49:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     d59:	2f 2f 2f 2f 00                                      ////.

00000d5e <_ZZ18Edited_In_SchedulevE3__c_20>:
     d5e:	6d 79 20 31 34 00                                   my 14.

00000d64 <_ZZ18Edited_In_SchedulevE3__c_19>:
     d64:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     d74:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     d84:	61 74 65 64 5f 44 61 74 65 20 34 2f 2f 2f 2f 20     ated_Date 4//// 
     d94:	3a 00                                               :.

00000d96 <_ZZ18Edited_In_SchedulevE3__c_18>:
     d96:	6d 79 20 39 00                                      my 9.

00000d9b <_ZZ18Edited_In_SchedulevE3__c_17>:
     d9b:	6d 79 20 38 00                                      my 8.

00000da0 <_ZZ18Edited_In_SchedulevE3__c_16>:
     da0:	6d 79 20 37 00                                      my 7.

00000da5 <_ZZ18Edited_In_SchedulevE3__c_15>:
     da5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     db5:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     dc5:	61 74 65 64 5f 44 61 74 65 20 31 2f 2f 2f 2f 20     ated_Date 1//// 
     dd5:	3a 00                                               :.

00000dd7 <_ZZ18Edited_In_SchedulevE3__c_14>:
     dd7:	6d 79 20 36 2e 32 00                                my 6.2.

00000dde <_ZZ18Edited_In_SchedulevE3__c_13>:
     dde:	6d 79 20 36 2e 31 00                                my 6.1.

00000de5 <_ZZ18Edited_In_SchedulevE3__c_12>:
     de5:	6d 79 20 36 00                                      my 6.

00000dea <_ZZ18Edited_In_SchedulevE3__c_11>:
     dea:	6d 79 20 35 00                                      my 5.

00000def <_ZZ18Edited_In_SchedulevE3__c_10>:
     def:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
     dff:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
     e0f:	61 74 65 64 5f 44 61 74 65 20 33 2f 2f 2f 2f 20     ated_Date 3//// 
     e1f:	3a 00                                               :.

00000e21 <_ZZ18Edited_In_SchedulevE3__c_9>:
     e21:	6d 79 20 34 00                                      my 4.

00000e26 <_ZZ18Edited_In_SchedulevE3__c_8>:
     e26:	6d 79 20 33 00                                      my 3.

00000e2b <_ZZ18Edited_In_SchedulevE3__c_7>:
     e2b:	42 61 63 6b 20 75 70 20 73 63 68 65 64 75 6c 65     Back up schedule
     e3b:	20 3a 00                                             :.

00000e3e <_ZZ18Edited_In_SchedulevE3__c_6>:
     e3e:	52 75 6e 6e 69 6e 67 20 73 63 68 65 64 75 6c 65     Running schedule
     e4e:	20 3a 00                                             :.

00000e51 <_ZZ18Edited_In_SchedulevE3__c_5>:
     e51:	6d 79 20 32 00                                      my 2.

00000e56 <_ZZ18Edited_In_SchedulevE3__c_4>:
     e56:	6d 79 20 31 00                                      my 1.

00000e5b <_ZZ18Edited_In_SchedulevE3__c_3>:
     e5b:	6d 79 20 30 00                                      my 0.

00000e60 <_ZZ18Edited_In_SchedulevE3__c_2>:
     e60:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
     e70:	75 70 61 64 74 65 20 31 34 2f 2f 2f 2f 2f 2f 2f     upadte 14///////
     e80:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     e90:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
     ea0:	2f 2f 2f 2f 00                                      ////.

00000ea5 <_ZZ18Edited_In_SchedulevE3__c_1>:
     ea5:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 6d 6f 6e     Running list mon
     eb5:	74 68 20 00                                         th .

00000eb9 <_ZZ18Edited_In_SchedulevE3__c_0>:
     eb9:	52 75 6e 6e 69 6e 67 20 6c 69 73 74 20 64 61 74     Running list dat
     ec9:	65 20 00                                            e .

00000ecc <_ZZ18Edited_In_SchedulevE3__c>:
     ecc:	6d 79 20 31 34 00                                   my 14.

00000ed2 <_ZZ17Blower_MonitoringhE3__c_0>:
     ed2:	62 6c 6f 77 65 72 20 67 65 74 73 20 32 2e 31 20     blower gets 2.1 
     ee2:	3a 20 00                                            : .

00000ee5 <_ZZ17Blower_MonitoringhE3__c>:
     ee5:	62 6c 6f 77 65 72 20 67 65 74 73 20 31 2e 31 20     blower gets 1.1 
     ef5:	3a 20 00                                            : .

00000ef8 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c_0>:
     ef8:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 67 65 74 73     tank number gets
     f08:	20 74 6f 20 6f 66 66 20 73 61 66 65 6c 79 00         to off safely.

00000f17 <_ZZ28Turn_Off_All_Tank_For_SafetyvE3__c>:
     f17:	74 61 6e 6b 20 6e 75 6d 62 65 72 20 6c 69 73 74     tank number list
	...

00000f28 <_ZZ17Doser_Pump_On_OffhE3__c_10>:
     f28:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
     f38:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00000f47 <_ZZ17Doser_Pump_On_OffhE3__c_9>:
     f47:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f57:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     f67:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     f77:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00000f82 <_ZZ17Doser_Pump_On_OffhE3__c_8>:
     f82:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     f92:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
     fa2:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
     fb2:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00000fbd <_ZZ17Doser_Pump_On_OffhE3__c_7>:
     fbd:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
     fcd:	69 6c 00                                            il.

00000fd0 <_ZZ17Doser_Pump_On_OffhE3__c_6>:
     fd0:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
     fe0:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
     ff0:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00000ffb <_ZZ17Doser_Pump_On_OffhE3__c_5>:
     ffb:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    100b:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00001019 <_ZZ17Doser_Pump_On_OffhE3__c_4>:
    1019:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    1029:	74 61 20 3a 20 00                                   ta : .

0000102f <_ZZ17Doser_Pump_On_OffhE3__c_3>:
    102f:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    103f:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    104f:	65 20 31 00                                         e 1.

00001053 <_ZZ17Doser_Pump_On_OffhE3__c_2>:
    1053:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    1063:	6d 62 65 72 20 00                                   mber .

00001069 <_ZZ17Doser_Pump_On_OffhE3__c_1>:
    1069:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1079:	6f 2e 20 00                                         o. .

0000107d <_ZZ17Doser_Pump_On_OffhE3__c_0>:
    107d:	20 00                                                .

0000107f <_ZZ17Doser_Pump_On_OffhE3__c>:
    107f:	64 6f 73 65 72 20 70 75 6d 70 20 76 61 6c 76 65     doser pump valve
    108f:	20 6c 69 73 74 20 3a 20 00                           list : .

00001098 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_15>:
    1098:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10a8:	65 64 75 6c 65 20 4f 4e 20 3a 20 00                 edule ON : .

000010b4 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_14>:
    10b4:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10c4:	65 64 75 6c 65 20 4f 66 66 20 31 20 3a 20 00        edule Off 1 : .

000010d3 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_13>:
    10d3:	74 61 6e 6b 20 74 6f 20 73 65 6e 64 20 73 63 68     tank to send sch
    10e3:	65 64 75 6c 65 20 4f 66 66 20 30 20 3a 20 00        edule Off 0 : .

000010f2 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_12>:
    10f2:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    1102:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00001111 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_11>:
    1111:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1121:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    1131:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    1141:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

0000114c <_ZZ22Fertilizer_Tank_On_OffhhE3__c_10>:
    114c:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    115c:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    116c:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    117c:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00001187 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_9>:
    1187:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    1197:	69 6c 00                                            il.

0000119a <_ZZ22Fertilizer_Tank_On_OffhhE3__c_8>:
    119a:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    11aa:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    11ba:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000011c5 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_7>:
    11c5:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    11d5:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

000011e3 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_6>:
    11e3:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    11f3:	74 61 20 3a 20 00                                   ta : .

000011f9 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_5>:
    11f9:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    1209:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    1219:	65 20 31 00                                         e 1.

0000121d <_ZZ22Fertilizer_Tank_On_OffhhE3__c_4>:
    121d:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    122d:	6d 62 65 72 20 00                                   mber .

00001233 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_3>:
    1233:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    1243:	6f 2e 20 00                                         o. .

00001247 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_2>:
    1247:	20 00                                                .

00001249 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_1>:
    1249:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1259:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00001267 <_ZZ22Fertilizer_Tank_On_OffhhE3__c_0>:
    1267:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1277:	6e 75 6d 62 65 72 20 3a 20 00                       number : .

00001281 <_ZZ22Fertilizer_Tank_On_OffhhE3__c>:
    1281:	66 65 72 74 69 6c 69 7a 65 72 20 74 61 6e 6b 20     fertilizer tank 
    1291:	6e 75 6d 62 65 72 20 69 73 20 6c 65 73 73 20 74     number is less t
    12a1:	68 61 6e 20 31 30 30 20 3a 20 00                    han 100 : .

000012ac <_ZZ26Fertilizer_Tank_MonitoringvE3__c_0>:
    12ac:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12bc:	4d 6f 6e 69 74 6f 72 69 6e 67 20 31 20 3a 20 00     Monitoring 1 : .

000012cc <_ZZ26Fertilizer_Tank_MonitoringvE3__c>:
    12cc:	46 65 72 74 69 6c 69 7a 65 72 5f 54 61 6e 6b 5f     Fertilizer_Tank_
    12dc:	4d 6f 6e 69 74 6f 72 69 6e 67 20 3a 20 00           Monitoring : .

000012ea <_ZZ20Schedules_MonitoringvE3__c_37>:
    12ea:	73 63 20 65 6e 74 65 72 20 35 39 2e 31 00           sc enter 59.1.

000012f8 <_ZZ20Schedules_MonitoringvE3__c_36>:
    12f8:	53 63 68 65 64 75 6c 65 72 20 67 65 74 73 20 6f     Scheduler gets o
    1308:	66 66 20 31 31 20 3a 20 00                          ff 11 : .

00001311 <_ZZ20Schedules_MonitoringvE3__c_35>:
    1311:	73 63 20 65 6e 74 65 72 20 36 32 00                 sc enter 62.

0000131d <_ZZ20Schedules_MonitoringvE3__c_34>:
    131d:	73 63 20 65 6e 74 65 72 20 36 31 00                 sc enter 61.

00001329 <_ZZ20Schedules_MonitoringvE3__c_33>:
    1329:	73 63 20 65 6e 74 65 72 20 36 30 00                 sc enter 60.

00001335 <_ZZ20Schedules_MonitoringvE3__c_32>:
    1335:	73 63 20 65 6e 74 65 72 20 35 39 00                 sc enter 59.

00001341 <_ZZ20Schedules_MonitoringvE3__c_31>:
    1341:	73 63 20 65 6e 74 65 72 20 35 38 00                 sc enter 58.

0000134d <_ZZ20Schedules_MonitoringvE3__c_30>:
    134d:	73 63 20 65 6e 74 65 72 20 35 35 00                 sc enter 55.

00001359 <_ZZ20Schedules_MonitoringvE3__c_29>:
    1359:	73 63 20 65 6e 74 65 72 20 35 30 00                 sc enter 50.

00001365 <_ZZ20Schedules_MonitoringvE3__c_28>:
    1365:	73 63 20 65 6e 74 65 72 20 34 39 00                 sc enter 49.

00001371 <_ZZ20Schedules_MonitoringvE3__c_27>:
    1371:	73 63 20 65 6e 74 65 72 20 34 34 00                 sc enter 44.

0000137d <_ZZ20Schedules_MonitoringvE3__c_26>:
    137d:	73 63 20 65 6e 74 65 72 20 33 39 00                 sc enter 39.

00001389 <_ZZ20Schedules_MonitoringvE3__c_25>:
    1389:	73 63 20 65 6e 74 65 72 20 33 38 00                 sc enter 38.

00001395 <_ZZ20Schedules_MonitoringvE3__c_24>:
    1395:	73 63 20 65 6e 74 65 72 20 33 37 00                 sc enter 37.

000013a1 <_ZZ20Schedules_MonitoringvE3__c_23>:
    13a1:	73 63 20 65 6e 74 65 72 20 33 32 00                 sc enter 32.

000013ad <_ZZ20Schedules_MonitoringvE3__c_22>:
    13ad:	73 63 20 65 6e 74 65 72 20 32 37 00                 sc enter 27.

000013b9 <_ZZ20Schedules_MonitoringvE3__c_21>:
    13b9:	73 63 20 65 6e 74 65 72 20 32 36 00                 sc enter 26.

000013c5 <_ZZ20Schedules_MonitoringvE3__c_20>:
    13c5:	73 63 20 65 6e 74 65 72 20 31 37 00                 sc enter 17.

000013d1 <_ZZ20Schedules_MonitoringvE3__c_19>:
    13d1:	73 63 20 65 6e 74 65 72 20 31 36 00                 sc enter 16.

000013dd <_ZZ20Schedules_MonitoringvE3__c_18>:
    13dd:	73 63 20 65 6e 74 65 72 20 37 2e 31 00              sc enter 7.1.

000013ea <_ZZ20Schedules_MonitoringvE3__c_17>:
    13ea:	73 63 20 65 6e 74 65 72 20 36 2e 31 2e 2e 2e 2e     sc enter 6.1....
    13fa:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    140a:	2e 2e 2e 2e 2e 2e 00                                .......

00001411 <_ZZ20Schedules_MonitoringvE3__c_16>:
    1411:	73 63 20 65 6e 74 65 72 20 36 2e 30 2e 2e 2e 2e     sc enter 6.0....
    1421:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    1431:	2e 2e 2e 2e 2e 2e 00                                .......

00001438 <_ZZ20Schedules_MonitoringvE3__c_15>:
    1438:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 2e 31 00     sc enter 11.2.1.

00001448 <_ZZ20Schedules_MonitoringvE3__c_14>:
    1448:	73 63 20 65 6e 74 65 72 20 31 31 2e 32 00           sc enter 11.2.

00001456 <_ZZ20Schedules_MonitoringvE3__c_13>:
    1456:	73 63 20 65 6e 74 65 72 20 31 31 2e 31 00           sc enter 11.1.

00001464 <_ZZ20Schedules_MonitoringvE3__c_12>:
    1464:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1474:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1484:	61 74 65 64 5f 44 61 74 65 20 32 2f 2f 2f 2f 20     ated_Date 2//// 
    1494:	3a 00                                               :.

00001496 <_ZZ20Schedules_MonitoringvE3__c_11>:
    1496:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

000014a2 <_ZZ20Schedules_MonitoringvE3__c_10>:
    14a2:	73 63 20 65 6e 74 65 72 20 31 30 00                 sc enter 10.

000014ae <_ZZ20Schedules_MonitoringvE3__c_9>:
    14ae:	73 63 20 65 6e 74 65 72 20 39 00                    sc enter 9.

000014b9 <_ZZ20Schedules_MonitoringvE3__c_8>:
    14b9:	73 63 20 65 6e 74 65 72 20 38 2e 2e 2e 2e 2e 2e     sc enter 8......
    14c9:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14d9:	2e 2e 2e 2e 2e 00                                   ......

000014df <_ZZ20Schedules_MonitoringvE3__c_7>:
    14df:	73 63 20 65 6e 74 65 72 20 37 2e 2e 2e 2e 2e 2e     sc enter 7......
    14ef:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    14ff:	2e 2e 2e 2e 2e 2e 2e 2e 00                          .........

00001508 <_ZZ20Schedules_MonitoringvE3__c_6>:
    1508:	73 63 20 65 6e 74 65 72 20 36 2e 2e 2e 2e 2e 2e     sc enter 6......
    1518:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001526 <_ZZ20Schedules_MonitoringvE3__c_5>:
    1526:	73 63 20 65 6e 74 65 72 20 35 2e 2e 2e 2e 2e 2e     sc enter 5......
    1536:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00           ..............

00001544 <_ZZ20Schedules_MonitoringvE3__c_4>:
    1544:	73 63 20 65 6e 74 65 72 20 34 2e 2e 2e 2e 2e 2e     sc enter 4......
    1554:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 00              .............

00001561 <_ZZ20Schedules_MonitoringvE3__c_3>:
    1561:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1571:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1581:	61 74 65 64 5f 44 61 74 65 20 30 2f 2f 2f 2f 20     ated_Date 0//// 
    1591:	3a 00                                               :.

00001593 <_ZZ20Schedules_MonitoringvE3__c_2>:
    1593:	73 63 20 65 6e 74 65 72 20 31 31 00                 sc enter 11.

0000159f <_ZZ20Schedules_MonitoringvE3__c_1>:
    159f:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15af:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15bf:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2e 30 2f     ated_Date 0.0.0/
    15cf:	2f 2f 2f 20 3a 00                                   /// :.

000015d5 <_ZZ20Schedules_MonitoringvE3__c_0>:
    15d5:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    15e5:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    15f5:	61 74 65 64 5f 44 61 74 65 20 30 2e 30 2f 2f 2f     ated_Date 0.0///
    1605:	2f 20 3a 00                                         / :.

00001609 <_ZZ20Schedules_MonitoringvE3__c>:
    1609:	5f 73 53 63 68 65 64 75 6c 65 73 2e 46 69 72 73     _sSchedules.Firs
    1619:	74 5f 53 63 68 65 64 75 6c 65 5f 49 72 72 69 67     t_Schedule_Irrig
    1629:	61 74 65 64 5f 44 61 74 65 20 30 2e 2f 2f 2f 2f     ated_Date 0.////
    1639:	20 3a 00                                             :.

0000163c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_65>:
    163c:	64 61 79 20 69 6e 20 62 74 77 20 31 31 2e 31 00     day in btw 11.1.

0000164c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_64>:
    164c:	64 61 79 20 69 6e 20 62 74 77 20 31 30 2e 31 00     day in btw 10.1.

0000165c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_63>:
    165c:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

0000166b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_62>:
    166b:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

0000167a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_61>:
    167a:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

00001689 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_60>:
    1689:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001696 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_59>:
    1696:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016a5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_58>:
    16a5:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

000016b2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_57>:
    16b2:	64 61 79 20 69 6e 20 62 74 77 20 39 2e 31 00        day in btw 9.1.

000016c1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_56>:
    16c1:	64 61 79 20 69 6e 20 62 74 77 20 38 2e 31 00        day in btw 8.1.

000016d0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_55>:
    16d0:	64 61 79 20 69 6e 20 62 74 77 20 37 2e 31 00        day in btw 7.1.

000016df <_ZZ22Day_In_Bet_SchedullinghhhE3__c_54>:
    16df:	64 61 79 20 69 6e 20 62 74 77 20 36 2e 31 00        day in btw 6.1.

000016ee <_ZZ22Day_In_Bet_SchedullinghhhE3__c_53>:
    16ee:	64 61 79 20 69 6e 20 62 74 77 20 35 2e 31 00        day in btw 5.1.

000016fd <_ZZ22Day_In_Bet_SchedullinghhhE3__c_52>:
    16fd:	64 61 79 20 69 6e 20 62 74 77 20 34 2e 31 00        day in btw 4.1.

0000170c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_51>:
    170c:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

0000171b <_ZZ22Day_In_Bet_SchedullinghhhE3__c_50>:
    171b:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

0000172a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_49>:
    172a:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001739 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_48>:
    1739:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001748 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_47>:
    1748:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001757 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_46>:
    1757:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001766 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_45>:
    1766:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001775 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_44>:
    1775:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

00001784 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_43>:
    1784:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

00001793 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_42>:
    1793:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017a2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_41>:
    17a2:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017b1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_40>:
    17b1:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017c0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_39>:
    17c0:	64 61 79 20 69 6e 20 62 74 77 20 33 2e 31 00        day in btw 3.1.

000017cf <_ZZ22Day_In_Bet_SchedullinghhhE3__c_38>:
    17cf:	64 61 79 20 69 6e 20 62 74 77 20 32 2e 31 00        day in btw 2.1.

000017de <_ZZ22Day_In_Bet_SchedullinghhhE3__c_37>:
    17de:	64 61 79 20 69 6e 20 62 74 77 20 31 2e 31 00        day in btw 1.1.

000017ed <_ZZ22Day_In_Bet_SchedullinghhhE3__c_36>:
    17ed:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    17fd:	74 20 31 3a 20 00                                   t 1: .

00001803 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_35>:
    1803:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001811 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_34>:
    1811:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

0000181f <_ZZ22Day_In_Bet_SchedullinghhhE3__c_33>:
    181f:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000182c <_ZZ22Day_In_Bet_SchedullinghhhE3__c_32>:
    182c:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001839 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_31>:
    1839:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001846 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_30>:
    1846:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001853 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_29>:
    1853:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001860 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_28>:
    1860:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

0000186d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_27>:
    186d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

0000187a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_26>:
    187a:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001887 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_25>:
    1887:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001894 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_24>:
    1894:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

000018a1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_23>:
    18a1:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

000018ae <_ZZ22Day_In_Bet_SchedullinghhhE3__c_22>:
    18ae:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

000018bb <_ZZ22Day_In_Bet_SchedullinghhhE3__c_21>:
    18bb:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018c8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_20>:
    18c8:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018d5 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_19>:
    18d5:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018e2 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_18>:
    18e2:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

000018ef <_ZZ22Day_In_Bet_SchedullinghhhE3__c_17>:
    18ef:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

000018fc <_ZZ22Day_In_Bet_SchedullinghhhE3__c_16>:
    18fc:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001909 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_15>:
    1909:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001916 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_14>:
    1916:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001923 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_13>:
    1923:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001930 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_12>:
    1930:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

0000193d <_ZZ22Day_In_Bet_SchedullinghhhE3__c_11>:
    193d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

0000194a <_ZZ22Day_In_Bet_SchedullinghhhE3__c_10>:
    194a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001957 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_9>:
    1957:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001964 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_8>:
    1964:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001971 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_7>:
    1971:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

0000197e <_ZZ22Day_In_Bet_SchedullinghhhE3__c_6>:
    197e:	4e 6f 20 6f 66 20 64 61 79 73 20 69 6e 20 62 65     No of days in be
    198e:	74 20 3a 20 00                                      t : .

00001993 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_5>:
    1993:	64 61 79 20 69 6e 20 62 74 77 20 73 74 61 72 74     day in btw start
    19a3:	65 64 00                                            ed.

000019a6 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_4>:
    19a6:	6c 61 73 74 20 6d 6f 6e 74 68 20 3a 20 00           last month : .

000019b4 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_3>:
    19b4:	6c 61 73 74 20 64 61 74 65 3a 20 00                 last date: .

000019c0 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_2>:
    19c0:	79 65 61 72 20 3a 20 00                             year : .

000019c8 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_1>:
    19c8:	6d 6f 6e 74 68 20 3a 20 00                          month : .

000019d1 <_ZZ22Day_In_Bet_SchedullinghhhE3__c_0>:
    19d1:	64 61 74 65 20 3a 20 00                             date : .

000019d9 <_ZZ22Day_In_Bet_SchedullinghhhE3__c>:
    19d9:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    19e9:	3a 20 00                                            : .

000019ec <_ZZ22Day_In_Bet_SchedullinghE3__c_61>:
    19ec:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

000019fa <_ZZ22Day_In_Bet_SchedullinghE3__c_60>:
    19fa:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001a08 <_ZZ22Day_In_Bet_SchedullinghE3__c_59>:
    1a08:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a15 <_ZZ22Day_In_Bet_SchedullinghE3__c_58>:
    1a15:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a22 <_ZZ22Day_In_Bet_SchedullinghE3__c_57>:
    1a22:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a2f <_ZZ22Day_In_Bet_SchedullinghE3__c_56>:
    1a2f:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a3c <_ZZ22Day_In_Bet_SchedullinghE3__c_55>:
    1a3c:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a49 <_ZZ22Day_In_Bet_SchedullinghE3__c_54>:
    1a49:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a56 <_ZZ22Day_In_Bet_SchedullinghE3__c_53>:
    1a56:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001a63 <_ZZ22Day_In_Bet_SchedullinghE3__c_52>:
    1a63:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001a70 <_ZZ22Day_In_Bet_SchedullinghE3__c_51>:
    1a70:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001a7d <_ZZ22Day_In_Bet_SchedullinghE3__c_50>:
    1a7d:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001a8a <_ZZ22Day_In_Bet_SchedullinghE3__c_49>:
    1a8a:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001a97 <_ZZ22Day_In_Bet_SchedullinghE3__c_48>:
    1a97:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001aa4 <_ZZ22Day_In_Bet_SchedullinghE3__c_47>:
    1aa4:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ab1 <_ZZ22Day_In_Bet_SchedullinghE3__c_46>:
    1ab1:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001abe <_ZZ22Day_In_Bet_SchedullinghE3__c_45>:
    1abe:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001acb <_ZZ22Day_In_Bet_SchedullinghE3__c_44>:
    1acb:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ad8 <_ZZ22Day_In_Bet_SchedullinghE3__c_43>:
    1ad8:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001ae5 <_ZZ22Day_In_Bet_SchedullinghE3__c_42>:
    1ae5:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001af2 <_ZZ22Day_In_Bet_SchedullinghE3__c_41>:
    1af2:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001aff <_ZZ22Day_In_Bet_SchedullinghE3__c_40>:
    1aff:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b0c <_ZZ22Day_In_Bet_SchedullinghE3__c_39>:
    1b0c:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b19 <_ZZ22Day_In_Bet_SchedullinghE3__c_38>:
    1b19:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b26 <_ZZ22Day_In_Bet_SchedullinghE3__c_37>:
    1b26:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b33 <_ZZ22Day_In_Bet_SchedullinghE3__c_36>:
    1b33:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b40 <_ZZ22Day_In_Bet_SchedullinghE3__c_35>:
    1b40:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001b4d <_ZZ22Day_In_Bet_SchedullinghE3__c_34>:
    1b4d:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001b5a <_ZZ22Day_In_Bet_SchedullinghE3__c_33>:
    1b5a:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001b67 <_ZZ22Day_In_Bet_SchedullinghE3__c_32>:
    1b67:	64 61 79 20 69 6e 20 62 74 77 20 31 31 00           day in btw 11.

00001b75 <_ZZ22Day_In_Bet_SchedullinghE3__c_31>:
    1b75:	64 61 79 20 69 6e 20 62 74 77 20 31 30 00           day in btw 10.

00001b83 <_ZZ22Day_In_Bet_SchedullinghE3__c_30>:
    1b83:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001b90 <_ZZ22Day_In_Bet_SchedullinghE3__c_29>:
    1b90:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001b9d <_ZZ22Day_In_Bet_SchedullinghE3__c_28>:
    1b9d:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001baa <_ZZ22Day_In_Bet_SchedullinghE3__c_27>:
    1baa:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bb7 <_ZZ22Day_In_Bet_SchedullinghE3__c_26>:
    1bb7:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bc4 <_ZZ22Day_In_Bet_SchedullinghE3__c_25>:
    1bc4:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001bd1 <_ZZ22Day_In_Bet_SchedullinghE3__c_24>:
    1bd1:	64 61 79 20 69 6e 20 62 74 77 20 39 00              day in btw 9.

00001bde <_ZZ22Day_In_Bet_SchedullinghE3__c_23>:
    1bde:	64 61 79 20 69 6e 20 62 74 77 20 38 00              day in btw 8.

00001beb <_ZZ22Day_In_Bet_SchedullinghE3__c_22>:
    1beb:	64 61 79 20 69 6e 20 62 74 77 20 37 00              day in btw 7.

00001bf8 <_ZZ22Day_In_Bet_SchedullinghE3__c_21>:
    1bf8:	64 61 79 20 69 6e 20 62 74 77 20 36 00              day in btw 6.

00001c05 <_ZZ22Day_In_Bet_SchedullinghE3__c_20>:
    1c05:	64 61 79 20 69 6e 20 62 74 77 20 35 00              day in btw 5.

00001c12 <_ZZ22Day_In_Bet_SchedullinghE3__c_19>:
    1c12:	64 61 79 20 69 6e 20 62 74 77 20 34 00              day in btw 4.

00001c1f <_ZZ22Day_In_Bet_SchedullinghE3__c_18>:
    1c1f:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c2c <_ZZ22Day_In_Bet_SchedullinghE3__c_17>:
    1c2c:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c39 <_ZZ22Day_In_Bet_SchedullinghE3__c_16>:
    1c39:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c46 <_ZZ22Day_In_Bet_SchedullinghE3__c_15>:
    1c46:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c53 <_ZZ22Day_In_Bet_SchedullinghE3__c_14>:
    1c53:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c60 <_ZZ22Day_In_Bet_SchedullinghE3__c_13>:
    1c60:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c6d <_ZZ22Day_In_Bet_SchedullinghE3__c_12>:
    1c6d:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c7a <_ZZ22Day_In_Bet_SchedullinghE3__c_11>:
    1c7a:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001c87 <_ZZ22Day_In_Bet_SchedullinghE3__c_10>:
    1c87:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001c94 <_ZZ22Day_In_Bet_SchedullinghE3__c_9>:
    1c94:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001ca1 <_ZZ22Day_In_Bet_SchedullinghE3__c_8>:
    1ca1:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cae <_ZZ22Day_In_Bet_SchedullinghE3__c_7>:
    1cae:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cbb <_ZZ22Day_In_Bet_SchedullinghE3__c_6>:
    1cbb:	64 61 79 20 69 6e 20 62 74 77 20 33 00              day in btw 3.

00001cc8 <_ZZ22Day_In_Bet_SchedullinghE3__c_5>:
    1cc8:	64 61 79 20 69 6e 20 62 74 77 20 32 00              day in btw 2.

00001cd5 <_ZZ22Day_In_Bet_SchedullinghE3__c_4>:
    1cd5:	64 61 79 20 69 6e 20 62 74 77 20 31 00              day in btw 1.

00001ce2 <_ZZ22Day_In_Bet_SchedullinghE3__c_3>:
    1ce2:	69 72 72 69 67 61 74 69 6e 67 20 6d 6f 6e 74 68     irrigating month
    1cf2:	20 3a 20 00                                          : .

00001cf6 <_ZZ22Day_In_Bet_SchedullinghE3__c_2>:
    1cf6:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d06:	3a 20 00                                            : .

00001d09 <_ZZ22Day_In_Bet_SchedullinghE3__c_1>:
    1d09:	79 65 61 72 20 3a 20 00                             year : .

00001d11 <_ZZ22Day_In_Bet_SchedullinghE3__c_0>:
    1d11:	6d 6f 6e 74 68 20 3a 20 00                          month : .

00001d1a <_ZZ22Day_In_Bet_SchedullinghE3__c>:
    1d1a:	64 61 74 65 20 3a 20 00                             date : .

00001d22 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_2>:
    1d22:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d32:	65 6d 70 5f 4d 6f 6e 74 68 00                       emp_Month.

00001d3c <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_1>:
    1d3c:	73 63 20 5f 73 53 63 68 65 64 75 6c 65 73 2e 54     sc _sSchedules.T
    1d4c:	65 6d 70 5f 64 61 74 65 00                          emp_date.

00001d55 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c_0>:
    1d55:	73 63 20 6d 61 6b 65 20 64 61 74 65 00              sc make date.

00001d62 <_ZZ35Return_Calculated_Previous_Day_DatehE3__c>:
    1d62:	69 72 72 69 67 61 74 69 6e 67 20 64 61 74 65 20     irrigating date 
    1d72:	75 70 61 64 74 65 20 31 2f 2f 2f 2f 2f 2f 2f 2f     upadte 1////////
    1d82:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1d92:	2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f     ////////////////
    1da2:	2f 2f 2f 00                                         ///.

00001da6 <_ZZ25Update_Wireless_Pump_DataPhE3__c>:
    1da6:	57 49 52 45 4c 45 53 53 20 50 55 4d 50 20 44 41     WIRELESS PUMP DA
    1db6:	54 41 20 52 45 43 49 45 56 45 44 00                 TA RECIEVED.

00001dc2 <_ZZ22Update_Euro_Valve_DataPhE3__c_16>:
    1dc2:	41 43 4b 30 20 53 45 4e 44 20 54 4f 20 56 41 4c     ACK0 SEND TO VAL
    1dd2:	56 45 20 00                                         VE .

00001dd6 <_ZZ22Update_Euro_Valve_DataPhE3__c_15>:
    1dd6:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1de6:	4f 57 20 31 20 00                                   OW 1 .

00001dec <_ZZ22Update_Euro_Valve_DataPhE3__c_14>:
    1dec:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1dfc:	30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30     0000000000000000
    1e0c:	30 30 00                                            00.

00001e0f <_ZZ22Update_Euro_Valve_DataPhE3__c_13>:
    1e0f:	66 6f 67 67 65 72 3a 20 76 61 6c 76 65 20 66 61     fogger: valve fa
    1e1f:	75 6c 74 20 6f 63 63 75 72 65 20 70 6c 65 61 73     ult occure pleas
    1e2f:	65 20 74 75 72 6e 20 6f 66 66 20 74 68 65 20 70     e turn off the p
    1e3f:	75 6d 70 00                                         ump.

00001e43 <_ZZ22Update_Euro_Valve_DataPhE3__c_12>:
    1e43:	5f 65 45 55 52 4f 5f 42 41 54 54 45 52 59 5f 4c     _eEURO_BATTERY_L
    1e53:	4f 57 00                                            OW.

00001e56 <_ZZ22Update_Euro_Valve_DataPhE3__c_11>:
    1e56:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    1e66:	31 31 31 31 31 31 31 31 31 31 31 31 31 31 31 31     1111111111111111
    1e76:	31 31 31 31 00                                      1111.

00001e7b <_ZZ22Update_Euro_Valve_DataPhE3__c_10>:
    1e7b:	76 61 6c 76 65 20 66 61 75 6c 74 20 6f 63 63 75     valve fault occu
    1e8b:	72 65 20 70 6c 65 61 73 65 20 74 75 72 6e 20 6f     re please turn o
    1e9b:	66 66 20 74 68 65 20 70 75 6d 70 00                 ff the pump.

00001ea7 <_ZZ22Update_Euro_Valve_DataPhE3__c_9>:
    1ea7:	45 55 52 4f 20 50 41 43 4b 45 54 20 49 53 20 4e     EURO PACKET IS N
    1eb7:	4f 54 20 41 50 50 4c 49 43 41 42 4c 45 00           OT APPLICABLE.

00001ec5 <_ZZ22Update_Euro_Valve_DataPhE3__c_8>:
    1ec5:	45 75 72 6f 20 73 74 61 74 75 73 20 3a 20 00        Euro status : .

00001ed4 <_ZZ22Update_Euro_Valve_DataPhE3__c_7>:
    1ed4:	45 75 72 6f 20 6f 6e 6c 69 6e 65 2f 6f 66 66 6c     Euro online/offl
    1ee4:	69 6e 65 20 3a 20 00                                ine : .

00001eeb <_ZZ22Update_Euro_Valve_DataPhE3__c_6>:
    1eeb:	42 61 74 74 65 72 79 20 6c 65 76 65 6c 20 3a 20     Battery level : 
	...

00001efc <_ZZ22Update_Euro_Valve_DataPhE3__c_5>:
    1efc:	44 61 74 61 20 72 65 63 76 64 20 46 72 6f 6d 20     Data recvd From 
    1f0c:	45 75 72 6f 20 3a 20 00                             Euro : .

00001f14 <_ZZ22Update_Euro_Valve_DataPhE3__c_4>:
    1f14:	64 65 66 61 75 6c 74 20 63 6f 6d 6d 61 6e 64 20     default command 
	...

00001f25 <_ZZ22Update_Euro_Valve_DataPhE3__c_3>:
    1f25:	6c 6f 77 20 62 61 74 74 65 72 79 20 66 61 75 6c     low battery faul
    1f35:	74 00                                               t.

00001f37 <_ZZ22Update_Euro_Valve_DataPhE3__c_2>:
    1f37:	6e 6f 74 20 61 6e 79 20 70 6c 6f 74 20 69 73 20     not any plot is 
    1f47:	69 72 72 69 67 61 74 69 6e 67 00                    irrigating.

00001f52 <_ZZ22Update_Euro_Valve_DataPhE3__c_1>:
    1f52:	5f 65 4e 4f 5f 46 41 55 4c 54 20 00                 _eNO_FAULT .

00001f5e <_ZZ22Update_Euro_Valve_DataPhE3__c_0>:
    1f5e:	5f 65 45 55 52 4f 5f 56 41 4c 56 45 5f 46 41 55     _eEURO_VALVE_FAU
    1f6e:	4c 54 5f 44 41 54 41 00                             LT_DATA.

00001f76 <_ZZ22Update_Euro_Valve_DataPhE3__c>:
    1f76:	45 55 52 4f 20 44 41 54 41 20 52 45 43 49 45 56     EURO DATA RECIEV
    1f86:	45 44 00                                            ED.

00001f89 <_ZZ16Gsm_Gprs_NetworkvE3__c_9>:
    1f89:	41 54 45 30 00                                      ATE0.

00001f8e <_ZZ16Gsm_Gprs_NetworkvE3__c_8>:
    1f8e:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001f9a <_ZZ16Gsm_Gprs_NetworkvE3__c_7>:
    1f9a:	66 61 69 6c 20 74 6f 20 63 6f 6e 6e 65 63 74 20     fail to connect 
    1faa:	67 73 6d 2f 47 50 52 53 20 6e 65 74 77 6f 72 6b     gsm/GPRS network
	...

00001fbb <_ZZ16Gsm_Gprs_NetworkvE3__c_6>:
    1fbb:	53 75 63 63 73 20 43 6f 6e 6e 65 63 74 65 64 20     Succs Connected 
    1fcb:	74 6f 20 47 50 52 53 20 6e 65 74 77 6f 72 6b 00     to GPRS network.

00001fdb <_ZZ16Gsm_Gprs_NetworkvE3__c_5>:
    1fdb:	41 54 45 30 00                                      ATE0.

00001fe0 <_ZZ16Gsm_Gprs_NetworkvE3__c_4>:
    1fe0:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00001fec <_ZZ16Gsm_Gprs_NetworkvE3__c_3>:
    1fec:	46 61 69 6c 20 74 6f 20 43 6f 6e 6e 65 63 74 20     Fail to Connect 
    1ffc:	47 50 52 53 00                                      GPRS.

00002001 <_ZZ16Gsm_Gprs_NetworkvE3__c_2>:
    2001:	43 61 6e 27 74 20 67 65 74 20 6f 70 65 61 72 74     Can't get opeart
    2011:	6f 72 20 4e 61 6d 65 00                             or Name.

00002019 <_ZZ16Gsm_Gprs_NetworkvE3__c_1>:
    2019:	6a 69 6f 00                                         jio.

0000201d <_ZZ16Gsm_Gprs_NetworkvE3__c_0>:
    201d:	56 6f 64 61 66 6f 6e 65 00                          Vodafone.

00002026 <_ZZ16Gsm_Gprs_NetworkvE3__c>:
    2026:	43 6f 6e 6e 65 63 74 65 64 20 74 6f 20 67 73 6d     Connected to gsm
    2036:	2f 47 50 52 53 20 6e 65 74 77 6f 72 6b 20 30 00     /GPRS network 0.

00002046 <_ZZ14Get_Local_TimevE3__c_4>:
    2046:	6d 79 20 79 65 61 72 20 3a 20 00                    my year : .

00002051 <_ZZ14Get_Local_TimevE3__c_3>:
    2051:	6d 79 20 6d 6f 6e 74 68 20 3a 20 00                 my month : .

0000205d <_ZZ14Get_Local_TimevE3__c_2>:
    205d:	6d 79 20 64 61 74 65 20 3a 20 00                    my date : .

00002068 <_ZZ14Get_Local_TimevE3__c_1>:
    2068:	41 54 2b 43 43 4c 4b 3f 00                          AT+CCLK?.

00002071 <_ZZ14Get_Local_TimevE3__c_0>:
    2071:	41 54 2b 43 4e 54 50 00                             AT+CNTP.

00002079 <_ZZ14Get_Local_TimevE3__c>:
    2079:	41 54 2b 43 4e 54 50 3d 22 69 6e 2e 70 6f 6f 6c     AT+CNTP="in.pool
    2089:	2e 6e 74 70 2e 6f 72 67 22 2c 32 32 00              .ntp.org",22.

00002096 <_ZZ16Display_Update_1vE3__c_25>:
    2096:	20 20 50 55 4d 50 20 4f 46 46 20 20 00                PUMP OFF  .

000020a3 <_ZZ16Display_Update_1vE3__c_24>:
    20a3:	20 20 20 50 55 4d 50 20 4f 4e 20 20 00                 PUMP ON  .

000020b0 <_ZZ16Display_Update_1vE3__c_23>:
    20b0:	20 20 20 20 20 20 49 52 52 49 47 41 54 45 44 20           IRRIGATED 
    20c0:	20 20 20 20 00                                          .

000020c5 <_ZZ16Display_Update_1vE3__c_22>:
    20c5:	20 4e 4f 20 50 4c 4f 54 20 49 53 20 47 45 54 54      NO PLOT IS GETT
    20d5:	49 4e 47 20 00                                      ING .

000020da <_ZZ16Display_Update_1vE3__c_21>:
    20da:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    20ea:	20 20 20 20 00                                          .

000020ef <_ZZ16Display_Update_1vE3__c_20>:
    20ef:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    20ff:	20 20 20 20 00                                          .

00002104 <_ZZ16Display_Update_1vE3__c_19>:
    2104:	20 4e 4f 20 50 4c 4f 54 20 41 44 44 45 44 20 59      NO PLOT ADDED Y
    2114:	45 54 21 20 00                                      ET! .

00002119 <_ZZ16Display_Update_1vE3__c_18>:
    2119:	20 20 20 20 20 4d 41 4e 55 41 4c 20 4d 4f 44 45          MANUAL MODE
    2129:	20 20 20 20 00                                          .

0000212e <_ZZ16Display_Update_1vE3__c_17>:
    212e:	20 20 20 20 20 54 49 4d 45 52 20 4d 4f 44 45 20          TIMER MODE 
    213e:	20 20 20 20 00                                          .

00002143 <_ZZ16Display_Update_1vE3__c_16>:
    2143:	20 20 20 53 43 48 45 44 55 4c 45 52 20 4d 4f 44        SCHEDULER MOD
    2153:	45 20 20 20 00                                      E   .

00002158 <_ZZ16Display_Update_1vE3__c_15>:
    2158:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2168:	20 20 20 20 00                                          .

0000216d <_ZZ16Display_Update_1vE3__c_14>:
    216d:	44 41 54 41 20 49 4e 49 54 49 41 4c 49 53 49 4e     DATA INITIALISIN
    217d:	47 00                                               G.

0000217f <_ZZ16Display_Update_1vE3__c_13>:
    217f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    218f:	20 20 20 20 00                                          .

00002194 <_ZZ16Display_Update_1vE3__c_12>:
    2194:	20 20 20 20 20 20 54 48 41 4e 4b 20 59 4f 55 20           THANK YOU 
    21a4:	20 20 20 20 00                                          .

000021a9 <_ZZ16Display_Update_1vE3__c_11>:
    21a9:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21b9:	20 20 20 20 00                                          .

000021be <_ZZ16Display_Update_1vE3__c_10>:
    21be:	43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 53 45 52     CONNECTED TO SER
    21ce:	56 45 52 20 00                                      VER .

000021d3 <_ZZ16Display_Update_1vE3__c_9>:
    21d3:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    21e3:	20 20 20 20 00                                          .

000021e8 <_ZZ16Display_Update_1vE3__c_8>:
    21e8:	20 20 4e 45 54 57 4f 52 4b 20 53 45 4c 45 43 54       NETWORK SELECT
    21f8:	45 44 20 20 00                                      ED  .

000021fd <_ZZ16Display_Update_1vE3__c_7>:
    21fd:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    220d:	20 20 20 20 00                                          .

00002212 <_ZZ16Display_Update_1vE3__c_6>:
    2212:	53 45 41 52 43 48 49 4e 47 20 46 4f 52 20 4e 45     SEARCHING FOR NE
    2222:	54 2e 2e 2e 00                                      T....

00002227 <_ZZ16Display_Update_1vE3__c_5>:
    2227:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2237:	20 20 20 20 00                                          .

0000223c <_ZZ16Display_Update_1vE3__c_4>:
    223c:	52 45 47 49 53 54 45 52 45 44 20 54 4f 20 53 45     REGISTERED TO SE
    224c:	52 56 45 52 00                                      RVER.

00002251 <_ZZ16Display_Update_1vE3__c_3>:
    2251:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    2261:	20 20 20 20 00                                          .

00002266 <_ZZ16Display_Update_1vE3__c_2>:
    2266:	20 20 20 20 20 52 45 47 49 53 54 45 52 49 4e 47          REGISTERING
    2276:	20 20 20 20 00                                          .

0000227b <_ZZ16Display_Update_1vE3__c_1>:
    227b:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    228b:	20 20 20 20 00                                          .

00002290 <_ZZ16Display_Update_1vE3__c_0>:
    2290:	43 4f 4e 4e 45 43 54 49 4e 47 20 54 4f 20 53 45     CONNECTING TO SE
    22a0:	52 56 45 52 00                                      RVER.

000022a5 <_ZZ16Display_Update_1vE3__c>:
    22a5:	20 20 20 20 20 50 4c 45 41 53 45 20 57 41 49 54          PLEASE WAIT
    22b5:	20 20 20 20 00                                          .

000022ba <_ZZ21Subscribed_data_checkvE3__c_0>:
    22ba:	54 4f 50 49 43 20 4d 41 54 43 48 00                 TOPIC MATCH.

000022c6 <_ZZ21Subscribed_data_checkvE3__c>:
    22c6:	65 6e 74 65 72 20 31 00                             enter 1.

000022ce <_ZZ9MQTT_LoopvE3__c_1>:
    22ce:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000022d8 <_ZZ9MQTT_LoopvE3__c_0>:
    22d8:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000022e3 <_ZZ9MQTT_LoopvE3__c>:
    22e3:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000022ed <_ZZ17Is_MQTT_ConnectedvE3__c_1>:
    22ed:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    22fd:	74 6f 20 6d 71 74 74 00                             to mqtt.

00002305 <_ZZ17Is_MQTT_ConnectedvE3__c_0>:
    2305:	63 68 65 63 6b 20 43 6f 6e 6e 65 63 74 65 64 20     check Connected 
    2315:	74 6f 20 6d 71 74 74 00                             to mqtt.

0000231d <_ZZ17Is_MQTT_ConnectedvE3__c>:
    231d:	41 54 2b 43 4d 51 54 54 43 4f 4e 4e 45 43 54 3f     AT+CMQTTCONNECT?
	...

0000232e <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_1>:
    232e:	41 54 2b 43 4d 51 54 54 53 54 41 52 54 00           AT+CMQTTSTART.

0000233c <_ZZ12MQTT_ConnectPKcS0_S0_E3__c_0>:
    233c:	41 54 2b 43 4d 51 54 54 52 45 4c 3d 30 00           AT+CMQTTREL=0.

0000234a <_ZZ12MQTT_ConnectPKcS0_S0_E3__c>:
    234a:	41 54 2b 43 4d 51 54 54 44 49 53 43 3d 30 2c 31     AT+CMQTTDISC=0,1
    235a:	32 30 00                                            20.

0000235d <_ZZ14MQTT_SUBSCRIBEPcE3__c>:
    235d:	53 55 42 20 53 55 43 43 45 53 53 00                 SUB SUCCESS.

00002369 <_ZZ12MQTT_PublishPhS_E3__c>:
    2369:	41 54 2b 43 46 55 4e 3d 31 00                       AT+CFUN=1.

00002373 <_ZZ12Gprs_ConnectPcE3__c>:
    2373:	21 21 21 21 21 53 55 43 43 45 53 53 46 55 4c 4c     !!!!!SUCCESSFULL
    2383:	59 20 43 4f 4e 4e 45 43 54 45 44 20 54 4f 20 47     Y CONNECTED TO G
    2393:	50 52 53 21 21 21 21 21 00                          PRS!!!!!.

0000239c <_ZZ17Get_Operator_NamePcE3__c>:
    239c:	41 54 2b 43 53 50 4e 3f 00                          AT+CSPN?.

000023a5 <_ZZ20Check_Gsm_ConnectionvE3__c_7>:
    23a5:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023af <_ZZ20Check_Gsm_ConnectionvE3__c_6>:
    23af:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023ba <_ZZ20Check_Gsm_ConnectionvE3__c_5>:
    23ba:	41 54 2b 43 47 52 45 47 3f 00                       AT+CGREG?.

000023c4 <_ZZ20Check_Gsm_ConnectionvE3__c_4>:
    23c4:	41 54 2b 43 47 52 45 47 3d 31 00                    AT+CGREG=1.

000023cf <_ZZ20Check_Gsm_ConnectionvE3__c_3>:
    23cf:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023d8 <_ZZ20Check_Gsm_ConnectionvE3__c_2>:
    23d8:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

000023e2 <_ZZ20Check_Gsm_ConnectionvE3__c_1>:
    23e2:	41 54 2b 43 52 45 47 3f 00                          AT+CREG?.

000023eb <_ZZ20Check_Gsm_ConnectionvE3__c_0>:
    23eb:	41 54 2b 43 52 45 47 3d 31 00                       AT+CREG=1.

000023f5 <_ZZ20Check_Gsm_ConnectionvE3__c>:
    23f5:	41 54 2b 43 4e 4d 50 3d 33 38 00                    AT+CNMP=38.

00002400 <_ZZ8Gsm_InitvE3__c_0>:
    2400:	41 54 2b 43 4d 45 45 3d 30 00                       AT+CMEE=0.

0000240a <_ZZ8Gsm_InitvE3__c>:
    240a:	41 54 00                                            AT.

0000240d <_ZZ18_kGSM_SIG_STRENGTHvE3__c_0>:
    240d:	43 53 51 20 52 45 54 45 55 52 4e 20 30 20 00        CSQ RETEURN 0 .

0000241c <_ZZ18_kGSM_SIG_STRENGTHvE3__c>:
    241c:	41 54 2b 43 53 51 00                                AT+CSQ.

00002423 <_ZZ14Lora_Data_SendhE3__c_1>:
    2423:	53 45 4e 54 20 73 75 63 63 00                       SENT succ.

0000242d <_ZZ14Lora_Data_SendhE3__c_0>:
    242d:	53 45 4e 54 20 57 41 49 54 49 4e 47 00              SENT WAITING.

0000243a <_ZZ14Lora_Data_SendhE3__c>:
    243a:	6c 6f 72 61 20 64 61 74 61 20 73 65 6e 64 20 6c     lora data send l
    244a:	65 6e 20 3a 20 00                                   en : .

00002450 <_ZZ19Initialise_HardwarevE3__c_5>:
    2450:	47 53 4d 20 4e 4f 54 20 49 4e 49 54 49 41 54 45     GSM NOT INITIATE
    2460:	44 00                                               D.

00002462 <_ZZ19Initialise_HardwarevE3__c_4>:
    2462:	47 53 4d 20 49 4e 49 54 49 41 54 45 44 00           GSM INITIATED.

00002470 <_ZZ19Initialise_HardwarevE3__c_3>:
    2470:	4c 4f 52 41 20 4e 4f 54 20 49 4e 49 54 49 41 54     LORA NOT INITIAT
    2480:	45 44 00                                            ED.

00002483 <_ZZ19Initialise_HardwarevE3__c_2>:
    2483:	4c 4f 52 41 20 49 4e 49 54 49 41 54 45 44 00        LORA INITIATED.

00002492 <_ZZ19Initialise_HardwarevE3__c_1>:
    2492:	53 45 4e 53 45 20 49 54 20 4f 55 54 00              SENSE IT OUT.

0000249f <_ZZ19Initialise_HardwarevE3__c_0>:
    249f:	20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20                     
    24af:	20 20 20 20 00                                          .

000024b4 <_ZZ19Initialise_HardwarevE3__c>:
    24b4:	20 20 46 56 20 3a 20 53 4b 55 33 5f 31 2e 30 2e       FV : SKU3_1.0.
    24c4:	30 2e 33 20 00                                      0.3 .

000024c9 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_2>:
    24c9:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

000024d5 <_ZZ21Exra_Plot_Data_EEPROMhE3__c_1>:
    24d5:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    24e5:	72 2e 3a 20 00                                      r.: .

000024ea <_ZZ21Exra_Plot_Data_EEPROMhE3__c_0>:
    24ea:	64 61 74 61 20 73 61 76 69 6e 67 20 69 6e 20 65     data saving in e
    24fa:	65 70 72 6f 6d 20 00                                eprom .

00002501 <_ZZ21Exra_Plot_Data_EEPROMhE3__c>:
    2501:	65 78 74 72 61 20 70 6c 6f 74 20 3a 20 00           extra plot : .

0000250f <_ZZ18Local_Time_SettingvE3__c_2>:
    250f:	63 68 65 63 6b 20 73 69 6d 20 6d 65 00              check sim me.

0000251c <_ZZ18Local_Time_SettingvE3__c_1>:
    251c:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002525 <_ZZ18Local_Time_SettingvE3__c_0>:
    2525:	41 54 45 30 00                                      ATE0.

0000252a <_ZZ18Local_Time_SettingvE3__c>:
    252a:	41 54 00                                            AT.

0000252d <_ZZ9Check_SimcE3__c_1>:
    252d:	41 54 2b 43 50 49 4e 3f 00                          AT+CPIN?.

00002536 <_ZZ9Check_SimcE3__c_0>:
    2536:	41 54 45 30 00                                      ATE0.

0000253b <_ZZ9Check_SimcE3__c>:
    253b:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00002547 <_ZZ11Check_PhasevE3__c_0>:
    2547:	70 68 61 73 65 20 69 73 20 74 68 65 72 65 20 00     phase is there .

00002557 <_ZZ11Check_PhasevE3__c>:
    2557:	70 68 61 73 65 20 69 73 20 6e 6f 74 20 74 68 65     phase is not the
    2567:	72 65 20 00                                         re .

0000256b <_ZZ14Faults_HandlervE3__c_5>:
    256b:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 00     Pump Line Fault.

0000257b <_ZZ14Faults_HandlervE3__c_4>:
    257b:	50 75 6d 70 20 4c 69 6e 65 20 46 61 75 6c 74 20     Pump Line Fault 
	...

0000258c <_ZZ14Faults_HandlervE3__c_3>:
    258c:	50 75 6d 70 20 44 72 79 20 52 75 6e 00              Pump Dry Run.

00002599 <_ZZ14Faults_HandlervE3__c_2>:
    2599:	50 75 6d 70 20 44 72 79 20 52 75 6e 20 00           Pump Dry Run .

000025a7 <_ZZ14Faults_HandlervE3__c_1>:
    25a7:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 00     Pump Overlaoded.

000025b7 <_ZZ14Faults_HandlervE3__c_0>:
    25b7:	50 75 6d 70 20 4f 76 65 72 6c 61 6f 64 65 64 20     Pump Overlaoded 
	...

000025c8 <_ZZ14Faults_HandlervE3__c>:
    25c8:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 61     Wireless Pump Fa
    25d8:	75 6c 74 20 6f 63 75 75 72 65 2e 2e 2e 2e 2e 2e     ult ocuure......
    25e8:	2e 2e 2e 2e 2e 2e 20 00                             ...... .

000025f0 <_ZZ19Calibration_Of_PumpvE3__c>:
    25f0:	50 75 6d 70 20 43 61 6c 69 62 72 61 74 69 6f 6e     Pump Calibration
    2600:	20 69 73 20 64 6f 6e 65 00                           is done.

00002609 <_ZZ11Read_EEPROMvE3__c_2>:
    2609:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00002615 <_ZZ11Read_EEPROMvE3__c_1>:
    2615:	45 78 74 72 61 20 6e 6f 74 20 50 6c 6f 74 20 52     Extra not Plot R
    2625:	75 6e 20 54 69 6d 65 72 20 3a 20 00                 un Timer : .

00002631 <_ZZ11Read_EEPROMvE3__c_0>:
    2631:	45 78 74 72 61 20 50 6c 6f 74 20 52 75 6e 20 54     Extra Plot Run T
    2641:	69 6d 65 72 20 3a 20 00                             imer : .

00002649 <_ZZ11Read_EEPROMvE3__c>:
    2649:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    2659:	72 20 3a 20 00                                      r : .

0000265e <_ZZ20Param_InitializationvE3__c_3>:
    265e:	47 53 4d 20 41 4e 44 20 4d 51 54 54 20 57 49 4c     GSM AND MQTT WIL
    266e:	4c 20 4e 4f 54 20 57 4f 52 4b 00                    L NOT WORK.

00002679 <_ZZ20Param_InitializationvE3__c_2>:
    2679:	4e 4f 54 20 52 45 47 49 53 54 45 52 20 41 4e 44     NOT REGISTER AND
    2689:	20 41 4c 53 4f 20 4d 4f 44 55 4c 45 20 4e 4f 54      ALSO MODULE NOT
    2699:	20 57 4f 52 4b 2c 20 50 4c 45 41 53 45 20 43 48      WORK, PLEASE CH
    26a9:	45 43 4b 20 54 48 45 20 4d 4f 44 55 4c 45 20 41     ECK THE MODULE A
    26b9:	4e 44 20 52 45 53 54 41 52 54 20 54 48 45 20 44     ND RESTART THE D
    26c9:	45 56 49 43 45 00                                   EVICE.

000026cf <_ZZ20Param_InitializationvE3__c_1>:
    26cf:	50 6c 65 61 73 65 20 49 6e 73 65 72 74 20 53 69     Please Insert Si
    26df:	6d 20 43 61 72 64 00                                m Card.

000026e6 <_ZZ20Param_InitializationvE3__c_0>:
    26e6:	52 75 62 6c 65 20 69 73 20 6e 6f 74 20 52 65 67     Ruble is not Reg
    26f6:	69 73 74 65 72 65 64 20 54 6f 20 53 65 76 65 72     istered To Sever
	...

00002707 <_ZZ20Param_InitializationvE3__c>:
    2707:	52 75 62 6c 65 20 69 73 20 61 6c 72 65 61 64 79     Ruble is already
    2717:	20 52 65 67 69 73 74 65 72 65 64 20 54 6f 20 53      Registered To S
    2727:	65 76 65 72 00                                      ever.

0000272c <_ZZ21Subscribe_MQTT_TopicsvE3__c>:
    272c:	5f 73 53 75 62 73 63 72 69 62 65 5f 54 6f 70 69     _sSubscribe_Topi
    273c:	63 2e 52 75 62 6c 65 5f 45 75 72 6f 5f 56 61 6c     c.Ruble_Euro_Val
    274c:	76 65 5f 53 65 74 20 66 61 69 6c 00                 ve_Set fail.

00002758 <_ZZ14Ping_to_ServervE3__c_13>:
    2758:	41 54 45 30 00                                      ATE0.

0000275d <_ZZ14Ping_to_ServervE3__c_12>:
    275d:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00002769 <_ZZ14Ping_to_ServervE3__c_11>:
    2769:	46 61 69 6c 20 54 6f 20 63 6f 6e 6e 65 63 74 20     Fail To connect 
    2779:	74 68 65 20 73 65 72 76 65 72 00                    the server.

00002784 <_ZZ14Ping_to_ServervE3__c_10>:
    2784:	61 6c 6c 20 74 6f 70 69 63 20 6e 6f 74 20 73 75     all topic not su
    2794:	62 73 63 72 69 62 65 64 00                          bscribed.

0000279d <_ZZ14Ping_to_ServervE3__c_9>:
    279d:	61 6c 6c 20 74 6f 70 69 63 20 73 75 62 73 63 72     all topic subscr
    27ad:	69 62 65 64 00                                      ibed.

000027b2 <_ZZ14Ping_to_ServervE3__c_8>:
    27b2:	43 6f 6e 6e 65 63 74 65 64 20 54 6f 20 73 65 72     Connected To ser
    27c2:	76 65 72 00                                         ver.

000027c6 <_ZZ14Ping_to_ServervE3__c_7>:
    27c6:	54 72 79 20 74 6f 20 63 6f 6e 6e 65 63 74 20 74     Try to connect t
    27d6:	68 65 20 73 65 72 76 65 72 00                       he server.

000027e0 <_ZZ14Ping_to_ServervE3__c_6>:
    27e0:	41 54 2b 51 4d 54 43 4c 4f 53 45 20 4e 4f 54 20     AT+QMTCLOSE NOT 
    27f0:	43 4c 4f 53 45 20 00                                CLOSE .

000027f7 <_ZZ14Ping_to_ServervE3__c_5>:
    27f7:	41 54 2b 51 4d 54 43 4c 4f 53 45 00                 AT+QMTCLOSE.

00002803 <_ZZ14Ping_to_ServervE3__c_4>:
    2803:	41 54 2b 51 4d 54 43 4c 4f 53 45 3d 30 00           AT+QMTCLOSE=0.

00002811 <_ZZ14Ping_to_ServervE3__c_3>:
    2811:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

00002822 <_ZZ14Ping_to_ServervE3__c_2>:
    2822:	53 69 6d 20 69 73 20 6e 6f 74 20 74 68 65 72 65     Sim is not there
	...

00002833 <_ZZ14Ping_to_ServervE3__c_1>:
    2833:	41 54 45 30 00                                      ATE0.

00002838 <_ZZ14Ping_to_ServervE3__c_0>:
    2838:	41 54 45 30 00                                      ATE0.

0000283d <_ZZ14Ping_to_ServervE3__c>:
    283d:	41 54 2b 43 46 55 4e 3d 31 2c 31 00                 AT+CFUN=1,1.

00002849 <_ZZ11Init_BrokervE3__c_4>:
    2849:	52 75 62 6c 65 20 63 6f 6e 74 72 6f 6c 6c 65 72     Ruble controller
    2859:	20 69 73 20 72 65 67 69 73 74 65 72 65 64 00         is registered.

00002868 <_ZZ11Init_BrokervE3__c_3>:
    2868:	77 61 69 74 20 72 65 67 69 73 74 65 72 69 6e 67     wait registering
    2878:	20 73 74 61 74 75 73 20 3a 20 00                     status : .

00002883 <_ZZ11Init_BrokervE3__c_2>:
    2883:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    2893:	76 65 72 00                                         ver.

00002897 <_ZZ11Init_BrokervE3__c_1>:
    2897:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 00        Ping to server.

000028a6 <_ZZ11Init_BrokervE3__c_0>:
    28a6:	46 61 69 6c 20 74 6f 20 50 69 6e 67 20 73 65 72     Fail to Ping ser
    28b6:	76 65 72 20 30 00                                   ver 0.

000028bc <_ZZ11Init_BrokervE3__c>:
    28bc:	50 69 6e 67 20 74 6f 20 73 65 72 76 65 72 20 30     Ping to server 0
	...

000028cd <_ZZ4mainE3__c_0>:
    28cd:	44 61 79 73 20 69 6e 20 62 65 74 77 65 65 6e 20     Days in between 
    28dd:	3a 20 00                                            : .

000028e0 <_ZZ4mainE3__c>:
    28e0:	4e 4f 4d 49 4e 41 4c 20 43 55 52 52 45 4e 54 20     NOMINAL CURRENT 
    28f0:	3a 20 00                                            : .

000028f3 <_ZZ24Pump_Status_List_MonitorvE3__c>:
    28f3:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2903:	72 20 35 35 35 35 35 35 35 35 35 35 35 35 35 35     r 55555555555555
    2913:	35 35 35 35 35 35 35 35 00                          55555555.

0000291c <_ZZ24Plot_Status_List_MonitorvE3__c_11>:
    291c:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    292c:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

0000293b <_ZZ24Plot_Status_List_MonitorvE3__c_10>:
    293b:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    294b:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    295b:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    296b:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002976 <_ZZ24Plot_Status_List_MonitorvE3__c_9>:
    2976:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2986:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2996:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    29a6:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

000029b1 <_ZZ24Plot_Status_List_MonitorvE3__c_8>:
    29b1:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    29c1:	69 6c 00                                            il.

000029c4 <_ZZ24Plot_Status_List_MonitorvE3__c_7>:
    29c4:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    29d4:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    29e4:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

000029ef <_ZZ24Plot_Status_List_MonitorvE3__c_6>:
    29ef:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    29ff:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002a0d <_ZZ24Plot_Status_List_MonitorvE3__c_5>:
    2a0d:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2a1d:	74 61 20 3a 20 00                                   ta : .

00002a23 <_ZZ24Plot_Status_List_MonitorvE3__c_4>:
    2a23:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2a33:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2a43:	65 20 31 00                                         e 1.

00002a47 <_ZZ24Plot_Status_List_MonitorvE3__c_3>:
    2a47:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2a57:	6d 62 65 72 20 00                                   mber .

00002a5d <_ZZ24Plot_Status_List_MonitorvE3__c_2>:
    2a5d:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2a6d:	6f 2e 20 00                                         o. .

00002a71 <_ZZ24Plot_Status_List_MonitorvE3__c_1>:
    2a71:	6c 61 73 74 20 70 6c 6f 74 20 6e 6f 20 3a 20 00     last plot no : .

00002a81 <_ZZ24Plot_Status_List_MonitorvE3__c_0>:
    2a81:	20 00                                                .

00002a83 <_ZZ24Plot_Status_List_MonitorvE3__c>:
    2a83:	6c 61 73 74 20 70 6c 6f 74 20 76 76 61 6c 76 65     last plot vvalve
    2a93:	20 6c 69 73 74 20 3a 20 00                           list : .

00002a9c <_ZZ20Wireless_Pump_On_OffhhE3__c_21>:
    2a9c:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2aac:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002aba <_ZZ20Wireless_Pump_On_OffhhE3__c_20>:
    2aba:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2aca:	20 64 61 74 61 20 3a 20 00                           data : .

00002ad3 <_ZZ20Wireless_Pump_On_OffhhE3__c_19>:
    2ad3:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2ae3:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2af3:	50 75 6d 70 20 31 00                                Pump 1.

00002afa <_ZZ20Wireless_Pump_On_OffhhE3__c_18>:
    2afa:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2b0a:	2e 20 00                                            . .

00002b0d <_ZZ20Wireless_Pump_On_OffhhE3__c_14>:
    2b0d:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b1d:	61 69 6c 61 62 6c 65 20 37 3a 20 00                 ailable 7: .

00002b29 <_ZZ20Wireless_Pump_On_OffhhE3__c_13>:
    2b29:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2b39:	61 69 6c 61 62 6c 65 20 36 3a 20 00                 ailable 6: .

00002b45 <_ZZ20Wireless_Pump_On_OffhhE3__c_12>:
    2b45:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2b55:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002b61 <_ZZ20Wireless_Pump_On_OffhhE3__c_11>:
    2b61:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2b71:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002b7f <_ZZ20Wireless_Pump_On_OffhhE3__c_10>:
    2b7f:	5f 65 50 55 4d 50 5f 4f 46 46 00                    _ePUMP_OFF.

00002b8a <_ZZ20Wireless_Pump_On_OffhhE3__c_9>:
    2b8a:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 46 65     Wireless Pump Fe
    2b9a:	65 64 62 61 63 6b 20 66 61 69 6c 00                 edback fail.

00002ba6 <_ZZ20Wireless_Pump_On_OffhhE3__c_8>:
    2ba6:	5f 65 50 55 4d 50 5f 4f 52 5f 45 4c 45 43 54 52     _ePUMP_OR_ELECTR
    2bb6:	49 43 49 54 59 5f 52 45 4c 41 54 45 44 00           ICITY_RELATED.

00002bc4 <_ZZ20Wireless_Pump_On_OffhhE3__c_7>:
    2bc4:	5f 65 50 55 4d 50 5f 4f 4e 00                       _ePUMP_ON.

00002bce <_ZZ20Wireless_Pump_On_OffhhE3__c_6>:
    2bce:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2bde:	61 69 6c 61 62 6c 65 20 34 3a 20 00                 ailable 4: .

00002bea <_ZZ20Wireless_Pump_On_OffhhE3__c_5>:
    2bea:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2bfa:	61 69 6c 61 62 6c 65 20 34 2e 31 3a 20 00           ailable 4.1: .

00002c08 <_ZZ20Wireless_Pump_On_OffhhE3__c_4>:
    2c08:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2c18:	69 74 68 20 70 75 6d 70 20 77 68 69 63 68 20 69     ith pump which i
    2c28:	73 20 72 65 70 6c 69 65 64 20 34 00                 s replied 4.

00002c34 <_ZZ20Wireless_Pump_On_OffhhE3__c_3>:
    2c34:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 76 61     wireless pump va
    2c44:	6c 76 65 20 49 44 20 77 68 69 63 68 20 69 73 20     lve ID which is 
    2c54:	53 65 6e 74 20 3a 00                                Sent :.

00002c5b <_ZZ20Wireless_Pump_On_OffhhE3__c_2>:
    2c5b:	57 69 72 65 6c 65 73 73 20 50 75 6d 70 20 72 78     Wireless Pump rx
    2c6b:	20 64 61 74 61 20 3a 20 00                           data : .

00002c74 <_ZZ20Wireless_Pump_On_OffhhE3__c_1>:
    2c74:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 61 76     wireless pump av
    2c84:	61 69 6c 61 62 6c 65 20 31 3a 20 00                 ailable 1: .

00002c90 <_ZZ20Wireless_Pump_On_OffhhE3__c_0>:
    2c90:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2ca0:	61 6e 64 20 74 6f 20 77 69 72 65 6c 65 73 73 20     and to wireless 
    2cb0:	50 75 6d 70 20 31 00                                Pump 1.

00002cb7 <_ZZ20Wireless_Pump_On_OffhhE3__c>:
    2cb7:	57 69 72 65 6c 65 73 73 20 70 75 6d 70 20 6e 6f     Wireless pump no
    2cc7:	2e 20 00                                            . .

00002cca <_ZZ20Handle_Wireless_PumpvE3__c_0>:
    2cca:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2cda:	72 20 34 34 34 34 34 34 34 34 34 34 34 34 34 34     r 44444444444444
    2cea:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 00        44444444444444.

00002cf9 <_ZZ20Handle_Wireless_PumpvE3__c>:
    2cf9:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    2d09:	72 20 33 33 33 33 33 33 33 33 33 33 33 33 33 33     r 33333333333333
    2d19:	33 33 33 33 33 33 33 33 33 33 00                    3333333333.

00002d24 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_11>:
    2d24:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    2d34:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00002d43 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_10>:
    2d43:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2d53:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2d63:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2d73:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00002d7e <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_9>:
    2d7e:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2d8e:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    2d9e:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    2dae:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00002db9 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_8>:
    2db9:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    2dc9:	69 6c 00                                            il.

00002dcc <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_7>:
    2dcc:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    2ddc:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    2dec:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00002df7 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_6>:
    2df7:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    2e07:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00002e15 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_5>:
    2e15:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    2e25:	74 61 20 3a 20 00                                   ta : .

00002e2b <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_4>:
    2e2b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    2e3b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    2e4b:	65 20 31 00                                         e 1.

00002e4f <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_3>:
    2e4f:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    2e5f:	6d 62 65 72 20 00                                   mber .

00002e65 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_2>:
    2e65:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    2e75:	6f 2e 20 00                                         o. .

00002e79 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_1>:
    2e79:	49 72 72 69 67 61 74 69 6e 67 20 45 78 74 72 61     Irrigating Extra
    2e89:	20 70 6c 6f 74 20 6e 6f 20 3a 20 00                  plot no : .

00002e95 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c_0>:
    2e95:	20 00                                                .

00002e97 <_ZZ33Extra_Plot_Valve_Grouping_HandlerhhE3__c>:
    2e97:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00002ea5 <_ZZ25Stop_Extra_Plot_OperationhE3__c_4>:
    2ea5:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     Extra plot fails
    2eb5:	20 74 6f 20 53 74 6f 70 00                           to Stop.

00002ebe <_ZZ25Stop_Extra_Plot_OperationhE3__c_3>:
    2ebe:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
	...

00002ecf <_ZZ25Stop_Extra_Plot_OperationhE3__c_2>:
    2ecf:	45 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 20     Extra plot fail 
    2edf:	74 6f 20 53 74 6f 70 73 20 66 6f 67 67 65 72 20     to Stops fogger 
    2eef:	62 61 63 6b 20 75 70 00                             back up.

00002ef7 <_ZZ25Stop_Extra_Plot_OperationhE3__c_1>:
    2ef7:	45 78 74 72 61 20 70 6c 6f 74 20 53 74 6f 70 73     Extra plot Stops
    2f07:	20 66 6f 67 67 65 72 20 62 61 63 6b 20 75 70 00      fogger back up.

00002f17 <_ZZ25Stop_Extra_Plot_OperationhE3__c_0>:
    2f17:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f27:	34 34 34 34 34 34 34 34 34 34 34 34 34 34 34 34     4444444444444444
    2f37:	34 34 34 34 34 00                                   44444.

00002f3d <_ZZ25Stop_Extra_Plot_OperationhE3__c>:
    2f3d:	54 72 79 20 74 6f 20 73 74 6f 70 20 45 78 74 72     Try to stop Extr
    2f4d:	61 00                                               a.

00002f4f <_ZZ26Start_Extra_Plot_OperationhE3__c_2>:
    2f4f:	65 78 74 72 61 20 70 6c 6f 74 20 66 61 69 6c 73     extra plot fails
    2f5f:	20 74 6f 20 6f 6e 00                                 to on.

00002f66 <_ZZ26Start_Extra_Plot_OperationhE3__c_1>:
    2f66:	45 78 74 72 61 20 50 6c 6f 74 20 4f 4e 00           Extra Plot ON.

00002f74 <_ZZ26Start_Extra_Plot_OperationhE3__c_0>:
    2f74:	77 6c 20 70 75 6d 70 20 74 72 69 67 67 65 72 20     wl pump trigger 
    2f84:	33 33 33 33 33 33 33 33 33 33 33 33 33 33 33 33     3333333333333333
    2f94:	33 33 33 33 00                                      3333.

00002f99 <_ZZ26Start_Extra_Plot_OperationhE3__c>:
    2f99:	54 72 79 20 74 6f 20 53 74 61 72 74 20 65 78 74     Try to Start ext
    2fa9:	72 61 20 70 6c 6f 74 00                             ra plot.

00002fb1 <_ZZ24Run_Extra_Plot_OperationvE3__c>:
    2fb1:	66 6f 67 67 65 72 3a 20 66 61 75 6c 74 20 6f 63     fogger: fault oc
    2fc1:	63 75 72 65 00                                      cure.

00002fc6 <_ZZ12Publish_DatavE3__c_85>:
    2fc6:	70 6c 6f 74 00                                      plot.

00002fcb <_ZZ12Publish_DatavE3__c_84>:
    2fcb:	74 69 6d 65 00                                      time.

00002fd0 <_ZZ12Publish_DatavE3__c_83>:
    2fd0:	70 6c 6f 74 00                                      plot.

00002fd5 <_ZZ12Publish_DatavE3__c_82>:
    2fd5:	74 69 6d 65 00                                      time.

00002fda <_ZZ12Publish_DatavE3__c_81>:
    2fda:	6d 65 64 69 75 6d 00                                medium.

00002fe1 <_ZZ12Publish_DatavE3__c_80>:
    2fe1:	70 53 74 61 74 75 73 00                             pStatus.

00002fe9 <_ZZ12Publish_DatavE3__c_79>:
    2fe9:	70 53 74 61 74 75 73 00                             pStatus.

00002ff1 <_ZZ12Publish_DatavE3__c_78>:
    2ff1:	70 53 74 61 74 75 73 00                             pStatus.

00002ff9 <_ZZ12Publish_DatavE3__c_77>:
    2ff9:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    3009:	20 46 62 20 72 65 73 65 6e 64 20 00                  Fb resend .

00003015 <_ZZ12Publish_DatavE3__c_76>:
    3015:	73 74 61 74 75 73 00                                status.

0000301c <_ZZ12Publish_DatavE3__c_75>:
    301c:	73 74 61 74 75 73 00                                status.

00003023 <_ZZ12Publish_DatavE3__c_74>:
    3023:	73 74 61 74 75 73 00                                status.

0000302a <_ZZ12Publish_DatavE3__c_73>:
    302a:	73 74 61 74 75 73 00                                status.

00003031 <_ZZ12Publish_DatavE3__c_72>:
    3031:	73 74 61 74 75 73 00                                status.

00003038 <_ZZ12Publish_DatavE3__c_71>:
    3038:	73 74 61 74 75 73 00                                status.

0000303f <_ZZ12Publish_DatavE3__c_70>:
    303f:	70 4e 6f 00                                         pNo.

00003043 <_ZZ12Publish_DatavE3__c_69>:
    3043:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    3053:	63 6b 20 72 65 73 65 6e 64 20 00                    ck resend .

0000305e <_ZZ12Publish_DatavE3__c_68>:
    305e:	62 5f 70 68 61 73 65 00                             b_phase.

00003066 <_ZZ12Publish_DatavE3__c_67>:
    3066:	79 5f 70 68 61 73 65 00                             y_phase.

0000306e <_ZZ12Publish_DatavE3__c_66>:
    306e:	72 5f 70 68 61 73 65 00                             r_phase.

00003076 <_ZZ12Publish_DatavE3__c_65>:
    3076:	63 75 72 72 65 6e 74 5f 74 69 6d 65 00              current_time.

00003083 <_ZZ12Publish_DatavE3__c_64>:
    3083:	79 65 61 72 00                                      year.

00003088 <_ZZ12Publish_DatavE3__c_63>:
    3088:	6d 6f 6e 74 68 00                                   month.

0000308e <_ZZ12Publish_DatavE3__c_62>:
    308e:	64 61 74 65 00                                      date.

00003093 <_ZZ12Publish_DatavE3__c_61>:
    3093:	74 68 72 65 65 5f 70 68 61 73 65 00                 three_phase.

0000309f <_ZZ12Publish_DatavE3__c_60>:
    309f:	70 75 6d 70 5f 6e 75 6d 00                          pump_num.

000030a8 <_ZZ12Publish_DatavE3__c_59>:
    30a8:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030b7 <_ZZ12Publish_DatavE3__c_58>:
    30b7:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030c0 <_ZZ12Publish_DatavE3__c_57>:
    30c0:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030cf <_ZZ12Publish_DatavE3__c_56>:
    30cf:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030d8 <_ZZ12Publish_DatavE3__c_55>:
    30d8:	73 63 5f 72 65 6d 61 69 6e 5f 74 69 6d 65 00        sc_remain_time.

000030e7 <_ZZ12Publish_DatavE3__c_54>:
    30e7:	73 63 5f 69 6e 64 65 78 00                          sc_index.

000030f0 <_ZZ12Publish_DatavE3__c_53>:
    30f0:	70 6c 6f 74 00                                      plot.

000030f5 <_ZZ12Publish_DatavE3__c_52>:
    30f5:	70 6c 6f 74 00                                      plot.

000030fa <_ZZ12Publish_DatavE3__c_51>:
    30fa:	63 75 72 72 65 6e 74 54 72 61 6e 73 66 6f 72 6d     currentTransform
    310a:	65 72 00                                            er.

0000310d <_ZZ12Publish_DatavE3__c_50>:
    310d:	6d 6f 64 65 00                                      mode.

00003112 <_ZZ12Publish_DatavE3__c_49>:
    3112:	70 53 74 61 74 75 73 00                             pStatus.

0000311a <_ZZ12Publish_DatavE3__c_48>:
    311a:	70 53 74 61 74 75 73 00                             pStatus.

00003122 <_ZZ12Publish_DatavE3__c_47>:
    3122:	70 53 74 61 74 75 73 00                             pStatus.

0000312a <_ZZ12Publish_DatavE3__c_46>:
    312a:	73 74 61 74 75 73 00                                status.

00003131 <_ZZ12Publish_DatavE3__c_45>:
    3131:	73 74 61 74 75 73 00                                status.

00003138 <_ZZ12Publish_DatavE3__c_44>:
    3138:	73 74 61 74 75 73 00                                status.

0000313f <_ZZ12Publish_DatavE3__c_43>:
    313f:	73 74 61 74 75 73 00                                status.

00003146 <_ZZ12Publish_DatavE3__c_42>:
    3146:	73 74 61 74 75 73 00                                status.

0000314d <_ZZ12Publish_DatavE3__c_41>:
    314d:	6f 6e 65 20 74 6f 75 63 68 20 6f 6e 2e 2e 2e 2e     one touch on....
    315d:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    316d:	2e 00                                               ..

0000316f <_ZZ12Publish_DatavE3__c_40>:
    316f:	73 74 61 74 75 73 00                                status.

00003176 <_ZZ12Publish_DatavE3__c_39>:
    3176:	6f 6e 65 20 74 6f 75 63 68 20 6f 66 66 2e 2e 2e     one touch off...
    3186:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003197 <_ZZ12Publish_DatavE3__c_38>:
    3197:	70 4e 6f 00                                         pNo.

0000319b <_ZZ12Publish_DatavE3__c_37>:
    319b:	6f 6e 65 20 74 6f 75 63 68 20 66 65 65 64 62 61     one touch feedba
    31ab:	63 6b 00                                            ck.

000031ae <_ZZ12Publish_DatavE3__c_36>:
    31ae:	70 6c 6f 74 00                                      plot.

000031b3 <_ZZ12Publish_DatavE3__c_35>:
    31b3:	74 69 6d 65 00                                      time.

000031b8 <_ZZ12Publish_DatavE3__c_34>:
    31b8:	70 6c 6f 74 00                                      plot.

000031bd <_ZZ12Publish_DatavE3__c_33>:
    31bd:	74 69 6d 65 00                                      time.

000031c2 <_ZZ12Publish_DatavE3__c_32>:
    31c2:	6d 65 64 69 75 6d 00                                medium.

000031c9 <_ZZ12Publish_DatavE3__c_31>:
    31c9:	70 53 74 61 74 75 73 00                             pStatus.

000031d1 <_ZZ12Publish_DatavE3__c_30>:
    31d1:	70 53 74 61 74 75 73 00                             pStatus.

000031d9 <_ZZ12Publish_DatavE3__c_29>:
    31d9:	70 53 74 61 74 75 73 00                             pStatus.

000031e1 <_ZZ12Publish_DatavE3__c_28>:
    31e1:	70 53 74 61 74 75 73 00                             pStatus.

000031e9 <_ZZ12Publish_DatavE3__c_27>:
    31e9:	45 78 74 72 61 20 50 6c 6f 74 20 54 69 6d 65 72     Extra Plot Timer
    31f9:	20 46 62 00                                          Fb.

000031fd <_ZZ12Publish_DatavE3__c_26>:
    31fd:	63 6f 64 65 73 00                                   codes.

00003203 <_ZZ12Publish_DatavE3__c_25>:
    3203:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    3213:	5f 44 41 54 41 00                                   _DATA.

00003219 <_ZZ12Publish_DatavE3__c_24>:
    3219:	76 61 6c 76 65 4f 70 65 6e 00                       valveOpen.

00003223 <_ZZ12Publish_DatavE3__c_23>:
    3223:	76 42 61 74 00                                      vBat.

00003228 <_ZZ12Publish_DatavE3__c_22>:
    3228:	76 61 6c 76 65 53 74 61 74 75 73 00                 valveStatus.

00003234 <_ZZ12Publish_DatavE3__c_21>:
    3234:	5f 65 50 55 42 5f 45 55 52 4f 5f 56 41 4c 56 45     _ePUB_EURO_VALVE
    3244:	5f 44 41 54 41 00                                   _DATA.

0000324a <_ZZ12Publish_DatavE3__c_20>:
    324a:	76 42 61 74 00                                      vBat.

0000324f <_ZZ12Publish_DatavE3__c_19>:
    324f:	6c 69 67 68 74 00                                   light.

00003255 <_ZZ12Publish_DatavE3__c_18>:
    3255:	68 75 6d 69 64 69 74 79 00                          humidity.

0000325e <_ZZ12Publish_DatavE3__c_17>:
    325e:	74 65 6d 70 65 72 61 74 75 72 65 00                 temperature.

0000326a <_ZZ12Publish_DatavE3__c_16>:
    326a:	73 6f 69 6c 5f 74 65 6d 70 00                       soil_temp.

00003274 <_ZZ12Publish_DatavE3__c_15>:
    3274:	73 6d 34 00                                         sm4.

00003278 <_ZZ12Publish_DatavE3__c_14>:
    3278:	73 6d 33 00                                         sm3.

0000327c <_ZZ12Publish_DatavE3__c_13>:
    327c:	73 6d 32 00                                         sm2.

00003280 <_ZZ12Publish_DatavE3__c_12>:
    3280:	73 6d 31 00                                         sm1.

00003284 <_ZZ12Publish_DatavE3__c_11>:
    3284:	70 61 63 6b 65 74 5f 69 64 00                       packet_id.

0000328e <_ZZ12Publish_DatavE3__c_10>:
    328e:	5f 65 50 55 42 5f 4c 49 52 41 5f 4e 4f 44 45 5f     _ePUB_LIRA_NODE_
    329e:	44 41 54 41 00                                      DATA.

000032a3 <_ZZ12Publish_DatavE3__c_9>:
    32a3:	63 6f 64 65 73 00                                   codes.

000032a9 <_ZZ12Publish_DatavE3__c_8>:
    32a9:	70 6c 6f 74 00                                      plot.

000032ae <_ZZ12Publish_DatavE3__c_7>:
    32ae:	70 6c 6f 74 00                                      plot.

000032b3 <_ZZ12Publish_DatavE3__c_6>:
    32b3:	74 69 6d 65 00                                      time.

000032b8 <_ZZ12Publish_DatavE3__c_5>:
    32b8:	74 69 6d 65 00                                      time.

000032bd <_ZZ12Publish_DatavE3__c_4>:
    32bd:	6d 65 64 69 75 6d 00                                medium.

000032c4 <_ZZ12Publish_DatavE3__c_3>:
    32c4:	70 53 74 61 74 75 73 00                             pStatus.

000032cc <_ZZ12Publish_DatavE3__c_2>:
    32cc:	5f 65 50 55 42 5f 54 49 4d 45 52 5f 46 45 45 44     _ePUB_TIMER_FEED
    32dc:	42 41 43 4b 00                                      BACK.

000032e1 <_ZZ12Publish_DatavE3__c_1>:
    32e1:	74 65 73 74 00                                      test.

000032e6 <_ZZ12Publish_DatavE3__c_0>:
    32e6:	74 65 73 74 00                                      test.

000032eb <_ZZ12Publish_DatavE3__c>:
    32eb:	63 6f 64 65 73 00                                   codes.

000032f1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_123>:
    32f1:	70 6c 6f 74 20 6d 61 74 63 68 2e 2e 2e 2e 2e 2e     plot match......
    3301:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3311:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
    3321:	2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e 2e     ................
	...

00003332 <_ZZ12Pub_Sub_DataPcPhjhE3__c_122>:
    3332:	73 74 61 74 75 73 00                                status.

00003339 <_ZZ12Pub_Sub_DataPcPhjhE3__c_121>:
    3339:	70 4e 6f 00                                         pNo.

0000333d <_ZZ12Pub_Sub_DataPcPhjhE3__c_120>:
    333d:	43 61 6c 69 62 72 61 74 69 6f 6e 20 6f 76 65 72     Calibration over
    334d:	20 72 75 6c 65 64 00                                 ruled.

00003354 <_ZZ12Pub_Sub_DataPcPhjhE3__c_119>:
    3354:	43 61 6c 69 62 72 61 74 69 6f 6e 20 74 6f 70 69     Calibration topi
    3364:	63 20 67 65 74 20 66 72 6f 6d 20 73 65 72 76 65     c get from serve
    3374:	72 00                                               r.

00003376 <_ZZ12Pub_Sub_DataPcPhjhE3__c_118>:
    3376:	43 61 6c 69 62 72 61 74 69 6f 6e 00                 Calibration.

00003382 <_ZZ12Pub_Sub_DataPcPhjhE3__c_117>:
    3382:	53 43 20 53 54 41 52 54 20 46 52 4f 4d 20 3a 20     SC START FROM : 
	...

00003393 <_ZZ12Pub_Sub_DataPcPhjhE3__c_116>:
    3393:	54 41 4e 4b 20 44 75 72 61 74 69 6f 6e 3a 20 00     TANK Duration: .

000033a3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_115>:
    33a3:	54 41 4e 4b 20 6f 6e 20 61 66 74 65 72 3a 20 00     TANK on after: .

000033b3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_114>:
    33b3:	54 41 4e 4b 20 4e 4f 3a 20 00                       TANK NO: .

000033bd <_ZZ12Pub_Sub_DataPcPhjhE3__c_113>:
    33bd:	54 41 4e 4b 20 53 54 41 54 3a 20 00                 TANK STAT: .

000033c9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_112>:
    33c9:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

000033d3 <_ZZ12Pub_Sub_DataPcPhjhE3__c_111>:
    33d3:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    33e3:	20 00                                                .

000033e5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_110>:
    33e5:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

000033f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_109>:
    33f0:	54 6e 4f 66 00                                      TnOf.

000033f5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_108>:
    33f5:	54 6e 4f 6e 00                                      TnOn.

000033fa <_ZZ12Pub_Sub_DataPcPhjhE3__c_107>:
    33fa:	54 6e 4e 6f 00                                      TnNo.

000033ff <_ZZ12Pub_Sub_DataPcPhjhE3__c_106>:
    33ff:	54 6e 53 74 00                                      TnSt.

00003404 <_ZZ12Pub_Sub_DataPcPhjhE3__c_105>:
    3404:	47 65 74 20 54 61 6e 6b 5f 53 63 68 65 64 75 6c     Get Tank_Schedul
    3414:	65 20 66 72 6f 6d 20 53 65 72 76 65 72 00           e from Server.

00003422 <_ZZ12Pub_Sub_DataPcPhjhE3__c_104>:
    3422:	53 43 20 53 54 41 54 20 3a 20 00                    SC STAT : .

0000342d <_ZZ12Pub_Sub_DataPcPhjhE3__c_103>:
    342d:	53 63 53 74 61 74 00                                ScStat.

00003434 <_ZZ12Pub_Sub_DataPcPhjhE3__c_102>:
    3434:	53 43 20 6f 6e 20 6f 66 66 20 54 69 6d 65 20 3a     SC on off Time :
    3444:	20 00                                                .

00003446 <_ZZ12Pub_Sub_DataPcPhjhE3__c_101>:
    3446:	53 63 4f 6e 00                                      ScOn.

0000344b <_ZZ12Pub_Sub_DataPcPhjhE3__c_100>:
    344b:	53 43 20 4e 55 4d 20 3a 20 00                       SC NUM : .

00003455 <_ZZ12Pub_Sub_DataPcPhjhE3__c_99>:
    3455:	53 63 4e 75 6d 00                                   ScNum.

0000345b <_ZZ12Pub_Sub_DataPcPhjhE3__c_98>:
    345b:	53 63 4f 66 66 00                                   ScOff.

00003461 <_ZZ12Pub_Sub_DataPcPhjhE3__c_97>:
    3461:	53 63 4f 6e 00                                      ScOn.

00003466 <_ZZ12Pub_Sub_DataPcPhjhE3__c_96>:
    3466:	53 65 6e 00                                         Sen.

0000346a <_ZZ12Pub_Sub_DataPcPhjhE3__c_95>:
    346a:	53 63 68 65 64 75 6c 65 20 74 6f 70 69 63 20 67     Schedule topic g
    347a:	65 74 20 66 72 6f 6d 20 73 65 72 76 65 72 20 3a     et from server :
    348a:	20 00                                                .

0000348c <_ZZ12Pub_Sub_DataPcPhjhE3__c_94>:
    348c:	73 6d 73 20 61 6c 65 72 74 20 6f 66 66 00           sms alert off.

0000349a <_ZZ12Pub_Sub_DataPcPhjhE3__c_93>:
    349a:	73 6d 73 20 61 6c 65 72 74 20 6f 6e 00              sms alert on.

000034a7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_92>:
    34a7:	73 6d 73 00                                         sms.

000034ab <_ZZ12Pub_Sub_DataPcPhjhE3__c_91>:
    34ab:	64 65 76 69 63 65 4e 75 6d 62 65 72 00              deviceNumber.

000034b8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_90>:
    34b8:	66 61 72 6d 65 72 4e 75 6d 62 65 72 00              farmerNumber.

000034c5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_89>:
    34c5:	66 6f 72 63 65 20 73 74 6f 70 20 72 65 73 75 6d     force stop resum
    34d5:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

000034e0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_88>:
    34e0:	66 6f 72 63 65 20 73 74 6f 70 20 74 6f 70 69 63     force stop topic
    34f0:	20 3a 20 00                                          : .

000034f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_87>:
    34f4:	72 65 73 75 6d 65 20 73 63 68 65 64 75 6c 65 20     resume schedule 
    3504:	74 6f 70 69 63 20 3a 20 00                          topic : .

0000350d <_ZZ12Pub_Sub_DataPcPhjhE3__c_86>:
    350d:	70 61 75 73 65 20 73 63 68 65 64 75 6c 65 20 74     pause schedule t
    351d:	6f 70 69 63 20 3a 20 00                             opic : .

00003525 <_ZZ12Pub_Sub_DataPcPhjhE3__c_85>:
    3525:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

0000352e <_ZZ12Pub_Sub_DataPcPhjhE3__c_84>:
    352e:	65 78 74 72 61 20 70 6c 6f 74 20 64 65 6c 65 74     extra plot delet
    353e:	65 20 74 6f 70 69 63 20 3a 20 00                    e topic : .

00003549 <_ZZ12Pub_Sub_DataPcPhjhE3__c_83>:
    3549:	53 43 48 45 44 5f 4e 55 4d 00                       SCHED_NUM.

00003553 <_ZZ12Pub_Sub_DataPcPhjhE3__c_82>:
    3553:	73 63 68 65 64 75 6c 65 20 70 6c 6f 74 20 64 65     schedule plot de
    3563:	6c 65 74 65 20 74 6f 70 69 63 20 3a 20 00           lete topic : .

00003571 <_ZZ12Pub_Sub_DataPcPhjhE3__c_81>:
    3571:	50 4c 4f 54 5f 4e 55 4d 00                          PLOT_NUM.

0000357a <_ZZ12Pub_Sub_DataPcPhjhE3__c_80>:
    357a:	70 6c 6f 74 20 64 65 6c 65 74 65 20 74 6f 70 69     plot delete topi
    358a:	63 20 3a 20 00                                      c : .

0000358f <_ZZ12Pub_Sub_DataPcPhjhE3__c_79>:
    358f:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000359a <_ZZ12Pub_Sub_DataPcPhjhE3__c_78>:
    359a:	56 41 4c 56 45 20 64 65 6c 65 74 65 20 66 72 6f     VALVE delete fro
    35aa:	6d 20 50 6c 6f 74 20 6e 6f 2e 3a 20 00              m Plot no.: .

000035b7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_77>:
    35b7:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

000035c2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_76>:
    35c2:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

000035cd <_ZZ12Pub_Sub_DataPcPhjhE3__c_75>:
    35cd:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    35dd:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

000035e8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_74>:
    35e8:	76 49 64 00                                         vId.

000035ec <_ZZ12Pub_Sub_DataPcPhjhE3__c_73>:
    35ec:	76 61 6c 76 65 20 64 65 6c 65 74 65 20 74 6f 70     valve delete top
    35fc:	69 63 20 3a 20 00                                   ic : .

00003602 <_ZZ12Pub_Sub_DataPcPhjhE3__c_72>:
    3602:	63 6f 64 65 00                                      code.

00003607 <_ZZ12Pub_Sub_DataPcPhjhE3__c_71>:
    3607:	70 6c 6f 74 20 73 65 6c 20 3a 20 00                 plot sel : .

00003613 <_ZZ12Pub_Sub_DataPcPhjhE3__c_70>:
    3613:	6d 61 78 20 3a 20 00                                max : .

0000361a <_ZZ12Pub_Sub_DataPcPhjhE3__c_69>:
    361a:	6d 69 6e 20 3a 20 00                                min : .

00003621 <_ZZ12Pub_Sub_DataPcPhjhE3__c_68>:
    3621:	73 65 6c 5f 70 6c 6f 74 00                          sel_plot.

0000362a <_ZZ12Pub_Sub_DataPcPhjhE3__c_67>:
    362a:	6d 61 78 00                                         max.

0000362e <_ZZ12Pub_Sub_DataPcPhjhE3__c_66>:
    362e:	6d 61 78 00                                         max.

00003632 <_ZZ12Pub_Sub_DataPcPhjhE3__c_65>:
    3632:	6d 69 6e 00                                         min.

00003636 <_ZZ12Pub_Sub_DataPcPhjhE3__c_64>:
    3636:	6d 69 6e 00                                         min.

0000363a <_ZZ12Pub_Sub_DataPcPhjhE3__c_63>:
    363a:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

00003646 <_ZZ12Pub_Sub_DataPcPhjhE3__c_62>:
    3646:	45 78 74 72 61 20 50 6c 6f 74 20 4e 75 6d 62 65     Extra Plot Numbe
    3656:	72 2e 3a 20 00                                      r.: .

0000365b <_ZZ12Pub_Sub_DataPcPhjhE3__c_61>:
    365b:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    366b:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

00003677 <_ZZ12Pub_Sub_DataPcPhjhE3__c_60>:
    3677:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

00003682 <_ZZ12Pub_Sub_DataPcPhjhE3__c_59>:
    3682:	56 41 4c 56 45 20 4e 4f 20 3a 20 00                 VALVE NO : .

0000368e <_ZZ12Pub_Sub_DataPcPhjhE3__c_58>:
    368e:	76 61 6c 76 65 20 35 3a 20 00                       valve 5: .

00003698 <_ZZ12Pub_Sub_DataPcPhjhE3__c_57>:
    3698:	76 61 6c 76 65 20 34 3a 20 00                       valve 4: .

000036a2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_56>:
    36a2:	76 61 6c 76 65 20 33 3a 20 00                       valve 3: .

000036ac <_ZZ12Pub_Sub_DataPcPhjhE3__c_55>:
    36ac:	76 61 6c 76 65 20 32 3a 20 00                       valve 2: .

000036b6 <_ZZ12Pub_Sub_DataPcPhjhE3__c_54>:
    36b6:	76 61 6c 76 65 20 31 3a 20 00                       valve 1: .

000036c0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_53>:
    36c0:	53 65 6e 73 6f 72 20 4e 6f 2e 3a 20 00              Sensor No.: .

000036cd <_ZZ12Pub_Sub_DataPcPhjhE3__c_52>:
    36cd:	73 65 6e 73 6f 72 20 64 61 74 61 20 67 65 74 20     sensor data get 
    36dd:	66 72 6f 6d 20 73 65 72 76 65 72 00                 from server.

000036e9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_51>:
    36e9:	6f 70 4d 6f 64 65 00                                opMode.

000036f0 <_ZZ12Pub_Sub_DataPcPhjhE3__c_50>:
    36f0:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3700:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000370b <_ZZ12Pub_Sub_DataPcPhjhE3__c_49>:
    370b:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    371b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003726 <_ZZ12Pub_Sub_DataPcPhjhE3__c_48>:
    3726:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3736:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003741 <_ZZ12Pub_Sub_DataPcPhjhE3__c_47>:
    3741:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3751:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003760 <_ZZ12Pub_Sub_DataPcPhjhE3__c_46>:
    3760:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3770:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

0000377f <_ZZ12Pub_Sub_DataPcPhjhE3__c_45>:
    377f:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    378f:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

0000379e <_ZZ12Pub_Sub_DataPcPhjhE3__c_44>:
    379e:	77 69 72 65 6c 65 73 73 20 70 75 6d 70 20 44 41     wireless pump DA
    37ae:	54 41 20 47 45 54 20 46 52 4f 4d 20 53 45 52 56     TA GET FROM SERV
    37be:	45 52 00                                            ER.

000037c1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_43>:
    37c1:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    37d1:	6f 6e 20 00                                         on .

000037d5 <_ZZ12Pub_Sub_DataPcPhjhE3__c_42>:
    37d5:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    37e5:	74 68 65 20 6c 69 73 74 00                          the list.

000037ee <_ZZ12Pub_Sub_DataPcPhjhE3__c_41>:
    37ee:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000037ff <_ZZ12Pub_Sub_DataPcPhjhE3__c_40>:
    37ff:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    380f:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000381a <_ZZ12Pub_Sub_DataPcPhjhE3__c_39>:
    381a:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    382a:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003835 <_ZZ12Pub_Sub_DataPcPhjhE3__c_38>:
    3835:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3845:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003850 <_ZZ12Pub_Sub_DataPcPhjhE3__c_37>:
    3850:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3860:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

0000386b <_ZZ12Pub_Sub_DataPcPhjhE3__c_36>:
    386b:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    387b:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003886 <_ZZ12Pub_Sub_DataPcPhjhE3__c_35>:
    3886:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3896:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038a1 <_ZZ12Pub_Sub_DataPcPhjhE3__c_34>:
    38a1:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    38b1:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038bc <_ZZ12Pub_Sub_DataPcPhjhE3__c_33>:
    38bc:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    38cc:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038d7 <_ZZ12Pub_Sub_DataPcPhjhE3__c_32>:
    38d7:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    38e7:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000038f2 <_ZZ12Pub_Sub_DataPcPhjhE3__c_31>:
    38f2:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3902:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003911 <_ZZ12Pub_Sub_DataPcPhjhE3__c_30>:
    3911:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3921:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

00003930 <_ZZ12Pub_Sub_DataPcPhjhE3__c_29>:
    3930:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3940:	63 6f 6e 74 72 6f 6c 6c 65 72 20 6e 65 77 00        controller new.

0000394f <_ZZ12Pub_Sub_DataPcPhjhE3__c_28>:
    394f:	76 61 6c 76 65 20 49 44 3a 20 00                    valve ID: .

0000395a <_ZZ12Pub_Sub_DataPcPhjhE3__c_27>:
    395a:	76 61 6c 76 65 20 4e 4f 3a 20 00                    valve NO: .

00003965 <_ZZ12Pub_Sub_DataPcPhjhE3__c_26>:
    3965:	56 41 4c 56 45 20 44 41 54 41 20 47 45 54 20 46     VALVE DATA GET F
    3975:	52 4f 4d 20 53 45 52 56 45 52 00                    ROM SERVER.

00003980 <_ZZ12Pub_Sub_DataPcPhjhE3__c_25>:
    3980:	6e 65 77 20 76 61 6c 76 65 20 70 6f 73 69 74 69     new valve positi
    3990:	6f 6e 20 00                                         on .

00003994 <_ZZ12Pub_Sub_DataPcPhjhE3__c_24>:
    3994:	76 61 6c 76 65 20 69 73 20 6e 6f 74 20 69 6e 20     valve is not in 
    39a4:	74 68 65 20 6c 69 73 74 00                          the list.

000039ad <_ZZ12Pub_Sub_DataPcPhjhE3__c_23>:
    39ad:	73 65 6c 65 63 74 20 66 72 6f 6d 20 6c 69 73 74     select from list
	...

000039be <_ZZ12Pub_Sub_DataPcPhjhE3__c_22>:
    39be:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    39ce:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039d9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_21>:
    39d9:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    39e9:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

000039f4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_20>:
    39f4:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a04:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a0f <_ZZ12Pub_Sub_DataPcPhjhE3__c_19>:
    3a0f:	76 61 6c 76 65 20 33 20 6f 66 20 65 75 72 6f 20     valve 3 of euro 
    3a1f:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a2a <_ZZ12Pub_Sub_DataPcPhjhE3__c_18>:
    3a2a:	76 61 6c 76 65 20 32 20 6f 66 20 65 75 72 6f 20     valve 2 of euro 
    3a3a:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a45 <_ZZ12Pub_Sub_DataPcPhjhE3__c_17>:
    3a45:	76 61 6c 76 65 20 31 20 6f 66 20 65 75 72 6f 20     valve 1 of euro 
    3a55:	63 6f 6e 74 72 6f 6c 6c 65 72 00                    controller.

00003a60 <_ZZ12Pub_Sub_DataPcPhjhE3__c_16>:
    3a60:	76 61 6c 76 65 35 00                                valve5.

00003a67 <_ZZ12Pub_Sub_DataPcPhjhE3__c_15>:
    3a67:	76 61 6c 76 65 34 00                                valve4.

00003a6e <_ZZ12Pub_Sub_DataPcPhjhE3__c_14>:
    3a6e:	76 61 6c 76 65 33 00                                valve3.

00003a75 <_ZZ12Pub_Sub_DataPcPhjhE3__c_13>:
    3a75:	76 61 6c 76 65 32 00                                valve2.

00003a7c <_ZZ12Pub_Sub_DataPcPhjhE3__c_12>:
    3a7c:	76 61 6c 76 65 31 00                                valve1.

00003a83 <_ZZ12Pub_Sub_DataPcPhjhE3__c_11>:
    3a83:	70 4e 6f 00                                         pNo.

00003a87 <_ZZ12Pub_Sub_DataPcPhjhE3__c_10>:
    3a87:	53 65 74 20 63 6f 65 66 66 65 63 69 65 6e 74 20     Set coeffecient 
    3a97:	54 6f 70 69 63 20 66 72 6f 6d 20 73 65 72 76 65     Topic from serve
    3aa7:	72 00                                               r.

00003aa9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_6>:
    3aa9:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 00     Irrigating plot.

00003ab9 <_ZZ12Pub_Sub_DataPcPhjhE3__c_5>:
    3ab9:	50 55 4d 50 20 52 55 4e 20 54 49 4d 45 52 00        PUMP RUN TIMER.

00003ac8 <_ZZ12Pub_Sub_DataPcPhjhE3__c_4>:
    3ac8:	74 00                                               t.

00003aca <_ZZ12Pub_Sub_DataPcPhjhE3__c_3>:
    3aca:	70 4e 6f 00                                         pNo.

00003ace <_ZZ12Pub_Sub_DataPcPhjhE3__c_2>:
    3ace:	67 65 74 20 54 49 4d 45 52 20 66 72 6f 6d 20 73     get TIMER from s
    3ade:	65 72 76 65 72 00                                   erver.

00003ae4 <_ZZ12Pub_Sub_DataPcPhjhE3__c_1>:
    3ae4:	47 65 74 20 43 6f 6e 74 72 6f 6c 6c 65 72 20 69     Get Controller i
    3af4:	73 20 72 65 67 69 73 74 65 72 65 64 20 74 6f 20     s registered to 
    3b04:	53 65 76 65 72 20 54 6f 70 69 63 00                 Sever Topic.

00003b10 <_ZZ12Pub_Sub_DataPcPhjhE3__c_0>:
    3b10:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b20:	6e 63 74 69 6f 6e 20 32 00                          nction 2.

00003b29 <_ZZ12Pub_Sub_DataPcPhjhE3__c>:
    3b29:	6d 71 74 74 5f 63 61 6c 6c 62 61 63 6b 5f 66 75     mqtt_callback_fu
    3b39:	6e 63 74 69 6f 6e 20 31 00                          nction 1.

00003b42 <_ZZ14Lora_OperationvE3__c>:
    3b42:	4c 6f 72 61 20 44 61 74 61 20 52 65 63 69 76 65     Lora Data Recive
    3b52:	64 00                                               d.

00003b54 <_ZZ22Valve_Grouping_HandlerhE3__c_40>:
    3b54:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3b64:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003b73 <_ZZ22Valve_Grouping_HandlerhE3__c_39>:
    3b73:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3b83:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3b93:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3ba3:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003bae <_ZZ22Valve_Grouping_HandlerhE3__c_38>:
    3bae:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3bbe:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3bce:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3bde:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003be9 <_ZZ22Valve_Grouping_HandlerhE3__c_37>:
    3be9:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3bf9:	69 6c 00                                            il.

00003bfc <_ZZ22Valve_Grouping_HandlerhE3__c_36>:
    3bfc:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3c0c:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3c1c:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003c27 <_ZZ22Valve_Grouping_HandlerhE3__c_35>:
    3c27:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3c37:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003c45 <_ZZ22Valve_Grouping_HandlerhE3__c_34>:
    3c45:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3c55:	74 61 20 3a 20 00                                   ta : .

00003c5b <_ZZ22Valve_Grouping_HandlerhE3__c_33>:
    3c5b:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3c6b:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3c7b:	65 20 31 00                                         e 1.

00003c7f <_ZZ22Valve_Grouping_HandlerhE3__c_32>:
    3c7f:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3c8f:	6d 62 65 72 20 00                                   mber .

00003c95 <_ZZ22Valve_Grouping_HandlerhE3__c_31>:
    3c95:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3ca5:	6f 2e 20 00                                         o. .

00003ca9 <_ZZ22Valve_Grouping_HandlerhE3__c_30>:
    3ca9:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3cb9:	6e 6f 20 3a 20 00                                   no : .

00003cbf <_ZZ22Valve_Grouping_HandlerhE3__c_29>:
    3cbf:	20 00                                                .

00003cc1 <_ZZ22Valve_Grouping_HandlerhE3__c_28>:
    3cc1:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003ccf <_ZZ22Valve_Grouping_HandlerhE3__c_27>:
    3ccf:	41 6c 6c 20 76 61 6c 76 65 73 20 73 75 63 63 65     All valves succe
    3cdf:	73 73 66 75 6c 6c 79 20 4f 4e 2f 4f 46 46 00        ssfully ON/OFF.

00003cee <_ZZ22Valve_Grouping_HandlerhE3__c_26>:
    3cee:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3cfe:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d0e:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d1e:	72 6f 20 76 61 6c 76 65 20 30 00                    ro valve 0.

00003d29 <_ZZ22Valve_Grouping_HandlerhE3__c_25>:
    3d29:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d39:	69 6c 2f 4e 6f 74 20 72 65 63 65 69 76 65 64 20     il/Not received 
    3d49:	61 6e 79 20 64 61 74 61 20 66 72 6f 6d 20 45 75     any data from Eu
    3d59:	72 6f 20 76 61 6c 76 65 20 31 00                    ro valve 1.

00003d64 <_ZZ22Valve_Grouping_HandlerhE3__c_24>:
    3d64:	45 75 72 6f 20 46 65 65 64 62 61 63 6b 20 66 61     Euro Feedback fa
    3d74:	69 6c 00                                            il.

00003d77 <_ZZ22Valve_Grouping_HandlerhE3__c_23>:
    3d77:	49 44 20 4e 6f 74 20 6d 61 74 63 68 65 64 20 77     ID Not matched w
    3d87:	69 74 68 20 76 61 6c 76 65 20 77 68 69 63 68 20     ith valve which 
    3d97:	69 73 20 72 65 70 6c 69 65 64 00                    is replied.

00003da2 <_ZZ22Valve_Grouping_HandlerhE3__c_22>:
    3da2:	45 75 72 6f 20 76 61 6c 76 65 20 49 44 20 77 68     Euro valve ID wh
    3db2:	69 63 68 20 69 73 20 53 65 6e 74 20 3a 00           ich is Sent :.

00003dc0 <_ZZ22Valve_Grouping_HandlerhE3__c_21>:
    3dc0:	45 75 72 6f 20 76 61 6c 76 65 20 72 78 20 64 61     Euro valve rx da
    3dd0:	74 61 20 3a 20 00                                   ta : .

00003dd6 <_ZZ22Valve_Grouping_HandlerhE3__c_20>:
    3dd6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3de6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3df6:	65 20 31 00                                         e 1.

00003dfa <_ZZ22Valve_Grouping_HandlerhE3__c_19>:
    3dfa:	43 75 72 72 65 6e 74 20 76 61 6c 76 65 20 6e 75     Current valve nu
    3e0a:	6d 62 65 72 20 00                                   mber .

00003e10 <_ZZ22Valve_Grouping_HandlerhE3__c_18>:
    3e10:	57 69 72 65 6c 65 73 73 20 56 61 6c 76 65 20 6e     Wireless Valve n
    3e20:	6f 2e 20 00                                         o. .

00003e24 <_ZZ22Valve_Grouping_HandlerhE3__c_17>:
    3e24:	49 72 72 69 67 61 74 69 6e 67 20 70 6c 6f 74 20     Irrigating plot 
    3e34:	6e 6f 20 3a 20 00                                   no : .

00003e3a <_ZZ22Valve_Grouping_HandlerhE3__c_16>:
    3e3a:	20 00                                                .

00003e3c <_ZZ22Valve_Grouping_HandlerhE3__c_15>:
    3e3c:	76 61 6c 76 65 20 6c 69 73 74 20 3a 20 00           valve list : .

00003e4a <_ZZ22Valve_Grouping_HandlerhE3__c_14>:
    3e4a:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 67 69     valve fail to gi
    3e5a:	76 65 20 66 65 65 64 62 61 63 6b 28 4e 6f 74 20     ve feedback(Not 
    3e6a:	6c 69 73 74 65 6e 69 6e 67 29 2e 2e 2e 00           listening)....

00003e78 <_ZZ22Valve_Grouping_HandlerhE3__c_13>:
    3e78:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3e88:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 74     ch(before startt
    3e98:	29 00                                               ).

00003e9a <_ZZ22Valve_Grouping_HandlerhE3__c_12>:
    3e9a:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3eaa:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3eba:	20 6f 6e 6e 29 00                                    onn).

00003ec0 <_ZZ22Valve_Grouping_HandlerhE3__c_11>:
    3ec0:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3ed0:	61 20 3a 20 00                                      a : .

00003ed5 <_ZZ22Valve_Grouping_HandlerhE3__c_10>:
    3ed5:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3ee5:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3ef5:	65 20 3b 00                                         e ;.

00003ef9 <_ZZ22Valve_Grouping_HandlerhE3__c_9>:
    3ef9:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3f09:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3f19:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003f24 <_ZZ22Valve_Grouping_HandlerhE3__c_8>:
    3f24:	76 61 6c 76 65 20 66 61 69 6c 20 74 6f 20 6f 66     valve fail to of
    3f34:	66 20 77 68 69 63 68 20 77 61 73 20 61 6c 72 65     f which was alre
    3f44:	61 64 79 20 6f 6e 00                                ady on.

00003f4b <_ZZ22Valve_Grouping_HandlerhE3__c_7>:
    3f4b:	76 61 6c 76 65 20 69 64 20 6e 6f 74 20 6d 61 74     valve id not mat
    3f5b:	63 68 28 62 65 66 6f 72 65 20 73 74 61 72 74 29     ch(before start)
	...

00003f6c <_ZZ22Valve_Grouping_HandlerhE3__c_6>:
    3f6c:	66 61 69 6c 20 74 6f 20 6f 66 66 20 74 68 65 20     fail to off the 
    3f7c:	76 61 6c 76 65 28 77 61 73 20 65 61 6c 69 65 72     valve(was ealier
    3f8c:	20 6f 6e 29 00                                       on).

00003f91 <_ZZ22Valve_Grouping_HandlerhE3__c_5>:
    3f91:	54 65 73 74 20 6f 6e 6c 79 20 54 58 20 64 61 74     Test only TX dat
    3fa1:	61 20 3a 20 00                                      a : .

00003fa6 <_ZZ22Valve_Grouping_HandlerhE3__c_4>:
    3fa6:	53 65 6e 64 20 4f 6e 2f 6f 66 66 20 43 6f 6d 6d     Send On/off Comm
    3fb6:	61 6e 64 20 74 6f 20 45 55 52 4f 20 76 61 6c 76     and to EURO valv
    3fc6:	65 20 00                                            e .

00003fc9 <_ZZ22Valve_Grouping_HandlerhE3__c_3>:
    3fc9:	43 68 65 63 6b 20 76 61 6c 76 65 20 74 68 61 74     Check valve that
    3fd9:	20 61 6c 6c 20 76 61 6c 76 65 73 20 61 72 65 20      all valves are 
    3fe9:	4f 46 46 20 6f 72 20 6e 6f 74 00                    OFF or not.

00003ff4 <_ZZ22Valve_Grouping_HandlerhE3__c_2>:
    3ff4:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    4004:	20 00                                                .

00004006 <_ZZ22Valve_Grouping_HandlerhE3__c_1>:
    4006:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

00004017 <_ZZ22Valve_Grouping_HandlerhE3__c_0>:
    4017:	76 61 6c 76 65 20 6c 69 73 74 20 65 6e 74 65 72     valve list enter
    4027:	20 00                                                .

00004029 <_ZZ22Valve_Grouping_HandlerhE3__c>:
    4029:	76 61 6c 76 65 20 6c 69 73 74 20 69 73 20 3a 20     valve list is : 
	...

0000403a <_ZZ15Stop_IrrigationvE3__c_3>:
    403a:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    404a:	74 6f 20 53 74 6f 70 00                             to Stop.

00004052 <_ZZ15Stop_IrrigationvE3__c_2>:
    4052:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004063 <_ZZ15Stop_IrrigationvE3__c_1>:
    4063:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 6f 70 73     Irrigation Stops
	...

00004074 <_ZZ15Stop_IrrigationvE3__c_0>:
    4074:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4084:	72 20 32 32 32 32 32 32 32 32 32 32 32 32 32 32     r 22222222222222
    4094:	32 32 32 32 32 32 32 32 32 00                       222222222.

0000409e <_ZZ15Stop_IrrigationvE3__c>:
    409e:	54 72 79 20 74 6f 20 73 74 6f 70 20 49 72 72 69     Try to stop Irri
    40ae:	67 61 74 69 6f 6e 00                                gation.

000040b5 <_ZZ16Start_IrrigationvE3__c_5>:
    40b5:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40c5:	53 74 61 72 74 00                                   Start.

000040cb <_ZZ16Start_IrrigationvE3__c_4>:
    40cb:	49 72 72 69 67 61 74 69 6f 6e 20 53 74 61 72 74     Irrigation Start
	...

000040dc <_ZZ16Start_IrrigationvE3__c_3>:
    40dc:	49 72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 20     Irrigation fail 
    40ec:	53 74 61 72 74 00                                   Start.

000040f2 <_ZZ16Start_IrrigationvE3__c_2>:
    40f2:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4102:	72 20 66 61 69 6c 20 74 6f 20 6f 6e 00              r fail to on.

0000410f <_ZZ16Start_IrrigationvE3__c_1>:
    410f:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    411f:	72 20 6f 6e 00                                      r on.

00004124 <_ZZ16Start_IrrigationvE3__c_0>:
    4124:	77 6c 20 31 20 70 75 6d 70 20 74 72 69 67 67 65     wl 1 pump trigge
    4134:	72 20 31 31 31 31 31 31 31 31 31 31 31 31 31 31     r 11111111111111
    4144:	31 31 31 31 31 31 00                                111111.

0000414b <_ZZ16Start_IrrigationvE3__c>:
    414b:	54 72 79 20 74 6f 20 53 74 61 72 74 20 54 68 65     Try to Start The
    415b:	20 49 72 72 69 67 61 74 69 6f 6e 00                  Irrigation.

00004167 <_ZZ13Run_OperationvE3__c_21>:
    4167:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4177:	2c 20 49 72 72 69 67 61 74 69 6f 6e 00              , Irrigation.

00004184 <_ZZ13Run_OperationvE3__c_19>:
    4184:	4d 6f 64 65 3a 20 53 63 68 65 64 75 6c 65 72 20     Mode: Scheduler 
    4194:	6d 6f 64 65 20 2c 20 4f 70 65 72 61 74 69 6f 6e     mode , Operation
    41a4:	20 53 74 61 72 74 00                                 Start.

000041ab <_ZZ13Run_OperationvE3__c_18>:
    41ab:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41bb:	2c 20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68     , kill switch th
    41cb:	72 6f 75 67 68 20 61 70 70 00                       rough app.

000041d5 <_ZZ13Run_OperationvE3__c_17>:
    41d5:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    41e5:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    41f5:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4205:	20 33 00                                             3.

00004208 <_ZZ13Run_OperationvE3__c_16>:
    4208:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4218:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    4228:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    4238:	20 32 00                                             2.

0000423b <_ZZ13Run_OperationvE3__c_15>:
    423b:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    424b:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    425b:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    426b:	20 31 00                                             1.

0000426e <_ZZ13Run_OperationvE3__c_14>:
    426e:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    427e:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c     , Irrigation Rel
    428e:	61 74 65 64 20 46 61 75 6c 74 20 6f 63 63 75 72     ated Fault occur
    429e:	20 30 00                                             0.

000042a1 <_ZZ13Run_OperationvE3__c_13>:
    42a1:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42b1:	20 2c 20 54 69 6d 65 20 4f 76 65 72 00               , Time Over.

000042be <_ZZ13Run_OperationvE3__c_12>:
    42be:	50 75 6d 70 20 52 75 6e 20 54 69 6d 65 72 20 69     Pump Run Timer i
    42ce:	6e 20 54 69 6d 65 72 20 3a 20 00                    n Timer : .

000042d9 <_ZZ13Run_OperationvE3__c_11>:
    42d9:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    42e9:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    42f9:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4309:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4319:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004321 <_ZZ13Run_OperationvE3__c_10>:
    4321:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4331:	20 2c 20 54 69 6d 65 72 20 6d 6f 64 65 20 68 61      , Timer mode ha
    4341:	73 20 62 65 65 6e 20 66 61 69 6c 65 64 20 64 75     s been failed du
    4351:	65 20 74 6f 20 6e 6f 74 20 73 74 61 72 74 20 73     e to not start s
    4361:	74 6f 70 20 30 2e 31 00                             top 0.1.

00004369 <_ZZ13Run_OperationvE3__c_9>:
    4369:	4d 6f 64 65 3a 20 54 69 6d 65 72 20 4d 6f 64 65     Mode: Timer Mode
    4379:	20 2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61      , Irrigation fa
    4389:	69 6c 73 20 74 6f 20 73 74 6f 70 20 62 75 74 20     ils to stop but 
    4399:	72 75 6e 20 66 6f 72 20 6e 65 78 74 20 70 6c 6f     run for next plo
    43a9:	74 20 00                                            t .

000043ac <_ZZ13Run_OperationvE3__c_8>:
    43ac:	4d 6f 64 65 3a 54 69 6d 65 72 20 4d 6f 64 65 20     Mode:Timer Mode 
    43bc:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    43cc:	74 00                                               t.

000043ce <_ZZ13Run_OperationvE3__c_7>:
    43ce:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    43de:	20 6b 69 6c 6c 20 73 77 69 74 63 68 20 74 68 72      kill switch thr
    43ee:	6f 75 67 68 20 61 70 70 00                          ough app.

000043f7 <_ZZ13Run_OperationvE3__c_6>:
    43f7:	66 6f 67 67 65 72 20 6f 6e 20 49 72 72 69 67 61     fogger on Irriga
    4407:	74 69 6f 6e 20 73 74 6f 70 73 00                    tion stops.

00004412 <_ZZ13Run_OperationvE3__c_5>:
    4412:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 2c     Mode: Auto Mode,
    4422:	49 72 72 69 67 61 74 69 6f 6e 20 52 65 6c 61 74     Irrigation Relat
    4432:	65 64 20 46 61 75 6c 74 20 6f 63 63 75 72 00        ed Fault occur.

00004441 <_ZZ13Run_OperationvE3__c_3>:
    4441:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4451:	2c 20 47 6f 69 6e 67 20 54 6f 20 53 74 61 72 74     , Going To Start
	...

00004462 <_ZZ13Run_OperationvE3__c_2>:
    4462:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    4472:	2c 20 49 72 72 69 67 61 74 69 6f 6e 20 66 61 69     , Irrigation fai
    4482:	6c 73 20 74 6f 20 73 74 6f 70 00                    ls to stop.

0000448d <_ZZ13Run_OperationvE3__c_1>:
    448d:	4d 6f 64 65 3a 20 41 75 74 6f 20 4d 6f 64 65 20     Mode: Auto Mode 
    449d:	2c 20 4f 70 65 72 61 74 69 6f 6e 20 53 74 61 72     , Operation Star
    44ad:	74 00                                               t.

000044af <_ZZ13Run_OperationvE3__c_0>:
    44af:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 2c 20 49     Mode: Manual , I
    44bf:	72 72 69 67 61 74 69 6f 6e 20 66 61 69 6c 73 20     rrigation fails 
    44cf:	74 6f 20 73 74 6f 70 00                             to stop.

000044d7 <_ZZ13Run_OperationvE3__c>:
    44d7:	4d 6f 64 65 3a 20 4d 61 6e 75 61 6c 20 73 65 6c     Mode: Manual sel
    44e7:	65 63 74 65 64 2c 20 20 4f 70 65 72 61 74 69 6f     ected,  Operatio
    44f7:	6e 20 53 74 61 72 74 00                             n Start.

000044ff <_ZZ21Select_Operation_ModevE3__c_11>:
    44ff:	41 75 74 6f 20 4d 6f 64 65 20 73 65 6c 65 63 74     Auto Mode select
    450f:	65 64 00                                            ed.

00004512 <_ZZ21Select_Operation_ModevE3__c_10>:
    4512:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    4522:	65 64 00                                            ed.

00004525 <_ZZ21Select_Operation_ModevE3__c_9>:
    4525:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4535:	63 74 65 64 00                                      cted.

0000453a <_ZZ21Select_Operation_ModevE3__c_8>:
    453a:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    454a:	65 64 00                                            ed.

0000454d <_ZZ21Select_Operation_ModevE3__c_7>:
    454d:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    455d:	63 74 65 64 00                                      cted.

00004562 <_ZZ21Select_Operation_ModevE3__c_6>:
    4562:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4572:	63 74 65 64 00                                      cted.

00004577 <_ZZ21Select_Operation_ModevE3__c_5>:
    4577:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    4587:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

00004593 <_ZZ21Select_Operation_ModevE3__c_4>:
    4593:	53 63 68 65 64 75 6c 65 72 20 73 65 6c 65 63 74     Scheduler select
    45a3:	65 64 00                                            ed.

000045a6 <_ZZ21Select_Operation_ModevE3__c_3>:
    45a6:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45b6:	74 65 64 00                                         ted.

000045ba <_ZZ21Select_Operation_ModevE3__c_2>:
    45ba:	54 69 6d 65 72 20 4d 6f 64 65 20 73 65 6c 65 63     Timer Mode selec
    45ca:	74 65 64 00                                         ted.

000045ce <_ZZ21Select_Operation_ModevE3__c_1>:
    45ce:	44 61 74 61 20 4c 6f 67 67 65 72 20 4d 6f 64 65     Data Logger Mode
    45de:	20 73 65 6c 65 63 74 65 64 00                        selected.

000045e8 <_ZZ21Select_Operation_ModevE3__c_0>:
    45e8:	73 63 68 65 64 75 6c 65 20 41 75 74 6f 20 4d 6f     schedule Auto Mo
    45f8:	64 65 20 73 65 6c 65 63 74 65 64 00                 de selected.

00004604 <_ZZ21Select_Operation_ModevE3__c>:
    4604:	4d 61 6e 75 61 6c 20 4d 6f 64 65 20 73 65 6c 65     Manual Mode sele
    4614:	63 74 65 64 00                                      cted.

00004619 <digital_pin_to_timer_PGM>:
    4619:	00 00 0a 0b 02 09 0c 0d 0e 08 07 03 04 01 00 00     ................
	...
    4645:	12 11 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000465f <digital_pin_to_bit_mask_PGM>:
    465f:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
    466f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
    467f:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
    468f:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
    469f:	04 08 10 20 40 80                                   ... @.

000046a5 <digital_pin_to_port_PGM>:
    46a5:	05 05 05 05 07 05 08 08 08 08 02 02 02 02 0a 0a     ................
    46b5:	08 08 04 04 04 04 01 01 01 01 01 01 01 01 03 03     ................
    46c5:	03 03 03 03 03 03 04 07 07 07 0c 0c 0c 0c 0c 0c     ................
    46d5:	0c 0c 02 02 02 02 06 06 06 06 06 06 06 06 0b 0b     ................
    46e5:	0b 0b 0b 0b 0b 0b                                   ......

000046eb <port_to_input_PGM>:
    46eb:	00 00 20 00 23 00 26 00 29 00 2c 00 2f 00 32 00     .. .#.&.).,./.2.
    46fb:	00 01 00 00 03 01 06 01 09 01                       ..........

00004705 <port_to_output_PGM>:
    4705:	00 00 22 00 25 00 28 00 2b 00 2e 00 31 00 34 00     ..".%.(.+...1.4.
    4715:	02 01 00 00 05 01 08 01 0b 01                       ..........

0000471f <port_to_mode_PGM>:
    471f:	00 00 21 00 24 00 27 00 2a 00 2d 00 30 00 33 00     ..!.$.'.*.-.0.3.
    472f:	01 01 00 00 04 01 07 01 0a 01                       ..........

00004739 <_ZL18MODEM_CONFIG_TABLE>:
    4739:	72 74 04 92 74 04 48 94 04 78 c4 0c 72 b4 04        rt..t.H..x..r..

00004748 <__ctors_start>:
    4748:	02 66       	ori	r16, 0x62	; 98
    474a:	a5 cf       	rjmp	.-182    	; 0x4696 <digital_pin_to_bit_mask_PGM+0x37>
    474c:	35 d0       	rcall	.+106    	; 0x47b8 <_ZN5Print5writeEPKcj>
    474e:	e8 d8       	rcall	.-3632   	; 0x3920 <_ZZ12Pub_Sub_DataPcPhjhE3__c_30+0xf>
    4750:	9e de       	rcall	.-708    	; 0x448e <_ZZ13Run_OperationvE3__c_1+0x1>

00004752 <__ctors_end>:
    4752:	11 24       	eor	r1, r1
    4754:	1f be       	out	0x3f, r1	; 63
    4756:	cf ef       	ldi	r28, 0xFF	; 255
    4758:	d1 e2       	ldi	r29, 0x21	; 33
    475a:	de bf       	out	0x3e, r29	; 62
    475c:	cd bf       	out	0x3d, r28	; 61
    475e:	00 e0       	ldi	r16, 0x00	; 0
    4760:	0c bf       	out	0x3c, r16	; 60

00004762 <__do_copy_data>:
    4762:	18 e0       	ldi	r17, 0x08	; 8
    4764:	a0 e0       	ldi	r26, 0x00	; 0
    4766:	b2 e0       	ldi	r27, 0x02	; 2
    4768:	e0 e7       	ldi	r30, 0x70	; 112
    476a:	f9 ed       	ldi	r31, 0xD9	; 217
    476c:	01 e0       	ldi	r16, 0x01	; 1
    476e:	0b bf       	out	0x3b, r16	; 59
    4770:	02 c0       	rjmp	.+4      	; 0x4776 <__do_copy_data+0x14>
    4772:	07 90       	elpm	r0, Z+
    4774:	0d 92       	st	X+, r0
    4776:	a8 3e       	cpi	r26, 0xE8	; 232
    4778:	b1 07       	cpc	r27, r17
    477a:	d9 f7       	brne	.-10     	; 0x4772 <__do_copy_data+0x10>

0000477c <__do_clear_bss>:
    477c:	2a e1       	ldi	r18, 0x1A	; 26
    477e:	a8 ee       	ldi	r26, 0xE8	; 232
    4780:	b8 e0       	ldi	r27, 0x08	; 8
    4782:	01 c0       	rjmp	.+2      	; 0x4786 <.do_clear_bss_start>

00004784 <.do_clear_bss_loop>:
    4784:	1d 92       	st	X+, r1

00004786 <.do_clear_bss_start>:
    4786:	a2 3d       	cpi	r26, 0xD2	; 210
    4788:	b2 07       	cpc	r27, r18
    478a:	e1 f7       	brne	.-8      	; 0x4784 <.do_clear_bss_loop>

0000478c <__do_global_ctors>:
    478c:	13 e2       	ldi	r17, 0x23	; 35
    478e:	c9 ea       	ldi	r28, 0xA9	; 169
    4790:	d3 e2       	ldi	r29, 0x23	; 35
    4792:	00 e0       	ldi	r16, 0x00	; 0
    4794:	06 c0       	rjmp	.+12     	; 0x47a2 <__do_global_ctors+0x16>
    4796:	21 97       	sbiw	r28, 0x01	; 1
    4798:	01 09       	sbc	r16, r1
    479a:	80 2f       	mov	r24, r16
    479c:	fe 01       	movw	r30, r28
    479e:	0e 94 83 e7 	call	0x1cf06	; 0x1cf06 <__tablejump2__>
    47a2:	c4 3a       	cpi	r28, 0xA4	; 164
    47a4:	d1 07       	cpc	r29, r17
    47a6:	80 e0       	ldi	r24, 0x00	; 0
    47a8:	08 07       	cpc	r16, r24
    47aa:	a9 f7       	brne	.-22     	; 0x4796 <__do_global_ctors+0xa>
    47ac:	0e 94 ff 81 	call	0x103fe	; 0x103fe <main>
    47b0:	0c 94 b6 ec 	jmp	0x1d96c	; 0x1d96c <_exit>

000047b4 <__bad_interrupt>:
    47b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000047b8 <_ZN5Print5writeEPKcj>:
			}
			Wireless_Pump_On_Off(_ePUMP_OFF,i);
			//Wireless_Pump_On_Off(i,_kOFF);
		}
	}
}
    47b8:	dc 01       	movw	r26, r24
    47ba:	ed 91       	ld	r30, X+
    47bc:	fc 91       	ld	r31, X
    47be:	02 80       	ldd	r0, Z+2	; 0x02
    47c0:	f3 81       	ldd	r31, Z+3	; 0x03
    47c2:	e0 2d       	mov	r30, r0
    47c4:	19 94       	eijmp

000047c6 <_ZN5EERef6updateEh>:
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47c6:	ff 92       	push	r15
    47c8:	0f 93       	push	r16
    47ca:	1f 93       	push	r17
    47cc:	cf 93       	push	r28
    47ce:	df 93       	push	r29
    47d0:	ec 01       	movw	r28, r24
    47d2:	f6 2e       	mov	r15, r22

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    47d4:	08 81       	ld	r16, Y
    47d6:	19 81       	ldd	r17, Y+1	; 0x01
    47d8:	c8 01       	movw	r24, r16
    47da:	0e 94 9a ec 	call	0x1d934	; 0x1d934 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47de:	f8 16       	cp	r15, r24
    47e0:	21 f0       	breq	.+8      	; 0x47ea <_ZN5EERef6updateEh+0x24>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    47e2:	6f 2d       	mov	r22, r15
    47e4:	c8 01       	movw	r24, r16
    47e6:	0e 94 a2 ec 	call	0x1d944	; 0x1d944 <eeprom_write_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    47ea:	ce 01       	movw	r24, r28
    47ec:	df 91       	pop	r29
    47ee:	cf 91       	pop	r28
    47f0:	1f 91       	pop	r17
    47f2:	0f 91       	pop	r16
    47f4:	ff 90       	pop	r15
    47f6:	08 95       	ret

000047f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>:
    47f8:	0f 93       	push	r16
    47fa:	1f 93       	push	r17
    47fc:	cf 93       	push	r28
    47fe:	df 93       	push	r29
    4800:	1f 92       	push	r1
    4802:	1f 92       	push	r1
    4804:	cd b7       	in	r28, 0x3d	; 61
    4806:	de b7       	in	r29, 0x3e	; 62
    4808:	8b 01       	movw	r16, r22
    480a:	fb 01       	movw	r30, r22
    480c:	60 81       	ld	r22, Z
    480e:	9a 83       	std	Y+2, r25	; 0x02
    4810:	89 83       	std	Y+1, r24	; 0x01
    4812:	ce 01       	movw	r24, r28
    4814:	01 96       	adiw	r24, 0x01	; 1
    4816:	d7 df       	rcall	.-82     	; 0x47c6 <_ZN5EERef6updateEh>
    4818:	c8 01       	movw	r24, r16
    481a:	0f 90       	pop	r0
    481c:	0f 90       	pop	r0
    481e:	df 91       	pop	r29
    4820:	cf 91       	pop	r28
    4822:	1f 91       	pop	r17
    4824:	0f 91       	pop	r16
    4826:	08 95       	ret

00004828 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>:
    4828:	ef 92       	push	r14
    482a:	ff 92       	push	r15
    482c:	0f 93       	push	r16
    482e:	1f 93       	push	r17
    4830:	cf 93       	push	r28
    4832:	df 93       	push	r29
    4834:	1f 92       	push	r1
    4836:	1f 92       	push	r1
    4838:	cd b7       	in	r28, 0x3d	; 61
    483a:	de b7       	in	r29, 0x3e	; 62
    483c:	84 e4       	ldi	r24, 0x44	; 68
    483e:	e8 2e       	mov	r14, r24
    4840:	86 e1       	ldi	r24, 0x16	; 22
    4842:	f8 2e       	mov	r15, r24
    4844:	05 e3       	ldi	r16, 0x35	; 53
    4846:	1e e0       	ldi	r17, 0x0E	; 14
    4848:	f7 01       	movw	r30, r14
    484a:	61 91       	ld	r22, Z+
    484c:	7f 01       	movw	r14, r30
    484e:	1a 83       	std	Y+2, r17	; 0x02
    4850:	09 83       	std	Y+1, r16	; 0x01
    4852:	ce 01       	movw	r24, r28
    4854:	01 96       	adiw	r24, 0x01	; 1
    4856:	b7 df       	rcall	.-146    	; 0x47c6 <_ZN5EERef6updateEh>
    4858:	0f 5f       	subi	r16, 0xFF	; 255
    485a:	1f 4f       	sbci	r17, 0xFF	; 255
    485c:	09 33       	cpi	r16, 0x39	; 57
    485e:	fe e0       	ldi	r31, 0x0E	; 14
    4860:	1f 07       	cpc	r17, r31
    4862:	91 f7       	brne	.-28     	; 0x4848 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3+0x20>
    4864:	84 e4       	ldi	r24, 0x44	; 68
    4866:	96 e1       	ldi	r25, 0x16	; 22
    4868:	0f 90       	pop	r0
    486a:	0f 90       	pop	r0
    486c:	df 91       	pop	r29
    486e:	cf 91       	pop	r28
    4870:	1f 91       	pop	r17
    4872:	0f 91       	pop	r16
    4874:	ff 90       	pop	r15
    4876:	ef 90       	pop	r14
    4878:	08 95       	ret

0000487a <_Z22Hard_Coded_Flush_Valveh>:
    487a:	81 e0       	ldi	r24, 0x01	; 1
    487c:	08 95       	ret

0000487e <_Z35Wireless_Motor_Enable_Disable_Checkv>:

unsigned char Wireless_Motor_Enable_Disable_Check(void)
{
	if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kWIRELESS_PUMP_ENABLE_DISABLE_PLOT)
    487e:	80 91 78 10 	lds	r24, 0x1078	; 0x801078 <_sExtra_Plot+0xd9>
    4882:	8d 36       	cpi	r24, 0x6D	; 109
    4884:	09 f0       	breq	.+2      	; 0x4888 <_Z35Wireless_Motor_Enable_Disable_Checkv+0xa>
    4886:	7c c0       	rjmp	.+248    	; 0x4980 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x102>
	{
		if(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET &&
    4888:	80 91 77 10 	lds	r24, 0x1077	; 0x801077 <_sExtra_Plot+0xd8>
    488c:	88 23       	and	r24, r24
    488e:	09 f4       	brne	.+2      	; 0x4892 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14>
    4890:	56 c0       	rjmp	.+172    	; 0x493e <_Z35Wireless_Motor_Enable_Disable_Checkv+0xc0>
		_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number != 0)
		{
			switch(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0])
    4892:	80 91 7c 10 	lds	r24, 0x107C	; 0x80107c <_sExtra_Plot+0xdd>
    4896:	86 36       	cpi	r24, 0x66	; 102
    4898:	31 f0       	breq	.+12     	; 0x48a6 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x28>
    489a:	87 36       	cpi	r24, 0x67	; 103
    489c:	41 f0       	breq	.+16     	; 0x48ae <_Z35Wireless_Motor_Enable_Disable_Checkv+0x30>
    489e:	85 36       	cpi	r24, 0x65	; 101
    48a0:	41 f4       	brne	.+16     	; 0x48b2 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x34>
			{
				case 101:
				{
					
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48a2:	82 e0       	ldi	r24, 0x02	; 2
    48a4:	01 c0       	rjmp	.+2      	; 0x48a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				case 102:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 3;
    48a6:	83 e0       	ldi	r24, 0x03	; 3
    48a8:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>

				}break;
    48ac:	2d c0       	rjmp	.+90     	; 0x4908 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
				
				case 103:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 4;
    48ae:	84 e0       	ldi	r24, 0x04	; 4
    48b0:	fb cf       	rjmp	.-10     	; 0x48a8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x2a>
				}break;
				
				default:
				{
					_sRuble_Parameters.Pump_Selected_For_Irrigation = 2;
    48b2:	82 e0       	ldi	r24, 0x02	; 2
    48b4:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    48b8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    48bc:	81 30       	cpi	r24, 0x01	; 1
    48be:	21 f5       	brne	.+72     	; 0x4908 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x8a>
					{
						_kSERAIL_MON_WRITE("Selected valve number wireless pump > ");
    48c0:	63 ec       	ldi	r22, 0xC3	; 195
    48c2:	78 e0       	ldi	r23, 0x08	; 8
    48c4:	8f e6       	ldi	r24, 0x6F	; 111
    48c6:	96 e1       	ldi	r25, 0x16	; 22
    48c8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[_kWIRELESS_PUMP_ENABLE_DISABLE_PLOT - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[0]);
    48cc:	4a e0       	ldi	r20, 0x0A	; 10
    48ce:	50 e0       	ldi	r21, 0x00	; 0
    48d0:	60 91 7c 10 	lds	r22, 0x107C	; 0x80107c <_sExtra_Plot+0xdd>
    48d4:	8f e6       	ldi	r24, 0x6F	; 111
    48d6:	96 e1       	ldi	r25, 0x16	; 22
    48d8:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    48dc:	8f e6       	ldi	r24, 0x6F	; 111
    48de:	96 e1       	ldi	r25, 0x16	; 22
    48e0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE("Selected wireless pump > ");
    48e4:	69 ea       	ldi	r22, 0xA9	; 169
    48e6:	78 e0       	ldi	r23, 0x08	; 8
    48e8:	8f e6       	ldi	r24, 0x6F	; 111
    48ea:	96 e1       	ldi	r25, 0x16	; 22
    48ec:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Pump_Selected_For_Irrigation);
    48f0:	4a e0       	ldi	r20, 0x0A	; 10
    48f2:	50 e0       	ldi	r21, 0x00	; 0
    48f4:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    48f8:	8f e6       	ldi	r24, 0x6F	; 111
    48fa:	96 e1       	ldi	r25, 0x16	; 22
    48fc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    4900:	8f e6       	ldi	r24, 0x6F	; 111
    4902:	96 e1       	ldi	r25, 0x16	; 22
    4904:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
				}break;
			}
			
			if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    4908:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    490c:	81 11       	cpse	r24, r1
    490e:	46 c0       	rjmp	.+140    	; 0x499c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    4910:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4914:	81 30       	cpi	r24, 0x01	; 1
    4916:	51 f4       	brne	.+20     	; 0x492c <_Z35Wireless_Motor_Enable_Disable_Checkv+0xae>
				{
					_kSERAIL_MON_WRITE("wireless pump 3....................,,,,,,, ");
    4918:	6d e7       	ldi	r22, 0x7D	; 125
    491a:	78 e0       	ldi	r23, 0x08	; 8
    491c:	8f e6       	ldi	r24, 0x6F	; 111
    491e:	96 e1       	ldi	r25, 0x16	; 22
    4920:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4924:	8f e6       	ldi	r24, 0x6F	; 111
    4926:	96 e1       	ldi	r25, 0x16	; 22
    4928:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    492c:	83 e0       	ldi	r24, 0x03	; 3
    492e:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4932:	64 e2       	ldi	r22, 0x24	; 36
    4934:	76 e1       	ldi	r23, 0x16	; 22
    4936:	80 e3       	ldi	r24, 0x30	; 48
    4938:	9c e0       	ldi	r25, 0x0C	; 12
    493a:	5e df       	rcall	.-324    	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    493c:	2f c0       	rjmp	.+94     	; 0x499c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
		else
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    493e:	81 e0       	ldi	r24, 0x01	; 1
    4940:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4944:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    4948:	88 23       	and	r24, r24
    494a:	09 f4       	brne	.+2      	; 0x494e <_Z35Wireless_Motor_Enable_Disable_Checkv+0xd0>
    494c:	48 c0       	rjmp	.+144    	; 0x49de <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    494e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4952:	81 30       	cpi	r24, 0x01	; 1
    4954:	51 f4       	brne	.+20     	; 0x496a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
				{
					_kSERAIL_MON_WRITE("wireless pump 4 ##########################");
    4956:	62 e5       	ldi	r22, 0x52	; 82
    4958:	78 e0       	ldi	r23, 0x08	; 8
    495a:	8f e6       	ldi	r24, 0x6F	; 111
    495c:	96 e1       	ldi	r25, 0x16	; 22
    495e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    4962:	8f e6       	ldi	r24, 0x6F	; 111
    4964:	96 e1       	ldi	r25, 0x16	; 22
    4966:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    496a:	10 92 24 16 	sts	0x1624, r1	; 0x801624 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    496e:	64 e2       	ldi	r22, 0x24	; 36
    4970:	76 e1       	ldi	r23, 0x16	; 22
    4972:	80 e3       	ldi	r24, 0x30	; 48
    4974:	9c e0       	ldi	r25, 0x0C	; 12
    4976:	40 df       	rcall	.-384    	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
    4978:	85 e0       	ldi	r24, 0x05	; 5
    497a:	0e 94 1a ab 	call	0x15634	; 0x15634 <_Z22Valve_Grouping_Handlerh>
    497e:	0e c0       	rjmp	.+28     	; 0x499c <_Z35Wireless_Motor_Enable_Disable_Checkv+0x11e>
			}
		}
	}
	else
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
    4980:	81 e0       	ldi	r24, 0x01	; 1
    4982:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>
		
		if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    4986:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    498a:	88 23       	and	r24, r24
    498c:	41 f1       	breq	.+80     	; 0x49de <_Z35Wireless_Motor_Enable_Disable_Checkv+0x160>
		{
			_sRuble_Parameters.Pump_Selected_For_Irrigation = 1;
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    498e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4992:	81 30       	cpi	r24, 0x01	; 1
    4994:	51 f7       	brne	.-44     	; 0x496a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xec>
			{
				_kSERAIL_MON_WRITE("wireless pump 5 ");
    4996:	61 e4       	ldi	r22, 0x41	; 65
    4998:	78 e0       	ldi	r23, 0x08	; 8
    499a:	df cf       	rjmp	.-66     	; 0x495a <_Z35Wireless_Motor_Enable_Disable_Checkv+0xdc>
	
	
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    499c:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    49a0:	82 30       	cpi	r24, 0x02	; 2
    49a2:	d8 f0       	brcs	.+54     	; 0x49da <_Z35Wireless_Motor_Enable_Disable_Checkv+0x15c>
	{
		if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    49a4:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    49a8:	81 11       	cpse	r24, r1
    49aa:	32 c0       	rjmp	.+100    	; 0x4a10 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    49ac:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    49b0:	81 30       	cpi	r24, 0x01	; 1
    49b2:	51 f4       	brne	.+20     	; 0x49c8 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x14a>
			{
				_kSERAIL_MON_WRITE("wireless pump 3 ");
    49b4:	60 e3       	ldi	r22, 0x30	; 48
    49b6:	78 e0       	ldi	r23, 0x08	; 8
    49b8:	8f e6       	ldi	r24, 0x6F	; 111
    49ba:	96 e1       	ldi	r25, 0x16	; 22
    49bc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    49c0:	8f e6       	ldi	r24, 0x6F	; 111
    49c2:	96 e1       	ldi	r25, 0x16	; 22
    49c4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_WAIT;
    49c8:	83 e0       	ldi	r24, 0x03	; 3
    49ca:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
			_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    49ce:	64 e2       	ldi	r22, 0x24	; 36
    49d0:	76 e1       	ldi	r23, 0x16	; 22
    49d2:	80 e3       	ldi	r24, 0x30	; 48
    49d4:	9c e0       	ldi	r25, 0x0C	; 12
    49d6:	10 cf       	rjmp	.-480    	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    49d8:	08 95       	ret
		}
	}
	else
	{
		/* Turn on wired motor */
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation == 1)
    49da:	81 30       	cpi	r24, 0x01	; 1
    49dc:	c9 f4       	brne	.+50     	; 0x4a10 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
		{
			if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    49de:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    49e2:	88 23       	and	r24, r24
    49e4:	a9 f0       	breq	.+42     	; 0x4a10 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x192>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    49e6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    49ea:	81 30       	cpi	r24, 0x01	; 1
    49ec:	51 f4       	brne	.+20     	; 0x4a02 <_Z35Wireless_Motor_Enable_Disable_Checkv+0x184>
				{
					_kSERAIL_MON_WRITE("wireless pump 5 ");
    49ee:	6f e1       	ldi	r22, 0x1F	; 31
    49f0:	78 e0       	ldi	r23, 0x08	; 8
    49f2:	8f e6       	ldi	r24, 0x6F	; 111
    49f4:	96 e1       	ldi	r25, 0x16	; 22
    49f6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    49fa:	8f e6       	ldi	r24, 0x6F	; 111
    49fc:	96 e1       	ldi	r25, 0x16	; 22
    49fe:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				_sRuble_Parameters.Wireless_Pump_Command = _kRESET;
    4a02:	10 92 24 16 	sts	0x1624, r1	; 0x801624 <_sRuble_Parameters+0xbf>
				_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    4a06:	64 e2       	ldi	r22, 0x24	; 36
    4a08:	76 e1       	ldi	r23, 0x16	; 22
    4a0a:	80 e3       	ldi	r24, 0x30	; 48
    4a0c:	9c e0       	ldi	r25, 0x0C	; 12
    4a0e:	f4 ce       	rjmp	.-536    	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
				// ######################### what should to to switch the pump ###################// 
				//Valve_Grouping_Handler(_kOFF_FOR_WIRELESS_SAFETY);
			}
		}
	}
}
    4a10:	08 95       	ret

00004a12 <_Z17Flush_Controllingv>:
		}break;
	}
}

unsigned char Flush_Controlling(void)
{	
    4a12:	e0 e1       	ldi	r30, 0x10	; 16
    4a14:	f0 e1       	ldi	r31, 0x10	; 16
    4a16:	25 e1       	ldi	r18, 0x15	; 21
    4a18:	30 e1       	ldi	r19, 0x10	; 16
    4a1a:	80 e0       	ldi	r24, 0x00	; 0
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
	{
		if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[valve_num] != _kRESET)
    4a1c:	91 91       	ld	r25, Z+
    4a1e:	91 11       	cpse	r25, r1
		{
			total_valve++;
    4a20:	8f 5f       	subi	r24, 0xFF	; 255
	static unsigned int flush_monitor_timer = _kRESET;
	static unsigned char flush_monitoring_trigger = _kRESET;
	static unsigned char flush_time_save = 0,total_valve;
	
	total_valve = 0;
	for(unsigned valve_num=0; valve_num<5;valve_num++)
    4a22:	2e 17       	cp	r18, r30
    4a24:	3f 07       	cpc	r19, r31
    4a26:	d1 f7       	brne	.-12     	; 0x4a1c <_Z17Flush_Controllingv+0xa>
    4a28:	80 93 ec 08 	sts	0x08EC, r24	; 0x8008ec <_ZZ17Flush_ControllingvE11total_valve>
		{
			total_valve++;
		}
	}
	
	if(total_valve < 2)
    4a2c:	82 30       	cpi	r24, 0x02	; 2
    4a2e:	18 f4       	brcc	.+6      	; 0x4a36 <_Z17Flush_Controllingv+0x24>
	{
		_gRunning_Flush_Num = _kSET;
    4a30:	81 e0       	ldi	r24, 0x01	; 1
    4a32:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
	}
	
	
	
	
	if(_sSchedules.Flush_Schedule_In_Every > 14400)
    4a36:	80 91 ba 0b 	lds	r24, 0x0BBA	; 0x800bba <_sSchedules+0x2ca>
    4a3a:	90 91 bb 0b 	lds	r25, 0x0BBB	; 0x800bbb <_sSchedules+0x2cb>
    4a3e:	81 34       	cpi	r24, 0x41	; 65
    4a40:	98 43       	sbci	r25, 0x38	; 56
    4a42:	30 f0       	brcs	.+12     	; 0x4a50 <_Z17Flush_Controllingv+0x3e>
	{
		_sSchedules.Flush_Schedule_In_Every = 14400;
    4a44:	80 e4       	ldi	r24, 0x40	; 64
    4a46:	98 e3       	ldi	r25, 0x38	; 56
    4a48:	90 93 bb 0b 	sts	0x0BBB, r25	; 0x800bbb <_sSchedules+0x2cb>
    4a4c:	80 93 ba 0b 	sts	0x0BBA, r24	; 0x800bba <_sSchedules+0x2ca>
		
	}
	
	if(_sSchedules.Flush_Schedule_For > 900)
    4a50:	80 91 bc 0b 	lds	r24, 0x0BBC	; 0x800bbc <_sSchedules+0x2cc>
    4a54:	90 91 bd 0b 	lds	r25, 0x0BBD	; 0x800bbd <_sSchedules+0x2cd>
    4a58:	85 38       	cpi	r24, 0x85	; 133
    4a5a:	93 40       	sbci	r25, 0x03	; 3
    4a5c:	30 f0       	brcs	.+12     	; 0x4a6a <_Z17Flush_Controllingv+0x58>
	{
		_sSchedules.Flush_Schedule_For = 900;
    4a5e:	84 e8       	ldi	r24, 0x84	; 132
    4a60:	93 e0       	ldi	r25, 0x03	; 3
    4a62:	90 93 bd 0b 	sts	0x0BBD, r25	; 0x800bbd <_sSchedules+0x2cd>
    4a66:	80 93 bc 0b 	sts	0x0BBC, r24	; 0x800bbc <_sSchedules+0x2cc>
	}
	
	
	if(flush_time_save > 40)
    4a6a:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <_ZZ17Flush_ControllingvE15flush_time_save>
    4a6e:	89 32       	cpi	r24, 0x29	; 41
    4a70:	20 f0       	brcs	.+8      	; 0x4a7a <_Z17Flush_Controllingv+0x68>
	{
		flush_time_save = 0;
    4a72:	10 92 eb 08 	sts	0x08EB, r1	; 0x8008eb <_ZZ17Flush_ControllingvE15flush_time_save>
		_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4a76:	d8 de       	rcall	.-592    	; 0x4828 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4a78:	03 c0       	rjmp	.+6      	; 0x4a80 <_Z17Flush_Controllingv+0x6e>
	}
	else
	{
		flush_time_save++;
    4a7a:	8f 5f       	subi	r24, 0xFF	; 255
    4a7c:	80 93 eb 08 	sts	0x08EB, r24	; 0x8008eb <_ZZ17Flush_ControllingvE15flush_time_save>
	}
	
	
	
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER)
    4a80:	80 91 0c 10 	lds	r24, 0x100C	; 0x80100c <_sExtra_Plot+0x6d>
    4a84:	89 36       	cpi	r24, 0x69	; 105
    4a86:	09 f0       	breq	.+2      	; 0x4a8a <_Z17Flush_Controllingv+0x78>
    4a88:	38 c1       	rjmp	.+624    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
	{
		if(_sRuble_Parameters.Operation_Mode != _eOPER_MOD_MANUAL)
    4a8a:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    4a8e:	82 30       	cpi	r24, 0x02	; 2
    4a90:	09 f4       	brne	.+2      	; 0x4a94 <_Z17Flush_Controllingv+0x82>
    4a92:	f9 c0       	rjmp	.+498    	; 0x4c86 <_Z17Flush_Controllingv+0x274>
		{
			if(!_sRuble_Parameters.Flush_Retry)
    4a94:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <_sRuble_Parameters+0xe9>
    4a98:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <_sRuble_Parameters+0xea>
    4a9c:	89 2b       	or	r24, r25
    4a9e:	09 f0       	breq	.+2      	; 0x4aa2 <_Z17Flush_Controllingv+0x90>
    4aa0:	2c c1       	rjmp	.+600    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
			{
				_kSERAIL_MON_WRITE("Flush_Running 0: ");
    4aa2:	68 ee       	ldi	r22, 0xE8	; 232
    4aa4:	72 e0       	ldi	r23, 0x02	; 2
    4aa6:	8f e6       	ldi	r24, 0x6F	; 111
    4aa8:	96 e1       	ldi	r25, 0x16	; 22
    4aaa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sRuble_Parameters.Pump_Run_Timer_for_flush);
    4aae:	40 91 44 16 	lds	r20, 0x1644	; 0x801644 <_sRuble_Parameters+0xdf>
    4ab2:	50 91 45 16 	lds	r21, 0x1645	; 0x801645 <_sRuble_Parameters+0xe0>
    4ab6:	60 91 46 16 	lds	r22, 0x1646	; 0x801646 <_sRuble_Parameters+0xe1>
    4aba:	70 91 47 16 	lds	r23, 0x1647	; 0x801647 <_sRuble_Parameters+0xe2>
    4abe:	2a e0       	ldi	r18, 0x0A	; 10
    4ac0:	30 e0       	ldi	r19, 0x00	; 0
    4ac2:	8f e6       	ldi	r24, 0x6F	; 111
    4ac4:	96 e1       	ldi	r25, 0x16	; 22
    4ac6:	0e 94 27 d1 	call	0x1a24e	; 0x1a24e <_ZN5Print5printEmi>
				Serial.println();
    4aca:	8f e6       	ldi	r24, 0x6F	; 111
    4acc:	96 e1       	ldi	r25, 0x16	; 22
    4ace:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    4ad2:	8f e6       	ldi	r24, 0x6F	; 111
    4ad4:	96 e1       	ldi	r25, 0x16	; 22
    4ad6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				
				if(_sRuble_Parameters.Pump_Run_Timer_for_flush > _sSchedules.Flush_Schedule_In_Every)
    4ada:	80 91 ba 0b 	lds	r24, 0x0BBA	; 0x800bba <_sSchedules+0x2ca>
    4ade:	90 91 bb 0b 	lds	r25, 0x0BBB	; 0x800bbb <_sSchedules+0x2cb>
    4ae2:	a0 e0       	ldi	r26, 0x00	; 0
    4ae4:	b0 e0       	ldi	r27, 0x00	; 0
    4ae6:	40 91 44 16 	lds	r20, 0x1644	; 0x801644 <_sRuble_Parameters+0xdf>
    4aea:	50 91 45 16 	lds	r21, 0x1645	; 0x801645 <_sRuble_Parameters+0xe0>
    4aee:	60 91 46 16 	lds	r22, 0x1646	; 0x801646 <_sRuble_Parameters+0xe1>
    4af2:	70 91 47 16 	lds	r23, 0x1647	; 0x801647 <_sRuble_Parameters+0xe2>
    4af6:	84 17       	cp	r24, r20
    4af8:	95 07       	cpc	r25, r21
    4afa:	a6 07       	cpc	r26, r22
    4afc:	b7 07       	cpc	r27, r23
    4afe:	08 f0       	brcs	.+2      	; 0x4b02 <_Z17Flush_Controllingv+0xf0>
    4b00:	fc c0       	rjmp	.+504    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 1: ");
					//_kSERIAL_MON_CLEAR();
					if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    4b02:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4b06:	81 30       	cpi	r24, 0x01	; 1
    4b08:	09 f0       	breq	.+2      	; 0x4b0c <_Z17Flush_Controllingv+0xfa>
    4b0a:	68 c0       	rjmp	.+208    	; 0x4bdc <_Z17Flush_Controllingv+0x1ca>
					{
						if(_sRuble_Parameters.Flush_Running)
    4b0c:	80 91 48 16 	lds	r24, 0x1648	; 0x801648 <_sRuble_Parameters+0xe3>
    4b10:	90 91 49 16 	lds	r25, 0x1649	; 0x801649 <_sRuble_Parameters+0xe4>
    4b14:	89 2b       	or	r24, r25
    4b16:	f9 f0       	breq	.+62     	; 0x4b56 <_Z17Flush_Controllingv+0x144>
						{
							Hard_Coded_Flush_Valve(_kON);
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    4b18:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4b1c:	81 30       	cpi	r24, 0x01	; 1
    4b1e:	51 f4       	brne	.+20     	; 0x4b34 <_Z17Flush_Controllingv+0x122>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
    4b20:	66 ed       	ldi	r22, 0xD6	; 214
    4b22:	72 e0       	ldi	r23, 0x02	; 2
    4b24:	8f e6       	ldi	r24, 0x6F	; 111
    4b26:	96 e1       	ldi	r25, 0x16	; 22
    4b28:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    4b2c:	8f e6       	ldi	r24, 0x6F	; 111
    4b2e:	96 e1       	ldi	r25, 0x16	; 22
    4b30:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b34:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    4b38:	81 11       	cpse	r24, r1
    4b3a:	13 c1       	rjmp	.+550    	; 0x4d62 <_Z17Flush_Controllingv+0x350>
    4b3c:	80 91 ba 0b 	lds	r24, 0x0BBA	; 0x800bba <_sSchedules+0x2ca>
    4b40:	90 91 bb 0b 	lds	r25, 0x0BBB	; 0x800bbb <_sSchedules+0x2cb>
							{
								_kSERAIL_MON_WRITE("Flush_Running 2: ");
								_kSERIAL_MON_CLEAR();
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
    4b44:	89 2b       	or	r24, r25
    4b46:	09 f4       	brne	.+2      	; 0x4b4a <_Z17Flush_Controllingv+0x138>
    4b48:	0c c1       	rjmp	.+536    	; 0x4d62 <_Z17Flush_Controllingv+0x350>
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4b4a:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    4b4e:	81 30       	cpi	r24, 0x01	; 1
    4b50:	09 f0       	breq	.+2      	; 0x4b54 <_Z17Flush_Controllingv+0x142>
    4b52:	d3 c0       	rjmp	.+422    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
    4b54:	06 c1       	rjmp	.+524    	; 0x4d62 <_Z17Flush_Controllingv+0x350>
								//_kSERAIL_MON_WRITE("Flush_Running 4: ");
								//_kSERIAL_MON_CLEAR();
								
								//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
							
								if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER)
    4b56:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    4b5a:	83 30       	cpi	r24, 0x03	; 3
    4b5c:	49 f4       	brne	.+18     	; 0x4b70 <_Z17Flush_Controllingv+0x15e>
								{
									_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    4b5e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4b62:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4b66:	88 60       	ori	r24, 0x08	; 8
    4b68:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4b6c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
								}
							
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4b70:	84 e0       	ldi	r24, 0x04	; 4
    4b72:	0e 94 1d c5 	call	0x18a3a	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
								{
								
								}
							
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4b76:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4b7a:	88 23       	and	r24, r24
    4b7c:	09 f4       	brne	.+2      	; 0x4b80 <_Z17Flush_Controllingv+0x16e>
    4b7e:	7d c0       	rjmp	.+250    	; 0x4c7a <_Z17Flush_Controllingv+0x268>
								{
									
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4b80:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4b84:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4b88:	90 62       	ori	r25, 0x20	; 32
    4b8a:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4b8e:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4b92:	84 e0       	ldi	r24, 0x04	; 4
    4b94:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4b98:	82 e0       	ldi	r24, 0x02	; 2
    4b9a:	80 93 25 10 	sts	0x1025, r24	; 0x801025 <_sExtra_Plot+0x86>
								
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4b9e:	10 92 24 10 	sts	0x1024, r1	; 0x801024 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4ba2:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4ba6:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4baa:	91 e0       	ldi	r25, 0x01	; 1
    4bac:	90 93 e8 08 	sts	0x08E8, r25	; 0x8008e8 <__data_end>
									
									if(_gRunning_Flush_Num >= total_valve)
    4bb0:	80 91 9a 0c 	lds	r24, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
    4bb4:	20 91 ec 08 	lds	r18, 0x08EC	; 0x8008ec <_ZZ17Flush_ControllingvE11total_valve>
    4bb8:	82 17       	cp	r24, r18
    4bba:	58 f0       	brcs	.+22     	; 0x4bd2 <_Z17Flush_Controllingv+0x1c0>
									{
										_gRunning_Flush_Num = _kSET;
    4bbc:	90 93 9a 0c 	sts	0x0C9A, r25	; 0x800c9a <_gRunning_Flush_Num>
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4bc0:	10 92 44 16 	sts	0x1644, r1	; 0x801644 <_sRuble_Parameters+0xdf>
    4bc4:	10 92 45 16 	sts	0x1645, r1	; 0x801645 <_sRuble_Parameters+0xe0>
    4bc8:	10 92 46 16 	sts	0x1646, r1	; 0x801646 <_sRuble_Parameters+0xe1>
    4bcc:	10 92 47 16 	sts	0x1647, r1	; 0x801647 <_sRuble_Parameters+0xe2>
    4bd0:	03 c0       	rjmp	.+6      	; 0x4bd8 <_Z17Flush_Controllingv+0x1c6>
									}
									else
									{
										_gRunning_Flush_Num++;
    4bd2:	8f 5f       	subi	r24, 0xFF	; 255
    4bd4:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
									}
									
									_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4bd8:	27 de       	rcall	.-946    	; 0x4828 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4bda:	4f c0       	rjmp	.+158    	; 0x4c7a <_Z17Flush_Controllingv+0x268>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4bdc:	90 91 0b 10 	lds	r25, 0x100B	; 0x80100b <_sExtra_Plot+0x6c>
    4be0:	91 11       	cpse	r25, r1
    4be2:	bd c0       	rjmp	.+378    	; 0x4d5e <_Z17Flush_Controllingv+0x34c>
						_sSchedules.Flush_Schedule_In_Every == 0)
    4be4:	20 91 ba 0b 	lds	r18, 0x0BBA	; 0x800bba <_sSchedules+0x2ca>
    4be8:	30 91 bb 0b 	lds	r19, 0x0BBB	; 0x800bbb <_sSchedules+0x2cb>
								Hard_Coded_Flush_Valve(_kON);   /* turn off the valve */
						}
					}
					else
					{
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
    4bec:	23 2b       	or	r18, r19
    4bee:	09 f4       	brne	.+2      	; 0x4bf2 <_Z17Flush_Controllingv+0x1e0>
    4bf0:	b6 c0       	rjmp	.+364    	; 0x4d5e <_Z17Flush_Controllingv+0x34c>
							return 1;
						}
						
						
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4bf2:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    4bf6:	91 11       	cpse	r25, r1
    4bf8:	03 c0       	rjmp	.+6      	; 0x4c00 <_Z17Flush_Controllingv+0x1ee>
    4bfa:	88 23       	and	r24, r24
    4bfc:	09 f4       	brne	.+2      	; 0x4c00 <_Z17Flush_Controllingv+0x1ee>
    4bfe:	81 c0       	rjmp	.+258    	; 0x4d02 <_Z17Flush_Controllingv+0x2f0>
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    4c00:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    4c04:	81 30       	cpi	r24, 0x01	; 1
    4c06:	09 f0       	breq	.+2      	; 0x4c0a <_Z17Flush_Controllingv+0x1f8>
    4c08:	1a c1       	rjmp	.+564    	; 0x4e3e <_Z17Flush_Controllingv+0x42c>
    4c0a:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    4c0e:	81 30       	cpi	r24, 0x01	; 1
    4c10:	09 f4       	brne	.+2      	; 0x4c14 <_Z17Flush_Controllingv+0x202>
    4c12:	42 c1       	rjmp	.+644    	; 0x4e98 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING)
								{
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    4c14:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    4c18:	85 30       	cpi	r24, 0x05	; 5
    4c1a:	09 f4       	brne	.+2      	; 0x4c1e <_Z17Flush_Controllingv+0x20c>
    4c1c:	2d c1       	rjmp	.+602    	; 0x4e78 <_Z17Flush_Controllingv+0x466>
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
									return 0;
								}
							}
							
							if(Start_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4c1e:	84 e0       	ldi	r24, 0x04	; 4
    4c20:	0e 94 61 c4 	call	0x188c2	; 0x188c2 <_Z26Start_Extra_Plot_Operationh>
    4c24:	88 23       	and	r24, r24
    4c26:	09 f4       	brne	.+2      	; 0x4c2a <_Z17Flush_Controllingv+0x218>
    4c28:	da c0       	rjmp	.+436    	; 0x4dde <_Z17Flush_Controllingv+0x3cc>
							{
							     if(_sRuble_Parameters.Debug_Mode == _kSET)
    4c2a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4c2e:	81 30       	cpi	r24, 0x01	; 1
    4c30:	51 f4       	brne	.+20     	; 0x4c46 <_Z17Flush_Controllingv+0x234>
							     {
									_kSERAIL_MON_WRITE("Flush_Running 6: ");
    4c32:	62 eb       	ldi	r22, 0xB2	; 178
    4c34:	72 e0       	ldi	r23, 0x02	; 2
    4c36:	8f e6       	ldi	r24, 0x6F	; 111
    4c38:	96 e1       	ldi	r25, 0x16	; 22
    4c3a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4c3e:	8f e6       	ldi	r24, 0x6F	; 111
    4c40:	96 e1       	ldi	r25, 0x16	; 22
    4c42:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								 }
								
								_sRuble_Parameters.Flush_Running =  _sSchedules.Flush_Schedule_For;
    4c46:	80 91 bc 0b 	lds	r24, 0x0BBC	; 0x800bbc <_sSchedules+0x2cc>
    4c4a:	90 91 bd 0b 	lds	r25, 0x0BBD	; 0x800bbd <_sSchedules+0x2cd>
    4c4e:	90 93 49 16 	sts	0x1649, r25	; 0x801649 <_sRuble_Parameters+0xe4>
    4c52:	80 93 48 16 	sts	0x1648, r24	; 0x801648 <_sRuble_Parameters+0xe3>
								_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4c56:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4c5a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4c5e:	90 62       	ori	r25, 0x20	; 32
    4c60:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4c64:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
								_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4c68:	84 e0       	ldi	r24, 0x04	; 4
    4c6a:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4c6e:	82 e0       	ldi	r24, 0x02	; 2
    4c70:	80 93 25 10 	sts	0x1025, r24	; 0x801025 <_sExtra_Plot+0x86>
							
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_ON;
							
								_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kSET;
    4c74:	81 e0       	ldi	r24, 0x01	; 1
    4c76:	80 93 24 10 	sts	0x1024, r24	; 0x801024 <_sExtra_Plot+0x85>
							
								Hard_Coded_Flush_Valve(_kOFF);
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4c7a:	6a e9       	ldi	r22, 0x9A	; 154
    4c7c:	7c e0       	ldi	r23, 0x0C	; 12
    4c7e:	8f e3       	ldi	r24, 0x3F	; 63
    4c80:	9e e0       	ldi	r25, 0x0E	; 14
    4c82:	ba dd       	rcall	.-1164   	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    4c84:	3a c0       	rjmp	.+116    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
				
			}
		}
		else
		{
			if(_sRuble_Parameters.Flush_Running || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4c86:	80 91 48 16 	lds	r24, 0x1648	; 0x801648 <_sRuble_Parameters+0xe3>
    4c8a:	90 91 49 16 	lds	r25, 0x1649	; 0x801649 <_sRuble_Parameters+0xe4>
    4c8e:	89 2b       	or	r24, r25
    4c90:	21 f4       	brne	.+8      	; 0x4c9a <_Z17Flush_Controllingv+0x288>
    4c92:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4c96:	88 23       	and	r24, r24
    4c98:	a1 f1       	breq	.+104    	; 0x4d02 <_Z17Flush_Controllingv+0x2f0>
			{
				//_kSERAIL_MON_WRITE("Flush_Running 7: ");
				//_kSERIAL_MON_CLEAR();
				_sRuble_Parameters.Flush_Running = _kRESET;
    4c9a:	10 92 49 16 	sts	0x1649, r1	; 0x801649 <_sRuble_Parameters+0xe4>
    4c9e:	10 92 48 16 	sts	0x1648, r1	; 0x801648 <_sRuble_Parameters+0xe3>
				
				
				if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4ca2:	84 e0       	ldi	r24, 0x04	; 4
    4ca4:	0e 94 1d c5 	call	0x18a3a	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
				{
					
				}
				
				//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
				if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4ca8:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4cac:	88 23       	and	r24, r24
    4cae:	09 f1       	breq	.+66     	; 0x4cf2 <_Z17Flush_Controllingv+0x2e0>
				{
					//_kSERAIL_MON_WRITE("Flush_Running 8: ");
					//_kSERIAL_MON_CLEAR();
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4cb0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4cb4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4cb8:	90 62       	ori	r25, 0x20	; 32
    4cba:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4cbe:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4cc2:	84 e0       	ldi	r24, 0x04	; 4
    4cc4:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4cc8:	82 e0       	ldi	r24, 0x02	; 2
    4cca:	80 93 25 10 	sts	0x1025, r24	; 0x801025 <_sExtra_Plot+0x86>
					
					//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
					_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4cce:	10 92 24 10 	sts	0x1024, r1	; 0x801024 <_sExtra_Plot+0x85>
					flush_monitor_timer = _kRESET;
    4cd2:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4cd6:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
					flush_monitoring_trigger = _kSET;
    4cda:	81 e0       	ldi	r24, 0x01	; 1
    4cdc:	80 93 e8 08 	sts	0x08E8, r24	; 0x8008e8 <__data_end>
					_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4ce0:	10 92 44 16 	sts	0x1644, r1	; 0x801644 <_sRuble_Parameters+0xdf>
    4ce4:	10 92 45 16 	sts	0x1645, r1	; 0x801645 <_sRuble_Parameters+0xe0>
    4ce8:	10 92 46 16 	sts	0x1646, r1	; 0x801646 <_sRuble_Parameters+0xe1>
    4cec:	10 92 47 16 	sts	0x1647, r1	; 0x801647 <_sRuble_Parameters+0xe2>
					_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4cf0:	9b dd       	rcall	.-1226   	; 0x4828 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
				}
				_sRuble_Parameters.Flush_Valve_Off_Timer = _kRESET;
    4cf2:	10 92 51 16 	sts	0x1651, r1	; 0x801651 <_sRuble_Parameters+0xec>
    4cf6:	10 92 50 16 	sts	0x1650, r1	; 0x801650 <_sRuble_Parameters+0xeb>
		}
	}
	
	
	
	if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation == _kRESET)
    4cfa:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4cfe:	81 11       	cpse	r24, r1
    4d00:	1d c0       	rjmp	.+58     	; 0x4d3c <_Z17Flush_Controllingv+0x32a>
	{
		if(flush_monitoring_trigger)
    4d02:	80 91 e8 08 	lds	r24, 0x08E8	; 0x8008e8 <__data_end>
    4d06:	88 23       	and	r24, r24
    4d08:	c9 f0       	breq	.+50     	; 0x4d3c <_Z17Flush_Controllingv+0x32a>
		{
			if(flush_monitor_timer > 60)
    4d0a:	80 91 e9 08 	lds	r24, 0x08E9	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
    4d0e:	90 91 ea 08 	lds	r25, 0x08EA	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d12:	8d 33       	cpi	r24, 0x3D	; 61
    4d14:	91 05       	cpc	r25, r1
    4d16:	68 f0       	brcs	.+26     	; 0x4d32 <_Z17Flush_Controllingv+0x320>
			{
				flush_monitor_timer = _kRESET;
    4d18:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d1c:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
				if(flush_monitoring_trigger)
				{
					Hard_Coded_Flush_Valve(_kON);
					if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)))
    4d20:	64 e0       	ldi	r22, 0x04	; 4
    4d22:	80 e0       	ldi	r24, 0x00	; 0
    4d24:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    4d28:	88 23       	and	r24, r24
    4d2a:	41 f0       	breq	.+16     	; 0x4d3c <_Z17Flush_Controllingv+0x32a>
					{
						flush_monitoring_trigger = _kRESET;
    4d2c:	10 92 e8 08 	sts	0x08E8, r1	; 0x8008e8 <__data_end>
    4d30:	05 c0       	rjmp	.+10     	; 0x4d3c <_Z17Flush_Controllingv+0x32a>
				}
			
			}
			else
			{
				flush_monitor_timer++;
    4d32:	01 96       	adiw	r24, 0x01	; 1
    4d34:	90 93 ea 08 	sts	0x08EA, r25	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4d38:	80 93 e9 08 	sts	0x08E9, r24	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
			}
		}
	}
	
	
	if(_gRunning_Flush_Num == _kRESET || _gRunning_Flush_Num > total_valve)
    4d3c:	80 91 9a 0c 	lds	r24, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
    4d40:	88 23       	and	r24, r24
    4d42:	21 f0       	breq	.+8      	; 0x4d4c <_Z17Flush_Controllingv+0x33a>
    4d44:	90 91 ec 08 	lds	r25, 0x08EC	; 0x8008ec <_ZZ17Flush_ControllingvE11total_valve>
    4d48:	98 17       	cp	r25, r24
    4d4a:	40 f4       	brcc	.+16     	; 0x4d5c <_Z17Flush_Controllingv+0x34a>
	{
		_gRunning_Flush_Num = _kSET;
    4d4c:	81 e0       	ldi	r24, 0x01	; 1
    4d4e:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
		_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d52:	6a e9       	ldi	r22, 0x9A	; 154
    4d54:	7c e0       	ldi	r23, 0x0C	; 12
    4d56:	8f e3       	ldi	r24, 0x3F	; 63
    4d58:	9e e0       	ldi	r25, 0x0E	; 14
    4d5a:	4e cd       	rjmp	.-1380   	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
	}
	
}
    4d5c:	08 95       	ret
						if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET ||
						_sSchedules.Flush_Schedule_In_Every == 0)
						{
							//_kSERAIL_MON_WRITE("Flush_Running 5: ");
							//_kSERIAL_MON_CLEAR();
							return 1;
    4d5e:	81 e0       	ldi	r24, 0x01	; 1
							}
							
							if(_sPump_Parameter.Irrigation_Status || 
							_sSchedules.Flush_Schedule_In_Every == 0 || _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								_kEEPROM_WRITE(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    4d60:	08 95       	ret
    4d62:	6a e9       	ldi	r22, 0x9A	; 154
    4d64:	7c e0       	ldi	r23, 0x0C	; 12
    4d66:	8f e3       	ldi	r24, 0x3F	; 63
    4d68:	9e e0       	ldi	r25, 0x0E	; 14
    4d6a:	46 dd       	rcall	.-1396   	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
								
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    4d6c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4d70:	81 30       	cpi	r24, 0x01	; 1
    4d72:	51 f4       	brne	.+20     	; 0x4d88 <_Z17Flush_Controllingv+0x376>
								{
									_kSERAIL_MON_WRITE("Flush_Running 3: ");
    4d74:	64 ec       	ldi	r22, 0xC4	; 196
    4d76:	72 e0       	ldi	r23, 0x02	; 2
    4d78:	8f e6       	ldi	r24, 0x6F	; 111
    4d7a:	96 e1       	ldi	r25, 0x16	; 22
    4d7c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    4d80:	8f e6       	ldi	r24, 0x6F	; 111
    4d82:	96 e1       	ldi	r25, 0x16	; 22
    4d84:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								if(_sPump_Parameter.Irrigation_Status || _sPump_Parameter.Irrigation_Status == _kSET)
    4d88:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    4d8c:	88 23       	and	r24, r24
    4d8e:	31 f0       	breq	.+12     	; 0x4d9c <_Z17Flush_Controllingv+0x38a>
								{
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4d90:	88 e5       	ldi	r24, 0x58	; 88
    4d92:	92 e0       	ldi	r25, 0x02	; 2
    4d94:	90 93 4f 16 	sts	0x164F, r25	; 0x80164f <_sRuble_Parameters+0xea>
    4d98:	80 93 4e 16 	sts	0x164E, r24	; 0x80164e <_sRuble_Parameters+0xe9>
								}
								
								if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4d9c:	84 e0       	ldi	r24, 0x04	; 4
    4d9e:	0e 94 1d c5 	call	0x18a3a	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
								{
									
								}
								
								//if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status != _kSCHEDULER_OFF)
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4da2:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4da6:	88 23       	and	r24, r24
    4da8:	09 f4       	brne	.+2      	; 0x4dac <_Z17Flush_Controllingv+0x39a>
    4daa:	ab cf       	rjmp	.-170    	; 0x4d02 <_Z17Flush_Controllingv+0x2f0>
								{
									_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dac:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4db0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4db4:	90 62       	ori	r25, 0x20	; 32
    4db6:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4dba:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
									_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4dbe:	84 e0       	ldi	r24, 0x04	; 4
    4dc0:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4dc4:	82 e0       	ldi	r24, 0x02	; 2
    4dc6:	80 93 25 10 	sts	0x1025, r24	; 0x801025 <_sExtra_Plot+0x86>
									
									//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
									_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4dca:	10 92 24 10 	sts	0x1024, r1	; 0x801024 <_sExtra_Plot+0x85>
									flush_monitor_timer = _kRESET;
    4dce:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4dd2:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
									flush_monitoring_trigger = _kSET;
    4dd6:	81 e0       	ldi	r24, 0x01	; 1
    4dd8:	80 93 e8 08 	sts	0x08E8, r24	; 0x8008e8 <__data_end>
    4ddc:	2e c0       	rjmp	.+92     	; 0x4e3a <_Z17Flush_Controllingv+0x428>
								//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kSET)
								if(1)
								{
									//_kSERAIL_MON_WRITE("Flush_Running 6.1: ");
									//_kSERIAL_MON_CLEAR();
									_sRuble_Parameters.Flush_Retry = _kSCHEDULE_RETRY_TIMER;
    4dde:	88 e5       	ldi	r24, 0x58	; 88
    4de0:	92 e0       	ldi	r25, 0x02	; 2
    4de2:	90 93 4f 16 	sts	0x164F, r25	; 0x80164f <_sRuble_Parameters+0xea>
    4de6:	80 93 4e 16 	sts	0x164E, r24	; 0x80164e <_sRuble_Parameters+0xe9>
								
									if(Stop_Extra_Plot_Operation(_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM))
    4dea:	84 e0       	ldi	r24, 0x04	; 4
    4dec:	0e 94 1d c5 	call	0x18a3a	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
									{
									
									}
								
									if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
    4df0:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    4df4:	88 23       	and	r24, r24
    4df6:	09 f4       	brne	.+2      	; 0x4dfa <_Z17Flush_Controllingv+0x3e8>
    4df8:	84 cf       	rjmp	.-248    	; 0x4d02 <_Z17Flush_Controllingv+0x2f0>
									{
										_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    4dfa:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    4dfe:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    4e02:	90 62       	ori	r25, 0x20	; 32
    4e04:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    4e08:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
										_sRuble_Parameters.Extra_Plot_Feedback = (_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM);
    4e0c:	84 e0       	ldi	r24, 0x04	; 4
    4e0e:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    4e12:	82 e0       	ldi	r24, 0x02	; 2
    4e14:	80 93 25 10 	sts	0x1025, r24	; 0x801025 <_sExtra_Plot+0x86>
									
										//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
										_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
    4e18:	10 92 24 10 	sts	0x1024, r1	; 0x801024 <_sExtra_Plot+0x85>
										flush_monitor_timer = _kRESET;
    4e1c:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <_ZZ17Flush_ControllingvE19flush_monitor_timer+0x1>
    4e20:	10 92 e9 08 	sts	0x08E9, r1	; 0x8008e9 <_ZZ17Flush_ControllingvE19flush_monitor_timer>
										flush_monitoring_trigger = _kSET;
    4e24:	81 e0       	ldi	r24, 0x01	; 1
    4e26:	80 93 e8 08 	sts	0x08E8, r24	; 0x8008e8 <__data_end>
									
										_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
    4e2a:	10 92 44 16 	sts	0x1644, r1	; 0x801644 <_sRuble_Parameters+0xdf>
    4e2e:	10 92 45 16 	sts	0x1645, r1	; 0x801645 <_sRuble_Parameters+0xe0>
    4e32:	10 92 46 16 	sts	0x1646, r1	; 0x801646 <_sRuble_Parameters+0xe1>
    4e36:	10 92 47 16 	sts	0x1647, r1	; 0x801647 <_sRuble_Parameters+0xe2>
										_kEEPROM_WRITE(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    4e3a:	f6 dc       	rcall	.-1556   	; 0x4828 <_ZN11EEPROMClass3putImEERKT_iS3_.isra.2.constprop.3>
    4e3c:	5e cf       	rjmp	.-324    	; 0x4cfa <_Z17Flush_Controllingv+0x2e8>
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
							}
							
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    4e3e:	82 30       	cpi	r24, 0x02	; 2
    4e40:	08 f4       	brcc	.+2      	; 0x4e44 <_Z17Flush_Controllingv+0x432>
    4e42:	e8 ce       	rjmp	.-560    	; 0x4c14 <_Z17Flush_Controllingv+0x202>
							{
								if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    4e44:	90 e0       	ldi	r25, 0x00	; 0
    4e46:	02 97       	sbiw	r24, 0x02	; 2
    4e48:	2b e0       	ldi	r18, 0x0B	; 11
    4e4a:	28 9f       	mul	r18, r24
    4e4c:	f0 01       	movw	r30, r0
    4e4e:	29 9f       	mul	r18, r25
    4e50:	f0 0d       	add	r31, r0
    4e52:	11 24       	eor	r1, r1
    4e54:	ea 53       	subi	r30, 0x3A	; 58
    4e56:	f4 4f       	sbci	r31, 0xF4	; 244
    4e58:	80 85       	ldd	r24, Z+8	; 0x08
    4e5a:	91 85       	ldd	r25, Z+9	; 0x09
    4e5c:	9c 01       	movw	r18, r24
    4e5e:	23 70       	andi	r18, 0x03	; 3
    4e60:	33 27       	eor	r19, r19
    4e62:	23 30       	cpi	r18, 0x03	; 3
    4e64:	31 05       	cpc	r19, r1
    4e66:	c1 f4       	brne	.+48     	; 0x4e98 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    4e68:	82 ff       	sbrs	r24, 2
    4e6a:	16 c0       	rjmp	.+44     	; 0x4e98 <_Z17Flush_Controllingv+0x486>
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
								(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    4e6c:	88 7b       	andi	r24, 0xB8	; 184
    4e6e:	92 70       	andi	r25, 0x02	; 2
    4e70:	89 2b       	or	r24, r25
    4e72:	09 f4       	brne	.+2      	; 0x4e76 <_Z17Flush_Controllingv+0x464>
    4e74:	cf ce       	rjmp	.-610    	; 0x4c14 <_Z17Flush_Controllingv+0x202>
    4e76:	10 c0       	rjmp	.+32     	; 0x4e98 <_Z17Flush_Controllingv+0x486>
									return 0;
								}
							}
							if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
							{
								if(_sSchedules.Scheduler_Retry_Timer != 0)
    4e78:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    4e7c:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    4e80:	89 2b       	or	r24, r25
    4e82:	09 f4       	brne	.+2      	; 0x4e86 <_Z17Flush_Controllingv+0x474>
    4e84:	cc ce       	rjmp	.-616    	; 0x4c1e <_Z17Flush_Controllingv+0x20c>
								{
									_sRuble_Parameters.Flush_Retry = _sSchedules.Scheduler_Retry_Timer+20;
    4e86:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    4e8a:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    4e8e:	44 96       	adiw	r24, 0x14	; 20
    4e90:	90 93 4f 16 	sts	0x164F, r25	; 0x80164f <_sRuble_Parameters+0xea>
    4e94:	80 93 4e 16 	sts	0x164E, r24	; 0x80164e <_sRuble_Parameters+0xe9>
						
						if(_sRuble_Parameters.Irrigating_Plot != _kRESET || _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation != _kRESET)
						{
							if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
							{
								return 0;
    4e98:	80 e0       	ldi	r24, 0x00	; 0
    4e9a:	08 95       	ret

00004e9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>:
		}
	}
}

char Valve_Grouping_Handler_For_wireless_Pump(unsigned char Target_Plot_Num, unsigned char on_off)
{
    4e9c:	2f 92       	push	r2
    4e9e:	3f 92       	push	r3
    4ea0:	4f 92       	push	r4
    4ea2:	5f 92       	push	r5
    4ea4:	6f 92       	push	r6
    4ea6:	7f 92       	push	r7
    4ea8:	8f 92       	push	r8
    4eaa:	9f 92       	push	r9
    4eac:	af 92       	push	r10
    4eae:	bf 92       	push	r11
    4eb0:	cf 92       	push	r12
    4eb2:	df 92       	push	r13
    4eb4:	ef 92       	push	r14
    4eb6:	ff 92       	push	r15
    4eb8:	0f 93       	push	r16
    4eba:	1f 93       	push	r17
    4ebc:	cf 93       	push	r28
    4ebe:	df 93       	push	r29
    4ec0:	cd b7       	in	r28, 0x3d	; 61
    4ec2:	de b7       	in	r29, 0x3e	; 62
    4ec4:	e8 97       	sbiw	r28, 0x38	; 56
    4ec6:	0f b6       	in	r0, 0x3f	; 63
    4ec8:	f8 94       	cli
    4eca:	de bf       	out	0x3e, r29	; 62
    4ecc:	0f be       	out	0x3f, r0	; 63
    4ece:	cd bf       	out	0x3d, r28	; 61
    4ed0:	48 2e       	mov	r4, r24
    4ed2:	76 2e       	mov	r7, r22
	unsigned char i,j,k,count=0,current_valve_number,compare_id,id_len,data_send_counter = 0,temp_data[30];
	unsigned char valve_number_list[_kMAX_LIRA_SENSOR_NODE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO], total_valve_number,valve_number_not_match_flag=0;
	unsigned char hex_array[] = {0x01,0x02,0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
    4ed4:	88 e0       	ldi	r24, 0x08	; 8
    4ed6:	e3 e6       	ldi	r30, 0x63	; 99
    4ed8:	f2 e0       	ldi	r31, 0x02	; 2
    4eda:	de 01       	movw	r26, r28
    4edc:	9b 96       	adiw	r26, 0x2b	; 43
    4ede:	01 90       	ld	r0, Z+
    4ee0:	0d 92       	st	X+, r0
    4ee2:	8a 95       	dec	r24
    4ee4:	e1 f7       	brne	.-8      	; 0x4ede <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x42>
	
	/******************************************* check weather all valves status is off before starts the irrigation *******************************/
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
    4ee6:	9e 01       	movw	r18, r28
    4ee8:	2f 5f       	subi	r18, 0xFF	; 255
    4eea:	3f 4f       	sbci	r19, 0xFF	; 255
    4eec:	19 01       	movw	r2, r18
    4eee:	8a e2       	ldi	r24, 0x2A	; 42
    4ef0:	d9 01       	movw	r26, r18
    4ef2:	1d 92       	st	X+, r1
    4ef4:	8a 95       	dec	r24
    4ef6:	e9 f7       	brne	.-6      	; 0x4ef2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56>
    4ef8:	0d ef       	ldi	r16, 0xFD	; 253
    4efa:	a0 2e       	mov	r10, r16
    4efc:	0c e0       	ldi	r16, 0x0C	; 12
    4efe:	b0 2e       	mov	r11, r16
    4f00:	21 e5       	ldi	r18, 0x51	; 81
    4f02:	3d e0       	ldi	r19, 0x0D	; 13
    4f04:	65 01       	movw	r12, r10
	total_valve_number = _kRESET;
    4f06:	f1 2c       	mov	r15, r1
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
    4f08:	f6 01       	movw	r30, r12
    4f0a:	80 81       	ld	r24, Z
    4f0c:	81 50       	subi	r24, 0x01	; 1
    4f0e:	8e 30       	cpi	r24, 0x0E	; 14
    4f10:	d8 f5       	brcc	.+118    	; 0x4f88 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xec>
    4f12:	d6 01       	movw	r26, r12
    4f14:	65 e0       	ldi	r22, 0x05	; 5
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
    4f16:	89 81       	ldd	r24, Y+1	; 0x01
    4f18:	88 23       	and	r24, r24
    4f1a:	f9 f0       	breq	.+62     	; 0x4f5a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbe>
    4f1c:	10 e0       	ldi	r17, 0x00	; 0
    4f1e:	70 e0       	ldi	r23, 0x00	; 0
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f20:	87 2f       	mov	r24, r23
    4f22:	90 e0       	ldi	r25, 0x00	; 0
    4f24:	a1 01       	movw	r20, r2
    4f26:	48 0f       	add	r20, r24
    4f28:	59 1f       	adc	r21, r25
    4f2a:	fa 01       	movw	r30, r20
    4f2c:	50 81       	ld	r21, Z
    4f2e:	55 23       	and	r21, r21
    4f30:	d1 f0       	breq	.+52     	; 0x4f66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
					{
						if(_sLira_Node_Param[i].Euro_Valve_Group[j])
    4f32:	11 96       	adiw	r26, 0x01	; 1
    4f34:	4c 91       	ld	r20, X
    4f36:	11 97       	sbiw	r26, 0x01	; 1
    4f38:	44 23       	and	r20, r20
    4f3a:	69 f0       	breq	.+26     	; 0x4f56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
						{
							if(valve_number_list[k] == _sLira_Node_Param[i].Euro_Valve_Group[j])
    4f3c:	54 17       	cp	r21, r20
    4f3e:	99 f0       	breq	.+38     	; 0x4f66 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xca>
							{
								break;
							}
							
							if(valve_number_list[k] != _sLira_Node_Param[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    4f40:	42 e0       	ldi	r20, 0x02	; 2
    4f42:	50 e0       	ldi	r21, 0x00	; 0
    4f44:	4c 0f       	add	r20, r28
    4f46:	5d 1f       	adc	r21, r29
    4f48:	84 0f       	add	r24, r20
    4f4a:	95 1f       	adc	r25, r21
    4f4c:	fc 01       	movw	r30, r24
    4f4e:	80 81       	ld	r24, Z
    4f50:	81 11       	cpse	r24, r1
    4f52:	01 c0       	rjmp	.+2      	; 0x4f56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xba>
							{
								valve_number_not_match_flag = _kSET;
    4f54:	11 e0       	ldi	r17, 0x01	; 1
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
			{
				if(valve_number_list[0] != 0)    // if list is empty
				{
					for(k=0;valve_number_list[k]!=0;k++)
    4f56:	7f 5f       	subi	r23, 0xFF	; 255
    4f58:	e3 cf       	rjmp	.-58     	; 0x4f20 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84>
						}
					}
				}
				else
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j])   // check weather valve is there or not
    4f5a:	11 96       	adiw	r26, 0x01	; 1
    4f5c:	8c 91       	ld	r24, X
    4f5e:	11 97       	sbiw	r26, 0x01	; 1
    4f60:	81 11       	cpse	r24, r1
    4f62:	03 c0       	rjmp	.+6      	; 0x4f6a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xce>
    4f64:	0d c0       	rjmp	.+26     	; 0x4f80 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_not_match_flag = _kSET;
					}
				}
				if(valve_number_not_match_flag)
    4f66:	11 23       	and	r17, r17
    4f68:	59 f0       	breq	.+22     	; 0x4f80 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
				{
					if(_sLira_Node_Param[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    4f6a:	11 96       	adiw	r26, 0x01	; 1
    4f6c:	4c 91       	ld	r20, X
    4f6e:	11 97       	sbiw	r26, 0x01	; 1
    4f70:	4d 30       	cpi	r20, 0x0D	; 13
    4f72:	30 f4       	brcc	.+12     	; 0x4f80 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe4>
					{
						valve_number_list[total_valve_number] = _sLira_Node_Param[i].Euro_Valve_Group[j];
    4f74:	c1 01       	movw	r24, r2
    4f76:	8f 0d       	add	r24, r15
    4f78:	91 1d       	adc	r25, r1
    4f7a:	fc 01       	movw	r30, r24
    4f7c:	40 83       	st	Z, r20
						total_valve_number++;
    4f7e:	f3 94       	inc	r15
    4f80:	61 50       	subi	r22, 0x01	; 1
    4f82:	11 96       	adiw	r26, 0x01	; 1
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		if(_sLira_Node_Param[i].Lira_Sensor_Number > 0 && _sLira_Node_Param[i].Lira_Sensor_Number < _kMAX_LIRA_SENSOR_NODE+1)
		{
			for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    4f84:	61 11       	cpse	r22, r1
    4f86:	c7 cf       	rjmp	.-114    	; 0x4f16 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7a>
    4f88:	f6 e0       	ldi	r31, 0x06	; 6
    4f8a:	cf 0e       	add	r12, r31
    4f8c:	d1 1c       	adc	r13, r1
	
	memset((char*)valve_number_list,0,sizeof(valve_number_list));
	total_valve_number = _kRESET;
	valve_number_not_match_flag = _kRESET;
	
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    4f8e:	2c 15       	cp	r18, r12
    4f90:	3d 05       	cpc	r19, r13
    4f92:	09 f0       	breq	.+2      	; 0x4f96 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfa>
    4f94:	b9 cf       	rjmp	.-142    	; 0x4f08 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6c>
			}
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    4f96:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    4f9a:	81 30       	cpi	r24, 0x01	; 1
    4f9c:	59 f5       	brne	.+86     	; 0x4ff4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
	{
		_kSERAIL_MON_WRITE("valve list is : ");
    4f9e:	6e e0       	ldi	r22, 0x0E	; 14
    4fa0:	78 e0       	ldi	r23, 0x08	; 8
    4fa2:	8f e6       	ldi	r24, 0x6F	; 111
    4fa4:	96 e1       	ldi	r25, 0x16	; 22
    4fa6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    4faa:	8f e6       	ldi	r24, 0x6F	; 111
    4fac:	96 e1       	ldi	r25, 0x16	; 22
    4fae:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		for(i=0;valve_number_list[i]!=0;i++)
    4fb2:	e1 2c       	mov	r14, r1
    4fb4:	81 01       	movw	r16, r2
    4fb6:	0e 0d       	add	r16, r14
    4fb8:	11 1d       	adc	r17, r1
    4fba:	d8 01       	movw	r26, r16
    4fbc:	8c 91       	ld	r24, X
    4fbe:	88 23       	and	r24, r24
    4fc0:	c9 f0       	breq	.+50     	; 0x4ff4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x158>
		{
			_kSERAIL_MON_WRITE("valve list enter ");
    4fc2:	6c ef       	ldi	r22, 0xFC	; 252
    4fc4:	77 e0       	ldi	r23, 0x07	; 7
    4fc6:	8f e6       	ldi	r24, 0x6F	; 111
    4fc8:	96 e1       	ldi	r25, 0x16	; 22
    4fca:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    4fce:	f8 01       	movw	r30, r16
    4fd0:	60 81       	ld	r22, Z
    4fd2:	70 e0       	ldi	r23, 0x00	; 0
    4fd4:	4a e0       	ldi	r20, 0x0A	; 10
    4fd6:	50 e0       	ldi	r21, 0x00	; 0
    4fd8:	8f e6       	ldi	r24, 0x6F	; 111
    4fda:	96 e1       	ldi	r25, 0x16	; 22
    4fdc:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
			Serial.println();
    4fe0:	8f e6       	ldi	r24, 0x6F	; 111
    4fe2:	96 e1       	ldi	r25, 0x16	; 22
    4fe4:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
			_kSERIAL_MON_CLEAR();
    4fe8:	8f e6       	ldi	r24, 0x6F	; 111
    4fea:	96 e1       	ldi	r25, 0x16	; 22
    4fec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("valve list is : ");
		_kSERIAL_MON_CLEAR();
	
		for(i=0;valve_number_list[i]!=0;i++)
    4ff0:	e3 94       	inc	r14
    4ff2:	e0 cf       	rjmp	.-64     	; 0x4fb4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x118>
	}
	
	
	
	
	if(on_off == _kFORCEFULYY_OFF)
    4ff4:	f3 e0       	ldi	r31, 0x03	; 3
    4ff6:	7f 12       	cpse	r7, r31
    4ff8:	7d c0       	rjmp	.+250    	; 0x50f4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x258>
    4ffa:	1f e9       	ldi	r17, 0x9F	; 159
    4ffc:	c1 2e       	mov	r12, r17
    4ffe:	1f e0       	ldi	r17, 0x0F	; 15
    5000:	d1 2e       	mov	r13, r17
    5002:	29 e1       	ldi	r18, 0x19	; 25
    5004:	31 e1       	ldi	r19, 0x11	; 17
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
    5006:	d6 01       	movw	r26, r12
    5008:	11 96       	adiw	r26, 0x01	; 1
    500a:	8c 91       	ld	r24, X
    500c:	11 97       	sbiw	r26, 0x01	; 1
    500e:	85 56       	subi	r24, 0x65	; 101
    5010:	8e 30       	cpi	r24, 0x0E	; 14
    5012:	d0 f5       	brcc	.+116    	; 0x5088 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ec>
    5014:	65 e0       	ldi	r22, 0x05	; 5
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
    5016:	89 81       	ldd	r24, Y+1	; 0x01
    5018:	88 23       	and	r24, r24
    501a:	f9 f0       	breq	.+62     	; 0x505a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1be>
    501c:	10 e0       	ldi	r17, 0x00	; 0
    501e:	70 e0       	ldi	r23, 0x00	; 0
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5020:	87 2f       	mov	r24, r23
    5022:	90 e0       	ldi	r25, 0x00	; 0
    5024:	a1 01       	movw	r20, r2
    5026:	48 0f       	add	r20, r24
    5028:	59 1f       	adc	r21, r25
    502a:	fa 01       	movw	r30, r20
    502c:	50 81       	ld	r21, Z
    502e:	55 23       	and	r21, r21
    5030:	d1 f0       	breq	.+52     	; 0x5066 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ca>
						{
							if(_sExtra_Plot[i].Euro_Valve_Group[j])
    5032:	15 96       	adiw	r26, 0x05	; 5
    5034:	4c 91       	ld	r20, X
    5036:	15 97       	sbiw	r26, 0x05	; 5
    5038:	44 23       	and	r20, r20
    503a:	69 f0       	breq	.+26     	; 0x5056 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ba>
							{
								if(valve_number_list[k] == _sExtra_Plot[i].Euro_Valve_Group[j])
    503c:	54 17       	cp	r21, r20
    503e:	99 f0       	breq	.+38     	; 0x5066 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ca>
								{
									break;
								}
								
								if(valve_number_list[k] != _sExtra_Plot[i].Euro_Valve_Group[j] && valve_number_list[k+1] == 0)
    5040:	42 e0       	ldi	r20, 0x02	; 2
    5042:	50 e0       	ldi	r21, 0x00	; 0
    5044:	4c 0f       	add	r20, r28
    5046:	5d 1f       	adc	r21, r29
    5048:	84 0f       	add	r24, r20
    504a:	95 1f       	adc	r25, r21
    504c:	fc 01       	movw	r30, r24
    504e:	80 81       	ld	r24, Z
    5050:	81 11       	cpse	r24, r1
    5052:	01 c0       	rjmp	.+2      	; 0x5056 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ba>
								{
									valve_number_not_match_flag = _kSET;
    5054:	11 e0       	ldi	r17, 0x01	; 1
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
				{
					if(valve_number_list[0] != 0)    // if list is empty
					{
						for(k=0;valve_number_list[k]!=0;k++)
    5056:	7f 5f       	subi	r23, 0xFF	; 255
    5058:	e3 cf       	rjmp	.-58     	; 0x5020 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x184>
							}
						}
					}
					else
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j])   // check weather valve is there or not
    505a:	15 96       	adiw	r26, 0x05	; 5
    505c:	8c 91       	ld	r24, X
    505e:	15 97       	sbiw	r26, 0x05	; 5
    5060:	81 11       	cpse	r24, r1
    5062:	03 c0       	rjmp	.+6      	; 0x506a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1ce>
    5064:	0d c0       	rjmp	.+26     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e4>
						{
							valve_number_not_match_flag = _kSET;
						}
					}
					if(valve_number_not_match_flag)
    5066:	11 23       	and	r17, r17
    5068:	59 f0       	breq	.+22     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e4>
					{
						if(_sExtra_Plot[i].Euro_Valve_Group[j] <= _kMAX_EURO_VALVE * _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    506a:	15 96       	adiw	r26, 0x05	; 5
    506c:	4c 91       	ld	r20, X
    506e:	15 97       	sbiw	r26, 0x05	; 5
    5070:	4d 30       	cpi	r20, 0x0D	; 13
    5072:	30 f4       	brcc	.+12     	; 0x5080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1e4>
						{
							valve_number_list[total_valve_number] = _sExtra_Plot[i].Euro_Valve_Group[j];
    5074:	c1 01       	movw	r24, r2
    5076:	8f 0d       	add	r24, r15
    5078:	91 1d       	adc	r25, r1
    507a:	fc 01       	movw	r30, r24
    507c:	40 83       	st	Z, r20
							total_valve_number++;
    507e:	f3 94       	inc	r15
    5080:	61 50       	subi	r22, 0x01	; 1
    5082:	11 96       	adiw	r26, 0x01	; 1
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
		{
			if(_sExtra_Plot[i].Extra_Plot_Number > (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE) && _sExtra_Plot[i].Extra_Plot_Number < (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE+_kMAX_EXTRA_PLOT+1))
			{
				for(j=0;j<_kMAX_VALVE_FOR_1PLOT;j++)
    5084:	61 11       	cpse	r22, r1
    5086:	c7 cf       	rjmp	.-114    	; 0x5016 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x17a>
    5088:	fb e1       	ldi	r31, 0x1B	; 27
    508a:	cf 0e       	add	r12, r31
    508c:	d1 1c       	adc	r13, r1
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		valve_number_not_match_flag = _kRESET;
		for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    508e:	2c 15       	cp	r18, r12
    5090:	3d 05       	cpc	r19, r13
    5092:	09 f0       	breq	.+2      	; 0x5096 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1fa>
    5094:	b8 cf       	rjmp	.-144    	; 0x5006 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x16a>
				}
				
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    5096:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    509a:	81 30       	cpi	r24, 0x01	; 1
    509c:	e1 f5       	brne	.+120    	; 0x5116 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27a>
		{
			_kSERAIL_MON_WRITE("valve list is : ");
    509e:	6b ee       	ldi	r22, 0xEB	; 235
    50a0:	77 e0       	ldi	r23, 0x07	; 7
    50a2:	8f e6       	ldi	r24, 0x6F	; 111
    50a4:	96 e1       	ldi	r25, 0x16	; 22
    50a6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    50aa:	8f e6       	ldi	r24, 0x6F	; 111
    50ac:	96 e1       	ldi	r25, 0x16	; 22
    50ae:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		
			for(i=0;valve_number_list[i]!=0;i++)
    50b2:	f1 2c       	mov	r15, r1
    50b4:	81 01       	movw	r16, r2
    50b6:	0f 0d       	add	r16, r15
    50b8:	11 1d       	adc	r17, r1
    50ba:	d8 01       	movw	r26, r16
    50bc:	8c 91       	ld	r24, X
    50be:	88 23       	and	r24, r24
    50c0:	e1 f0       	breq	.+56     	; 0x50fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x25e>
			{
				_kSERAIL_MON_WRITE("valve list enter ");
    50c2:	69 ed       	ldi	r22, 0xD9	; 217
    50c4:	77 e0       	ldi	r23, 0x07	; 7
    50c6:	8f e6       	ldi	r24, 0x6F	; 111
    50c8:	96 e1       	ldi	r25, 0x16	; 22
    50ca:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE((int )valve_number_list[i]);
    50ce:	f8 01       	movw	r30, r16
    50d0:	60 81       	ld	r22, Z
    50d2:	70 e0       	ldi	r23, 0x00	; 0
    50d4:	4a e0       	ldi	r20, 0x0A	; 10
    50d6:	50 e0       	ldi	r21, 0x00	; 0
    50d8:	8f e6       	ldi	r24, 0x6F	; 111
    50da:	96 e1       	ldi	r25, 0x16	; 22
    50dc:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
				Serial.println();
    50e0:	8f e6       	ldi	r24, 0x6F	; 111
    50e2:	96 e1       	ldi	r25, 0x16	; 22
    50e4:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
				_kSERIAL_MON_CLEAR();
    50e8:	8f e6       	ldi	r24, 0x6F	; 111
    50ea:	96 e1       	ldi	r25, 0x16	; 22
    50ec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    50f0:	f3 94       	inc	r15
    50f2:	e0 cf       	rjmp	.-64     	; 0x50b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x218>
			}
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    50f4:	a5 e0       	ldi	r26, 0x05	; 5
    50f6:	7a 12       	cpse	r7, r26
    50f8:	66 c1       	rjmp	.+716    	; 0x53c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x52a>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    50fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    50fe:	81 30       	cpi	r24, 0x01	; 1
    5100:	51 f4       	brne	.+20     	; 0x5116 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x27a>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    5102:	6e ea       	ldi	r22, 0xAE	; 174
    5104:	77 e0       	ldi	r23, 0x07	; 7
    5106:	8f e6       	ldi	r24, 0x6F	; 111
    5108:	96 e1       	ldi	r25, 0x16	; 22
    510a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    510e:	8f e6       	ldi	r24, 0x6F	; 111
    5110:	96 e1       	ldi	r25, 0x16	; 22
    5112:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5116:	07 ee       	ldi	r16, 0xE7	; 231
    5118:	1b e0       	ldi	r17, 0x0B	; 11
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("valve list is : ");
			_kSERIAL_MON_CLEAR();
		
			for(i=0;valve_number_list[i]!=0;i++)
    511a:	b4 e0       	ldi	r27, 0x04	; 4
    511c:	cb 2e       	mov	r12, r27
    511e:	d1 2c       	mov	r13, r1
    5120:	e1 2c       	mov	r14, r1
    5122:	f1 2c       	mov	r15, r1
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    5124:	d8 01       	movw	r26, r16
    5126:	8c 91       	ld	r24, X
    5128:	88 23       	and	r24, r24
    512a:	29 f1       	breq	.+74     	; 0x5176 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2da>
    512c:	51 2c       	mov	r5, r1
    512e:	40 e0       	ldi	r20, 0x00	; 0
    5130:	3a c0       	rjmp	.+116    	; 0x51a6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x30a>
    5132:	9e 01       	movw	r18, r28
    5134:	25 5d       	subi	r18, 0xD5	; 213
    5136:	3f 4f       	sbci	r19, 0xFF	; 255
    5138:	3c ab       	std	Y+52, r19	; 0x34
    513a:	2b ab       	std	Y+51, r18	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    513c:	99 24       	eor	r9, r9
    513e:	93 94       	inc	r9
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
								_kSERIAL_MON_PRINT_NUM(i+1);
    5140:	a7 01       	movw	r20, r14
    5142:	4f 5f       	subi	r20, 0xFF	; 255
    5144:	5f 4f       	sbci	r21, 0xFF	; 255
    5146:	5e ab       	std	Y+54, r21	; 0x36
    5148:	4d ab       	std	Y+53, r20	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    514a:	5d e0       	ldi	r21, 0x0D	; 13
    514c:	5e 9d       	mul	r21, r14
    514e:	c0 01       	movw	r24, r0
    5150:	5f 9d       	mul	r21, r15
    5152:	90 0d       	add	r25, r0
    5154:	11 24       	eor	r1, r1
    5156:	dc 01       	movw	r26, r24
    5158:	a9 51       	subi	r26, 0x19	; 25
    515a:	b4 4f       	sbci	r27, 0xF4	; 244
    515c:	b8 af       	std	Y+56, r27	; 0x38
    515e:	af ab       	std	Y+55, r26	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    5160:	eb a9       	ldd	r30, Y+51	; 0x33
    5162:	fc a9       	ldd	r31, Y+52	; 0x34
    5164:	81 91       	ld	r24, Z+
    5166:	fc ab       	std	Y+52, r31	; 0x34
    5168:	eb ab       	std	Y+51, r30	; 0x33
    516a:	85 21       	and	r24, r5
    516c:	49 f5       	brne	.+82     	; 0x51c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x324>
    516e:	93 94       	inc	r9
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    5170:	f4 e0       	ldi	r31, 0x04	; 4
    5172:	9f 12       	cpse	r9, r31
    5174:	f5 cf       	rjmp	.-22     	; 0x5160 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2c4>
    5176:	bf ef       	ldi	r27, 0xFF	; 255
    5178:	eb 1a       	sub	r14, r27
    517a:	fb 0a       	sbc	r15, r27
    517c:	03 5f       	subi	r16, 0xF3	; 243
    517e:	1f 4f       	sbci	r17, 0xFF	; 255
    5180:	e3 e0       	ldi	r30, 0x03	; 3
    5182:	ce 0e       	add	r12, r30
    5184:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
    5186:	f3 e0       	ldi	r31, 0x03	; 3
    5188:	ef 16       	cp	r14, r31
    518a:	f1 04       	cpc	r15, r1
    518c:	59 f6       	brne	.-106    	; 0x5124 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x288>
    518e:	d2 c0       	rjmp	.+420    	; 0x5334 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x498>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5190:	28 17       	cp	r18, r24
    5192:	39 07       	cpc	r19, r25
    5194:	11 f4       	brne	.+4      	; 0x519a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2fe>
						{
							total_valve_number |= hex_array[j];
    5196:	50 81       	ld	r21, Z
    5198:	55 2a       	or	r5, r21
    519a:	01 96       	adiw	r24, 0x01	; 1
    519c:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    519e:	c8 16       	cp	r12, r24
    51a0:	d9 06       	cpc	r13, r25
    51a2:	b1 f7       	brne	.-20     	; 0x5190 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2f4>
		for(i=0;i<_kMAX_EURO_VALVE-1;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Number)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    51a4:	4f 5f       	subi	r20, 0xFF	; 255
    51a6:	f1 01       	movw	r30, r2
    51a8:	e4 0f       	add	r30, r20
    51aa:	f1 1d       	adc	r31, r1
    51ac:	20 81       	ld	r18, Z
    51ae:	22 23       	and	r18, r18
    51b0:	09 f4       	brne	.+2      	; 0x51b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x318>
    51b2:	bf cf       	rjmp	.-130    	; 0x5132 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x296>
    51b4:	c6 01       	movw	r24, r12
    51b6:	03 97       	sbiw	r24, 0x03	; 3
    51b8:	fe 01       	movw	r30, r28
    51ba:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    51bc:	30 e0       	ldi	r19, 0x00	; 0
    51be:	e8 cf       	rjmp	.-48     	; 0x5190 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2f4>
    51c0:	81 2c       	mov	r8, r1
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    51c2:	83 94       	inc	r8
							/****************** if any valve on then turn off that valve first *******************************/
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    51c4:	ac ea       	ldi	r26, 0xAC	; 172
    51c6:	b5 e1       	ldi	r27, 0x15	; 21
    51c8:	e4 e1       	ldi	r30, 0x14	; 20
    51ca:	1d 92       	st	X+, r1
    51cc:	ea 95       	dec	r30
    51ce:	e9 f7       	brne	.-6      	; 0x51ca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x32e>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    51d0:	d8 01       	movw	r26, r16
    51d2:	11 96       	adiw	r26, 0x01	; 1
    51d4:	8c 91       	ld	r24, X
    51d6:	11 97       	sbiw	r26, 0x01	; 1
    51d8:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    51dc:	12 96       	adiw	r26, 0x02	; 2
    51de:	8c 91       	ld	r24, X
    51e0:	12 97       	sbiw	r26, 0x02	; 2
    51e2:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    51e6:	13 96       	adiw	r26, 0x03	; 3
    51e8:	8c 91       	ld	r24, X
    51ea:	13 97       	sbiw	r26, 0x03	; 3
    51ec:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    51f0:	14 96       	adiw	r26, 0x04	; 4
    51f2:	8c 91       	ld	r24, X
    51f4:	14 97       	sbiw	r26, 0x04	; 4
    51f6:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    51fa:	15 96       	adiw	r26, 0x05	; 5
    51fc:	8c 91       	ld	r24, X
    51fe:	15 97       	sbiw	r26, 0x05	; 5
    5200:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    5204:	16 96       	adiw	r26, 0x06	; 6
    5206:	8c 91       	ld	r24, X
    5208:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    520c:	b2 e0       	ldi	r27, 0x02	; 2
    520e:	b0 93 b2 15 	sts	0x15B2, r27	; 0x8015b2 <_sRuble_Parameters+0x4d>
							
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5212:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    5216:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    521a:	90 92 b7 15 	sts	0x15B7, r9	; 0x8015b7 <_sRuble_Parameters+0x52>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    521e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5222:	81 30       	cpi	r24, 0x01	; 1
    5224:	39 f5       	brne	.+78     	; 0x5274 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3d8>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ");
    5226:	6b e8       	ldi	r22, 0x8B	; 139
    5228:	77 e0       	ldi	r23, 0x07	; 7
    522a:	8f e6       	ldi	r24, 0x6F	; 111
    522c:	96 e1       	ldi	r25, 0x16	; 22
    522e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    5232:	4a e0       	ldi	r20, 0x0A	; 10
    5234:	50 e0       	ldi	r21, 0x00	; 0
    5236:	6d a9       	ldd	r22, Y+53	; 0x35
    5238:	7e a9       	ldd	r23, Y+54	; 0x36
    523a:	8f e6       	ldi	r24, 0x6F	; 111
    523c:	96 e1       	ldi	r25, 0x16	; 22
    523e:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    5242:	8f e6       	ldi	r24, 0x6F	; 111
    5244:	96 e1       	ldi	r25, 0x16	; 22
    5246:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    524a:	66 e7       	ldi	r22, 0x76	; 118
    524c:	77 e0       	ldi	r23, 0x07	; 7
    524e:	8f e6       	ldi	r24, 0x6F	; 111
    5250:	96 e1       	ldi	r25, 0x16	; 22
    5252:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,count);
    5256:	4c e0       	ldi	r20, 0x0C	; 12
    5258:	50 e0       	ldi	r21, 0x00	; 0
    525a:	6c ea       	ldi	r22, 0xAC	; 172
    525c:	75 e1       	ldi	r23, 0x15	; 21
    525e:	8f e6       	ldi	r24, 0x6F	; 111
    5260:	96 e1       	ldi	r25, 0x16	; 22
    5262:	aa da       	rcall	.-2732   	; 0x47b8 <_ZN5Print5writeEPKcj>
								Serial.println();
    5264:	8f e6       	ldi	r24, 0x6F	; 111
    5266:	96 e1       	ldi	r25, 0x16	; 22
    5268:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    526c:	8f e6       	ldi	r24, 0x6F	; 111
    526e:	96 e1       	ldi	r25, 0x16	; 22
    5270:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();   // 20/1/2022
    5274:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5278:	8c e0       	ldi	r24, 0x0C	; 12
    527a:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
							
							
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    527e:	88 eb       	ldi	r24, 0xB8	; 184
    5280:	9b e0       	ldi	r25, 0x0B	; 11
    5282:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    5286:	88 23       	and	r24, r24
    5288:	09 f4       	brne	.+2      	; 0x528c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3f0>
    528a:	41 c0       	rjmp	.+130    	; 0x530e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x472>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    528c:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    5290:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5292:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5294:	28 2f       	mov	r18, r24
    5296:	30 e0       	ldi	r19, 0x00	; 0
    5298:	ef a9       	ldd	r30, Y+55	; 0x37
    529a:	f8 ad       	ldd	r31, Y+56	; 0x38
    529c:	e2 0f       	add	r30, r18
    529e:	f3 1f       	adc	r31, r19
    52a0:	d9 01       	movw	r26, r18
    52a2:	a0 54       	subi	r26, 0x40	; 64
    52a4:	ba 4e       	sbci	r27, 0xEA	; 234
    52a6:	41 81       	ldd	r20, Z+1	; 0x01
    52a8:	2c 91       	ld	r18, X
    52aa:	42 17       	cp	r20, r18
    52ac:	11 f0       	breq	.+4      	; 0x52b2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x416>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    52ae:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    52b0:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    52b2:	9f 5f       	subi	r25, 0xFF	; 255
								_kLORA_RECV_DATA();            /* check the received data */
								
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    52b4:	8f 5f       	subi	r24, 0xFF	; 255
    52b6:	86 30       	cpi	r24, 0x06	; 6
    52b8:	68 f3       	brcs	.-38     	; 0x5294 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x3f8>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    52ba:	96 30       	cpi	r25, 0x06	; 6
    52bc:	c9 f4       	brne	.+50     	; 0x52f0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x454>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    52be:	21 e0       	ldi	r18, 0x01	; 1
    52c0:	f8 01       	movw	r30, r16
    52c2:	23 87       	std	Z+11, r18	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    52c4:	20 91 c8 15 	lds	r18, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    52c8:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    52ca:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    52ce:	90 e0       	ldi	r25, 0x00	; 0
    52d0:	98 2f       	mov	r25, r24
    52d2:	88 27       	eor	r24, r24
    52d4:	30 91 ca 15 	lds	r19, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    52d8:	83 2b       	or	r24, r19
    52da:	91 87       	std	Z+9, r25	; 0x09
    52dc:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    52de:	22 23       	and	r18, r18
    52e0:	e9 f0       	breq	.+58     	; 0x531c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x480>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    52e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    52e6:	81 30       	cpi	r24, 0x01	; 1
    52e8:	d9 f4       	brne	.+54     	; 0x5320 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x484>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier on)");
    52ea:	61 e5       	ldi	r22, 0x51	; 81
    52ec:	77 e0       	ldi	r23, 0x07	; 7
    52ee:	06 c0       	rjmp	.+12     	; 0x52fc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x460>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    52f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    52f4:	81 30       	cpi	r24, 0x01	; 1
    52f6:	a1 f4       	brne	.+40     	; 0x5320 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x484>
									{
										_kSERAIL_MON_WRITE("valve id not match(before start)");
    52f8:	60 e3       	ldi	r22, 0x30	; 48
    52fa:	77 e0       	ldi	r23, 0x07	; 7
    52fc:	8f e6       	ldi	r24, 0x6F	; 111
    52fe:	96 e1       	ldi	r25, 0x16	; 22
    5300:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5304:	8f e6       	ldi	r24, 0x6F	; 111
    5306:	96 e1       	ldi	r25, 0x16	; 22
    5308:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    530c:	09 c0       	rjmp	.+18     	; 0x5320 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x484>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    530e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5312:	81 30       	cpi	r24, 0x01	; 1
    5314:	29 f4       	brne	.+10     	; 0x5320 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x484>
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
    5316:	69 e0       	ldi	r22, 0x09	; 9
    5318:	77 e0       	ldi	r23, 0x07	; 7
    531a:	f0 cf       	rjmp	.-32     	; 0x52fc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x460>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    531c:	73 e0       	ldi	r23, 0x03	; 3
    531e:	87 2e       	mov	r8, r23
								{
									_kSERAIL_MON_WRITE("valve fail to off which was already on");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    5320:	68 ee       	ldi	r22, 0xE8	; 232
    5322:	73 e0       	ldi	r23, 0x03	; 3
    5324:	80 e0       	ldi	r24, 0x00	; 0
    5326:	90 e0       	ldi	r25, 0x00	; 0
    5328:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    532c:	33 e0       	ldi	r19, 0x03	; 3
    532e:	83 12       	cpse	r8, r19
    5330:	48 cf       	rjmp	.-368    	; 0x51c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x326>
    5332:	1d cf       	rjmp	.-454    	; 0x516e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x2d2>
			}
			
		}
	}
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
    5334:	43 e0       	ldi	r20, 0x03	; 3
    5336:	74 16       	cp	r7, r20
    5338:	11 f4       	brne	.+4      	; 0x533e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4a2>
    533a:	0c 94 e1 31 	jmp	0x63c2	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
    533e:	55 e0       	ldi	r21, 0x05	; 5
    5340:	75 12       	cpse	r7, r21
    5342:	41 c0       	rjmp	.+130    	; 0x53c6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x52a>
    5344:	6e e0       	ldi	r22, 0x0E	; 14
    5346:	f6 2e       	mov	r15, r22
    5348:	00 e0       	ldi	r16, 0x00	; 0
    534a:	10 e0       	ldi	r17, 0x00	; 0
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    534c:	f5 01       	movw	r30, r10
    534e:	e0 0f       	add	r30, r16
    5350:	f1 1f       	adc	r31, r17
    5352:	e1 81       	ldd	r30, Z+1	; 0x01
    5354:	ed 30       	cpi	r30, 0x0D	; 13
    5356:	68 f0       	brcs	.+26     	; 0x5372 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4d6>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[plot_numbers].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5358:	f0 e0       	ldi	r31, 0x00	; 0
    535a:	e8 51       	subi	r30, 0x18	; 24
    535c:	fa 4e       	sbci	r31, 0xEA	; 234
    535e:	61 e0       	ldi	r22, 0x01	; 1
    5360:	80 81       	ld	r24, Z
    5362:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
						_kDELAY_MS(200);
    5366:	68 ec       	ldi	r22, 0xC8	; 200
    5368:	70 e0       	ldi	r23, 0x00	; 0
    536a:	80 e0       	ldi	r24, 0x00	; 0
    536c:	90 e0       	ldi	r25, 0x00	; 0
    536e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5372:	0f 5f       	subi	r16, 0xFF	; 255
    5374:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5376:	05 30       	cpi	r16, 0x05	; 5
    5378:	11 05       	cpc	r17, r1
    537a:	41 f7       	brne	.-48     	; 0x534c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4b0>
    537c:	fa 94       	dec	r15
    537e:	86 e0       	ldi	r24, 0x06	; 6
    5380:	a8 0e       	add	r10, r24
    5382:	b1 1c       	adc	r11, r1
	
	if(on_off == _kFORCEFULYY_OFF || on_off == _kOFF_FOR_WIRELESS_SAFETY)
	{
		if(on_off == _kOFF_FOR_WIRELESS_SAFETY)
		{
			for(unsigned char plot_numbers=0; plot_numbers<_kMAX_LIRA_SENSOR_NODE; plot_numbers++)
    5384:	f1 10       	cpse	r15, r1
    5386:	e0 cf       	rjmp	.-64     	; 0x5348 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4ac>
						_kDELAY_MS(200);
					}
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
    5388:	80 91 f1 0f 	lds	r24, 0x0FF1	; 0x800ff1 <_sExtra_Plot+0x52>
    538c:	88 36       	cpi	r24, 0x68	; 104
    538e:	11 f0       	breq	.+4      	; 0x5394 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4f8>
    5390:	0c 94 e1 31 	jmp	0x63c2	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
    5394:	05 ef       	ldi	r16, 0xF5	; 245
    5396:	1f e0       	ldi	r17, 0x0F	; 15
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
				{
					if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5398:	d8 01       	movw	r26, r16
    539a:	ed 91       	ld	r30, X+
    539c:	8d 01       	movw	r16, r26
    539e:	ed 30       	cpi	r30, 0x0D	; 13
    53a0:	68 f0       	brcs	.+26     	; 0x53bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x520>
					{
						/********************************* turn on/off the wired valve *********************************/
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    53a2:	f0 e0       	ldi	r31, 0x00	; 0
    53a4:	e8 51       	subi	r30, 0x18	; 24
    53a6:	fa 4e       	sbci	r31, 0xEA	; 234
    53a8:	61 e0       	ldi	r22, 0x01	; 1
    53aa:	80 81       	ld	r24, Z
    53ac:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
						_kDELAY_MS(200);
    53b0:	68 ec       	ldi	r22, 0xC8	; 200
    53b2:	70 e0       	ldi	r23, 0x00	; 0
    53b4:	80 e0       	ldi	r24, 0x00	; 0
    53b6:	90 e0       	ldi	r25, 0x00	; 0
    53b8:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				}
			}
			
			if(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFOOGER_PLOT_NUMBER)
			{
				for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    53bc:	bf e0       	ldi	r27, 0x0F	; 15
    53be:	0a 3f       	cpi	r16, 0xFA	; 250
    53c0:	1b 07       	cpc	r17, r27
    53c2:	51 f7       	brne	.-44     	; 0x5398 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x4fc>
    53c4:	fe c7       	rjmp	.+4092   	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
	
	
	
	
	
	if(on_off == _kON)
    53c6:	e1 e0       	ldi	r30, 0x01	; 1
    53c8:	7e 12       	cpse	r7, r30
    53ca:	21 c1       	rjmp	.+578    	; 0x560e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x772>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    53cc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    53d0:	81 30       	cpi	r24, 0x01	; 1
    53d2:	51 f4       	brne	.+20     	; 0x53e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x54c>
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
    53d4:	6e ed       	ldi	r22, 0xDE	; 222
    53d6:	76 e0       	ldi	r23, 0x06	; 6
    53d8:	8f e6       	ldi	r24, 0x6F	; 111
    53da:	96 e1       	ldi	r25, 0x16	; 22
    53dc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    53e0:	8f e6       	ldi	r24, 0x6F	; 111
    53e2:	96 e1       	ldi	r25, 0x16	; 22
    53e4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    53e8:	07 ee       	ldi	r16, 0xE7	; 231
    53ea:	1b e0       	ldi	r17, 0x0B	; 11
    53ec:	44 e0       	ldi	r20, 0x04	; 4
    53ee:	c4 2e       	mov	r12, r20
    53f0:	d1 2c       	mov	r13, r1
    53f2:	e1 2c       	mov	r14, r1
    53f4:	f1 2c       	mov	r15, r1
						{
							data_send_counter++;
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    53f6:	54 e1       	ldi	r21, 0x14	; 20
    53f8:	85 2e       	mov	r8, r21
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    53fa:	d8 01       	movw	r26, r16
    53fc:	1a 96       	adiw	r26, 0x0a	; 10
    53fe:	8c 91       	ld	r24, X
    5400:	88 23       	and	r24, r24
    5402:	29 f1       	breq	.+74     	; 0x544e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5b2>
    5404:	91 2c       	mov	r9, r1
    5406:	40 e0       	ldi	r20, 0x00	; 0
    5408:	3a c0       	rjmp	.+116    	; 0x547e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5e2>
    540a:	9e 01       	movw	r18, r28
    540c:	25 5d       	subi	r18, 0xD5	; 213
    540e:	3f 4f       	sbci	r19, 0xFF	; 255
    5410:	3c ab       	std	Y+52, r19	; 0x34
    5412:	2b ab       	std	Y+51, r18	; 0x33
			{
				for(k=0;valve_number_list[k]!=0;k++)
    5414:	bb 24       	eor	r11, r11
    5416:	b3 94       	inc	r11
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
								_kSERIAL_MON_PRINT_NUM(i+1);
    5418:	a7 01       	movw	r20, r14
    541a:	4f 5f       	subi	r20, 0xFF	; 255
    541c:	5f 4f       	sbci	r21, 0xFF	; 255
    541e:	5e ab       	std	Y+54, r21	; 0x36
    5420:	4d ab       	std	Y+53, r20	; 0x35
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5422:	5d e0       	ldi	r21, 0x0D	; 13
    5424:	5e 9d       	mul	r21, r14
    5426:	c0 01       	movw	r24, r0
    5428:	5f 9d       	mul	r21, r15
    542a:	90 0d       	add	r25, r0
    542c:	11 24       	eor	r1, r1
    542e:	dc 01       	movw	r26, r24
    5430:	a9 51       	subi	r26, 0x19	; 25
    5432:	b4 4f       	sbci	r27, 0xF4	; 244
    5434:	b8 af       	std	Y+56, r27	; 0x38
    5436:	af ab       	std	Y+55, r26	; 0x37
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
    5438:	eb a9       	ldd	r30, Y+51	; 0x33
    543a:	fc a9       	ldd	r31, Y+52	; 0x34
    543c:	81 91       	ld	r24, Z+
    543e:	fc ab       	std	Y+52, r31	; 0x34
    5440:	eb ab       	std	Y+51, r30	; 0x33
    5442:	89 21       	and	r24, r9
    5444:	49 f5       	brne	.+82     	; 0x5498 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5fc>
    5446:	b3 94       	inc	r11
						}
					}
				}
				
				
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
    5448:	f4 e0       	ldi	r31, 0x04	; 4
    544a:	bf 12       	cpse	r11, r31
    544c:	f5 cf       	rjmp	.-22     	; 0x5438 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x59c>
    544e:	bf ef       	ldi	r27, 0xFF	; 255
    5450:	eb 1a       	sub	r14, r27
    5452:	fb 0a       	sbc	r15, r27
    5454:	03 5f       	subi	r16, 0xF3	; 243
    5456:	1f 4f       	sbci	r17, 0xFF	; 255
    5458:	e3 e0       	ldi	r30, 0x03	; 3
    545a:	ce 0e       	add	r12, r30
    545c:	d1 1c       	adc	r13, r1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("Check valve that all valves are OFF or not");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		for(i=0;i<_kMAX_EURO_VALVE;i++)
    545e:	f4 e0       	ldi	r31, 0x04	; 4
    5460:	ef 16       	cp	r14, r31
    5462:	f1 04       	cpc	r15, r1
    5464:	51 f6       	brne	.-108    	; 0x53fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x55e>
    5466:	d7 c0       	rjmp	.+430    	; 0x5616 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x77a>
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5468:	28 17       	cp	r18, r24
    546a:	39 07       	cpc	r19, r25
    546c:	11 f4       	brne	.+4      	; 0x5472 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5d6>
						{
							total_valve_number |= hex_array[j];
    546e:	50 81       	ld	r21, Z
    5470:	95 2a       	or	r9, r21
    5472:	01 96       	adiw	r24, 0x01	; 1
    5474:	31 96       	adiw	r30, 0x01	; 1
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
    5476:	c8 16       	cp	r12, r24
    5478:	d9 06       	cpc	r13, r25
    547a:	b1 f7       	brne	.-20     	; 0x5468 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5cc>
		for(i=0;i<_kMAX_EURO_VALVE;i++)
		{
			total_valve_number = _kRESET;
			if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
			{
				for(k=0;valve_number_list[k]!=0;k++)
    547c:	4f 5f       	subi	r20, 0xFF	; 255
    547e:	f1 01       	movw	r30, r2
    5480:	e4 0f       	add	r30, r20
    5482:	f1 1d       	adc	r31, r1
    5484:	20 81       	ld	r18, Z
    5486:	22 23       	and	r18, r18
    5488:	09 f4       	brne	.+2      	; 0x548c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5f0>
    548a:	bf cf       	rjmp	.-130    	; 0x540a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x56e>
    548c:	c6 01       	movw	r24, r12
    548e:	03 97       	sbiw	r24, 0x03	; 3
    5490:	fe 01       	movw	r30, r28
    5492:	bb 96       	adiw	r30, 0x2b	; 43
				{
					for(j=0;j < _kNUMBER_OF_VALVE_CONNECT_TO_EURO;j++)
					{
						if(valve_number_list[k] == (i*_kNUMBER_OF_VALVE_CONNECT_TO_EURO) + (j+1))
    5494:	30 e0       	ldi	r19, 0x00	; 0
    5496:	e8 cf       	rjmp	.-48     	; 0x5468 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5cc>
    5498:	a1 2c       	mov	r10, r1
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    549a:	55 24       	eor	r5, r5
    549c:	53 94       	inc	r5
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							data_send_counter++;
    549e:	a3 94       	inc	r10
							
							/****************** if any valve on then turn off that valve first *******************************/
							
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    54a0:	ac ea       	ldi	r26, 0xAC	; 172
    54a2:	b5 e1       	ldi	r27, 0x15	; 21
    54a4:	e8 2d       	mov	r30, r8
    54a6:	1d 92       	st	X+, r1
    54a8:	ea 95       	dec	r30
    54aa:	e9 f7       	brne	.-6      	; 0x54a6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x60a>
							count = 0;
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[0];
    54ac:	d8 01       	movw	r26, r16
    54ae:	11 96       	adiw	r26, 0x01	; 1
    54b0:	8c 91       	ld	r24, X
    54b2:	11 97       	sbiw	r26, 0x01	; 1
    54b4:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[1];
    54b8:	12 96       	adiw	r26, 0x02	; 2
    54ba:	8c 91       	ld	r24, X
    54bc:	12 97       	sbiw	r26, 0x02	; 2
    54be:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[2];
    54c2:	13 96       	adiw	r26, 0x03	; 3
    54c4:	8c 91       	ld	r24, X
    54c6:	13 97       	sbiw	r26, 0x03	; 3
    54c8:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[3];
    54cc:	14 96       	adiw	r26, 0x04	; 4
    54ce:	8c 91       	ld	r24, X
    54d0:	14 97       	sbiw	r26, 0x04	; 4
    54d2:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[4];
    54d6:	15 96       	adiw	r26, 0x05	; 5
    54d8:	8c 91       	ld	r24, X
    54da:	15 97       	sbiw	r26, 0x05	; 5
    54dc:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[i].Euro_Valve_ID[5];
    54e0:	16 96       	adiw	r26, 0x06	; 6
    54e2:	8c 91       	ld	r24, X
    54e4:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    54e8:	b2 e0       	ldi	r27, 0x02	; 2
    54ea:	b0 93 b2 15 	sts	0x15B2, r27	; 0x8015b2 <_sRuble_Parameters+0x4d>
							
							_sRuble_Parameters.Lora_Data_TX[count++] = _kOFF;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    54ee:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    54f2:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = 0;
							_sRuble_Parameters.Lora_Data_TX[count++] = k+1;
    54f6:	b0 92 b7 15 	sts	0x15B7, r11	; 0x8015b7 <_sRuble_Parameters+0x52>
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    54fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    54fe:	81 30       	cpi	r24, 0x01	; 1
    5500:	39 f5       	brne	.+78     	; 0x5550 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6b4>
							{
								_kSERAIL_MON_WRITE_NO_LN("Send On/off Command to EURO valve ;");
    5502:	6a eb       	ldi	r22, 0xBA	; 186
    5504:	76 e0       	ldi	r23, 0x06	; 6
    5506:	8f e6       	ldi	r24, 0x6F	; 111
    5508:	96 e1       	ldi	r25, 0x16	; 22
    550a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(i+1);
    550e:	4a e0       	ldi	r20, 0x0A	; 10
    5510:	50 e0       	ldi	r21, 0x00	; 0
    5512:	6d a9       	ldd	r22, Y+53	; 0x35
    5514:	7e a9       	ldd	r23, Y+54	; 0x36
    5516:	8f e6       	ldi	r24, 0x6F	; 111
    5518:	96 e1       	ldi	r25, 0x16	; 22
    551a:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
								_kSERIAL_MON_CLEAR();
    551e:	8f e6       	ldi	r24, 0x6F	; 111
    5520:	96 e1       	ldi	r25, 0x16	; 22
    5522:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								_kSERAIL_MON_WRITE_NO_LN("Test only TX data : ");
    5526:	65 ea       	ldi	r22, 0xA5	; 165
    5528:	76 e0       	ldi	r23, 0x06	; 6
    552a:	8f e6       	ldi	r24, 0x6F	; 111
    552c:	96 e1       	ldi	r25, 0x16	; 22
    552e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_TX,6);
    5532:	46 e0       	ldi	r20, 0x06	; 6
    5534:	50 e0       	ldi	r21, 0x00	; 0
    5536:	6c ea       	ldi	r22, 0xAC	; 172
    5538:	75 e1       	ldi	r23, 0x15	; 21
    553a:	8f e6       	ldi	r24, 0x6F	; 111
    553c:	96 e1       	ldi	r25, 0x16	; 22
    553e:	3c d9       	rcall	.-3464   	; 0x47b8 <_ZN5Print5writeEPKcj>
								Serial.println();
    5540:	8f e6       	ldi	r24, 0x6F	; 111
    5542:	96 e1       	ldi	r25, 0x16	; 22
    5544:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
								_kSERIAL_MON_CLEAR();
    5548:	8f e6       	ldi	r24, 0x6F	; 111
    554a:	96 e1       	ldi	r25, 0x16	; 22
    554c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    5550:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    5554:	8c e0       	ldi	r24, 0x0C	; 12
    5556:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
							
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    555a:	88 eb       	ldi	r24, 0xB8	; 184
    555c:	9b e0       	ldi	r25, 0x0B	; 11
    555e:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    5562:	88 23       	and	r24, r24
    5564:	09 f4       	brne	.+2      	; 0x5568 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6cc>
    5566:	40 c0       	rjmp	.+128    	; 0x55e8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x74c>
							{
								_kLORA_RECV_DATA();            /* check the received data */
    5568:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
    556c:	90 e0       	ldi	r25, 0x00	; 0
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    556e:	80 e0       	ldi	r24, 0x00	; 0
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
    5570:	28 2f       	mov	r18, r24
    5572:	30 e0       	ldi	r19, 0x00	; 0
    5574:	ef a9       	ldd	r30, Y+55	; 0x37
    5576:	f8 ad       	ldd	r31, Y+56	; 0x38
    5578:	e2 0f       	add	r30, r18
    557a:	f3 1f       	adc	r31, r19
    557c:	d9 01       	movw	r26, r18
    557e:	a0 54       	subi	r26, 0x40	; 64
    5580:	ba 4e       	sbci	r27, 0xEA	; 234
    5582:	41 81       	ldd	r20, Z+1	; 0x01
    5584:	2c 91       	ld	r18, X
    5586:	42 17       	cp	r20, r18
    5588:	11 f0       	breq	.+4      	; 0x558e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6f2>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    558a:	90 e0       	ldi	r25, 0x00	; 0
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[i].Euro_Valve_ID[compare_id] != _sRuble_Parameters.Lora_Data_Rx[compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    558c:	86 e0       	ldi	r24, 0x06	; 6
										id_len = _kRESET;
									}
									id_len++;
    558e:	9f 5f       	subi	r25, 0xFF	; 255
							{
								_kLORA_RECV_DATA();            /* check the received data */
								//RF95_setModeRx_Continuous();
								
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5590:	8f 5f       	subi	r24, 0xFF	; 255
    5592:	86 30       	cpi	r24, 0x06	; 6
    5594:	68 f3       	brcs	.-38     	; 0x5570 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x6d4>
										id_len = _kRESET;
									}
									id_len++;
								}
								
								if(id_len == _kVALVE_ID_LEN)
    5596:	96 30       	cpi	r25, 0x06	; 6
    5598:	c1 f4       	brne	.+48     	; 0x55ca <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x72e>
								{
									_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    559a:	f8 01       	movw	r30, r16
    559c:	53 86       	std	Z+11, r5	; 0x0b
									_sEuro_Valve_Param[i].Euro_Valve_Status =  _sRuble_Parameters.Lora_Data_Rx[8];
    559e:	20 91 c8 15 	lds	r18, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    55a2:	22 87       	std	Z+10, r18	; 0x0a
									_sEuro_Valve_Param[i].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[i].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    55a4:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    55a8:	90 e0       	ldi	r25, 0x00	; 0
    55aa:	98 2f       	mov	r25, r24
    55ac:	88 27       	eor	r24, r24
    55ae:	30 91 ca 15 	lds	r19, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    55b2:	83 2b       	or	r24, r19
    55b4:	91 87       	std	Z+9, r25	; 0x09
    55b6:	80 87       	std	Z+8, r24	; 0x08
									
									if(_sEuro_Valve_Param[i].Euro_Valve_Status != _kOFF)
    55b8:	22 23       	and	r18, r18
    55ba:	e9 f0       	breq	.+58     	; 0x55f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75a>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    55bc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    55c0:	81 30       	cpi	r24, 0x01	; 1
    55c2:	d9 f4       	brne	.+54     	; 0x55fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75e>
										{
											_kSERAIL_MON_WRITE("fail to off the valve(was ealier onn)");
    55c4:	6f e7       	ldi	r22, 0x7F	; 127
    55c6:	76 e0       	ldi	r23, 0x06	; 6
    55c8:	06 c0       	rjmp	.+12     	; 0x55d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x73a>
										data_send_counter = _kRETRY_TO_SEND_VALVE;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    55ca:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    55ce:	81 30       	cpi	r24, 0x01	; 1
    55d0:	a1 f4       	brne	.+40     	; 0x55fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75e>
									{
										_kSERAIL_MON_WRITE("valve id not match(before startt)");
    55d2:	6d e5       	ldi	r22, 0x5D	; 93
    55d4:	76 e0       	ldi	r23, 0x06	; 6
    55d6:	8f e6       	ldi	r24, 0x6F	; 111
    55d8:	96 e1       	ldi	r25, 0x16	; 22
    55da:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    55de:	8f e6       	ldi	r24, 0x6F	; 111
    55e0:	96 e1       	ldi	r25, 0x16	; 22
    55e2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    55e6:	09 c0       	rjmp	.+18     	; 0x55fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75e>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    55e8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    55ec:	81 30       	cpi	r24, 0x01	; 1
    55ee:	29 f4       	brne	.+10     	; 0x55fa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x75e>
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
    55f0:	6f e2       	ldi	r22, 0x2F	; 47
    55f2:	76 e0       	ldi	r23, 0x06	; 6
    55f4:	f0 cf       	rjmp	.-32     	; 0x55d6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x73a>
											_kSERIAL_MON_CLEAR();
										}
									}
									else
									{
										data_send_counter = _kRETRY_TO_SEND_VALVE;
    55f6:	83 e0       	ldi	r24, 0x03	; 3
    55f8:	a8 2e       	mov	r10, r24
								{
									_kSERAIL_MON_WRITE("valve fail to give feedback(Not listening)...");
									_kSERIAL_MON_CLEAR();
								}
							}
							_kDELAY_MS(1000);
    55fa:	68 ee       	ldi	r22, 0xE8	; 232
    55fc:	73 e0       	ldi	r23, 0x03	; 3
    55fe:	80 e0       	ldi	r24, 0x00	; 0
    5600:	90 e0       	ldi	r25, 0x00	; 0
    5602:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				for(k=0;k<_kNUMBER_OF_VALVE_CONNECT_TO_EURO;k++)
				{
					if(total_valve_number & hex_array[k])
					{
						data_send_counter = 0;
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5606:	f3 e0       	ldi	r31, 0x03	; 3
    5608:	af 12       	cpse	r10, r31
    560a:	49 cf       	rjmp	.-366    	; 0x549e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x602>
    560c:	1c cf       	rjmp	.-456    	; 0x5446 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x5aa>
	}
	
	
	/************************************************* if everything ok then turn on or off the valves *********************************************/
	
	switch(on_off)
    560e:	21 e0       	ldi	r18, 0x01	; 1
    5610:	27 15       	cp	r18, r7
    5612:	08 f4       	brcc	.+2      	; 0x5616 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x77a>
    5614:	d5 c6       	rjmp	.+3498   	; 0x63c0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1524>
    5616:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
		case _kON:
		case _kOFF:
		{
			/* check weather the plot is already irrigating or not  to stop the irrigation */
			
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
    561a:	3e e0       	ldi	r19, 0x0E	; 14
    561c:	34 15       	cp	r19, r4
    561e:	08 f4       	brcc	.+2      	; 0x5622 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x786>
    5620:	95 c3       	rjmp	.+1834   	; 0x5d4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xeb0>
    5622:	46 e0       	ldi	r20, 0x06	; 6
    5624:	44 9e       	mul	r4, r20
    5626:	80 01       	movw	r16, r0
    5628:	11 24       	eor	r1, r1
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    562a:	81 30       	cpi	r24, 0x01	; 1
    562c:	d9 f5       	brne	.+118    	; 0x56a4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x808>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    562e:	61 e2       	ldi	r22, 0x21	; 33
    5630:	76 e0       	ldi	r23, 0x06	; 6
    5632:	8f e6       	ldi	r24, 0x6F	; 111
    5634:	96 e1       	ldi	r25, 0x16	; 22
    5636:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    563a:	8f e6       	ldi	r24, 0x6F	; 111
    563c:	96 e1       	ldi	r25, 0x16	; 22
    563e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5642:	e1 2c       	mov	r14, r1
    5644:	f1 2c       	mov	r15, r1
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
    5646:	c4 2c       	mov	r12, r4
    5648:	d1 2c       	mov	r13, r1
    564a:	51 e0       	ldi	r21, 0x01	; 1
    564c:	c5 1a       	sub	r12, r21
    564e:	d1 08       	sbc	r13, r1
    5650:	f7 01       	movw	r30, r14
    5652:	e0 0f       	add	r30, r16
    5654:	f1 1f       	adc	r31, r17
    5656:	e8 50       	subi	r30, 0x08	; 8
    5658:	f3 4f       	sbci	r31, 0xF3	; 243
    565a:	4a e0       	ldi	r20, 0x0A	; 10
    565c:	50 e0       	ldi	r21, 0x00	; 0
    565e:	60 81       	ld	r22, Z
    5660:	8f e6       	ldi	r24, 0x6F	; 111
    5662:	96 e1       	ldi	r25, 0x16	; 22
    5664:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
						_kSERAIL_MON_WRITE_NO_LN(" ");
    5668:	6f e1       	ldi	r22, 0x1F	; 31
    566a:	76 e0       	ldi	r23, 0x06	; 6
    566c:	8f e6       	ldi	r24, 0x6F	; 111
    566e:	96 e1       	ldi	r25, 0x16	; 22
    5670:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    5674:	8f ef       	ldi	r24, 0xFF	; 255
    5676:	e8 1a       	sub	r14, r24
    5678:	f8 0a       	sbc	r15, r24
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				
					for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    567a:	95 e0       	ldi	r25, 0x05	; 5
    567c:	e9 16       	cp	r14, r25
    567e:	f1 04       	cpc	r15, r1
    5680:	39 f7       	brne	.-50     	; 0x5650 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x7b4>
					{
						_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]);
						_kSERAIL_MON_WRITE_NO_LN(" ");
					}
				
					_kSERAIL_MON_WRITE_NO_LN("Target_Plot_Num plot no : ");
    5682:	64 e0       	ldi	r22, 0x04	; 4
    5684:	76 e0       	ldi	r23, 0x06	; 6
    5686:	8f e6       	ldi	r24, 0x6F	; 111
    5688:	96 e1       	ldi	r25, 0x16	; 22
    568a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    568e:	4a e0       	ldi	r20, 0x0A	; 10
    5690:	50 e0       	ldi	r21, 0x00	; 0
    5692:	b6 01       	movw	r22, r12
    5694:	8f e6       	ldi	r24, 0x6F	; 111
    5696:	96 e1       	ldi	r25, 0x16	; 22
    5698:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    569c:	8f e6       	ldi	r24, 0x6F	; 111
    569e:	96 e1       	ldi	r25, 0x16	; 22
    56a0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    56a4:	08 50       	subi	r16, 0x08	; 8
    56a6:	13 4f       	sbci	r17, 0xF3	; 243
			if(Target_Plot_Num <= _kMAX_LIRA_SENSOR_NODE )
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
    56a8:	b5 e0       	ldi	r27, 0x05	; 5
    56aa:	2b 2e       	mov	r2, r27
    56ac:	80 e0       	ldi	r24, 0x00	; 0
					if(same_valve == _kRESET)
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    56ae:	e4 2c       	mov	r14, r4
    56b0:	f1 2c       	mov	r15, r1
    56b2:	a1 e0       	ldi	r26, 0x01	; 1
    56b4:	ea 1a       	sub	r14, r26
    56b6:	f1 08       	sbc	r15, r1
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    56b8:	55 24       	eor	r5, r5
    56ba:	53 94       	inc	r5
    56bc:	97 2d       	mov	r25, r7
    56be:	95 25       	eor	r25, r5
    56c0:	91 70       	andi	r25, 0x01	; 1
    56c2:	9d ab       	std	Y+53, r25	; 0x35
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(on_off == _kOFF)
    56c4:	71 10       	cpse	r7, r1
    56c6:	1f c0       	rjmp	.+62     	; 0x5706 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x86a>
					{
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
    56c8:	20 91 d5 15 	lds	r18, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    56cc:	42 16       	cp	r4, r18
    56ce:	c9 f0       	breq	.+50     	; 0x5702 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x866>
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
    56d0:	22 23       	and	r18, r18
    56d2:	c9 f0       	breq	.+50     	; 0x5706 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x86a>
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    56d4:	f8 01       	movw	r30, r16
    56d6:	90 81       	ld	r25, Z
    56d8:	f6 e0       	ldi	r31, 0x06	; 6
    56da:	2f 9f       	mul	r18, r31
    56dc:	90 01       	movw	r18, r0
    56de:	11 24       	eor	r1, r1
    56e0:	40 e0       	ldi	r20, 0x00	; 0
    56e2:	50 e0       	ldi	r21, 0x00	; 0
    56e4:	80 e0       	ldi	r24, 0x00	; 0
    56e6:	fa 01       	movw	r30, r20
    56e8:	e2 0f       	add	r30, r18
    56ea:	f3 1f       	adc	r31, r19
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
    56ec:	e8 50       	subi	r30, 0x08	; 8
    56ee:	f3 4f       	sbci	r31, 0xF3	; 243
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
								{
									if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]
    56f0:	60 81       	ld	r22, Z
    56f2:	96 13       	cpse	r25, r22
    56f4:	01 c0       	rjmp	.+2      	; 0x56f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x85c>
									== _sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[check_with_current_plot])
									{
										same_valve = _kSET;
    56f6:	81 e0       	ldi	r24, 0x01	; 1
    56f8:	4f 5f       	subi	r20, 0xFF	; 255
    56fa:	5f 4f       	sbci	r21, 0xFF	; 255
						if(Target_Plot_Num != _sRuble_Parameters.Irrigating_Plot)
						{
							same_valve = _kRESET;
							if(_sRuble_Parameters.Irrigating_Plot != 0)
							{
								for(unsigned char check_with_current_plot =0; check_with_current_plot < _kMAX_VALVE_FOR_1PLOT; check_with_current_plot++)
    56fc:	45 30       	cpi	r20, 0x05	; 5
    56fe:	51 05       	cpc	r21, r1
    5700:	91 f7       	brne	.-28     	; 0x56e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x84a>
					else
					{
						same_valve = _kRESET;
					}
					
					if(same_valve == _kRESET)
    5702:	81 11       	cpse	r24, r1
    5704:	13 c3       	rjmp	.+1574   	; 0x5d2c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe90>
					{
						
					
					
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 0)
    5706:	d8 01       	movw	r26, r16
    5708:	dc 90       	ld	r13, X
    570a:	8f ef       	ldi	r24, 0xFF	; 255
    570c:	8d 0d       	add	r24, r13
    570e:	8c 30       	cpi	r24, 0x0C	; 12
    5710:	08 f0       	brcs	.+2      	; 0x5714 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x878>
    5712:	e0 c2       	rjmp	.+1472   	; 0x5cd4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe38>
							unsigned char valve_number =0;
							unsigned char euro_valve_num=0,command_valve=0;
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5714:	b3 e0       	ldi	r27, 0x03	; 3
    5716:	bd 15       	cp	r27, r13
    5718:	a8 f4       	brcc	.+42     	; 0x5744 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8a8>
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    571a:	8d 2d       	mov	r24, r13
    571c:	63 e0       	ldi	r22, 0x03	; 3
    571e:	0e 94 12 e7 	call	0x1ce24	; 0x1ce24 <__udivmodqi4>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5722:	6b ea       	ldi	r22, 0xAB	; 171
    5724:	d6 9e       	mul	r13, r22
    5726:	61 2d       	mov	r22, r1
    5728:	11 24       	eor	r1, r1
								euro_valve_num = 1;
								command_valve = valve_number;
							}
							else
							{
								if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    572a:	99 23       	and	r25, r25
    572c:	31 f0       	breq	.+12     	; 0x573a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x89e>
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    572e:	66 95       	lsr	r22
    5730:	cc 24       	eor	r12, r12
    5732:	c3 94       	inc	r12
    5734:	c6 0e       	add	r12, r22
    5736:	d9 2e       	mov	r13, r25
    5738:	07 c0       	rjmp	.+14     	; 0x5748 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8ac>
									command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								}
								else
								{
									euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    573a:	c6 2e       	mov	r12, r22
    573c:	c6 94       	lsr	r12
									command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    573e:	a3 e0       	ldi	r26, 0x03	; 3
    5740:	da 2e       	mov	r13, r26
    5742:	02 c0       	rjmp	.+4      	; 0x5748 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8ac>
						
							valve_number =  _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i];
						
							if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
							{
								euro_valve_num = 1;
    5744:	cc 24       	eor	r12, r12
    5746:	c3 94       	inc	r12
								}
							
							}
						
							/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5748:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    574c:	81 30       	cpi	r24, 0x01	; 1
    574e:	89 f4       	brne	.+34     	; 0x5772 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8d6>
							{
								_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5750:	60 ef       	ldi	r22, 0xF0	; 240
    5752:	75 e0       	ldi	r23, 0x05	; 5
    5754:	8f e6       	ldi	r24, 0x6F	; 111
    5756:	96 e1       	ldi	r25, 0x16	; 22
    5758:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    575c:	4a e0       	ldi	r20, 0x0A	; 10
    575e:	50 e0       	ldi	r21, 0x00	; 0
    5760:	6c 2d       	mov	r22, r12
    5762:	8f e6       	ldi	r24, 0x6F	; 111
    5764:	96 e1       	ldi	r25, 0x16	; 22
    5766:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    576a:	8f e6       	ldi	r24, 0x6F	; 111
    576c:	96 e1       	ldi	r25, 0x16	; 22
    576e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
						
							if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5772:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
    5776:	81 11       	cpse	r24, r1
							{
								_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5778:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
							}
						
							memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    577c:	84 e1       	ldi	r24, 0x14	; 20
    577e:	ec ea       	ldi	r30, 0xAC	; 172
    5780:	f5 e1       	ldi	r31, 0x15	; 21
    5782:	df 01       	movw	r26, r30
    5784:	1d 92       	st	X+, r1
    5786:	8a 95       	dec	r24
    5788:	e9 f7       	brne	.-6      	; 0x5784 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x8e8>
							count = _kRESET;
							/********************************** wireless valve command (on/off) **********************************/
							/* valve id, on/off command, pump run timer */
						
							/************************************* copy the euro valve ID *********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    578a:	6c 2d       	mov	r22, r12
    578c:	70 e0       	ldi	r23, 0x00	; 0
    578e:	61 50       	subi	r22, 0x01	; 1
    5790:	71 09       	sbc	r23, r1
    5792:	b7 e0       	ldi	r27, 0x07	; 7
    5794:	b6 9f       	mul	r27, r22
    5796:	c0 01       	movw	r24, r0
    5798:	b7 9f       	mul	r27, r23
    579a:	90 0d       	add	r25, r0
    579c:	11 24       	eor	r1, r1
    579e:	8b 59       	subi	r24, 0x9B	; 155
    57a0:	9a 4e       	sbci	r25, 0xEA	; 234
    57a2:	fc 01       	movw	r30, r24
    57a4:	ec 58       	subi	r30, 0x8C	; 140
    57a6:	ff 4f       	sbci	r31, 0xFF	; 255
    57a8:	20 81       	ld	r18, Z
    57aa:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    57ae:	31 96       	adiw	r30, 0x01	; 1
    57b0:	20 81       	ld	r18, Z
    57b2:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    57b6:	31 96       	adiw	r30, 0x01	; 1
    57b8:	20 81       	ld	r18, Z
    57ba:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    57be:	31 96       	adiw	r30, 0x01	; 1
    57c0:	20 81       	ld	r18, Z
    57c2:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    57c6:	31 96       	adiw	r30, 0x01	; 1
    57c8:	20 81       	ld	r18, Z
    57ca:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    57ce:	31 96       	adiw	r30, 0x01	; 1
    57d0:	20 81       	ld	r18, Z
    57d2:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
						
							/*********************************** packet_id ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    57d6:	22 e0       	ldi	r18, 0x02	; 2
    57d8:	20 93 b2 15 	sts	0x15B2, r18	; 0x8015b2 <_sRuble_Parameters+0x4d>
						
							/*********************************** copy on/off command ***********************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    57dc:	70 92 b3 15 	sts	0x15B3, r7	; 0x8015b3 <_sRuble_Parameters+0x4e>
						
							/********************************** copy operation mode ************************************************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    57e0:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    57e4:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
						
							/******************************** copy pump timer (used if selected mode is timer) *********************/
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    57e8:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
    57ec:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    57f0:	d0 92 b7 15 	sts	0x15B7, r13	; 0x8015b7 <_sRuble_Parameters+0x52>
    57f4:	40 e0       	ldi	r20, 0x00	; 0
    57f6:	50 e0       	ldi	r21, 0x00	; 0
    57f8:	b4 2e       	mov	r11, r20
    57fa:	c1 2c       	mov	r12, r1
    57fc:	d1 2c       	mov	r13, r1
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    57fe:	ed e0       	ldi	r30, 0x0D	; 13
    5800:	e4 9f       	mul	r30, r20
    5802:	b0 01       	movw	r22, r0
    5804:	e5 9f       	mul	r30, r21
    5806:	70 0d       	add	r23, r0
    5808:	11 24       	eor	r1, r1
    580a:	69 51       	subi	r22, 0x19	; 25
    580c:	74 4f       	sbci	r23, 0xF4	; 244
    580e:	2d 2d       	mov	r18, r13
    5810:	30 e0       	ldi	r19, 0x00	; 0
    5812:	fb 01       	movw	r30, r22
    5814:	e2 0f       	add	r30, r18
    5816:	f3 1f       	adc	r31, r19
    5818:	28 0f       	add	r18, r24
    581a:	39 1f       	adc	r19, r25
    581c:	d9 01       	movw	r26, r18
    581e:	ac 58       	subi	r26, 0x8C	; 140
    5820:	bf 4f       	sbci	r27, 0xFF	; 255
    5822:	31 81       	ldd	r19, Z+1	; 0x01
    5824:	2c 91       	ld	r18, X
    5826:	32 17       	cp	r19, r18
    5828:	19 f0       	breq	.+6      	; 0x5830 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x994>
									{
										compare_id = _kVALVE_ID_LEN;
										id_len = _kRESET;
    582a:	c1 2c       	mov	r12, r1
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
								{
									if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
									{
										compare_id = _kVALVE_ID_LEN;
    582c:	f6 e0       	ldi	r31, 0x06	; 6
    582e:	df 2e       	mov	r13, r31
										id_len = _kRESET;
									}
									id_len++;
    5830:	c3 94       	inc	r12
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
							{
								/************************ compare each valve id one by one with the list of euro valves **************************/
								id_len = _kRESET;
								for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5832:	d3 94       	inc	r13
    5834:	f5 e0       	ldi	r31, 0x05	; 5
    5836:	fd 15       	cp	r31, r13
    5838:	50 f7       	brcc	.-44     	; 0x580e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x972>
										id_len = _kRESET;
									}
									id_len++;
								}
							
								if(id_len == _kVALVE_ID_LEN)
    583a:	26 e0       	ldi	r18, 0x06	; 6
    583c:	c2 16       	cp	r12, r18
    583e:	31 f0       	breq	.+12     	; 0x584c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b0>
    5840:	4f 5f       	subi	r20, 0xFF	; 255
    5842:	5f 4f       	sbci	r21, 0xFF	; 255
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
							_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
							_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
							/* check which structure to which EURO valve we are going to update */
							for(j=0;j<_kMAX_EURO_VALVE;j++)
    5844:	44 30       	cpi	r20, 0x04	; 4
    5846:	51 05       	cpc	r21, r1
    5848:	b9 f6       	brne	.-82     	; 0x57f8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x95c>
    584a:	01 c0       	rjmp	.+2      	; 0x584e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9b2>
    584c:	6b 2c       	mov	r6, r11
								{
									current_valve_number = j;    /* data send will update of this valve because valve get match */
									break;
								}
							}
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    584e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5852:	81 30       	cpi	r24, 0x01	; 1
    5854:	89 f4       	brne	.+34     	; 0x5878 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x9dc>
							{
								_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5856:	6a ed       	ldi	r22, 0xDA	; 218
    5858:	75 e0       	ldi	r23, 0x05	; 5
    585a:	8f e6       	ldi	r24, 0x6F	; 111
    585c:	96 e1       	ldi	r25, 0x16	; 22
    585e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5862:	4a e0       	ldi	r20, 0x0A	; 10
    5864:	50 e0       	ldi	r21, 0x00	; 0
    5866:	66 2d       	mov	r22, r6
    5868:	8f e6       	ldi	r24, 0x6F	; 111
    586a:	96 e1       	ldi	r25, 0x16	; 22
    586c:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
								_kSERIAL_MON_CLEAR();
    5870:	8f e6       	ldi	r24, 0x6F	; 111
    5872:	96 e1       	ldi	r25, 0x16	; 22
    5874:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5878:	3d e0       	ldi	r19, 0x0D	; 13
    587a:	63 9e       	mul	r6, r19
    587c:	40 01       	movw	r8, r0
    587e:	11 24       	eor	r1, r1
    5880:	31 2c       	mov	r3, r1
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5882:	4d e0       	ldi	r20, 0x0D	; 13
    5884:	46 9d       	mul	r20, r6
    5886:	c0 01       	movw	r24, r0
    5888:	11 24       	eor	r1, r1
    588a:	9c 01       	movw	r18, r24
    588c:	29 51       	subi	r18, 0x19	; 25
    588e:	34 4f       	sbci	r19, 0xF4	; 244
    5890:	d9 01       	movw	r26, r18
    5892:	1b 96       	adiw	r26, 0x0b	; 11
    5894:	bc ab       	std	Y+52, r27	; 0x34
    5896:	ab ab       	std	Y+51, r26	; 0x33
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5898:	69 01       	movw	r12, r18
    589a:	b8 e0       	ldi	r27, 0x08	; 8
    589c:	cb 0e       	add	r12, r27
    589e:	d1 1c       	adc	r13, r1
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
											Serial.println();
											_kSERIAL_MON_CLEAR();
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    58a0:	fc 01       	movw	r30, r24
    58a2:	e8 51       	subi	r30, 0x18	; 24
    58a4:	f4 4f       	sbci	r31, 0xF4	; 244
    58a6:	5f 01       	movw	r10, r30
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
							{
								if(Subscribed_data_check())
    58a8:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
    58ac:	88 23       	and	r24, r24
    58ae:	a1 f0       	breq	.+40     	; 0x58d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
								{
									if(Seperate_Out_Sub_Data())
    58b0:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
    58b4:	88 23       	and	r24, r24
    58b6:	81 f0       	breq	.+32     	; 0x58d8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa3c>
									{
										//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
										Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    58b8:	e7 e8       	ldi	r30, 0x87	; 135
    58ba:	f1 e1       	ldi	r31, 0x11	; 17
    58bc:	01 90       	ld	r0, Z+
    58be:	00 20       	and	r0, r0
    58c0:	e9 f7       	brne	.-6      	; 0x58bc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa20>
    58c2:	31 97       	sbiw	r30, 0x01	; 1
    58c4:	af 01       	movw	r20, r30
    58c6:	47 58       	subi	r20, 0x87	; 135
    58c8:	51 41       	sbci	r21, 0x11	; 17
    58ca:	21 e0       	ldi	r18, 0x01	; 1
    58cc:	67 e8       	ldi	r22, 0x87	; 135
    58ce:	71 e1       	ldi	r23, 0x11	; 17
    58d0:	89 e1       	ldi	r24, 0x19	; 25
    58d2:	91 e1       	ldi	r25, 0x11	; 17
    58d4:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
									}
								}
								data_send_counter++;
    58d8:	33 94       	inc	r3
							
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    58da:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    58de:	81 30       	cpi	r24, 0x01	; 1
    58e0:	51 f4       	brne	.+20     	; 0x58f6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa5a>
								{
									_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    58e2:	66 eb       	ldi	r22, 0xB6	; 182
    58e4:	75 e0       	ldi	r23, 0x05	; 5
    58e6:	8f e6       	ldi	r24, 0x6F	; 111
    58e8:	96 e1       	ldi	r25, 0x16	; 22
    58ea:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    58ee:	8f e6       	ldi	r24, 0x6F	; 111
    58f0:	96 e1       	ldi	r25, 0x16	; 22
    58f2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								Display_Update_1();    // 20/1/2022
    58f6:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
								_kLORA_SEND_DATA(count);
    58fa:	8c e0       	ldi	r24, 0x0C	; 12
    58fc:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
							
								if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    5900:	88 eb       	ldi	r24, 0xB8	; 184
    5902:	9b e0       	ldi	r25, 0x0B	; 11
    5904:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    5908:	88 23       	and	r24, r24
    590a:	09 f4       	brne	.+2      	; 0x590e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa72>
    590c:	7f c1       	rjmp	.+766    	; 0x5c0c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd70>
								{
									/**************************** update the received data in buff lora rx_tx **********************/
									if(_kLORA_RECV_DATA())            /* check the received data */
    590e:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
    5912:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5916:	88 23       	and	r24, r24
    5918:	09 f4       	brne	.+2      	; 0x591c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa80>
    591a:	20 c1       	rjmp	.+576    	; 0x5b5c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcc0>
									{
										//RF95_setModeRx_Continuous();
										/* check the id get matched to the valve or not */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    591c:	91 30       	cpi	r25, 0x01	; 1
    591e:	59 f5       	brne	.+86     	; 0x5976 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xada>
										{
											_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    5920:	60 ea       	ldi	r22, 0xA0	; 160
    5922:	75 e0       	ldi	r23, 0x05	; 5
    5924:	8f e6       	ldi	r24, 0x6F	; 111
    5926:	96 e1       	ldi	r25, 0x16	; 22
    5928:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    592c:	4a e0       	ldi	r20, 0x0A	; 10
    592e:	50 e0       	ldi	r21, 0x00	; 0
    5930:	60 ec       	ldi	r22, 0xC0	; 192
    5932:	75 e1       	ldi	r23, 0x15	; 21
    5934:	8f e6       	ldi	r24, 0x6F	; 111
    5936:	96 e1       	ldi	r25, 0x16	; 22
    5938:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
											Serial.println();
    593c:	8f e6       	ldi	r24, 0x6F	; 111
    593e:	96 e1       	ldi	r25, 0x16	; 22
    5940:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    5944:	8f e6       	ldi	r24, 0x6F	; 111
    5946:	96 e1       	ldi	r25, 0x16	; 22
    5948:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									
											_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    594c:	62 e8       	ldi	r22, 0x82	; 130
    594e:	75 e0       	ldi	r23, 0x05	; 5
    5950:	8f e6       	ldi	r24, 0x6F	; 111
    5952:	96 e1       	ldi	r25, 0x16	; 22
    5954:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5958:	47 e0       	ldi	r20, 0x07	; 7
    595a:	50 e0       	ldi	r21, 0x00	; 0
    595c:	b5 01       	movw	r22, r10
    595e:	8f e6       	ldi	r24, 0x6F	; 111
    5960:	96 e1       	ldi	r25, 0x16	; 22
    5962:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
											Serial.println();
    5966:	8f e6       	ldi	r24, 0x6F	; 111
    5968:	96 e1       	ldi	r25, 0x16	; 22
    596a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
											_kSERIAL_MON_CLEAR();
    596e:	8f e6       	ldi	r24, 0x6F	; 111
    5970:	96 e1       	ldi	r25, 0x16	; 22
    5972:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5976:	a0 ec       	ldi	r26, 0xC0	; 192
    5978:	b5 e1       	ldi	r27, 0x15	; 21
    597a:	80 e0       	ldi	r24, 0x00	; 0
    597c:	90 e0       	ldi	r25, 0x00	; 0
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
										{
											if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    597e:	2d 91       	ld	r18, X+
    5980:	f4 01       	movw	r30, r8
    5982:	e8 0f       	add	r30, r24
    5984:	f9 1f       	adc	r31, r25
    5986:	e9 51       	subi	r30, 0x19	; 25
    5988:	f4 4f       	sbci	r31, 0xF4	; 244
    598a:	31 81       	ldd	r19, Z+1	; 0x01
    598c:	32 17       	cp	r19, r18
    598e:	09 f4       	brne	.+2      	; 0x5992 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xaf6>
    5990:	7a c0       	rjmp	.+244    	; 0x5a86 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbea>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5992:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5996:	81 30       	cpi	r24, 0x01	; 1
    5998:	51 f4       	brne	.+20     	; 0x59ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb12>
												{
													_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    599a:	67 e5       	ldi	r22, 0x57	; 87
    599c:	75 e0       	ldi	r23, 0x05	; 5
    599e:	8f e6       	ldi	r24, 0x6F	; 111
    59a0:	96 e1       	ldi	r25, 0x16	; 22
    59a2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    59a6:	8f e6       	ldi	r24, 0x6F	; 111
    59a8:	96 e1       	ldi	r25, 0x16	; 22
    59aa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    59ae:	f2 e0       	ldi	r31, 0x02	; 2
    59b0:	3f 16       	cp	r3, r31
    59b2:	a9 f0       	breq	.+42     	; 0x59de <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb42>
											}
										}
									
										/* if id get matched */
									
										_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    59b4:	ab a9       	ldd	r26, Y+51	; 0x33
    59b6:	bc a9       	ldd	r27, Y+52	; 0x34
    59b8:	5c 92       	st	X, r5
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    59ba:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    59be:	90 e0       	ldi	r25, 0x00	; 0
    59c0:	98 2f       	mov	r25, r24
    59c2:	88 27       	eor	r24, r24
    59c4:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    59c8:	82 2b       	or	r24, r18
    59ca:	f6 01       	movw	r30, r12
    59cc:	91 83       	std	Z+1, r25	; 0x01
    59ce:	80 83       	st	Z, r24
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    59d0:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    59d4:	78 12       	cpse	r7, r24
    59d6:	5d c0       	rjmp	.+186    	; 0x5a92 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbf6>
												return 0;
											}
										}
										else
										{
											data_send_counter = 3;
    59d8:	73 e0       	ldi	r23, 0x03	; 3
    59da:	37 2e       	mov	r3, r23
    59dc:	71 c1       	rjmp	.+738    	; 0x5cc0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe24>
													_kSERIAL_MON_CLEAR();
												}
											
												if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
												{
													_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    59de:	86 e0       	ldi	r24, 0x06	; 6
    59e0:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
													_gfault_Occure = _kFAULT_RESET_TIMER;
    59e4:	84 e6       	ldi	r24, 0x64	; 100
    59e6:	90 e0       	ldi	r25, 0x00	; 0
    59e8:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    59ec:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    59f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    59f4:	81 30       	cpi	r24, 0x01	; 1
    59f6:	31 f4       	brne	.+12     	; 0x5a04 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb68>
													{
														_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 0");
    59f8:	6a e3       	ldi	r22, 0x3A	; 58
    59fa:	75 e0       	ldi	r23, 0x05	; 5
    59fc:	8f e6       	ldi	r24, 0x6F	; 111
    59fe:	96 e1       	ldi	r25, 0x16	; 22
    5a00:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5a04:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    5a08:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    5a0c:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    5a10:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    5a14:	a0 62       	ori	r26, 0x20	; 32
    5a16:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    5a1a:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    5a1e:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    5a22:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
													_sRuble_Parameters.Last_Valve = current_valve_number;
    5a26:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5a2a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    5a2e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    5a32:	82 60       	ori	r24, 0x02	; 2
    5a34:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    5a38:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    5a3c:	86 e0       	ldi	r24, 0x06	; 6
    5a3e:	8e 9d       	mul	r24, r14
    5a40:	80 01       	movw	r16, r0
    5a42:	8f 9d       	mul	r24, r15
    5a44:	10 0d       	add	r17, r0
    5a46:	11 24       	eor	r1, r1
    5a48:	e1 2c       	mov	r14, r1
    5a4a:	f1 2c       	mov	r15, r1
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
													{
														if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5a4c:	f8 01       	movw	r30, r16
    5a4e:	ee 0d       	add	r30, r14
    5a50:	ff 1d       	adc	r31, r15
    5a52:	e3 50       	subi	r30, 0x03	; 3
    5a54:	f3 4f       	sbci	r31, 0xF3	; 243
    5a56:	e1 81       	ldd	r30, Z+1	; 0x01
    5a58:	ed 30       	cpi	r30, 0x0D	; 13
    5a5a:	68 f0       	brcs	.+26     	; 0x5a76 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbda>
														{
															/********************************* turn on/off the wired valve *********************************/
															_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5a5c:	f0 e0       	ldi	r31, 0x00	; 0
    5a5e:	e8 51       	subi	r30, 0x18	; 24
    5a60:	fa 4e       	sbci	r31, 0xEA	; 234
    5a62:	61 e0       	ldi	r22, 0x01	; 1
    5a64:	80 81       	ld	r24, Z
    5a66:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
															_kDELAY_MS(200);
    5a6a:	68 ec       	ldi	r22, 0xC8	; 200
    5a6c:	70 e0       	ldi	r23, 0x00	; 0
    5a6e:	80 e0       	ldi	r24, 0x00	; 0
    5a70:	90 e0       	ldi	r25, 0x00	; 0
    5a72:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5a76:	ff ef       	ldi	r31, 0xFF	; 255
    5a78:	ef 1a       	sub	r14, r31
    5a7a:	ff 0a       	sbc	r15, r31
													}
													_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
													_sRuble_Parameters.Last_Valve = current_valve_number;
													_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
													for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5a7c:	25 e0       	ldi	r18, 0x05	; 5
    5a7e:	e2 16       	cp	r14, r18
    5a80:	f1 04       	cpc	r15, r1
    5a82:	21 f7       	brne	.-56     	; 0x5a4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbb0>
    5a84:	4e c4       	rjmp	.+2204   	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
    5a86:	01 96       	adiw	r24, 0x01	; 1
											_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
											Serial.println();
											_kSERIAL_MON_CLEAR();
										}
									
										for(j=0;j<_kVALVE_ID_LEN;j++)
    5a88:	86 30       	cpi	r24, 0x06	; 6
    5a8a:	91 05       	cpc	r25, r1
    5a8c:	09 f0       	breq	.+2      	; 0x5a90 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xbf4>
    5a8e:	77 cf       	rjmp	.-274    	; 0x597e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xae2>
    5a90:	91 cf       	rjmp	.-222    	; 0x59b4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xb18>
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
										_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
										if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    5a92:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5a96:	81 30       	cpi	r24, 0x01	; 1
    5a98:	51 f4       	brne	.+20     	; 0x5aae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc12>
											{
												_kSERAIL_MON_WRITE("Euro Feedback fail");
    5a9a:	67 e2       	ldi	r22, 0x27	; 39
    5a9c:	75 e0       	ldi	r23, 0x05	; 5
    5a9e:	8f e6       	ldi	r24, 0x6F	; 111
    5aa0:	96 e1       	ldi	r25, 0x16	; 22
    5aa2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    5aa6:	8f e6       	ldi	r24, 0x6F	; 111
    5aa8:	96 e1       	ldi	r25, 0x16	; 22
    5aaa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5aae:	32 e0       	ldi	r19, 0x02	; 2
    5ab0:	33 12       	cpse	r3, r19
    5ab2:	06 c1       	rjmp	.+524    	; 0x5cc0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe24>
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5ab4:	86 e0       	ldi	r24, 0x06	; 6
    5ab6:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    5aba:	84 e6       	ldi	r24, 0x64	; 100
    5abc:	90 e0       	ldi	r25, 0x00	; 0
    5abe:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5ac2:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    5ac6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5aca:	81 30       	cpi	r24, 0x01	; 1
    5acc:	31 f4       	brne	.+12     	; 0x5ada <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc3e>
												{
													_kSERAIL_MON_WRITE("_eIRRIG_STAT_EURO_FEEDBACK 1");
    5ace:	6a e0       	ldi	r22, 0x0A	; 10
    5ad0:	75 e0       	ldi	r23, 0x05	; 5
    5ad2:	8f e6       	ldi	r24, 0x6F	; 111
    5ad4:	96 e1       	ldi	r25, 0x16	; 22
    5ad6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5ada:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    5ade:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    5ae2:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    5ae6:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    5aea:	a0 62       	ori	r26, 0x20	; 32
    5aec:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    5af0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    5af4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    5af8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    5afc:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5b00:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    5b04:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    5b08:	82 60       	ori	r24, 0x02	; 2
    5b0a:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    5b0e:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    5b12:	86 e0       	ldi	r24, 0x06	; 6
    5b14:	8e 9d       	mul	r24, r14
    5b16:	80 01       	movw	r16, r0
    5b18:	8f 9d       	mul	r24, r15
    5b1a:	10 0d       	add	r17, r0
    5b1c:	11 24       	eor	r1, r1
    5b1e:	e1 2c       	mov	r14, r1
    5b20:	f1 2c       	mov	r15, r1
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5b22:	f8 01       	movw	r30, r16
    5b24:	ee 0d       	add	r30, r14
    5b26:	ff 1d       	adc	r31, r15
    5b28:	e3 50       	subi	r30, 0x03	; 3
    5b2a:	f3 4f       	sbci	r31, 0xF3	; 243
    5b2c:	e1 81       	ldd	r30, Z+1	; 0x01
    5b2e:	ed 30       	cpi	r30, 0x0D	; 13
    5b30:	68 f0       	brcs	.+26     	; 0x5b4c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcb0>
													{
														/********************************* turn on/off the wired valve *********************************/
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5b32:	f0 e0       	ldi	r31, 0x00	; 0
    5b34:	e8 51       	subi	r30, 0x18	; 24
    5b36:	fa 4e       	sbci	r31, 0xEA	; 234
    5b38:	61 e0       	ldi	r22, 0x01	; 1
    5b3a:	80 81       	ld	r24, Z
    5b3c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
														_kDELAY_MS(200);
    5b40:	68 ec       	ldi	r22, 0xC8	; 200
    5b42:	70 e0       	ldi	r23, 0x00	; 0
    5b44:	80 e0       	ldi	r24, 0x00	; 0
    5b46:	90 e0       	ldi	r25, 0x00	; 0
    5b48:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5b4c:	4f ef       	ldi	r20, 0xFF	; 255
    5b4e:	e4 1a       	sub	r14, r20
    5b50:	f4 0a       	sbc	r15, r20
												}
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5b52:	55 e0       	ldi	r21, 0x05	; 5
    5b54:	e5 16       	cp	r14, r21
    5b56:	f1 04       	cpc	r15, r1
    5b58:	21 f7       	brne	.-56     	; 0x5b22 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xc86>
    5b5a:	e3 c3       	rjmp	.+1990   	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
											data_send_counter = 3;
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    5b5c:	91 30       	cpi	r25, 0x01	; 1
    5b5e:	51 f4       	brne	.+20     	; 0x5b74 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xcd8>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    5b60:	6f ec       	ldi	r22, 0xCF	; 207
    5b62:	74 e0       	ldi	r23, 0x04	; 4
    5b64:	8f e6       	ldi	r24, 0x6F	; 111
    5b66:	96 e1       	ldi	r25, 0x16	; 22
    5b68:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    5b6c:	8f e6       	ldi	r24, 0x6F	; 111
    5b6e:	96 e1       	ldi	r25, 0x16	; 22
    5b70:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    5b74:	82 e0       	ldi	r24, 0x02	; 2
    5b76:	38 12       	cpse	r3, r24
    5b78:	a3 c0       	rjmp	.+326    	; 0x5cc0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe24>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5b7a:	26 e0       	ldi	r18, 0x06	; 6
    5b7c:	20 93 63 15 	sts	0x1563, r18	; 0x801563 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    5b80:	84 e6       	ldi	r24, 0x64	; 100
    5b82:	90 e0       	ldi	r25, 0x00	; 0
    5b84:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5b88:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5b8c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    5b90:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    5b94:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    5b98:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    5b9c:	a0 62       	ori	r26, 0x20	; 32
    5b9e:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    5ba2:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    5ba6:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    5baa:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    5bae:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5bb2:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    5bb6:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    5bba:	82 60       	ori	r24, 0x02	; 2
    5bbc:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    5bc0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    5bc4:	2e 9d       	mul	r18, r14
    5bc6:	80 01       	movw	r16, r0
    5bc8:	2f 9d       	mul	r18, r15
    5bca:	10 0d       	add	r17, r0
    5bcc:	11 24       	eor	r1, r1
    5bce:	e1 2c       	mov	r14, r1
    5bd0:	f1 2c       	mov	r15, r1
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5bd2:	f8 01       	movw	r30, r16
    5bd4:	ee 0d       	add	r30, r14
    5bd6:	ff 1d       	adc	r31, r15
    5bd8:	e3 50       	subi	r30, 0x03	; 3
    5bda:	f3 4f       	sbci	r31, 0xF3	; 243
    5bdc:	e1 81       	ldd	r30, Z+1	; 0x01
    5bde:	ed 30       	cpi	r30, 0x0D	; 13
    5be0:	68 f0       	brcs	.+26     	; 0x5bfc <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd60>
												{
													/********************************* turn on/off the wired valve *********************************/
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5be2:	f0 e0       	ldi	r31, 0x00	; 0
    5be4:	e8 51       	subi	r30, 0x18	; 24
    5be6:	fa 4e       	sbci	r31, 0xEA	; 234
    5be8:	61 e0       	ldi	r22, 0x01	; 1
    5bea:	80 81       	ld	r24, Z
    5bec:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
													_kDELAY_MS(200);
    5bf0:	68 ec       	ldi	r22, 0xC8	; 200
    5bf2:	70 e0       	ldi	r23, 0x00	; 0
    5bf4:	80 e0       	ldi	r24, 0x00	; 0
    5bf6:	90 e0       	ldi	r25, 0x00	; 0
    5bf8:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5bfc:	9f ef       	ldi	r25, 0xFF	; 255
    5bfe:	e9 1a       	sub	r14, r25
    5c00:	f9 0a       	sbc	r15, r25
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
											_gfault_Occure = _kFAULT_RESET_TIMER;
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5c02:	a5 e0       	ldi	r26, 0x05	; 5
    5c04:	ea 16       	cp	r14, r26
    5c06:	f1 04       	cpc	r15, r1
    5c08:	21 f7       	brne	.-56     	; 0x5bd2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd36>
    5c0a:	8b c3       	rjmp	.+1814   	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
										}
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    5c0c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5c10:	81 30       	cpi	r24, 0x01	; 1
    5c12:	51 f4       	brne	.+20     	; 0x5c28 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xd8c>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    5c14:	64 e9       	ldi	r22, 0x94	; 148
    5c16:	74 e0       	ldi	r23, 0x04	; 4
    5c18:	8f e6       	ldi	r24, 0x6F	; 111
    5c1a:	96 e1       	ldi	r25, 0x16	; 22
    5c1c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    5c20:	8f e6       	ldi	r24, 0x6F	; 111
    5c22:	96 e1       	ldi	r25, 0x16	; 22
    5c24:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									//RF95_setModeRx_Continuous();
								
									if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    5c28:	b2 e0       	ldi	r27, 0x02	; 2
    5c2a:	3b 12       	cpse	r3, r27
    5c2c:	49 c0       	rjmp	.+146    	; 0x5cc0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe24>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    5c2e:	26 e0       	ldi	r18, 0x06	; 6
    5c30:	20 93 63 15 	sts	0x1563, r18	; 0x801563 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    5c34:	84 e6       	ldi	r24, 0x64	; 100
    5c36:	90 e0       	ldi	r25, 0x00	; 0
    5c38:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    5c3c:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    5c40:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    5c44:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    5c48:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    5c4c:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    5c50:	a0 62       	ori	r26, 0x20	; 32
    5c52:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    5c56:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    5c5a:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    5c5e:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    5c62:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    5c66:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    5c6a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    5c6e:	82 60       	ori	r24, 0x02	; 2
    5c70:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    5c74:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    5c78:	2e 9d       	mul	r18, r14
    5c7a:	80 01       	movw	r16, r0
    5c7c:	2f 9d       	mul	r18, r15
    5c7e:	10 0d       	add	r17, r0
    5c80:	11 24       	eor	r1, r1
    5c82:	e1 2c       	mov	r14, r1
    5c84:	f1 2c       	mov	r15, r1
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5c86:	f8 01       	movw	r30, r16
    5c88:	ee 0d       	add	r30, r14
    5c8a:	ff 1d       	adc	r31, r15
    5c8c:	e3 50       	subi	r30, 0x03	; 3
    5c8e:	f3 4f       	sbci	r31, 0xF3	; 243
    5c90:	e1 81       	ldd	r30, Z+1	; 0x01
    5c92:	ed 30       	cpi	r30, 0x0D	; 13
    5c94:	68 f0       	brcs	.+26     	; 0x5cb0 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe14>
											{
												/********************************* turn on/off the wired valve *********************************/
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[wired_valve]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(1));
    5c96:	f0 e0       	ldi	r31, 0x00	; 0
    5c98:	e8 51       	subi	r30, 0x18	; 24
    5c9a:	fa 4e       	sbci	r31, 0xEA	; 234
    5c9c:	61 e0       	ldi	r22, 0x01	; 1
    5c9e:	80 81       	ld	r24, Z
    5ca0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
												_kDELAY_MS(200);
    5ca4:	68 ec       	ldi	r22, 0xC8	; 200
    5ca6:	70 e0       	ldi	r23, 0x00	; 0
    5ca8:	80 e0       	ldi	r24, 0x00	; 0
    5caa:	90 e0       	ldi	r25, 0x00	; 0
    5cac:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5cb0:	ef ef       	ldi	r30, 0xFF	; 255
    5cb2:	ee 1a       	sub	r14, r30
    5cb4:	fe 0a       	sbc	r15, r30
										_gfault_Occure = _kFAULT_RESET_TIMER;
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    5cb6:	f5 e0       	ldi	r31, 0x05	; 5
    5cb8:	ef 16       	cp	r14, r31
    5cba:	f1 04       	cpc	r15, r1
    5cbc:	21 f7       	brne	.-56     	; 0x5c86 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xdea>
    5cbe:	31 c3       	rjmp	.+1634   	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
											}
										}
										return 0;          /* no data available */
									}
								}
								_kDELAY_MS(1000);
    5cc0:	68 ee       	ldi	r22, 0xE8	; 232
    5cc2:	73 e0       	ldi	r23, 0x03	; 3
    5cc4:	80 e0       	ldi	r24, 0x00	; 0
    5cc6:	90 e0       	ldi	r25, 0x00	; 0
    5cc8:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
								_kSERIAL_MON_CLEAR();
							}
							
							data_send_counter = _kRESET;
						
							while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    5ccc:	23 e0       	ldi	r18, 0x03	; 3
    5cce:	32 12       	cpse	r3, r18
    5cd0:	eb cd       	rjmp	.-1066   	; 0x58a8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xa0c>
    5cd2:	2e c0       	rjmp	.+92     	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
						
						}
					
						/******************************************************** handle wired valve *******************************************************************/
					
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO
    5cd4:	83 ef       	ldi	r24, 0xF3	; 243
    5cd6:	8d 0d       	add	r24, r13
    5cd8:	87 35       	cpi	r24, 0x57	; 87
    5cda:	78 f4       	brcc	.+30     	; 0x5cfa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe5e>
						&& _sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] < 100)
						{
							/********************************* turn on/off the wired valve *********************************/
							_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i]-(_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1)],(!on_off));
    5cdc:	ed 2d       	mov	r30, r13
    5cde:	f0 e0       	ldi	r31, 0x00	; 0
    5ce0:	e8 51       	subi	r30, 0x18	; 24
    5ce2:	fa 4e       	sbci	r31, 0xEA	; 234
    5ce4:	6d a9       	ldd	r22, Y+53	; 0x35
    5ce6:	80 81       	ld	r24, Z
    5ce8:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
							_kDELAY_MS(200);
    5cec:	68 ec       	ldi	r22, 0xC8	; 200
    5cee:	70 e0       	ldi	r23, 0x00	; 0
    5cf0:	80 e0       	ldi	r24, 0x00	; 0
    5cf2:	90 e0       	ldi	r25, 0x00	; 0
    5cf4:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    5cf8:	1b c0       	rjmp	.+54     	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
							
							}
						}
						else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
						{
							if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    5cfa:	35 e6       	ldi	r19, 0x65	; 101
    5cfc:	d3 12       	cpse	r13, r19
    5cfe:	18 c0       	rjmp	.+48     	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
    5d00:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
							{
								if(on_off == _kON)
    5d04:	41 e0       	ldi	r20, 0x01	; 1
    5d06:	74 12       	cpse	r7, r20
    5d08:	05 c0       	rjmp	.+10     	; 0x5d14 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe78>
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5d0a:	88 23       	and	r24, r24
    5d0c:	89 f0       	breq	.+34     	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    5d0e:	70 92 24 16 	sts	0x1624, r7	; 0x801624 <_sRuble_Parameters+0xbf>
    5d12:	05 c0       	rjmp	.+10     	; 0x5d1e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe82>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
									}
								}
								else
								{
									if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    5d14:	88 23       	and	r24, r24
    5d16:	61 f0       	breq	.+24     	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
									{
										_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5d18:	82 e0       	ldi	r24, 0x02	; 2
    5d1a:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
										_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    5d1e:	64 e2       	ldi	r22, 0x24	; 36
    5d20:	76 e1       	ldi	r23, 0x16	; 22
    5d22:	80 e3       	ldi	r24, 0x30	; 48
    5d24:	9c e0       	ldi	r25, 0x0C	; 12
    5d26:	0e 94 fc 23 	call	0x47f8	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    5d2a:	02 c0       	rjmp	.+4      	; 0x5d30 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe94>
    5d2c:	81 e0       	ldi	r24, 0x01	; 1
    5d2e:	01 c0       	rjmp	.+2      	; 0x5d32 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xe96>
    5d30:	80 e0       	ldi	r24, 0x00	; 0
    5d32:	2a 94       	dec	r2
    5d34:	0f 5f       	subi	r16, 0xFF	; 255
    5d36:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERIAL_MON_CLEAR();
				}
				
				unsigned char same_valve = _kRESET;
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    5d38:	21 10       	cpse	r2, r1
    5d3a:	c4 cc       	rjmp	.-1656   	; 0x56c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x828>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d3c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5d40:	81 30       	cpi	r24, 0x01	; 1
    5d42:	09 f0       	breq	.+2      	; 0x5d46 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xeaa>
    5d44:	3e c3       	rjmp	.+1660   	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    5d46:	65 e7       	ldi	r22, 0x75	; 117
    5d48:	74 e0       	ldi	r23, 0x04	; 4
    5d4a:	31 c3       	rjmp	.+1634   	; 0x63ae <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1512>
				}
				return 1;
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5d4c:	81 30       	cpi	r24, 0x01	; 1
    5d4e:	51 f4       	brne	.+20     	; 0x5d64 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xec8>
				{
					_kSERAIL_MON_WRITE("valve list : ");
    5d50:	67 e6       	ldi	r22, 0x67	; 103
    5d52:	74 e0       	ldi	r23, 0x04	; 4
    5d54:	8f e6       	ldi	r24, 0x6F	; 111
    5d56:	96 e1       	ldi	r25, 0x16	; 22
    5d58:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5d5c:	8f e6       	ldi	r24, 0x6F	; 111
    5d5e:	96 e1       	ldi	r25, 0x16	; 22
    5d60:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5d64:	5b e1       	ldi	r21, 0x1B	; 27
    5d66:	45 9e       	mul	r4, r21
    5d68:	50 01       	movw	r10, r0
    5d6a:	11 24       	eor	r1, r1
    5d6c:	e1 2c       	mov	r14, r1
    5d6e:	f1 2c       	mov	r15, r1
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
				{
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
    5d70:	04 2d       	mov	r16, r4
    5d72:	10 e0       	ldi	r17, 0x00	; 0
    5d74:	68 01       	movw	r12, r16
    5d76:	85 e6       	ldi	r24, 0x65	; 101
    5d78:	c8 1a       	sub	r12, r24
    5d7a:	d1 08       	sbc	r13, r1
    5d7c:	f5 01       	movw	r30, r10
    5d7e:	ee 0d       	add	r30, r14
    5d80:	ff 1d       	adc	r31, r15
    5d82:	e3 50       	subi	r30, 0x03	; 3
    5d84:	fb 4f       	sbci	r31, 0xFB	; 251
    5d86:	4a e0       	ldi	r20, 0x0A	; 10
    5d88:	50 e0       	ldi	r21, 0x00	; 0
    5d8a:	60 81       	ld	r22, Z
    5d8c:	8f e6       	ldi	r24, 0x6F	; 111
    5d8e:	96 e1       	ldi	r25, 0x16	; 22
    5d90:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
					_kSERAIL_MON_WRITE_NO_LN(" ");
    5d94:	65 e6       	ldi	r22, 0x65	; 101
    5d96:	74 e0       	ldi	r23, 0x04	; 4
    5d98:	8f e6       	ldi	r24, 0x6F	; 111
    5d9a:	96 e1       	ldi	r25, 0x16	; 22
    5d9c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    5da0:	8f e6       	ldi	r24, 0x6F	; 111
    5da2:	96 e1       	ldi	r25, 0x16	; 22
    5da4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5da8:	9f ef       	ldi	r25, 0xFF	; 255
    5daa:	e9 1a       	sub	r14, r25
    5dac:	f9 0a       	sbc	r15, r25
				if(_sRuble_Parameters.Debug_Mode == _kSET)
				{
					_kSERAIL_MON_WRITE("valve list : ");
					_kSERIAL_MON_CLEAR();
				}
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    5dae:	a5 e0       	ldi	r26, 0x05	; 5
    5db0:	ea 16       	cp	r14, r26
    5db2:	f1 04       	cpc	r15, r1
    5db4:	19 f7       	brne	.-58     	; 0x5d7c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xee0>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]);
					_kSERAIL_MON_WRITE_NO_LN(" ");
					_kSERIAL_MON_CLEAR();
				}
				
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    5db6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5dba:	81 30       	cpi	r24, 0x01	; 1
    5dbc:	99 f4       	brne	.+38     	; 0x5de4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf48>
				{
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
    5dbe:	6f e4       	ldi	r22, 0x4F	; 79
    5dc0:	74 e0       	ldi	r23, 0x04	; 4
    5dc2:	8f e6       	ldi	r24, 0x6F	; 111
    5dc4:	96 e1       	ldi	r25, 0x16	; 22
    5dc6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
    5dca:	b8 01       	movw	r22, r16
    5dcc:	61 50       	subi	r22, 0x01	; 1
    5dce:	71 09       	sbc	r23, r1
    5dd0:	4a e0       	ldi	r20, 0x0A	; 10
    5dd2:	50 e0       	ldi	r21, 0x00	; 0
    5dd4:	8f e6       	ldi	r24, 0x6F	; 111
    5dd6:	96 e1       	ldi	r25, 0x16	; 22
    5dd8:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
					_kSERIAL_MON_CLEAR();
    5ddc:	8f e6       	ldi	r24, 0x6F	; 111
    5dde:	96 e1       	ldi	r25, 0x16	; 22
    5de0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5de4:	2b e1       	ldi	r18, 0x1B	; 27
    5de6:	2c 9d       	mul	r18, r12
    5de8:	c0 01       	movw	r24, r0
    5dea:	2d 9d       	mul	r18, r13
    5dec:	90 0d       	add	r25, r0
    5dee:	11 24       	eor	r1, r1
    5df0:	fc 01       	movw	r30, r24
    5df2:	e1 56       	subi	r30, 0x61	; 97
    5df4:	f0 4f       	sbci	r31, 0xF0	; 240
    5df6:	5f 01       	movw	r10, r30
    5df8:	f6 e0       	ldi	r31, 0x06	; 6
    5dfa:	4f 9e       	mul	r4, r31
    5dfc:	10 01       	movw	r2, r0
    5dfe:	11 24       	eor	r1, r1
    5e00:	00 e0       	ldi	r16, 0x00	; 0
    5e02:	10 e0       	ldi	r17, 0x00	; 0
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    5e04:	52 e0       	ldi	r21, 0x02	; 2
    5e06:	f5 2e       	mov	r15, r21
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    5e08:	ee 24       	eor	r14, r14
    5e0a:	e3 94       	inc	r14
    5e0c:	87 2d       	mov	r24, r7
    5e0e:	8e 25       	eor	r24, r14
    5e10:	81 70       	andi	r24, 0x01	; 1
    5e12:	8f ab       	std	Y+55, r24	; 0x37
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5e14:	6d e0       	ldi	r22, 0x0D	; 13
    5e16:	d6 2e       	mov	r13, r22
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
				{
					if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > 0)
    5e18:	f5 01       	movw	r30, r10
    5e1a:	e0 0f       	add	r30, r16
    5e1c:	f1 1f       	adc	r31, r17
    5e1e:	95 80       	ldd	r9, Z+5	; 0x05
    5e20:	8f ef       	ldi	r24, 0xFF	; 255
    5e22:	89 0d       	add	r24, r9
    5e24:	8c 30       	cpi	r24, 0x0C	; 12
    5e26:	08 f0       	brcs	.+2      	; 0x5e2a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf8e>
    5e28:	88 c2       	rjmp	.+1296   	; 0x633a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x149e>
						unsigned char valve_number =0;
						unsigned char euro_valve_num=0,command_valve=0;
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5e2a:	23 e0       	ldi	r18, 0x03	; 3
    5e2c:	29 15       	cp	r18, r9
    5e2e:	90 f4       	brcc	.+36     	; 0x5e54 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfb8>
							euro_valve_num = 1;
							command_valve = valve_number;
						}
						else
						{
							if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    5e30:	8b ea       	ldi	r24, 0xAB	; 171
    5e32:	98 9e       	mul	r9, r24
    5e34:	c1 2c       	mov	r12, r1
    5e36:	11 24       	eor	r1, r1
    5e38:	8c 2d       	mov	r24, r12
    5e3a:	86 95       	lsr	r24
    5e3c:	98 2f       	mov	r25, r24
    5e3e:	99 0f       	add	r25, r25
    5e40:	89 0f       	add	r24, r25
    5e42:	98 1a       	sub	r9, r24
    5e44:	c6 94       	lsr	r12
    5e46:	99 20       	and	r9, r9
    5e48:	11 f0       	breq	.+4      	; 0x5e4e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfb2>
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    5e4a:	c3 94       	inc	r12
    5e4c:	05 c0       	rjmp	.+10     	; 0x5e58 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfbc>
								command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							else
							{
								euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    5e4e:	43 e0       	ldi	r20, 0x03	; 3
    5e50:	94 2e       	mov	r9, r20
    5e52:	02 c0       	rjmp	.+4      	; 0x5e58 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfbc>
						
						valve_number =  _sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i];
						
						if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
						{
							euro_valve_num = 1;
    5e54:	cc 24       	eor	r12, r12
    5e56:	c3 94       	inc	r12
								command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
							}
							
						}
						/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5e58:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5e5c:	81 30       	cpi	r24, 0x01	; 1
    5e5e:	89 f4       	brne	.+34     	; 0x5e82 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xfe6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    5e60:	6b e3       	ldi	r22, 0x3B	; 59
    5e62:	74 e0       	ldi	r23, 0x04	; 4
    5e64:	8f e6       	ldi	r24, 0x6F	; 111
    5e66:	96 e1       	ldi	r25, 0x16	; 22
    5e68:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    5e6c:	4a e0       	ldi	r20, 0x0A	; 10
    5e6e:	50 e0       	ldi	r21, 0x00	; 0
    5e70:	6c 2d       	mov	r22, r12
    5e72:	8f e6       	ldi	r24, 0x6F	; 111
    5e74:	96 e1       	ldi	r25, 0x16	; 22
    5e76:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
							_kSERIAL_MON_CLEAR();
    5e7a:	8f e6       	ldi	r24, 0x6F	; 111
    5e7c:	96 e1       	ldi	r25, 0x16	; 22
    5e7e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						
						if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    5e82:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
    5e86:	81 11       	cpse	r24, r1
						{
							_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    5e88:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
						}
						
						memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    5e8c:	84 e1       	ldi	r24, 0x14	; 20
    5e8e:	ac ea       	ldi	r26, 0xAC	; 172
    5e90:	b5 e1       	ldi	r27, 0x15	; 21
    5e92:	1d 92       	st	X+, r1
    5e94:	8a 95       	dec	r24
    5e96:	e9 f7       	brne	.-6      	; 0x5e92 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xff6>
						count = _kRESET;
						/********************************** wireless valve command (on/off) **********************************/
						/* valve id, on/off command, pump run timer */
						
						/************************************* copy the euro valve ID *********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    5e98:	2c 2d       	mov	r18, r12
    5e9a:	30 e0       	ldi	r19, 0x00	; 0
    5e9c:	21 50       	subi	r18, 0x01	; 1
    5e9e:	31 09       	sbc	r19, r1
    5ea0:	b7 e0       	ldi	r27, 0x07	; 7
    5ea2:	b2 9f       	mul	r27, r18
    5ea4:	c0 01       	movw	r24, r0
    5ea6:	b3 9f       	mul	r27, r19
    5ea8:	90 0d       	add	r25, r0
    5eaa:	11 24       	eor	r1, r1
    5eac:	8b 59       	subi	r24, 0x9B	; 155
    5eae:	9a 4e       	sbci	r25, 0xEA	; 234
    5eb0:	fc 01       	movw	r30, r24
    5eb2:	ec 58       	subi	r30, 0x8C	; 140
    5eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    5eb6:	20 81       	ld	r18, Z
    5eb8:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    5ebc:	31 96       	adiw	r30, 0x01	; 1
    5ebe:	20 81       	ld	r18, Z
    5ec0:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    5ec4:	31 96       	adiw	r30, 0x01	; 1
    5ec6:	20 81       	ld	r18, Z
    5ec8:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    5ecc:	31 96       	adiw	r30, 0x01	; 1
    5ece:	20 81       	ld	r18, Z
    5ed0:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    5ed4:	31 96       	adiw	r30, 0x01	; 1
    5ed6:	20 81       	ld	r18, Z
    5ed8:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    5edc:	31 96       	adiw	r30, 0x01	; 1
    5ede:	20 81       	ld	r18, Z
    5ee0:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
						
						/*********************************** packet_id ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    5ee4:	f0 92 b2 15 	sts	0x15B2, r15	; 0x8015b2 <_sRuble_Parameters+0x4d>
						
						/*********************************** copy on/off command ***********************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    5ee8:	70 92 b3 15 	sts	0x15B3, r7	; 0x8015b3 <_sRuble_Parameters+0x4e>
						
						/********************************** copy operation mode ************************************************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    5eec:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    5ef0:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
						
						/******************************** copy pump timer (used if selected mode is timer) *********************/
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    5ef4:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
    5ef8:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    5efc:	90 92 b7 15 	sts	0x15B7, r9	; 0x8015b7 <_sRuble_Parameters+0x52>
    5f00:	40 e0       	ldi	r20, 0x00	; 0
    5f02:	50 e0       	ldi	r21, 0x00	; 0
    5f04:	84 2e       	mov	r8, r20
    5f06:	91 2c       	mov	r9, r1
    5f08:	c1 2c       	mov	r12, r1
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    5f0a:	d4 9e       	mul	r13, r20
    5f0c:	b0 01       	movw	r22, r0
    5f0e:	d5 9e       	mul	r13, r21
    5f10:	70 0d       	add	r23, r0
    5f12:	11 24       	eor	r1, r1
    5f14:	69 51       	subi	r22, 0x19	; 25
    5f16:	74 4f       	sbci	r23, 0xF4	; 244
    5f18:	2c 2d       	mov	r18, r12
    5f1a:	30 e0       	ldi	r19, 0x00	; 0
    5f1c:	fb 01       	movw	r30, r22
    5f1e:	e2 0f       	add	r30, r18
    5f20:	f3 1f       	adc	r31, r19
    5f22:	28 0f       	add	r18, r24
    5f24:	39 1f       	adc	r19, r25
    5f26:	d9 01       	movw	r26, r18
    5f28:	ac 58       	subi	r26, 0x8C	; 140
    5f2a:	bf 4f       	sbci	r27, 0xFF	; 255
    5f2c:	21 81       	ldd	r18, Z+1	; 0x01
    5f2e:	3c 91       	ld	r19, X
    5f30:	23 17       	cp	r18, r19
    5f32:	19 f0       	breq	.+6      	; 0x5f3a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x109e>
								{
									compare_id = _kVALVE_ID_LEN;
									id_len = _kRESET;
    5f34:	91 2c       	mov	r9, r1
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
							{
								if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
								{
									compare_id = _kVALVE_ID_LEN;
    5f36:	36 e0       	ldi	r19, 0x06	; 6
    5f38:	c3 2e       	mov	r12, r19
									id_len = _kRESET;
								}
								id_len++;
    5f3a:	93 94       	inc	r9
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
						{
							/************************ compare each valve id one by one with the list of euro valves **************************/
							id_len = _kRESET;
							for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    5f3c:	c3 94       	inc	r12
    5f3e:	e5 e0       	ldi	r30, 0x05	; 5
    5f40:	ec 15       	cp	r30, r12
    5f42:	50 f7       	brcc	.-44     	; 0x5f18 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x107c>
									id_len = _kRESET;
								}
								id_len++;
							}
							
							if(id_len == _kVALVE_ID_LEN)
    5f44:	f6 e0       	ldi	r31, 0x06	; 6
    5f46:	9f 16       	cp	r9, r31
    5f48:	31 f0       	breq	.+12     	; 0x5f56 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10ba>
    5f4a:	4f 5f       	subi	r20, 0xFF	; 255
    5f4c:	5f 4f       	sbci	r21, 0xFF	; 255
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
						_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
						_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
						
						/* check which structure to which EURO valve we are going to update */
						for(j=0;j<_kMAX_EURO_VALVE;j++)
    5f4e:	44 30       	cpi	r20, 0x04	; 4
    5f50:	51 05       	cpc	r21, r1
    5f52:	c1 f6       	brne	.-80     	; 0x5f04 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1068>
    5f54:	01 c0       	rjmp	.+2      	; 0x5f58 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10bc>
    5f56:	68 2c       	mov	r6, r8
							{
								current_valve_number = j;    /* data send will update of this valve because valve get match */
								break;
							}
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    5f58:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5f5c:	81 30       	cpi	r24, 0x01	; 1
    5f5e:	89 f4       	brne	.+34     	; 0x5f82 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x10e6>
						{
							_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    5f60:	65 e2       	ldi	r22, 0x25	; 37
    5f62:	74 e0       	ldi	r23, 0x04	; 4
    5f64:	8f e6       	ldi	r24, 0x6F	; 111
    5f66:	96 e1       	ldi	r25, 0x16	; 22
    5f68:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    5f6c:	4a e0       	ldi	r20, 0x0A	; 10
    5f6e:	50 e0       	ldi	r21, 0x00	; 0
    5f70:	66 2d       	mov	r22, r6
    5f72:	8f e6       	ldi	r24, 0x6F	; 111
    5f74:	96 e1       	ldi	r25, 0x16	; 22
    5f76:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
							_kSERIAL_MON_CLEAR();
    5f7a:	8f e6       	ldi	r24, 0x6F	; 111
    5f7c:	96 e1       	ldi	r25, 0x16	; 22
    5f7e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    5f82:	2d e0       	ldi	r18, 0x0D	; 13
    5f84:	62 9e       	mul	r6, r18
    5f86:	20 01       	movw	r4, r0
    5f88:	11 24       	eor	r1, r1
    5f8a:	c1 2c       	mov	r12, r1
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    5f8c:	d6 9c       	mul	r13, r6
    5f8e:	c0 01       	movw	r24, r0
    5f90:	11 24       	eor	r1, r1
    5f92:	9c 01       	movw	r18, r24
    5f94:	29 51       	subi	r18, 0x19	; 25
    5f96:	34 4f       	sbci	r19, 0xF4	; 244
    5f98:	a9 01       	movw	r20, r18
    5f9a:	45 5f       	subi	r20, 0xF5	; 245
    5f9c:	5f 4f       	sbci	r21, 0xFF	; 255
    5f9e:	5c ab       	std	Y+52, r21	; 0x34
    5fa0:	4b ab       	std	Y+51, r20	; 0x33
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    5fa2:	d9 01       	movw	r26, r18
    5fa4:	18 96       	adiw	r26, 0x08	; 8
    5fa6:	be ab       	std	Y+54, r27	; 0x36
    5fa8:	ad ab       	std	Y+53, r26	; 0x35
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    5faa:	fc 01       	movw	r30, r24
    5fac:	e8 51       	subi	r30, 0x18	; 24
    5fae:	f4 4f       	sbci	r31, 0xF4	; 244
    5fb0:	4f 01       	movw	r8, r30
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
						{
							if(Subscribed_data_check())
    5fb2:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
    5fb6:	88 23       	and	r24, r24
    5fb8:	a1 f0       	breq	.+40     	; 0x5fe2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1146>
							{
								if(Seperate_Out_Sub_Data())
    5fba:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
    5fbe:	88 23       	and	r24, r24
    5fc0:	81 f0       	breq	.+32     	; 0x5fe2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1146>
								{
									//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
									Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    5fc2:	e7 e8       	ldi	r30, 0x87	; 135
    5fc4:	f1 e1       	ldi	r31, 0x11	; 17
    5fc6:	01 90       	ld	r0, Z+
    5fc8:	00 20       	and	r0, r0
    5fca:	e9 f7       	brne	.-6      	; 0x5fc6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x112a>
    5fcc:	31 97       	sbiw	r30, 0x01	; 1
    5fce:	af 01       	movw	r20, r30
    5fd0:	47 58       	subi	r20, 0x87	; 135
    5fd2:	51 41       	sbci	r21, 0x11	; 17
    5fd4:	21 e0       	ldi	r18, 0x01	; 1
    5fd6:	67 e8       	ldi	r22, 0x87	; 135
    5fd8:	71 e1       	ldi	r23, 0x11	; 17
    5fda:	89 e1       	ldi	r24, 0x19	; 25
    5fdc:	91 e1       	ldi	r25, 0x11	; 17
    5fde:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
								}
							}
							data_send_counter++;
    5fe2:	c3 94       	inc	r12
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    5fe4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    5fe8:	81 30       	cpi	r24, 0x01	; 1
    5fea:	51 f4       	brne	.+20     	; 0x6000 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1164>
							{
								_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    5fec:	61 e0       	ldi	r22, 0x01	; 1
    5fee:	74 e0       	ldi	r23, 0x04	; 4
    5ff0:	8f e6       	ldi	r24, 0x6F	; 111
    5ff2:	96 e1       	ldi	r25, 0x16	; 22
    5ff4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    5ff8:	8f e6       	ldi	r24, 0x6F	; 111
    5ffa:	96 e1       	ldi	r25, 0x16	; 22
    5ffc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							Display_Update_1();
    6000:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
							_kLORA_SEND_DATA(count);
    6004:	8c e0       	ldi	r24, 0x0C	; 12
    6006:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
							
							if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    600a:	88 eb       	ldi	r24, 0xB8	; 184
    600c:	9b e0       	ldi	r25, 0x0B	; 11
    600e:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    6012:	88 23       	and	r24, r24
    6014:	09 f4       	brne	.+2      	; 0x6018 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x117c>
    6016:	4f c1       	rjmp	.+670    	; 0x62b6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x141a>
							{
								/**************************** update the received data in buff lora rx_tx **********************/
								if(_kLORA_RECV_DATA())            /* check the received data */
    6018:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
    601c:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6020:	88 23       	and	r24, r24
    6022:	09 f4       	brne	.+2      	; 0x6026 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x118a>
    6024:	f9 c0       	rjmp	.+498    	; 0x6218 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x137c>
								{
									
									//RF95_setModeRx_Continuous();
									/* check the id get matched to the valve or not */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6026:	91 30       	cpi	r25, 0x01	; 1
    6028:	59 f5       	brne	.+86     	; 0x6080 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11e4>
									{
										_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    602a:	6b ee       	ldi	r22, 0xEB	; 235
    602c:	73 e0       	ldi	r23, 0x03	; 3
    602e:	8f e6       	ldi	r24, 0x6F	; 111
    6030:	96 e1       	ldi	r25, 0x16	; 22
    6032:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
    6036:	4a e0       	ldi	r20, 0x0A	; 10
    6038:	50 e0       	ldi	r21, 0x00	; 0
    603a:	60 ec       	ldi	r22, 0xC0	; 192
    603c:	75 e1       	ldi	r23, 0x15	; 21
    603e:	8f e6       	ldi	r24, 0x6F	; 111
    6040:	96 e1       	ldi	r25, 0x16	; 22
    6042:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
										Serial.println();
    6046:	8f e6       	ldi	r24, 0x6F	; 111
    6048:	96 e1       	ldi	r25, 0x16	; 22
    604a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    604e:	8f e6       	ldi	r24, 0x6F	; 111
    6050:	96 e1       	ldi	r25, 0x16	; 22
    6052:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									
										_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    6056:	6d ec       	ldi	r22, 0xCD	; 205
    6058:	73 e0       	ldi	r23, 0x03	; 3
    605a:	8f e6       	ldi	r24, 0x6F	; 111
    605c:	96 e1       	ldi	r25, 0x16	; 22
    605e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    6062:	47 e0       	ldi	r20, 0x07	; 7
    6064:	50 e0       	ldi	r21, 0x00	; 0
    6066:	b4 01       	movw	r22, r8
    6068:	8f e6       	ldi	r24, 0x6F	; 111
    606a:	96 e1       	ldi	r25, 0x16	; 22
    606c:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
										Serial.println();
    6070:	8f e6       	ldi	r24, 0x6F	; 111
    6072:	96 e1       	ldi	r25, 0x16	; 22
    6074:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    6078:	8f e6       	ldi	r24, 0x6F	; 111
    607a:	96 e1       	ldi	r25, 0x16	; 22
    607c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    6080:	a0 ec       	ldi	r26, 0xC0	; 192
    6082:	b5 e1       	ldi	r27, 0x15	; 21
    6084:	80 e0       	ldi	r24, 0x00	; 0
    6086:	90 e0       	ldi	r25, 0x00	; 0
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
									{
										if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    6088:	2d 91       	ld	r18, X+
    608a:	f2 01       	movw	r30, r4
    608c:	e8 0f       	add	r30, r24
    608e:	f9 1f       	adc	r31, r25
    6090:	e9 51       	subi	r30, 0x19	; 25
    6092:	f4 4f       	sbci	r31, 0xF4	; 244
    6094:	31 81       	ldd	r19, Z+1	; 0x01
    6096:	32 17       	cp	r19, r18
    6098:	09 f4       	brne	.+2      	; 0x609c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1200>
    609a:	67 c0       	rjmp	.+206    	; 0x616a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12ce>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    609c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    60a0:	81 30       	cpi	r24, 0x01	; 1
    60a2:	51 f4       	brne	.+20     	; 0x60b8 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x121c>
											{
												_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    60a4:	62 ea       	ldi	r22, 0xA2	; 162
    60a6:	73 e0       	ldi	r23, 0x03	; 3
    60a8:	8f e6       	ldi	r24, 0x6F	; 111
    60aa:	96 e1       	ldi	r25, 0x16	; 22
    60ac:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    60b0:	8f e6       	ldi	r24, 0x6F	; 111
    60b2:	96 e1       	ldi	r25, 0x16	; 22
    60b4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    60b8:	f2 e0       	ldi	r31, 0x02	; 2
    60ba:	cf 16       	cp	r12, r31
    60bc:	b1 f0       	breq	.+44     	; 0x60ea <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x124e>
										}
									}
									
									/* if id get matched */
									
									_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    60be:	ab a9       	ldd	r26, Y+51	; 0x33
    60c0:	bc a9       	ldd	r27, Y+52	; 0x34
    60c2:	ec 92       	st	X, r14
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    60c4:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    60c8:	90 e0       	ldi	r25, 0x00	; 0
    60ca:	98 2f       	mov	r25, r24
    60cc:	88 27       	eor	r24, r24
    60ce:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    60d2:	82 2b       	or	r24, r18
    60d4:	ed a9       	ldd	r30, Y+53	; 0x35
    60d6:	fe a9       	ldd	r31, Y+54	; 0x36
    60d8:	91 83       	std	Z+1, r25	; 0x01
    60da:	80 83       	st	Z, r24
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    60dc:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    60e0:	78 12       	cpse	r7, r24
    60e2:	49 c0       	rjmp	.+146    	; 0x6176 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12da>
											return 0;
										}
									}
									else
									{
										data_send_counter = 3;
    60e4:	83 e0       	ldi	r24, 0x03	; 3
    60e6:	c8 2e       	mov	r12, r24
    60e8:	1e c1       	rjmp	.+572    	; 0x6326 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148a>
												_kSERIAL_MON_CLEAR();
											}
											
											if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
											{
												_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    60ea:	86 e0       	ldi	r24, 0x06	; 6
    60ec:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
												_gfault_Occure = _kFAULT_RESET_TIMER;
    60f0:	84 e6       	ldi	r24, 0x64	; 100
    60f2:	90 e0       	ldi	r25, 0x00	; 0
    60f4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    60f8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    60fc:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    6100:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    6104:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    6108:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    610c:	a0 62       	ori	r26, 0x20	; 32
    610e:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    6112:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    6116:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    611a:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
												_sRuble_Parameters.Last_Valve = current_valve_number;
    611e:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6122:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    6126:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    612a:	82 60       	ori	r24, 0x02	; 2
    612c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    6130:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    6134:	00 e0       	ldi	r16, 0x00	; 0
    6136:	10 e0       	ldi	r17, 0x00	; 0
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
												{
													if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6138:	f5 01       	movw	r30, r10
    613a:	e0 0f       	add	r30, r16
    613c:	f1 1f       	adc	r31, r17
    613e:	e5 81       	ldd	r30, Z+5	; 0x05
    6140:	ed 30       	cpi	r30, 0x0D	; 13
    6142:	68 f0       	brcs	.+26     	; 0x615e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12c2>
													{
														/********************************* turn on/off the wired valve *********************************/
														
														_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6144:	f0 e0       	ldi	r31, 0x00	; 0
    6146:	e8 51       	subi	r30, 0x18	; 24
    6148:	fa 4e       	sbci	r31, 0xEA	; 234
    614a:	61 e0       	ldi	r22, 0x01	; 1
    614c:	80 81       	ld	r24, Z
    614e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
														_kDELAY_MS(200);
    6152:	68 ec       	ldi	r22, 0xC8	; 200
    6154:	70 e0       	ldi	r23, 0x00	; 0
    6156:	80 e0       	ldi	r24, 0x00	; 0
    6158:	90 e0       	ldi	r25, 0x00	; 0
    615a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    615e:	0f 5f       	subi	r16, 0xFF	; 255
    6160:	1f 4f       	sbci	r17, 0xFF	; 255
												_gfault_Occure = _kFAULT_RESET_TIMER;
												_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
												_sRuble_Parameters.Last_Valve = current_valve_number;
												_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
												
												for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6162:	05 30       	cpi	r16, 0x05	; 5
    6164:	11 05       	cpc	r17, r1
    6166:	41 f7       	brne	.-48     	; 0x6138 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x129c>
    6168:	dc c0       	rjmp	.+440    	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
    616a:	01 96       	adiw	r24, 0x01	; 1
										_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
										Serial.println();
										_kSERIAL_MON_CLEAR();
									}
									
									for(j=0;j<_kVALVE_ID_LEN;j++)
    616c:	86 30       	cpi	r24, 0x06	; 6
    616e:	91 05       	cpc	r25, r1
    6170:	09 f0       	breq	.+2      	; 0x6174 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12d8>
    6172:	8a cf       	rjmp	.-236    	; 0x6088 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x11ec>
    6174:	a4 cf       	rjmp	.-184    	; 0x60be <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1222>
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
									_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
									
									if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    6176:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    617a:	81 30       	cpi	r24, 0x01	; 1
    617c:	51 f4       	brne	.+20     	; 0x6192 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x12f6>
										{
											_kSERAIL_MON_WRITE("Euro Feedback fail");
    617e:	6f e8       	ldi	r22, 0x8F	; 143
    6180:	73 e0       	ldi	r23, 0x03	; 3
    6182:	8f e6       	ldi	r24, 0x6F	; 111
    6184:	96 e1       	ldi	r25, 0x16	; 22
    6186:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    618a:	8f e6       	ldi	r24, 0x6F	; 111
    618c:	96 e1       	ldi	r25, 0x16	; 22
    618e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    6192:	f2 e0       	ldi	r31, 0x02	; 2
    6194:	cf 12       	cpse	r12, r31
    6196:	c7 c0       	rjmp	.+398    	; 0x6326 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148a>
										{
											_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6198:	86 e0       	ldi	r24, 0x06	; 6
    619a:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    619e:	84 e6       	ldi	r24, 0x64	; 100
    61a0:	90 e0       	ldi	r25, 0x00	; 0
    61a2:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    61a6:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    61aa:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    61ae:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    61b2:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    61b6:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    61ba:	a0 62       	ori	r26, 0x20	; 32
    61bc:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    61c0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    61c4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    61c8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
											_sRuble_Parameters.Last_Valve = current_valve_number;
    61cc:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    61d0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    61d4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    61d8:	82 60       	ori	r24, 0x02	; 2
    61da:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    61de:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    61e2:	00 e0       	ldi	r16, 0x00	; 0
    61e4:	10 e0       	ldi	r17, 0x00	; 0
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
											{
												if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    61e6:	f5 01       	movw	r30, r10
    61e8:	e0 0f       	add	r30, r16
    61ea:	f1 1f       	adc	r31, r17
    61ec:	e5 81       	ldd	r30, Z+5	; 0x05
    61ee:	ed 30       	cpi	r30, 0x0D	; 13
    61f0:	68 f0       	brcs	.+26     	; 0x620c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1370>
												{
													/********************************* turn on/off the wired valve *********************************/
													
													_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    61f2:	f0 e0       	ldi	r31, 0x00	; 0
    61f4:	e8 51       	subi	r30, 0x18	; 24
    61f6:	fa 4e       	sbci	r31, 0xEA	; 234
    61f8:	61 e0       	ldi	r22, 0x01	; 1
    61fa:	80 81       	ld	r24, Z
    61fc:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
													_kDELAY_MS(200);
    6200:	68 ec       	ldi	r22, 0xC8	; 200
    6202:	70 e0       	ldi	r23, 0x00	; 0
    6204:	80 e0       	ldi	r24, 0x00	; 0
    6206:	90 e0       	ldi	r25, 0x00	; 0
    6208:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    620c:	0f 5f       	subi	r16, 0xFF	; 255
    620e:	1f 4f       	sbci	r17, 0xFF	; 255
											_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
											_sRuble_Parameters.Last_Valve = current_valve_number;
											_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
											
											
											for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    6210:	05 30       	cpi	r16, 0x05	; 5
    6212:	11 05       	cpc	r17, r1
    6214:	41 f7       	brne	.-48     	; 0x61e6 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x134a>
    6216:	85 c0       	rjmp	.+266    	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
										data_send_counter = 3;
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6218:	91 30       	cpi	r25, 0x01	; 1
    621a:	51 f4       	brne	.+20     	; 0x6230 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1394>
									{
										_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    621c:	64 e5       	ldi	r22, 0x54	; 84
    621e:	73 e0       	ldi	r23, 0x03	; 3
    6220:	8f e6       	ldi	r24, 0x6F	; 111
    6222:	96 e1       	ldi	r25, 0x16	; 22
    6224:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    6228:	8f e6       	ldi	r24, 0x6F	; 111
    622a:	96 e1       	ldi	r25, 0x16	; 22
    622c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    6230:	22 e0       	ldi	r18, 0x02	; 2
    6232:	c2 12       	cpse	r12, r18
    6234:	78 c0       	rjmp	.+240    	; 0x6326 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148a>
									{
										_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    6236:	86 e0       	ldi	r24, 0x06	; 6
    6238:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
										_gfault_Occure = _kFAULT_RESET_TIMER;
    623c:	84 e6       	ldi	r24, 0x64	; 100
    623e:	90 e0       	ldi	r25, 0x00	; 0
    6240:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    6244:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    6248:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    624c:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    6250:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    6254:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    6258:	a0 62       	ori	r26, 0x20	; 32
    625a:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    625e:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    6262:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    6266:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
										_sRuble_Parameters.Last_Valve = current_valve_number;
    626a:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    626e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    6272:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    6276:	82 60       	ori	r24, 0x02	; 2
    6278:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    627c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    6280:	00 e0       	ldi	r16, 0x00	; 0
    6282:	10 e0       	ldi	r17, 0x00	; 0
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
										{
											if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    6284:	f5 01       	movw	r30, r10
    6286:	e0 0f       	add	r30, r16
    6288:	f1 1f       	adc	r31, r17
    628a:	e5 81       	ldd	r30, Z+5	; 0x05
    628c:	ed 30       	cpi	r30, 0x0D	; 13
    628e:	68 f0       	brcs	.+26     	; 0x62aa <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x140e>
											{
												/********************************* turn on/off the wired valve *********************************/
												
												_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    6290:	f0 e0       	ldi	r31, 0x00	; 0
    6292:	e8 51       	subi	r30, 0x18	; 24
    6294:	fa 4e       	sbci	r31, 0xEA	; 234
    6296:	61 e0       	ldi	r22, 0x01	; 1
    6298:	80 81       	ld	r24, Z
    629a:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
												_kDELAY_MS(200);
    629e:	68 ec       	ldi	r22, 0xC8	; 200
    62a0:	70 e0       	ldi	r23, 0x00	; 0
    62a2:	80 e0       	ldi	r24, 0x00	; 0
    62a4:	90 e0       	ldi	r25, 0x00	; 0
    62a6:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    62aa:	0f 5f       	subi	r16, 0xFF	; 255
    62ac:	1f 4f       	sbci	r17, 0xFF	; 255
										_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
										_sRuble_Parameters.Last_Valve = current_valve_number;
										_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
										
										
										for(unsigned char wired_valve=0; wired_valve <_kMAX_VALVE_FOR_1PLOT;  wired_valve++)
    62ae:	05 30       	cpi	r16, 0x05	; 5
    62b0:	11 05       	cpc	r17, r1
    62b2:	41 f7       	brne	.-48     	; 0x6284 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x13e8>
    62b4:	36 c0       	rjmp	.+108    	; 0x6322 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1486>
									}
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    62b6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    62ba:	81 30       	cpi	r24, 0x01	; 1
    62bc:	51 f4       	brne	.+20     	; 0x62d2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1436>
								{
									_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    62be:	69 e1       	ldi	r22, 0x19	; 25
    62c0:	73 e0       	ldi	r23, 0x03	; 3
    62c2:	8f e6       	ldi	r24, 0x6F	; 111
    62c4:	96 e1       	ldi	r25, 0x16	; 22
    62c6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    62ca:	8f e6       	ldi	r24, 0x6F	; 111
    62cc:	96 e1       	ldi	r25, 0x16	; 22
    62ce:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								//RF95_setModeRx_Continuous();
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    62d2:	32 e0       	ldi	r19, 0x02	; 2
    62d4:	c3 12       	cpse	r12, r19
    62d6:	27 c0       	rjmp	.+78     	; 0x6326 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x148a>
								{
									_gfault_Occure = _kFAULT_RESET_TIMER;
    62d8:	84 e6       	ldi	r24, 0x64	; 100
    62da:	90 e0       	ldi	r25, 0x00	; 0
    62dc:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    62e0:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    62e4:	86 e0       	ldi	r24, 0x06	; 6
    62e6:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    62ea:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    62ee:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    62f2:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    62f6:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    62fa:	a0 62       	ori	r26, 0x20	; 32
    62fc:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    6300:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    6304:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    6308:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    630c:	60 92 17 16 	sts	0x1617, r6	; 0x801617 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    6310:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    6314:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    6318:	82 60       	ori	r24, 0x02	; 2
    631a:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    631e:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
									return 0;          /* no data available */
    6322:	80 e0       	ldi	r24, 0x00	; 0
    6324:	4f c0       	rjmp	.+158    	; 0x63c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1528>
								}
							}
							_kDELAY_MS(1000);
    6326:	68 ee       	ldi	r22, 0xE8	; 232
    6328:	73 e0       	ldi	r23, 0x03	; 3
    632a:	80 e0       	ldi	r24, 0x00	; 0
    632c:	90 e0       	ldi	r25, 0x00	; 0
    632e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
							_kSERIAL_MON_CLEAR();
						}
						
						data_send_counter = _kRESET;
						
						while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    6332:	43 e0       	ldi	r20, 0x03	; 3
    6334:	c4 12       	cpse	r12, r20
    6336:	3d ce       	rjmp	.-902    	; 0x5fb2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1116>
    6338:	2e c0       	rjmp	.+92     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14fa>
						}
					}
					
					/******************************************************** handle wired valve *******************************************************************/
					
					else if(_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    633a:	5c e0       	ldi	r21, 0x0C	; 12
    633c:	59 15       	cp	r21, r9
    633e:	78 f4       	brcc	.+30     	; 0x635e <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14c2>
					{
						/********************************* turn on/off the wired valve *********************************/
						
						_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[(Target_Plot_Num-1) - (_kMAX_PLOTS_LIMIT+_kMAX_LIRA_SENSOR_NODE)].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    6340:	e9 2d       	mov	r30, r9
    6342:	f0 e0       	ldi	r31, 0x00	; 0
    6344:	e8 51       	subi	r30, 0x18	; 24
    6346:	fa 4e       	sbci	r31, 0xEA	; 234
    6348:	6f a9       	ldd	r22, Y+55	; 0x37
    634a:	80 81       	ld	r24, Z
    634c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
						_kDELAY_MS(200);
    6350:	68 ec       	ldi	r22, 0xC8	; 200
    6352:	70 e0       	ldi	r23, 0x00	; 0
    6354:	80 e0       	ldi	r24, 0x00	; 0
    6356:	90 e0       	ldi	r25, 0x00	; 0
    6358:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    635c:	1c c0       	rjmp	.+56     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14fa>
    635e:	f8 01       	movw	r30, r16
    6360:	e2 0d       	add	r30, r2
    6362:	f3 1d       	adc	r31, r3
						if(on_off == _kON)
						{
						}
					}
					
					else if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] > 100)
    6364:	e8 50       	subi	r30, 0x08	; 8
    6366:	f3 4f       	sbci	r31, 0xF3	; 243
					{
						if(_sLira_Node_Param[Target_Plot_Num-1].Euro_Valve_Group[i] == 101)
    6368:	80 81       	ld	r24, Z
    636a:	85 36       	cpi	r24, 0x65	; 101
    636c:	a1 f4       	brne	.+40     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14fa>
    636e:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
						{
							if(on_off == _kON)
    6372:	91 e0       	ldi	r25, 0x01	; 1
    6374:	79 12       	cpse	r7, r25
    6376:	05 c0       	rjmp	.+10     	; 0x6382 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14e6>
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    6378:	88 23       	and	r24, r24
    637a:	69 f0       	breq	.+26     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14fa>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_ON;
    637c:	70 92 24 16 	sts	0x1624, r7	; 0x801624 <_sRuble_Parameters+0xbf>
    6380:	04 c0       	rjmp	.+8      	; 0x638a <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14ee>
								}
								
							}
							else
							{
								if(_sRuble_Parameters.Wireless_Pump_Command != _kRESET)
    6382:	88 23       	and	r24, r24
    6384:	41 f0       	breq	.+16     	; 0x6396 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x14fa>
								{
									_sRuble_Parameters.Wireless_Pump_Command = _eWIRELESS_PUMP_OFF;
    6386:	f0 92 24 16 	sts	0x1624, r15	; 0x801624 <_sRuble_Parameters+0xbf>
									_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    638a:	64 e2       	ldi	r22, 0x24	; 36
    638c:	76 e1       	ldi	r23, 0x16	; 22
    638e:	80 e3       	ldi	r24, 0x30	; 48
    6390:	9c e0       	ldi	r25, 0x0C	; 12
    6392:	0e 94 fc 23 	call	0x47f8	; 0x47f8 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.1>
    6396:	0f 5f       	subi	r16, 0xFF	; 255
    6398:	1f 4f       	sbci	r17, 0xFF	; 255
					_kSERAIL_MON_WRITE_NO_LN("Irrigating plot no : ");
					_kSERIAL_MON_PRINT_NUM(Target_Plot_Num-1);
					_kSERIAL_MON_CLEAR();
				}
				
				for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    639a:	05 30       	cpi	r16, 0x05	; 5
    639c:	11 05       	cpc	r17, r1
    639e:	09 f0       	breq	.+2      	; 0x63a2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1506>
    63a0:	3b cd       	rjmp	.-1418   	; 0x5e18 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0xf7c>
						}
					}
				}
				
				/* if all valve gets on */
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    63a2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    63a6:	81 30       	cpi	r24, 0x01	; 1
    63a8:	61 f4       	brne	.+24     	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
				{
					_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    63aa:	6a ef       	ldi	r22, 0xFA	; 250
    63ac:	72 e0       	ldi	r23, 0x02	; 2
    63ae:	8f e6       	ldi	r24, 0x6F	; 111
    63b0:	96 e1       	ldi	r25, 0x16	; 22
    63b2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    63b6:	8f e6       	ldi	r24, 0x6F	; 111
    63b8:	96 e1       	ldi	r25, 0x16	; 22
    63ba:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    63be:	01 c0       	rjmp	.+2      	; 0x63c2 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1526>
				return 1;
			}
			
		}break;
	}
}
    63c0:	01 c0       	rjmp	.+2      	; 0x63c4 <_Z40Valve_Grouping_Handler_For_wireless_Pumphh+0x1528>
						_kDELAY_MS(200);
					}
				}
			}
		}
		return 1;
    63c2:	81 e0       	ldi	r24, 0x01	; 1
				return 1;
			}
			
		}break;
	}
}
    63c4:	e8 96       	adiw	r28, 0x38	; 56
    63c6:	0f b6       	in	r0, 0x3f	; 63
    63c8:	f8 94       	cli
    63ca:	de bf       	out	0x3e, r29	; 62
    63cc:	0f be       	out	0x3f, r0	; 63
    63ce:	cd bf       	out	0x3d, r28	; 61
    63d0:	df 91       	pop	r29
    63d2:	cf 91       	pop	r28
    63d4:	1f 91       	pop	r17
    63d6:	0f 91       	pop	r16
    63d8:	ff 90       	pop	r15
    63da:	ef 90       	pop	r14
    63dc:	df 90       	pop	r13
    63de:	cf 90       	pop	r12
    63e0:	bf 90       	pop	r11
    63e2:	af 90       	pop	r10
    63e4:	9f 90       	pop	r9
    63e6:	8f 90       	pop	r8
    63e8:	7f 90       	pop	r7
    63ea:	6f 90       	pop	r6
    63ec:	5f 90       	pop	r5
    63ee:	4f 90       	pop	r4
    63f0:	3f 90       	pop	r3
    63f2:	2f 90       	pop	r2
    63f4:	08 95       	ret

000063f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>:
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
		_kSERIAL_MON_CLEAR();
	}
}
    63f6:	ff 92       	push	r15
    63f8:	0f 93       	push	r16
    63fa:	1f 93       	push	r17
    63fc:	cf 93       	push	r28
    63fe:	df 93       	push	r29
    6400:	00 ef       	ldi	r16, 0xF0	; 240
    6402:	18 e0       	ldi	r17, 0x08	; 8
    6404:	c2 ea       	ldi	r28, 0xA2	; 162
    6406:	d4 e0       	ldi	r29, 0x04	; 4
    6408:	f8 01       	movw	r30, r16
    640a:	f1 90       	ld	r15, Z+
    640c:	8f 01       	movw	r16, r30
    640e:	ce 01       	movw	r24, r28
    6410:	0e 94 9a ec 	call	0x1d934	; 0x1d934 <eeprom_read_byte>
    6414:	f8 16       	cp	r15, r24
    6416:	21 f0       	breq	.+8      	; 0x6420 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x2a>
    6418:	6f 2d       	mov	r22, r15
    641a:	ce 01       	movw	r24, r28
    641c:	0e 94 a2 ec 	call	0x1d944	; 0x1d944 <eeprom_write_byte>
    6420:	21 96       	adiw	r28, 0x01	; 1
    6422:	c8 37       	cpi	r28, 0x78	; 120
    6424:	f7 e0       	ldi	r31, 0x07	; 7
    6426:	df 07       	cpc	r29, r31
    6428:	79 f7       	brne	.-34     	; 0x6408 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4+0x12>
    642a:	80 ef       	ldi	r24, 0xF0	; 240
    642c:	98 e0       	ldi	r25, 0x08	; 8
    642e:	df 91       	pop	r29
    6430:	cf 91       	pop	r28
    6432:	1f 91       	pop	r17
    6434:	0f 91       	pop	r16
    6436:	ff 90       	pop	r15
    6438:	08 95       	ret

0000643a <_Z24Return_Previous_Day_Datev>:
    643a:	90 91 a9 15 	lds	r25, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    643e:	20 91 aa 15 	lds	r18, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    6442:	42 2f       	mov	r20, r18
    6444:	50 e0       	ldi	r21, 0x00	; 0
    6446:	fa 01       	movw	r30, r20
    6448:	31 97       	sbiw	r30, 0x01	; 1
    644a:	ec 30       	cpi	r30, 0x0C	; 12
    644c:	f1 05       	cpc	r31, r1
    644e:	08 f0       	brcs	.+2      	; 0x6452 <_Z24Return_Previous_Day_Datev+0x18>
    6450:	52 c0       	rjmp	.+164    	; 0x64f6 <_Z24Return_Previous_Day_Datev+0xbc>
    6452:	88 27       	eor	r24, r24
    6454:	ee 58       	subi	r30, 0x8E	; 142
    6456:	ff 4f       	sbci	r31, 0xFF	; 255
    6458:	8f 4f       	sbci	r24, 0xFF	; 255
    645a:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
    645e:	91 30       	cpi	r25, 0x01	; 1
    6460:	89 f5       	brne	.+98     	; 0x64c4 <_Z24Return_Previous_Day_Datev+0x8a>
    6462:	fa 01       	movw	r30, r20
    6464:	31 97       	sbiw	r30, 0x01	; 1
    6466:	eb 30       	cpi	r30, 0x0B	; 11
    6468:	f1 05       	cpc	r31, r1
    646a:	58 f4       	brcc	.+22     	; 0x6482 <_Z24Return_Previous_Day_Datev+0x48>
    646c:	88 27       	eor	r24, r24
    646e:	e2 58       	subi	r30, 0x82	; 130
    6470:	ff 4f       	sbci	r31, 0xFF	; 255
    6472:	8f 4f       	sbci	r24, 0xFF	; 255
    6474:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
    6478:	8c e0       	ldi	r24, 0x0C	; 12
    647a:	01 c0       	rjmp	.+2      	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    647c:	81 e0       	ldi	r24, 0x01	; 1
    647e:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
    6482:	8f e1       	ldi	r24, 0x1F	; 31
    6484:	08 95       	ret
    6486:	83 e0       	ldi	r24, 0x03	; 3
    6488:	fa cf       	rjmp	.-12     	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    648a:	85 e0       	ldi	r24, 0x05	; 5
    648c:	f8 cf       	rjmp	.-16     	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    648e:	87 e0       	ldi	r24, 0x07	; 7
    6490:	f6 cf       	rjmp	.-20     	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    6492:	88 e0       	ldi	r24, 0x08	; 8
    6494:	f4 cf       	rjmp	.-24     	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    6496:	8a e0       	ldi	r24, 0x0A	; 10
    6498:	f2 cf       	rjmp	.-28     	; 0x647e <_Z24Return_Previous_Day_Datev+0x44>
    649a:	91 30       	cpi	r25, 0x01	; 1
    649c:	99 f4       	brne	.+38     	; 0x64c4 <_Z24Return_Previous_Day_Datev+0x8a>
    649e:	27 30       	cpi	r18, 0x07	; 7
    64a0:	59 f0       	breq	.+22     	; 0x64b8 <_Z24Return_Previous_Day_Datev+0x7e>
    64a2:	20 f4       	brcc	.+8      	; 0x64ac <_Z24Return_Previous_Day_Datev+0x72>
    64a4:	25 30       	cpi	r18, 0x05	; 5
    64a6:	41 f5       	brne	.+80     	; 0x64f8 <_Z24Return_Previous_Day_Datev+0xbe>
    64a8:	84 e0       	ldi	r24, 0x04	; 4
    64aa:	09 c0       	rjmp	.+18     	; 0x64be <_Z24Return_Previous_Day_Datev+0x84>
    64ac:	2a 30       	cpi	r18, 0x0A	; 10
    64ae:	31 f0       	breq	.+12     	; 0x64bc <_Z24Return_Previous_Day_Datev+0x82>
    64b0:	2c 30       	cpi	r18, 0x0C	; 12
    64b2:	11 f5       	brne	.+68     	; 0x64f8 <_Z24Return_Previous_Day_Datev+0xbe>
    64b4:	8b e0       	ldi	r24, 0x0B	; 11
    64b6:	03 c0       	rjmp	.+6      	; 0x64be <_Z24Return_Previous_Day_Datev+0x84>
    64b8:	86 e0       	ldi	r24, 0x06	; 6
    64ba:	01 c0       	rjmp	.+2      	; 0x64be <_Z24Return_Previous_Day_Datev+0x84>
    64bc:	89 e0       	ldi	r24, 0x09	; 9
    64be:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
    64c2:	1a c0       	rjmp	.+52     	; 0x64f8 <_Z24Return_Previous_Day_Datev+0xbe>
    64c4:	20 93 fd 08 	sts	0x08FD, r18	; 0x8008fd <_sSchedules+0xd>
    64c8:	13 c0       	rjmp	.+38     	; 0x64f0 <_Z24Return_Previous_Day_Datev+0xb6>
    64ca:	91 30       	cpi	r25, 0x01	; 1
    64cc:	71 f4       	brne	.+28     	; 0x64ea <_Z24Return_Previous_Day_Datev+0xb0>
    64ce:	80 91 ab 15 	lds	r24, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    64d2:	83 70       	andi	r24, 0x03	; 3
    64d4:	29 f0       	breq	.+10     	; 0x64e0 <_Z24Return_Previous_Day_Datev+0xa6>
    64d6:	82 e0       	ldi	r24, 0x02	; 2
    64d8:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
    64dc:	8c e1       	ldi	r24, 0x1C	; 28
    64de:	08 95       	ret
    64e0:	82 e0       	ldi	r24, 0x02	; 2
    64e2:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
    64e6:	8d e1       	ldi	r24, 0x1D	; 29
    64e8:	08 95       	ret
    64ea:	83 e0       	ldi	r24, 0x03	; 3
    64ec:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
    64f0:	8f ef       	ldi	r24, 0xFF	; 255
    64f2:	89 0f       	add	r24, r25
    64f4:	08 95       	ret
    64f6:	08 95       	ret
    64f8:	8e e1       	ldi	r24, 0x1E	; 30
    64fa:	08 95       	ret

000064fc <_Z15Delete_Scheduleh>:
    64fc:	88 23       	and	r24, r24
    64fe:	a9 f1       	breq	.+106    	; 0x656a <_Z15Delete_Scheduleh+0x6e>
    6500:	30 91 aa 0b 	lds	r19, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    6504:	33 23       	and	r19, r19
    6506:	89 f1       	breq	.+98     	; 0x656a <_Z15Delete_Scheduleh+0x6e>
    6508:	30 91 aa 0b 	lds	r19, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    650c:	83 13       	cpse	r24, r19
    650e:	2d c0       	rjmp	.+90     	; 0x656a <_Z15Delete_Scheduleh+0x6e>
    6510:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
    6514:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
    6518:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    651c:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
    6520:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    6524:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    6528:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    652c:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    6530:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    6534:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
    6538:	23 30       	cpi	r18, 0x03	; 3
    653a:	51 f0       	breq	.+20     	; 0x6550 <_Z15Delete_Scheduleh+0x54>
    653c:	e2 2f       	mov	r30, r18
    653e:	f0 e0       	ldi	r31, 0x00	; 0
    6540:	ee 0f       	add	r30, r30
    6542:	ff 1f       	adc	r31, r31
    6544:	ec 5a       	subi	r30, 0xAC	; 172
    6546:	f4 4f       	sbci	r31, 0xF4	; 244
    6548:	11 82       	std	Z+1, r1	; 0x01
    654a:	10 82       	st	Z, r1
    654c:	2f 5f       	subi	r18, 0xFF	; 255
    654e:	f4 cf       	rjmp	.-24     	; 0x6538 <_Z15Delete_Scheduleh+0x3c>
    6550:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    6554:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
    6558:	93 30       	cpi	r25, 0x03	; 3
    655a:	39 f0       	breq	.+14     	; 0x656a <_Z15Delete_Scheduleh+0x6e>
    655c:	e9 2f       	mov	r30, r25
    655e:	f0 e0       	ldi	r31, 0x00	; 0
    6560:	e0 5b       	subi	r30, 0xB0	; 176
    6562:	f4 4f       	sbci	r31, 0xF4	; 244
    6564:	10 82       	st	Z, r1
    6566:	9f 5f       	subi	r25, 0xFF	; 255
    6568:	f7 cf       	rjmp	.-18     	; 0x6558 <_Z15Delete_Scheduleh+0x5c>
    656a:	08 95       	ret

0000656c <_Z35Return_Calculated_Previous_Day_Dateh>:

unsigned char Return_Calculated_Previous_Day_Date(unsigned char days_in_bet_schedule)
{
    656c:	ff 92       	push	r15
    656e:	0f 93       	push	r16
    6570:	1f 93       	push	r17
    6572:	cf 93       	push	r28
    6574:	df 93       	push	r29
	int make_date;
	unsigned char return_date, return_month;
	unsigned char year;
	year  = _sRuble_Parameters.Update_Local_Date[2];
    6576:	f0 90 ab 15 	lds	r15, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Irrigating_Date == 0)
    657a:	80 91 fa 08 	lds	r24, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    657e:	81 11       	cpse	r24, r1
    6580:	20 c0       	rjmp	.+64     	; 0x65c2 <_Z35Return_Calculated_Previous_Day_Dateh+0x56>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    6582:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6586:	81 30       	cpi	r24, 0x01	; 1
    6588:	51 f4       	brne	.+20     	; 0x659e <_Z35Return_Calculated_Previous_Day_Dateh+0x32>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 1///////////////////////////////////////////");
    658a:	62 e6       	ldi	r22, 0x62	; 98
    658c:	7d e1       	ldi	r23, 0x1D	; 29
    658e:	8f e6       	ldi	r24, 0x6F	; 111
    6590:	96 e1       	ldi	r25, 0x16	; 22
    6592:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    6596:	8f e6       	ldi	r24, 0x6F	; 111
    6598:	96 e1       	ldi	r25, 0x16	; 22
    659a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Irrigating_Date = _sRuble_Parameters.Update_Local_Date[0];
    659e:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    65a2:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    65a6:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    65aa:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
		make_date = _sSchedules.Irrigating_Date - (_sSchedules.Days_In_Between_Schedules+1);
    65ae:	00 91 fa 08 	lds	r16, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    65b2:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <_sSchedules+0x1c>
    65b6:	10 e0       	ldi	r17, 0x00	; 0
    65b8:	90 e0       	ldi	r25, 0x00	; 0
    65ba:	01 96       	adiw	r24, 0x01	; 1
    65bc:	08 1b       	sub	r16, r24
    65be:	19 0b       	sbc	r17, r25
    65c0:	13 c0       	rjmp	.+38     	; 0x65e8 <_Z35Return_Calculated_Previous_Day_Dateh+0x7c>
		if(_sSchedules.Irrigating_Month == 0)
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
		}*/
		
		make_date = _sRuble_Parameters.Update_Local_Date[0] - (_sSchedules.Days_In_Between_Schedules+1);
    65c2:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <_sSchedules+0x1c>
    65c6:	00 91 a9 15 	lds	r16, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    65ca:	10 e0       	ldi	r17, 0x00	; 0
    65cc:	90 e0       	ldi	r25, 0x00	; 0
    65ce:	01 96       	adiw	r24, 0x01	; 1
    65d0:	08 1b       	sub	r16, r24
    65d2:	19 0b       	sbc	r17, r25
		if(_sSchedules.Irrigating_Month == 0)
    65d4:	90 91 fb 08 	lds	r25, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    65d8:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    65dc:	91 11       	cpse	r25, r1
    65de:	02 c0       	rjmp	.+4      	; 0x65e4 <_Z35Return_Calculated_Previous_Day_Dateh+0x78>
		{
			_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    65e0:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
		}
		_sSchedules.Irrigating_Month = _sRuble_Parameters.Update_Local_Date[1];
    65e4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
	}
	
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    65e8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    65ec:	81 30       	cpi	r24, 0x01	; 1
    65ee:	89 f4       	brne	.+34     	; 0x6612 <_Z35Return_Calculated_Previous_Day_Dateh+0xa6>
	{
		_kSERAIL_MON_WRITE("sc make date");
    65f0:	65 e5       	ldi	r22, 0x55	; 85
    65f2:	7d e1       	ldi	r23, 0x1D	; 29
    65f4:	8f e6       	ldi	r24, 0x6F	; 111
    65f6:	96 e1       	ldi	r25, 0x16	; 22
    65f8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(make_date);
    65fc:	4a e0       	ldi	r20, 0x0A	; 10
    65fe:	50 e0       	ldi	r21, 0x00	; 0
    6600:	b8 01       	movw	r22, r16
    6602:	8f e6       	ldi	r24, 0x6F	; 111
    6604:	96 e1       	ldi	r25, 0x16	; 22
    6606:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
		_kSERIAL_MON_CLEAR();
    660a:	8f e6       	ldi	r24, 0x6F	; 111
    660c:	96 e1       	ldi	r25, 0x16	; 22
    660e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if(make_date > 0)
    6612:	10 16       	cp	r1, r16
    6614:	11 06       	cpc	r1, r17
    6616:	24 f4       	brge	.+8      	; 0x6620 <_Z35Return_Calculated_Previous_Day_Dateh+0xb4>
	{
		return_date = make_date;
    6618:	d0 2f       	mov	r29, r16
		return_month = _sSchedules.Irrigating_Month;
    661a:	c0 91 fb 08 	lds	r28, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    661e:	71 c0       	rjmp	.+226    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
	}
	else if(make_date == 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6620:	e0 91 fb 08 	lds	r30, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6624:	8e 2f       	mov	r24, r30
    6626:	90 e0       	ldi	r25, 0x00	; 0
    6628:	fc 01       	movw	r30, r24
    662a:	31 97       	sbiw	r30, 0x01	; 1
	if(make_date > 0)
	{
		return_date = make_date;
		return_month = _sSchedules.Irrigating_Month;
	}
	else if(make_date == 0)
    662c:	01 15       	cp	r16, r1
    662e:	11 05       	cpc	r17, r1
    6630:	49 f5       	brne	.+82     	; 0x6684 <_Z35Return_Calculated_Previous_Day_Dateh+0x118>
	{
		switch(_sSchedules.Irrigating_Month)
    6632:	ec 30       	cpi	r30, 0x0C	; 12
    6634:	f1 05       	cpc	r31, r1
    6636:	08 f0       	brcs	.+2      	; 0x663a <_Z35Return_Calculated_Previous_Day_Dateh+0xce>
    6638:	64 c0       	rjmp	.+200    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    663a:	88 27       	eor	r24, r24
    663c:	e7 57       	subi	r30, 0x77	; 119
    663e:	ff 4f       	sbci	r31, 0xFF	; 255
    6640:	8f 4f       	sbci	r24, 0xFF	; 255
    6642:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31;
				return_month = _eDEC;
    6646:	cc e0       	ldi	r28, 0x0C	; 12
    6648:	18 c0       	rjmp	.+48     	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eFEB:
			{
				return_date = 31;
				return_month = _eJAN;
    664a:	c1 e0       	ldi	r28, 0x01	; 1
    664c:	16 c0       	rjmp	.+44     	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMARCH:
			{
				if(year%4)
    664e:	8f 2d       	mov	r24, r15
    6650:	83 70       	andi	r24, 0x03	; 3
				else
				{
					return_date = 29;
				}
				
				return_month = _eFEB;
    6652:	c2 e0       	ldi	r28, 0x02	; 2
				return_date = 31;
				return_month = _eJAN;
			}break;
			case _eMARCH:
			{
				if(year%4)
    6654:	09 f0       	breq	.+2      	; 0x6658 <_Z35Return_Calculated_Previous_Day_Dateh+0xec>
    6656:	54 c0       	rjmp	.+168    	; 0x6700 <_Z35Return_Calculated_Previous_Day_Dateh+0x194>
				{
					return_date = 28;
				}
				else
				{
					return_date = 29;
    6658:	dd e1       	ldi	r29, 0x1D	; 29
    665a:	53 c0       	rjmp	.+166    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
				return_month = _eFEB;
			}break;
			case _eAPR:
			{
				return_date = 31;
				return_month = _eMARCH;
    665c:	c3 e0       	ldi	r28, 0x03	; 3
    665e:	0d c0       	rjmp	.+26     	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eMAY:
			{
				return_date = 30;
				return_month = _eAPR;
    6660:	c4 e0       	ldi	r28, 0x04	; 4
    6662:	0e c0       	rjmp	.+28     	; 0x6680 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eJUN:
			{
				return_date = 31;
				return_month = _eMAY;
    6664:	c5 e0       	ldi	r28, 0x05	; 5
    6666:	09 c0       	rjmp	.+18     	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eJUL:
			{
				return_date = 30;
				return_month = _eJUN;
    6668:	c6 e0       	ldi	r28, 0x06	; 6
    666a:	0a c0       	rjmp	.+20     	; 0x6680 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eAUG:
			{
				return_date = 31;
				return_month = _eJUL;
    666c:	c7 e0       	ldi	r28, 0x07	; 7
    666e:	05 c0       	rjmp	.+10     	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eSEP:
			{
				return_date = 31;
				return_month = _eAUG;
    6670:	c8 e0       	ldi	r28, 0x08	; 8
    6672:	03 c0       	rjmp	.+6      	; 0x667a <_Z35Return_Calculated_Previous_Day_Dateh+0x10e>
			}break;
			case _eOCT:
			{
				return_date = 30;
				return_month = _eSEP;
    6674:	c9 e0       	ldi	r28, 0x09	; 9
    6676:	04 c0       	rjmp	.+8      	; 0x6680 <_Z35Return_Calculated_Previous_Day_Dateh+0x114>
			}break;
			case _eNOV:
			{
				return_date = 31;
				return_month = _eOCT;
    6678:	ca e0       	ldi	r28, 0x0A	; 10
				return_date = 30;
				return_month = _eSEP;
			}break;
			case _eNOV:
			{
				return_date = 31;
    667a:	df e1       	ldi	r29, 0x1F	; 31
				return_month = _eOCT;
			}break;
    667c:	42 c0       	rjmp	.+132    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30;
				return_month = _eNOV;
    667e:	cb e0       	ldi	r28, 0x0B	; 11
				return_date = 31;
				return_month = _eOCT;
			}break;
			case _eDEC:
			{
				return_date = 30;
    6680:	de e1       	ldi	r29, 0x1E	; 30
				return_month = _eNOV;
			}break;
    6682:	3f c0       	rjmp	.+126    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
		}
	}
	
	else if(make_date < 0)
	{
		switch(_sSchedules.Irrigating_Month)
    6684:	ec 30       	cpi	r30, 0x0C	; 12
    6686:	f1 05       	cpc	r31, r1
    6688:	e0 f5       	brcc	.+120    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
    668a:	88 27       	eor	r24, r24
    668c:	eb 56       	subi	r30, 0x6B	; 107
    668e:	ff 4f       	sbci	r31, 0xFF	; 255
    6690:	8f 4f       	sbci	r24, 0xFF	; 255
    6692:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
		{
			case _eJAN:
			{
				return_date = 31 +  make_date;
    6696:	df e1       	ldi	r29, 0x1F	; 31
    6698:	d0 0f       	add	r29, r16
				return_month = _eDEC;
    669a:	cc e0       	ldi	r28, 0x0C	; 12
			}break;
    669c:	32 c0       	rjmp	.+100    	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eFEB:
			{
				return_date = 31+  make_date;
    669e:	df e1       	ldi	r29, 0x1F	; 31
    66a0:	d0 0f       	add	r29, r16
				return_month = _eJAN;
    66a2:	c1 e0       	ldi	r28, 0x01	; 1
			}break;
    66a4:	2e c0       	rjmp	.+92     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMARCH:
			{
				if(year%4)
    66a6:	8f 2d       	mov	r24, r15
    66a8:	83 70       	andi	r24, 0x03	; 3
    66aa:	11 f0       	breq	.+4      	; 0x66b0 <_Z35Return_Calculated_Previous_Day_Dateh+0x144>
				{
					return_date = 28+  make_date;
    66ac:	dc e1       	ldi	r29, 0x1C	; 28
    66ae:	01 c0       	rjmp	.+2      	; 0x66b2 <_Z35Return_Calculated_Previous_Day_Dateh+0x146>
				}
				else
				{
					return_date = 29+  make_date;
    66b0:	dd e1       	ldi	r29, 0x1D	; 29
    66b2:	d0 0f       	add	r29, r16
				}
				
				return_month = _eFEB;
    66b4:	c2 e0       	ldi	r28, 0x02	; 2
    66b6:	25 c0       	rjmp	.+74     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eAPR:
			{
				return_date = 31+  make_date;
    66b8:	df e1       	ldi	r29, 0x1F	; 31
    66ba:	d0 0f       	add	r29, r16
				return_month = _eMARCH;
    66bc:	c3 e0       	ldi	r28, 0x03	; 3
			}break;
    66be:	21 c0       	rjmp	.+66     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eMAY:
			{
				return_date = 30+  make_date;
    66c0:	de e1       	ldi	r29, 0x1E	; 30
    66c2:	d0 0f       	add	r29, r16
				return_month = _eAPR;
    66c4:	c4 e0       	ldi	r28, 0x04	; 4
			}break;
    66c6:	1d c0       	rjmp	.+58     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUN:
			{
				return_date = 31+  make_date;
    66c8:	df e1       	ldi	r29, 0x1F	; 31
    66ca:	d0 0f       	add	r29, r16
				return_month = _eMAY;
    66cc:	c5 e0       	ldi	r28, 0x05	; 5
			}break;
    66ce:	19 c0       	rjmp	.+50     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eJUL:
			{
				return_date = 30+  make_date;
    66d0:	de e1       	ldi	r29, 0x1E	; 30
    66d2:	d0 0f       	add	r29, r16
				return_month = _eJUN;
    66d4:	c6 e0       	ldi	r28, 0x06	; 6
			}break;
    66d6:	15 c0       	rjmp	.+42     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eAUG:
			{
				return_date = 31+  make_date;
    66d8:	df e1       	ldi	r29, 0x1F	; 31
    66da:	d0 0f       	add	r29, r16
				return_month = _eJUL;
    66dc:	c7 e0       	ldi	r28, 0x07	; 7
			}break;
    66de:	11 c0       	rjmp	.+34     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eSEP:
			{
				return_date = 31+  make_date;
    66e0:	df e1       	ldi	r29, 0x1F	; 31
    66e2:	d0 0f       	add	r29, r16
				return_month = _eAUG;
    66e4:	c8 e0       	ldi	r28, 0x08	; 8
			}break;
    66e6:	0d c0       	rjmp	.+26     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eOCT:
			{
				return_date = 30+  make_date;
    66e8:	de e1       	ldi	r29, 0x1E	; 30
    66ea:	d0 0f       	add	r29, r16
				return_month = _eSEP;
    66ec:	c9 e0       	ldi	r28, 0x09	; 9
			}break;
    66ee:	09 c0       	rjmp	.+18     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eNOV:
			{
				return_date = 31+  make_date;
    66f0:	df e1       	ldi	r29, 0x1F	; 31
    66f2:	d0 0f       	add	r29, r16
				return_month = _eOCT;
    66f4:	ca e0       	ldi	r28, 0x0A	; 10
			}break;
    66f6:	05 c0       	rjmp	.+10     	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			case _eDEC:
			{
				return_date = 30+  make_date;
    66f8:	de e1       	ldi	r29, 0x1E	; 30
    66fa:	d0 0f       	add	r29, r16
				return_month = _eNOV;
    66fc:	cb e0       	ldi	r28, 0x0B	; 11
			}break;
    66fe:	01 c0       	rjmp	.+2      	; 0x6702 <_Z35Return_Calculated_Previous_Day_Dateh+0x196>
			}break;
			case _eMARCH:
			{
				if(year%4)
				{
					return_date = 28;
    6700:	dc e1       	ldi	r29, 0x1C	; 28
			}break;
			
		}
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6702:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6706:	81 30       	cpi	r24, 0x01	; 1
    6708:	51 f4       	brne	.+20     	; 0x671e <_Z35Return_Calculated_Previous_Day_Dateh+0x1b2>
	{
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_date");
    670a:	6c e3       	ldi	r22, 0x3C	; 60
    670c:	7d e1       	ldi	r23, 0x1D	; 29
    670e:	8f e6       	ldi	r24, 0x6F	; 111
    6710:	96 e1       	ldi	r25, 0x16	; 22
    6712:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6716:	8f e6       	ldi	r24, 0x6F	; 111
    6718:	96 e1       	ldi	r25, 0x16	; 22
    671a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_date  = return_date;
    671e:	d0 93 be 0b 	sts	0x0BBE, r29	; 0x800bbe <_sSchedules+0x2ce>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6722:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6726:	81 30       	cpi	r24, 0x01	; 1
    6728:	91 f4       	brne	.+36     	; 0x674e <_Z35Return_Calculated_Previous_Day_Dateh+0x1e2>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_date);
    672a:	60 91 be 0b 	lds	r22, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    672e:	4a e0       	ldi	r20, 0x0A	; 10
    6730:	50 e0       	ldi	r21, 0x00	; 0
    6732:	8f e6       	ldi	r24, 0x6F	; 111
    6734:	96 e1       	ldi	r25, 0x16	; 22
    6736:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERAIL_MON_WRITE("sc _sSchedules.Temp_Month");
    673a:	62 e2       	ldi	r22, 0x22	; 34
    673c:	7d e1       	ldi	r23, 0x1D	; 29
    673e:	8f e6       	ldi	r24, 0x6F	; 111
    6740:	96 e1       	ldi	r25, 0x16	; 22
    6742:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    6746:	8f e6       	ldi	r24, 0x6F	; 111
    6748:	96 e1       	ldi	r25, 0x16	; 22
    674a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	_sSchedules.Temp_Month = return_month;
    674e:	c0 93 bf 0b 	sts	0x0BBF, r28	; 0x800bbf <_sSchedules+0x2cf>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    6752:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6756:	81 30       	cpi	r24, 0x01	; 1
    6758:	61 f4       	brne	.+24     	; 0x6772 <_Z35Return_Calculated_Previous_Day_Dateh+0x206>
	{
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Temp_Month);
    675a:	60 91 bf 0b 	lds	r22, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    675e:	4a e0       	ldi	r20, 0x0A	; 10
    6760:	50 e0       	ldi	r21, 0x00	; 0
    6762:	8f e6       	ldi	r24, 0x6F	; 111
    6764:	96 e1       	ldi	r25, 0x16	; 22
    6766:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    676a:	8f e6       	ldi	r24, 0x6F	; 111
    676c:	96 e1       	ldi	r25, 0x16	; 22
    676e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
}
    6772:	df 91       	pop	r29
    6774:	cf 91       	pop	r28
    6776:	1f 91       	pop	r17
    6778:	0f 91       	pop	r16
    677a:	ff 90       	pop	r15
    677c:	08 95       	ret

0000677e <_Z22Day_In_Bet_Schedullingh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules)
{
    677e:	bf 92       	push	r11
    6780:	cf 92       	push	r12
    6782:	df 92       	push	r13
    6784:	ef 92       	push	r14
    6786:	ff 92       	push	r15
    6788:	0f 93       	push	r16
    678a:	1f 93       	push	r17
    678c:	cf 93       	push	r28
    678e:	df 93       	push	r29
    6790:	e8 2e       	mov	r14, r24
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	date  = _sRuble_Parameters.Update_Local_Date[0];
    6792:	00 91 a9 15 	lds	r16, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
	month = _sRuble_Parameters.Update_Local_Date[1];
    6796:	d0 91 aa 15 	lds	r29, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
	year  = _sRuble_Parameters.Update_Local_Date[2];
    679a:	b0 90 ab 15 	lds	r11, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    679e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    67a2:	81 30       	cpi	r24, 0x01	; 1
    67a4:	09 f0       	breq	.+2      	; 0x67a8 <_Z22Day_In_Bet_Schedullingh+0x2a>
    67a6:	5a c0       	rjmp	.+180    	; 0x685c <_Z22Day_In_Bet_Schedullingh+0xde>
	{
		_kSERAIL_MON_WRITE("date : ");
    67a8:	6a e1       	ldi	r22, 0x1A	; 26
    67aa:	7d e1       	ldi	r23, 0x1D	; 29
    67ac:	8f e6       	ldi	r24, 0x6F	; 111
    67ae:	96 e1       	ldi	r25, 0x16	; 22
    67b0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    67b4:	4a e0       	ldi	r20, 0x0A	; 10
    67b6:	50 e0       	ldi	r21, 0x00	; 0
    67b8:	60 91 a9 15 	lds	r22, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    67bc:	8f e6       	ldi	r24, 0x6F	; 111
    67be:	96 e1       	ldi	r25, 0x16	; 22
    67c0:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    67c4:	8f e6       	ldi	r24, 0x6F	; 111
    67c6:	96 e1       	ldi	r25, 0x16	; 22
    67c8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("month : ");
    67cc:	61 e1       	ldi	r22, 0x11	; 17
    67ce:	7d e1       	ldi	r23, 0x1D	; 29
    67d0:	8f e6       	ldi	r24, 0x6F	; 111
    67d2:	96 e1       	ldi	r25, 0x16	; 22
    67d4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    67d8:	4a e0       	ldi	r20, 0x0A	; 10
    67da:	50 e0       	ldi	r21, 0x00	; 0
    67dc:	60 91 aa 15 	lds	r22, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    67e0:	8f e6       	ldi	r24, 0x6F	; 111
    67e2:	96 e1       	ldi	r25, 0x16	; 22
    67e4:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    67e8:	8f e6       	ldi	r24, 0x6F	; 111
    67ea:	96 e1       	ldi	r25, 0x16	; 22
    67ec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("year : ");
    67f0:	69 e0       	ldi	r22, 0x09	; 9
    67f2:	7d e1       	ldi	r23, 0x1D	; 29
    67f4:	8f e6       	ldi	r24, 0x6F	; 111
    67f6:	96 e1       	ldi	r25, 0x16	; 22
    67f8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    67fc:	4a e0       	ldi	r20, 0x0A	; 10
    67fe:	50 e0       	ldi	r21, 0x00	; 0
    6800:	60 91 ab 15 	lds	r22, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    6804:	8f e6       	ldi	r24, 0x6F	; 111
    6806:	96 e1       	ldi	r25, 0x16	; 22
    6808:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    680c:	8f e6       	ldi	r24, 0x6F	; 111
    680e:	96 e1       	ldi	r25, 0x16	; 22
    6810:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating date : ");
    6814:	66 ef       	ldi	r22, 0xF6	; 246
    6816:	7c e1       	ldi	r23, 0x1C	; 28
    6818:	8f e6       	ldi	r24, 0x6F	; 111
    681a:	96 e1       	ldi	r25, 0x16	; 22
    681c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Date);
    6820:	60 91 fa 08 	lds	r22, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    6824:	4a e0       	ldi	r20, 0x0A	; 10
    6826:	50 e0       	ldi	r21, 0x00	; 0
    6828:	8f e6       	ldi	r24, 0x6F	; 111
    682a:	96 e1       	ldi	r25, 0x16	; 22
    682c:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6830:	8f e6       	ldi	r24, 0x6F	; 111
    6832:	96 e1       	ldi	r25, 0x16	; 22
    6834:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("irrigating month : ");
    6838:	62 ee       	ldi	r22, 0xE2	; 226
    683a:	7c e1       	ldi	r23, 0x1C	; 28
    683c:	8f e6       	ldi	r24, 0x6F	; 111
    683e:	96 e1       	ldi	r25, 0x16	; 22
    6840:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Irrigating_Month);
    6844:	60 91 fb 08 	lds	r22, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6848:	4a e0       	ldi	r20, 0x0A	; 10
    684a:	50 e0       	ldi	r21, 0x00	; 0
    684c:	8f e6       	ldi	r24, 0x6F	; 111
    684e:	96 e1       	ldi	r25, 0x16	; 22
    6850:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    6854:	8f e6       	ldi	r24, 0x6F	; 111
    6856:	96 e1       	ldi	r25, 0x16	; 22
    6858:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    685c:	80 91 fa 08 	lds	r24, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    6860:	cc 24       	eor	r12, r12
    6862:	c3 94       	inc	r12
    6864:	ce 0c       	add	r12, r14
    6866:	d1 2c       	mov	r13, r1
    6868:	10 e0       	ldi	r17, 0x00	; 0
    686a:	96 01       	movw	r18, r12
    686c:	28 0f       	add	r18, r24
    686e:	31 1d       	adc	r19, r1
    6870:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6874:	02 17       	cp	r16, r18
    6876:	13 07       	cpc	r17, r19
    6878:	0c f4       	brge	.+2      	; 0x687c <_Z22Day_In_Bet_Schedullingh+0xfe>
    687a:	44 c0       	rjmp	.+136    	; 0x6904 <_Z22Day_In_Bet_Schedullingh+0x186>
    687c:	80 91 fb 08 	lds	r24, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6880:	d8 13       	cpse	r29, r24
    6882:	40 c0       	rjmp	.+128    	; 0x6904 <_Z22Day_In_Bet_Schedullingh+0x186>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6884:	91 30       	cpi	r25, 0x01	; 1
    6886:	d9 f5       	brne	.+118    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6888:	65 ed       	ldi	r22, 0xD5	; 213
    688a:	7c e1       	ldi	r23, 0x1C	; 28
    688c:	1f c0       	rjmp	.+62     	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    688e:	91 30       	cpi	r25, 0x01	; 1
    6890:	51 f4       	brne	.+20     	; 0x68a6 <_Z22Day_In_Bet_Schedullingh+0x128>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6892:	68 ec       	ldi	r22, 0xC8	; 200
    6894:	7c e1       	ldi	r23, 0x1C	; 28
    6896:	8f e6       	ldi	r24, 0x6F	; 111
    6898:	96 e1       	ldi	r25, 0x16	; 22
    689a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    689e:	8f e6       	ldi	r24, 0x6F	; 111
    68a0:	96 e1       	ldi	r25, 0x16	; 22
    68a2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    68a6:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJAN)
    68aa:	d1 30       	cpi	r29, 0x01	; 1
    68ac:	41 f5       	brne	.+80     	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    68ae:	8f e1       	ldi	r24, 0x1F	; 31
    68b0:	89 1b       	sub	r24, r25
    68b2:	98 01       	movw	r18, r16
    68b4:	28 0f       	add	r18, r24
    68b6:	31 1d       	adc	r19, r1
    68b8:	2c 15       	cp	r18, r12
    68ba:	3d 05       	cpc	r19, r13
    68bc:	0c f4       	brge	.+2      	; 0x68c0 <_Z22Day_In_Bet_Schedullingh+0x142>
    68be:	bb c1       	rjmp	.+886    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    68c0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    68c4:	81 30       	cpi	r24, 0x01	; 1
    68c6:	d9 f4       	brne	.+54     	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    68c8:	6b eb       	ldi	r22, 0xBB	; 187
    68ca:	7c e1       	ldi	r23, 0x1C	; 28
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    68cc:	8f e6       	ldi	r24, 0x6F	; 111
    68ce:	96 e1       	ldi	r25, 0x16	; 22
    68d0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    68d4:	8f e6       	ldi	r24, 0x6F	; 111
    68d6:	96 e1       	ldi	r25, 0x16	; 22
    68d8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    68dc:	10 c0       	rjmp	.+32     	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    68de:	91 30       	cpi	r25, 0x01	; 1
    68e0:	51 f4       	brne	.+20     	; 0x68f6 <_Z22Day_In_Bet_Schedullingh+0x178>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    68e2:	6e ea       	ldi	r22, 0xAE	; 174
    68e4:	7c e1       	ldi	r23, 0x1C	; 28
    68e6:	8f e6       	ldi	r24, 0x6F	; 111
    68e8:	96 e1       	ldi	r25, 0x16	; 22
    68ea:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    68ee:	8f e6       	ldi	r24, 0x6F	; 111
    68f0:	96 e1       	ldi	r25, 0x16	; 22
    68f2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    68f6:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eFEB)
    68fa:	d2 30       	cpi	r29, 0x02	; 2
    68fc:	c1 f0       	breq	.+48     	; 0x692e <_Z22Day_In_Bet_Schedullingh+0x1b0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 1");
				_kSERIAL_MON_CLEAR();
			}
			return 2;
    68fe:	c2 e0       	ldi	r28, 0x02	; 2
    6900:	8c 2f       	mov	r24, r28
    6902:	a9 c3       	rjmp	.+1874   	; 0x7056 <_Z22Day_In_Bet_Schedullingh+0x8d8>
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6904:	80 91 fb 08 	lds	r24, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6908:	d8 17       	cp	r29, r24
    690a:	09 f4       	brne	.+2      	; 0x690e <_Z22Day_In_Bet_Schedullingh+0x190>
    690c:	9b c1       	rjmp	.+822    	; 0x6c44 <_Z22Day_In_Bet_Schedullingh+0x4c6>
			{
				switch(_sSchedules.Irrigating_Month)
    690e:	c0 91 fb 08 	lds	r28, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6912:	4c 2f       	mov	r20, r28
    6914:	50 e0       	ldi	r21, 0x00	; 0
    6916:	fa 01       	movw	r30, r20
    6918:	31 97       	sbiw	r30, 0x01	; 1
    691a:	ec 30       	cpi	r30, 0x0C	; 12
    691c:	f1 05       	cpc	r31, r1
    691e:	08 f0       	brcs	.+2      	; 0x6922 <_Z22Day_In_Bet_Schedullingh+0x1a4>
    6920:	8a c1       	rjmp	.+788    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
    6922:	88 27       	eor	r24, r24
    6924:	ef 55       	subi	r30, 0x5F	; 95
    6926:	ff 4f       	sbci	r31, 0xFF	; 255
    6928:	8f 4f       	sbci	r24, 0xFF	; 255
    692a:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eFEB)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    692e:	8f e1       	ldi	r24, 0x1F	; 31
    6930:	89 1b       	sub	r24, r25
    6932:	98 01       	movw	r18, r16
    6934:	28 0f       	add	r18, r24
    6936:	31 1d       	adc	r19, r1
    6938:	2c 15       	cp	r18, r12
    693a:	3d 05       	cpc	r19, r13
    693c:	0c f4       	brge	.+2      	; 0x6940 <_Z22Day_In_Bet_Schedullingh+0x1c2>
    693e:	7b c1       	rjmp	.+758    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6940:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6944:	81 30       	cpi	r24, 0x01	; 1
    6946:	d9 f6       	brne	.-74     	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6948:	61 ea       	ldi	r22, 0xA1	; 161
    694a:	7c e1       	ldi	r23, 0x1C	; 28
    694c:	bf cf       	rjmp	.-130    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    694e:	91 30       	cpi	r25, 0x01	; 1
    6950:	51 f4       	brne	.+20     	; 0x6966 <_Z22Day_In_Bet_Schedullingh+0x1e8>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6952:	64 e9       	ldi	r22, 0x94	; 148
    6954:	7c e1       	ldi	r23, 0x1C	; 28
    6956:	8f e6       	ldi	r24, 0x6F	; 111
    6958:	96 e1       	ldi	r25, 0x16	; 22
    695a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    695e:	8f e6       	ldi	r24, 0x6F	; 111
    6960:	96 e1       	ldi	r25, 0x16	; 22
    6962:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6966:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eAPR)
    696a:	d4 30       	cpi	r29, 0x04	; 4
    696c:	41 f6       	brne	.-112    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    696e:	8f e1       	ldi	r24, 0x1F	; 31
    6970:	89 1b       	sub	r24, r25
    6972:	98 01       	movw	r18, r16
    6974:	28 0f       	add	r18, r24
    6976:	31 1d       	adc	r19, r1
    6978:	2c 15       	cp	r18, r12
    697a:	3d 05       	cpc	r19, r13
    697c:	0c f4       	brge	.+2      	; 0x6980 <_Z22Day_In_Bet_Schedullingh+0x202>
    697e:	5b c1       	rjmp	.+694    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6980:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6984:	81 30       	cpi	r24, 0x01	; 1
    6986:	09 f0       	breq	.+2      	; 0x698a <_Z22Day_In_Bet_Schedullingh+0x20c>
    6988:	ba cf       	rjmp	.-140    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    698a:	67 e8       	ldi	r22, 0x87	; 135
    698c:	7c e1       	ldi	r23, 0x1C	; 28
    698e:	9e cf       	rjmp	.-196    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6990:	91 30       	cpi	r25, 0x01	; 1
    6992:	51 f4       	brne	.+20     	; 0x69a8 <_Z22Day_In_Bet_Schedullingh+0x22a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6994:	6a e7       	ldi	r22, 0x7A	; 122
    6996:	7c e1       	ldi	r23, 0x1C	; 28
    6998:	8f e6       	ldi	r24, 0x6F	; 111
    699a:	96 e1       	ldi	r25, 0x16	; 22
    699c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    69a0:	8f e6       	ldi	r24, 0x6F	; 111
    69a2:	96 e1       	ldi	r25, 0x16	; 22
    69a4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    69a8:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJUN)
    69ac:	d6 30       	cpi	r29, 0x06	; 6
    69ae:	09 f0       	breq	.+2      	; 0x69b2 <_Z22Day_In_Bet_Schedullingh+0x234>
    69b0:	a6 cf       	rjmp	.-180    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    69b2:	8f e1       	ldi	r24, 0x1F	; 31
    69b4:	89 1b       	sub	r24, r25
    69b6:	98 01       	movw	r18, r16
    69b8:	28 0f       	add	r18, r24
    69ba:	31 1d       	adc	r19, r1
    69bc:	2c 15       	cp	r18, r12
    69be:	3d 05       	cpc	r19, r13
    69c0:	0c f4       	brge	.+2      	; 0x69c4 <_Z22Day_In_Bet_Schedullingh+0x246>
    69c2:	39 c1       	rjmp	.+626    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    69c4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    69c8:	81 30       	cpi	r24, 0x01	; 1
    69ca:	09 f0       	breq	.+2      	; 0x69ce <_Z22Day_In_Bet_Schedullingh+0x250>
    69cc:	98 cf       	rjmp	.-208    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    69ce:	6d e6       	ldi	r22, 0x6D	; 109
    69d0:	7c e1       	ldi	r23, 0x1C	; 28
    69d2:	7c cf       	rjmp	.-264    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    69d4:	91 30       	cpi	r25, 0x01	; 1
    69d6:	51 f4       	brne	.+20     	; 0x69ec <_Z22Day_In_Bet_Schedullingh+0x26e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    69d8:	60 e6       	ldi	r22, 0x60	; 96
    69da:	7c e1       	ldi	r23, 0x1C	; 28
    69dc:	8f e6       	ldi	r24, 0x6F	; 111
    69de:	96 e1       	ldi	r25, 0x16	; 22
    69e0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    69e4:	8f e6       	ldi	r24, 0x6F	; 111
    69e6:	96 e1       	ldi	r25, 0x16	; 22
    69e8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    69ec:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eAUG)
    69f0:	d8 30       	cpi	r29, 0x08	; 8
    69f2:	09 f0       	breq	.+2      	; 0x69f6 <_Z22Day_In_Bet_Schedullingh+0x278>
    69f4:	84 cf       	rjmp	.-248    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    69f6:	8f e1       	ldi	r24, 0x1F	; 31
    69f8:	89 1b       	sub	r24, r25
    69fa:	98 01       	movw	r18, r16
    69fc:	28 0f       	add	r18, r24
    69fe:	31 1d       	adc	r19, r1
    6a00:	2c 15       	cp	r18, r12
    6a02:	3d 05       	cpc	r19, r13
    6a04:	0c f4       	brge	.+2      	; 0x6a08 <_Z22Day_In_Bet_Schedullingh+0x28a>
    6a06:	17 c1       	rjmp	.+558    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a08:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6a0c:	81 30       	cpi	r24, 0x01	; 1
    6a0e:	09 f0       	breq	.+2      	; 0x6a12 <_Z22Day_In_Bet_Schedullingh+0x294>
    6a10:	76 cf       	rjmp	.-276    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a12:	63 e5       	ldi	r22, 0x53	; 83
    6a14:	7c e1       	ldi	r23, 0x1C	; 28
    6a16:	5a cf       	rjmp	.-332    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a18:	91 30       	cpi	r25, 0x01	; 1
    6a1a:	51 f4       	brne	.+20     	; 0x6a30 <_Z22Day_In_Bet_Schedullingh+0x2b2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a1c:	66 e4       	ldi	r22, 0x46	; 70
    6a1e:	7c e1       	ldi	r23, 0x1C	; 28
    6a20:	8f e6       	ldi	r24, 0x6F	; 111
    6a22:	96 e1       	ldi	r25, 0x16	; 22
    6a24:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a28:	8f e6       	ldi	r24, 0x6F	; 111
    6a2a:	96 e1       	ldi	r25, 0x16	; 22
    6a2c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a30:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eSEP)
    6a34:	d9 30       	cpi	r29, 0x09	; 9
    6a36:	09 f0       	breq	.+2      	; 0x6a3a <_Z22Day_In_Bet_Schedullingh+0x2bc>
    6a38:	62 cf       	rjmp	.-316    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a3a:	8f e1       	ldi	r24, 0x1F	; 31
    6a3c:	89 1b       	sub	r24, r25
    6a3e:	98 01       	movw	r18, r16
    6a40:	28 0f       	add	r18, r24
    6a42:	31 1d       	adc	r19, r1
    6a44:	2c 15       	cp	r18, r12
    6a46:	3d 05       	cpc	r19, r13
    6a48:	0c f4       	brge	.+2      	; 0x6a4c <_Z22Day_In_Bet_Schedullingh+0x2ce>
    6a4a:	f5 c0       	rjmp	.+490    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a4c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6a50:	81 30       	cpi	r24, 0x01	; 1
    6a52:	09 f0       	breq	.+2      	; 0x6a56 <_Z22Day_In_Bet_Schedullingh+0x2d8>
    6a54:	54 cf       	rjmp	.-344    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a56:	69 e3       	ldi	r22, 0x39	; 57
    6a58:	7c e1       	ldi	r23, 0x1C	; 28
    6a5a:	38 cf       	rjmp	.-400    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a5c:	91 30       	cpi	r25, 0x01	; 1
    6a5e:	51 f4       	brne	.+20     	; 0x6a74 <_Z22Day_In_Bet_Schedullingh+0x2f6>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6a60:	6c e2       	ldi	r22, 0x2C	; 44
    6a62:	7c e1       	ldi	r23, 0x1C	; 28
    6a64:	8f e6       	ldi	r24, 0x6F	; 111
    6a66:	96 e1       	ldi	r25, 0x16	; 22
    6a68:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6a6c:	8f e6       	ldi	r24, 0x6F	; 111
    6a6e:	96 e1       	ldi	r25, 0x16	; 22
    6a70:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6a74:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eNOV)
    6a78:	db 30       	cpi	r29, 0x0B	; 11
    6a7a:	09 f0       	breq	.+2      	; 0x6a7e <_Z22Day_In_Bet_Schedullingh+0x300>
    6a7c:	40 cf       	rjmp	.-384    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6a7e:	8f e1       	ldi	r24, 0x1F	; 31
    6a80:	89 1b       	sub	r24, r25
    6a82:	98 01       	movw	r18, r16
    6a84:	28 0f       	add	r18, r24
    6a86:	31 1d       	adc	r19, r1
    6a88:	2c 15       	cp	r18, r12
    6a8a:	3d 05       	cpc	r19, r13
    6a8c:	0c f4       	brge	.+2      	; 0x6a90 <_Z22Day_In_Bet_Schedullingh+0x312>
    6a8e:	d3 c0       	rjmp	.+422    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6a90:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6a94:	81 30       	cpi	r24, 0x01	; 1
    6a96:	09 f0       	breq	.+2      	; 0x6a9a <_Z22Day_In_Bet_Schedullingh+0x31c>
    6a98:	32 cf       	rjmp	.-412    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6a9a:	6f e1       	ldi	r22, 0x1F	; 31
    6a9c:	7c e1       	ldi	r23, 0x1C	; 28
    6a9e:	16 cf       	rjmp	.-468    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6aa0:	8b 2d       	mov	r24, r11
    6aa2:	83 70       	andi	r24, 0x03	; 3
    6aa4:	11 f1       	breq	.+68     	; 0x6aea <_Z22Day_In_Bet_Schedullingh+0x36c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aa6:	91 30       	cpi	r25, 0x01	; 1
    6aa8:	51 f4       	brne	.+20     	; 0x6abe <_Z22Day_In_Bet_Schedullingh+0x340>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6aaa:	62 e1       	ldi	r22, 0x12	; 18
    6aac:	7c e1       	ldi	r23, 0x1C	; 28
    6aae:	8f e6       	ldi	r24, 0x6F	; 111
    6ab0:	96 e1       	ldi	r25, 0x16	; 22
    6ab2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6ab6:	8f e6       	ldi	r24, 0x6F	; 111
    6ab8:	96 e1       	ldi	r25, 0x16	; 22
    6aba:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6abe:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6ac2:	d3 30       	cpi	r29, 0x03	; 3
    6ac4:	09 f0       	breq	.+2      	; 0x6ac8 <_Z22Day_In_Bet_Schedullingh+0x34a>
    6ac6:	b7 c0       	rjmp	.+366    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6ac8:	8c e1       	ldi	r24, 0x1C	; 28
    6aca:	89 1b       	sub	r24, r25
    6acc:	98 01       	movw	r18, r16
    6ace:	28 0f       	add	r18, r24
    6ad0:	31 1d       	adc	r19, r1
    6ad2:	2c 15       	cp	r18, r12
    6ad4:	3d 05       	cpc	r19, r13
    6ad6:	0c f4       	brge	.+2      	; 0x6ada <_Z22Day_In_Bet_Schedullingh+0x35c>
    6ad8:	ae c0       	rjmp	.+348    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ada:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6ade:	81 30       	cpi	r24, 0x01	; 1
    6ae0:	09 f0       	breq	.+2      	; 0x6ae4 <_Z22Day_In_Bet_Schedullingh+0x366>
    6ae2:	0d cf       	rjmp	.-486    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6ae4:	65 e0       	ldi	r22, 0x05	; 5
    6ae6:	7c e1       	ldi	r23, 0x1C	; 28
    6ae8:	cc c0       	rjmp	.+408    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
								}
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6aea:	91 30       	cpi	r25, 0x01	; 1
    6aec:	51 f4       	brne	.+20     	; 0x6b02 <_Z22Day_In_Bet_Schedullingh+0x384>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6aee:	68 ef       	ldi	r22, 0xF8	; 248
    6af0:	7b e1       	ldi	r23, 0x1B	; 27
    6af2:	8f e6       	ldi	r24, 0x6F	; 111
    6af4:	96 e1       	ldi	r25, 0x16	; 22
    6af6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6afa:	8f e6       	ldi	r24, 0x6F	; 111
    6afc:	96 e1       	ldi	r25, 0x16	; 22
    6afe:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6b02:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6b06:	d3 30       	cpi	r29, 0x03	; 3
    6b08:	09 f0       	breq	.+2      	; 0x6b0c <_Z22Day_In_Bet_Schedullingh+0x38e>
    6b0a:	f9 ce       	rjmp	.-526    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6b0c:	8d e1       	ldi	r24, 0x1D	; 29
    6b0e:	89 1b       	sub	r24, r25
    6b10:	98 01       	movw	r18, r16
    6b12:	28 0f       	add	r18, r24
    6b14:	31 1d       	adc	r19, r1
    6b16:	2c 15       	cp	r18, r12
    6b18:	3d 05       	cpc	r19, r13
    6b1a:	0c f4       	brge	.+2      	; 0x6b1e <_Z22Day_In_Bet_Schedullingh+0x3a0>
    6b1c:	8c c0       	rjmp	.+280    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b1e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6b22:	81 30       	cpi	r24, 0x01	; 1
    6b24:	09 f0       	breq	.+2      	; 0x6b28 <_Z22Day_In_Bet_Schedullingh+0x3aa>
    6b26:	eb ce       	rjmp	.-554    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6b28:	6b ee       	ldi	r22, 0xEB	; 235
    6b2a:	7b e1       	ldi	r23, 0x1B	; 27
    6b2c:	aa c0       	rjmp	.+340    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b2e:	91 30       	cpi	r25, 0x01	; 1
    6b30:	51 f4       	brne	.+20     	; 0x6b46 <_Z22Day_In_Bet_Schedullingh+0x3c8>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6b32:	6e ed       	ldi	r22, 0xDE	; 222
    6b34:	7b e1       	ldi	r23, 0x1B	; 27
    6b36:	8f e6       	ldi	r24, 0x6F	; 111
    6b38:	96 e1       	ldi	r25, 0x16	; 22
    6b3a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b3e:	8f e6       	ldi	r24, 0x6F	; 111
    6b40:	96 e1       	ldi	r25, 0x16	; 22
    6b42:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6b46:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eMAY)
    6b4a:	d5 30       	cpi	r29, 0x05	; 5
    6b4c:	09 f0       	breq	.+2      	; 0x6b50 <_Z22Day_In_Bet_Schedullingh+0x3d2>
    6b4e:	73 c0       	rjmp	.+230    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b50:	8e e1       	ldi	r24, 0x1E	; 30
    6b52:	89 1b       	sub	r24, r25
    6b54:	98 01       	movw	r18, r16
    6b56:	28 0f       	add	r18, r24
    6b58:	31 1d       	adc	r19, r1
    6b5a:	2c 15       	cp	r18, r12
    6b5c:	3d 05       	cpc	r19, r13
    6b5e:	0c f4       	brge	.+2      	; 0x6b62 <_Z22Day_In_Bet_Schedullingh+0x3e4>
    6b60:	6a c0       	rjmp	.+212    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b62:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6b66:	81 30       	cpi	r24, 0x01	; 1
    6b68:	09 f0       	breq	.+2      	; 0x6b6c <_Z22Day_In_Bet_Schedullingh+0x3ee>
    6b6a:	c9 ce       	rjmp	.-622    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6b6c:	61 ed       	ldi	r22, 0xD1	; 209
    6b6e:	7b e1       	ldi	r23, 0x1B	; 27
    6b70:	ad ce       	rjmp	.-678    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6b72:	91 30       	cpi	r25, 0x01	; 1
    6b74:	51 f4       	brne	.+20     	; 0x6b8a <_Z22Day_In_Bet_Schedullingh+0x40c>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6b76:	64 ec       	ldi	r22, 0xC4	; 196
    6b78:	7b e1       	ldi	r23, 0x1B	; 27
    6b7a:	8f e6       	ldi	r24, 0x6F	; 111
    6b7c:	96 e1       	ldi	r25, 0x16	; 22
    6b7e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6b82:	8f e6       	ldi	r24, 0x6F	; 111
    6b84:	96 e1       	ldi	r25, 0x16	; 22
    6b86:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6b8a:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJUL)
    6b8e:	d7 30       	cpi	r29, 0x07	; 7
    6b90:	09 f0       	breq	.+2      	; 0x6b94 <_Z22Day_In_Bet_Schedullingh+0x416>
    6b92:	51 c0       	rjmp	.+162    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6b94:	8e e1       	ldi	r24, 0x1E	; 30
    6b96:	89 1b       	sub	r24, r25
    6b98:	98 01       	movw	r18, r16
    6b9a:	28 0f       	add	r18, r24
    6b9c:	31 1d       	adc	r19, r1
    6b9e:	2c 15       	cp	r18, r12
    6ba0:	3d 05       	cpc	r19, r13
    6ba2:	0c f4       	brge	.+2      	; 0x6ba6 <_Z22Day_In_Bet_Schedullingh+0x428>
    6ba4:	48 c0       	rjmp	.+144    	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ba6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6baa:	81 30       	cpi	r24, 0x01	; 1
    6bac:	09 f0       	breq	.+2      	; 0x6bb0 <_Z22Day_In_Bet_Schedullingh+0x432>
    6bae:	a7 ce       	rjmp	.-690    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6bb0:	67 eb       	ldi	r22, 0xB7	; 183
    6bb2:	7b e1       	ldi	r23, 0x1B	; 27
    6bb4:	8b ce       	rjmp	.-746    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bb6:	91 30       	cpi	r25, 0x01	; 1
    6bb8:	51 f4       	brne	.+20     	; 0x6bce <_Z22Day_In_Bet_Schedullingh+0x450>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6bba:	6a ea       	ldi	r22, 0xAA	; 170
    6bbc:	7b e1       	ldi	r23, 0x1B	; 27
    6bbe:	8f e6       	ldi	r24, 0x6F	; 111
    6bc0:	96 e1       	ldi	r25, 0x16	; 22
    6bc2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6bc6:	8f e6       	ldi	r24, 0x6F	; 111
    6bc8:	96 e1       	ldi	r25, 0x16	; 22
    6bca:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6bce:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eOCT)
    6bd2:	da 30       	cpi	r29, 0x0A	; 10
    6bd4:	81 f5       	brne	.+96     	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6bd6:	8e e1       	ldi	r24, 0x1E	; 30
    6bd8:	89 1b       	sub	r24, r25
    6bda:	98 01       	movw	r18, r16
    6bdc:	28 0f       	add	r18, r24
    6bde:	31 1d       	adc	r19, r1
    6be0:	2c 15       	cp	r18, r12
    6be2:	3d 05       	cpc	r19, r13
    6be4:	44 f1       	brlt	.+80     	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6be6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6bea:	81 30       	cpi	r24, 0x01	; 1
    6bec:	09 f0       	breq	.+2      	; 0x6bf0 <_Z22Day_In_Bet_Schedullingh+0x472>
    6bee:	87 ce       	rjmp	.-754    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6bf0:	6d e9       	ldi	r22, 0x9D	; 157
    6bf2:	7b e1       	ldi	r23, 0x1B	; 27
    6bf4:	6b ce       	rjmp	.-810    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6bf6:	91 30       	cpi	r25, 0x01	; 1
    6bf8:	51 f4       	brne	.+20     	; 0x6c0e <_Z22Day_In_Bet_Schedullingh+0x490>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6bfa:	60 e9       	ldi	r22, 0x90	; 144
    6bfc:	7b e1       	ldi	r23, 0x1B	; 27
    6bfe:	8f e6       	ldi	r24, 0x6F	; 111
    6c00:	96 e1       	ldi	r25, 0x16	; 22
    6c02:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6c06:	8f e6       	ldi	r24, 0x6F	; 111
    6c08:	96 e1       	ldi	r25, 0x16	; 22
    6c0a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6c0e:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eDEC)
    6c12:	dc 30       	cpi	r29, 0x0C	; 12
    6c14:	81 f4       	brne	.+32     	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6c16:	8e e1       	ldi	r24, 0x1E	; 30
    6c18:	89 1b       	sub	r24, r25
    6c1a:	98 01       	movw	r18, r16
    6c1c:	28 0f       	add	r18, r24
    6c1e:	31 1d       	adc	r19, r1
    6c20:	2c 15       	cp	r18, r12
    6c22:	3d 05       	cpc	r19, r13
    6c24:	44 f0       	brlt	.+16     	; 0x6c36 <_Z22Day_In_Bet_Schedullingh+0x4b8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c26:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6c2a:	81 30       	cpi	r24, 0x01	; 1
    6c2c:	09 f0       	breq	.+2      	; 0x6c30 <_Z22Day_In_Bet_Schedullingh+0x4b2>
    6c2e:	67 ce       	rjmp	.-818    	; 0x68fe <_Z22Day_In_Bet_Schedullingh+0x180>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6c30:	63 e8       	ldi	r22, 0x83	; 131
    6c32:	7b e1       	ldi	r23, 0x1B	; 27
    6c34:	4b ce       	rjmp	.-874    	; 0x68cc <_Z22Day_In_Bet_Schedullingh+0x14e>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c36:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6c3a:	81 30       	cpi	r24, 0x01	; 1
    6c3c:	79 f4       	brne	.+30     	; 0x6c5c <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    6c3e:	65 e7       	ldi	r22, 0x75	; 117
    6c40:	7b e1       	ldi	r23, 0x1B	; 27
    6c42:	04 c0       	rjmp	.+8      	; 0x6c4c <_Z22Day_In_Bet_Schedullingh+0x4ce>
					_kSERIAL_MON_CLEAR();
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c44:	91 30       	cpi	r25, 0x01	; 1
    6c46:	51 f4       	brne	.+20     	; 0x6c5c <_Z22Day_In_Bet_Schedullingh+0x4de>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    6c48:	67 e6       	ldi	r22, 0x67	; 103
    6c4a:	7b e1       	ldi	r23, 0x1B	; 27
    6c4c:	8f e6       	ldi	r24, 0x6F	; 111
    6c4e:	96 e1       	ldi	r25, 0x16	; 22
    6c50:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    6c54:	8f e6       	ldi	r24, 0x6F	; 111
    6c56:	96 e1       	ldi	r25, 0x16	; 22
    6c58:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		
		//printf("\n");
		
		Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
		
		if((_sSchedules.Irrigating_Date + Days_In_Between_Schedules) <= date && _sSchedules.Irrigating_Month == month)
    6c5c:	80 91 fa 08 	lds	r24, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    6c60:	f1 2c       	mov	r15, r1
    6c62:	97 01       	movw	r18, r14
    6c64:	28 0f       	add	r18, r24
    6c66:	31 1d       	adc	r19, r1
    6c68:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6c6c:	02 17       	cp	r16, r18
    6c6e:	13 07       	cpc	r17, r19
    6c70:	1c f1       	brlt	.+70     	; 0x6cb8 <_Z22Day_In_Bet_Schedullingh+0x53a>
    6c72:	80 91 fb 08 	lds	r24, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6c76:	d8 13       	cpse	r29, r24
    6c78:	1f c0       	rjmp	.+62     	; 0x6cb8 <_Z22Day_In_Bet_Schedullingh+0x53a>
		{
			//printf("running 0.1");
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c7a:	c1 30       	cpi	r28, 0x01	; 1
    6c7c:	d9 f4       	brne	.+54     	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
			{
				_kSERAIL_MON_WRITE("day in btw 1");
    6c7e:	6a e5       	ldi	r22, 0x5A	; 90
    6c80:	7b e1       	ldi	r23, 0x1B	; 27
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6c82:	8f e6       	ldi	r24, 0x6F	; 111
    6c84:	96 e1       	ldi	r25, 0x16	; 22
    6c86:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    6c8a:	8f e6       	ldi	r24, 0x6F	; 111
    6c8c:	96 e1       	ldi	r25, 0x16	; 22
    6c8e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    6c92:	36 ce       	rjmp	.-916    	; 0x6900 <_Z22Day_In_Bet_Schedullingh+0x182>
			{
				switch(_sSchedules.Irrigating_Month)
				{
					case _eDEC: // current month is jan
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6c94:	c1 30       	cpi	r28, 0x01	; 1
    6c96:	51 f4       	brne	.+20     	; 0x6cac <_Z22Day_In_Bet_Schedullingh+0x52e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6c98:	6d e4       	ldi	r22, 0x4D	; 77
    6c9a:	7b e1       	ldi	r23, 0x1B	; 27
    6c9c:	8f e6       	ldi	r24, 0x6F	; 111
    6c9e:	96 e1       	ldi	r25, 0x16	; 22
    6ca0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6ca4:	8f e6       	ldi	r24, 0x6F	; 111
    6ca6:	96 e1       	ldi	r25, 0x16	; 22
    6ca8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6cac:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJAN)
    6cb0:	d1 30       	cpi	r29, 0x01	; 1
    6cb2:	b9 f0       	breq	.+46     	; 0x6ce2 <_Z22Day_In_Bet_Schedullingh+0x564>
								return 1;
							}
						}
						else
						{
							return 1;
    6cb4:	c1 e0       	ldi	r28, 0x01	; 1
    6cb6:	24 ce       	rjmp	.-952    	; 0x6900 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			return 1;
		}
		else
		{
			if(_sSchedules.Irrigating_Month != month)
    6cb8:	80 91 fb 08 	lds	r24, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6cbc:	d8 17       	cp	r29, r24
    6cbe:	09 f4       	brne	.+2      	; 0x6cc2 <_Z22Day_In_Bet_Schedullingh+0x544>
    6cc0:	ba c1       	rjmp	.+884    	; 0x7036 <_Z22Day_In_Bet_Schedullingh+0x8b8>
			{
				switch(_sSchedules.Irrigating_Month)
    6cc2:	e0 91 fb 08 	lds	r30, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    6cc6:	8e 2f       	mov	r24, r30
    6cc8:	90 e0       	ldi	r25, 0x00	; 0
    6cca:	fc 01       	movw	r30, r24
    6ccc:	31 97       	sbiw	r30, 0x01	; 1
    6cce:	ec 30       	cpi	r30, 0x0C	; 12
    6cd0:	f1 05       	cpc	r31, r1
    6cd2:	08 f0       	brcs	.+2      	; 0x6cd6 <_Z22Day_In_Bet_Schedullingh+0x558>
    6cd4:	a1 c1       	rjmp	.+834    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
    6cd6:	88 27       	eor	r24, r24
    6cd8:	e3 55       	subi	r30, 0x53	; 83
    6cda:	ff 4f       	sbci	r31, 0xFF	; 255
    6cdc:	8f 4f       	sbci	r24, 0xFF	; 255
    6cde:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
						
						if(month == _eJAN)
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ce2:	8f e1       	ldi	r24, 0x1F	; 31
    6ce4:	89 1b       	sub	r24, r25
    6ce6:	08 0f       	add	r16, r24
    6ce8:	11 1d       	adc	r17, r1
    6cea:	0e 15       	cp	r16, r14
    6cec:	1f 05       	cpc	r17, r15
    6cee:	0c f4       	brge	.+2      	; 0x6cf2 <_Z22Day_In_Bet_Schedullingh+0x574>
    6cf0:	93 c1       	rjmp	.+806    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6cf2:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6cf6:	c1 30       	cpi	r28, 0x01	; 1
    6cf8:	e9 f6       	brne	.-70     	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6cfa:	60 e4       	ldi	r22, 0x40	; 64
    6cfc:	7b e1       	ldi	r23, 0x1B	; 27
    6cfe:	c1 cf       	rjmp	.-126    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eJAN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d00:	c1 30       	cpi	r28, 0x01	; 1
    6d02:	51 f4       	brne	.+20     	; 0x6d18 <_Z22Day_In_Bet_Schedullingh+0x59a>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d04:	63 e3       	ldi	r22, 0x33	; 51
    6d06:	7b e1       	ldi	r23, 0x1B	; 27
    6d08:	8f e6       	ldi	r24, 0x6F	; 111
    6d0a:	96 e1       	ldi	r25, 0x16	; 22
    6d0c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d10:	8f e6       	ldi	r24, 0x6F	; 111
    6d12:	96 e1       	ldi	r25, 0x16	; 22
    6d14:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d18:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eFEB)
    6d1c:	d2 30       	cpi	r29, 0x02	; 2
    6d1e:	51 f6       	brne	.-108    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d20:	8f e1       	ldi	r24, 0x1F	; 31
    6d22:	89 1b       	sub	r24, r25
    6d24:	08 0f       	add	r16, r24
    6d26:	11 1d       	adc	r17, r1
    6d28:	0e 15       	cp	r16, r14
    6d2a:	1f 05       	cpc	r17, r15
    6d2c:	0c f4       	brge	.+2      	; 0x6d30 <_Z22Day_In_Bet_Schedullingh+0x5b2>
    6d2e:	74 c1       	rjmp	.+744    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d30:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6d34:	c1 30       	cpi	r28, 0x01	; 1
    6d36:	09 f0       	breq	.+2      	; 0x6d3a <_Z22Day_In_Bet_Schedullingh+0x5bc>
    6d38:	bd cf       	rjmp	.-134    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d3a:	66 e2       	ldi	r22, 0x26	; 38
    6d3c:	7b e1       	ldi	r23, 0x1B	; 27
    6d3e:	a1 cf       	rjmp	.-190    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMARCH:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d40:	c1 30       	cpi	r28, 0x01	; 1
    6d42:	51 f4       	brne	.+20     	; 0x6d58 <_Z22Day_In_Bet_Schedullingh+0x5da>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d44:	69 e1       	ldi	r22, 0x19	; 25
    6d46:	7b e1       	ldi	r23, 0x1B	; 27
    6d48:	8f e6       	ldi	r24, 0x6F	; 111
    6d4a:	96 e1       	ldi	r25, 0x16	; 22
    6d4c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d50:	8f e6       	ldi	r24, 0x6F	; 111
    6d52:	96 e1       	ldi	r25, 0x16	; 22
    6d54:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d58:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eAPR)
    6d5c:	d4 30       	cpi	r29, 0x04	; 4
    6d5e:	09 f0       	breq	.+2      	; 0x6d62 <_Z22Day_In_Bet_Schedullingh+0x5e4>
    6d60:	a9 cf       	rjmp	.-174    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6d62:	8f e1       	ldi	r24, 0x1F	; 31
    6d64:	89 1b       	sub	r24, r25
    6d66:	08 0f       	add	r16, r24
    6d68:	11 1d       	adc	r17, r1
    6d6a:	0e 15       	cp	r16, r14
    6d6c:	1f 05       	cpc	r17, r15
    6d6e:	0c f4       	brge	.+2      	; 0x6d72 <_Z22Day_In_Bet_Schedullingh+0x5f4>
    6d70:	53 c1       	rjmp	.+678    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d72:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6d76:	c1 30       	cpi	r28, 0x01	; 1
    6d78:	09 f0       	breq	.+2      	; 0x6d7c <_Z22Day_In_Bet_Schedullingh+0x5fe>
    6d7a:	9c cf       	rjmp	.-200    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6d7c:	6c e0       	ldi	r22, 0x0C	; 12
    6d7e:	7b e1       	ldi	r23, 0x1B	; 27
    6d80:	80 cf       	rjmp	.-256    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eMAY:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6d82:	c1 30       	cpi	r28, 0x01	; 1
    6d84:	51 f4       	brne	.+20     	; 0x6d9a <_Z22Day_In_Bet_Schedullingh+0x61c>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6d86:	6f ef       	ldi	r22, 0xFF	; 255
    6d88:	7a e1       	ldi	r23, 0x1A	; 26
    6d8a:	8f e6       	ldi	r24, 0x6F	; 111
    6d8c:	96 e1       	ldi	r25, 0x16	; 22
    6d8e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6d92:	8f e6       	ldi	r24, 0x6F	; 111
    6d94:	96 e1       	ldi	r25, 0x16	; 22
    6d96:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6d9a:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJUN)
    6d9e:	d6 30       	cpi	r29, 0x06	; 6
    6da0:	09 f0       	breq	.+2      	; 0x6da4 <_Z22Day_In_Bet_Schedullingh+0x626>
    6da2:	88 cf       	rjmp	.-240    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6da4:	8f e1       	ldi	r24, 0x1F	; 31
    6da6:	89 1b       	sub	r24, r25
    6da8:	08 0f       	add	r16, r24
    6daa:	11 1d       	adc	r17, r1
    6dac:	0e 15       	cp	r16, r14
    6dae:	1f 05       	cpc	r17, r15
    6db0:	0c f4       	brge	.+2      	; 0x6db4 <_Z22Day_In_Bet_Schedullingh+0x636>
    6db2:	32 c1       	rjmp	.+612    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6db4:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6db8:	c1 30       	cpi	r28, 0x01	; 1
    6dba:	09 f0       	breq	.+2      	; 0x6dbe <_Z22Day_In_Bet_Schedullingh+0x640>
    6dbc:	7b cf       	rjmp	.-266    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6dbe:	62 ef       	ldi	r22, 0xF2	; 242
    6dc0:	7a e1       	ldi	r23, 0x1A	; 26
    6dc2:	5f cf       	rjmp	.-322    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUL:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6dc4:	c1 30       	cpi	r28, 0x01	; 1
    6dc6:	51 f4       	brne	.+20     	; 0x6ddc <_Z22Day_In_Bet_Schedullingh+0x65e>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6dc8:	65 ee       	ldi	r22, 0xE5	; 229
    6dca:	7a e1       	ldi	r23, 0x1A	; 26
    6dcc:	8f e6       	ldi	r24, 0x6F	; 111
    6dce:	96 e1       	ldi	r25, 0x16	; 22
    6dd0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6dd4:	8f e6       	ldi	r24, 0x6F	; 111
    6dd6:	96 e1       	ldi	r25, 0x16	; 22
    6dd8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6ddc:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eAUG)
    6de0:	d8 30       	cpi	r29, 0x08	; 8
    6de2:	09 f0       	breq	.+2      	; 0x6de6 <_Z22Day_In_Bet_Schedullingh+0x668>
    6de4:	67 cf       	rjmp	.-306    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6de6:	8f e1       	ldi	r24, 0x1F	; 31
    6de8:	89 1b       	sub	r24, r25
    6dea:	08 0f       	add	r16, r24
    6dec:	11 1d       	adc	r17, r1
    6dee:	0e 15       	cp	r16, r14
    6df0:	1f 05       	cpc	r17, r15
    6df2:	0c f4       	brge	.+2      	; 0x6df6 <_Z22Day_In_Bet_Schedullingh+0x678>
    6df4:	11 c1       	rjmp	.+546    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6df6:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6dfa:	c1 30       	cpi	r28, 0x01	; 1
    6dfc:	09 f0       	breq	.+2      	; 0x6e00 <_Z22Day_In_Bet_Schedullingh+0x682>
    6dfe:	5a cf       	rjmp	.-332    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e00:	68 ed       	ldi	r22, 0xD8	; 216
    6e02:	7a e1       	ldi	r23, 0x1A	; 26
    6e04:	3e cf       	rjmp	.-388    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAUG:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e06:	c1 30       	cpi	r28, 0x01	; 1
    6e08:	51 f4       	brne	.+20     	; 0x6e1e <_Z22Day_In_Bet_Schedullingh+0x6a0>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e0a:	6b ec       	ldi	r22, 0xCB	; 203
    6e0c:	7a e1       	ldi	r23, 0x1A	; 26
    6e0e:	8f e6       	ldi	r24, 0x6F	; 111
    6e10:	96 e1       	ldi	r25, 0x16	; 22
    6e12:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e16:	8f e6       	ldi	r24, 0x6F	; 111
    6e18:	96 e1       	ldi	r25, 0x16	; 22
    6e1a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e1e:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eSEP)
    6e22:	d9 30       	cpi	r29, 0x09	; 9
    6e24:	09 f0       	breq	.+2      	; 0x6e28 <_Z22Day_In_Bet_Schedullingh+0x6aa>
    6e26:	46 cf       	rjmp	.-372    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e28:	8f e1       	ldi	r24, 0x1F	; 31
    6e2a:	89 1b       	sub	r24, r25
    6e2c:	08 0f       	add	r16, r24
    6e2e:	11 1d       	adc	r17, r1
    6e30:	0e 15       	cp	r16, r14
    6e32:	1f 05       	cpc	r17, r15
    6e34:	0c f4       	brge	.+2      	; 0x6e38 <_Z22Day_In_Bet_Schedullingh+0x6ba>
    6e36:	f0 c0       	rjmp	.+480    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e38:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6e3c:	c1 30       	cpi	r28, 0x01	; 1
    6e3e:	09 f0       	breq	.+2      	; 0x6e42 <_Z22Day_In_Bet_Schedullingh+0x6c4>
    6e40:	39 cf       	rjmp	.-398    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e42:	6e eb       	ldi	r22, 0xBE	; 190
    6e44:	7a e1       	ldi	r23, 0x1A	; 26
    6e46:	1d cf       	rjmp	.-454    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eOCT:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e48:	c1 30       	cpi	r28, 0x01	; 1
    6e4a:	51 f4       	brne	.+20     	; 0x6e60 <_Z22Day_In_Bet_Schedullingh+0x6e2>
						{
							_kSERAIL_MON_WRITE("day in btw 2");
    6e4c:	61 eb       	ldi	r22, 0xB1	; 177
    6e4e:	7a e1       	ldi	r23, 0x1A	; 26
    6e50:	8f e6       	ldi	r24, 0x6F	; 111
    6e52:	96 e1       	ldi	r25, 0x16	; 22
    6e54:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6e58:	8f e6       	ldi	r24, 0x6F	; 111
    6e5a:	96 e1       	ldi	r25, 0x16	; 22
    6e5c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 31 - _sSchedules.Irrigating_Date;
    6e60:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eNOV)
    6e64:	db 30       	cpi	r29, 0x0B	; 11
    6e66:	09 f0       	breq	.+2      	; 0x6e6a <_Z22Day_In_Bet_Schedullingh+0x6ec>
    6e68:	25 cf       	rjmp	.-438    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6e6a:	8f e1       	ldi	r24, 0x1F	; 31
    6e6c:	89 1b       	sub	r24, r25
    6e6e:	08 0f       	add	r16, r24
    6e70:	11 1d       	adc	r17, r1
    6e72:	0e 15       	cp	r16, r14
    6e74:	1f 05       	cpc	r17, r15
    6e76:	0c f4       	brge	.+2      	; 0x6e7a <_Z22Day_In_Bet_Schedullingh+0x6fc>
    6e78:	cf c0       	rjmp	.+414    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e7a:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6e7e:	c1 30       	cpi	r28, 0x01	; 1
    6e80:	09 f0       	breq	.+2      	; 0x6e84 <_Z22Day_In_Bet_Schedullingh+0x706>
    6e82:	18 cf       	rjmp	.-464    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 3");
    6e84:	64 ea       	ldi	r22, 0xA4	; 164
    6e86:	7a e1       	ldi	r23, 0x1A	; 26
    6e88:	fc ce       	rjmp	.-520    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
					}break;
					
					
					case _eFEB:   // current month mar
					{
						if(year%4)
    6e8a:	8b 2d       	mov	r24, r11
    6e8c:	83 70       	andi	r24, 0x03	; 3
    6e8e:	09 f1       	breq	.+66     	; 0x6ed2 <_Z22Day_In_Bet_Schedullingh+0x754>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6e90:	c1 30       	cpi	r28, 0x01	; 1
    6e92:	51 f4       	brne	.+20     	; 0x6ea8 <_Z22Day_In_Bet_Schedullingh+0x72a>
							{
								_kSERAIL_MON_WRITE("day in btw 4");
    6e94:	67 e9       	ldi	r22, 0x97	; 151
    6e96:	7a e1       	ldi	r23, 0x1A	; 26
    6e98:	8f e6       	ldi	r24, 0x6F	; 111
    6e9a:	96 e1       	ldi	r25, 0x16	; 22
    6e9c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6ea0:	8f e6       	ldi	r24, 0x6F	; 111
    6ea2:	96 e1       	ldi	r25, 0x16	; 22
    6ea4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 28 - _sSchedules.Irrigating_Date;
    6ea8:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6eac:	d3 30       	cpi	r29, 0x03	; 3
    6eae:	09 f0       	breq	.+2      	; 0x6eb2 <_Z22Day_In_Bet_Schedullingh+0x734>
    6eb0:	01 cf       	rjmp	.-510    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6eb2:	8c e1       	ldi	r24, 0x1C	; 28
    6eb4:	89 1b       	sub	r24, r25
    6eb6:	08 0f       	add	r16, r24
    6eb8:	11 1d       	adc	r17, r1
    6eba:	0e 15       	cp	r16, r14
    6ebc:	1f 05       	cpc	r17, r15
    6ebe:	0c f4       	brge	.+2      	; 0x6ec2 <_Z22Day_In_Bet_Schedullingh+0x744>
    6ec0:	ab c0       	rjmp	.+342    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ec2:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6ec6:	c1 30       	cpi	r28, 0x01	; 1
    6ec8:	09 f0       	breq	.+2      	; 0x6ecc <_Z22Day_In_Bet_Schedullingh+0x74e>
    6eca:	f4 ce       	rjmp	.-536    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 5");
    6ecc:	6a e8       	ldi	r22, 0x8A	; 138
    6ece:	7a e1       	ldi	r23, 0x1A	; 26
    6ed0:	d8 ce       	rjmp	.-592    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
								return 1;
							}
						}
						else
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    6ed2:	c1 30       	cpi	r28, 0x01	; 1
    6ed4:	51 f4       	brne	.+20     	; 0x6eea <_Z22Day_In_Bet_Schedullingh+0x76c>
							{
								_kSERAIL_MON_WRITE("day in btw 6");
    6ed6:	6d e7       	ldi	r22, 0x7D	; 125
    6ed8:	7a e1       	ldi	r23, 0x1A	; 26
    6eda:	8f e6       	ldi	r24, 0x6F	; 111
    6edc:	96 e1       	ldi	r25, 0x16	; 22
    6ede:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    6ee2:	8f e6       	ldi	r24, 0x6F	; 111
    6ee4:	96 e1       	ldi	r25, 0x16	; 22
    6ee6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							calculate_days = 29 - _sSchedules.Irrigating_Date;
    6eea:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
							
							if(month == _eMARCH)
    6eee:	d3 30       	cpi	r29, 0x03	; 3
    6ef0:	09 f0       	breq	.+2      	; 0x6ef4 <_Z22Day_In_Bet_Schedullingh+0x776>
    6ef2:	e0 ce       	rjmp	.-576    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
							{
								if(Days_In_Between_Schedules <= (date + calculate_days))
    6ef4:	8d e1       	ldi	r24, 0x1D	; 29
    6ef6:	89 1b       	sub	r24, r25
    6ef8:	08 0f       	add	r16, r24
    6efa:	11 1d       	adc	r17, r1
    6efc:	0e 15       	cp	r16, r14
    6efe:	1f 05       	cpc	r17, r15
    6f00:	0c f4       	brge	.+2      	; 0x6f04 <_Z22Day_In_Bet_Schedullingh+0x786>
    6f02:	8a c0       	rjmp	.+276    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f04:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6f08:	c1 30       	cpi	r28, 0x01	; 1
    6f0a:	09 f0       	breq	.+2      	; 0x6f0e <_Z22Day_In_Bet_Schedullingh+0x790>
    6f0c:	d3 ce       	rjmp	.-602    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
									{
										_kSERAIL_MON_WRITE("day in btw 7");
    6f0e:	60 e7       	ldi	r22, 0x70	; 112
    6f10:	7a e1       	ldi	r23, 0x1A	; 26
    6f12:	b7 ce       	rjmp	.-658    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eAPR:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f14:	c1 30       	cpi	r28, 0x01	; 1
    6f16:	51 f4       	brne	.+20     	; 0x6f2c <_Z22Day_In_Bet_Schedullingh+0x7ae>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6f18:	63 e6       	ldi	r22, 0x63	; 99
    6f1a:	7a e1       	ldi	r23, 0x1A	; 26
    6f1c:	8f e6       	ldi	r24, 0x6F	; 111
    6f1e:	96 e1       	ldi	r25, 0x16	; 22
    6f20:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f24:	8f e6       	ldi	r24, 0x6F	; 111
    6f26:	96 e1       	ldi	r25, 0x16	; 22
    6f28:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6f2c:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eMAY)
    6f30:	d5 30       	cpi	r29, 0x05	; 5
    6f32:	09 f0       	breq	.+2      	; 0x6f36 <_Z22Day_In_Bet_Schedullingh+0x7b8>
    6f34:	bf ce       	rjmp	.-642    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f36:	8e e1       	ldi	r24, 0x1E	; 30
    6f38:	89 1b       	sub	r24, r25
    6f3a:	08 0f       	add	r16, r24
    6f3c:	11 1d       	adc	r17, r1
    6f3e:	0e 15       	cp	r16, r14
    6f40:	1f 05       	cpc	r17, r15
    6f42:	0c f4       	brge	.+2      	; 0x6f46 <_Z22Day_In_Bet_Schedullingh+0x7c8>
    6f44:	69 c0       	rjmp	.+210    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f46:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6f4a:	c1 30       	cpi	r28, 0x01	; 1
    6f4c:	09 f0       	breq	.+2      	; 0x6f50 <_Z22Day_In_Bet_Schedullingh+0x7d2>
    6f4e:	b2 ce       	rjmp	.-668    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6f50:	66 e5       	ldi	r22, 0x56	; 86
    6f52:	7a e1       	ldi	r23, 0x1A	; 26
    6f54:	96 ce       	rjmp	.-724    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eJUN:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f56:	c1 30       	cpi	r28, 0x01	; 1
    6f58:	51 f4       	brne	.+20     	; 0x6f6e <_Z22Day_In_Bet_Schedullingh+0x7f0>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6f5a:	69 e4       	ldi	r22, 0x49	; 73
    6f5c:	7a e1       	ldi	r23, 0x1A	; 26
    6f5e:	8f e6       	ldi	r24, 0x6F	; 111
    6f60:	96 e1       	ldi	r25, 0x16	; 22
    6f62:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6f66:	8f e6       	ldi	r24, 0x6F	; 111
    6f68:	96 e1       	ldi	r25, 0x16	; 22
    6f6a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6f6e:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eJUL)
    6f72:	d7 30       	cpi	r29, 0x07	; 7
    6f74:	09 f0       	breq	.+2      	; 0x6f78 <_Z22Day_In_Bet_Schedullingh+0x7fa>
    6f76:	9e ce       	rjmp	.-708    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6f78:	8e e1       	ldi	r24, 0x1E	; 30
    6f7a:	89 1b       	sub	r24, r25
    6f7c:	08 0f       	add	r16, r24
    6f7e:	11 1d       	adc	r17, r1
    6f80:	0e 15       	cp	r16, r14
    6f82:	1f 05       	cpc	r17, r15
    6f84:	0c f4       	brge	.+2      	; 0x6f88 <_Z22Day_In_Bet_Schedullingh+0x80a>
    6f86:	48 c0       	rjmp	.+144    	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f88:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6f8c:	c1 30       	cpi	r28, 0x01	; 1
    6f8e:	09 f0       	breq	.+2      	; 0x6f92 <_Z22Day_In_Bet_Schedullingh+0x814>
    6f90:	91 ce       	rjmp	.-734    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6f92:	6c e3       	ldi	r22, 0x3C	; 60
    6f94:	7a e1       	ldi	r23, 0x1A	; 26
    6f96:	75 ce       	rjmp	.-790    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eSEP:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6f98:	c1 30       	cpi	r28, 0x01	; 1
    6f9a:	51 f4       	brne	.+20     	; 0x6fb0 <_Z22Day_In_Bet_Schedullingh+0x832>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6f9c:	6f e2       	ldi	r22, 0x2F	; 47
    6f9e:	7a e1       	ldi	r23, 0x1A	; 26
    6fa0:	8f e6       	ldi	r24, 0x6F	; 111
    6fa2:	96 e1       	ldi	r25, 0x16	; 22
    6fa4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6fa8:	8f e6       	ldi	r24, 0x6F	; 111
    6faa:	96 e1       	ldi	r25, 0x16	; 22
    6fac:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6fb0:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eOCT)
    6fb4:	da 30       	cpi	r29, 0x0A	; 10
    6fb6:	09 f0       	breq	.+2      	; 0x6fba <_Z22Day_In_Bet_Schedullingh+0x83c>
    6fb8:	7d ce       	rjmp	.-774    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6fba:	8e e1       	ldi	r24, 0x1E	; 30
    6fbc:	89 1b       	sub	r24, r25
    6fbe:	08 0f       	add	r16, r24
    6fc0:	11 1d       	adc	r17, r1
    6fc2:	0e 15       	cp	r16, r14
    6fc4:	1f 05       	cpc	r17, r15
    6fc6:	44 f1       	brlt	.+80     	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fc8:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    6fcc:	c1 30       	cpi	r28, 0x01	; 1
    6fce:	09 f0       	breq	.+2      	; 0x6fd2 <_Z22Day_In_Bet_Schedullingh+0x854>
    6fd0:	71 ce       	rjmp	.-798    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    6fd2:	62 e2       	ldi	r22, 0x22	; 34
    6fd4:	7a e1       	ldi	r23, 0x1A	; 26
    6fd6:	55 ce       	rjmp	.-854    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
					
					case _eNOV:
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    6fd8:	c1 30       	cpi	r28, 0x01	; 1
    6fda:	51 f4       	brne	.+20     	; 0x6ff0 <_Z22Day_In_Bet_Schedullingh+0x872>
						{
							_kSERAIL_MON_WRITE("day in btw 8");
    6fdc:	65 e1       	ldi	r22, 0x15	; 21
    6fde:	7a e1       	ldi	r23, 0x1A	; 26
    6fe0:	8f e6       	ldi	r24, 0x6F	; 111
    6fe2:	96 e1       	ldi	r25, 0x16	; 22
    6fe4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    6fe8:	8f e6       	ldi	r24, 0x6F	; 111
    6fea:	96 e1       	ldi	r25, 0x16	; 22
    6fec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 30 - _sSchedules.Irrigating_Date;
    6ff0:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
						
						if(month == _eDEC)
    6ff4:	dc 30       	cpi	r29, 0x0C	; 12
    6ff6:	09 f0       	breq	.+2      	; 0x6ffa <_Z22Day_In_Bet_Schedullingh+0x87c>
    6ff8:	5d ce       	rjmp	.-838    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
						{
							if( Days_In_Between_Schedules <= (date + calculate_days))
    6ffa:	8e e1       	ldi	r24, 0x1E	; 30
    6ffc:	89 1b       	sub	r24, r25
    6ffe:	08 0f       	add	r16, r24
    7000:	11 1d       	adc	r17, r1
    7002:	0e 15       	cp	r16, r14
    7004:	1f 05       	cpc	r17, r15
    7006:	44 f0       	brlt	.+16     	; 0x7018 <_Z22Day_In_Bet_Schedullingh+0x89a>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    7008:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    700c:	c1 30       	cpi	r28, 0x01	; 1
    700e:	09 f0       	breq	.+2      	; 0x7012 <_Z22Day_In_Bet_Schedullingh+0x894>
    7010:	51 ce       	rjmp	.-862    	; 0x6cb4 <_Z22Day_In_Bet_Schedullingh+0x536>
								{
									_kSERAIL_MON_WRITE("day in btw 9");
    7012:	68 e0       	ldi	r22, 0x08	; 8
    7014:	7a e1       	ldi	r23, 0x1A	; 26
    7016:	35 ce       	rjmp	.-918    	; 0x6c82 <_Z22Day_In_Bet_Schedullingh+0x504>
						}
					}break;
				}
				//printf("deny 3");
				//return 0;
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7018:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    701c:	81 30       	cpi	r24, 0x01	; 1
    701e:	c1 f4       	brne	.+48     	; 0x7050 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				{
					_kSERAIL_MON_WRITE("day in btw 10");
    7020:	6a ef       	ldi	r22, 0xFA	; 250
    7022:	79 e1       	ldi	r23, 0x19	; 25
    7024:	8f e6       	ldi	r24, 0x6F	; 111
    7026:	96 e1       	ldi	r25, 0x16	; 22
    7028:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    702c:	8f e6       	ldi	r24, 0x6F	; 111
    702e:	96 e1       	ldi	r25, 0x16	; 22
    7030:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    7034:	0d c0       	rjmp	.+26     	; 0x7050 <_Z22Day_In_Bet_Schedullingh+0x8d2>
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7036:	c1 30       	cpi	r28, 0x01	; 1
    7038:	61 f4       	brne	.+24     	; 0x7052 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
    703a:	6c ee       	ldi	r22, 0xEC	; 236
    703c:	79 e1       	ldi	r23, 0x19	; 25
    703e:	8f e6       	ldi	r24, 0x6F	; 111
    7040:	96 e1       	ldi	r25, 0x16	; 22
    7042:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7046:	8f e6       	ldi	r24, 0x6F	; 111
    7048:	96 e1       	ldi	r25, 0x16	; 22
    704a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    704e:	01 c0       	rjmp	.+2      	; 0x7052 <_Z22Day_In_Bet_Schedullingh+0x8d4>
				//printf("deny 4");
				return 0;
			}
			
		}
}
    7050:	02 c0       	rjmp	.+4      	; 0x7056 <_Z22Day_In_Bet_Schedullingh+0x8d8>
				{
					_kSERAIL_MON_WRITE("day in btw 11");
					_kSERIAL_MON_CLEAR();
				}
				//printf("deny 4");
				return 0;
    7052:	c0 e0       	ldi	r28, 0x00	; 0
    7054:	55 cc       	rjmp	.-1878   	; 0x6900 <_Z22Day_In_Bet_Schedullingh+0x182>
			}
			
		}
}
    7056:	df 91       	pop	r29
    7058:	cf 91       	pop	r28
    705a:	1f 91       	pop	r17
    705c:	0f 91       	pop	r16
    705e:	ff 90       	pop	r15
    7060:	ef 90       	pop	r14
    7062:	df 90       	pop	r13
    7064:	cf 90       	pop	r12
    7066:	bf 90       	pop	r11
    7068:	08 95       	ret

0000706a <_Z22Day_In_Bet_Schedullinghhh>:

unsigned char Day_In_Bet_Schedulling(unsigned char Days_In_Between_Schedules, unsigned char last_schedule_date,
unsigned char last_schedule_month)
{
    706a:	7f 92       	push	r7
    706c:	8f 92       	push	r8
    706e:	9f 92       	push	r9
    7070:	af 92       	push	r10
    7072:	bf 92       	push	r11
    7074:	cf 92       	push	r12
    7076:	df 92       	push	r13
    7078:	ef 92       	push	r14
    707a:	ff 92       	push	r15
    707c:	0f 93       	push	r16
    707e:	1f 93       	push	r17
    7080:	cf 93       	push	r28
    7082:	df 93       	push	r29
    7084:	c8 2e       	mov	r12, r24
    7086:	f6 2e       	mov	r15, r22
    7088:	74 2e       	mov	r7, r20
	unsigned char date,month,year;
	
	unsigned char calculate_days;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    708a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    708e:	81 30       	cpi	r24, 0x01	; 1
    7090:	69 f4       	brne	.+26     	; 0x70ac <_Z22Day_In_Bet_Schedullinghhh+0x42>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
    7092:	69 ed       	ldi	r22, 0xD9	; 217
    7094:	79 e1       	ldi	r23, 0x19	; 25
    7096:	8f e6       	ldi	r24, 0x6F	; 111
    7098:	96 e1       	ldi	r25, 0x16	; 22
    709a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(Days_In_Between_Schedules);
    709e:	4a e0       	ldi	r20, 0x0A	; 10
    70a0:	50 e0       	ldi	r21, 0x00	; 0
    70a2:	6c 2d       	mov	r22, r12
    70a4:	8f e6       	ldi	r24, 0x6F	; 111
    70a6:	96 e1       	ldi	r25, 0x16	; 22
    70a8:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
	}
	
	
	year  = _sRuble_Parameters.Update_Local_Date[2];
    70ac:	e0 90 ab 15 	lds	r14, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
	
	if(_sSchedules.Started_Date != 0)
    70b0:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    70b4:	88 23       	and	r24, r24
    70b6:	71 f0       	breq	.+28     	; 0x70d4 <_Z22Day_In_Bet_Schedullinghhh+0x6a>
	{
		if(_sSchedules.Which_Sheduler_Is_Running == 1)
    70b8:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    70bc:	81 30       	cpi	r24, 0x01	; 1
    70be:	29 f4       	brne	.+10     	; 0x70ca <_Z22Day_In_Bet_Schedullinghhh+0x60>
		{
			date  = _sSchedules.Started_Date;
    70c0:	00 91 fc 08 	lds	r16, 0x08FC	; 0x8008fc <_sSchedules+0xc>
			month = _sSchedules.Started_Month;
    70c4:	d0 91 fd 08 	lds	r29, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    70c8:	09 c0       	rjmp	.+18     	; 0x70dc <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		else
		{
			date  = _sSchedules.First_Schedule_Irrigated_Date;
    70ca:	00 91 c0 0b 	lds	r16, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
			month = _sSchedules.First_Schedule_Irrigated_Month;
    70ce:	d0 91 c1 0b 	lds	r29, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    70d2:	04 c0       	rjmp	.+8      	; 0x70dc <_Z22Day_In_Bet_Schedullinghhh+0x72>
		}
		
	}
	else
	{
		date  = _sRuble_Parameters.Update_Local_Date[0];
    70d4:	00 91 a9 15 	lds	r16, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
		month = _sRuble_Parameters.Update_Local_Date[1];
    70d8:	d0 91 aa 15 	lds	r29, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules + 1;
    70dc:	aa 24       	eor	r10, r10
    70de:	a3 94       	inc	r10
    70e0:	ac 0c       	add	r10, r12
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    70e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    70e6:	81 30       	cpi	r24, 0x01	; 1
    70e8:	09 f0       	breq	.+2      	; 0x70ec <_Z22Day_In_Bet_Schedullinghhh+0x82>
    70ea:	71 c0       	rjmp	.+226    	; 0x71ce <_Z22Day_In_Bet_Schedullinghhh+0x164>
	{
		_kSERAIL_MON_WRITE("date : ");
    70ec:	61 ed       	ldi	r22, 0xD1	; 209
    70ee:	79 e1       	ldi	r23, 0x19	; 25
    70f0:	8f e6       	ldi	r24, 0x6F	; 111
    70f2:	96 e1       	ldi	r25, 0x16	; 22
    70f4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    70f8:	4a e0       	ldi	r20, 0x0A	; 10
    70fa:	50 e0       	ldi	r21, 0x00	; 0
    70fc:	60 2f       	mov	r22, r16
    70fe:	8f e6       	ldi	r24, 0x6F	; 111
    7100:	96 e1       	ldi	r25, 0x16	; 22
    7102:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7106:	8f e6       	ldi	r24, 0x6F	; 111
    7108:	96 e1       	ldi	r25, 0x16	; 22
    710a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("month : ");
    710e:	68 ec       	ldi	r22, 0xC8	; 200
    7110:	79 e1       	ldi	r23, 0x19	; 25
    7112:	8f e6       	ldi	r24, 0x6F	; 111
    7114:	96 e1       	ldi	r25, 0x16	; 22
    7116:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(month);
    711a:	4a e0       	ldi	r20, 0x0A	; 10
    711c:	50 e0       	ldi	r21, 0x00	; 0
    711e:	6d 2f       	mov	r22, r29
    7120:	8f e6       	ldi	r24, 0x6F	; 111
    7122:	96 e1       	ldi	r25, 0x16	; 22
    7124:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7128:	8f e6       	ldi	r24, 0x6F	; 111
    712a:	96 e1       	ldi	r25, 0x16	; 22
    712c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>

		_kSERAIL_MON_WRITE("year : ");
    7130:	60 ec       	ldi	r22, 0xC0	; 192
    7132:	79 e1       	ldi	r23, 0x19	; 25
    7134:	8f e6       	ldi	r24, 0x6F	; 111
    7136:	96 e1       	ldi	r25, 0x16	; 22
    7138:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    713c:	4a e0       	ldi	r20, 0x0A	; 10
    713e:	50 e0       	ldi	r21, 0x00	; 0
    7140:	60 91 ab 15 	lds	r22, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    7144:	8f e6       	ldi	r24, 0x6F	; 111
    7146:	96 e1       	ldi	r25, 0x16	; 22
    7148:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    714c:	8f e6       	ldi	r24, 0x6F	; 111
    714e:	96 e1       	ldi	r25, 0x16	; 22
    7150:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last date: ");
    7154:	64 eb       	ldi	r22, 0xB4	; 180
    7156:	79 e1       	ldi	r23, 0x19	; 25
    7158:	8f e6       	ldi	r24, 0x6F	; 111
    715a:	96 e1       	ldi	r25, 0x16	; 22
    715c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_date);
    7160:	4a e0       	ldi	r20, 0x0A	; 10
    7162:	50 e0       	ldi	r21, 0x00	; 0
    7164:	6f 2d       	mov	r22, r15
    7166:	8f e6       	ldi	r24, 0x6F	; 111
    7168:	96 e1       	ldi	r25, 0x16	; 22
    716a:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    716e:	8f e6       	ldi	r24, 0x6F	; 111
    7170:	96 e1       	ldi	r25, 0x16	; 22
    7172:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("last month : ");
    7176:	66 ea       	ldi	r22, 0xA6	; 166
    7178:	79 e1       	ldi	r23, 0x19	; 25
    717a:	8f e6       	ldi	r24, 0x6F	; 111
    717c:	96 e1       	ldi	r25, 0x16	; 22
    717e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(last_schedule_month);
    7182:	4a e0       	ldi	r20, 0x0A	; 10
    7184:	50 e0       	ldi	r21, 0x00	; 0
    7186:	67 2d       	mov	r22, r7
    7188:	8f e6       	ldi	r24, 0x6F	; 111
    718a:	96 e1       	ldi	r25, 0x16	; 22
    718c:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    7190:	8f e6       	ldi	r24, 0x6F	; 111
    7192:	96 e1       	ldi	r25, 0x16	; 22
    7194:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("day in btw started");
    7198:	63 e9       	ldi	r22, 0x93	; 147
    719a:	79 e1       	ldi	r23, 0x19	; 25
    719c:	8f e6       	ldi	r24, 0x6F	; 111
    719e:	96 e1       	ldi	r25, 0x16	; 22
    71a0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    71a4:	8f e6       	ldi	r24, 0x6F	; 111
    71a6:	96 e1       	ldi	r25, 0x16	; 22
    71a8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("No of days in bet : ");
    71ac:	6e e7       	ldi	r22, 0x7E	; 126
    71ae:	79 e1       	ldi	r23, 0x19	; 25
    71b0:	8f e6       	ldi	r24, 0x6F	; 111
    71b2:	96 e1       	ldi	r25, 0x16	; 22
    71b4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    71b8:	4a e0       	ldi	r20, 0x0A	; 10
    71ba:	50 e0       	ldi	r21, 0x00	; 0
    71bc:	6a 2d       	mov	r22, r10
    71be:	8f e6       	ldi	r24, 0x6F	; 111
    71c0:	96 e1       	ldi	r25, 0x16	; 22
    71c2:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    71c6:	8f e6       	ldi	r24, 0x6F	; 111
    71c8:	96 e1       	ldi	r25, 0x16	; 22
    71ca:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
	
	
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    71ce:	8f 2c       	mov	r8, r15
    71d0:	91 2c       	mov	r9, r1
    71d2:	b1 2c       	mov	r11, r1
    71d4:	10 e0       	ldi	r17, 0x00	; 0
    71d6:	94 01       	movw	r18, r8
    71d8:	2a 0d       	add	r18, r10
    71da:	3b 1d       	adc	r19, r11
    71dc:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    71e0:	02 17       	cp	r16, r18
    71e2:	13 07       	cpc	r17, r19
    71e4:	44 f0       	brlt	.+16     	; 0x71f6 <_Z22Day_In_Bet_Schedullinghhh+0x18c>
    71e6:	d7 11       	cpse	r29, r7
    71e8:	09 c0       	rjmp	.+18     	; 0x71fc <_Z22Day_In_Bet_Schedullinghhh+0x192>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    71ea:	91 30       	cpi	r25, 0x01	; 1
    71ec:	09 f0       	breq	.+2      	; 0x71f0 <_Z22Day_In_Bet_Schedullinghhh+0x186>
    71ee:	be c3       	rjmp	.+1916   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
    71f0:	61 e7       	ldi	r22, 0x71	; 113
    71f2:	79 e1       	ldi	r23, 0x19	; 25
    71f4:	30 c0       	rjmp	.+96     	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
		
		return 2;
	}
	else
	{
		if(last_schedule_month != month)
    71f6:	d7 15       	cp	r29, r7
    71f8:	09 f4       	brne	.+2      	; 0x71fc <_Z22Day_In_Bet_Schedullinghhh+0x192>
    71fa:	be c1       	rjmp	.+892    	; 0x7578 <_Z22Day_In_Bet_Schedullinghhh+0x50e>
		{
			switch(last_schedule_month)
    71fc:	47 2d       	mov	r20, r7
    71fe:	50 e0       	ldi	r21, 0x00	; 0
    7200:	fa 01       	movw	r30, r20
    7202:	31 97       	sbiw	r30, 0x01	; 1
    7204:	ec 30       	cpi	r30, 0x0C	; 12
    7206:	f1 05       	cpc	r31, r1
    7208:	08 f0       	brcs	.+2      	; 0x720c <_Z22Day_In_Bet_Schedullinghhh+0x1a2>
    720a:	af c1       	rjmp	.+862    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
    720c:	88 27       	eor	r24, r24
    720e:	e7 54       	subi	r30, 0x47	; 71
    7210:	ff 4f       	sbci	r31, 0xFF	; 255
    7212:	8f 4f       	sbci	r24, 0xFF	; 255
    7214:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7218:	91 30       	cpi	r25, 0x01	; 1
    721a:	51 f4       	brne	.+20     	; 0x7230 <_Z22Day_In_Bet_Schedullinghhh+0x1c6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    721c:	64 e6       	ldi	r22, 0x64	; 100
    721e:	79 e1       	ldi	r23, 0x19	; 25
    7220:	8f e6       	ldi	r24, 0x6F	; 111
    7222:	96 e1       	ldi	r25, 0x16	; 22
    7224:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7228:	8f e6       	ldi	r24, 0x6F	; 111
    722a:	96 e1       	ldi	r25, 0x16	; 22
    722c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7230:	d1 30       	cpi	r29, 0x01	; 1
    7232:	09 f0       	breq	.+2      	; 0x7236 <_Z22Day_In_Bet_Schedullinghhh+0x1cc>
    7234:	9b c3       	rjmp	.+1846   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7236:	8f e1       	ldi	r24, 0x1F	; 31
    7238:	8f 19       	sub	r24, r15
    723a:	98 01       	movw	r18, r16
    723c:	28 0f       	add	r18, r24
    723e:	31 1d       	adc	r19, r1
    7240:	2a 15       	cp	r18, r10
    7242:	3b 05       	cpc	r19, r11
    7244:	0c f4       	brge	.+2      	; 0x7248 <_Z22Day_In_Bet_Schedullinghhh+0x1de>
    7246:	91 c1       	rjmp	.+802    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7248:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    724c:	81 30       	cpi	r24, 0x01	; 1
    724e:	09 f0       	breq	.+2      	; 0x7252 <_Z22Day_In_Bet_Schedullinghhh+0x1e8>
    7250:	8d c3       	rjmp	.+1818   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7252:	67 e5       	ldi	r22, 0x57	; 87
    7254:	79 e1       	ldi	r23, 0x19	; 25
    7256:	8f e6       	ldi	r24, 0x6F	; 111
    7258:	96 e1       	ldi	r25, 0x16	; 22
    725a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    725e:	8f e6       	ldi	r24, 0x6F	; 111
    7260:	96 e1       	ldi	r25, 0x16	; 22
    7262:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    7266:	82 c3       	rjmp	.+1796   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7268:	91 30       	cpi	r25, 0x01	; 1
    726a:	51 f4       	brne	.+20     	; 0x7280 <_Z22Day_In_Bet_Schedullinghhh+0x216>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    726c:	6a e4       	ldi	r22, 0x4A	; 74
    726e:	79 e1       	ldi	r23, 0x19	; 25
    7270:	8f e6       	ldi	r24, 0x6F	; 111
    7272:	96 e1       	ldi	r25, 0x16	; 22
    7274:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7278:	8f e6       	ldi	r24, 0x6F	; 111
    727a:	96 e1       	ldi	r25, 0x16	; 22
    727c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    7280:	d2 30       	cpi	r29, 0x02	; 2
    7282:	09 f0       	breq	.+2      	; 0x7286 <_Z22Day_In_Bet_Schedullinghhh+0x21c>
    7284:	73 c3       	rjmp	.+1766   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7286:	8f e1       	ldi	r24, 0x1F	; 31
    7288:	8f 19       	sub	r24, r15
    728a:	98 01       	movw	r18, r16
    728c:	28 0f       	add	r18, r24
    728e:	31 1d       	adc	r19, r1
    7290:	2a 15       	cp	r18, r10
    7292:	3b 05       	cpc	r19, r11
    7294:	0c f4       	brge	.+2      	; 0x7298 <_Z22Day_In_Bet_Schedullinghhh+0x22e>
    7296:	69 c1       	rjmp	.+722    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7298:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    729c:	81 30       	cpi	r24, 0x01	; 1
    729e:	09 f0       	breq	.+2      	; 0x72a2 <_Z22Day_In_Bet_Schedullinghhh+0x238>
    72a0:	65 c3       	rjmp	.+1738   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    72a2:	6d e3       	ldi	r22, 0x3D	; 61
    72a4:	79 e1       	ldi	r23, 0x19	; 25
    72a6:	d7 cf       	rjmp	.-82     	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    72a8:	91 30       	cpi	r25, 0x01	; 1
    72aa:	51 f4       	brne	.+20     	; 0x72c0 <_Z22Day_In_Bet_Schedullinghhh+0x256>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    72ac:	60 e3       	ldi	r22, 0x30	; 48
    72ae:	79 e1       	ldi	r23, 0x19	; 25
    72b0:	8f e6       	ldi	r24, 0x6F	; 111
    72b2:	96 e1       	ldi	r25, 0x16	; 22
    72b4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    72b8:	8f e6       	ldi	r24, 0x6F	; 111
    72ba:	96 e1       	ldi	r25, 0x16	; 22
    72bc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    72c0:	d4 30       	cpi	r29, 0x04	; 4
    72c2:	09 f0       	breq	.+2      	; 0x72c6 <_Z22Day_In_Bet_Schedullinghhh+0x25c>
    72c4:	53 c3       	rjmp	.+1702   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    72c6:	8f e1       	ldi	r24, 0x1F	; 31
    72c8:	8f 19       	sub	r24, r15
    72ca:	98 01       	movw	r18, r16
    72cc:	28 0f       	add	r18, r24
    72ce:	31 1d       	adc	r19, r1
    72d0:	2a 15       	cp	r18, r10
    72d2:	3b 05       	cpc	r19, r11
    72d4:	0c f4       	brge	.+2      	; 0x72d8 <_Z22Day_In_Bet_Schedullinghhh+0x26e>
    72d6:	49 c1       	rjmp	.+658    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    72d8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    72dc:	81 30       	cpi	r24, 0x01	; 1
    72de:	09 f0       	breq	.+2      	; 0x72e2 <_Z22Day_In_Bet_Schedullinghhh+0x278>
    72e0:	45 c3       	rjmp	.+1674   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    72e2:	63 e2       	ldi	r22, 0x23	; 35
    72e4:	79 e1       	ldi	r23, 0x19	; 25
    72e6:	b7 cf       	rjmp	.-146    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    72e8:	91 30       	cpi	r25, 0x01	; 1
    72ea:	51 f4       	brne	.+20     	; 0x7300 <_Z22Day_In_Bet_Schedullinghhh+0x296>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    72ec:	66 e1       	ldi	r22, 0x16	; 22
    72ee:	79 e1       	ldi	r23, 0x19	; 25
    72f0:	8f e6       	ldi	r24, 0x6F	; 111
    72f2:	96 e1       	ldi	r25, 0x16	; 22
    72f4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    72f8:	8f e6       	ldi	r24, 0x6F	; 111
    72fa:	96 e1       	ldi	r25, 0x16	; 22
    72fc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    7300:	d6 30       	cpi	r29, 0x06	; 6
    7302:	09 f0       	breq	.+2      	; 0x7306 <_Z22Day_In_Bet_Schedullinghhh+0x29c>
    7304:	33 c3       	rjmp	.+1638   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7306:	8f e1       	ldi	r24, 0x1F	; 31
    7308:	8f 19       	sub	r24, r15
    730a:	98 01       	movw	r18, r16
    730c:	28 0f       	add	r18, r24
    730e:	31 1d       	adc	r19, r1
    7310:	2a 15       	cp	r18, r10
    7312:	3b 05       	cpc	r19, r11
    7314:	0c f4       	brge	.+2      	; 0x7318 <_Z22Day_In_Bet_Schedullinghhh+0x2ae>
    7316:	29 c1       	rjmp	.+594    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7318:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    731c:	81 30       	cpi	r24, 0x01	; 1
    731e:	09 f0       	breq	.+2      	; 0x7322 <_Z22Day_In_Bet_Schedullinghhh+0x2b8>
    7320:	25 c3       	rjmp	.+1610   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7322:	69 e0       	ldi	r22, 0x09	; 9
    7324:	79 e1       	ldi	r23, 0x19	; 25
    7326:	97 cf       	rjmp	.-210    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7328:	91 30       	cpi	r25, 0x01	; 1
    732a:	51 f4       	brne	.+20     	; 0x7340 <_Z22Day_In_Bet_Schedullinghhh+0x2d6>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    732c:	6c ef       	ldi	r22, 0xFC	; 252
    732e:	78 e1       	ldi	r23, 0x18	; 24
    7330:	8f e6       	ldi	r24, 0x6F	; 111
    7332:	96 e1       	ldi	r25, 0x16	; 22
    7334:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7338:	8f e6       	ldi	r24, 0x6F	; 111
    733a:	96 e1       	ldi	r25, 0x16	; 22
    733c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    7340:	d8 30       	cpi	r29, 0x08	; 8
    7342:	09 f0       	breq	.+2      	; 0x7346 <_Z22Day_In_Bet_Schedullinghhh+0x2dc>
    7344:	13 c3       	rjmp	.+1574   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7346:	8f e1       	ldi	r24, 0x1F	; 31
    7348:	8f 19       	sub	r24, r15
    734a:	98 01       	movw	r18, r16
    734c:	28 0f       	add	r18, r24
    734e:	31 1d       	adc	r19, r1
    7350:	2a 15       	cp	r18, r10
    7352:	3b 05       	cpc	r19, r11
    7354:	0c f4       	brge	.+2      	; 0x7358 <_Z22Day_In_Bet_Schedullinghhh+0x2ee>
    7356:	09 c1       	rjmp	.+530    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7358:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    735c:	81 30       	cpi	r24, 0x01	; 1
    735e:	09 f0       	breq	.+2      	; 0x7362 <_Z22Day_In_Bet_Schedullinghhh+0x2f8>
    7360:	05 c3       	rjmp	.+1546   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    7362:	6f ee       	ldi	r22, 0xEF	; 239
    7364:	78 e1       	ldi	r23, 0x18	; 24
    7366:	77 cf       	rjmp	.-274    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7368:	91 30       	cpi	r25, 0x01	; 1
    736a:	51 f4       	brne	.+20     	; 0x7380 <_Z22Day_In_Bet_Schedullinghhh+0x316>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    736c:	62 ee       	ldi	r22, 0xE2	; 226
    736e:	78 e1       	ldi	r23, 0x18	; 24
    7370:	8f e6       	ldi	r24, 0x6F	; 111
    7372:	96 e1       	ldi	r25, 0x16	; 22
    7374:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7378:	8f e6       	ldi	r24, 0x6F	; 111
    737a:	96 e1       	ldi	r25, 0x16	; 22
    737c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    7380:	d9 30       	cpi	r29, 0x09	; 9
    7382:	09 f0       	breq	.+2      	; 0x7386 <_Z22Day_In_Bet_Schedullinghhh+0x31c>
    7384:	f3 c2       	rjmp	.+1510   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7386:	8f e1       	ldi	r24, 0x1F	; 31
    7388:	8f 19       	sub	r24, r15
    738a:	98 01       	movw	r18, r16
    738c:	28 0f       	add	r18, r24
    738e:	31 1d       	adc	r19, r1
    7390:	2a 15       	cp	r18, r10
    7392:	3b 05       	cpc	r19, r11
    7394:	0c f4       	brge	.+2      	; 0x7398 <_Z22Day_In_Bet_Schedullinghhh+0x32e>
    7396:	e9 c0       	rjmp	.+466    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7398:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    739c:	81 30       	cpi	r24, 0x01	; 1
    739e:	09 f0       	breq	.+2      	; 0x73a2 <_Z22Day_In_Bet_Schedullinghhh+0x338>
    73a0:	e5 c2       	rjmp	.+1482   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73a2:	65 ed       	ldi	r22, 0xD5	; 213
    73a4:	78 e1       	ldi	r23, 0x18	; 24
    73a6:	57 cf       	rjmp	.-338    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    73a8:	91 30       	cpi	r25, 0x01	; 1
    73aa:	51 f4       	brne	.+20     	; 0x73c0 <_Z22Day_In_Bet_Schedullinghhh+0x356>
					{
						_kSERAIL_MON_WRITE("day in btw 2");
    73ac:	68 ec       	ldi	r22, 0xC8	; 200
    73ae:	78 e1       	ldi	r23, 0x18	; 24
    73b0:	8f e6       	ldi	r24, 0x6F	; 111
    73b2:	96 e1       	ldi	r25, 0x16	; 22
    73b4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    73b8:	8f e6       	ldi	r24, 0x6F	; 111
    73ba:	96 e1       	ldi	r25, 0x16	; 22
    73bc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    73c0:	db 30       	cpi	r29, 0x0B	; 11
    73c2:	09 f0       	breq	.+2      	; 0x73c6 <_Z22Day_In_Bet_Schedullinghhh+0x35c>
    73c4:	d3 c2       	rjmp	.+1446   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    73c6:	8f e1       	ldi	r24, 0x1F	; 31
    73c8:	8f 19       	sub	r24, r15
    73ca:	98 01       	movw	r18, r16
    73cc:	28 0f       	add	r18, r24
    73ce:	31 1d       	adc	r19, r1
    73d0:	2a 15       	cp	r18, r10
    73d2:	3b 05       	cpc	r19, r11
    73d4:	0c f4       	brge	.+2      	; 0x73d8 <_Z22Day_In_Bet_Schedullinghhh+0x36e>
    73d6:	c9 c0       	rjmp	.+402    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    73d8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    73dc:	81 30       	cpi	r24, 0x01	; 1
    73de:	09 f0       	breq	.+2      	; 0x73e2 <_Z22Day_In_Bet_Schedullinghhh+0x378>
    73e0:	c5 c2       	rjmp	.+1418   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 3");
    73e2:	6b eb       	ldi	r22, 0xBB	; 187
    73e4:	78 e1       	ldi	r23, 0x18	; 24
    73e6:	37 cf       	rjmp	.-402    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    73e8:	8e 2d       	mov	r24, r14
    73ea:	83 70       	andi	r24, 0x03	; 3
    73ec:	01 f1       	breq	.+64     	; 0x742e <_Z22Day_In_Bet_Schedullinghhh+0x3c4>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    73ee:	91 30       	cpi	r25, 0x01	; 1
    73f0:	51 f4       	brne	.+20     	; 0x7406 <_Z22Day_In_Bet_Schedullinghhh+0x39c>
						{
							_kSERAIL_MON_WRITE("day in btw 4");
    73f2:	6e ea       	ldi	r22, 0xAE	; 174
    73f4:	78 e1       	ldi	r23, 0x18	; 24
    73f6:	8f e6       	ldi	r24, 0x6F	; 111
    73f8:	96 e1       	ldi	r25, 0x16	; 22
    73fa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    73fe:	8f e6       	ldi	r24, 0x6F	; 111
    7400:	96 e1       	ldi	r25, 0x16	; 22
    7402:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    7406:	d3 30       	cpi	r29, 0x03	; 3
    7408:	09 f0       	breq	.+2      	; 0x740c <_Z22Day_In_Bet_Schedullinghhh+0x3a2>
    740a:	b0 c2       	rjmp	.+1376   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    740c:	8c e1       	ldi	r24, 0x1C	; 28
    740e:	8f 19       	sub	r24, r15
    7410:	98 01       	movw	r18, r16
    7412:	28 0f       	add	r18, r24
    7414:	31 1d       	adc	r19, r1
    7416:	2a 15       	cp	r18, r10
    7418:	3b 05       	cpc	r19, r11
    741a:	0c f4       	brge	.+2      	; 0x741e <_Z22Day_In_Bet_Schedullinghhh+0x3b4>
    741c:	a6 c0       	rjmp	.+332    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    741e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7422:	81 30       	cpi	r24, 0x01	; 1
    7424:	09 f0       	breq	.+2      	; 0x7428 <_Z22Day_In_Bet_Schedullinghhh+0x3be>
    7426:	a2 c2       	rjmp	.+1348   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 5");
    7428:	61 ea       	ldi	r22, 0xA1	; 161
    742a:	78 e1       	ldi	r23, 0x18	; 24
    742c:	14 cf       	rjmp	.-472    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
							return 2;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    742e:	91 30       	cpi	r25, 0x01	; 1
    7430:	51 f4       	brne	.+20     	; 0x7446 <_Z22Day_In_Bet_Schedullinghhh+0x3dc>
						{
							_kSERAIL_MON_WRITE("day in btw 6");
    7432:	64 e9       	ldi	r22, 0x94	; 148
    7434:	78 e1       	ldi	r23, 0x18	; 24
    7436:	8f e6       	ldi	r24, 0x6F	; 111
    7438:	96 e1       	ldi	r25, 0x16	; 22
    743a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    743e:	8f e6       	ldi	r24, 0x6F	; 111
    7440:	96 e1       	ldi	r25, 0x16	; 22
    7442:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7446:	d3 30       	cpi	r29, 0x03	; 3
    7448:	09 f0       	breq	.+2      	; 0x744c <_Z22Day_In_Bet_Schedullinghhh+0x3e2>
    744a:	90 c2       	rjmp	.+1312   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    744c:	8d e1       	ldi	r24, 0x1D	; 29
    744e:	8f 19       	sub	r24, r15
    7450:	98 01       	movw	r18, r16
    7452:	28 0f       	add	r18, r24
    7454:	31 1d       	adc	r19, r1
    7456:	2a 15       	cp	r18, r10
    7458:	3b 05       	cpc	r19, r11
    745a:	0c f4       	brge	.+2      	; 0x745e <_Z22Day_In_Bet_Schedullinghhh+0x3f4>
    745c:	86 c0       	rjmp	.+268    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    745e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7462:	81 30       	cpi	r24, 0x01	; 1
    7464:	09 f0       	breq	.+2      	; 0x7468 <_Z22Day_In_Bet_Schedullinghhh+0x3fe>
    7466:	82 c2       	rjmp	.+1284   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
								{
									_kSERAIL_MON_WRITE("day in btw 7");
    7468:	67 e8       	ldi	r22, 0x87	; 135
    746a:	78 e1       	ldi	r23, 0x18	; 24
    746c:	f4 ce       	rjmp	.-536    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    746e:	91 30       	cpi	r25, 0x01	; 1
    7470:	51 f4       	brne	.+20     	; 0x7486 <_Z22Day_In_Bet_Schedullinghhh+0x41c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7472:	6a e7       	ldi	r22, 0x7A	; 122
    7474:	78 e1       	ldi	r23, 0x18	; 24
    7476:	8f e6       	ldi	r24, 0x6F	; 111
    7478:	96 e1       	ldi	r25, 0x16	; 22
    747a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    747e:	8f e6       	ldi	r24, 0x6F	; 111
    7480:	96 e1       	ldi	r25, 0x16	; 22
    7482:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7486:	d5 30       	cpi	r29, 0x05	; 5
    7488:	09 f0       	breq	.+2      	; 0x748c <_Z22Day_In_Bet_Schedullinghhh+0x422>
    748a:	70 c2       	rjmp	.+1248   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    748c:	8e e1       	ldi	r24, 0x1E	; 30
    748e:	8f 19       	sub	r24, r15
    7490:	98 01       	movw	r18, r16
    7492:	28 0f       	add	r18, r24
    7494:	31 1d       	adc	r19, r1
    7496:	2a 15       	cp	r18, r10
    7498:	3b 05       	cpc	r19, r11
    749a:	0c f4       	brge	.+2      	; 0x749e <_Z22Day_In_Bet_Schedullinghhh+0x434>
    749c:	66 c0       	rjmp	.+204    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    749e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    74a2:	81 30       	cpi	r24, 0x01	; 1
    74a4:	09 f0       	breq	.+2      	; 0x74a8 <_Z22Day_In_Bet_Schedullinghhh+0x43e>
    74a6:	62 c2       	rjmp	.+1220   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    74a8:	6d e6       	ldi	r22, 0x6D	; 109
    74aa:	78 e1       	ldi	r23, 0x18	; 24
    74ac:	d4 ce       	rjmp	.-600    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74ae:	91 30       	cpi	r25, 0x01	; 1
    74b0:	51 f4       	brne	.+20     	; 0x74c6 <_Z22Day_In_Bet_Schedullinghhh+0x45c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    74b2:	60 e6       	ldi	r22, 0x60	; 96
    74b4:	78 e1       	ldi	r23, 0x18	; 24
    74b6:	8f e6       	ldi	r24, 0x6F	; 111
    74b8:	96 e1       	ldi	r25, 0x16	; 22
    74ba:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74be:	8f e6       	ldi	r24, 0x6F	; 111
    74c0:	96 e1       	ldi	r25, 0x16	; 22
    74c2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    74c6:	d7 30       	cpi	r29, 0x07	; 7
    74c8:	09 f0       	breq	.+2      	; 0x74cc <_Z22Day_In_Bet_Schedullinghhh+0x462>
    74ca:	50 c2       	rjmp	.+1184   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    74cc:	8e e1       	ldi	r24, 0x1E	; 30
    74ce:	8f 19       	sub	r24, r15
    74d0:	98 01       	movw	r18, r16
    74d2:	28 0f       	add	r18, r24
    74d4:	31 1d       	adc	r19, r1
    74d6:	2a 15       	cp	r18, r10
    74d8:	3b 05       	cpc	r19, r11
    74da:	0c f4       	brge	.+2      	; 0x74de <_Z22Day_In_Bet_Schedullinghhh+0x474>
    74dc:	46 c0       	rjmp	.+140    	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    74de:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    74e2:	81 30       	cpi	r24, 0x01	; 1
    74e4:	09 f0       	breq	.+2      	; 0x74e8 <_Z22Day_In_Bet_Schedullinghhh+0x47e>
    74e6:	42 c2       	rjmp	.+1156   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    74e8:	63 e5       	ldi	r22, 0x53	; 83
    74ea:	78 e1       	ldi	r23, 0x18	; 24
    74ec:	b4 ce       	rjmp	.-664    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    74ee:	91 30       	cpi	r25, 0x01	; 1
    74f0:	51 f4       	brne	.+20     	; 0x7506 <_Z22Day_In_Bet_Schedullinghhh+0x49c>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    74f2:	66 e4       	ldi	r22, 0x46	; 70
    74f4:	78 e1       	ldi	r23, 0x18	; 24
    74f6:	8f e6       	ldi	r24, 0x6F	; 111
    74f8:	96 e1       	ldi	r25, 0x16	; 22
    74fa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    74fe:	8f e6       	ldi	r24, 0x6F	; 111
    7500:	96 e1       	ldi	r25, 0x16	; 22
    7502:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    7506:	da 30       	cpi	r29, 0x0A	; 10
    7508:	09 f0       	breq	.+2      	; 0x750c <_Z22Day_In_Bet_Schedullinghhh+0x4a2>
    750a:	30 c2       	rjmp	.+1120   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    750c:	8e e1       	ldi	r24, 0x1E	; 30
    750e:	8f 19       	sub	r24, r15
    7510:	98 01       	movw	r18, r16
    7512:	28 0f       	add	r18, r24
    7514:	31 1d       	adc	r19, r1
    7516:	2a 15       	cp	r18, r10
    7518:	3b 05       	cpc	r19, r11
    751a:	3c f1       	brlt	.+78     	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    751c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7520:	81 30       	cpi	r24, 0x01	; 1
    7522:	09 f0       	breq	.+2      	; 0x7526 <_Z22Day_In_Bet_Schedullinghhh+0x4bc>
    7524:	23 c2       	rjmp	.+1094   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7526:	69 e3       	ldi	r22, 0x39	; 57
    7528:	78 e1       	ldi	r23, 0x18	; 24
    752a:	95 ce       	rjmp	.-726    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
						return 2;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    752c:	91 30       	cpi	r25, 0x01	; 1
    752e:	51 f4       	brne	.+20     	; 0x7544 <_Z22Day_In_Bet_Schedullinghhh+0x4da>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7530:	6c e2       	ldi	r22, 0x2C	; 44
    7532:	78 e1       	ldi	r23, 0x18	; 24
    7534:	8f e6       	ldi	r24, 0x6F	; 111
    7536:	96 e1       	ldi	r25, 0x16	; 22
    7538:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    753c:	8f e6       	ldi	r24, 0x6F	; 111
    753e:	96 e1       	ldi	r25, 0x16	; 22
    7540:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    7544:	dc 30       	cpi	r29, 0x0C	; 12
    7546:	09 f0       	breq	.+2      	; 0x754a <_Z22Day_In_Bet_Schedullinghhh+0x4e0>
    7548:	11 c2       	rjmp	.+1058   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    754a:	8e e1       	ldi	r24, 0x1E	; 30
    754c:	8f 19       	sub	r24, r15
    754e:	98 01       	movw	r18, r16
    7550:	28 0f       	add	r18, r24
    7552:	31 1d       	adc	r19, r1
    7554:	2a 15       	cp	r18, r10
    7556:	3b 05       	cpc	r19, r11
    7558:	44 f0       	brlt	.+16     	; 0x756a <_Z22Day_In_Bet_Schedullinghhh+0x500>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    755a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    755e:	81 30       	cpi	r24, 0x01	; 1
    7560:	09 f0       	breq	.+2      	; 0x7564 <_Z22Day_In_Bet_Schedullinghhh+0x4fa>
    7562:	04 c2       	rjmp	.+1032   	; 0x796c <_Z22Day_In_Bet_Schedullinghhh+0x902>
							{
								_kSERAIL_MON_WRITE("day in btw 9");
    7564:	6f e1       	ldi	r22, 0x1F	; 31
    7566:	78 e1       	ldi	r23, 0x18	; 24
    7568:	76 ce       	rjmp	.-788    	; 0x7256 <_Z22Day_In_Bet_Schedullinghhh+0x1ec>
					{
						return 2;
					}
				}break;
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    756a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    756e:	81 30       	cpi	r24, 0x01	; 1
    7570:	21 f5       	brne	.+72     	; 0x75ba <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 10");
    7572:	61 e1       	ldi	r22, 0x11	; 17
    7574:	78 e1       	ldi	r23, 0x18	; 24
    7576:	04 c0       	rjmp	.+8      	; 0x7580 <_Z22Day_In_Bet_Schedullinghhh+0x516>
				_kSERIAL_MON_CLEAR();
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7578:	91 30       	cpi	r25, 0x01	; 1
    757a:	f9 f4       	brne	.+62     	; 0x75ba <_Z22Day_In_Bet_Schedullinghhh+0x550>
			{
				_kSERAIL_MON_WRITE("day in btw 11");
    757c:	63 e0       	ldi	r22, 0x03	; 3
    757e:	78 e1       	ldi	r23, 0x18	; 24
    7580:	8f e6       	ldi	r24, 0x6F	; 111
    7582:	96 e1       	ldi	r25, 0x16	; 22
    7584:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7588:	8f e6       	ldi	r24, 0x6F	; 111
    758a:	96 e1       	ldi	r25, 0x16	; 22
    758c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	
	Days_In_Between_Schedules = Days_In_Between_Schedules - 1;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7590:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7594:	81 30       	cpi	r24, 0x01	; 1
    7596:	89 f4       	brne	.+34     	; 0x75ba <_Z22Day_In_Bet_Schedullinghhh+0x550>
	{
		_kSERAIL_MON_WRITE("No of days in bet 1: ");
    7598:	6d ee       	ldi	r22, 0xED	; 237
    759a:	77 e1       	ldi	r23, 0x17	; 23
    759c:	8f e6       	ldi	r24, 0x6F	; 111
    759e:	96 e1       	ldi	r25, 0x16	; 22
    75a0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM( Days_In_Between_Schedules);
    75a4:	4a e0       	ldi	r20, 0x0A	; 10
    75a6:	50 e0       	ldi	r21, 0x00	; 0
    75a8:	6c 2d       	mov	r22, r12
    75aa:	8f e6       	ldi	r24, 0x6F	; 111
    75ac:	96 e1       	ldi	r25, 0x16	; 22
    75ae:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    75b2:	8f e6       	ldi	r24, 0x6F	; 111
    75b4:	96 e1       	ldi	r25, 0x16	; 22
    75b6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
    75ba:	d1 2c       	mov	r13, r1
    75bc:	8c 0c       	add	r8, r12
    75be:	9d 1c       	adc	r9, r13
    75c0:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    75c4:	08 15       	cp	r16, r8
    75c6:	19 05       	cpc	r17, r9
    75c8:	4c f0       	brlt	.+18     	; 0x75dc <_Z22Day_In_Bet_Schedullinghhh+0x572>
    75ca:	d7 11       	cpse	r29, r7
    75cc:	0a c0       	rjmp	.+20     	; 0x75e2 <_Z22Day_In_Bet_Schedullinghhh+0x578>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    75ce:	c1 30       	cpi	r28, 0x01	; 1
    75d0:	11 f0       	breq	.+4      	; 0x75d6 <_Z22Day_In_Bet_Schedullinghhh+0x56c>
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
			_kSERIAL_MON_CLEAR();
		}
		return 1;
    75d2:	c1 e0       	ldi	r28, 0x01	; 1
    75d4:	ce c1       	rjmp	.+924    	; 0x7972 <_Z22Day_In_Bet_Schedullinghhh+0x908>
	
	if((last_schedule_date + Days_In_Between_Schedules) <= date && last_schedule_month == month)
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("day in btw 1.1");
    75d6:	6e ed       	ldi	r22, 0xDE	; 222
    75d8:	77 e1       	ldi	r23, 0x17	; 23
    75da:	84 c1       	rjmp	.+776    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
		}
		return 1;
	}
	else
	{
		if(last_schedule_month != month)
    75dc:	d7 15       	cp	r29, r7
    75de:	09 f4       	brne	.+2      	; 0x75e2 <_Z22Day_In_Bet_Schedullinghhh+0x578>
    75e0:	b7 c1       	rjmp	.+878    	; 0x7950 <_Z22Day_In_Bet_Schedullinghhh+0x8e6>
		{
			switch(last_schedule_month)
    75e2:	47 2d       	mov	r20, r7
    75e4:	50 e0       	ldi	r21, 0x00	; 0
    75e6:	fa 01       	movw	r30, r20
    75e8:	31 97       	sbiw	r30, 0x01	; 1
    75ea:	ec 30       	cpi	r30, 0x0C	; 12
    75ec:	f1 05       	cpc	r31, r1
    75ee:	08 f0       	brcs	.+2      	; 0x75f2 <_Z22Day_In_Bet_Schedullinghhh+0x588>
    75f0:	a0 c1       	rjmp	.+832    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
    75f2:	88 27       	eor	r24, r24
    75f4:	eb 53       	subi	r30, 0x3B	; 59
    75f6:	ff 4f       	sbci	r31, 0xFF	; 255
    75f8:	8f 4f       	sbci	r24, 0xFF	; 255
    75fa:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
			{
				case _eDEC: // current month is jan
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    75fe:	c1 30       	cpi	r28, 0x01	; 1
    7600:	51 f4       	brne	.+20     	; 0x7616 <_Z22Day_In_Bet_Schedullinghhh+0x5ac>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7602:	6f ec       	ldi	r22, 0xCF	; 207
    7604:	77 e1       	ldi	r23, 0x17	; 23
    7606:	8f e6       	ldi	r24, 0x6F	; 111
    7608:	96 e1       	ldi	r25, 0x16	; 22
    760a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    760e:	8f e6       	ldi	r24, 0x6F	; 111
    7610:	96 e1       	ldi	r25, 0x16	; 22
    7612:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eJAN)
    7616:	d1 30       	cpi	r29, 0x01	; 1
    7618:	e1 f6       	brne	.-72     	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    761a:	8f e1       	ldi	r24, 0x1F	; 31
    761c:	8f 19       	sub	r24, r15
    761e:	08 0f       	add	r16, r24
    7620:	11 1d       	adc	r17, r1
    7622:	0c 15       	cp	r16, r12
    7624:	1d 05       	cpc	r17, r13
    7626:	0c f4       	brge	.+2      	; 0x762a <_Z22Day_In_Bet_Schedullinghhh+0x5c0>
    7628:	84 c1       	rjmp	.+776    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    762a:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    762e:	c1 30       	cpi	r28, 0x01	; 1
    7630:	81 f6       	brne	.-96     	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7632:	60 ec       	ldi	r22, 0xC0	; 192
    7634:	77 e1       	ldi	r23, 0x17	; 23
    7636:	56 c1       	rjmp	.+684    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJAN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7638:	c1 30       	cpi	r28, 0x01	; 1
    763a:	51 f4       	brne	.+20     	; 0x7650 <_Z22Day_In_Bet_Schedullinghhh+0x5e6>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    763c:	61 eb       	ldi	r22, 0xB1	; 177
    763e:	77 e1       	ldi	r23, 0x17	; 23
    7640:	8f e6       	ldi	r24, 0x6F	; 111
    7642:	96 e1       	ldi	r25, 0x16	; 22
    7644:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7648:	8f e6       	ldi	r24, 0x6F	; 111
    764a:	96 e1       	ldi	r25, 0x16	; 22
    764c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eFEB)
    7650:	d2 30       	cpi	r29, 0x02	; 2
    7652:	09 f0       	breq	.+2      	; 0x7656 <_Z22Day_In_Bet_Schedullinghhh+0x5ec>
    7654:	be cf       	rjmp	.-132    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7656:	8f e1       	ldi	r24, 0x1F	; 31
    7658:	8f 19       	sub	r24, r15
    765a:	08 0f       	add	r16, r24
    765c:	11 1d       	adc	r17, r1
    765e:	0c 15       	cp	r16, r12
    7660:	1d 05       	cpc	r17, r13
    7662:	0c f4       	brge	.+2      	; 0x7666 <_Z22Day_In_Bet_Schedullinghhh+0x5fc>
    7664:	66 c1       	rjmp	.+716    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7666:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    766a:	c1 30       	cpi	r28, 0x01	; 1
    766c:	09 f0       	breq	.+2      	; 0x7670 <_Z22Day_In_Bet_Schedullinghhh+0x606>
    766e:	b1 cf       	rjmp	.-158    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7670:	62 ea       	ldi	r22, 0xA2	; 162
    7672:	77 e1       	ldi	r23, 0x17	; 23
    7674:	37 c1       	rjmp	.+622    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMARCH:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7676:	c1 30       	cpi	r28, 0x01	; 1
    7678:	51 f4       	brne	.+20     	; 0x768e <_Z22Day_In_Bet_Schedullinghhh+0x624>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    767a:	63 e9       	ldi	r22, 0x93	; 147
    767c:	77 e1       	ldi	r23, 0x17	; 23
    767e:	8f e6       	ldi	r24, 0x6F	; 111
    7680:	96 e1       	ldi	r25, 0x16	; 22
    7682:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7686:	8f e6       	ldi	r24, 0x6F	; 111
    7688:	96 e1       	ldi	r25, 0x16	; 22
    768a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAPR)
    768e:	d4 30       	cpi	r29, 0x04	; 4
    7690:	09 f0       	breq	.+2      	; 0x7694 <_Z22Day_In_Bet_Schedullinghhh+0x62a>
    7692:	9f cf       	rjmp	.-194    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7694:	8f e1       	ldi	r24, 0x1F	; 31
    7696:	8f 19       	sub	r24, r15
    7698:	08 0f       	add	r16, r24
    769a:	11 1d       	adc	r17, r1
    769c:	0c 15       	cp	r16, r12
    769e:	1d 05       	cpc	r17, r13
    76a0:	0c f4       	brge	.+2      	; 0x76a4 <_Z22Day_In_Bet_Schedullinghhh+0x63a>
    76a2:	47 c1       	rjmp	.+654    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76a4:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    76a8:	c1 30       	cpi	r28, 0x01	; 1
    76aa:	09 f0       	breq	.+2      	; 0x76ae <_Z22Day_In_Bet_Schedullinghhh+0x644>
    76ac:	92 cf       	rjmp	.-220    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    76ae:	64 e8       	ldi	r22, 0x84	; 132
    76b0:	77 e1       	ldi	r23, 0x17	; 23
    76b2:	18 c1       	rjmp	.+560    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eMAY:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    76b4:	c1 30       	cpi	r28, 0x01	; 1
    76b6:	51 f4       	brne	.+20     	; 0x76cc <_Z22Day_In_Bet_Schedullinghhh+0x662>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    76b8:	65 e7       	ldi	r22, 0x75	; 117
    76ba:	77 e1       	ldi	r23, 0x17	; 23
    76bc:	8f e6       	ldi	r24, 0x6F	; 111
    76be:	96 e1       	ldi	r25, 0x16	; 22
    76c0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    76c4:	8f e6       	ldi	r24, 0x6F	; 111
    76c6:	96 e1       	ldi	r25, 0x16	; 22
    76c8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eJUN)
    76cc:	d6 30       	cpi	r29, 0x06	; 6
    76ce:	09 f0       	breq	.+2      	; 0x76d2 <_Z22Day_In_Bet_Schedullinghhh+0x668>
    76d0:	80 cf       	rjmp	.-256    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    76d2:	8f e1       	ldi	r24, 0x1F	; 31
    76d4:	8f 19       	sub	r24, r15
    76d6:	08 0f       	add	r16, r24
    76d8:	11 1d       	adc	r17, r1
    76da:	0c 15       	cp	r16, r12
    76dc:	1d 05       	cpc	r17, r13
    76de:	0c f4       	brge	.+2      	; 0x76e2 <_Z22Day_In_Bet_Schedullinghhh+0x678>
    76e0:	28 c1       	rjmp	.+592    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    76e2:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    76e6:	c1 30       	cpi	r28, 0x01	; 1
    76e8:	09 f0       	breq	.+2      	; 0x76ec <_Z22Day_In_Bet_Schedullinghhh+0x682>
    76ea:	73 cf       	rjmp	.-282    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    76ec:	66 e6       	ldi	r22, 0x66	; 102
    76ee:	77 e1       	ldi	r23, 0x17	; 23
    76f0:	f9 c0       	rjmp	.+498    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUL:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    76f2:	c1 30       	cpi	r28, 0x01	; 1
    76f4:	51 f4       	brne	.+20     	; 0x770a <_Z22Day_In_Bet_Schedullinghhh+0x6a0>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    76f6:	67 e5       	ldi	r22, 0x57	; 87
    76f8:	77 e1       	ldi	r23, 0x17	; 23
    76fa:	8f e6       	ldi	r24, 0x6F	; 111
    76fc:	96 e1       	ldi	r25, 0x16	; 22
    76fe:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7702:	8f e6       	ldi	r24, 0x6F	; 111
    7704:	96 e1       	ldi	r25, 0x16	; 22
    7706:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eAUG)
    770a:	d8 30       	cpi	r29, 0x08	; 8
    770c:	09 f0       	breq	.+2      	; 0x7710 <_Z22Day_In_Bet_Schedullinghhh+0x6a6>
    770e:	61 cf       	rjmp	.-318    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days) )
    7710:	8f e1       	ldi	r24, 0x1F	; 31
    7712:	8f 19       	sub	r24, r15
    7714:	08 0f       	add	r16, r24
    7716:	11 1d       	adc	r17, r1
    7718:	0c 15       	cp	r16, r12
    771a:	1d 05       	cpc	r17, r13
    771c:	0c f4       	brge	.+2      	; 0x7720 <_Z22Day_In_Bet_Schedullinghhh+0x6b6>
    771e:	09 c1       	rjmp	.+530    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7720:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7724:	c1 30       	cpi	r28, 0x01	; 1
    7726:	09 f0       	breq	.+2      	; 0x772a <_Z22Day_In_Bet_Schedullinghhh+0x6c0>
    7728:	54 cf       	rjmp	.-344    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    772a:	68 e4       	ldi	r22, 0x48	; 72
    772c:	77 e1       	ldi	r23, 0x17	; 23
    772e:	da c0       	rjmp	.+436    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAUG:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7730:	c1 30       	cpi	r28, 0x01	; 1
    7732:	51 f4       	brne	.+20     	; 0x7748 <_Z22Day_In_Bet_Schedullinghhh+0x6de>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7734:	69 e3       	ldi	r22, 0x39	; 57
    7736:	77 e1       	ldi	r23, 0x17	; 23
    7738:	8f e6       	ldi	r24, 0x6F	; 111
    773a:	96 e1       	ldi	r25, 0x16	; 22
    773c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7740:	8f e6       	ldi	r24, 0x6F	; 111
    7742:	96 e1       	ldi	r25, 0x16	; 22
    7744:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					
					if(month == _eSEP)
    7748:	d9 30       	cpi	r29, 0x09	; 9
    774a:	09 f0       	breq	.+2      	; 0x774e <_Z22Day_In_Bet_Schedullinghhh+0x6e4>
    774c:	42 cf       	rjmp	.-380    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    774e:	8f e1       	ldi	r24, 0x1F	; 31
    7750:	8f 19       	sub	r24, r15
    7752:	08 0f       	add	r16, r24
    7754:	11 1d       	adc	r17, r1
    7756:	0c 15       	cp	r16, r12
    7758:	1d 05       	cpc	r17, r13
    775a:	0c f4       	brge	.+2      	; 0x775e <_Z22Day_In_Bet_Schedullinghhh+0x6f4>
    775c:	ea c0       	rjmp	.+468    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    775e:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7762:	c1 30       	cpi	r28, 0x01	; 1
    7764:	09 f0       	breq	.+2      	; 0x7768 <_Z22Day_In_Bet_Schedullinghhh+0x6fe>
    7766:	35 cf       	rjmp	.-406    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    7768:	6a e2       	ldi	r22, 0x2A	; 42
    776a:	77 e1       	ldi	r23, 0x17	; 23
    776c:	bb c0       	rjmp	.+374    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eOCT:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    776e:	c1 30       	cpi	r28, 0x01	; 1
    7770:	51 f4       	brne	.+20     	; 0x7786 <_Z22Day_In_Bet_Schedullinghhh+0x71c>
					{
						_kSERAIL_MON_WRITE("day in btw 2.1");
    7772:	6b e1       	ldi	r22, 0x1B	; 27
    7774:	77 e1       	ldi	r23, 0x17	; 23
    7776:	8f e6       	ldi	r24, 0x6F	; 111
    7778:	96 e1       	ldi	r25, 0x16	; 22
    777a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    777e:	8f e6       	ldi	r24, 0x6F	; 111
    7780:	96 e1       	ldi	r25, 0x16	; 22
    7782:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 31 - last_schedule_date;
					if(month == _eNOV)
    7786:	db 30       	cpi	r29, 0x0B	; 11
    7788:	09 f0       	breq	.+2      	; 0x778c <_Z22Day_In_Bet_Schedullinghhh+0x722>
    778a:	23 cf       	rjmp	.-442    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    778c:	8f e1       	ldi	r24, 0x1F	; 31
    778e:	8f 19       	sub	r24, r15
    7790:	08 0f       	add	r16, r24
    7792:	11 1d       	adc	r17, r1
    7794:	0c 15       	cp	r16, r12
    7796:	1d 05       	cpc	r17, r13
    7798:	0c f4       	brge	.+2      	; 0x779c <_Z22Day_In_Bet_Schedullinghhh+0x732>
    779a:	cb c0       	rjmp	.+406    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    779c:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    77a0:	c1 30       	cpi	r28, 0x01	; 1
    77a2:	09 f0       	breq	.+2      	; 0x77a6 <_Z22Day_In_Bet_Schedullinghhh+0x73c>
    77a4:	16 cf       	rjmp	.-468    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 3.1");
    77a6:	6c e0       	ldi	r22, 0x0C	; 12
    77a8:	77 e1       	ldi	r23, 0x17	; 23
    77aa:	9c c0       	rjmp	.+312    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
				}break;
				
				
				case _eFEB:   // current month mar
				{
					if(year%4)
    77ac:	8e 2d       	mov	r24, r14
    77ae:	83 70       	andi	r24, 0x03	; 3
    77b0:	f9 f0       	breq	.+62     	; 0x77f0 <_Z22Day_In_Bet_Schedullinghhh+0x786>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    77b2:	c1 30       	cpi	r28, 0x01	; 1
    77b4:	51 f4       	brne	.+20     	; 0x77ca <_Z22Day_In_Bet_Schedullinghhh+0x760>
						{
							_kSERAIL_MON_WRITE("day in btw 4.1");
    77b6:	6d ef       	ldi	r22, 0xFD	; 253
    77b8:	76 e1       	ldi	r23, 0x16	; 22
    77ba:	8f e6       	ldi	r24, 0x6F	; 111
    77bc:	96 e1       	ldi	r25, 0x16	; 22
    77be:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    77c2:	8f e6       	ldi	r24, 0x6F	; 111
    77c4:	96 e1       	ldi	r25, 0x16	; 22
    77c6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						calculate_days = 28 - last_schedule_date;
						
						if(month == _eMARCH)
    77ca:	d3 30       	cpi	r29, 0x03	; 3
    77cc:	09 f0       	breq	.+2      	; 0x77d0 <_Z22Day_In_Bet_Schedullinghhh+0x766>
    77ce:	01 cf       	rjmp	.-510    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    77d0:	8c e1       	ldi	r24, 0x1C	; 28
    77d2:	8f 19       	sub	r24, r15
    77d4:	08 0f       	add	r16, r24
    77d6:	11 1d       	adc	r17, r1
    77d8:	0c 15       	cp	r16, r12
    77da:	1d 05       	cpc	r17, r13
    77dc:	0c f4       	brge	.+2      	; 0x77e0 <_Z22Day_In_Bet_Schedullinghhh+0x776>
    77de:	a9 c0       	rjmp	.+338    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    77e0:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    77e4:	c1 30       	cpi	r28, 0x01	; 1
    77e6:	09 f0       	breq	.+2      	; 0x77ea <_Z22Day_In_Bet_Schedullinghhh+0x780>
    77e8:	f4 ce       	rjmp	.-536    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 5.1");
    77ea:	6e ee       	ldi	r22, 0xEE	; 238
    77ec:	76 e1       	ldi	r23, 0x16	; 22
    77ee:	7a c0       	rjmp	.+244    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
							return 1;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    77f0:	c1 30       	cpi	r28, 0x01	; 1
    77f2:	51 f4       	brne	.+20     	; 0x7808 <_Z22Day_In_Bet_Schedullinghhh+0x79e>
						{
							_kSERAIL_MON_WRITE("day in btw 6.1");
    77f4:	6f ed       	ldi	r22, 0xDF	; 223
    77f6:	76 e1       	ldi	r23, 0x16	; 22
    77f8:	8f e6       	ldi	r24, 0x6F	; 111
    77fa:	96 e1       	ldi	r25, 0x16	; 22
    77fc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7800:	8f e6       	ldi	r24, 0x6F	; 111
    7802:	96 e1       	ldi	r25, 0x16	; 22
    7804:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						calculate_days = 29 - last_schedule_date;
						if(month == _eMARCH)
    7808:	d3 30       	cpi	r29, 0x03	; 3
    780a:	09 f0       	breq	.+2      	; 0x780e <_Z22Day_In_Bet_Schedullinghhh+0x7a4>
    780c:	e2 ce       	rjmp	.-572    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
						{
							if(Days_In_Between_Schedules <= (date + calculate_days))
    780e:	8d e1       	ldi	r24, 0x1D	; 29
    7810:	8f 19       	sub	r24, r15
    7812:	08 0f       	add	r16, r24
    7814:	11 1d       	adc	r17, r1
    7816:	0c 15       	cp	r16, r12
    7818:	1d 05       	cpc	r17, r13
    781a:	0c f4       	brge	.+2      	; 0x781e <_Z22Day_In_Bet_Schedullinghhh+0x7b4>
    781c:	8a c0       	rjmp	.+276    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    781e:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7822:	c1 30       	cpi	r28, 0x01	; 1
    7824:	09 f0       	breq	.+2      	; 0x7828 <_Z22Day_In_Bet_Schedullinghhh+0x7be>
    7826:	d5 ce       	rjmp	.-598    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
								{
									_kSERAIL_MON_WRITE("day in btw 7.1");
    7828:	60 ed       	ldi	r22, 0xD0	; 208
    782a:	76 e1       	ldi	r23, 0x16	; 22
    782c:	5b c0       	rjmp	.+182    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eAPR:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    782e:	c1 30       	cpi	r28, 0x01	; 1
    7830:	51 f4       	brne	.+20     	; 0x7846 <_Z22Day_In_Bet_Schedullinghhh+0x7dc>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    7832:	61 ec       	ldi	r22, 0xC1	; 193
    7834:	76 e1       	ldi	r23, 0x16	; 22
    7836:	8f e6       	ldi	r24, 0x6F	; 111
    7838:	96 e1       	ldi	r25, 0x16	; 22
    783a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    783e:	8f e6       	ldi	r24, 0x6F	; 111
    7840:	96 e1       	ldi	r25, 0x16	; 22
    7842:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eMAY)
    7846:	d5 30       	cpi	r29, 0x05	; 5
    7848:	09 f0       	breq	.+2      	; 0x784c <_Z22Day_In_Bet_Schedullinghhh+0x7e2>
    784a:	c3 ce       	rjmp	.-634    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    784c:	8e e1       	ldi	r24, 0x1E	; 30
    784e:	8f 19       	sub	r24, r15
    7850:	08 0f       	add	r16, r24
    7852:	11 1d       	adc	r17, r1
    7854:	0c 15       	cp	r16, r12
    7856:	1d 05       	cpc	r17, r13
    7858:	0c f4       	brge	.+2      	; 0x785c <_Z22Day_In_Bet_Schedullinghhh+0x7f2>
    785a:	6b c0       	rjmp	.+214    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    785c:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7860:	c1 30       	cpi	r28, 0x01	; 1
    7862:	09 f0       	breq	.+2      	; 0x7866 <_Z22Day_In_Bet_Schedullinghhh+0x7fc>
    7864:	b6 ce       	rjmp	.-660    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    7866:	62 eb       	ldi	r22, 0xB2	; 178
    7868:	76 e1       	ldi	r23, 0x16	; 22
    786a:	3c c0       	rjmp	.+120    	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eJUN:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    786c:	c1 30       	cpi	r28, 0x01	; 1
    786e:	51 f4       	brne	.+20     	; 0x7884 <_Z22Day_In_Bet_Schedullinghhh+0x81a>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    7870:	65 ea       	ldi	r22, 0xA5	; 165
    7872:	76 e1       	ldi	r23, 0x16	; 22
    7874:	8f e6       	ldi	r24, 0x6F	; 111
    7876:	96 e1       	ldi	r25, 0x16	; 22
    7878:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    787c:	8f e6       	ldi	r24, 0x6F	; 111
    787e:	96 e1       	ldi	r25, 0x16	; 22
    7880:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if(month == _eJUL)
    7884:	d7 30       	cpi	r29, 0x07	; 7
    7886:	09 f0       	breq	.+2      	; 0x788a <_Z22Day_In_Bet_Schedullinghhh+0x820>
    7888:	a4 ce       	rjmp	.-696    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    788a:	8e e1       	ldi	r24, 0x1E	; 30
    788c:	8f 19       	sub	r24, r15
    788e:	08 0f       	add	r16, r24
    7890:	11 1d       	adc	r17, r1
    7892:	0c 15       	cp	r16, r12
    7894:	1d 05       	cpc	r17, r13
    7896:	0c f4       	brge	.+2      	; 0x789a <_Z22Day_In_Bet_Schedullinghhh+0x830>
    7898:	4c c0       	rjmp	.+152    	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    789a:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    789e:	c1 30       	cpi	r28, 0x01	; 1
    78a0:	09 f0       	breq	.+2      	; 0x78a4 <_Z22Day_In_Bet_Schedullinghhh+0x83a>
    78a2:	97 ce       	rjmp	.-722    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    78a4:	66 e9       	ldi	r22, 0x96	; 150
    78a6:	76 e1       	ldi	r23, 0x16	; 22
    78a8:	1d c0       	rjmp	.+58     	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					}
				}break;
				
				case _eSEP:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    78aa:	c1 30       	cpi	r28, 0x01	; 1
    78ac:	51 f4       	brne	.+20     	; 0x78c2 <_Z22Day_In_Bet_Schedullinghhh+0x858>
					{
						_kSERAIL_MON_WRITE("day in btw 8");
    78ae:	69 e8       	ldi	r22, 0x89	; 137
    78b0:	76 e1       	ldi	r23, 0x16	; 22
    78b2:	8f e6       	ldi	r24, 0x6F	; 111
    78b4:	96 e1       	ldi	r25, 0x16	; 22
    78b6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    78ba:	8f e6       	ldi	r24, 0x6F	; 111
    78bc:	96 e1       	ldi	r25, 0x16	; 22
    78be:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					if(month == _eOCT)
    78c2:	da 30       	cpi	r29, 0x0A	; 10
    78c4:	09 f0       	breq	.+2      	; 0x78c8 <_Z22Day_In_Bet_Schedullinghhh+0x85e>
    78c6:	85 ce       	rjmp	.-758    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    78c8:	8e e1       	ldi	r24, 0x1E	; 30
    78ca:	8f 19       	sub	r24, r15
    78cc:	08 0f       	add	r16, r24
    78ce:	11 1d       	adc	r17, r1
    78d0:	0c 15       	cp	r16, r12
    78d2:	1d 05       	cpc	r17, r13
    78d4:	74 f1       	brlt	.+92     	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    78d6:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    78da:	c1 30       	cpi	r28, 0x01	; 1
    78dc:	09 f0       	breq	.+2      	; 0x78e0 <_Z22Day_In_Bet_Schedullinghhh+0x876>
    78de:	79 ce       	rjmp	.-782    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    78e0:	6a e7       	ldi	r22, 0x7A	; 122
    78e2:	76 e1       	ldi	r23, 0x16	; 22
    78e4:	8f e6       	ldi	r24, 0x6F	; 111
    78e6:	96 e1       	ldi	r25, 0x16	; 22
    78e8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    78ec:	8f e6       	ldi	r24, 0x6F	; 111
    78ee:	96 e1       	ldi	r25, 0x16	; 22
    78f0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    78f4:	3e c0       	rjmp	.+124    	; 0x7972 <_Z22Day_In_Bet_Schedullinghhh+0x908>
						return 1;
					}
				}break;
				case _eNOV:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    78f6:	c1 30       	cpi	r28, 0x01	; 1
    78f8:	51 f4       	brne	.+20     	; 0x790e <_Z22Day_In_Bet_Schedullinghhh+0x8a4>
					{
						_kSERAIL_MON_WRITE("day in btw 8.1");
    78fa:	6b e6       	ldi	r22, 0x6B	; 107
    78fc:	76 e1       	ldi	r23, 0x16	; 22
    78fe:	8f e6       	ldi	r24, 0x6F	; 111
    7900:	96 e1       	ldi	r25, 0x16	; 22
    7902:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    7906:	8f e6       	ldi	r24, 0x6F	; 111
    7908:	96 e1       	ldi	r25, 0x16	; 22
    790a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					calculate_days = 30 - last_schedule_date;
					
					if( month == _eDEC)
    790e:	dc 30       	cpi	r29, 0x0C	; 12
    7910:	09 f0       	breq	.+2      	; 0x7914 <_Z22Day_In_Bet_Schedullinghhh+0x8aa>
    7912:	5f ce       	rjmp	.-834    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
					{
						if( Days_In_Between_Schedules <= (date + calculate_days))
    7914:	8e e1       	ldi	r24, 0x1E	; 30
    7916:	8f 19       	sub	r24, r15
    7918:	08 0f       	add	r16, r24
    791a:	11 1d       	adc	r17, r1
    791c:	0c 15       	cp	r16, r12
    791e:	1d 05       	cpc	r17, r13
    7920:	44 f0       	brlt	.+16     	; 0x7932 <_Z22Day_In_Bet_Schedullinghhh+0x8c8>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    7922:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7926:	c1 30       	cpi	r28, 0x01	; 1
    7928:	09 f0       	breq	.+2      	; 0x792c <_Z22Day_In_Bet_Schedullinghhh+0x8c2>
    792a:	53 ce       	rjmp	.-858    	; 0x75d2 <_Z22Day_In_Bet_Schedullinghhh+0x568>
							{
								_kSERAIL_MON_WRITE("day in btw 9.1");
    792c:	6c e5       	ldi	r22, 0x5C	; 92
    792e:	76 e1       	ldi	r23, 0x16	; 22
    7930:	d9 cf       	rjmp	.-78     	; 0x78e4 <_Z22Day_In_Bet_Schedullinghhh+0x87a>
					{
						return 1;
					}
				}break;
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7932:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7936:	81 30       	cpi	r24, 0x01	; 1
    7938:	c1 f4       	brne	.+48     	; 0x796a <_Z22Day_In_Bet_Schedullinghhh+0x900>
			{
				_kSERAIL_MON_WRITE("day in btw 10.1");
    793a:	6c e4       	ldi	r22, 0x4C	; 76
    793c:	76 e1       	ldi	r23, 0x16	; 22
    793e:	8f e6       	ldi	r24, 0x6F	; 111
    7940:	96 e1       	ldi	r25, 0x16	; 22
    7942:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7946:	8f e6       	ldi	r24, 0x6F	; 111
    7948:	96 e1       	ldi	r25, 0x16	; 22
    794a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    794e:	0d c0       	rjmp	.+26     	; 0x796a <_Z22Day_In_Bet_Schedullinghhh+0x900>
			}
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    7950:	c1 30       	cpi	r28, 0x01	; 1
    7952:	71 f4       	brne	.+28     	; 0x7970 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
    7954:	6c e3       	ldi	r22, 0x3C	; 60
    7956:	76 e1       	ldi	r23, 0x16	; 22
    7958:	8f e6       	ldi	r24, 0x6F	; 111
    795a:	96 e1       	ldi	r25, 0x16	; 22
    795c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    7960:	8f e6       	ldi	r24, 0x6F	; 111
    7962:	96 e1       	ldi	r25, 0x16	; 22
    7964:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    7968:	03 c0       	rjmp	.+6      	; 0x7970 <_Z22Day_In_Bet_Schedullinghhh+0x906>
			return 0;
		}
		
	}
	
}		
    796a:	04 c0       	rjmp	.+8      	; 0x7974 <_Z22Day_In_Bet_Schedullinghhh+0x90a>
		{
			_kSERAIL_MON_WRITE("day in btw 1");
			_kSERIAL_MON_CLEAR();
		}
		
		return 2;
    796c:	c2 e0       	ldi	r28, 0x02	; 2
    796e:	01 c0       	rjmp	.+2      	; 0x7972 <_Z22Day_In_Bet_Schedullinghhh+0x908>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("day in btw 11.1");
				_kSERIAL_MON_CLEAR();
			}
			return 0;
    7970:	c0 e0       	ldi	r28, 0x00	; 0
    7972:	8c 2f       	mov	r24, r28
		}
		
	}
	
}		
    7974:	df 91       	pop	r29
    7976:	cf 91       	pop	r28
    7978:	1f 91       	pop	r17
    797a:	0f 91       	pop	r16
    797c:	ff 90       	pop	r15
    797e:	ef 90       	pop	r14
    7980:	df 90       	pop	r13
    7982:	cf 90       	pop	r12
    7984:	bf 90       	pop	r11
    7986:	af 90       	pop	r10
    7988:	9f 90       	pop	r9
    798a:	8f 90       	pop	r8
    798c:	7f 90       	pop	r7
    798e:	08 95       	ret

00007990 <_Z28Turn_Off_All_Tank_For_Safetyv>:
	
	return 1;
}

char Turn_Off_All_Tank_For_Safety(void)
{
    7990:	8f 92       	push	r8
    7992:	9f 92       	push	r9
    7994:	af 92       	push	r10
    7996:	bf 92       	push	r11
    7998:	cf 92       	push	r12
    799a:	df 92       	push	r13
    799c:	ef 92       	push	r14
    799e:	ff 92       	push	r15
    79a0:	0f 93       	push	r16
    79a2:	1f 93       	push	r17
    79a4:	cf 93       	push	r28
    79a6:	df 93       	push	r29
    79a8:	cd b7       	in	r28, 0x3d	; 61
    79aa:	de b7       	in	r29, 0x3e	; 62
    79ac:	aa 97       	sbiw	r28, 0x2a	; 42
    79ae:	0f b6       	in	r0, 0x3f	; 63
    79b0:	f8 94       	cli
    79b2:	de bf       	out	0x3e, r29	; 62
    79b4:	0f be       	out	0x3f, r0	; 63
    79b6:	cd bf       	out	0x3d, r28	; 61
	unsigned char tank_number_list[_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK], tank_number;
	
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
    79b8:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    79bc:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    79c0:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
    79c4:	9e 01       	movw	r18, r28
    79c6:	2f 5f       	subi	r18, 0xFF	; 255
    79c8:	3f 4f       	sbci	r19, 0xFF	; 255
    79ca:	69 01       	movw	r12, r18
    79cc:	ce 01       	movw	r24, r28
    79ce:	8b 96       	adiw	r24, 0x2b	; 43
    79d0:	f9 01       	movw	r30, r18
	}
	
	for(int i=0; i<(_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK); i++)
	{
		tank_number_list[i] = 0;
    79d2:	11 92       	st	Z+, r1
	for(unsigned char temp_tank_number=0 ; temp_tank_number < _kMAX_FERTILIZER_TANK; temp_tank_number++)
	{
		_sSchedules.Running_Tank[temp_tank_number] = _kRESET;
	}
	
	for(int i=0; i<(_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK); i++)
    79d4:	e8 17       	cp	r30, r24
    79d6:	f9 07       	cpc	r31, r25
    79d8:	e1 f7       	brne	.-8      	; 0x79d2 <_Z28Turn_Off_All_Tank_For_Safetyv+0x42>
    79da:	20 e0       	ldi	r18, 0x00	; 0
    79dc:	30 e0       	ldi	r19, 0x00	; 0
	}
	
	
	for(int check_tank =0; check_tank<(_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK) ; check_tank++)
	{
		if(check_tank == 0)
    79de:	21 15       	cp	r18, r1
    79e0:	31 05       	cpc	r19, r1
    79e2:	39 f4       	brne	.+14     	; 0x79f2 <_Z28Turn_Off_All_Tank_For_Safetyv+0x62>
		{
			if(tank_number_list[check_tank] == 0)
    79e4:	89 81       	ldd	r24, Y+1	; 0x01
    79e6:	81 11       	cpse	r24, r1
    79e8:	1a c0       	rjmp	.+52     	; 0x7a1e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
			{
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    79ea:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <_sSchedules+0x7a>
    79ee:	89 83       	std	Y+1, r24	; 0x01
    79f0:	16 c0       	rjmp	.+44     	; 0x7a1e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
    79f2:	f6 01       	movw	r30, r12
    79f4:	80 e0       	ldi	r24, 0x00	; 0
    79f6:	90 e0       	ldi	r25, 0x00	; 0
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK; check_tank2++)
			{
				if(tank_number_list[check_tank2] == _sSchedules.Fertilizer_Tank_Number[check_tank])
    79f8:	d9 01       	movw	r26, r18
    79fa:	a6 59       	subi	r26, 0x96	; 150
    79fc:	b6 4f       	sbci	r27, 0xF6	; 246
    79fe:	41 91       	ld	r20, Z+
    7a00:	5c 91       	ld	r21, X
    7a02:	45 17       	cp	r20, r21
    7a04:	61 f0       	breq	.+24     	; 0x7a1e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				{
					break;
				}
				if(tank_number_list[check_tank2] == 0)
    7a06:	41 11       	cpse	r20, r1
    7a08:	06 c0       	rjmp	.+12     	; 0x7a16 <_Z28Turn_Off_All_Tank_For_Safetyv+0x86>
				{
					tank_number_list[check_tank2] = _sSchedules.Fertilizer_Tank_Number[check_tank];
    7a0a:	4c 91       	ld	r20, X
    7a0c:	f6 01       	movw	r30, r12
    7a0e:	e8 0f       	add	r30, r24
    7a10:	f9 1f       	adc	r31, r25
    7a12:	40 83       	st	Z, r20
					break;
    7a14:	04 c0       	rjmp	.+8      	; 0x7a1e <_Z28Turn_Off_All_Tank_For_Safetyv+0x8e>
				tank_number_list[check_tank] = _sSchedules.Fertilizer_Tank_Number[check_tank];
			}
		}
		else
		{
			for(int check_tank2 =0; check_tank2<_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK; check_tank2++)
    7a16:	01 96       	adiw	r24, 0x01	; 1
    7a18:	8a 32       	cpi	r24, 0x2A	; 42
    7a1a:	91 05       	cpc	r25, r1
    7a1c:	81 f7       	brne	.-32     	; 0x79fe <_Z28Turn_Off_All_Tank_For_Safetyv+0x6e>
	{
		tank_number_list[i] = 0;
	}
	
	
	for(int check_tank =0; check_tank<(_kMAX_LIRA_SENSOR_NODE*_kMAX_FERTILIZER_TANK) ; check_tank++)
    7a1e:	2f 5f       	subi	r18, 0xFF	; 255
    7a20:	3f 4f       	sbci	r19, 0xFF	; 255
    7a22:	2a 32       	cpi	r18, 0x2A	; 42
    7a24:	31 05       	cpc	r19, r1
    7a26:	d9 f6       	brne	.-74     	; 0x79de <_Z28Turn_Off_All_Tank_For_Safetyv+0x4e>
					break;
				}
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    7a28:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7a2c:	81 30       	cpi	r24, 0x01	; 1
    7a2e:	51 f4       	brne	.+20     	; 0x7a44 <_Z28Turn_Off_All_Tank_For_Safetyv+0xb4>
	{
		_kSERAIL_MON_WRITE("tank number list");
    7a30:	67 e1       	ldi	r22, 0x17	; 23
    7a32:	7f e0       	ldi	r23, 0x0F	; 15
    7a34:	8f e6       	ldi	r24, 0x6F	; 111
    7a36:	96 e1       	ldi	r25, 0x16	; 22
    7a38:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    7a3c:	8f e6       	ldi	r24, 0x6F	; 111
    7a3e:	96 e1       	ldi	r25, 0x16	; 22
    7a40:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7a44:	8b e1       	ldi	r24, 0x1B	; 27
    7a46:	e8 2e       	mov	r14, r24
						_kSERIAL_MON_CLEAR();
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7a48:	92 e0       	ldi	r25, 0x02	; 2
    7a4a:	89 2e       	mov	r8, r25
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7a4c:	25 e0       	ldi	r18, 0x05	; 5
    7a4e:	92 2e       	mov	r9, r18
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7a50:	f6 01       	movw	r30, r12
    7a52:	f1 90       	ld	r15, Z+
    7a54:	6f 01       	movw	r12, r30
    7a56:	ff 20       	and	r15, r15
    7a58:	09 f4       	brne	.+2      	; 0x7a5c <_Z28Turn_Off_All_Tank_For_Safetyv+0xcc>
    7a5a:	4c c0       	rjmp	.+152    	; 0x7af4 <_Z28Turn_Off_All_Tank_For_Safetyv+0x164>
	{
		_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]);
    7a5c:	4a e0       	ldi	r20, 0x0A	; 10
    7a5e:	50 e0       	ldi	r21, 0x00	; 0
    7a60:	6f 2d       	mov	r22, r15
    7a62:	8f e6       	ldi	r24, 0x6F	; 111
    7a64:	96 e1       	ldi	r25, 0x16	; 22
    7a66:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		
		if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    7a6a:	0f 2d       	mov	r16, r15
    7a6c:	10 e0       	ldi	r17, 0x00	; 0
    7a6e:	05 56       	subi	r16, 0x65	; 101
    7a70:	11 09       	sbc	r17, r1
    7a72:	e0 9e       	mul	r14, r16
    7a74:	c0 01       	movw	r24, r0
    7a76:	e1 9e       	mul	r14, r17
    7a78:	90 0d       	add	r25, r0
    7a7a:	11 24       	eor	r1, r1
    7a7c:	9c 01       	movw	r18, r24
    7a7e:	21 56       	subi	r18, 0x61	; 97
    7a80:	30 4f       	sbci	r19, 0xF0	; 240
    7a82:	59 01       	movw	r10, r18
    7a84:	f9 01       	movw	r30, r18
    7a86:	80 81       	ld	r24, Z
    7a88:	81 11       	cpse	r24, r1
    7a8a:	e2 cf       	rjmp	.-60     	; 0x7a50 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
		{
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM))
    7a8c:	6b e9       	ldi	r22, 0x9B	; 155
    7a8e:	6f 0d       	add	r22, r15
    7a90:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7a94:	88 23       	and	r24, r24
    7a96:	e1 f2       	breq	.-72     	; 0x7a50 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			{
				//_kSERAIL_MON_WRITE("tank number list with tank number array : ");
				//_kSERIAL_MON_PRINT_NUM(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				
				if(_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7a98:	f5 01       	movw	r30, r10
    7a9a:	82 81       	ldd	r24, Z+2	; 0x02
    7a9c:	85 30       	cpi	r24, 0x05	; 5
    7a9e:	c1 f2       	breq	.-80     	; 0x7a50 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    7aa0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7aa4:	81 30       	cpi	r24, 0x01	; 1
    7aa6:	89 f4       	brne	.+34     	; 0x7aca <_Z28Turn_Off_All_Tank_For_Safetyv+0x13a>
					{
						_kSERAIL_MON_WRITE("tank number gets to off safely");
    7aa8:	68 ef       	ldi	r22, 0xF8	; 248
    7aaa:	7e e0       	ldi	r23, 0x0E	; 14
    7aac:	8f e6       	ldi	r24, 0x6F	; 111
    7aae:	96 e1       	ldi	r25, 0x16	; 22
    7ab0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM);
    7ab4:	4a e0       	ldi	r20, 0x0A	; 10
    7ab6:	50 e0       	ldi	r21, 0x00	; 0
    7ab8:	b8 01       	movw	r22, r16
    7aba:	8f e6       	ldi	r24, 0x6F	; 111
    7abc:	96 e1       	ldi	r25, 0x16	; 22
    7abe:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
						_kSERIAL_MON_CLEAR();
    7ac2:	8f e6       	ldi	r24, 0x6F	; 111
    7ac4:	96 e1       	ldi	r25, 0x16	; 22
    7ac6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7aca:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    7ace:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    7ad2:	90 62       	ori	r25, 0x20	; 32
    7ad4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    7ad8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = tank_number_list[tank_number];
    7adc:	f0 92 1b 16 	sts	0x161B, r15	; 0x80161b <_sRuble_Parameters+0xb6>
					_sExtra_Plot[tank_number_list[tank_number] -_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7ae0:	e0 9e       	mul	r14, r16
    7ae2:	f0 01       	movw	r30, r0
    7ae4:	e1 9e       	mul	r14, r17
    7ae6:	f0 0d       	add	r31, r0
    7ae8:	11 24       	eor	r1, r1
    7aea:	e1 56       	subi	r30, 0x61	; 97
    7aec:	f0 4f       	sbci	r31, 0xF0	; 240
    7aee:	82 8e       	std	Z+26, r8	; 0x1a
					_sExtra_Plot[tank_number_list[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7af0:	92 82       	std	Z+2, r9	; 0x02
	{
		_kSERAIL_MON_WRITE("tank number list");
		_kSERIAL_MON_CLEAR();
	}
	
	for(int tank_number=0; tank_number_list[tank_number] != 0; tank_number++)
    7af2:	ae cf       	rjmp	.-164    	; 0x7a50 <_Z28Turn_Off_All_Tank_For_Safetyv+0xc0>
			}
			//return 1;
		}
	}
	
}
    7af4:	aa 96       	adiw	r28, 0x2a	; 42
    7af6:	0f b6       	in	r0, 0x3f	; 63
    7af8:	f8 94       	cli
    7afa:	de bf       	out	0x3e, r29	; 62
    7afc:	0f be       	out	0x3f, r0	; 63
    7afe:	cd bf       	out	0x3d, r28	; 61
    7b00:	df 91       	pop	r29
    7b02:	cf 91       	pop	r28
    7b04:	1f 91       	pop	r17
    7b06:	0f 91       	pop	r16
    7b08:	ff 90       	pop	r15
    7b0a:	ef 90       	pop	r14
    7b0c:	df 90       	pop	r13
    7b0e:	cf 90       	pop	r12
    7b10:	bf 90       	pop	r11
    7b12:	af 90       	pop	r10
    7b14:	9f 90       	pop	r9
    7b16:	8f 90       	pop	r8
    7b18:	08 95       	ret

00007b1a <_Z17Blower_Monitoringh>:

char Blower_Monitoring(unsigned char Forcefully_Off)
{	
    7b1a:	cf 92       	push	r12
    7b1c:	df 92       	push	r13
    7b1e:	ef 92       	push	r14
    7b20:	ff 92       	push	r15
    7b22:	0f 93       	push	r16
    7b24:	1f 93       	push	r17
	unsigned char tank_number,time_buffer;
	static unsigned char temp_number;
	
	if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Extra_Plot_Number == _kBLOWER_PLOT_NUMBER)
    7b26:	90 91 bb 0f 	lds	r25, 0x0FBB	; 0x800fbb <_sExtra_Plot+0x1c>
    7b2a:	96 36       	cpi	r25, 0x66	; 102
    7b2c:	09 f0       	breq	.+2      	; 0x7b30 <_Z17Blower_Monitoringh+0x16>
    7b2e:	49 c0       	rjmp	.+146    	; 0x7bc2 <_Z17Blower_Monitoringh+0xa8>
	{
		
		if(_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status == _kRESET)
    7b30:	90 91 ba 0f 	lds	r25, 0x0FBA	; 0x800fba <_sExtra_Plot+0x1b>
    7b34:	91 11       	cpse	r25, r1
    7b36:	45 c0       	rjmp	.+138    	; 0x7bc2 <_Z17Blower_Monitoringh+0xa8>
		{
			if(Forcefully_Off == _kFORCEFULYY_OFF)
    7b38:	83 30       	cpi	r24, 0x03	; 3
    7b3a:	09 f0       	breq	.+2      	; 0x7b3e <_Z17Blower_Monitoringh+0x24>
    7b3c:	42 c0       	rjmp	.+132    	; 0x7bc2 <_Z17Blower_Monitoringh+0xa8>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    7b3e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7b42:	81 30       	cpi	r24, 0x01	; 1
    7b44:	51 f4       	brne	.+20     	; 0x7b5a <_Z17Blower_Monitoringh+0x40>
				{
					_kSERAIL_MON_WRITE("blower gets 1.1 : ");
    7b46:	65 ee       	ldi	r22, 0xE5	; 229
    7b48:	7e e0       	ldi	r23, 0x0E	; 14
    7b4a:	8f e6       	ldi	r24, 0x6F	; 111
    7b4c:	96 e1       	ldi	r25, 0x16	; 22
    7b4e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    7b52:	8f e6       	ldi	r24, 0x6F	; 111
    7b54:	96 e1       	ldi	r25, 0x16	; 22
    7b56:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				
				_sSchedules.Blower_On_Scheduler_Status =_kOFF;
    7b5a:	10 92 5d 0b 	sts	0x0B5D, r1	; 0x800b5d <_sSchedules+0x26d>
				_sSchedules.Blower_On_Retry = _kRESET;
    7b5e:	10 92 5e 0b 	sts	0x0B5E, r1	; 0x800b5e <_sSchedules+0x26e>
				_sSchedules.Blower_On_Time = _kRESET;
    7b62:	10 92 5c 0b 	sts	0x0B5C, r1	; 0x800b5c <_sSchedules+0x26c>
				temp_number = 0;
				/* turn off blower */
				
				if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7b66:	61 e0       	ldi	r22, 0x01	; 1
    7b68:	80 e0       	ldi	r24, 0x00	; 0
    7b6a:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7b6e:	88 23       	and	r24, r24
    7b70:	21 f1       	breq	.+72     	; 0x7bba <_Z17Blower_Monitoringh+0xa0>
				{
					//_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
					//_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
					
					if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7b72:	80 91 bc 0f 	lds	r24, 0x0FBC	; 0x800fbc <_sExtra_Plot+0x1d>
    7b76:	85 30       	cpi	r24, 0x05	; 5
    7b78:	01 f1       	breq	.+64     	; 0x7bba <_Z17Blower_Monitoringh+0xa0>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    7b7a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7b7e:	81 30       	cpi	r24, 0x01	; 1
    7b80:	51 f4       	brne	.+20     	; 0x7b96 <_Z17Blower_Monitoringh+0x7c>
						{
							_kSERAIL_MON_WRITE("blower gets 2.1 : ");
    7b82:	62 ed       	ldi	r22, 0xD2	; 210
    7b84:	7e e0       	ldi	r23, 0x0E	; 14
    7b86:	8f e6       	ldi	r24, 0x6F	; 111
    7b88:	96 e1       	ldi	r25, 0x16	; 22
    7b8a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    7b8e:	8f e6       	ldi	r24, 0x6F	; 111
    7b90:	96 e1       	ldi	r25, 0x16	; 22
    7b92:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7b96:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    7b9a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    7b9e:	90 62       	ori	r25, 0x20	; 32
    7ba0:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    7ba4:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7ba8:	81 e0       	ldi	r24, 0x01	; 1
    7baa:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7bae:	82 e0       	ldi	r24, 0x02	; 2
    7bb0:	80 93 d4 0f 	sts	0x0FD4, r24	; 0x800fd4 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7bb4:	85 e0       	ldi	r24, 0x05	; 5
    7bb6:	80 93 bc 0f 	sts	0x0FBC, r24	; 0x800fbc <_sExtra_Plot+0x1d>
					}
				}
				
				_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    7bba:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
				return 1;
    7bbe:	81 e0       	ldi	r24, 0x01	; 1
    7bc0:	d5 c1       	rjmp	.+938    	; 0x7f6c <_Z17Blower_Monitoringh+0x452>
				
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
    7bc2:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7bc6:	90 e0       	ldi	r25, 0x00	; 0
    7bc8:	01 97       	sbiw	r24, 0x01	; 1
    7bca:	fc 01       	movw	r30, r24
    7bcc:	ee 0f       	add	r30, r30
    7bce:	ff 1f       	adc	r31, r31
    7bd0:	e8 0f       	add	r30, r24
    7bd2:	f9 1f       	adc	r31, r25
    7bd4:	ee 0f       	add	r30, r30
    7bd6:	ff 1f       	adc	r31, r31
    7bd8:	eb 56       	subi	r30, 0x6B	; 107
    7bda:	f6 4f       	sbci	r31, 0xF6	; 246
    7bdc:	20 81       	ld	r18, Z
    7bde:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7be0:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7be4:	90 e0       	ldi	r25, 0x00	; 0
    7be6:	01 97       	sbiw	r24, 0x01	; 1
    7be8:	fc 01       	movw	r30, r24
    7bea:	ee 0f       	add	r30, r30
    7bec:	ff 1f       	adc	r31, r31
    7bee:	e8 0f       	add	r30, r24
    7bf0:	f9 1f       	adc	r31, r25
    7bf2:	ee 0f       	add	r30, r30
    7bf4:	ff 1f       	adc	r31, r31
    7bf6:	e5 51       	subi	r30, 0x15	; 21
    7bf8:	f6 4f       	sbci	r31, 0xF6	; 246
    7bfa:	40 81       	ld	r20, Z
    7bfc:	51 81       	ldd	r21, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
    7bfe:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7c02:	90 e0       	ldi	r25, 0x00	; 0
    7c04:	01 97       	sbiw	r24, 0x01	; 1
    7c06:	fc 01       	movw	r30, r24
    7c08:	ee 0f       	add	r30, r30
    7c0a:	ff 1f       	adc	r31, r31
    7c0c:	8e 0f       	add	r24, r30
    7c0e:	9f 1f       	adc	r25, r31
    7c10:	fc 01       	movw	r30, r24
    7c12:	ef 5b       	subi	r30, 0xBF	; 191
    7c14:	f5 4f       	sbci	r31, 0xF5	; 245
    7c16:	80 81       	ld	r24, Z
    7c18:	81 30       	cpi	r24, 0x01	; 1
    7c1a:	29 f4       	brne	.+10     	; 0x7c26 <_Z17Blower_Monitoringh+0x10c>
			}
		}
	}
	
	unsigned long int tank1_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 0];
    7c1c:	42 0f       	add	r20, r18
    7c1e:	53 1f       	adc	r21, r19
    7c20:	60 e0       	ldi	r22, 0x00	; 0
    7c22:	70 e0       	ldi	r23, 0x00	; 0
    7c24:	03 c0       	rjmp	.+6      	; 0x7c2c <_Z17Blower_Monitoringh+0x112>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] != _kSET)
	{
		tank1_time = _kRESET;
    7c26:	40 e0       	ldi	r20, 0x00	; 0
    7c28:	50 e0       	ldi	r21, 0x00	; 0
    7c2a:	ba 01       	movw	r22, r20
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
    7c2c:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7c30:	90 e0       	ldi	r25, 0x00	; 0
    7c32:	01 97       	sbiw	r24, 0x01	; 1
    7c34:	fc 01       	movw	r30, r24
    7c36:	ee 0f       	add	r30, r30
    7c38:	ff 1f       	adc	r31, r31
    7c3a:	e8 0f       	add	r30, r24
    7c3c:	f9 1f       	adc	r31, r25
    7c3e:	ee 0f       	add	r30, r30
    7c40:	ff 1f       	adc	r31, r31
    7c42:	e9 56       	subi	r30, 0x69	; 105
    7c44:	f6 4f       	sbci	r31, 0xF6	; 246
    7c46:	20 81       	ld	r18, Z
    7c48:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7c4a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7c4e:	90 e0       	ldi	r25, 0x00	; 0
    7c50:	01 97       	sbiw	r24, 0x01	; 1
    7c52:	fc 01       	movw	r30, r24
    7c54:	ee 0f       	add	r30, r30
    7c56:	ff 1f       	adc	r31, r31
    7c58:	e8 0f       	add	r30, r24
    7c5a:	f9 1f       	adc	r31, r25
    7c5c:	ee 0f       	add	r30, r30
    7c5e:	ff 1f       	adc	r31, r31
    7c60:	e3 51       	subi	r30, 0x13	; 19
    7c62:	f6 4f       	sbci	r31, 0xF6	; 246
    7c64:	c0 80       	ld	r12, Z
    7c66:	d1 80       	ldd	r13, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
    7c68:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7c6c:	90 e0       	ldi	r25, 0x00	; 0
    7c6e:	01 97       	sbiw	r24, 0x01	; 1
    7c70:	fc 01       	movw	r30, r24
    7c72:	ee 0f       	add	r30, r30
    7c74:	ff 1f       	adc	r31, r31
    7c76:	8e 0f       	add	r24, r30
    7c78:	9f 1f       	adc	r25, r31
    7c7a:	fc 01       	movw	r30, r24
    7c7c:	ee 5b       	subi	r30, 0xBE	; 190
    7c7e:	f5 4f       	sbci	r31, 0xF5	; 245
    7c80:	80 81       	ld	r24, Z
    7c82:	81 30       	cpi	r24, 0x01	; 1
    7c84:	29 f4       	brne	.+10     	; 0x7c90 <_Z17Blower_Monitoringh+0x176>
	{
		tank1_time = _kRESET;
	}
	
	unsigned long int tank2_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 1];
    7c86:	c2 0e       	add	r12, r18
    7c88:	d3 1e       	adc	r13, r19
    7c8a:	e1 2c       	mov	r14, r1
    7c8c:	f1 2c       	mov	r15, r1
    7c8e:	03 c0       	rjmp	.+6      	; 0x7c96 <_Z17Blower_Monitoringh+0x17c>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] != _kSET)
	{
		tank2_time = _kRESET;
    7c90:	c1 2c       	mov	r12, r1
    7c92:	d1 2c       	mov	r13, r1
    7c94:	76 01       	movw	r14, r12
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
    7c96:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7c9a:	90 e0       	ldi	r25, 0x00	; 0
    7c9c:	01 97       	sbiw	r24, 0x01	; 1
    7c9e:	fc 01       	movw	r30, r24
    7ca0:	ee 0f       	add	r30, r30
    7ca2:	ff 1f       	adc	r31, r31
    7ca4:	e8 0f       	add	r30, r24
    7ca6:	f9 1f       	adc	r31, r25
    7ca8:	ee 0f       	add	r30, r30
    7caa:	ff 1f       	adc	r31, r31
    7cac:	e7 56       	subi	r30, 0x67	; 103
    7cae:	f6 4f       	sbci	r31, 0xF6	; 246
    7cb0:	20 81       	ld	r18, Z
    7cb2:	31 81       	ldd	r19, Z+1	; 0x01
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7cb4:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7cb8:	90 e0       	ldi	r25, 0x00	; 0
    7cba:	01 97       	sbiw	r24, 0x01	; 1
    7cbc:	fc 01       	movw	r30, r24
    7cbe:	ee 0f       	add	r30, r30
    7cc0:	ff 1f       	adc	r31, r31
    7cc2:	e8 0f       	add	r30, r24
    7cc4:	f9 1f       	adc	r31, r25
    7cc6:	ee 0f       	add	r30, r30
    7cc8:	ff 1f       	adc	r31, r31
    7cca:	e1 51       	subi	r30, 0x11	; 17
    7ccc:	f6 4f       	sbci	r31, 0xF6	; 246
    7cce:	00 81       	ld	r16, Z
    7cd0:	11 81       	ldd	r17, Z+1	; 0x01
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
    7cd2:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7cd6:	90 e0       	ldi	r25, 0x00	; 0
    7cd8:	01 97       	sbiw	r24, 0x01	; 1
    7cda:	fc 01       	movw	r30, r24
    7cdc:	ee 0f       	add	r30, r30
    7cde:	ff 1f       	adc	r31, r31
    7ce0:	8e 0f       	add	r24, r30
    7ce2:	9f 1f       	adc	r25, r31
    7ce4:	fc 01       	movw	r30, r24
    7ce6:	ed 5b       	subi	r30, 0xBD	; 189
    7ce8:	f5 4f       	sbci	r31, 0xF5	; 245
    7cea:	80 81       	ld	r24, Z
    7cec:	81 30       	cpi	r24, 0x01	; 1
    7cee:	29 f4       	brne	.+10     	; 0x7cfa <_Z17Blower_Monitoringh+0x1e0>
	{
		tank2_time = _kRESET;
	}
	
	unsigned long int tank3_time = _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2] + 
	_sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running - 1)* 3) + 2];
    7cf0:	02 0f       	add	r16, r18
    7cf2:	13 1f       	adc	r17, r19
    7cf4:	20 e0       	ldi	r18, 0x00	; 0
    7cf6:	30 e0       	ldi	r19, 0x00	; 0
    7cf8:	03 c0       	rjmp	.+6      	; 0x7d00 <_Z17Blower_Monitoringh+0x1e6>
	
	if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] != _kSET)
	{
		tank3_time = _kRESET;
    7cfa:	00 e0       	ldi	r16, 0x00	; 0
    7cfc:	10 e0       	ldi	r17, 0x00	; 0
    7cfe:	98 01       	movw	r18, r16
	}
	
	if(_sSchedules.Blower_On_Retry != 0 || _sSchedules.Scheduler_Retry_Timer != 0)
    7d00:	80 91 5e 0b 	lds	r24, 0x0B5E	; 0x800b5e <_sSchedules+0x26e>
    7d04:	81 11       	cpse	r24, r1
    7d06:	06 c0       	rjmp	.+12     	; 0x7d14 <_Z17Blower_Monitoringh+0x1fa>
    7d08:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    7d0c:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    7d10:	89 2b       	or	r24, r25
    7d12:	11 f0       	breq	.+4      	; 0x7d18 <_Z17Blower_Monitoringh+0x1fe>
	{
		return 0;
    7d14:	80 e0       	ldi	r24, 0x00	; 0
    7d16:	2a c1       	rjmp	.+596    	; 0x7f6c <_Z17Blower_Monitoringh+0x452>
	_kSERAIL_MON_WRITE("tank2_time : ");
	_kSERIAL_MON_PRINT_NUM(tank2_time);
	_kSERAIL_MON_WRITE("tank3_time : ");
	_kSERIAL_MON_PRINT_NUM(tank3_time);*/
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
    7d18:	80 91 5d 0b 	lds	r24, 0x0B5D	; 0x800b5d <_sSchedules+0x26d>
    7d1c:	81 30       	cpi	r24, 0x01	; 1
    7d1e:	89 f1       	breq	.+98     	; 0x7d82 <_Z17Blower_Monitoringh+0x268>
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
    7d20:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7d24:	90 e0       	ldi	r25, 0x00	; 0
    7d26:	01 97       	sbiw	r24, 0x01	; 1
    7d28:	fc 01       	movw	r30, r24
    7d2a:	ee 0f       	add	r30, r30
    7d2c:	ff 1f       	adc	r31, r31
    7d2e:	8e 0f       	add	r24, r30
    7d30:	9f 1f       	adc	r25, r31
    7d32:	fc 01       	movw	r30, r24
    7d34:	ef 5b       	subi	r30, 0xBF	; 191
    7d36:	f5 4f       	sbci	r31, 0xF5	; 245
    7d38:	80 81       	ld	r24, Z
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7d3a:	81 30       	cpi	r24, 0x01	; 1
    7d3c:	09 f4       	brne	.+2      	; 0x7d40 <_Z17Blower_Monitoringh+0x226>
    7d3e:	cf c0       	rjmp	.+414    	; 0x7ede <_Z17Blower_Monitoringh+0x3c4>
	
	if(_sSchedules.Blower_On_Scheduler_Status != _kON)
	{
		//_kSERAIL_MON_WRITE("blower gets 1 : ");
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
    7d40:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7d44:	90 e0       	ldi	r25, 0x00	; 0
    7d46:	01 97       	sbiw	r24, 0x01	; 1
    7d48:	fc 01       	movw	r30, r24
    7d4a:	ee 0f       	add	r30, r30
    7d4c:	ff 1f       	adc	r31, r31
    7d4e:	8e 0f       	add	r24, r30
    7d50:	9f 1f       	adc	r25, r31
    7d52:	fc 01       	movw	r30, r24
    7d54:	ee 5b       	subi	r30, 0xBE	; 190
    7d56:	f5 4f       	sbci	r31, 0xF5	; 245
    7d58:	80 81       	ld	r24, Z
    7d5a:	81 30       	cpi	r24, 0x01	; 1
    7d5c:	09 f4       	brne	.+2      	; 0x7d60 <_Z17Blower_Monitoringh+0x246>
    7d5e:	bf c0       	rjmp	.+382    	; 0x7ede <_Z17Blower_Monitoringh+0x3c4>
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
    7d60:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7d64:	90 e0       	ldi	r25, 0x00	; 0
    7d66:	01 97       	sbiw	r24, 0x01	; 1
    7d68:	fc 01       	movw	r30, r24
    7d6a:	ee 0f       	add	r30, r30
    7d6c:	ff 1f       	adc	r31, r31
    7d6e:	8e 0f       	add	r24, r30
    7d70:	9f 1f       	adc	r25, r31
    7d72:	fc 01       	movw	r30, r24
    7d74:	ed 5b       	subi	r30, 0xBD	; 189
    7d76:	f5 4f       	sbci	r31, 0xF5	; 245
    7d78:	80 81       	ld	r24, Z
    7d7a:	81 30       	cpi	r24, 0x01	; 1
    7d7c:	09 f0       	breq	.+2      	; 0x7d80 <_Z17Blower_Monitoringh+0x266>
    7d7e:	ae c0       	rjmp	.+348    	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
    7d80:	ae c0       	rjmp	.+348    	; 0x7ede <_Z17Blower_Monitoringh+0x3c4>
		
	}
	else
	{
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
    7d82:	80 91 5c 0b 	lds	r24, 0x0B5C	; 0x800b5c <_sSchedules+0x26c>
    7d86:	88 23       	and	r24, r24
    7d88:	21 f1       	breq	.+72     	; 0x7dd2 <_Z17Blower_Monitoringh+0x2b8>
    7d8a:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7d8e:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    7d92:	a0 e0       	ldi	r26, 0x00	; 0
    7d94:	b0 e0       	ldi	r27, 0x00	; 0
    7d96:	84 17       	cp	r24, r20
    7d98:	95 07       	cpc	r25, r21
    7d9a:	a6 07       	cpc	r26, r22
    7d9c:	b7 07       	cpc	r27, r23
    7d9e:	08 f4       	brcc	.+2      	; 0x7da2 <_Z17Blower_Monitoringh+0x288>
    7da0:	9d c0       	rjmp	.+314    	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
    7da2:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7da6:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    7daa:	a0 e0       	ldi	r26, 0x00	; 0
    7dac:	b0 e0       	ldi	r27, 0x00	; 0
    7dae:	8c 15       	cp	r24, r12
    7db0:	9d 05       	cpc	r25, r13
    7db2:	ae 05       	cpc	r26, r14
    7db4:	bf 05       	cpc	r27, r15
    7db6:	08 f4       	brcc	.+2      	; 0x7dba <_Z17Blower_Monitoringh+0x2a0>
    7db8:	91 c0       	rjmp	.+290    	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
    7dba:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7dbe:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    7dc2:	a0 e0       	ldi	r26, 0x00	; 0
    7dc4:	b0 e0       	ldi	r27, 0x00	; 0
    7dc6:	80 17       	cp	r24, r16
    7dc8:	91 07       	cpc	r25, r17
    7dca:	a2 07       	cpc	r26, r18
    7dcc:	b3 07       	cpc	r27, r19
    7dce:	08 f4       	brcc	.+2      	; 0x7dd2 <_Z17Blower_Monitoringh+0x2b8>
    7dd0:	85 c0       	rjmp	.+266    	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
    7dd2:	20 e0       	ldi	r18, 0x00	; 0
    7dd4:	30 e0       	ldi	r19, 0x00	; 0
    7dd6:	40 e0       	ldi	r20, 0x00	; 0
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
    7dd8:	5b e1       	ldi	r21, 0x1B	; 27
    7dda:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7dde:	90 e0       	ldi	r25, 0x00	; 0
    7de0:	01 97       	sbiw	r24, 0x01	; 1
    7de2:	fc 01       	movw	r30, r24
    7de4:	ee 0f       	add	r30, r30
    7de6:	ff 1f       	adc	r31, r31
    7de8:	e8 0f       	add	r30, r24
    7dea:	f9 1f       	adc	r31, r25
    7dec:	e2 0f       	add	r30, r18
    7dee:	f3 1f       	adc	r31, r19
    7df0:	e6 59       	subi	r30, 0x96	; 150
    7df2:	f6 4f       	sbci	r31, 0xF6	; 246
    7df4:	80 81       	ld	r24, Z
    7df6:	90 e0       	ldi	r25, 0x00	; 0
    7df8:	85 56       	subi	r24, 0x65	; 101
    7dfa:	91 09       	sbc	r25, r1
    7dfc:	58 9f       	mul	r21, r24
    7dfe:	f0 01       	movw	r30, r0
    7e00:	59 9f       	mul	r21, r25
    7e02:	f0 0d       	add	r31, r0
    7e04:	11 24       	eor	r1, r1
    7e06:	e1 56       	subi	r30, 0x61	; 97
    7e08:	f0 4f       	sbci	r31, 0xF0	; 240
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7e0a:	81 81       	ldd	r24, Z+1	; 0x01
    7e0c:	88 23       	and	r24, r24
    7e0e:	b9 f1       	breq	.+110    	; 0x7e7e <_Z17Blower_Monitoringh+0x364>
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100
    7e10:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7e14:	90 e0       	ldi	r25, 0x00	; 0
    7e16:	01 97       	sbiw	r24, 0x01	; 1
    7e18:	fc 01       	movw	r30, r24
    7e1a:	ee 0f       	add	r30, r30
    7e1c:	ff 1f       	adc	r31, r31
    7e1e:	e8 0f       	add	r30, r24
    7e20:	f9 1f       	adc	r31, r25
    7e22:	e2 0f       	add	r30, r18
    7e24:	f3 1f       	adc	r31, r19
    7e26:	e6 59       	subi	r30, 0x96	; 150
    7e28:	f6 4f       	sbci	r31, 0xF6	; 246
    7e2a:	80 81       	ld	r24, Z
    7e2c:	90 e0       	ldi	r25, 0x00	; 0
    7e2e:	85 56       	subi	r24, 0x65	; 101
    7e30:	91 09       	sbc	r25, r1
    7e32:	58 9f       	mul	r21, r24
    7e34:	f0 01       	movw	r30, r0
    7e36:	59 9f       	mul	r21, r25
    7e38:	f0 0d       	add	r31, r0
    7e3a:	11 24       	eor	r1, r1
    7e3c:	e1 56       	subi	r30, 0x61	; 97
    7e3e:	f0 4f       	sbci	r31, 0xF0	; 240
    7e40:	81 81       	ldd	r24, Z+1	; 0x01
    7e42:	85 36       	cpi	r24, 0x65	; 101
    7e44:	e0 f0       	brcs	.+56     	; 0x7e7e <_Z17Blower_Monitoringh+0x364>
				&& _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Status == _kSCHEDULER_ON)
    7e46:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    7e4a:	90 e0       	ldi	r25, 0x00	; 0
    7e4c:	01 97       	sbiw	r24, 0x01	; 1
    7e4e:	fc 01       	movw	r30, r24
    7e50:	ee 0f       	add	r30, r30
    7e52:	ff 1f       	adc	r31, r31
    7e54:	e8 0f       	add	r30, r24
    7e56:	f9 1f       	adc	r31, r25
    7e58:	e2 0f       	add	r30, r18
    7e5a:	f3 1f       	adc	r31, r19
    7e5c:	e6 59       	subi	r30, 0x96	; 150
    7e5e:	f6 4f       	sbci	r31, 0xF6	; 246
    7e60:	80 81       	ld	r24, Z
    7e62:	90 e0       	ldi	r25, 0x00	; 0
    7e64:	85 56       	subi	r24, 0x65	; 101
    7e66:	91 09       	sbc	r25, r1
    7e68:	58 9f       	mul	r21, r24
    7e6a:	f0 01       	movw	r30, r0
    7e6c:	59 9f       	mul	r21, r25
    7e6e:	f0 0d       	add	r31, r0
    7e70:	11 24       	eor	r1, r1
    7e72:	e1 56       	subi	r30, 0x61	; 97
    7e74:	f0 4f       	sbci	r31, 0xF0	; 240
    7e76:	82 81       	ldd	r24, Z+2	; 0x02
    7e78:	84 30       	cpi	r24, 0x04	; 4
    7e7a:	09 f4       	brne	.+2      	; 0x7e7e <_Z17Blower_Monitoringh+0x364>
				{
					check_tank_status = 1;
    7e7c:	41 e0       	ldi	r20, 0x01	; 1
    7e7e:	2f 5f       	subi	r18, 0xFF	; 255
    7e80:	3f 4f       	sbci	r19, 0xFF	; 255
		unsigned char check_tank_status = 0;
		if(_sSchedules.Blower_On_Time == _kRESET || (tank1_time <= _sSchedules.Keep_Scheduler_Run_Timer && tank2_time <= _sSchedules.Keep_Scheduler_Run_Timer
		&& tank3_time <= _sSchedules.Keep_Scheduler_Run_Timer))
		{
			check_tank_status = 0;
			for(unsigned char tank_number =0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    7e82:	23 30       	cpi	r18, 0x03	; 3
    7e84:	31 05       	cpc	r19, r1
    7e86:	09 f0       	breq	.+2      	; 0x7e8a <_Z17Blower_Monitoringh+0x370>
    7e88:	a8 cf       	rjmp	.-176    	; 0x7dda <_Z17Blower_Monitoringh+0x2c0>
				{
					check_tank_status = 1;
				}
			}
			
			if(check_tank_status)
    7e8a:	44 23       	and	r20, r20
    7e8c:	19 f0       	breq	.+6      	; 0x7e94 <_Z17Blower_Monitoringh+0x37a>
			{
				_gWait_Blower_Time = _kMAX_BLOWER_REPEAT_TIME;
    7e8e:	88 e0       	ldi	r24, 0x08	; 8
    7e90:	97 e0       	ldi	r25, 0x07	; 7
    7e92:	02 c0       	rjmp	.+4      	; 0x7e98 <_Z17Blower_Monitoringh+0x37e>
			}
			else
			{
				_gWait_Blower_Time = 60 * 60;
    7e94:	80 e1       	ldi	r24, 0x10	; 16
    7e96:	9e e0       	ldi	r25, 0x0E	; 14
    7e98:	90 93 9e 0c 	sts	0x0C9E, r25	; 0x800c9e <_gWait_Blower_Time+0x1>
    7e9c:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gWait_Blower_Time>
			}
			
			_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    7ea0:	10 92 5d 0b 	sts	0x0B5D, r1	; 0x800b5d <_sSchedules+0x26d>
			//_kSERAIL_MON_WRITE("blower gets 5 : ");
			
			if(Extra_Plot_Valve_Grouping_Handler(_kOFF, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7ea4:	61 e0       	ldi	r22, 0x01	; 1
    7ea6:	80 e0       	ldi	r24, 0x00	; 0
    7ea8:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7eac:	88 23       	and	r24, r24
    7eae:	b1 f0       	breq	.+44     	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 6 : ");
				//_kSERIAL_MON_CLEAR();
				if(_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    7eb0:	80 91 bc 0f 	lds	r24, 0x0FBC	; 0x800fbc <_sExtra_Plot+0x1d>
    7eb4:	85 30       	cpi	r24, 0x05	; 5
    7eb6:	91 f0       	breq	.+36     	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
				{
					_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7eb8:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    7ebc:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    7ec0:	90 62       	ori	r25, 0x20	; 32
    7ec2:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    7ec6:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
					_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7eca:	81 e0       	ldi	r24, 0x01	; 1
    7ecc:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7ed0:	82 e0       	ldi	r24, 0x02	; 2
    7ed2:	80 93 d4 0f 	sts	0x0FD4, r24	; 0x800fd4 <_sExtra_Plot+0x35>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    7ed6:	85 e0       	ldi	r24, 0x05	; 5
    7ed8:	80 93 bc 0f 	sts	0x0FBC, r24	; 0x800fbc <_sExtra_Plot+0x1d>
				}
			}
		}
	}	
}
    7edc:	47 c0       	rjmp	.+142    	; 0x7f6c <_Z17Blower_Monitoringh+0x452>
		if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 0] == _kSET
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 1] == _kSET 
		|| _sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running - 1) *3) + 2] == _kSET)
		{
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
    7ede:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gWait_Blower_Time>
    7ee2:	90 91 9e 0c 	lds	r25, 0x0C9E	; 0x800c9e <_gWait_Blower_Time+0x1>
    7ee6:	89 2b       	or	r24, r25
    7ee8:	c9 f7       	brne	.-14     	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
    7eea:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7eee:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7ef2:	a0 e0       	ldi	r26, 0x00	; 0
    7ef4:	b0 e0       	ldi	r27, 0x00	; 0
    7ef6:	84 17       	cp	r24, r20
    7ef8:	95 07       	cpc	r25, r21
    7efa:	a6 07       	cpc	r26, r22
    7efc:	b7 07       	cpc	r27, r23
    7efe:	b0 f0       	brcs	.+44     	; 0x7f2c <_Z17Blower_Monitoringh+0x412>
			//_kSERAIL_MON_WRITE("blower gets 2 : ");
			if(_gWait_Blower_Time == 0)
			{
				//_kSERAIL_MON_WRITE("blower gets 3 : ");
				if(tank1_time > _sSchedules.Keep_Scheduler_Run_Timer  
				|| tank2_time > _sSchedules.Keep_Scheduler_Run_Timer
    7f00:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7f04:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    7f08:	a0 e0       	ldi	r26, 0x00	; 0
    7f0a:	b0 e0       	ldi	r27, 0x00	; 0
    7f0c:	8c 15       	cp	r24, r12
    7f0e:	9d 05       	cpc	r25, r13
    7f10:	ae 05       	cpc	r26, r14
    7f12:	bf 05       	cpc	r27, r15
    7f14:	58 f0       	brcs	.+22     	; 0x7f2c <_Z17Blower_Monitoringh+0x412>
				|| tank3_time > _sSchedules.Keep_Scheduler_Run_Timer)
    7f16:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    7f1a:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    7f1e:	a0 e0       	ldi	r26, 0x00	; 0
    7f20:	b0 e0       	ldi	r27, 0x00	; 0
    7f22:	80 17       	cp	r24, r16
    7f24:	91 07       	cpc	r25, r17
    7f26:	a2 07       	cpc	r26, r18
    7f28:	b3 07       	cpc	r27, r19
    7f2a:	c0 f6       	brcc	.-80     	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
				{
					if(Extra_Plot_Valve_Grouping_Handler(_kON, (_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM)))
    7f2c:	61 e0       	ldi	r22, 0x01	; 1
    7f2e:	81 e0       	ldi	r24, 0x01	; 1
    7f30:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
    7f34:	88 23       	and	r24, r24
    7f36:	b1 f0       	breq	.+44     	; 0x7f64 <_Z17Blower_Monitoringh+0x44a>
					{
						//_kSERAIL_MON_WRITE("blower gets 4 : ");
						//_kSERIAL_MON_CLEAR();
						_sSchedules.Blower_On_Scheduler_Status = _kON;
    7f38:	21 e0       	ldi	r18, 0x01	; 1
    7f3a:	20 93 5d 0b 	sts	0x0B5D, r18	; 0x800b5d <_sSchedules+0x26d>
						_sSchedules.Blower_On_Time = _kBLOWER_ON_TIME;
    7f3e:	8a e5       	ldi	r24, 0x5A	; 90
    7f40:	80 93 5c 0b 	sts	0x0B5C, r24	; 0x800b5c <_sSchedules+0x26c>
						_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    7f44:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    7f48:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    7f4c:	90 62       	ori	r25, 0x20	; 32
    7f4e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    7f52:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
						_sRuble_Parameters.Extra_Plot_Feedback = _kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM;
    7f56:	20 93 1b 16 	sts	0x161B, r18	; 0x80161b <_sRuble_Parameters+0xb6>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    7f5a:	82 e0       	ldi	r24, 0x02	; 2
    7f5c:	80 93 d4 0f 	sts	0x0FD4, r24	; 0x800fd4 <_sExtra_Plot+0x35>
						_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    7f60:	84 e0       	ldi	r24, 0x04	; 4
    7f62:	ba cf       	rjmp	.-140    	; 0x7ed8 <_Z17Blower_Monitoringh+0x3be>
					}
					else
					{
						_sSchedules.Blower_On_Retry = _kMAX_BLOWER_RETRY_TIME;
    7f64:	84 eb       	ldi	r24, 0xB4	; 180
    7f66:	80 93 5e 0b 	sts	0x0B5E, r24	; 0x800b5e <_sSchedules+0x26e>
    7f6a:	b8 cf       	rjmp	.-144    	; 0x7edc <_Z17Blower_Monitoringh+0x3c2>
					_sExtra_Plot[_kBLOWER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
				}
			}
		}
	}	
}
    7f6c:	1f 91       	pop	r17
    7f6e:	0f 91       	pop	r16
    7f70:	ff 90       	pop	r15
    7f72:	ef 90       	pop	r14
    7f74:	df 90       	pop	r13
    7f76:	cf 90       	pop	r12
    7f78:	08 95       	ret

00007f7a <_Z18Edited_In_Schedulev>:
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    7f7a:	cf 92       	push	r12
    7f7c:	df 92       	push	r13
    7f7e:	ef 92       	push	r14
    7f80:	ff 92       	push	r15
    7f82:	0f 93       	push	r16
    7f84:	1f 93       	push	r17
    7f86:	cf 93       	push	r28
    7f88:	df 93       	push	r29
	/* edit in the current schedule */
	/* edit in the current schedule */
	if(_sSchedules.Running_Schedule_At == 0)
    7f8a:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    7f8e:	81 11       	cpse	r24, r1
    7f90:	c8 c0       	rjmp	.+400    	; 0x8122 <_Z18Edited_In_Schedulev+0x1a8>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    7f92:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    7f96:	81 30       	cpi	r24, 0x01	; 1
    7f98:	51 f4       	brne	.+20     	; 0x7fae <_Z18Edited_In_Schedulev+0x34>
		{
			_kSERAIL_MON_WRITE("my 14");
    7f9a:	6c ec       	ldi	r22, 0xCC	; 204
    7f9c:	7e e0       	ldi	r23, 0x0E	; 14
    7f9e:	8f e6       	ldi	r24, 0x6F	; 111
    7fa0:	96 e1       	ldi	r25, 0x16	; 22
    7fa2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    7fa6:	8f e6       	ldi	r24, 0x6F	; 111
    7fa8:	96 e1       	ldi	r25, 0x16	; 22
    7faa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    7fae:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    7fb2:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    7fb6:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    7fba:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    7fbe:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    7fc2:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    7fc6:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    7fca:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    7fce:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    7fd2:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    7fd6:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
    7fda:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
    7fde:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
    7fe2:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
    7fe6:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
    7fea:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    7fee:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    7ff2:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    7ff6:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    7ffa:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    7ffe:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
		}
		
		//_sSchedules.Schedule_Start_From_Today = 1;
		
		if(_sSchedules.Schedule_Start_From_Today != 1)
    8002:	80 91 c4 0b 	lds	r24, 0x0BC4	; 0x800bc4 <_sSchedules+0x2d4>
    8006:	81 30       	cpi	r24, 0x01	; 1
    8008:	21 f0       	breq	.+8      	; 0x8012 <_Z18Edited_In_Schedulev+0x98>
		{
			Return_Calculated_Previous_Day_Date(1);
    800a:	81 e0       	ldi	r24, 0x01	; 1
    800c:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    8010:	18 c0       	rjmp	.+48     	; 0x8042 <_Z18Edited_In_Schedulev+0xc8>
		}
		else
		{
			_sSchedules.Temp_date  = _sRuble_Parameters.Update_Local_Date[0];
    8012:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8016:	80 93 be 0b 	sts	0x0BBE, r24	; 0x800bbe <_sSchedules+0x2ce>
			_sSchedules.Temp_Month = _sRuble_Parameters.Update_Local_Date[1];
    801a:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    801e:	80 93 bf 0b 	sts	0x0BBF, r24	; 0x800bbf <_sSchedules+0x2cf>
			_sSchedules.Started_Date = _sSchedules.Temp_date;
    8022:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8026:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
			_sSchedules.Started_Month = _sSchedules.Temp_Month;
    802a:	80 91 bf 0b 	lds	r24, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    802e:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
    8032:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8036:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
    803a:	80 91 bf 0b 	lds	r24, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    803e:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
		}
	}
}

unsigned char Edited_In_Schedule(void)
{
    8042:	c0 e0       	ldi	r28, 0x00	; 0
    8044:	d0 e0       	ldi	r29, 0x00	; 0
    8046:	e1 2c       	mov	r14, r1
    8048:	f1 2c       	mov	r15, r1
		}
		
		
		for(unsigned char index_num = 0; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
		{		
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    804a:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    804e:	87 01       	movw	r16, r14
    8050:	00 51       	subi	r16, 0x10	; 16
    8052:	17 4f       	sbci	r17, 0xF7	; 247
    8054:	68 01       	movw	r12, r16
    8056:	2b e5       	ldi	r18, 0x5B	; 91
    8058:	c2 0e       	add	r12, r18
    805a:	d1 1c       	adc	r13, r1
    805c:	f6 01       	movw	r30, r12
    805e:	80 83       	st	Z, r24
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8060:	80 91 bf 0b 	lds	r24, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    8064:	06 59       	subi	r16, 0x96	; 150
    8066:	1f 4f       	sbci	r17, 0xFF	; 255
    8068:	f8 01       	movw	r30, r16
    806a:	80 83       	st	Z, r24
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    806c:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8070:	90 e0       	ldi	r25, 0x00	; 0
    8072:	fe 01       	movw	r30, r28
    8074:	ee 0f       	add	r30, r30
    8076:	ff 1f       	adc	r31, r31
    8078:	e3 51       	subi	r30, 0x13	; 19
    807a:	f5 4f       	sbci	r31, 0xF5	; 245
    807c:	91 83       	std	Z+1, r25	; 0x01
    807e:	80 83       	st	Z, r24
    8080:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8084:	90 e0       	ldi	r25, 0x00	; 0
    8086:	fe 01       	movw	r30, r28
    8088:	ee 0f       	add	r30, r30
    808a:	ff 1f       	adc	r31, r31
    808c:	e1 51       	subi	r30, 0x11	; 17
    808e:	f5 4f       	sbci	r31, 0xF5	; 245
    8090:	91 83       	std	Z+1, r25	; 0x01
    8092:	80 83       	st	Z, r24
    8094:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8098:	90 e0       	ldi	r25, 0x00	; 0
    809a:	fe 01       	movw	r30, r28
    809c:	ee 0f       	add	r30, r30
    809e:	ff 1f       	adc	r31, r31
    80a0:	ef 50       	subi	r30, 0x0F	; 15
    80a2:	f5 4f       	sbci	r31, 0xF5	; 245
    80a4:	91 83       	std	Z+1, r25	; 0x01
    80a6:	80 83       	st	Z, r24
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    80a8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    80ac:	81 30       	cpi	r24, 0x01	; 1
    80ae:	e1 f4       	brne	.+56     	; 0x80e8 <_Z18Edited_In_Schedulev+0x16e>
			{
				Serial.println(F("Running list date "));
    80b0:	69 eb       	ldi	r22, 0xB9	; 185
    80b2:	7e e0       	ldi	r23, 0x0E	; 14
    80b4:	8f e6       	ldi	r24, 0x6F	; 111
    80b6:	96 e1       	ldi	r25, 0x16	; 22
    80b8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
    80bc:	f6 01       	movw	r30, r12
    80be:	60 81       	ld	r22, Z
    80c0:	4a e0       	ldi	r20, 0x0A	; 10
    80c2:	50 e0       	ldi	r21, 0x00	; 0
    80c4:	8f e6       	ldi	r24, 0x6F	; 111
    80c6:	96 e1       	ldi	r25, 0x16	; 22
    80c8:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				Serial.println(F("Running list month "));
    80cc:	65 ea       	ldi	r22, 0xA5	; 165
    80ce:	7e e0       	ldi	r23, 0x0E	; 14
    80d0:	8f e6       	ldi	r24, 0x6F	; 111
    80d2:	96 e1       	ldi	r25, 0x16	; 22
    80d4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
    80d8:	f8 01       	movw	r30, r16
    80da:	60 81       	ld	r22, Z
    80dc:	4a e0       	ldi	r20, 0x0A	; 10
    80de:	50 e0       	ldi	r21, 0x00	; 0
    80e0:	8f e6       	ldi	r24, 0x6F	; 111
    80e2:	96 e1       	ldi	r25, 0x16	; 22
    80e4:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
    80e8:	ff ef       	ldi	r31, 0xFF	; 255
    80ea:	ef 1a       	sub	r14, r31
    80ec:	ff 0a       	sbc	r15, r31
    80ee:	23 96       	adiw	r28, 0x03	; 3
			_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Temp_date;
			_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Temp_Month;
		}
		
		
		for(unsigned char index_num = 0; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
    80f0:	2e e0       	ldi	r18, 0x0E	; 14
    80f2:	e2 16       	cp	r14, r18
    80f4:	f1 04       	cpc	r15, r1
    80f6:	09 f0       	breq	.+2      	; 0x80fa <_Z18Edited_In_Schedulev+0x180>
    80f8:	a8 cf       	rjmp	.-176    	; 0x804a <_Z18Edited_In_Schedulev+0xd0>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run[index_num]);
				Serial.println(F("Running list month "));
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Scheduler_Already_Run_Month[index_num]);
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    80fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    80fe:	81 30       	cpi	r24, 0x01	; 1
    8100:	31 f4       	brne	.+12     	; 0x810e <_Z18Edited_In_Schedulev+0x194>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8102:	60 e6       	ldi	r22, 0x60	; 96
    8104:	7e e0       	ldi	r23, 0x0E	; 14
    8106:	8f e6       	ldi	r24, 0x6F	; 111
    8108:	96 e1       	ldi	r25, 0x16	; 22
    810a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    810e:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8112:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8116:	80 91 bf 0b 	lds	r24, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    811a:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
		return 1;
    811e:	81 e0       	ldi	r24, 0x01	; 1
    8120:	c0 c4       	rjmp	.+2432   	; 0x8aa2 <_Z18Edited_In_Schedulev+0xb28>
		/* add previous dates here */
	}
	
	if(_sSchedules.Scheduler_Retry_Timer == _kRESET && _sSchedules.Running_Schedule_At !=0)
    8122:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    8126:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    812a:	89 2b       	or	r24, r25
    812c:	09 f0       	breq	.+2      	; 0x8130 <_Z18Edited_In_Schedulev+0x1b6>
    812e:	18 c4       	rjmp	.+2096   	; 0x8960 <_Z18Edited_In_Schedulev+0x9e6>
    8130:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8134:	88 23       	and	r24, r24
    8136:	09 f4       	brne	.+2      	; 0x813a <_Z18Edited_In_Schedulev+0x1c0>
    8138:	13 c4       	rjmp	.+2086   	; 0x8960 <_Z18Edited_In_Schedulev+0x9e6>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    813a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    813e:	81 30       	cpi	r24, 0x01	; 1
    8140:	31 f4       	brne	.+12     	; 0x814e <_Z18Edited_In_Schedulev+0x1d4>
		{
			_kSERAIL_MON_WRITE("my 0");
    8142:	6b e5       	ldi	r22, 0x5B	; 91
    8144:	7e e0       	ldi	r23, 0x0E	; 14
    8146:	8f e6       	ldi	r24, 0x6F	; 111
    8148:	96 e1       	ldi	r25, 0x16	; 22
    814a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sSchedules.Back_Up_Running_Scheduler_Number)
    814e:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    8152:	88 23       	and	r24, r24
    8154:	09 f4       	brne	.+2      	; 0x8158 <_Z18Edited_In_Schedulev+0x1de>
    8156:	8f c4       	rjmp	.+2334   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    8158:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    815c:	81 30       	cpi	r24, 0x01	; 1
    815e:	31 f4       	brne	.+12     	; 0x816c <_Z18Edited_In_Schedulev+0x1f2>
			{
				_kSERAIL_MON_WRITE("my 1");
    8160:	66 e5       	ldi	r22, 0x56	; 86
    8162:	7e e0       	ldi	r23, 0x0E	; 14
    8164:	8f e6       	ldi	r24, 0x6F	; 111
    8166:	96 e1       	ldi	r25, 0x16	; 22
    8168:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			
			if(_sSchedules.Back_Up_Running_Schedule_Plot_Number)
    816c:	80 91 ab 0b 	lds	r24, 0x0BAB	; 0x800bab <_sSchedules+0x2bb>
    8170:	88 23       	and	r24, r24
    8172:	09 f4       	brne	.+2      	; 0x8176 <_Z18Edited_In_Schedulev+0x1fc>
    8174:	80 c4       	rjmp	.+2304   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8176:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    817a:	81 30       	cpi	r24, 0x01	; 1
    817c:	51 f5       	brne	.+84     	; 0x81d2 <_Z18Edited_In_Schedulev+0x258>
				{
					_kSERAIL_MON_WRITE("my 2");
    817e:	61 e5       	ldi	r22, 0x51	; 81
    8180:	7e e0       	ldi	r23, 0x0E	; 14
    8182:	8f e6       	ldi	r24, 0x6F	; 111
    8184:	96 e1       	ldi	r25, 0x16	; 22
    8186:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("Running schedule :");
    818a:	6e e3       	ldi	r22, 0x3E	; 62
    818c:	7e e0       	ldi	r23, 0x0E	; 14
    818e:	8f e6       	ldi	r24, 0x6F	; 111
    8190:	96 e1       	ldi	r25, 0x16	; 22
    8192:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8196:	8f e6       	ldi	r24, 0x6F	; 111
    8198:	96 e1       	ldi	r25, 0x16	; 22
    819a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Running_Schedule_At);
    819e:	60 91 b8 0b 	lds	r22, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    81a2:	4a e0       	ldi	r20, 0x0A	; 10
    81a4:	50 e0       	ldi	r21, 0x00	; 0
    81a6:	8f e6       	ldi	r24, 0x6F	; 111
    81a8:	96 e1       	ldi	r25, 0x16	; 22
    81aa:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
					_kSERAIL_MON_WRITE("Back up schedule :");
    81ae:	6b e2       	ldi	r22, 0x2B	; 43
    81b0:	7e e0       	ldi	r23, 0x0E	; 14
    81b2:	8f e6       	ldi	r24, 0x6F	; 111
    81b4:	96 e1       	ldi	r25, 0x16	; 22
    81b6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    81ba:	8f e6       	ldi	r24, 0x6F	; 111
    81bc:	96 e1       	ldi	r25, 0x16	; 22
    81be:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_PRINT_NUM(_sSchedules.Back_Up_Running_Scheduler_Number);
    81c2:	60 91 aa 0b 	lds	r22, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    81c6:	4a e0       	ldi	r20, 0x0A	; 10
    81c8:	50 e0       	ldi	r21, 0x00	; 0
    81ca:	8f e6       	ldi	r24, 0x6F	; 111
    81cc:	96 e1       	ldi	r25, 0x16	; 22
    81ce:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				}
				
				if(_sSchedules.Running_Schedule_At == _sSchedules.Back_Up_Running_Scheduler_Number)
    81d2:	20 91 b8 0b 	lds	r18, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    81d6:	90 91 aa 0b 	lds	r25, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    81da:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    81de:	29 13       	cpse	r18, r25
    81e0:	1f c1       	rjmp	.+574    	; 0x8420 <_Z18Edited_In_Schedulev+0x4a6>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    81e2:	81 30       	cpi	r24, 0x01	; 1
    81e4:	51 f4       	brne	.+20     	; 0x81fa <_Z18Edited_In_Schedulev+0x280>
					{
						_kSERAIL_MON_WRITE("my 3");
    81e6:	66 e2       	ldi	r22, 0x26	; 38
    81e8:	7e e0       	ldi	r23, 0x0E	; 14
    81ea:	8f e6       	ldi	r24, 0x6F	; 111
    81ec:	96 e1       	ldi	r25, 0x16	; 22
    81ee:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    81f2:	8f e6       	ldi	r24, 0x6F	; 111
    81f4:	96 e1       	ldi	r25, 0x16	; 22
    81f6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    81fa:	e0 91 aa 0b 	lds	r30, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    81fe:	f0 e0       	ldi	r31, 0x00	; 0
    8200:	e5 5c       	subi	r30, 0xC5	; 197
    8202:	f6 4f       	sbci	r31, 0xF6	; 246
    8204:	90 81       	ld	r25, Z
    8206:	80 91 ab 0b 	lds	r24, 0x0BAB	; 0x800bab <_sSchedules+0x2bb>
					|| _sSchedules.Running_Schedule_At == _kRESET)
    820a:	98 13       	cpse	r25, r24
    820c:	04 c0       	rjmp	.+8      	; 0x8216 <_Z18Edited_In_Schedulev+0x29c>
    820e:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8212:	81 11       	cpse	r24, r1
    8214:	41 c0       	rjmp	.+130    	; 0x8298 <_Z18Edited_In_Schedulev+0x31e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8216:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    821a:	81 30       	cpi	r24, 0x01	; 1
    821c:	51 f4       	brne	.+20     	; 0x8232 <_Z18Edited_In_Schedulev+0x2b8>
						{
							_kSERAIL_MON_WRITE("my 4");
    821e:	61 e2       	ldi	r22, 0x21	; 33
    8220:	7e e0       	ldi	r23, 0x0E	; 14
    8222:	8f e6       	ldi	r24, 0x6F	; 111
    8224:	96 e1       	ldi	r25, 0x16	; 22
    8226:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    822a:	8f e6       	ldi	r24, 0x6F	; 111
    822c:	96 e1       	ldi	r25, 0x16	; 22
    822e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Running_Schedule_At != _kRESET)
    8232:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8236:	88 23       	and	r24, r24
    8238:	09 f4       	brne	.+2      	; 0x823c <_Z18Edited_In_Schedulev+0x2c2>
    823a:	2a c4       	rjmp	.+2132   	; 0x8a90 <_Z18Edited_In_Schedulev+0xb16>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    823c:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    8240:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <_sSchedules+0x3>
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8244:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
						_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8248:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
						_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    824c:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    8250:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
						
						for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
						{
							_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8254:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    8258:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    825c:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    8260:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    8264:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    8268:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
						}
				
						for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    826c:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
    8270:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
    8274:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
    8278:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
    827c:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
    8280:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
						}
				
						_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8284:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    8288:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
						for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
						{
							_sSchedules.Running_Tank[tank_number] = _kOFF;
    828c:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    8290:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    8294:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
    8298:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    829c:	82 30       	cpi	r24, 0x02	; 2
    829e:	08 f4       	brcc	.+2      	; 0x82a2 <_Z18Edited_In_Schedulev+0x328>
    82a0:	82 c0       	rjmp	.+260    	; 0x83a6 <_Z18Edited_In_Schedulev+0x42c>
    82a2:	40 e0       	ldi	r20, 0x00	; 0
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    82a4:	84 2f       	mov	r24, r20
    82a6:	90 e0       	ldi	r25, 0x00	; 0
    82a8:	20 91 b8 0b 	lds	r18, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    82ac:	30 e0       	ldi	r19, 0x00	; 0
    82ae:	21 50       	subi	r18, 0x01	; 1
    82b0:	31 09       	sbc	r19, r1
    82b2:	82 17       	cp	r24, r18
    82b4:	93 07       	cpc	r25, r19
    82b6:	84 f5       	brge	.+96     	; 0x8318 <_Z18Edited_In_Schedulev+0x39e>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    82b8:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    82bc:	80 51       	subi	r24, 0x10	; 16
    82be:	97 4f       	sbci	r25, 0xF7	; 247
    82c0:	fc 01       	movw	r30, r24
    82c2:	e5 5a       	subi	r30, 0xA5	; 165
    82c4:	ff 4f       	sbci	r31, 0xFF	; 255
    82c6:	20 83       	st	Z, r18
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    82c8:	20 91 fd 08 	lds	r18, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    82cc:	3f 96       	adiw	r30, 0x0f	; 15
    82ce:	20 83       	st	Z, r18
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    82d0:	e3 e0       	ldi	r30, 0x03	; 3
    82d2:	4e 9f       	mul	r20, r30
    82d4:	c0 01       	movw	r24, r0
    82d6:	11 24       	eor	r1, r1
    82d8:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    82dc:	30 e0       	ldi	r19, 0x00	; 0
    82de:	fc 01       	movw	r30, r24
    82e0:	ee 0f       	add	r30, r30
    82e2:	ff 1f       	adc	r31, r31
    82e4:	e3 51       	subi	r30, 0x13	; 19
    82e6:	f5 4f       	sbci	r31, 0xF5	; 245
    82e8:	31 83       	std	Z+1, r19	; 0x01
    82ea:	20 83       	st	Z, r18
    82ec:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    82f0:	30 e0       	ldi	r19, 0x00	; 0
    82f2:	fc 01       	movw	r30, r24
    82f4:	ee 0f       	add	r30, r30
    82f6:	ff 1f       	adc	r31, r31
    82f8:	e1 51       	subi	r30, 0x11	; 17
    82fa:	f5 4f       	sbci	r31, 0xF5	; 245
    82fc:	31 83       	std	Z+1, r19	; 0x01
    82fe:	20 83       	st	Z, r18
    8300:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8304:	30 e0       	ldi	r19, 0x00	; 0
    8306:	88 0f       	add	r24, r24
    8308:	99 1f       	adc	r25, r25
    830a:	fc 01       	movw	r30, r24
    830c:	ef 50       	subi	r30, 0x0F	; 15
    830e:	f5 4f       	sbci	r31, 0xF5	; 245
    8310:	31 83       	std	Z+1, r19	; 0x01
    8312:	20 83       	st	Z, r18
						}
					}
					
					if(_sSchedules.Running_Schedule_At > 1)
					{
						for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8314:	4f 5f       	subi	r20, 0xFF	; 255
    8316:	c6 cf       	rjmp	.-116    	; 0x82a4 <_Z18Edited_In_Schedulev+0x32a>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    8318:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    831c:	81 50       	subi	r24, 0x01	; 1
    831e:	8f 30       	cpi	r24, 0x0F	; 15
    8320:	90 f5       	brcc	.+100    	; 0x8386 <_Z18Edited_In_Schedulev+0x40c>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8322:	28 2f       	mov	r18, r24
    8324:	30 e0       	ldi	r19, 0x00	; 0
    8326:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    832a:	20 51       	subi	r18, 0x10	; 16
    832c:	37 4f       	sbci	r19, 0xF7	; 247
    832e:	f9 01       	movw	r30, r18
    8330:	e5 5a       	subi	r30, 0xA5	; 165
    8332:	ff 4f       	sbci	r31, 0xFF	; 255
    8334:	90 83       	st	Z, r25
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8336:	90 91 fb 08 	lds	r25, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    833a:	3f 96       	adiw	r30, 0x0f	; 15
    833c:	90 83       	st	Z, r25
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    833e:	f3 e0       	ldi	r31, 0x03	; 3
    8340:	8f 9f       	mul	r24, r31
    8342:	90 01       	movw	r18, r0
    8344:	11 24       	eor	r1, r1
    8346:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    834a:	50 e0       	ldi	r21, 0x00	; 0
    834c:	f9 01       	movw	r30, r18
    834e:	ee 0f       	add	r30, r30
    8350:	ff 1f       	adc	r31, r31
    8352:	e3 51       	subi	r30, 0x13	; 19
    8354:	f5 4f       	sbci	r31, 0xF5	; 245
    8356:	51 83       	std	Z+1, r21	; 0x01
    8358:	40 83       	st	Z, r20
    835a:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    835e:	50 e0       	ldi	r21, 0x00	; 0
    8360:	f9 01       	movw	r30, r18
    8362:	ee 0f       	add	r30, r30
    8364:	ff 1f       	adc	r31, r31
    8366:	e1 51       	subi	r30, 0x11	; 17
    8368:	f5 4f       	sbci	r31, 0xF5	; 245
    836a:	51 83       	std	Z+1, r21	; 0x01
    836c:	40 83       	st	Z, r20
    836e:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    8372:	50 e0       	ldi	r21, 0x00	; 0
    8374:	22 0f       	add	r18, r18
    8376:	33 1f       	adc	r19, r19
    8378:	f9 01       	movw	r30, r18
    837a:	ef 50       	subi	r30, 0x0F	; 15
    837c:	f5 4f       	sbci	r31, 0xF5	; 245
    837e:	51 83       	std	Z+1, r21	; 0x01
    8380:	40 83       	st	Z, r20
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
							}
						}
						for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    8382:	8f 5f       	subi	r24, 0xFF	; 255
    8384:	cc cf       	rjmp	.-104    	; 0x831e <_Z18Edited_In_Schedulev+0x3a4>
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
							}
						}
						_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8386:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    838a:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    838e:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    8392:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8396:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    839a:	81 30       	cpi	r24, 0x01	; 1
    839c:	09 f0       	breq	.+2      	; 0x83a0 <_Z18Edited_In_Schedulev+0x426>
    839e:	6b c3       	rjmp	.+1750   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
						{
							_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 3//// :");
    83a0:	6f ee       	ldi	r22, 0xEF	; 239
    83a2:	7d e0       	ldi	r23, 0x0D	; 13
    83a4:	45 c1       	rjmp	.+650    	; 0x8630 <_Z18Edited_In_Schedulev+0x6b6>
							_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
							_kSERIAL_MON_CLEAR();
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
    83a6:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    83aa:	81 30       	cpi	r24, 0x01	; 1
    83ac:	09 f0       	breq	.+2      	; 0x83b0 <_Z18Edited_In_Schedulev+0x436>
    83ae:	63 c3       	rjmp	.+1734   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
					{
						Return_Calculated_Previous_Day_Date(1);
    83b0:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    83b4:	80 e0       	ldi	r24, 0x00	; 0
    83b6:	90 e0       	ldi	r25, 0x00	; 0
    83b8:	20 e0       	ldi	r18, 0x00	; 0
    83ba:	30 e0       	ldi	r19, 0x00	; 0
						for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    83bc:	60 91 be 0b 	lds	r22, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    83c0:	a9 01       	movw	r20, r18
    83c2:	40 51       	subi	r20, 0x10	; 16
    83c4:	57 4f       	sbci	r21, 0xF7	; 247
    83c6:	fa 01       	movw	r30, r20
    83c8:	e5 5a       	subi	r30, 0xA5	; 165
    83ca:	ff 4f       	sbci	r31, 0xFF	; 255
    83cc:	60 83       	st	Z, r22
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    83ce:	60 91 bf 0b 	lds	r22, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    83d2:	3f 96       	adiw	r30, 0x0f	; 15
    83d4:	60 83       	st	Z, r22
							
							for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    83d6:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    83da:	50 e0       	ldi	r21, 0x00	; 0
    83dc:	fc 01       	movw	r30, r24
    83de:	ee 0f       	add	r30, r30
    83e0:	ff 1f       	adc	r31, r31
    83e2:	e3 51       	subi	r30, 0x13	; 19
    83e4:	f5 4f       	sbci	r31, 0xF5	; 245
    83e6:	51 83       	std	Z+1, r21	; 0x01
    83e8:	40 83       	st	Z, r20
    83ea:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    83ee:	50 e0       	ldi	r21, 0x00	; 0
    83f0:	fc 01       	movw	r30, r24
    83f2:	ee 0f       	add	r30, r30
    83f4:	ff 1f       	adc	r31, r31
    83f6:	e1 51       	subi	r30, 0x11	; 17
    83f8:	f5 4f       	sbci	r31, 0xF5	; 245
    83fa:	51 83       	std	Z+1, r21	; 0x01
    83fc:	40 83       	st	Z, r20
    83fe:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8402:	50 e0       	ldi	r21, 0x00	; 0
    8404:	fc 01       	movw	r30, r24
    8406:	ee 0f       	add	r30, r30
    8408:	ff 1f       	adc	r31, r31
    840a:	ef 50       	subi	r30, 0x0F	; 15
    840c:	f5 4f       	sbci	r31, 0xF5	; 245
    840e:	51 83       	std	Z+1, r21	; 0x01
    8410:	40 83       	st	Z, r20
    8412:	2f 5f       	subi	r18, 0xFF	; 255
    8414:	3f 4f       	sbci	r19, 0xFF	; 255
    8416:	03 96       	adiw	r24, 0x03	; 3
						}
					}
					else if(_sSchedules.Running_Schedule_At == 1)
					{
						Return_Calculated_Previous_Day_Date(1);
						for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8418:	2f 30       	cpi	r18, 0x0F	; 15
    841a:	31 05       	cpc	r19, r1
    841c:	79 f6       	brne	.-98     	; 0x83bc <_Z18Edited_In_Schedulev+0x442>
    841e:	23 c3       	rjmp	.+1606   	; 0x8a66 <_Z18Edited_In_Schedulev+0xaec>
						_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
					}
				}
				else 
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8420:	81 30       	cpi	r24, 0x01	; 1
    8422:	51 f4       	brne	.+20     	; 0x8438 <_Z18Edited_In_Schedulev+0x4be>
					{
						_kSERAIL_MON_WRITE("my 5");
    8424:	6a ee       	ldi	r22, 0xEA	; 234
    8426:	7d e0       	ldi	r23, 0x0D	; 13
    8428:	8f e6       	ldi	r24, 0x6F	; 111
    842a:	96 e1       	ldi	r25, 0x16	; 22
    842c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8430:	8f e6       	ldi	r24, 0x6F	; 111
    8432:	96 e1       	ldi	r25, 0x16	; 22
    8434:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Running_Schedule_At < _sSchedules.Back_Up_Running_Scheduler_Number)
    8438:	90 91 b8 0b 	lds	r25, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    843c:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    8440:	98 17       	cp	r25, r24
    8442:	08 f0       	brcs	.+2      	; 0x8446 <_Z18Edited_In_Schedulev+0x4cc>
    8444:	43 c1       	rjmp	.+646    	; 0x86cc <_Z18Edited_In_Schedulev+0x752>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8446:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    844a:	81 30       	cpi	r24, 0x01	; 1
    844c:	51 f4       	brne	.+20     	; 0x8462 <_Z18Edited_In_Schedulev+0x4e8>
						{
							_kSERAIL_MON_WRITE("my 6");
    844e:	65 ee       	ldi	r22, 0xE5	; 229
    8450:	7d e0       	ldi	r23, 0x0D	; 13
    8452:	8f e6       	ldi	r24, 0x6F	; 111
    8454:	96 e1       	ldi	r25, 0x16	; 22
    8456:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    845a:	8f e6       	ldi	r24, 0x6F	; 111
    845c:	96 e1       	ldi	r25, 0x16	; 22
    845e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    8462:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8466:	80 93 aa 0b 	sts	0x0BAA, r24	; 0x800baa <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    846a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    846e:	81 30       	cpi	r24, 0x01	; 1
    8470:	51 f4       	brne	.+20     	; 0x8486 <_Z18Edited_In_Schedulev+0x50c>
						{
							_kSERAIL_MON_WRITE("my 6.1");
    8472:	6e ed       	ldi	r22, 0xDE	; 222
    8474:	7d e0       	ldi	r23, 0x0D	; 13
    8476:	8f e6       	ldi	r24, 0x6F	; 111
    8478:	96 e1       	ldi	r25, 0x16	; 22
    847a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    847e:	8f e6       	ldi	r24, 0x6F	; 111
    8480:	96 e1       	ldi	r25, 0x16	; 22
    8482:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    8486:	e0 91 aa 0b 	lds	r30, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    848a:	f0 e0       	ldi	r31, 0x00	; 0
    848c:	e5 5c       	subi	r30, 0xC5	; 197
    848e:	f6 4f       	sbci	r31, 0xF6	; 246
    8490:	90 81       	ld	r25, Z
    8492:	80 91 ab 0b 	lds	r24, 0x0BAB	; 0x800bab <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    8496:	98 13       	cpse	r25, r24
    8498:	04 c0       	rjmp	.+8      	; 0x84a2 <_Z18Edited_In_Schedulev+0x528>
    849a:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    849e:	81 11       	cpse	r24, r1
    84a0:	41 c0       	rjmp	.+130    	; 0x8524 <_Z18Edited_In_Schedulev+0x5aa>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    84a2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    84a6:	81 30       	cpi	r24, 0x01	; 1
    84a8:	51 f4       	brne	.+20     	; 0x84be <_Z18Edited_In_Schedulev+0x544>
							{
								_kSERAIL_MON_WRITE("my 6.2");
    84aa:	67 ed       	ldi	r22, 0xD7	; 215
    84ac:	7d e0       	ldi	r23, 0x0D	; 13
    84ae:	8f e6       	ldi	r24, 0x6F	; 111
    84b0:	96 e1       	ldi	r25, 0x16	; 22
    84b2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    84b6:	8f e6       	ldi	r24, 0x6F	; 111
    84b8:	96 e1       	ldi	r25, 0x16	; 22
    84ba:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    84be:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    84c2:	88 23       	and	r24, r24
    84c4:	09 f4       	brne	.+2      	; 0x84c8 <_Z18Edited_In_Schedulev+0x54e>
    84c6:	e7 c2       	rjmp	.+1486   	; 0x8a96 <_Z18Edited_In_Schedulev+0xb1c>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    84c8:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    84cc:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    84d0:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    84d4:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    84d8:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    84dc:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    84e0:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    84e4:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    84e8:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    84ec:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    84f0:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    84f4:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    84f8:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
    84fc:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
    8500:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
    8504:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
    8508:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
    850c:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8510:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    8514:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    8518:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    851c:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    8520:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    8524:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8528:	82 30       	cpi	r24, 0x02	; 2
    852a:	08 f4       	brcc	.+2      	; 0x852e <_Z18Edited_In_Schedulev+0x5b4>
    852c:	92 c0       	rjmp	.+292    	; 0x8652 <_Z18Edited_In_Schedulev+0x6d8>
    852e:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8530:	84 2f       	mov	r24, r20
    8532:	90 e0       	ldi	r25, 0x00	; 0
    8534:	20 91 b8 0b 	lds	r18, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8538:	30 e0       	ldi	r19, 0x00	; 0
    853a:	21 50       	subi	r18, 0x01	; 1
    853c:	31 09       	sbc	r19, r1
    853e:	82 17       	cp	r24, r18
    8540:	93 07       	cpc	r25, r19
    8542:	84 f5       	brge	.+96     	; 0x85a4 <_Z18Edited_In_Schedulev+0x62a>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    8544:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8548:	80 51       	subi	r24, 0x10	; 16
    854a:	97 4f       	sbci	r25, 0xF7	; 247
    854c:	fc 01       	movw	r30, r24
    854e:	e5 5a       	subi	r30, 0xA5	; 165
    8550:	ff 4f       	sbci	r31, 0xFF	; 255
    8552:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    8554:	20 91 fd 08 	lds	r18, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    8558:	3f 96       	adiw	r30, 0x0f	; 15
    855a:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    855c:	23 e0       	ldi	r18, 0x03	; 3
    855e:	42 9f       	mul	r20, r18
    8560:	c0 01       	movw	r24, r0
    8562:	11 24       	eor	r1, r1
    8564:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8568:	30 e0       	ldi	r19, 0x00	; 0
    856a:	fc 01       	movw	r30, r24
    856c:	ee 0f       	add	r30, r30
    856e:	ff 1f       	adc	r31, r31
    8570:	e3 51       	subi	r30, 0x13	; 19
    8572:	f5 4f       	sbci	r31, 0xF5	; 245
    8574:	31 83       	std	Z+1, r19	; 0x01
    8576:	20 83       	st	Z, r18
    8578:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    857c:	30 e0       	ldi	r19, 0x00	; 0
    857e:	fc 01       	movw	r30, r24
    8580:	ee 0f       	add	r30, r30
    8582:	ff 1f       	adc	r31, r31
    8584:	e1 51       	subi	r30, 0x11	; 17
    8586:	f5 4f       	sbci	r31, 0xF5	; 245
    8588:	31 83       	std	Z+1, r19	; 0x01
    858a:	20 83       	st	Z, r18
    858c:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8590:	30 e0       	ldi	r19, 0x00	; 0
    8592:	88 0f       	add	r24, r24
    8594:	99 1f       	adc	r25, r25
    8596:	fc 01       	movw	r30, r24
    8598:	ef 50       	subi	r30, 0x0F	; 15
    859a:	f5 4f       	sbci	r31, 0xF5	; 245
    859c:	31 83       	std	Z+1, r19	; 0x01
    859e:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    85a0:	4f 5f       	subi	r20, 0xFF	; 255
    85a2:	c6 cf       	rjmp	.-116    	; 0x8530 <_Z18Edited_In_Schedulev+0x5b6>
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    85a4:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    85a8:	81 50       	subi	r24, 0x01	; 1
    85aa:	8f 30       	cpi	r24, 0x0F	; 15
    85ac:	90 f5       	brcc	.+100    	; 0x8612 <_Z18Edited_In_Schedulev+0x698>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    85ae:	28 2f       	mov	r18, r24
    85b0:	30 e0       	ldi	r19, 0x00	; 0
    85b2:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    85b6:	20 51       	subi	r18, 0x10	; 16
    85b8:	37 4f       	sbci	r19, 0xF7	; 247
    85ba:	f9 01       	movw	r30, r18
    85bc:	e5 5a       	subi	r30, 0xA5	; 165
    85be:	ff 4f       	sbci	r31, 0xFF	; 255
    85c0:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    85c2:	90 91 fb 08 	lds	r25, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    85c6:	3f 96       	adiw	r30, 0x0f	; 15
    85c8:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    85ca:	93 e0       	ldi	r25, 0x03	; 3
    85cc:	89 9f       	mul	r24, r25
    85ce:	90 01       	movw	r18, r0
    85d0:	11 24       	eor	r1, r1
    85d2:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    85d6:	50 e0       	ldi	r21, 0x00	; 0
    85d8:	f9 01       	movw	r30, r18
    85da:	ee 0f       	add	r30, r30
    85dc:	ff 1f       	adc	r31, r31
    85de:	e3 51       	subi	r30, 0x13	; 19
    85e0:	f5 4f       	sbci	r31, 0xF5	; 245
    85e2:	51 83       	std	Z+1, r21	; 0x01
    85e4:	40 83       	st	Z, r20
    85e6:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    85ea:	50 e0       	ldi	r21, 0x00	; 0
    85ec:	f9 01       	movw	r30, r18
    85ee:	ee 0f       	add	r30, r30
    85f0:	ff 1f       	adc	r31, r31
    85f2:	e1 51       	subi	r30, 0x11	; 17
    85f4:	f5 4f       	sbci	r31, 0xF5	; 245
    85f6:	51 83       	std	Z+1, r21	; 0x01
    85f8:	40 83       	st	Z, r20
    85fa:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    85fe:	50 e0       	ldi	r21, 0x00	; 0
    8600:	22 0f       	add	r18, r18
    8602:	33 1f       	adc	r19, r19
    8604:	f9 01       	movw	r30, r18
    8606:	ef 50       	subi	r30, 0x0F	; 15
    8608:	f5 4f       	sbci	r31, 0xF5	; 245
    860a:	51 83       	std	Z+1, r21	; 0x01
    860c:	40 83       	st	Z, r20
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    860e:	8f 5f       	subi	r24, 0xFF	; 255
    8610:	cc cf       	rjmp	.-104    	; 0x85aa <_Z18Edited_In_Schedulev+0x630>
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    8612:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8616:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    861a:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    861e:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8622:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8626:	81 30       	cpi	r24, 0x01	; 1
    8628:	09 f0       	breq	.+2      	; 0x862c <_Z18Edited_In_Schedulev+0x6b2>
    862a:	25 c2       	rjmp	.+1098   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 1//// :");
    862c:	65 ea       	ldi	r22, 0xA5	; 165
    862e:	7d e0       	ldi	r23, 0x0D	; 13
    8630:	8f e6       	ldi	r24, 0x6F	; 111
    8632:	96 e1       	ldi	r25, 0x16	; 22
    8634:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    8638:	60 91 c0 0b 	lds	r22, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    863c:	4a e0       	ldi	r20, 0x0A	; 10
    863e:	50 e0       	ldi	r21, 0x00	; 0
    8640:	8f e6       	ldi	r24, 0x6F	; 111
    8642:	96 e1       	ldi	r25, 0x16	; 22
    8644:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
								_kSERIAL_MON_CLEAR();
    8648:	8f e6       	ldi	r24, 0x6F	; 111
    864a:	96 e1       	ldi	r25, 0x16	; 22
    864c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    8650:	12 c2       	rjmp	.+1060   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    8652:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8656:	81 30       	cpi	r24, 0x01	; 1
    8658:	09 f0       	breq	.+2      	; 0x865c <_Z18Edited_In_Schedulev+0x6e2>
    865a:	0d c2       	rjmp	.+1050   	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    865c:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    8660:	80 e0       	ldi	r24, 0x00	; 0
    8662:	90 e0       	ldi	r25, 0x00	; 0
    8664:	20 e0       	ldi	r18, 0x00	; 0
    8666:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    8668:	60 91 be 0b 	lds	r22, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    866c:	a9 01       	movw	r20, r18
    866e:	40 51       	subi	r20, 0x10	; 16
    8670:	57 4f       	sbci	r21, 0xF7	; 247
    8672:	fa 01       	movw	r30, r20
    8674:	e5 5a       	subi	r30, 0xA5	; 165
    8676:	ff 4f       	sbci	r31, 0xFF	; 255
    8678:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    867a:	60 91 bf 0b 	lds	r22, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    867e:	3f 96       	adiw	r30, 0x0f	; 15
    8680:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8682:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8686:	50 e0       	ldi	r21, 0x00	; 0
    8688:	fc 01       	movw	r30, r24
    868a:	ee 0f       	add	r30, r30
    868c:	ff 1f       	adc	r31, r31
    868e:	e3 51       	subi	r30, 0x13	; 19
    8690:	f5 4f       	sbci	r31, 0xF5	; 245
    8692:	51 83       	std	Z+1, r21	; 0x01
    8694:	40 83       	st	Z, r20
    8696:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    869a:	50 e0       	ldi	r21, 0x00	; 0
    869c:	fc 01       	movw	r30, r24
    869e:	ee 0f       	add	r30, r30
    86a0:	ff 1f       	adc	r31, r31
    86a2:	e1 51       	subi	r30, 0x11	; 17
    86a4:	f5 4f       	sbci	r31, 0xF5	; 245
    86a6:	51 83       	std	Z+1, r21	; 0x01
    86a8:	40 83       	st	Z, r20
    86aa:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    86ae:	50 e0       	ldi	r21, 0x00	; 0
    86b0:	fc 01       	movw	r30, r24
    86b2:	ee 0f       	add	r30, r30
    86b4:	ff 1f       	adc	r31, r31
    86b6:	ef 50       	subi	r30, 0x0F	; 15
    86b8:	f5 4f       	sbci	r31, 0xF5	; 245
    86ba:	51 83       	std	Z+1, r21	; 0x01
    86bc:	40 83       	st	Z, r20
    86be:	2f 5f       	subi	r18, 0xFF	; 255
    86c0:	3f 4f       	sbci	r19, 0xFF	; 255
    86c2:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    86c4:	2f 30       	cpi	r18, 0x0F	; 15
    86c6:	31 05       	cpc	r19, r1
    86c8:	79 f6       	brne	.-98     	; 0x8668 <_Z18Edited_In_Schedulev+0x6ee>
    86ca:	cd c1       	rjmp	.+922    	; 0x8a66 <_Z18Edited_In_Schedulev+0xaec>
							_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
						}
						
					}
					
					else if(_sSchedules.Running_Schedule_At > _sSchedules.Back_Up_Running_Scheduler_Number)
    86cc:	90 91 b8 0b 	lds	r25, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    86d0:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    86d4:	89 17       	cp	r24, r25
    86d6:	08 f0       	brcs	.+2      	; 0x86da <_Z18Edited_In_Schedulev+0x760>
    86d8:	ce c1       	rjmp	.+924    	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    86da:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    86de:	81 30       	cpi	r24, 0x01	; 1
    86e0:	51 f4       	brne	.+20     	; 0x86f6 <_Z18Edited_In_Schedulev+0x77c>
						{
							_kSERAIL_MON_WRITE("my 7");
    86e2:	60 ea       	ldi	r22, 0xA0	; 160
    86e4:	7d e0       	ldi	r23, 0x0D	; 13
    86e6:	8f e6       	ldi	r24, 0x6F	; 111
    86e8:	96 e1       	ldi	r25, 0x16	; 22
    86ea:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    86ee:	8f e6       	ldi	r24, 0x6F	; 111
    86f0:	96 e1       	ldi	r25, 0x16	; 22
    86f2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Running_Schedule_At;
    86f6:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    86fa:	80 93 aa 0b 	sts	0x0BAA, r24	; 0x800baa <_sSchedules+0x2ba>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    86fe:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8702:	81 30       	cpi	r24, 0x01	; 1
    8704:	51 f4       	brne	.+20     	; 0x871a <_Z18Edited_In_Schedulev+0x7a0>
						{
							_kSERAIL_MON_WRITE("my 8");
    8706:	6b e9       	ldi	r22, 0x9B	; 155
    8708:	7d e0       	ldi	r23, 0x0D	; 13
    870a:	8f e6       	ldi	r24, 0x6F	; 111
    870c:	96 e1       	ldi	r25, 0x16	; 22
    870e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8712:	8f e6       	ldi	r24, 0x6F	; 111
    8714:	96 e1       	ldi	r25, 0x16	; 22
    8716:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						if(_sSchedules.Schedule_Num_List[_sSchedules.Back_Up_Running_Scheduler_Number-1] != _sSchedules.Back_Up_Running_Schedule_Plot_Number
    871a:	e0 91 aa 0b 	lds	r30, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    871e:	f0 e0       	ldi	r31, 0x00	; 0
    8720:	e5 5c       	subi	r30, 0xC5	; 197
    8722:	f6 4f       	sbci	r31, 0xF6	; 246
    8724:	90 81       	ld	r25, Z
    8726:	80 91 ab 0b 	lds	r24, 0x0BAB	; 0x800bab <_sSchedules+0x2bb>
						|| _sSchedules.Running_Schedule_At == _kRESET)
    872a:	98 13       	cpse	r25, r24
    872c:	04 c0       	rjmp	.+8      	; 0x8736 <_Z18Edited_In_Schedulev+0x7bc>
    872e:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8732:	81 11       	cpse	r24, r1
    8734:	41 c0       	rjmp	.+130    	; 0x87b8 <_Z18Edited_In_Schedulev+0x83e>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    8736:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    873a:	81 30       	cpi	r24, 0x01	; 1
    873c:	51 f4       	brne	.+20     	; 0x8752 <_Z18Edited_In_Schedulev+0x7d8>
							{
								_kSERAIL_MON_WRITE("my 9");
    873e:	66 e9       	ldi	r22, 0x96	; 150
    8740:	7d e0       	ldi	r23, 0x0D	; 13
    8742:	8f e6       	ldi	r24, 0x6F	; 111
    8744:	96 e1       	ldi	r25, 0x16	; 22
    8746:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    874a:	8f e6       	ldi	r24, 0x6F	; 111
    874c:	96 e1       	ldi	r25, 0x16	; 22
    874e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							if(_sSchedules.Running_Schedule_At != _kRESET)
    8752:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8756:	88 23       	and	r24, r24
    8758:	09 f4       	brne	.+2      	; 0x875c <_Z18Edited_In_Schedulev+0x7e2>
    875a:	a0 c1       	rjmp	.+832    	; 0x8a9c <_Z18Edited_In_Schedulev+0xb22>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
    875c:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    8760:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <_sSchedules+0x3>
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							}
							
							_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    8764:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8768:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    876c:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    8770:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    8774:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    8778:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    877c:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    8780:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    8784:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    8788:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
							}
							
							for(unsigned char tank_number=0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    878c:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
    8790:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
    8794:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
    8798:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
    879c:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
    87a0:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
							}
							
							_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    87a4:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    87a8:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
							for(unsigned char tank_number=0; tank_number < _kMAX_FERTILIZER_TANK;tank_number++)
							{
								_sSchedules.Running_Tank[tank_number] = _kOFF;
    87ac:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    87b0:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    87b4:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
    87b8:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    87bc:	82 30       	cpi	r24, 0x02	; 2
    87be:	08 f4       	brcc	.+2      	; 0x87c2 <_Z18Edited_In_Schedulev+0x848>
    87c0:	92 c0       	rjmp	.+292    	; 0x88e6 <_Z18Edited_In_Schedulev+0x96c>
    87c2:	40 e0       	ldi	r20, 0x00	; 0
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    87c4:	84 2f       	mov	r24, r20
    87c6:	90 e0       	ldi	r25, 0x00	; 0
    87c8:	20 91 b8 0b 	lds	r18, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    87cc:	30 e0       	ldi	r19, 0x00	; 0
    87ce:	21 50       	subi	r18, 0x01	; 1
    87d0:	31 09       	sbc	r19, r1
    87d2:	82 17       	cp	r24, r18
    87d4:	93 07       	cpc	r25, r19
    87d6:	84 f5       	brge	.+96     	; 0x8838 <_Z18Edited_In_Schedulev+0x8be>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
    87d8:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    87dc:	80 51       	subi	r24, 0x10	; 16
    87de:	97 4f       	sbci	r25, 0xF7	; 247
    87e0:	fc 01       	movw	r30, r24
    87e2:	e5 5a       	subi	r30, 0xA5	; 165
    87e4:	ff 4f       	sbci	r31, 0xFF	; 255
    87e6:	20 83       	st	Z, r18
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
    87e8:	20 91 fd 08 	lds	r18, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    87ec:	3f 96       	adiw	r30, 0x0f	; 15
    87ee:	20 83       	st	Z, r18
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    87f0:	e3 e0       	ldi	r30, 0x03	; 3
    87f2:	4e 9f       	mul	r20, r30
    87f4:	c0 01       	movw	r24, r0
    87f6:	11 24       	eor	r1, r1
    87f8:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    87fc:	30 e0       	ldi	r19, 0x00	; 0
    87fe:	fc 01       	movw	r30, r24
    8800:	ee 0f       	add	r30, r30
    8802:	ff 1f       	adc	r31, r31
    8804:	e3 51       	subi	r30, 0x13	; 19
    8806:	f5 4f       	sbci	r31, 0xF5	; 245
    8808:	31 83       	std	Z+1, r19	; 0x01
    880a:	20 83       	st	Z, r18
    880c:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8810:	30 e0       	ldi	r19, 0x00	; 0
    8812:	fc 01       	movw	r30, r24
    8814:	ee 0f       	add	r30, r30
    8816:	ff 1f       	adc	r31, r31
    8818:	e1 51       	subi	r30, 0x11	; 17
    881a:	f5 4f       	sbci	r31, 0xF5	; 245
    881c:	31 83       	std	Z+1, r19	; 0x01
    881e:	20 83       	st	Z, r18
    8820:	20 91 fc 08 	lds	r18, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8824:	30 e0       	ldi	r19, 0x00	; 0
    8826:	88 0f       	add	r24, r24
    8828:	99 1f       	adc	r25, r25
    882a:	fc 01       	movw	r30, r24
    882c:	ef 50       	subi	r30, 0x0F	; 15
    882e:	f5 4f       	sbci	r31, 0xF5	; 245
    8830:	31 83       	std	Z+1, r19	; 0x01
    8832:	20 83       	st	Z, r18
							}
						}
						
						if(_sSchedules.Running_Schedule_At > 1)
						{
							for(unsigned char index_num=0; index_num<_sSchedules.Running_Schedule_At-1; index_num++)
    8834:	4f 5f       	subi	r20, 0xFF	; 255
    8836:	c6 cf       	rjmp	.-116    	; 0x87c4 <_Z18Edited_In_Schedulev+0x84a>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    8838:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    883c:	81 50       	subi	r24, 0x01	; 1
    883e:	8f 30       	cpi	r24, 0x0F	; 15
    8840:	90 f5       	brcc	.+100    	; 0x88a6 <_Z18Edited_In_Schedulev+0x92c>
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Irrigating_Date;
    8842:	28 2f       	mov	r18, r24
    8844:	30 e0       	ldi	r19, 0x00	; 0
    8846:	90 91 fa 08 	lds	r25, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    884a:	20 51       	subi	r18, 0x10	; 16
    884c:	37 4f       	sbci	r19, 0xF7	; 247
    884e:	f9 01       	movw	r30, r18
    8850:	e5 5a       	subi	r30, 0xA5	; 165
    8852:	ff 4f       	sbci	r31, 0xFF	; 255
    8854:	90 83       	st	Z, r25
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Irrigating_Month;
    8856:	90 91 fb 08 	lds	r25, 0x08FB	; 0x8008fb <_sSchedules+0xb>
    885a:	3f 96       	adiw	r30, 0x0f	; 15
    885c:	90 83       	st	Z, r25
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
    885e:	f3 e0       	ldi	r31, 0x03	; 3
    8860:	8f 9f       	mul	r24, r31
    8862:	90 01       	movw	r18, r0
    8864:	11 24       	eor	r1, r1
    8866:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    886a:	50 e0       	ldi	r21, 0x00	; 0
    886c:	f9 01       	movw	r30, r18
    886e:	ee 0f       	add	r30, r30
    8870:	ff 1f       	adc	r31, r31
    8872:	e3 51       	subi	r30, 0x13	; 19
    8874:	f5 4f       	sbci	r31, 0xF5	; 245
    8876:	51 83       	std	Z+1, r21	; 0x01
    8878:	40 83       	st	Z, r20
    887a:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    887e:	50 e0       	ldi	r21, 0x00	; 0
    8880:	f9 01       	movw	r30, r18
    8882:	ee 0f       	add	r30, r30
    8884:	ff 1f       	adc	r31, r31
    8886:	e1 51       	subi	r30, 0x11	; 17
    8888:	f5 4f       	sbci	r31, 0xF5	; 245
    888a:	51 83       	std	Z+1, r21	; 0x01
    888c:	40 83       	st	Z, r20
    888e:	40 91 fa 08 	lds	r20, 0x08FA	; 0x8008fa <_sSchedules+0xa>
    8892:	50 e0       	ldi	r21, 0x00	; 0
    8894:	22 0f       	add	r18, r18
    8896:	33 1f       	adc	r19, r19
    8898:	f9 01       	movw	r30, r18
    889a:	ef 50       	subi	r30, 0x0F	; 15
    889c:	f5 4f       	sbci	r31, 0xF5	; 245
    889e:	51 83       	std	Z+1, r21	; 0x01
    88a0:	40 83       	st	Z, r20
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
								}
							}
							
							for(unsigned char index_num=_sSchedules.Running_Schedule_At-1; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++ )
    88a2:	8f 5f       	subi	r24, 0xFF	; 255
    88a4:	cc cf       	rjmp	.-104    	; 0x883e <_Z18Edited_In_Schedulev+0x8c4>
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Irrigating_Date;
								}
							}
							
							_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    88a6:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    88aa:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
							_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    88ae:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    88b2:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    88b6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    88ba:	81 30       	cpi	r24, 0x01	; 1
    88bc:	09 f0       	breq	.+2      	; 0x88c0 <_Z18Edited_In_Schedulev+0x946>
    88be:	db c0       	rjmp	.+438    	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
							{
								_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 4//// :");
    88c0:	64 e6       	ldi	r22, 0x64	; 100
    88c2:	7d e0       	ldi	r23, 0x0D	; 13
    88c4:	8f e6       	ldi	r24, 0x6F	; 111
    88c6:	96 e1       	ldi	r25, 0x16	; 22
    88c8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    88cc:	8f e6       	ldi	r24, 0x6F	; 111
    88ce:	96 e1       	ldi	r25, 0x16	; 22
    88d0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    88d4:	60 91 c0 0b 	lds	r22, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    88d8:	4a e0       	ldi	r20, 0x0A	; 10
    88da:	50 e0       	ldi	r21, 0x00	; 0
    88dc:	8f e6       	ldi	r24, 0x6F	; 111
    88de:	96 e1       	ldi	r25, 0x16	; 22
    88e0:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
    88e4:	c8 c0       	rjmp	.+400    	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
    88e6:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    88ea:	81 30       	cpi	r24, 0x01	; 1
    88ec:	09 f0       	breq	.+2      	; 0x88f0 <_Z18Edited_In_Schedulev+0x976>
    88ee:	c3 c0       	rjmp	.+390    	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
						{
							Return_Calculated_Previous_Day_Date(1);
    88f0:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    88f4:	80 e0       	ldi	r24, 0x00	; 0
    88f6:	90 e0       	ldi	r25, 0x00	; 0
    88f8:	20 e0       	ldi	r18, 0x00	; 0
    88fa:	30 e0       	ldi	r19, 0x00	; 0
							for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
							{
								_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Temp_date;
    88fc:	60 91 be 0b 	lds	r22, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8900:	a9 01       	movw	r20, r18
    8902:	40 51       	subi	r20, 0x10	; 16
    8904:	57 4f       	sbci	r21, 0xF7	; 247
    8906:	fa 01       	movw	r30, r20
    8908:	e5 5a       	subi	r30, 0xA5	; 165
    890a:	ff 4f       	sbci	r31, 0xFF	; 255
    890c:	60 83       	st	Z, r22
								_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Temp_Month;
    890e:	60 91 bf 0b 	lds	r22, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    8912:	3f 96       	adiw	r30, 0x0f	; 15
    8914:	60 83       	st	Z, r22
								
								for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
								{
									_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8916:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    891a:	50 e0       	ldi	r21, 0x00	; 0
    891c:	fc 01       	movw	r30, r24
    891e:	ee 0f       	add	r30, r30
    8920:	ff 1f       	adc	r31, r31
    8922:	e3 51       	subi	r30, 0x13	; 19
    8924:	f5 4f       	sbci	r31, 0xF5	; 245
    8926:	51 83       	std	Z+1, r21	; 0x01
    8928:	40 83       	st	Z, r20
    892a:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    892e:	50 e0       	ldi	r21, 0x00	; 0
    8930:	fc 01       	movw	r30, r24
    8932:	ee 0f       	add	r30, r30
    8934:	ff 1f       	adc	r31, r31
    8936:	e1 51       	subi	r30, 0x11	; 17
    8938:	f5 4f       	sbci	r31, 0xF5	; 245
    893a:	51 83       	std	Z+1, r21	; 0x01
    893c:	40 83       	st	Z, r20
    893e:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8942:	50 e0       	ldi	r21, 0x00	; 0
    8944:	fc 01       	movw	r30, r24
    8946:	ee 0f       	add	r30, r30
    8948:	ff 1f       	adc	r31, r31
    894a:	ef 50       	subi	r30, 0x0F	; 15
    894c:	f5 4f       	sbci	r31, 0xF5	; 245
    894e:	51 83       	std	Z+1, r21	; 0x01
    8950:	40 83       	st	Z, r20
    8952:	2f 5f       	subi	r18, 0xFF	; 255
    8954:	3f 4f       	sbci	r19, 0xFF	; 255
    8956:	03 96       	adiw	r24, 0x03	; 3
							}
						}
						else if(_sSchedules.Running_Schedule_At == 1)
						{
							Return_Calculated_Previous_Day_Date(1);
							for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8958:	2f 30       	cpi	r18, 0x0F	; 15
    895a:	31 05       	cpc	r19, r1
    895c:	79 f6       	brne	.-98     	; 0x88fc <_Z18Edited_In_Schedulev+0x982>
    895e:	83 c0       	rjmp	.+262    	; 0x8a66 <_Z18Edited_In_Schedulev+0xaec>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8960:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8964:	81 11       	cpse	r24, r1
    8966:	88 c0       	rjmp	.+272    	; 0x8a78 <_Z18Edited_In_Schedulev+0xafe>
				} 
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
    8968:	80 91 aa 0b 	lds	r24, 0x0BAA	; 0x800baa <_sSchedules+0x2ba>
    896c:	88 23       	and	r24, r24
    896e:	09 f4       	brne	.+2      	; 0x8972 <_Z18Edited_In_Schedulev+0x9f8>
    8970:	83 c0       	rjmp	.+262    	; 0x8a78 <_Z18Edited_In_Schedulev+0xafe>
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8972:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8976:	81 30       	cpi	r24, 0x01	; 1
    8978:	51 f4       	brne	.+20     	; 0x898e <_Z18Edited_In_Schedulev+0xa14>
		{
			_kSERAIL_MON_WRITE("my 14");
    897a:	6e e5       	ldi	r22, 0x5E	; 94
    897c:	7d e0       	ldi	r23, 0x0D	; 13
    897e:	8f e6       	ldi	r24, 0x6F	; 111
    8980:	96 e1       	ldi	r25, 0x16	; 22
    8982:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    8986:	8f e6       	ldi	r24, 0x6F	; 111
    8988:	96 e1       	ldi	r25, 0x16	; 22
    898a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		_sSchedules.Back_Up_Running_Scheduler_Number = _kRESET;
    898e:	10 92 aa 0b 	sts	0x0BAA, r1	; 0x800baa <_sSchedules+0x2ba>
		_sSchedules.Back_Up_Running_Schedule_Plot_Number = _kRESET;
    8992:	10 92 ab 0b 	sts	0x0BAB, r1	; 0x800bab <_sSchedules+0x2bb>
		_sSchedules.Back_Up_Pump_Running_Time = _kRESET;
    8996:	10 92 ad 0b 	sts	0x0BAD, r1	; 0x800bad <_sSchedules+0x2bd>
    899a:	10 92 ac 0b 	sts	0x0BAC, r1	; 0x800bac <_sSchedules+0x2bc>
		for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
		{
			_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _kRESET;
    899e:	10 92 af 0b 	sts	0x0BAF, r1	; 0x800baf <_sSchedules+0x2bf>
    89a2:	10 92 ae 0b 	sts	0x0BAE, r1	; 0x800bae <_sSchedules+0x2be>
    89a6:	10 92 b1 0b 	sts	0x0BB1, r1	; 0x800bb1 <_sSchedules+0x2c1>
    89aa:	10 92 b0 0b 	sts	0x0BB0, r1	; 0x800bb0 <_sSchedules+0x2c0>
    89ae:	10 92 b3 0b 	sts	0x0BB3, r1	; 0x800bb3 <_sSchedules+0x2c3>
    89b2:	10 92 b2 0b 	sts	0x0BB2, r1	; 0x800bb2 <_sSchedules+0x2c2>
		}
		
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    89b6:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
    89ba:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
    89be:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
    89c2:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
    89c6:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
    89ca:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
		}
		
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    89ce:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    89d2:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
		for(unsigned char tank_number = 0; tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
		{
			_sSchedules.Running_Tank[tank_number] = _kOFF;
    89d6:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    89da:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    89de:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
		}
		
		Return_Calculated_Previous_Day_Date(1);
    89e2:	81 e0       	ldi	r24, 0x01	; 1
    89e4:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    89e8:	80 e0       	ldi	r24, 0x00	; 0
    89ea:	90 e0       	ldi	r25, 0x00	; 0
    89ec:	20 e0       	ldi	r18, 0x00	; 0
    89ee:	30 e0       	ldi	r19, 0x00	; 0
		
		for(unsigned char index_num = 0; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
		{
			
			_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    89f0:	60 91 be 0b 	lds	r22, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    89f4:	a9 01       	movw	r20, r18
    89f6:	40 51       	subi	r20, 0x10	; 16
    89f8:	57 4f       	sbci	r21, 0xF7	; 247
    89fa:	fa 01       	movw	r30, r20
    89fc:	e5 5a       	subi	r30, 0xA5	; 165
    89fe:	ff 4f       	sbci	r31, 0xFF	; 255
    8a00:	60 83       	st	Z, r22
			_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    8a02:	60 91 bf 0b 	lds	r22, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    8a06:	3f 96       	adiw	r30, 0x0f	; 15
    8a08:	60 83       	st	Z, r22
			
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
    8a0a:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8a0e:	50 e0       	ldi	r21, 0x00	; 0
    8a10:	fc 01       	movw	r30, r24
    8a12:	ee 0f       	add	r30, r30
    8a14:	ff 1f       	adc	r31, r31
    8a16:	e3 51       	subi	r30, 0x13	; 19
    8a18:	f5 4f       	sbci	r31, 0xF5	; 245
    8a1a:	51 83       	std	Z+1, r21	; 0x01
    8a1c:	40 83       	st	Z, r20
    8a1e:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8a22:	50 e0       	ldi	r21, 0x00	; 0
    8a24:	fc 01       	movw	r30, r24
    8a26:	ee 0f       	add	r30, r30
    8a28:	ff 1f       	adc	r31, r31
    8a2a:	e1 51       	subi	r30, 0x11	; 17
    8a2c:	f5 4f       	sbci	r31, 0xF5	; 245
    8a2e:	51 83       	std	Z+1, r21	; 0x01
    8a30:	40 83       	st	Z, r20
    8a32:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8a36:	50 e0       	ldi	r21, 0x00	; 0
    8a38:	fc 01       	movw	r30, r24
    8a3a:	ee 0f       	add	r30, r30
    8a3c:	ff 1f       	adc	r31, r31
    8a3e:	ef 50       	subi	r30, 0x0F	; 15
    8a40:	f5 4f       	sbci	r31, 0xF5	; 245
    8a42:	51 83       	std	Z+1, r21	; 0x01
    8a44:	40 83       	st	Z, r20
    8a46:	2f 5f       	subi	r18, 0xFF	; 255
    8a48:	3f 4f       	sbci	r19, 0xFF	; 255
    8a4a:	03 96       	adiw	r24, 0x03	; 3
			_sSchedules.Running_Tank[tank_number] = _kOFF;
		}
		
		Return_Calculated_Previous_Day_Date(1);
		
		for(unsigned char index_num = 0; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
    8a4c:	2e 30       	cpi	r18, 0x0E	; 14
    8a4e:	31 05       	cpc	r19, r1
    8a50:	79 f6       	brne	.-98     	; 0x89f0 <_Z18Edited_In_Schedulev+0xa76>
			for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
			{
				_sSchedules.Tank_Running_Date[((index_num) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Temp_date;
			}
		}
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    8a52:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8a56:	81 30       	cpi	r24, 0x01	; 1
    8a58:	31 f4       	brne	.+12     	; 0x8a66 <_Z18Edited_In_Schedulev+0xaec>
		{
			_kSERAIL_MON_WRITE("irrigating date upadte 14///////////////////////////////////////////");
    8a5a:	69 e1       	ldi	r22, 0x19	; 25
    8a5c:	7d e0       	ldi	r23, 0x0D	; 13
    8a5e:	8f e6       	ldi	r24, 0x6F	; 111
    8a60:	96 e1       	ldi	r25, 0x16	; 22
    8a62:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		_sSchedules.Irrigating_Date = _sSchedules.Temp_date;
    8a66:	80 91 be 0b 	lds	r24, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    8a6a:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
		_sSchedules.Irrigating_Month = _sSchedules.Temp_Month;
    8a6e:	80 91 bf 0b 	lds	r24, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    8a72:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8a76:	15 c0       	rjmp	.+42     	; 0x8aa2 <_Z18Edited_In_Schedulev+0xb28>
			}
		}
	}
	
	else if((_sSchedules.Running_Schedule_At == 0 && _sSchedules.Back_Up_Running_Scheduler_Number != _kRESET)
	|| (_sSchedules.Running_Schedule_At == 0 && _sSchedules.Scheduler_Retry_Timer == _kRESET))
    8a78:	80 91 b8 0b 	lds	r24, 0x0BB8	; 0x800bb8 <_sSchedules+0x2c8>
    8a7c:	81 11       	cpse	r24, r1
    8a7e:	fb cf       	rjmp	.-10     	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
    8a80:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    8a84:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    8a88:	89 2b       	or	r24, r25
    8a8a:	09 f4       	brne	.+2      	; 0x8a8e <_Z18Edited_In_Schedulev+0xb14>
    8a8c:	72 cf       	rjmp	.-284    	; 0x8972 <_Z18Edited_In_Schedulev+0x9f8>
    8a8e:	f3 cf       	rjmp	.-26     	; 0x8a76 <_Z18Edited_In_Schedulev+0xafc>
						{
							_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
						}
						else
						{
							_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8a90:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
    8a94:	d7 cb       	rjmp	.-2130   	; 0x8244 <_Z18Edited_In_Schedulev+0x2ca>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8a96:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
    8a9a:	1a cd       	rjmp	.-1484   	; 0x84d0 <_Z18Edited_In_Schedulev+0x556>
							{
								_sSchedules.Which_Sheduler_Is_Running = _sSchedules.Back_Up_Running_Scheduler_Number;
							}
							else
							{
								_sSchedules.Which_Sheduler_Is_Running = _kRESET;
    8a9c:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
    8aa0:	61 ce       	rjmp	.-830    	; 0x8764 <_Z18Edited_In_Schedulev+0x7ea>

	}
	
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}
    8aa2:	df 91       	pop	r29
    8aa4:	cf 91       	pop	r28
    8aa6:	1f 91       	pop	r17
    8aa8:	0f 91       	pop	r16
    8aaa:	ff 90       	pop	r15
    8aac:	ef 90       	pop	r14
    8aae:	df 90       	pop	r13
    8ab0:	cf 90       	pop	r12
    8ab2:	08 95       	ret

00008ab4 <_Z18Next_Day_Calculatehh>:
		return 0;
	}
}

unsigned char Next_Day_Calculate(unsigned char date,unsigned char month)
{
    8ab4:	1f 93       	push	r17
    8ab6:	cf 93       	push	r28
    8ab8:	df 93       	push	r29
    8aba:	c8 2f       	mov	r28, r24
    8abc:	16 2f       	mov	r17, r22
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8abe:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8ac2:	81 30       	cpi	r24, 0x01	; 1
    8ac4:	89 f4       	brne	.+34     	; 0x8ae8 <_Z18Next_Day_Calculatehh+0x34>
	{
		_kSERAIL_MON_WRITE("Current date 1: ");
    8ac6:	6e e5       	ldi	r22, 0x5E	; 94
    8ac8:	7c e0       	ldi	r23, 0x0C	; 12
    8aca:	8f e6       	ldi	r24, 0x6F	; 111
    8acc:	96 e1       	ldi	r25, 0x16	; 22
    8ace:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8ad2:	4a e0       	ldi	r20, 0x0A	; 10
    8ad4:	50 e0       	ldi	r21, 0x00	; 0
    8ad6:	6c 2f       	mov	r22, r28
    8ad8:	8f e6       	ldi	r24, 0x6F	; 111
    8ada:	96 e1       	ldi	r25, 0x16	; 22
    8adc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8ae0:	8f e6       	ldi	r24, 0x6F	; 111
    8ae2:	96 e1       	ldi	r25, 0x16	; 22
    8ae4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	date = date + _sSchedules.Days_In_Between_Schedules;
    8ae8:	d0 91 0c 09 	lds	r29, 0x090C	; 0x80090c <_sSchedules+0x1c>
    8aec:	dc 0f       	add	r29, r28
	unsigned char c_month = month;
	unsigned char year = _sRuble_Parameters.Update_Local_Date[2];
    8aee:	c0 91 ab 15 	lds	r28, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    8af2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8af6:	81 30       	cpi	r24, 0x01	; 1
    8af8:	19 f5       	brne	.+70     	; 0x8b40 <_Z18Next_Day_Calculatehh+0x8c>
	{
		_kSERAIL_MON_WRITE("Current date 2: ");
    8afa:	6d e4       	ldi	r22, 0x4D	; 77
    8afc:	7c e0       	ldi	r23, 0x0C	; 12
    8afe:	8f e6       	ldi	r24, 0x6F	; 111
    8b00:	96 e1       	ldi	r25, 0x16	; 22
    8b02:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(date);
    8b06:	4a e0       	ldi	r20, 0x0A	; 10
    8b08:	50 e0       	ldi	r21, 0x00	; 0
    8b0a:	6d 2f       	mov	r22, r29
    8b0c:	8f e6       	ldi	r24, 0x6F	; 111
    8b0e:	96 e1       	ldi	r25, 0x16	; 22
    8b10:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8b14:	8f e6       	ldi	r24, 0x6F	; 111
    8b16:	96 e1       	ldi	r25, 0x16	; 22
    8b18:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		
		_kSERAIL_MON_WRITE("diays in beteweeen .............: ");
    8b1c:	6a e2       	ldi	r22, 0x2A	; 42
    8b1e:	7c e0       	ldi	r23, 0x0C	; 12
    8b20:	8f e6       	ldi	r24, 0x6F	; 111
    8b22:	96 e1       	ldi	r25, 0x16	; 22
    8b24:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
    8b28:	60 91 0c 09 	lds	r22, 0x090C	; 0x80090c <_sSchedules+0x1c>
    8b2c:	4a e0       	ldi	r20, 0x0A	; 10
    8b2e:	50 e0       	ldi	r21, 0x00	; 0
    8b30:	8f e6       	ldi	r24, 0x6F	; 111
    8b32:	96 e1       	ldi	r25, 0x16	; 22
    8b34:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    8b38:	8f e6       	ldi	r24, 0x6F	; 111
    8b3a:	96 e1       	ldi	r25, 0x16	; 22
    8b3c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	switch(month)
    8b40:	81 2f       	mov	r24, r17
    8b42:	90 e0       	ldi	r25, 0x00	; 0
    8b44:	fc 01       	movw	r30, r24
    8b46:	31 97       	sbiw	r30, 0x01	; 1
    8b48:	ec 30       	cpi	r30, 0x0C	; 12
    8b4a:	f1 05       	cpc	r31, r1
    8b4c:	10 f5       	brcc	.+68     	; 0x8b92 <_Z18Next_Day_Calculatehh+0xde>
    8b4e:	88 27       	eor	r24, r24
    8b50:	ef 52       	subi	r30, 0x2F	; 47
    8b52:	ff 4f       	sbci	r31, 0xFF	; 255
    8b54:	8f 4f       	sbci	r24, 0xFF	; 255
    8b56:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
    8b5a:	8c 2f       	mov	r24, r28
    8b5c:	83 70       	andi	r24, 0x03	; 3
			
		}break;
		
		case _eFEB:
		{
			if(year%4)
    8b5e:	19 f0       	breq	.+6      	; 0x8b66 <_Z18Next_Day_Calculatehh+0xb2>
			{
				if(date > 28)
    8b60:	dd 31       	cpi	r29, 0x1D	; 29
    8b62:	b8 f4       	brcc	.+46     	; 0x8b92 <_Z18Next_Day_Calculatehh+0xde>
    8b64:	0e c0       	rjmp	.+28     	; 0x8b82 <_Z18Next_Day_Calculatehh+0xce>
					}
				}
			}
			else
			{
				if(date > 29)
    8b66:	de 31       	cpi	r29, 0x1E	; 30
    8b68:	b8 f4       	brcc	.+46     	; 0x8b98 <_Z18Next_Day_Calculatehh+0xe4>
						}
					}
				}
				else
				{
					if( _sRuble_Parameters.Update_Local_Date[0] >=   date)
    8b6a:	90 91 a9 15 	lds	r25, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8b6e:	9d 17       	cp	r25, r29
    8b70:	98 f0       	brcs	.+38     	; 0x8b98 <_Z18Next_Day_Calculatehh+0xe4>
					{
						if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8b72:	d9 13       	cpse	r29, r25
    8b74:	10 c0       	rjmp	.+32     	; 0x8b96 <_Z18Next_Day_Calculatehh+0xe2>
    8b76:	0b c0       	rjmp	.+22     	; 0x8b8e <_Z18Next_Day_Calculatehh+0xda>
			
		}break;
		
		case _eNOV:
		{
			if(date > 30)
    8b78:	df 31       	cpi	r29, 0x1F	; 31
    8b7a:	58 f4       	brcc	.+22     	; 0x8b92 <_Z18Next_Day_Calculatehh+0xde>
    8b7c:	02 c0       	rjmp	.+4      	; 0x8b82 <_Z18Next_Day_Calculatehh+0xce>
			
		}break;
		
		case _eDEC:
		{
			if(date > 31)
    8b7e:	d0 32       	cpi	r29, 0x20	; 32
    8b80:	40 f4       	brcc	.+16     	; 0x8b92 <_Z18Next_Day_Calculatehh+0xde>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >= date)
    8b82:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8b86:	8d 17       	cp	r24, r29
    8b88:	20 f0       	brcs	.+8      	; 0x8b92 <_Z18Next_Day_Calculatehh+0xde>
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
    8b8a:	d8 13       	cpse	r29, r24
    8b8c:	04 c0       	rjmp	.+8      	; 0x8b96 <_Z18Next_Day_Calculatehh+0xe2>
			{
				if(_sRuble_Parameters.Update_Local_Date[0] >=  date)
				{
					if(date ==  _sRuble_Parameters.Update_Local_Date[0])
					{
						return 1;
    8b8e:	81 e0       	ldi	r24, 0x01	; 1
    8b90:	03 c0       	rjmp	.+6      	; 0x8b98 <_Z18Next_Day_Calculatehh+0xe4>
			
		}break;
		
	}
	
	return 0;
    8b92:	80 e0       	ldi	r24, 0x00	; 0
    8b94:	01 c0       	rjmp	.+2      	; 0x8b98 <_Z18Next_Day_Calculatehh+0xe4>
					{
						return 1;
					}
					else
					{
						return 2;
    8b96:	82 e0       	ldi	r24, 0x02	; 2
		
	}
	
	return 0;
	
}
    8b98:	df 91       	pop	r29
    8b9a:	cf 91       	pop	r28
    8b9c:	1f 91       	pop	r17
    8b9e:	08 95       	ret

00008ba0 <_Z22Do_Not_Repeat_Schedulev>:
	/* added the plot which is after the irrigating plot */
	/* added the plot which is before the irrigating plot */	
}

unsigned char Do_Not_Repeat_Schedule(void)
{
    8ba0:	cf 93       	push	r28
	unsigned char check_for_repeat;
	
	if(_sSchedules.Cyclic_Schedule_Flag != _kSET)
    8ba2:	80 91 0d 09 	lds	r24, 0x090D	; 0x80090d <_sSchedules+0x1d>
    8ba6:	81 30       	cpi	r24, 0x01	; 1
    8ba8:	09 f4       	brne	.+2      	; 0x8bac <_Z22Do_Not_Repeat_Schedulev+0xc>
    8baa:	4b c0       	rjmp	.+150    	; 0x8c42 <_Z22Do_Not_Repeat_Schedulev+0xa2>
	{
		if(_sSchedules.Which_Sheduler_Is_Running)
    8bac:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8bb0:	88 23       	and	r24, r24
    8bb2:	09 f4       	brne	.+2      	; 0x8bb6 <_Z22Do_Not_Repeat_Schedulev+0x16>
    8bb4:	46 c0       	rjmp	.+140    	; 0x8c42 <_Z22Do_Not_Repeat_Schedulev+0xa2>
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8bb6:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8bba:	81 30       	cpi	r24, 0x01	; 1
    8bbc:	29 f4       	brne	.+10     	; 0x8bc8 <_Z22Do_Not_Repeat_Schedulev+0x28>
			{
				
				check_for_repeat = Next_Day_Calculate(_sSchedules.Started_Date,_sSchedules.Started_Month);
    8bbe:	60 91 fd 08 	lds	r22, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    8bc2:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8bc6:	04 c0       	rjmp	.+8      	; 0x8bd0 <_Z22Do_Not_Repeat_Schedulev+0x30>
			}
			else
			{
				check_for_repeat = Next_Day_Calculate(_sSchedules.First_Schedule_Irrigated_Date,_sSchedules.First_Schedule_Irrigated_Month);
    8bc8:	60 91 c1 0b 	lds	r22, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    8bcc:	80 91 c0 0b 	lds	r24, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    8bd0:	71 df       	rcall	.-286    	; 0x8ab4 <_Z18Next_Day_Calculatehh>
			}
			
			if(check_for_repeat == 1)
    8bd2:	81 30       	cpi	r24, 0x01	; 1
    8bd4:	09 f0       	breq	.+2      	; 0x8bd8 <_Z22Do_Not_Repeat_Schedulev+0x38>
    8bd6:	53 c0       	rjmp	.+166    	; 0x8c7e <_Z22Do_Not_Repeat_Schedulev+0xde>
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    8bd8:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    8bdc:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    8be0:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    8be4:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    8be8:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    8bec:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    8bf0:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    8bf4:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    8bf8:	48 17       	cp	r20, r24
    8bfa:	59 07       	cpc	r21, r25
    8bfc:	6a 07       	cpc	r22, r26
    8bfe:	7b 07       	cpc	r23, r27
    8c00:	00 f5       	brcc	.+64     	; 0x8c42 <_Z22Do_Not_Repeat_Schedulev+0xa2>
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8c02:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8c06:	81 30       	cpi	r24, 0x01	; 1
    8c08:	f1 f4       	brne	.+60     	; 0x8c46 <_Z22Do_Not_Repeat_Schedulev+0xa6>
						/*for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.Started_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.Started_Month;
						}*/
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c0a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8c0e:	81 30       	cpi	r24, 0x01	; 1
    8c10:	51 f4       	brne	.+20     	; 0x8c26 <_Z22Do_Not_Repeat_Schedulev+0x86>
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1 ##############################");
    8c12:	61 ee       	ldi	r22, 0xE1	; 225
    8c14:	7c e0       	ldi	r23, 0x0C	; 12
    8c16:	8f e6       	ldi	r24, 0x6F	; 111
    8c18:	96 e1       	ldi	r25, 0x16	; 22
    8c1a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8c1e:	8f e6       	ldi	r24, 0x6F	; 111
    8c20:	96 e1       	ldi	r25, 0x16	; 22
    8c22:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
    8c26:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8c2a:	f0 e0       	ldi	r31, 0x00	; 0
    8c2c:	ee 0f       	add	r30, r30
    8c2e:	ff 1f       	adc	r31, r31
    8c30:	e2 51       	subi	r30, 0x12	; 18
    8c32:	f7 4f       	sbci	r31, 0xF7	; 247
    8c34:	87 8d       	ldd	r24, Z+31	; 0x1f
    8c36:	90 a1       	ldd	r25, Z+32	; 0x20
    8c38:	01 96       	adiw	r24, 0x01	; 1
    8c3a:	90 93 f9 08 	sts	0x08F9, r25	; 0x8008f9 <_sSchedules+0x9>
    8c3e:	80 93 f8 08 	sts	0x08F8, r24	; 0x8008f8 <_sSchedules+0x8>
						return 0;
    8c42:	c0 e0       	ldi	r28, 0x00	; 0
    8c44:	3f c0       	rjmp	.+126    	; 0x8cc4 <_Z22Do_Not_Repeat_Schedulev+0x124>
			
			if(check_for_repeat == 1)
			{
				if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
				{
					if(_sSchedules.Which_Sheduler_Is_Running == 1)
    8c46:	80 e0       	ldi	r24, 0x00	; 0
    8c48:	90 e0       	ldi	r25, 0x00	; 0
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8c4a:	40 91 c0 0b 	lds	r20, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    8c4e:	9c 01       	movw	r18, r24
    8c50:	20 51       	subi	r18, 0x10	; 16
    8c52:	37 4f       	sbci	r19, 0xF7	; 247
    8c54:	f9 01       	movw	r30, r18
    8c56:	e5 5a       	subi	r30, 0xA5	; 165
    8c58:	ff 4f       	sbci	r31, 0xFF	; 255
    8c5a:	40 83       	st	Z, r20
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8c5c:	40 91 c1 0b 	lds	r20, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    8c60:	3f 96       	adiw	r30, 0x0f	; 15
    8c62:	40 83       	st	Z, r20
    8c64:	01 96       	adiw	r24, 0x01	; 1
						_sSchedules.Keep_Scheduler_Run_Timer = _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1] +1;
						return 0;
					}
					else
					{
						for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8c66:	8f 30       	cpi	r24, 0x0F	; 15
    8c68:	91 05       	cpc	r25, r1
    8c6a:	79 f7       	brne	.-34     	; 0x8c4a <_Z22Do_Not_Repeat_Schedulev+0xaa>
						{
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8c6c:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8c70:	c1 30       	cpi	r28, 0x01	; 1
    8c72:	11 f0       	breq	.+4      	; 0x8c78 <_Z22Do_Not_Repeat_Schedulev+0xd8>
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
							_kSERIAL_MON_CLEAR();
						}
					}
					
					return 1;
    8c74:	c1 e0       	ldi	r28, 0x01	; 1
    8c76:	26 c0       	rjmp	.+76     	; 0x8cc4 <_Z22Do_Not_Repeat_Schedulev+0x124>
							_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
							_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
						}
						if(_sRuble_Parameters.Debug_Mode == _kSET)
						{
							_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 1.1 ##############################");
    8c78:	67 ea       	ldi	r22, 0xA7	; 167
    8c7a:	7c e0       	ldi	r23, 0x0C	; 12
    8c7c:	1b c0       	rjmp	.+54     	; 0x8cb4 <_Z22Do_Not_Repeat_Schedulev+0x114>
					}
					
					return 1;
				}
			}
			if(check_for_repeat == 2)
    8c7e:	82 30       	cpi	r24, 0x02	; 2
    8c80:	01 f7       	brne	.-64     	; 0x8c42 <_Z22Do_Not_Repeat_Schedulev+0xa2>
    8c82:	80 e0       	ldi	r24, 0x00	; 0
    8c84:	90 e0       	ldi	r25, 0x00	; 0
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
    8c86:	40 91 c0 0b 	lds	r20, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    8c8a:	9c 01       	movw	r18, r24
    8c8c:	20 51       	subi	r18, 0x10	; 16
    8c8e:	37 4f       	sbci	r19, 0xF7	; 247
    8c90:	f9 01       	movw	r30, r18
    8c92:	e5 5a       	subi	r30, 0xA5	; 165
    8c94:	ff 4f       	sbci	r31, 0xFF	; 255
    8c96:	40 83       	st	Z, r20
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
    8c98:	40 91 c1 0b 	lds	r20, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    8c9c:	3f 96       	adiw	r30, 0x0f	; 15
    8c9e:	40 83       	st	Z, r20
    8ca0:	01 96       	adiw	r24, 0x01	; 1
					return 1;
				}
			}
			if(check_for_repeat == 2)
			{
				for(unsigned char index_num=0; index_num<_kMAX_LIRA_SENSOR_NODE+1; index_num++)
    8ca2:	8f 30       	cpi	r24, 0x0F	; 15
    8ca4:	91 05       	cpc	r25, r1
    8ca6:	79 f7       	brne	.-34     	; 0x8c86 <_Z22Do_Not_Repeat_Schedulev+0xe6>
				{
					_sSchedules.Scheduler_Already_Run[index_num]        = _sSchedules.First_Schedule_Irrigated_Date;
					_sSchedules.Scheduler_Already_Run_Month[index_num]  = _sSchedules.First_Schedule_Irrigated_Month;
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ca8:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8cac:	c1 30       	cpi	r28, 0x01	; 1
    8cae:	11 f7       	brne	.-60     	; 0x8c74 <_Z22Do_Not_Repeat_Schedulev+0xd4>
				{
					_kSERAIL_MON_WRITE("Do_Not_Repeat_Schedule 2 ##############################");
    8cb0:	6f e6       	ldi	r22, 0x6F	; 111
    8cb2:	7c e0       	ldi	r23, 0x0C	; 12
    8cb4:	8f e6       	ldi	r24, 0x6F	; 111
    8cb6:	96 e1       	ldi	r25, 0x16	; 22
    8cb8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8cbc:	8f e6       	ldi	r24, 0x6F	; 111
    8cbe:	96 e1       	ldi	r25, 0x16	; 22
    8cc0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	else
	{
		return 0;
	}
}
    8cc4:	8c 2f       	mov	r24, r28
    8cc6:	cf 91       	pop	r28
    8cc8:	08 95       	ret

00008cca <_Z34Check_Time_For_Schedule_To_Triggerhh>:
	return 0;
	
}

unsigned char Check_Time_For_Schedule_To_Trigger(unsigned char Case_Number, unsigned char check_days)
{
    8cca:	cf 93       	push	r28
    8ccc:	df 93       	push	r29
    8cce:	c8 2f       	mov	r28, r24
    8cd0:	d6 2f       	mov	r29, r22
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;   /* turn on the last schedule or new schedule */
    8cd2:	81 e0       	ldi	r24, 0x01	; 1
    8cd4:	80 93 f6 08 	sts	0x08F6, r24	; 0x8008f6 <_sSchedules+0x6>
	
	if(_sSchedules.Which_Sheduler_Is_Running == _kRESET)
    8cd8:	90 91 f3 08 	lds	r25, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8cdc:	91 11       	cpse	r25, r1
    8cde:	06 c0       	rjmp	.+12     	; 0x8cec <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22>
	{
		//_kSERAIL_MON_WRITE("sc enter 28");
		_sSchedules.Which_Sheduler_Is_Running = _kSET;
    8ce0:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <_sSchedules+0x3>
		_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    8ce4:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    8ce8:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
	}
	
	/* check weather schedules are already started save in eeprom */
	if(_sSchedules.Schedule_Are_Started == _kRESET || (_sSchedules.Which_Sheduler_Is_Running == 1))
    8cec:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <_sSchedules+0xe>
    8cf0:	88 23       	and	r24, r24
    8cf2:	29 f0       	breq	.+10     	; 0x8cfe <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8cf4:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8cf8:	81 30       	cpi	r24, 0x01	; 1
    8cfa:	09 f0       	breq	.+2      	; 0x8cfe <_Z34Check_Time_For_Schedule_To_Triggerhh+0x34>
    8cfc:	79 c1       	rjmp	.+754    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
	{
		//_kSERAIL_MON_WRITE("sc enter 29");
		_sSchedules.Schedule_Are_Started = _kSET;
    8cfe:	81 e0       	ldi	r24, 0x01	; 1
    8d00:	80 93 fe 08 	sts	0x08FE, r24	; 0x8008fe <_sSchedules+0xe>
		
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
    8d04:	90 91 0b 09 	lds	r25, 0x090B	; 0x80090b <_sSchedules+0x1b>
    8d08:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8d0c:	91 30       	cpi	r25, 0x01	; 1
    8d0e:	91 f4       	brne	.+36     	; 0x8d34 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x6a>
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8d10:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    8d14:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    8d18:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    8d1c:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    8d20:	43 34       	cpi	r20, 0x43	; 67
    8d22:	51 45       	sbci	r21, 0x51	; 81
    8d24:	61 40       	sbci	r22, 0x01	; 1
    8d26:	71 05       	cpc	r23, r1
    8d28:	08 f0       	brcs	.+2      	; 0x8d2c <_Z34Check_Time_For_Schedule_To_Triggerhh+0x62>
    8d2a:	56 c0       	rjmp	.+172    	; 0x8dd8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8d2c:	c1 30       	cpi	r28, 0x01	; 1
    8d2e:	09 f0       	breq	.+2      	; 0x8d32 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x68>
    8d30:	53 c0       	rjmp	.+166    	; 0x8dd8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10e>
    8d32:	6f c0       	rjmp	.+222    	; 0x8e12 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x148>
				
			}
		}
		else
		{
			if(_sSchedules.Which_Sheduler_Is_Running == 1 && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    8d34:	90 91 f3 08 	lds	r25, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8d38:	91 30       	cpi	r25, 0x01	; 1
    8d3a:	d1 f5       	brne	.+116    	; 0x8db0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
    8d3c:	20 91 f8 08 	lds	r18, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    8d40:	30 91 f9 08 	lds	r19, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    8d44:	23 2b       	or	r18, r19
    8d46:	a1 f5       	brne	.+104    	; 0x8db0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
    8d48:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    8d4c:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    8d50:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    8d54:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    8d58:	48 35       	cpi	r20, 0x58	; 88
    8d5a:	52 40       	sbci	r21, 0x02	; 2
    8d5c:	61 05       	cpc	r22, r1
    8d5e:	71 05       	cpc	r23, r1
    8d60:	08 f4       	brcc	.+2      	; 0x8d64 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x9a>
    8d62:	d5 c0       	rjmp	.+426    	; 0x8f0e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x244>
					_sSchedules.Trigger_Time = 600;
					_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
				}
				else
				{
					if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    8d64:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    8d68:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    8d6c:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    8d70:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    8d74:	4c 32       	cpi	r20, 0x2C	; 44
    8d76:	51 40       	sbci	r21, 0x01	; 1
    8d78:	61 05       	cpc	r22, r1
    8d7a:	71 05       	cpc	r23, r1
    8d7c:	08 f0       	brcs	.+2      	; 0x8d80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xb6>
    8d7e:	e0 c0       	rjmp	.+448    	; 0x8f40 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x276>
					{
						_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    8d80:	47 e1       	ldi	r20, 0x17	; 23
    8d82:	50 e5       	ldi	r21, 0x50	; 80
    8d84:	61 e0       	ldi	r22, 0x01	; 1
    8d86:	70 e0       	ldi	r23, 0x00	; 0
    8d88:	40 93 07 09 	sts	0x0907, r20	; 0x800907 <_sSchedules+0x17>
    8d8c:	50 93 08 09 	sts	0x0908, r21	; 0x800908 <_sSchedules+0x18>
    8d90:	60 93 09 09 	sts	0x0909, r22	; 0x800909 <_sSchedules+0x19>
    8d94:	70 93 0a 09 	sts	0x090A, r23	; 0x80090a <_sSchedules+0x1a>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8d98:	81 30       	cpi	r24, 0x01	; 1
    8d9a:	51 f4       	brne	.+20     	; 0x8db0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
						{
							_kSERAIL_MON_WRITE("sc enter 11.1.0.1");
    8d9c:	63 e7       	ldi	r22, 0x73	; 115
    8d9e:	7b e0       	ldi	r23, 0x0B	; 11
    8da0:	8f e6       	ldi	r24, 0x6F	; 111
    8da2:	96 e1       	ldi	r25, 0x16	; 22
    8da4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8da8:	8f e6       	ldi	r24, 0x6F	; 111
    8daa:	96 e1       	ldi	r25, 0x16	; 22
    8dac:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
					}
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
    8db0:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    8db4:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    8db8:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    8dbc:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    8dc0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8dc4:	43 34       	cpi	r20, 0x43	; 67
    8dc6:	51 45       	sbci	r21, 0x51	; 81
    8dc8:	61 40       	sbci	r22, 0x01	; 1
    8dca:	71 05       	cpc	r23, r1
    8dcc:	08 f0       	brcs	.+2      	; 0x8dd0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x106>
    8dce:	63 c0       	rjmp	.+198    	; 0x8e96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8dd0:	c1 30       	cpi	r28, 0x01	; 1
    8dd2:	09 f0       	breq	.+2      	; 0x8dd6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x10c>
    8dd4:	60 c0       	rjmp	.+192    	; 0x8e96 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1cc>
    8dd6:	34 c0       	rjmp	.+104    	; 0x8e40 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x176>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8dd8:	81 30       	cpi	r24, 0x01	; 1
    8dda:	51 f4       	brne	.+20     	; 0x8df0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x126>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8ddc:	69 e9       	ldi	r22, 0x99	; 153
    8dde:	7b e0       	ldi	r23, 0x0B	; 11
    8de0:	8f e6       	ldi	r24, 0x6F	; 111
    8de2:	96 e1       	ldi	r25, 0x16	; 22
    8de4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8de8:	8f e6       	ldi	r24, 0x6F	; 111
    8dea:	96 e1       	ldi	r25, 0x16	; 22
    8dec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8df0:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8df4:	81 30       	cpi	r24, 0x01	; 1
    8df6:	09 f0       	breq	.+2      	; 0x8dfa <_Z34Check_Time_For_Schedule_To_Triggerhh+0x130>
    8df8:	fb c0       	rjmp	.+502    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8dfa:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    8dfe:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    8e02:	89 2b       	or	r24, r25
    8e04:	09 f0       	breq	.+2      	; 0x8e08 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x13e>
    8e06:	f4 c0       	rjmp	.+488    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
    8e08:	0e 94 1d 32 	call	0x643a	; 0x643a <_Z24Return_Previous_Day_Datev>
    8e0c:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
    8e10:	7b c0       	rjmp	.+246    	; 0x8f08 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x23e>
		if(_sSchedules.Based_On_Trigger_Time == _kSET)
		{
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				//_kSERAIL_MON_WRITE("sc enter 30");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e12:	81 30       	cpi	r24, 0x01	; 1
    8e14:	51 f4       	brne	.+20     	; 0x8e2a <_Z34Check_Time_For_Schedule_To_Triggerhh+0x160>
				{
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8e16:	6d ed       	ldi	r22, 0xDD	; 221
    8e18:	7b e0       	ldi	r23, 0x0B	; 11
    8e1a:	8f e6       	ldi	r24, 0x6F	; 111
    8e1c:	96 e1       	ldi	r25, 0x16	; 22
    8e1e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e22:	8f e6       	ldi	r24, 0x6F	; 111
    8e24:	96 e1       	ldi	r25, 0x16	; 22
    8e26:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8e2a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8e2e:	81 30       	cpi	r24, 0x01	; 1
    8e30:	f1 f4       	brne	.+60     	; 0x8e6e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8e32:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    8e36:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    8e3a:	89 2b       	or	r24, r25
    8e3c:	09 f1       	breq	.+66     	; 0x8e80 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1b6>
    8e3e:	17 c0       	rjmp	.+46     	; 0x8e6e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				}
			}
			
			if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC && Case_Number == 1)
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e40:	81 30       	cpi	r24, 0x01	; 1
    8e42:	81 f4       	brne	.+32     	; 0x8e64 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x19a>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
    8e44:	61 e5       	ldi	r22, 0x51	; 81
    8e46:	7b e0       	ldi	r23, 0x0B	; 11
    8e48:	8f e6       	ldi	r24, 0x6F	; 111
    8e4a:	96 e1       	ldi	r25, 0x16	; 22
    8e4c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
    8e50:	64 e0       	ldi	r22, 0x04	; 4
    8e52:	7b e0       	ldi	r23, 0x0B	; 11
    8e54:	8f e6       	ldi	r24, 0x6F	; 111
    8e56:	96 e1       	ldi	r25, 0x16	; 22
    8e58:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8e5c:	8f e6       	ldi	r24, 0x6F	; 111
    8e5e:	96 e1       	ldi	r25, 0x16	; 22
    8e60:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8e64:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8e68:	81 30       	cpi	r24, 0x01	; 1
    8e6a:	09 f4       	brne	.+2      	; 0x8e6e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
    8e6c:	8a c0       	rjmp	.+276    	; 0x8f82 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2b8>
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
				}
				
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
    8e6e:	60 91 fc 08 	lds	r22, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8e72:	4a e0       	ldi	r20, 0x0A	; 10
    8e74:	50 e0       	ldi	r21, 0x00	; 0
    8e76:	8f e6       	ldi	r24, 0x6F	; 111
    8e78:	96 e1       	ldi	r25, 0x16	; 22
    8e7a:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
    8e7e:	b8 c0       	rjmp	.+368    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8e80:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8e84:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8e88:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    8e8c:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8e90:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
    8e94:	ec cf       	rjmp	.-40     	; 0x8e6e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				_kSERIAL_MON_PRINT_NUM(_sSchedules.Started_Date);
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 31.1.2");
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    8e96:	81 30       	cpi	r24, 0x01	; 1
    8e98:	51 f4       	brne	.+20     	; 0x8eae <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1e4>
				{
					_kSERAIL_MON_WRITE("irrigating date upadte 5///////////////////////////////////////////");
    8e9a:	61 e7       	ldi	r22, 0x71	; 113
    8e9c:	7a e0       	ldi	r23, 0x0A	; 10
    8e9e:	8f e6       	ldi	r24, 0x6F	; 111
    8ea0:	96 e1       	ldi	r25, 0x16	; 22
    8ea2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    8ea6:	8f e6       	ldi	r24, 0x6F	; 111
    8ea8:	96 e1       	ldi	r25, 0x16	; 22
    8eaa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8eae:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    8eb2:	81 30       	cpi	r24, 0x01	; 1
    8eb4:	09 f0       	breq	.+2      	; 0x8eb8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1ee>
    8eb6:	9c c0       	rjmp	.+312    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8eb8:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    8ebc:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    8ec0:	89 2b       	or	r24, r25
    8ec2:	09 f0       	breq	.+2      	; 0x8ec6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1fc>
    8ec4:	95 c0       	rjmp	.+298    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
    8ec6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
				{
					if(check_days == 2)
    8eca:	d2 30       	cpi	r29, 0x02	; 2
    8ecc:	09 f0       	breq	.+2      	; 0x8ed0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x206>
    8ece:	7f c0       	rjmp	.+254    	; 0x8fce <_Z34Check_Time_For_Schedule_To_Triggerhh+0x304>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8ed0:	81 30       	cpi	r24, 0x01	; 1
    8ed2:	51 f4       	brne	.+20     	; 0x8ee8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x21e>
						{
							_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 5.1///////////////////////////////////////////");
    8ed4:	62 e2       	ldi	r22, 0x22	; 34
    8ed6:	7a e0       	ldi	r23, 0x0A	; 10
    8ed8:	8f e6       	ldi	r24, 0x6F	; 111
    8eda:	96 e1       	ldi	r25, 0x16	; 22
    8edc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8ee0:	8f e6       	ldi	r24, 0x6F	; 111
    8ee2:	96 e1       	ldi	r25, 0x16	; 22
    8ee4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8ee8:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8eec:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
						_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8ef0:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    8ef4:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
							_kSERIAL_MON_CLEAR();
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
						_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8ef8:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8efc:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8f00:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    8f04:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
				{
					_sSchedules.Started_Date = Return_Previous_Day_Date();
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    8f08:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
    8f0c:	71 c0       	rjmp	.+226    	; 0x8ff0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x326>
			{
				//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
				
				if(_sSchedules.Trigger_Time < 600)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f0e:	81 30       	cpi	r24, 0x01	; 1
    8f10:	51 f4       	brne	.+20     	; 0x8f26 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x25c>
					{
						_kSERAIL_MON_WRITE("sc enter 11.1.0.0.0");
    8f12:	65 e8       	ldi	r22, 0x85	; 133
    8f14:	7b e0       	ldi	r23, 0x0B	; 11
    8f16:	8f e6       	ldi	r24, 0x6F	; 111
    8f18:	96 e1       	ldi	r25, 0x16	; 22
    8f1a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8f1e:	8f e6       	ldi	r24, 0x6F	; 111
    8f20:	96 e1       	ldi	r25, 0x16	; 22
    8f22:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					_sSchedules.Trigger_Time = 600;
    8f26:	88 e5       	ldi	r24, 0x58	; 88
    8f28:	92 e0       	ldi	r25, 0x02	; 2
    8f2a:	a0 e0       	ldi	r26, 0x00	; 0
    8f2c:	b0 e0       	ldi	r27, 0x00	; 0
    8f2e:	80 93 03 09 	sts	0x0903, r24	; 0x800903 <_sSchedules+0x13>
    8f32:	90 93 04 09 	sts	0x0904, r25	; 0x800904 <_sSchedules+0x14>
    8f36:	a0 93 05 09 	sts	0x0905, r26	; 0x800905 <_sSchedules+0x15>
    8f3a:	b0 93 06 09 	sts	0x0906, r27	; 0x800906 <_sSchedules+0x16>
    8f3e:	0c c0       	rjmp	.+24     	; 0x8f58 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
							_kSERIAL_MON_CLEAR();
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f40:	81 30       	cpi	r24, 0x01	; 1
    8f42:	51 f4       	brne	.+20     	; 0x8f58 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x28e>
						{
							_kSERAIL_MON_WRITE("sc enter 11.2.0.2");
    8f44:	61 e6       	ldi	r22, 0x61	; 97
    8f46:	7b e0       	ldi	r23, 0x0B	; 11
    8f48:	8f e6       	ldi	r24, 0x6F	; 111
    8f4a:	96 e1       	ldi	r25, 0x16	; 22
    8f4c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8f50:	8f e6       	ldi	r24, 0x6F	; 111
    8f52:	96 e1       	ldi	r25, 0x16	; 22
    8f54:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    8f58:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    8f5c:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    8f60:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    8f64:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    8f68:	8c 52       	subi	r24, 0x2C	; 44
    8f6a:	91 40       	sbci	r25, 0x01	; 1
    8f6c:	a1 09       	sbc	r26, r1
    8f6e:	b1 09       	sbc	r27, r1
    8f70:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <_sSchedules+0x17>
    8f74:	90 93 08 09 	sts	0x0908, r25	; 0x800908 <_sSchedules+0x18>
    8f78:	a0 93 09 09 	sts	0x0909, r26	; 0x800909 <_sSchedules+0x19>
    8f7c:	b0 93 0a 09 	sts	0x090A, r27	; 0x80090a <_sSchedules+0x1a>
    8f80:	17 cf       	rjmp	.-466    	; 0x8db0 <_Z34Check_Time_For_Schedule_To_Triggerhh+0xe6>
				{
					_kSERAIL_MON_WRITE("sc enter 30.1.1");
					_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4///////////////////////////////////////////");
					_kSERIAL_MON_CLEAR();
				}
				if((_sSchedules.Which_Sheduler_Is_Running == 1) && (_sSchedules.Keep_Scheduler_Run_Timer == 0))
    8f82:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    8f86:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    8f8a:	89 2b       	or	r24, r25
    8f8c:	09 f0       	breq	.+2      	; 0x8f90 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2c6>
    8f8e:	6f cf       	rjmp	.-290    	; 0x8e6e <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1a4>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    8f90:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    8f94:	81 30       	cpi	r24, 0x01	; 1
    8f96:	51 f4       	brne	.+20     	; 0x8fac <_Z34Check_Time_For_Schedule_To_Triggerhh+0x2e2>
					{
						_kSERAIL_MON_WRITE("_sSchedules.Started_Date upadte 4.1///////////////////////////////////////////");
    8f98:	65 eb       	ldi	r22, 0xB5	; 181
    8f9a:	7a e0       	ldi	r23, 0x0A	; 10
    8f9c:	8f e6       	ldi	r24, 0x6F	; 111
    8f9e:	96 e1       	ldi	r25, 0x16	; 22
    8fa0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    8fa4:	8f e6       	ldi	r24, 0x6F	; 111
    8fa6:	96 e1       	ldi	r25, 0x16	; 22
    8fa8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					_sSchedules.Started_Date = _sRuble_Parameters.Update_Local_Date[0];
    8fac:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    8fb0:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
					_sSchedules.Started_Month = _sRuble_Parameters.Update_Local_Date[1];
    8fb4:	80 91 aa 15 	lds	r24, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    8fb8:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
					
					_sSchedules.First_Schedule_Irrigated_Date  = _sSchedules.Started_Date;
    8fbc:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    8fc0:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
					_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    8fc4:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    8fc8:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
    8fcc:	61 cf       	rjmp	.-318    	; 0x8e90 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x1c6>
						_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
						_sSchedules.Pump_On_In_Scheduler = _kRESET;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    8fce:	81 30       	cpi	r24, 0x01	; 1
    8fd0:	51 f4       	brne	.+20     	; 0x8fe6 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x31c>
						{
							_kSERAIL_MON_WRITE("irrigating date upadte 5.2///////////////////////////////////////////");
    8fd2:	6c ed       	ldi	r22, 0xDC	; 220
    8fd4:	79 e0       	ldi	r23, 0x09	; 9
    8fd6:	8f e6       	ldi	r24, 0x6F	; 111
    8fd8:	96 e1       	ldi	r25, 0x16	; 22
    8fda:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    8fde:	8f e6       	ldi	r24, 0x6F	; 111
    8fe0:	96 e1       	ldi	r25, 0x16	; 22
    8fe2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.Started_Date = Return_Previous_Day_Date();
    8fe6:	0e 94 1d 32 	call	0x643a	; 0x643a <_Z24Return_Previous_Day_Datev>
    8fea:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
    8fee:	84 cf       	rjmp	.-248    	; 0x8ef8 <_Z34Check_Time_For_Schedule_To_Triggerhh+0x22e>
			}
		}
		/* save in eeprom */
	}
	
	_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    8ff0:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
}
    8ff4:	80 e0       	ldi	r24, 0x00	; 0
    8ff6:	df 91       	pop	r29
    8ff8:	cf 91       	pop	r28
    8ffa:	08 95       	ret

00008ffc <_Z30Compare_Trigger_And_Reset_Timev>:

unsigned char Compare_Trigger_And_Reset_Time(void)
{
    8ffc:	0f 93       	push	r16
    8ffe:	1f 93       	push	r17
    9000:	cf 93       	push	r28
	unsigned char check_true_condition = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _kSET)
    9002:	90 91 0b 09 	lds	r25, 0x090B	; 0x80090b <_sSchedules+0x1b>
    9006:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    900a:	91 30       	cpi	r25, 0x01	; 1
    900c:	09 f0       	breq	.+2      	; 0x9010 <_Z30Compare_Trigger_And_Reset_Timev+0x14>
    900e:	51 c0       	rjmp	.+162    	; 0x90b2 <_Z30Compare_Trigger_And_Reset_Timev+0xb6>
	{
		if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    9010:	20 91 a9 0b 	lds	r18, 0x0BA9	; 0x800ba9 <_sSchedules+0x2b9>
    9014:	90 91 a9 15 	lds	r25, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    9018:	29 13       	cpse	r18, r25
    901a:	17 c0       	rjmp	.+46     	; 0x904a <_Z30Compare_Trigger_And_Reset_Timev+0x4e>
		{
			if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    901c:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    9020:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    9024:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    9028:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    902c:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    9030:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    9034:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    9038:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    903c:	48 17       	cp	r20, r24
    903e:	59 07       	cpc	r21, r25
    9040:	6a 07       	cpc	r22, r26
    9042:	7b 07       	cpc	r23, r27
    9044:	08 f4       	brcc	.+2      	; 0x9048 <_Z30Compare_Trigger_And_Reset_Timev+0x4c>
    9046:	7f c0       	rjmp	.+254    	; 0x9146 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
    9048:	f9 c0       	rjmp	.+498    	; 0x923c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
		}
		else
		{
			/* check which is the current date */
			//_kSERAIL_MON_WRITE("sc enter 21.1");
			if(_sSchedules.all_schedule_done_flag == _eSET)
    904a:	90 91 0e 09 	lds	r25, 0x090E	; 0x80090e <_sSchedules+0x1e>
    904e:	92 30       	cpi	r25, 0x02	; 2
    9050:	09 f0       	breq	.+2      	; 0x9054 <_Z30Compare_Trigger_And_Reset_Timev+0x58>
    9052:	f6 c0       	rjmp	.+492    	; 0x9240 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9054:	81 30       	cpi	r24, 0x01	; 1
    9056:	51 f4       	brne	.+20     	; 0x906c <_Z30Compare_Trigger_And_Reset_Timev+0x70>
				{
					_kSERAIL_MON_WRITE("sc enter 22");
    9058:	60 ed       	ldi	r22, 0xD0	; 208
    905a:	79 e0       	ldi	r23, 0x09	; 9
    905c:	8f e6       	ldi	r24, 0x6F	; 111
    905e:	96 e1       	ldi	r25, 0x16	; 22
    9060:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9064:	8f e6       	ldi	r24, 0x6F	; 111
    9066:	96 e1       	ldi	r25, 0x16	; 22
    9068:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				
				check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    906c:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <_sSchedules+0x1c>
    9070:	0e 94 bf 33 	call	0x677e	; 0x677e <_Z22Day_In_Bet_Schedullingh>
    9074:	c8 2f       	mov	r28, r24
				
				if(check_true_condition == 2)
    9076:	82 30       	cpi	r24, 0x02	; 2
    9078:	41 f4       	brne	.+16     	; 0x908a <_Z30Compare_Trigger_And_Reset_Timev+0x8e>
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    907a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    907e:	81 30       	cpi	r24, 0x01	; 1
    9080:	09 f0       	breq	.+2      	; 0x9084 <_Z30Compare_Trigger_And_Reset_Timev+0x88>
    9082:	b2 c0       	rjmp	.+356    	; 0x91e8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
					{
						_kSERAIL_MON_WRITE("sc enter 23");
    9084:	64 ec       	ldi	r22, 0xC4	; 196
    9086:	79 e0       	ldi	r23, 0x09	; 9
    9088:	a7 c0       	rjmp	.+334    	; 0x91d8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
					_sSchedules.all_schedule_done_flag = _eNOT_SET;
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
				}
				else
				{
					if(check_true_condition == 1)
    908a:	81 30       	cpi	r24, 0x01	; 1
    908c:	09 f0       	breq	.+2      	; 0x9090 <_Z30Compare_Trigger_And_Reset_Timev+0x94>
    908e:	d6 c0       	rjmp	.+428    	; 0x923c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
					{
						if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    9090:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    9094:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    9098:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    909c:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    90a0:	83 34       	cpi	r24, 0x43	; 67
    90a2:	91 45       	sbci	r25, 0x51	; 81
    90a4:	a1 40       	sbci	r26, 0x01	; 1
    90a6:	b1 05       	cpc	r27, r1
    90a8:	08 f0       	brcs	.+2      	; 0x90ac <_Z30Compare_Trigger_And_Reset_Timev+0xb0>
    90aa:	c8 c0       	rjmp	.+400    	; 0x923c <_Z30Compare_Trigger_And_Reset_Timev+0x240>
						{
							//_kSERAIL_MON_WRITE("sc enter 24");
							check_true_condition = 1;
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
    90ac:	c0 93 0e 09 	sts	0x090E, r28	; 0x80090e <_sSchedules+0x1e>
    90b0:	9e c0       	rjmp	.+316    	; 0x91ee <_Z30Compare_Trigger_And_Reset_Timev+0x1f2>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    90b2:	20 91 0b 09 	lds	r18, 0x090B	; 0x80090b <_sSchedules+0x1b>
    90b6:	90 91 13 16 	lds	r25, 0x1613	; 0x801613 <_sRuble_Parameters+0xae>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    90ba:	21 11       	cpse	r18, r1
    90bc:	1a c0       	rjmp	.+52     	; 0x90f2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    90be:	20 91 f3 08 	lds	r18, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
	
	
	
	else
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
    90c2:	21 11       	cpse	r18, r1
    90c4:	16 c0       	rjmp	.+44     	; 0x90f2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
    90c6:	91 30       	cpi	r25, 0x01	; 1
    90c8:	a1 f4       	brne	.+40     	; 0x90f2 <_Z30Compare_Trigger_And_Reset_Timev+0xf6>
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
    90ca:	20 91 ac 0b 	lds	r18, 0x0BAC	; 0x800bac <_sSchedules+0x2bc>
    90ce:	30 91 ad 0b 	lds	r19, 0x0BAD	; 0x800bad <_sSchedules+0x2bd>
    90d2:	23 2b       	or	r18, r19
    90d4:	89 f4       	brne	.+34     	; 0x90f8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    90d6:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    90da:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    90de:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    90e2:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    90e6:	45 2b       	or	r20, r21
    90e8:	46 2b       	or	r20, r22
    90ea:	47 2b       	or	r20, r23
    90ec:	09 f4       	brne	.+2      	; 0x90f0 <_Z30Compare_Trigger_And_Reset_Timev+0xf4>
    90ee:	bf c0       	rjmp	.+382    	; 0x926e <_Z30Compare_Trigger_And_Reset_Timev+0x272>
    90f0:	03 c0       	rjmp	.+6      	; 0x90f8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
			}
			check_true_condition = 1;
		}
		else
		{
			if(_sRuble_Parameters.Electricity_Status == _kON)
    90f2:	91 30       	cpi	r25, 0x01	; 1
    90f4:	09 f0       	breq	.+2      	; 0x90f8 <_Z30Compare_Trigger_And_Reset_Timev+0xfc>
    90f6:	96 c0       	rjmp	.+300    	; 0x9224 <_Z30Compare_Trigger_And_Reset_Timev+0x228>
			{
				if(_sSchedules.New_Schedul_Date == _sRuble_Parameters.Update_Local_Date[0])
    90f8:	20 91 a9 0b 	lds	r18, 0x0BA9	; 0x800ba9 <_sSchedules+0x2b9>
    90fc:	90 91 a9 15 	lds	r25, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    9100:	29 13       	cpse	r18, r25
    9102:	2a c0       	rjmp	.+84     	; 0x9158 <_Z30Compare_Trigger_And_Reset_Timev+0x15c>
				{
					if(_sSchedules.Trigger_Time < _sRuble_Parameters.Current_Time_In_Sec)
    9104:	00 91 03 09 	lds	r16, 0x0903	; 0x800903 <_sSchedules+0x13>
    9108:	10 91 04 09 	lds	r17, 0x0904	; 0x800904 <_sSchedules+0x14>
    910c:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <_sSchedules+0x15>
    9110:	30 91 06 09 	lds	r19, 0x0906	; 0x800906 <_sSchedules+0x16>
    9114:	40 91 75 15 	lds	r20, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    9118:	50 91 76 15 	lds	r21, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    911c:	60 91 77 15 	lds	r22, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    9120:	70 91 78 15 	lds	r23, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    9124:	04 17       	cp	r16, r20
    9126:	15 07       	cpc	r17, r21
    9128:	26 07       	cpc	r18, r22
    912a:	37 07       	cpc	r19, r23
    912c:	78 f4       	brcc	.+30     	; 0x914c <_Z30Compare_Trigger_And_Reset_Timev+0x150>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    912e:	81 30       	cpi	r24, 0x01	; 1
    9130:	51 f4       	brne	.+20     	; 0x9146 <_Z30Compare_Trigger_And_Reset_Timev+0x14a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.1");
    9132:	60 ea       	ldi	r22, 0xA0	; 160
    9134:	79 e0       	ldi	r23, 0x09	; 9
    9136:	8f e6       	ldi	r24, 0x6F	; 111
    9138:	96 e1       	ldi	r25, 0x16	; 22
    913a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    913e:	8f e6       	ldi	r24, 0x6F	; 111
    9140:	96 e1       	ldi	r25, 0x16	; 22
    9142:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sSchedules.New_Schedul_Date = _kRESET;
    9146:	10 92 a9 0b 	sts	0x0BA9, r1	; 0x800ba9 <_sSchedules+0x2b9>
    914a:	7a c0       	rjmp	.+244    	; 0x9240 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
						check_true_condition = 1;
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    914c:	81 30       	cpi	r24, 0x01	; 1
    914e:	09 f0       	breq	.+2      	; 0x9152 <_Z30Compare_Trigger_And_Reset_Timev+0x156>
    9150:	93 c0       	rjmp	.+294    	; 0x9278 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.2");
    9152:	6c e8       	ldi	r22, 0x8C	; 140
    9154:	79 e0       	ldi	r23, 0x09	; 9
    9156:	6a c0       	rjmp	.+212    	; 0x922c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
						check_true_condition = _kRESET;
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9158:	81 30       	cpi	r24, 0x01	; 1
    915a:	51 f4       	brne	.+20     	; 0x9170 <_Z30Compare_Trigger_And_Reset_Timev+0x174>
					{
						_kSERAIL_MON_WRITE("sc 1 enter 12");
    915c:	6e e7       	ldi	r22, 0x7E	; 126
    915e:	79 e0       	ldi	r23, 0x09	; 9
    9160:	8f e6       	ldi	r24, 0x6F	; 111
    9162:	96 e1       	ldi	r25, 0x16	; 22
    9164:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9168:	8f e6       	ldi	r24, 0x6F	; 111
    916a:	96 e1       	ldi	r25, 0x16	; 22
    916c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.all_schedule_done_flag == _eSET)
    9170:	90 91 0e 09 	lds	r25, 0x090E	; 0x80090e <_sSchedules+0x1e>
    9174:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9178:	92 30       	cpi	r25, 0x02	; 2
    917a:	09 f0       	breq	.+2      	; 0x917e <_Z30Compare_Trigger_And_Reset_Timev+0x182>
    917c:	46 c0       	rjmp	.+140    	; 0x920a <_Z30Compare_Trigger_And_Reset_Timev+0x20e>
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    917e:	81 30       	cpi	r24, 0x01	; 1
    9180:	51 f4       	brne	.+20     	; 0x9196 <_Z30Compare_Trigger_And_Reset_Timev+0x19a>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 13");
    9182:	60 e7       	ldi	r22, 0x70	; 112
    9184:	79 e0       	ldi	r23, 0x09	; 9
    9186:	8f e6       	ldi	r24, 0x6F	; 111
    9188:	96 e1       	ldi	r25, 0x16	; 22
    918a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    918e:	8f e6       	ldi	r24, 0x6F	; 111
    9190:	96 e1       	ldi	r25, 0x16	; 22
    9192:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						check_true_condition = Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules);
    9196:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <_sSchedules+0x1c>
    919a:	0e 94 bf 33 	call	0x677e	; 0x677e <_Z22Day_In_Bet_Schedullingh>
    919e:	c8 2f       	mov	r28, r24
    91a0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
							
						if(check_true_condition == 2)
    91a4:	c2 30       	cpi	r28, 0x02	; 2
    91a6:	29 f4       	brne	.+10     	; 0x91b2 <_Z30Compare_Trigger_And_Reset_Timev+0x1b6>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    91a8:	81 30       	cpi	r24, 0x01	; 1
    91aa:	f1 f4       	brne	.+60     	; 0x91e8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
							{
								_kSERAIL_MON_WRITE("sc 1 enter 14");
    91ac:	62 e6       	ldi	r22, 0x62	; 98
    91ae:	79 e0       	ldi	r23, 0x09	; 9
    91b0:	13 c0       	rjmp	.+38     	; 0x91d8 <_Z30Compare_Trigger_And_Reset_Timev+0x1dc>
							_sSchedules.all_schedule_done_flag = _eNOT_SET;
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
						}
						else
						{
							if(check_true_condition == 1)
    91b2:	c1 30       	cpi	r28, 0x01	; 1
    91b4:	29 f5       	brne	.+74     	; 0x9200 <_Z30Compare_Trigger_And_Reset_Timev+0x204>
							{
								if(_sSchedules.Trigger_Time < _kMAX_TIME_IN_SEC)
    91b6:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    91ba:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    91be:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    91c2:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    91c6:	43 34       	cpi	r20, 0x43	; 67
    91c8:	51 45       	sbci	r21, 0x51	; 81
    91ca:	61 40       	sbci	r22, 0x01	; 1
    91cc:	71 05       	cpc	r23, r1
    91ce:	90 f4       	brcc	.+36     	; 0x91f4 <_Z30Compare_Trigger_And_Reset_Timev+0x1f8>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    91d0:	81 30       	cpi	r24, 0x01	; 1
    91d2:	51 f4       	brne	.+20     	; 0x91e8 <_Z30Compare_Trigger_And_Reset_Timev+0x1ec>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15");
    91d4:	64 e5       	ldi	r22, 0x54	; 84
    91d6:	79 e0       	ldi	r23, 0x09	; 9
    91d8:	8f e6       	ldi	r24, 0x6F	; 111
    91da:	96 e1       	ldi	r25, 0x16	; 22
    91dc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    91e0:	8f e6       	ldi	r24, 0x6F	; 111
    91e2:	96 e1       	ldi	r25, 0x16	; 22
    91e4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									check_true_condition = 1;
									_sSchedules.all_schedule_done_flag = _eNOT_SET;
    91e8:	81 e0       	ldi	r24, 0x01	; 1
    91ea:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <_sSchedules+0x1e>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    91ee:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
    91f2:	27 c0       	rjmp	.+78     	; 0x9242 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    91f4:	81 30       	cpi	r24, 0x01	; 1
    91f6:	09 f0       	breq	.+2      	; 0x91fa <_Z30Compare_Trigger_And_Reset_Timev+0x1fe>
    91f8:	3f c0       	rjmp	.+126    	; 0x9278 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
									{
										_kSERAIL_MON_WRITE("sc 1 enter 15.1");
    91fa:	64 e4       	ldi	r22, 0x44	; 68
    91fc:	79 e0       	ldi	r23, 0x09	; 9
    91fe:	16 c0       	rjmp	.+44     	; 0x922c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
									check_true_condition = 0;
								}
							}
							else
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9200:	81 30       	cpi	r24, 0x01	; 1
    9202:	d1 f5       	brne	.+116    	; 0x9278 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
								{
									_kSERAIL_MON_WRITE("sc 1 enter 15.2");
    9204:	64 e3       	ldi	r22, 0x34	; 52
    9206:	79 e0       	ldi	r23, 0x09	; 9
    9208:	11 c0       	rjmp	.+34     	; 0x922c <_Z30Compare_Trigger_And_Reset_Timev+0x230>
							}
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    920a:	81 30       	cpi	r24, 0x01	; 1
    920c:	b9 f5       	brne	.+110    	; 0x927c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
						{
							_kSERAIL_MON_WRITE("sc 1 enter 15.3");
    920e:	64 e2       	ldi	r22, 0x24	; 36
    9210:	79 e0       	ldi	r23, 0x09	; 9
    9212:	8f e6       	ldi	r24, 0x6F	; 111
    9214:	96 e1       	ldi	r25, 0x16	; 22
    9216:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    921a:	8f e6       	ldi	r24, 0x6F	; 111
    921c:	96 e1       	ldi	r25, 0x16	; 22
    921e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9222:	0e c0       	rjmp	.+28     	; 0x9240 <_Z30Compare_Trigger_And_Reset_Timev+0x244>
					}
				}
			}
			else
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9224:	81 30       	cpi	r24, 0x01	; 1
    9226:	41 f5       	brne	.+80     	; 0x9278 <_Z30Compare_Trigger_And_Reset_Timev+0x27c>
				{
					_kSERAIL_MON_WRITE("sc 1 enter 12.0.0.4");
    9228:	60 e1       	ldi	r22, 0x10	; 16
    922a:	79 e0       	ldi	r23, 0x09	; 9
    922c:	8f e6       	ldi	r24, 0x6F	; 111
    922e:	96 e1       	ldi	r25, 0x16	; 22
    9230:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9234:	8f e6       	ldi	r24, 0x6F	; 111
    9236:	96 e1       	ldi	r25, 0x16	; 22
    9238:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				check_true_condition = _kRESET;
    923c:	c0 e0       	ldi	r28, 0x00	; 0
    923e:	01 c0       	rjmp	.+2      	; 0x9242 <_Z30Compare_Trigger_And_Reset_Timev+0x246>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    9240:	c1 e0       	ldi	r28, 0x01	; 1
				}
				check_true_condition = _kRESET;
			}
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9242:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9246:	81 30       	cpi	r24, 0x01	; 1
    9248:	d1 f4       	brne	.+52     	; 0x927e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		_kSERAIL_MON_WRITE("check_true_condition");
    924a:	6b ef       	ldi	r22, 0xFB	; 251
    924c:	78 e0       	ldi	r23, 0x08	; 8
    924e:	8f e6       	ldi	r24, 0x6F	; 111
    9250:	96 e1       	ldi	r25, 0x16	; 22
    9252:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
    9256:	4a e0       	ldi	r20, 0x0A	; 10
    9258:	50 e0       	ldi	r21, 0x00	; 0
    925a:	6c 2f       	mov	r22, r28
    925c:	8f e6       	ldi	r24, 0x6F	; 111
    925e:	96 e1       	ldi	r25, 0x16	; 22
    9260:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    9264:	8f e6       	ldi	r24, 0x6F	; 111
    9266:	96 e1       	ldi	r25, 0x16	; 22
    9268:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    926c:	08 c0       	rjmp	.+16     	; 0x927e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
	{
		if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) &&
		(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON)
		&& _sSchedules.Back_Up_Pump_Running_Time == _kRESET && _sSchedules.Trigger_Time == _kRESET)
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    926e:	81 30       	cpi	r24, 0x01	; 1
    9270:	29 f4       	brne	.+10     	; 0x927c <_Z30Compare_Trigger_And_Reset_Timev+0x280>
			{
				_kSERAIL_MON_WRITE("sc 1 enter 12.0");
    9272:	64 eb       	ldi	r22, 0xB4	; 180
    9274:	79 e0       	ldi	r23, 0x09	; 9
    9276:	cd cf       	rjmp	.-102    	; 0x9212 <_Z30Compare_Trigger_And_Reset_Timev+0x216>
				check_true_condition = 1;
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 21.0.1");
				check_true_condition = 0;
    9278:	c0 e0       	ldi	r28, 0x00	; 0
    927a:	01 c0       	rjmp	.+2      	; 0x927e <_Z30Compare_Trigger_And_Reset_Timev+0x282>
				}
			}
			else
			{
				//_kSERAIL_MON_WRITE("sc enter 25.1");
				check_true_condition = 1;
    927c:	c1 e0       	ldi	r28, 0x01	; 1
		_kSERAIL_MON_WRITE("check_true_condition");
		_kSERIAL_MON_PRINT_NUM(check_true_condition);
		_kSERIAL_MON_CLEAR();
	}
	return check_true_condition;
}
    927e:	8c 2f       	mov	r24, r28
    9280:	cf 91       	pop	r28
    9282:	1f 91       	pop	r17
    9284:	0f 91       	pop	r16
    9286:	08 95       	ret

00009288 <_Z16Set_Trigger_Timev>:

unsigned char Set_Trigger_Time(void)
{
	unsigned char i = 0;
	
	if(_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY)
    9288:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
    928c:	81 11       	cpse	r24, r1
    928e:	2a c0       	rjmp	.+84     	; 0x92e4 <_Z16Set_Trigger_Timev+0x5c>
	{
		for(i=0; _sSchedules.Schedule_Status[i]>0; i++)
    9290:	80 91 2d 09 	lds	r24, 0x092D	; 0x80092d <_sSchedules+0x3d>
		{
			break;
		}
		
		if(_sSchedules.Which_Sheduler_Is_Running-1 == i && _sSchedules.Keep_Scheduler_Run_Timer == 0)
    9294:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    9298:	81 30       	cpi	r24, 0x01	; 1
    929a:	21 f5       	brne	.+72     	; 0x92e4 <_Z16Set_Trigger_Timev+0x5c>
    929c:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    92a0:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    92a4:	89 2b       	or	r24, r25
    92a6:	f1 f4       	brne	.+60     	; 0x92e4 <_Z16Set_Trigger_Timev+0x5c>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    92a8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    92ac:	81 30       	cpi	r24, 0x01	; 1
    92ae:	51 f4       	brne	.+20     	; 0x92c4 <_Z16Set_Trigger_Timev+0x3c>
			{
				_kSERAIL_MON_WRITE("trigger time set");
    92b0:	6a ee       	ldi	r22, 0xEA	; 234
    92b2:	78 e0       	ldi	r23, 0x08	; 8
    92b4:	8f e6       	ldi	r24, 0x6F	; 111
    92b6:	96 e1       	ldi	r25, 0x16	; 22
    92b8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    92bc:	8f e6       	ldi	r24, 0x6F	; 111
    92be:	96 e1       	ldi	r25, 0x16	; 22
    92c0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sSchedules.Trigger_Time = _sRuble_Parameters.Current_Time_In_Sec;
    92c4:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    92c8:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    92cc:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    92d0:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    92d4:	80 93 03 09 	sts	0x0903, r24	; 0x800903 <_sSchedules+0x13>
    92d8:	90 93 04 09 	sts	0x0904, r25	; 0x800904 <_sSchedules+0x14>
    92dc:	a0 93 05 09 	sts	0x0905, r26	; 0x800905 <_sSchedules+0x15>
    92e0:	b0 93 06 09 	sts	0x0906, r27	; 0x800906 <_sSchedules+0x16>
			//_sSchedules.Trigger_Time = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]);
		}
	}	
}
    92e4:	80 e0       	ldi	r24, 0x00	; 0
    92e6:	08 95       	ret

000092e8 <_Z17Doser_Pump_On_Offh>:
	
	return 1;
}

char Doser_Pump_On_Off(unsigned char on_off)
{
    92e8:	2f 92       	push	r2
    92ea:	3f 92       	push	r3
    92ec:	4f 92       	push	r4
    92ee:	5f 92       	push	r5
    92f0:	6f 92       	push	r6
    92f2:	7f 92       	push	r7
    92f4:	8f 92       	push	r8
    92f6:	9f 92       	push	r9
    92f8:	af 92       	push	r10
    92fa:	bf 92       	push	r11
    92fc:	cf 92       	push	r12
    92fe:	df 92       	push	r13
    9300:	ef 92       	push	r14
    9302:	ff 92       	push	r15
    9304:	0f 93       	push	r16
    9306:	1f 93       	push	r17
    9308:	cf 93       	push	r28
    930a:	df 93       	push	r29
    930c:	18 2f       	mov	r17, r24
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	unsigned char tank_number,number_of_running_tanks; 
	number_of_running_tanks = 0;
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number == 0 || 
    930e:	80 91 a0 0f 	lds	r24, 0x0FA0	; 0x800fa0 <_sExtra_Plot+0x1>
    9312:	84 36       	cpi	r24, 0x64	; 100
    9314:	08 f4       	brcc	.+2      	; 0x9318 <_Z17Doser_Pump_On_Offh+0x30>
    9316:	39 c3       	rjmp	.+1650   	; 0x998a <_Z17Doser_Pump_On_Offh+0x6a2>
	_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Extra_Plot_Number < 100)
	{
		return 1;
	}
	
	if(on_off == _kON && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    9318:	11 30       	cpi	r17, 0x01	; 1
    931a:	29 f4       	brne	.+10     	; 0x9326 <_Z17Doser_Pump_On_Offh+0x3e>
    931c:	80 91 a1 0f 	lds	r24, 0x0FA1	; 0x800fa1 <_sExtra_Plot+0x2>
    9320:	84 30       	cpi	r24, 0x04	; 4
    9322:	c1 f4       	brne	.+48     	; 0x9354 <_Z17Doser_Pump_On_Offh+0x6c>
    9324:	32 c3       	rjmp	.+1636   	; 0x998a <_Z17Doser_Pump_On_Offh+0x6a2>
	{
		return 1;
	}
	
	if(on_off == _kOFF)
    9326:	11 11       	cpse	r17, r1
    9328:	12 c0       	rjmp	.+36     	; 0x934e <_Z17Doser_Pump_On_Offh+0x66>
    932a:	80 e0       	ldi	r24, 0x00	; 0
    932c:	90 e0       	ldi	r25, 0x00	; 0
    932e:	20 e0       	ldi	r18, 0x00	; 0
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
		{
			if(_sSchedules.Running_Tank[tank_number] == _kON)
    9330:	fc 01       	movw	r30, r24
    9332:	e0 5b       	subi	r30, 0xB0	; 176
    9334:	f4 4f       	sbci	r31, 0xF4	; 244
    9336:	30 81       	ld	r19, Z
    9338:	31 30       	cpi	r19, 0x01	; 1
    933a:	09 f4       	brne	.+2      	; 0x933e <_Z17Doser_Pump_On_Offh+0x56>
			{
				number_of_running_tanks++;
    933c:	2f 5f       	subi	r18, 0xFF	; 255
    933e:	01 96       	adiw	r24, 0x01	; 1
		return 1;
	}
	
	if(on_off == _kOFF)
	{
		for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    9340:	83 30       	cpi	r24, 0x03	; 3
    9342:	91 05       	cpc	r25, r1
    9344:	a9 f7       	brne	.-22     	; 0x9330 <_Z17Doser_Pump_On_Offh+0x48>
			if(_sSchedules.Running_Tank[tank_number] == _kON)
			{
				number_of_running_tanks++;
			}
		}
		if(number_of_running_tanks > 1)
    9346:	22 30       	cpi	r18, 0x02	; 2
    9348:	08 f0       	brcs	.+2      	; 0x934c <_Z17Doser_Pump_On_Offh+0x64>
    934a:	1f c3       	rjmp	.+1598   	; 0x998a <_Z17Doser_Pump_On_Offh+0x6a2>
    934c:	03 c0       	rjmp	.+6      	; 0x9354 <_Z17Doser_Pump_On_Offh+0x6c>
			return 1;
		}
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
    934e:	13 30       	cpi	r17, 0x03	; 3
    9350:	09 f4       	brne	.+2      	; 0x9354 <_Z17Doser_Pump_On_Offh+0x6c>
	{
		on_off = _kOFF;
    9352:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].On_Off_Status == _kSET)
    9354:	80 91 9f 0f 	lds	r24, 0x0F9F	; 0x800f9f <_sExtra_Plot>
    9358:	81 11       	cpse	r24, r1
    935a:	17 c3       	rjmp	.+1582   	; 0x998a <_Z17Doser_Pump_On_Offh+0x6a2>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    935c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9360:	81 30       	cpi	r24, 0x01	; 1
    9362:	09 f5       	brne	.+66     	; 0x93a6 <_Z17Doser_Pump_On_Offh+0xbe>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
    9364:	6f e7       	ldi	r22, 0x7F	; 127
    9366:	70 e1       	ldi	r23, 0x10	; 16
    9368:	8f e6       	ldi	r24, 0x6F	; 111
    936a:	96 e1       	ldi	r25, 0x16	; 22
    936c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9370:	8f e6       	ldi	r24, 0x6F	; 111
    9372:	96 e1       	ldi	r25, 0x16	; 22
    9374:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9378:	c4 ea       	ldi	r28, 0xA4	; 164
    937a:	df e0       	ldi	r29, 0x0F	; 15
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]);
    937c:	69 91       	ld	r22, Y+
    937e:	4a e0       	ldi	r20, 0x0A	; 10
    9380:	50 e0       	ldi	r21, 0x00	; 0
    9382:	8f e6       	ldi	r24, 0x6F	; 111
    9384:	96 e1       	ldi	r25, 0x16	; 22
    9386:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    938a:	6d e7       	ldi	r22, 0x7D	; 125
    938c:	70 e1       	ldi	r23, 0x10	; 16
    938e:	8f e6       	ldi	r24, 0x6F	; 111
    9390:	96 e1       	ldi	r25, 0x16	; 22
    9392:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    9396:	8f e6       	ldi	r24, 0x6F	; 111
    9398:	96 e1       	ldi	r25, 0x16	; 22
    939a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	{
		_kSERAIL_MON_WRITE("doser pump valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    939e:	2f e0       	ldi	r18, 0x0F	; 15
    93a0:	c9 3a       	cpi	r28, 0xA9	; 169
    93a2:	d2 07       	cpc	r29, r18
    93a4:	59 f7       	brne	.-42     	; 0x937c <_Z17Doser_Pump_On_Offh+0x94>
    93a6:	c4 ea       	ldi	r28, 0xA4	; 164
    93a8:	df e0       	ldi	r29, 0x0F	; 15
	}
	
	
	if(on_off == _kFORCEFULYY_OFF)
	{
		on_off = _kOFF;
    93aa:	7e 01       	movw	r14, r28
    93ac:	00 e0       	ldi	r16, 0x00	; 0
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    93ae:	99 24       	eor	r9, r9
    93b0:	93 94       	inc	r9
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    93b2:	57 e0       	ldi	r21, 0x07	; 7
    93b4:	c5 2e       	mov	r12, r21
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    93b6:	6d e0       	ldi	r22, 0x0D	; 13
    93b8:	d6 2e       	mov	r13, r22
    93ba:	54 c1       	rjmp	.+680    	; 0x9664 <_Z17Doser_Pump_On_Offh+0x37c>
			unsigned char valve_number =0;
			unsigned char euro_valve_num=0,command_valve=0;
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    93bc:	f3 e0       	ldi	r31, 0x03	; 3
    93be:	f8 15       	cp	r31, r8
    93c0:	08 f0       	brcs	.+2      	; 0x93c4 <_Z17Doser_Pump_On_Offh+0xdc>
    93c2:	5e c1       	rjmp	.+700    	; 0x9680 <_Z17Doser_Pump_On_Offh+0x398>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    93c4:	88 2d       	mov	r24, r8
    93c6:	63 e0       	ldi	r22, 0x03	; 3
    93c8:	0e 94 12 e7 	call	0x1ce24	; 0x1ce24 <__udivmodqi4>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    93cc:	2b ea       	ldi	r18, 0xAB	; 171
    93ce:	82 9e       	mul	r8, r18
    93d0:	21 2d       	mov	r18, r1
    93d2:	11 24       	eor	r1, r1
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    93d4:	99 23       	and	r25, r25
    93d6:	09 f4       	brne	.+2      	; 0x93da <_Z17Doser_Pump_On_Offh+0xf2>
    93d8:	4e c1       	rjmp	.+668    	; 0x9676 <_Z17Doser_Pump_On_Offh+0x38e>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    93da:	26 95       	lsr	r18
    93dc:	77 24       	eor	r7, r7
    93de:	73 94       	inc	r7
    93e0:	72 0e       	add	r7, r18
    93e2:	89 2e       	mov	r8, r25
				}
				
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    93e4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    93e8:	81 30       	cpi	r24, 0x01	; 1
    93ea:	89 f4       	brne	.+34     	; 0x940e <_Z17Doser_Pump_On_Offh+0x126>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    93ec:	69 e6       	ldi	r22, 0x69	; 105
    93ee:	70 e1       	ldi	r23, 0x10	; 16
    93f0:	8f e6       	ldi	r24, 0x6F	; 111
    93f2:	96 e1       	ldi	r25, 0x16	; 22
    93f4:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    93f8:	4a e0       	ldi	r20, 0x0A	; 10
    93fa:	50 e0       	ldi	r21, 0x00	; 0
    93fc:	67 2d       	mov	r22, r7
    93fe:	8f e6       	ldi	r24, 0x6F	; 111
    9400:	96 e1       	ldi	r25, 0x16	; 22
    9402:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9406:	8f e6       	ldi	r24, 0x6F	; 111
    9408:	96 e1       	ldi	r25, 0x16	; 22
    940a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    940e:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
    9412:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9414:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9418:	ec ea       	ldi	r30, 0xAC	; 172
    941a:	f5 e1       	ldi	r31, 0x15	; 21
    941c:	24 e1       	ldi	r18, 0x14	; 20
    941e:	11 92       	st	Z+, r1
    9420:	2a 95       	dec	r18
    9422:	e9 f7       	brne	.-6      	; 0x941e <_Z17Doser_Pump_On_Offh+0x136>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9424:	27 2d       	mov	r18, r7
    9426:	30 e0       	ldi	r19, 0x00	; 0
    9428:	21 50       	subi	r18, 0x01	; 1
    942a:	31 09       	sbc	r19, r1
    942c:	c2 9e       	mul	r12, r18
    942e:	c0 01       	movw	r24, r0
    9430:	c3 9e       	mul	r12, r19
    9432:	90 0d       	add	r25, r0
    9434:	11 24       	eor	r1, r1
    9436:	8b 59       	subi	r24, 0x9B	; 155
    9438:	9a 4e       	sbci	r25, 0xEA	; 234
    943a:	fc 01       	movw	r30, r24
    943c:	ec 58       	subi	r30, 0x8C	; 140
    943e:	ff 4f       	sbci	r31, 0xFF	; 255
    9440:	20 81       	ld	r18, Z
    9442:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9446:	31 96       	adiw	r30, 0x01	; 1
    9448:	20 81       	ld	r18, Z
    944a:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    944e:	31 96       	adiw	r30, 0x01	; 1
    9450:	20 81       	ld	r18, Z
    9452:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9456:	31 96       	adiw	r30, 0x01	; 1
    9458:	20 81       	ld	r18, Z
    945a:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    945e:	31 96       	adiw	r30, 0x01	; 1
    9460:	20 81       	ld	r18, Z
    9462:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9466:	31 96       	adiw	r30, 0x01	; 1
    9468:	20 81       	ld	r18, Z
    946a:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    946e:	32 e0       	ldi	r19, 0x02	; 2
    9470:	30 93 b2 15 	sts	0x15B2, r19	; 0x8015b2 <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9474:	10 93 b3 15 	sts	0x15B3, r17	; 0x8015b3 <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9478:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    947c:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9480:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
    9484:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9488:	80 92 b7 15 	sts	0x15B7, r8	; 0x8015b7 <_sRuble_Parameters+0x52>
    948c:	40 e0       	ldi	r20, 0x00	; 0
    948e:	50 e0       	ldi	r21, 0x00	; 0
    9490:	64 2e       	mov	r6, r20
    9492:	71 2c       	mov	r7, r1
    9494:	81 2c       	mov	r8, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9496:	d4 9e       	mul	r13, r20
    9498:	b0 01       	movw	r22, r0
    949a:	d5 9e       	mul	r13, r21
    949c:	70 0d       	add	r23, r0
    949e:	11 24       	eor	r1, r1
    94a0:	69 51       	subi	r22, 0x19	; 25
    94a2:	74 4f       	sbci	r23, 0xF4	; 244
    94a4:	28 2d       	mov	r18, r8
    94a6:	30 e0       	ldi	r19, 0x00	; 0
    94a8:	fb 01       	movw	r30, r22
    94aa:	e2 0f       	add	r30, r18
    94ac:	f3 1f       	adc	r31, r19
    94ae:	28 0f       	add	r18, r24
    94b0:	39 1f       	adc	r19, r25
    94b2:	d9 01       	movw	r26, r18
    94b4:	ac 58       	subi	r26, 0x8C	; 140
    94b6:	bf 4f       	sbci	r27, 0xFF	; 255
    94b8:	31 81       	ldd	r19, Z+1	; 0x01
    94ba:	2c 91       	ld	r18, X
    94bc:	32 17       	cp	r19, r18
    94be:	19 f0       	breq	.+6      	; 0x94c6 <_Z17Doser_Pump_On_Offh+0x1de>
					{
						compare_id = _kVALVE_ID_LEN;
    94c0:	36 e0       	ldi	r19, 0x06	; 6
    94c2:	83 2e       	mov	r8, r19
						id_len = _kRESET;
    94c4:	71 2c       	mov	r7, r1
					}
					id_len++;
    94c6:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    94c8:	83 94       	inc	r8
    94ca:	e5 e0       	ldi	r30, 0x05	; 5
    94cc:	e8 15       	cp	r30, r8
    94ce:	50 f7       	brcc	.-44     	; 0x94a4 <_Z17Doser_Pump_On_Offh+0x1bc>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    94d0:	f6 e0       	ldi	r31, 0x06	; 6
    94d2:	7f 16       	cp	r7, r31
    94d4:	09 f4       	brne	.+2      	; 0x94d8 <_Z17Doser_Pump_On_Offh+0x1f0>
    94d6:	d7 c0       	rjmp	.+430    	; 0x9686 <_Z17Doser_Pump_On_Offh+0x39e>
    94d8:	4f 5f       	subi	r20, 0xFF	; 255
    94da:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    94dc:	44 30       	cpi	r20, 0x04	; 4
    94de:	51 05       	cpc	r21, r1
    94e0:	b9 f6       	brne	.-82     	; 0x9490 <_Z17Doser_Pump_On_Offh+0x1a8>
				{
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    94e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    94e6:	81 30       	cpi	r24, 0x01	; 1
    94e8:	89 f4       	brne	.+34     	; 0x950c <_Z17Doser_Pump_On_Offh+0x224>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    94ea:	63 e5       	ldi	r22, 0x53	; 83
    94ec:	70 e1       	ldi	r23, 0x10	; 16
    94ee:	8f e6       	ldi	r24, 0x6F	; 111
    94f0:	96 e1       	ldi	r25, 0x16	; 22
    94f2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    94f6:	4a e0       	ldi	r20, 0x0A	; 10
    94f8:	50 e0       	ldi	r21, 0x00	; 0
    94fa:	60 2f       	mov	r22, r16
    94fc:	8f e6       	ldi	r24, 0x6F	; 111
    94fe:	96 e1       	ldi	r25, 0x16	; 22
    9500:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9504:	8f e6       	ldi	r24, 0x6F	; 111
    9506:	96 e1       	ldi	r25, 0x16	; 22
    9508:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    950c:	2d e0       	ldi	r18, 0x0D	; 13
    950e:	02 9f       	mul	r16, r18
    9510:	50 01       	movw	r10, r0
    9512:	11 24       	eor	r1, r1
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9514:	81 2c       	mov	r8, r1
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9516:	d0 9e       	mul	r13, r16
    9518:	c0 01       	movw	r24, r0
    951a:	11 24       	eor	r1, r1
    951c:	9c 01       	movw	r18, r24
    951e:	29 51       	subi	r18, 0x19	; 25
    9520:	34 4f       	sbci	r19, 0xF4	; 244
    9522:	19 01       	movw	r2, r18
    9524:	4b e0       	ldi	r20, 0x0B	; 11
    9526:	24 0e       	add	r2, r20
    9528:	31 1c       	adc	r3, r1
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    952a:	29 01       	movw	r4, r18
    952c:	e8 e0       	ldi	r30, 0x08	; 8
    952e:	4e 0e       	add	r4, r30
    9530:	51 1c       	adc	r5, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9532:	9c 01       	movw	r18, r24
    9534:	28 51       	subi	r18, 0x18	; 24
    9536:	34 4f       	sbci	r19, 0xF4	; 244
    9538:	39 01       	movw	r6, r18
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    953a:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
    953e:	81 11       	cpse	r24, r1
    9540:	a4 c0       	rjmp	.+328    	; 0x968a <_Z17Doser_Pump_On_Offh+0x3a2>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9542:	83 94       	inc	r8
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    9544:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9548:	81 30       	cpi	r24, 0x01	; 1
    954a:	51 f4       	brne	.+20     	; 0x9560 <_Z17Doser_Pump_On_Offh+0x278>
				{
					_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    954c:	6f e2       	ldi	r22, 0x2F	; 47
    954e:	70 e1       	ldi	r23, 0x10	; 16
    9550:	8f e6       	ldi	r24, 0x6F	; 111
    9552:	96 e1       	ldi	r25, 0x16	; 22
    9554:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    9558:	8f e6       	ldi	r24, 0x6F	; 111
    955a:	96 e1       	ldi	r25, 0x16	; 22
    955c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				Display_Update_1();    // 20/1/2022
    9560:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9564:	8c e0       	ldi	r24, 0x0C	; 12
    9566:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    956a:	88 eb       	ldi	r24, 0xB8	; 184
    956c:	9b e0       	ldi	r25, 0x0B	; 11
    956e:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    9572:	88 23       	and	r24, r24
    9574:	09 f4       	brne	.+2      	; 0x9578 <_Z17Doser_Pump_On_Offh+0x290>
    9576:	74 c1       	rjmp	.+744    	; 0x9860 <_Z17Doser_Pump_On_Offh+0x578>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9578:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
    957c:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9580:	88 23       	and	r24, r24
    9582:	09 f4       	brne	.+2      	; 0x9586 <_Z17Doser_Pump_On_Offh+0x29e>
    9584:	24 c1       	rjmp	.+584    	; 0x97ce <_Z17Doser_Pump_On_Offh+0x4e6>
					{
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9586:	91 30       	cpi	r25, 0x01	; 1
    9588:	59 f5       	brne	.+86     	; 0x95e0 <_Z17Doser_Pump_On_Offh+0x2f8>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    958a:	69 e1       	ldi	r22, 0x19	; 25
    958c:	70 e1       	ldi	r23, 0x10	; 16
    958e:	8f e6       	ldi	r24, 0x6F	; 111
    9590:	96 e1       	ldi	r25, 0x16	; 22
    9592:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
      if (str == NULL) return 0;
      return write((const uint8_t *)str, strlen(str));
    }
    virtual size_t write(const uint8_t *buffer, size_t size);
    size_t write(const char *buffer, size_t size) {
      return write((const uint8_t *)buffer, size);
    9596:	4a e0       	ldi	r20, 0x0A	; 10
    9598:	50 e0       	ldi	r21, 0x00	; 0
    959a:	60 ec       	ldi	r22, 0xC0	; 192
    959c:	75 e1       	ldi	r23, 0x15	; 21
    959e:	8f e6       	ldi	r24, 0x6F	; 111
    95a0:	96 e1       	ldi	r25, 0x16	; 22
    95a2:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    95a6:	8f e6       	ldi	r24, 0x6F	; 111
    95a8:	96 e1       	ldi	r25, 0x16	; 22
    95aa:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    95ae:	8f e6       	ldi	r24, 0x6F	; 111
    95b0:	96 e1       	ldi	r25, 0x16	; 22
    95b2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    95b6:	6b ef       	ldi	r22, 0xFB	; 251
    95b8:	7f e0       	ldi	r23, 0x0F	; 15
    95ba:	8f e6       	ldi	r24, 0x6F	; 111
    95bc:	96 e1       	ldi	r25, 0x16	; 22
    95be:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    95c2:	47 e0       	ldi	r20, 0x07	; 7
    95c4:	50 e0       	ldi	r21, 0x00	; 0
    95c6:	b3 01       	movw	r22, r6
    95c8:	8f e6       	ldi	r24, 0x6F	; 111
    95ca:	96 e1       	ldi	r25, 0x16	; 22
    95cc:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
							Serial.println();
    95d0:	8f e6       	ldi	r24, 0x6F	; 111
    95d2:	96 e1       	ldi	r25, 0x16	; 22
    95d4:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    95d8:	8f e6       	ldi	r24, 0x6F	; 111
    95da:	96 e1       	ldi	r25, 0x16	; 22
    95dc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    95e0:	a0 ec       	ldi	r26, 0xC0	; 192
    95e2:	b5 e1       	ldi	r27, 0x15	; 21
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    95e4:	80 e0       	ldi	r24, 0x00	; 0
    95e6:	90 e0       	ldi	r25, 0x00	; 0
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    95e8:	2d 91       	ld	r18, X+
    95ea:	f5 01       	movw	r30, r10
    95ec:	e8 0f       	add	r30, r24
    95ee:	f9 1f       	adc	r31, r25
    95f0:	e9 51       	subi	r30, 0x19	; 25
    95f2:	f4 4f       	sbci	r31, 0xF4	; 244
    95f4:	31 81       	ldd	r19, Z+1	; 0x01
    95f6:	32 17       	cp	r19, r18
    95f8:	09 f4       	brne	.+2      	; 0x95fc <_Z17Doser_Pump_On_Offh+0x314>
    95fa:	98 c0       	rjmp	.+304    	; 0x972c <_Z17Doser_Pump_On_Offh+0x444>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    95fc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9600:	81 30       	cpi	r24, 0x01	; 1
    9602:	51 f4       	brne	.+20     	; 0x9618 <_Z17Doser_Pump_On_Offh+0x330>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9604:	60 ed       	ldi	r22, 0xD0	; 208
    9606:	7f e0       	ldi	r23, 0x0F	; 15
    9608:	8f e6       	ldi	r24, 0x6F	; 111
    960a:	96 e1       	ldi	r25, 0x16	; 22
    960c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9610:	8f e6       	ldi	r24, 0x6F	; 111
    9612:	96 e1       	ldi	r25, 0x16	; 22
    9614:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9618:	32 e0       	ldi	r19, 0x02	; 2
    961a:	83 16       	cp	r8, r19
    961c:	09 f4       	brne	.+2      	; 0x9620 <_Z17Doser_Pump_On_Offh+0x338>
    961e:	4b c0       	rjmp	.+150    	; 0x96b6 <_Z17Doser_Pump_On_Offh+0x3ce>
								break;
							}
						}
						
						/* if id get matched */
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9620:	f1 01       	movw	r30, r2
    9622:	90 82       	st	Z, r9
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9624:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    9628:	90 e0       	ldi	r25, 0x00	; 0
    962a:	98 2f       	mov	r25, r24
    962c:	88 27       	eor	r24, r24
    962e:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    9632:	82 2b       	or	r24, r18
    9634:	f2 01       	movw	r30, r4
    9636:	91 83       	std	Z+1, r25	; 0x01
    9638:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    963a:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    963e:	18 13       	cpse	r17, r24
    9640:	7b c0       	rjmp	.+246    	; 0x9738 <_Z17Doser_Pump_On_Offh+0x450>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9642:	83 e0       	ldi	r24, 0x03	; 3
    9644:	88 2e       	mov	r8, r24
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9646:	68 ee       	ldi	r22, 0xE8	; 232
    9648:	73 e0       	ldi	r23, 0x03	; 3
    964a:	80 e0       	ldi	r24, 0x00	; 0
    964c:	90 e0       	ldi	r25, 0x00	; 0
    964e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9652:	23 e0       	ldi	r18, 0x03	; 3
    9654:	82 12       	cpse	r8, r18
    9656:	71 cf       	rjmp	.-286    	; 0x953a <_Z17Doser_Pump_On_Offh+0x252>
			_kSERIAL_MON_CLEAR();
		}
	}
	
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9658:	49 ea       	ldi	r20, 0xA9	; 169
    965a:	e4 16       	cp	r14, r20
    965c:	4f e0       	ldi	r20, 0x0F	; 15
    965e:	f4 06       	cpc	r15, r20
    9660:	09 f4       	brne	.+2      	; 0x9664 <_Z17Doser_Pump_On_Offh+0x37c>
    9662:	5e c1       	rjmp	.+700    	; 0x9920 <_Z17Doser_Pump_On_Offh+0x638>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > 0)
    9664:	f7 01       	movw	r30, r14
    9666:	81 90       	ld	r8, Z+
    9668:	7f 01       	movw	r14, r30
    966a:	8f ef       	ldi	r24, 0xFF	; 255
    966c:	88 0d       	add	r24, r8
    966e:	8c 30       	cpi	r24, 0x0C	; 12
    9670:	08 f0       	brcs	.+2      	; 0x9674 <_Z17Doser_Pump_On_Offh+0x38c>
    9672:	41 c1       	rjmp	.+642    	; 0x98f6 <_Z17Doser_Pump_On_Offh+0x60e>
    9674:	a3 ce       	rjmp	.-698    	; 0x93bc <_Z17Doser_Pump_On_Offh+0xd4>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9676:	72 2e       	mov	r7, r18
    9678:	76 94       	lsr	r7
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    967a:	43 e0       	ldi	r20, 0x03	; 3
    967c:	84 2e       	mov	r8, r20
    967e:	b2 ce       	rjmp	.-668    	; 0x93e4 <_Z17Doser_Pump_On_Offh+0xfc>
			
			valve_number =  _sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9680:	77 24       	eor	r7, r7
    9682:	73 94       	inc	r7
    9684:	af ce       	rjmp	.-674    	; 0x93e4 <_Z17Doser_Pump_On_Offh+0xfc>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9686:	06 2d       	mov	r16, r6
    9688:	2c cf       	rjmp	.-424    	; 0x94e2 <_Z17Doser_Pump_On_Offh+0x1fa>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    968a:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
    968e:	88 23       	and	r24, r24
    9690:	09 f4       	brne	.+2      	; 0x9694 <_Z17Doser_Pump_On_Offh+0x3ac>
    9692:	57 cf       	rjmp	.-338    	; 0x9542 <_Z17Doser_Pump_On_Offh+0x25a>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9694:	e7 e8       	ldi	r30, 0x87	; 135
    9696:	f1 e1       	ldi	r31, 0x11	; 17
    9698:	01 90       	ld	r0, Z+
    969a:	00 20       	and	r0, r0
    969c:	e9 f7       	brne	.-6      	; 0x9698 <_Z17Doser_Pump_On_Offh+0x3b0>
    969e:	31 97       	sbiw	r30, 0x01	; 1
    96a0:	af 01       	movw	r20, r30
    96a2:	47 58       	subi	r20, 0x87	; 135
    96a4:	51 41       	sbci	r21, 0x11	; 17
    96a6:	21 e0       	ldi	r18, 0x01	; 1
    96a8:	67 e8       	ldi	r22, 0x87	; 135
    96aa:	71 e1       	ldi	r23, 0x11	; 17
    96ac:	89 e1       	ldi	r24, 0x19	; 25
    96ae:	91 e1       	ldi	r25, 0x11	; 17
    96b0:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
    96b4:	46 cf       	rjmp	.-372    	; 0x9542 <_Z17Doser_Pump_On_Offh+0x25a>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    96b6:	86 e0       	ldi	r24, 0x06	; 6
    96b8:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    96bc:	84 e6       	ldi	r24, 0x64	; 100
    96be:	90 e0       	ldi	r25, 0x00	; 0
    96c0:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    96c4:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    96c8:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    96cc:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    96d0:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    96d4:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    96d8:	a0 62       	ori	r26, 0x20	; 32
    96da:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    96de:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    96e2:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    96e6:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    96ea:	00 93 17 16 	sts	0x1617, r16	; 0x801617 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    96ee:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    96f2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    96f6:	82 60       	ori	r24, 0x02	; 2
    96f8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    96fc:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
									{
										if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9700:	e9 91       	ld	r30, Y+
    9702:	ed 30       	cpi	r30, 0x0D	; 13
    9704:	68 f0       	brcs	.+26     	; 0x9720 <_Z17Doser_Pump_On_Offh+0x438>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9706:	f0 e0       	ldi	r31, 0x00	; 0
    9708:	e8 51       	subi	r30, 0x18	; 24
    970a:	fa 4e       	sbci	r31, 0xEA	; 234
    970c:	61 e0       	ldi	r22, 0x01	; 1
    970e:	80 81       	ld	r24, Z
    9710:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
											_kDELAY_MS(200);
    9714:	68 ec       	ldi	r22, 0xC8	; 200
    9716:	70 e0       	ldi	r23, 0x00	; 0
    9718:	80 e0       	ldi	r24, 0x00	; 0
    971a:	90 e0       	ldi	r25, 0x00	; 0
    971c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9720:	ff e0       	ldi	r31, 0x0F	; 15
    9722:	c9 3a       	cpi	r28, 0xA9	; 169
    9724:	df 07       	cpc	r29, r31
    9726:	61 f7       	brne	.-40     	; 0x9700 <_Z17Doser_Pump_On_Offh+0x418>
											{
												
											}
										}
									}
									return 0;      /* id not get matched */
    9728:	80 e0       	ldi	r24, 0x00	; 0
    972a:	30 c1       	rjmp	.+608    	; 0x998c <_Z17Doser_Pump_On_Offh+0x6a4>
    972c:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    972e:	86 30       	cpi	r24, 0x06	; 6
    9730:	91 05       	cpc	r25, r1
    9732:	09 f0       	breq	.+2      	; 0x9736 <_Z17Doser_Pump_On_Offh+0x44e>
    9734:	59 cf       	rjmp	.-334    	; 0x95e8 <_Z17Doser_Pump_On_Offh+0x300>
    9736:	74 cf       	rjmp	.-280    	; 0x9620 <_Z17Doser_Pump_On_Offh+0x338>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9738:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    973c:	81 30       	cpi	r24, 0x01	; 1
    973e:	51 f4       	brne	.+20     	; 0x9754 <_Z17Doser_Pump_On_Offh+0x46c>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9740:	6d eb       	ldi	r22, 0xBD	; 189
    9742:	7f e0       	ldi	r23, 0x0F	; 15
    9744:	8f e6       	ldi	r24, 0x6F	; 111
    9746:	96 e1       	ldi	r25, 0x16	; 22
    9748:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    974c:	8f e6       	ldi	r24, 0x6F	; 111
    974e:	96 e1       	ldi	r25, 0x16	; 22
    9750:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9754:	22 e0       	ldi	r18, 0x02	; 2
    9756:	82 12       	cpse	r8, r18
    9758:	76 cf       	rjmp	.-276    	; 0x9646 <_Z17Doser_Pump_On_Offh+0x35e>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    975a:	86 e0       	ldi	r24, 0x06	; 6
    975c:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9760:	84 e6       	ldi	r24, 0x64	; 100
    9762:	90 e0       	ldi	r25, 0x00	; 0
    9764:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9768:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    976c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    9770:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    9774:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    9778:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    977c:	a0 62       	ori	r26, 0x20	; 32
    977e:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    9782:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    9786:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    978a:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    978e:	00 93 17 16 	sts	0x1617, r16	; 0x801617 <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9792:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    9796:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    979a:	82 60       	ori	r24, 0x02	; 2
    979c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    97a0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
								{
									if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    97a4:	e9 91       	ld	r30, Y+
    97a6:	ed 30       	cpi	r30, 0x0D	; 13
    97a8:	68 f0       	brcs	.+26     	; 0x97c4 <_Z17Doser_Pump_On_Offh+0x4dc>
									{
										/********************************* turn on/off the wired valve *********************************/
																				
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    97aa:	f0 e0       	ldi	r31, 0x00	; 0
    97ac:	e8 51       	subi	r30, 0x18	; 24
    97ae:	fa 4e       	sbci	r31, 0xEA	; 234
    97b0:	61 e0       	ldi	r22, 0x01	; 1
    97b2:	80 81       	ld	r24, Z
    97b4:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
										_kDELAY_MS(200);
    97b8:	68 ec       	ldi	r22, 0xC8	; 200
    97ba:	70 e0       	ldi	r23, 0x00	; 0
    97bc:	80 e0       	ldi	r24, 0x00	; 0
    97be:	90 e0       	ldi	r25, 0x00	; 0
    97c0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    97c4:	3f e0       	ldi	r19, 0x0F	; 15
    97c6:	c9 3a       	cpi	r28, 0xA9	; 169
    97c8:	d3 07       	cpc	r29, r19
    97ca:	61 f7       	brne	.-40     	; 0x97a4 <_Z17Doser_Pump_On_Offh+0x4bc>
    97cc:	ad cf       	rjmp	.-166    	; 0x9728 <_Z17Doser_Pump_On_Offh+0x440>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    97ce:	91 30       	cpi	r25, 0x01	; 1
    97d0:	51 f4       	brne	.+20     	; 0x97e6 <_Z17Doser_Pump_On_Offh+0x4fe>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    97d2:	62 e8       	ldi	r22, 0x82	; 130
    97d4:	7f e0       	ldi	r23, 0x0F	; 15
    97d6:	8f e6       	ldi	r24, 0x6F	; 111
    97d8:	96 e1       	ldi	r25, 0x16	; 22
    97da:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    97de:	8f e6       	ldi	r24, 0x6F	; 111
    97e0:	96 e1       	ldi	r25, 0x16	; 22
    97e2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    97e6:	42 e0       	ldi	r20, 0x02	; 2
    97e8:	84 12       	cpse	r8, r20
    97ea:	2d cf       	rjmp	.-422    	; 0x9646 <_Z17Doser_Pump_On_Offh+0x35e>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    97ec:	86 e0       	ldi	r24, 0x06	; 6
    97ee:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    97f2:	84 e6       	ldi	r24, 0x64	; 100
    97f4:	90 e0       	ldi	r25, 0x00	; 0
    97f6:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    97fa:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    97fe:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    9802:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    9806:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    980a:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    980e:	a0 62       	ori	r26, 0x20	; 32
    9810:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    9814:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    9818:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    981c:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    9820:	00 93 17 16 	sts	0x1617, r16	; 0x801617 <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9824:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    9828:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    982c:	82 60       	ori	r24, 0x02	; 2
    982e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    9832:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
							{
								if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9836:	e9 91       	ld	r30, Y+
    9838:	ed 30       	cpi	r30, 0x0D	; 13
    983a:	68 f0       	brcs	.+26     	; 0x9856 <_Z17Doser_Pump_On_Offh+0x56e>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    983c:	f0 e0       	ldi	r31, 0x00	; 0
    983e:	e8 51       	subi	r30, 0x18	; 24
    9840:	fa 4e       	sbci	r31, 0xEA	; 234
    9842:	61 e0       	ldi	r22, 0x01	; 1
    9844:	80 81       	ld	r24, Z
    9846:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
									_kDELAY_MS(200);
    984a:	68 ec       	ldi	r22, 0xC8	; 200
    984c:	70 e0       	ldi	r23, 0x00	; 0
    984e:	80 e0       	ldi	r24, 0x00	; 0
    9850:	90 e0       	ldi	r25, 0x00	; 0
    9852:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9856:	8f e0       	ldi	r24, 0x0F	; 15
    9858:	c9 3a       	cpi	r28, 0xA9	; 169
    985a:	d8 07       	cpc	r29, r24
    985c:	61 f7       	brne	.-40     	; 0x9836 <_Z17Doser_Pump_On_Offh+0x54e>
    985e:	64 cf       	rjmp	.-312    	; 0x9728 <_Z17Doser_Pump_On_Offh+0x440>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    9860:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9864:	81 30       	cpi	r24, 0x01	; 1
    9866:	51 f4       	brne	.+20     	; 0x987c <_Z17Doser_Pump_On_Offh+0x594>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    9868:	67 e4       	ldi	r22, 0x47	; 71
    986a:	7f e0       	ldi	r23, 0x0F	; 15
    986c:	8f e6       	ldi	r24, 0x6F	; 111
    986e:	96 e1       	ldi	r25, 0x16	; 22
    9870:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    9874:	8f e6       	ldi	r24, 0x6F	; 111
    9876:	96 e1       	ldi	r25, 0x16	; 22
    9878:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					//RF95_setModeRx_Continuous();
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    987c:	e2 e0       	ldi	r30, 0x02	; 2
    987e:	8e 12       	cpse	r8, r30
    9880:	e2 ce       	rjmp	.-572    	; 0x9646 <_Z17Doser_Pump_On_Offh+0x35e>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9882:	86 e0       	ldi	r24, 0x06	; 6
    9884:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    9888:	84 e6       	ldi	r24, 0x64	; 100
    988a:	90 e0       	ldi	r25, 0x00	; 0
    988c:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9890:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9894:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    9898:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    989c:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    98a0:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    98a4:	a0 62       	ori	r26, 0x20	; 32
    98a6:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    98aa:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    98ae:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    98b2:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    98b6:	00 93 17 16 	sts	0x1617, r16	; 0x801617 <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    98ba:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    98be:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    98c2:	82 60       	ori	r24, 0x02	; 2
    98c4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    98c8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
						{
							if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    98cc:	e9 91       	ld	r30, Y+
    98ce:	ed 30       	cpi	r30, 0x0D	; 13
    98d0:	68 f0       	brcs	.+26     	; 0x98ec <_Z17Doser_Pump_On_Offh+0x604>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    98d2:	f0 e0       	ldi	r31, 0x00	; 0
    98d4:	e8 51       	subi	r30, 0x18	; 24
    98d6:	fa 4e       	sbci	r31, 0xEA	; 234
    98d8:	61 e0       	ldi	r22, 0x01	; 1
    98da:	80 81       	ld	r24, Z
    98dc:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
								_kDELAY_MS(200);
    98e0:	68 ec       	ldi	r22, 0xC8	; 200
    98e2:	70 e0       	ldi	r23, 0x00	; 0
    98e4:	80 e0       	ldi	r24, 0x00	; 0
    98e6:	90 e0       	ldi	r25, 0x00	; 0
    98e8:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    98ec:	ff e0       	ldi	r31, 0x0F	; 15
    98ee:	c9 3a       	cpi	r28, 0xA9	; 169
    98f0:	df 07       	cpc	r29, r31
    98f2:	61 f7       	brne	.-40     	; 0x98cc <_Z17Doser_Pump_On_Offh+0x5e4>
    98f4:	19 cf       	rjmp	.-462    	; 0x9728 <_Z17Doser_Pump_On_Offh+0x440>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    98f6:	3c e0       	ldi	r19, 0x0C	; 12
    98f8:	38 15       	cp	r19, r8
    98fa:	08 f0       	brcs	.+2      	; 0x98fe <_Z17Doser_Pump_On_Offh+0x616>
    98fc:	ad ce       	rjmp	.-678    	; 0x9658 <_Z17Doser_Pump_On_Offh+0x370>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    98fe:	61 e0       	ldi	r22, 0x01	; 1
    9900:	11 11       	cpse	r17, r1
    9902:	60 e0       	ldi	r22, 0x00	; 0
    9904:	e8 2d       	mov	r30, r8
    9906:	f0 e0       	ldi	r31, 0x00	; 0
    9908:	e8 51       	subi	r30, 0x18	; 24
    990a:	fa 4e       	sbci	r31, 0xEA	; 234
    990c:	80 81       	ld	r24, Z
    990e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
			_kDELAY_MS(200);
    9912:	68 ec       	ldi	r22, 0xC8	; 200
    9914:	70 e0       	ldi	r23, 0x00	; 0
    9916:	80 e0       	ldi	r24, 0x00	; 0
    9918:	90 e0       	ldi	r25, 0x00	; 0
    991a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    991e:	9c ce       	rjmp	.-712    	; 0x9658 <_Z17Doser_Pump_On_Offh+0x370>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9920:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9924:	81 30       	cpi	r24, 0x01	; 1
    9926:	51 f4       	brne	.+20     	; 0x993c <_Z17Doser_Pump_On_Offh+0x654>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9928:	68 e2       	ldi	r22, 0x28	; 40
    992a:	7f e0       	ldi	r23, 0x0F	; 15
    992c:	8f e6       	ldi	r24, 0x6F	; 111
    992e:	96 e1       	ldi	r25, 0x16	; 22
    9930:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9934:	8f e6       	ldi	r24, 0x6F	; 111
    9936:	96 e1       	ldi	r25, 0x16	; 22
    9938:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	
	
	if(on_off == _kOFF)
    993c:	11 11       	cpse	r17, r1
    993e:	14 c0       	rjmp	.+40     	; 0x9968 <_Z17Doser_Pump_On_Offh+0x680>
	{
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status != _kSCHEDULER_OFF)
    9940:	80 91 a1 0f 	lds	r24, 0x0FA1	; 0x800fa1 <_sExtra_Plot+0x2>
    9944:	85 30       	cpi	r24, 0x05	; 5
    9946:	09 f1       	breq	.+66     	; 0x998a <_Z17Doser_Pump_On_Offh+0x6a2>
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9948:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    994c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    9950:	90 62       	ori	r25, 0x20	; 32
    9952:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    9956:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    995a:	10 92 1b 16 	sts	0x161B, r1	; 0x80161b <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    995e:	82 e0       	ldi	r24, 0x02	; 2
    9960:	80 93 b9 0f 	sts	0x0FB9, r24	; 0x800fb9 <_sExtra_Plot+0x1a>
			
			_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_OFF;
    9964:	85 e0       	ldi	r24, 0x05	; 5
    9966:	0f c0       	rjmp	.+30     	; 0x9986 <_Z17Doser_Pump_On_Offh+0x69e>
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    9968:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    996c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    9970:	90 62       	ori	r25, 0x20	; 32
    9972:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    9976:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _kFERTIIZER_PLOT_NUMBER-1;
    997a:	10 92 1b 16 	sts	0x161B, r1	; 0x80161b <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    997e:	82 e0       	ldi	r24, 0x02	; 2
    9980:	80 93 b9 0f 	sts	0x0FB9, r24	; 0x800fb9 <_sExtra_Plot+0x1a>
		
		_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status = _kSCHEDULER_ON;
    9984:	84 e0       	ldi	r24, 0x04	; 4
    9986:	80 93 a1 0f 	sts	0x0FA1, r24	; 0x800fa1 <_sExtra_Plot+0x2>
	}
	
	return 1;
    998a:	81 e0       	ldi	r24, 0x01	; 1
}
    998c:	df 91       	pop	r29
    998e:	cf 91       	pop	r28
    9990:	1f 91       	pop	r17
    9992:	0f 91       	pop	r16
    9994:	ff 90       	pop	r15
    9996:	ef 90       	pop	r14
    9998:	df 90       	pop	r13
    999a:	cf 90       	pop	r12
    999c:	bf 90       	pop	r11
    999e:	af 90       	pop	r10
    99a0:	9f 90       	pop	r9
    99a2:	8f 90       	pop	r8
    99a4:	7f 90       	pop	r7
    99a6:	6f 90       	pop	r6
    99a8:	5f 90       	pop	r5
    99aa:	4f 90       	pop	r4
    99ac:	3f 90       	pop	r3
    99ae:	2f 90       	pop	r2
    99b0:	08 95       	ret

000099b2 <_Z22Fertilizer_Tank_On_Offhh>:
		}
	}
}

char Fertilizer_Tank_On_Off(unsigned char tank_number, unsigned char on_off)
{
    99b2:	2f 92       	push	r2
    99b4:	3f 92       	push	r3
    99b6:	4f 92       	push	r4
    99b8:	5f 92       	push	r5
    99ba:	6f 92       	push	r6
    99bc:	7f 92       	push	r7
    99be:	8f 92       	push	r8
    99c0:	9f 92       	push	r9
    99c2:	af 92       	push	r10
    99c4:	bf 92       	push	r11
    99c6:	cf 92       	push	r12
    99c8:	df 92       	push	r13
    99ca:	ef 92       	push	r14
    99cc:	ff 92       	push	r15
    99ce:	0f 93       	push	r16
    99d0:	1f 93       	push	r17
    99d2:	cf 93       	push	r28
    99d4:	df 93       	push	r29
    99d6:	00 d0       	rcall	.+0      	; 0x99d8 <_Z22Fertilizer_Tank_On_Offhh+0x26>
    99d8:	1f 92       	push	r1
    99da:	cd b7       	in	r28, 0x3d	; 61
    99dc:	de b7       	in	r29, 0x3e	; 62
    99de:	f8 2e       	mov	r15, r24
    99e0:	b6 2e       	mov	r11, r22
	unsigned char count = 0,i=0,j=0,id_len =0, compare_id=0, data_send_counter = 0, current_valve_number = 0;
	
	if(_sSchedules.Fertilizer_Tank_Number[tank_number] < 100)
    99e2:	28 2f       	mov	r18, r24
    99e4:	30 e0       	ldi	r19, 0x00	; 0
    99e6:	20 51       	subi	r18, 0x10	; 16
    99e8:	37 4f       	sbci	r19, 0xF7	; 247
    99ea:	3c 83       	std	Y+4, r19	; 0x04
    99ec:	2b 83       	std	Y+3, r18	; 0x03
    99ee:	89 01       	movw	r16, r18
    99f0:	06 58       	subi	r16, 0x86	; 134
    99f2:	1f 4f       	sbci	r17, 0xFF	; 255
    99f4:	f8 01       	movw	r30, r16
    99f6:	80 81       	ld	r24, Z
    99f8:	84 36       	cpi	r24, 0x64	; 100
    99fa:	60 f4       	brcc	.+24     	; 0x9a14 <_Z22Fertilizer_Tank_On_Offhh+0x62>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    99fc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9a00:	81 30       	cpi	r24, 0x01	; 1
    9a02:	09 f0       	breq	.+2      	; 0x9a06 <_Z22Fertilizer_Tank_On_Offhh+0x54>
    9a04:	3d c2       	rjmp	.+1146   	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x4ce>
		{
			_kSERAIL_MON_WRITE("fertilizer tank number is less than 100 : ");
    9a06:	61 e8       	ldi	r22, 0x81	; 129
    9a08:	72 e1       	ldi	r23, 0x12	; 18
    9a0a:	8f e6       	ldi	r24, 0x6F	; 111
    9a0c:	96 e1       	ldi	r25, 0x16	; 22
    9a0e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    9a12:	32 c2       	rjmp	.+1124   	; 0x9e78 <_Z22Fertilizer_Tank_On_Offhh+0x4c6>
			_kSERIAL_MON_CLEAR();
		}
		return 1;
	}
	
	if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number] - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET)
    9a14:	f8 01       	movw	r30, r16
    9a16:	80 81       	ld	r24, Z
    9a18:	90 e0       	ldi	r25, 0x00	; 0
    9a1a:	85 56       	subi	r24, 0x65	; 101
    9a1c:	91 09       	sbc	r25, r1
    9a1e:	2b e1       	ldi	r18, 0x1B	; 27
    9a20:	28 9f       	mul	r18, r24
    9a22:	f0 01       	movw	r30, r0
    9a24:	29 9f       	mul	r18, r25
    9a26:	f0 0d       	add	r31, r0
    9a28:	11 24       	eor	r1, r1
    9a2a:	e1 56       	subi	r30, 0x61	; 97
    9a2c:	f0 4f       	sbci	r31, 0xF0	; 240
    9a2e:	80 81       	ld	r24, Z
    9a30:	81 11       	cpse	r24, r1
    9a32:	26 c2       	rjmp	.+1100   	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x4ce>
	{
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9a34:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9a38:	81 30       	cpi	r24, 0x01	; 1
    9a3a:	71 f0       	breq	.+28     	; 0x9a58 <_Z22Fertilizer_Tank_On_Offhh+0xa6>
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
		_kSERIAL_MON_CLEAR();
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
    9a3c:	e1 2c       	mov	r14, r1
    9a3e:	f1 2c       	mov	r15, r1
    9a40:	10 e0       	ldi	r17, 0x00	; 0
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9a42:	cb 80       	ldd	r12, Y+3	; 0x03
    9a44:	dc 80       	ldd	r13, Y+4	; 0x04
    9a46:	fa e7       	ldi	r31, 0x7A	; 122
    9a48:	cf 0e       	add	r12, r31
    9a4a:	d1 1c       	adc	r13, r1
    9a4c:	0b e1       	ldi	r16, 0x1B	; 27
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9a4e:	b7 e0       	ldi	r27, 0x07	; 7
    9a50:	9b 2e       	mov	r9, r27
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9a52:	8d e0       	ldi	r24, 0x0D	; 13
    9a54:	a8 2e       	mov	r10, r24
    9a56:	bd c1       	rjmp	.+890    	; 0x9dd2 <_Z22Fertilizer_Tank_On_Offhh+0x420>
		return 1;
	}
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		_kSERAIL_MON_WRITE("fertilizer tank number : ");
    9a58:	67 e6       	ldi	r22, 0x67	; 103
    9a5a:	72 e1       	ldi	r23, 0x12	; 18
    9a5c:	8f e6       	ldi	r24, 0x6F	; 111
    9a5e:	96 e1       	ldi	r25, 0x16	; 22
    9a60:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9a64:	8f e6       	ldi	r24, 0x6F	; 111
    9a66:	96 e1       	ldi	r25, 0x16	; 22
    9a68:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(tank_number);
    9a6c:	4a e0       	ldi	r20, 0x0A	; 10
    9a6e:	50 e0       	ldi	r21, 0x00	; 0
    9a70:	6f 2d       	mov	r22, r15
    9a72:	8f e6       	ldi	r24, 0x6F	; 111
    9a74:	96 e1       	ldi	r25, 0x16	; 22
    9a76:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
		_kSERIAL_MON_CLEAR();
    9a7a:	8f e6       	ldi	r24, 0x6F	; 111
    9a7c:	96 e1       	ldi	r25, 0x16	; 22
    9a7e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
    9a82:	69 e4       	ldi	r22, 0x49	; 73
    9a84:	72 e1       	ldi	r23, 0x12	; 18
    9a86:	8f e6       	ldi	r24, 0x6F	; 111
    9a88:	96 e1       	ldi	r25, 0x16	; 22
    9a8a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9a8e:	8f e6       	ldi	r24, 0x6F	; 111
    9a90:	96 e1       	ldi	r25, 0x16	; 22
    9a92:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9a96:	e1 2c       	mov	r14, r1
    9a98:	f1 2c       	mov	r15, r1
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
		{
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]);
    9a9a:	ab e1       	ldi	r26, 0x1B	; 27
    9a9c:	da 2e       	mov	r13, r26
    9a9e:	f8 01       	movw	r30, r16
    9aa0:	80 81       	ld	r24, Z
    9aa2:	90 e0       	ldi	r25, 0x00	; 0
    9aa4:	85 56       	subi	r24, 0x65	; 101
    9aa6:	91 09       	sbc	r25, r1
    9aa8:	d8 9e       	mul	r13, r24
    9aaa:	f0 01       	movw	r30, r0
    9aac:	d9 9e       	mul	r13, r25
    9aae:	f0 0d       	add	r31, r0
    9ab0:	11 24       	eor	r1, r1
    9ab2:	e1 56       	subi	r30, 0x61	; 97
    9ab4:	f0 4f       	sbci	r31, 0xF0	; 240
    9ab6:	ee 0d       	add	r30, r14
    9ab8:	ff 1d       	adc	r31, r15
    9aba:	4a e0       	ldi	r20, 0x0A	; 10
    9abc:	50 e0       	ldi	r21, 0x00	; 0
    9abe:	65 81       	ldd	r22, Z+5	; 0x05
    9ac0:	8f e6       	ldi	r24, 0x6F	; 111
    9ac2:	96 e1       	ldi	r25, 0x16	; 22
    9ac4:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
			_kSERAIL_MON_WRITE_NO_LN(" ");
    9ac8:	67 e4       	ldi	r22, 0x47	; 71
    9aca:	72 e1       	ldi	r23, 0x12	; 18
    9acc:	8f e6       	ldi	r24, 0x6F	; 111
    9ace:	96 e1       	ldi	r25, 0x16	; 22
    9ad0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    9ad4:	ff ef       	ldi	r31, 0xFF	; 255
    9ad6:	ef 1a       	sub	r14, r31
    9ad8:	ff 0a       	sbc	r15, r31
		_kSERIAL_MON_CLEAR();
		_kSERAIL_MON_WRITE("fertilizer tank valve list : ");
		_kSERIAL_MON_CLEAR();
	
	
		for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    9ada:	25 e0       	ldi	r18, 0x05	; 5
    9adc:	e2 16       	cp	r14, r18
    9ade:	f1 04       	cpc	r15, r1
    9ae0:	f1 f6       	brne	.-68     	; 0x9a9e <_Z22Fertilizer_Tank_On_Offhh+0xec>
    9ae2:	ac cf       	rjmp	.-168    	; 0x9a3c <_Z22Fertilizer_Tank_On_Offhh+0x8a>
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9ae4:	f6 01       	movw	r30, r12
    9ae6:	80 81       	ld	r24, Z
    9ae8:	90 e0       	ldi	r25, 0x00	; 0
    9aea:	85 56       	subi	r24, 0x65	; 101
    9aec:	91 09       	sbc	r25, r1
    9aee:	08 9f       	mul	r16, r24
    9af0:	f0 01       	movw	r30, r0
    9af2:	09 9f       	mul	r16, r25
    9af4:	f0 0d       	add	r31, r0
    9af6:	11 24       	eor	r1, r1
    9af8:	e1 56       	subi	r30, 0x61	; 97
    9afa:	f0 4f       	sbci	r31, 0xF0	; 240
    9afc:	ee 0d       	add	r30, r14
    9afe:	ff 1d       	adc	r31, r15
    9b00:	85 81       	ldd	r24, Z+5	; 0x05
    9b02:	88 23       	and	r24, r24
    9b04:	09 f4       	brne	.+2      	; 0x9b08 <_Z22Fertilizer_Tank_On_Offhh+0x156>
    9b06:	23 c4       	rjmp	.+2118   	; 0xa34e <_Z22Fertilizer_Tank_On_Offhh+0x99c>
		{
			unsigned char valve_number = 0;
			unsigned char euro_valve_num = 0,command_valve = 0;
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
    9b08:	f6 01       	movw	r30, r12
    9b0a:	80 81       	ld	r24, Z
    9b0c:	90 e0       	ldi	r25, 0x00	; 0
    9b0e:	85 56       	subi	r24, 0x65	; 101
    9b10:	91 09       	sbc	r25, r1
    9b12:	08 9f       	mul	r16, r24
    9b14:	f0 01       	movw	r30, r0
    9b16:	09 9f       	mul	r16, r25
    9b18:	f0 0d       	add	r31, r0
    9b1a:	11 24       	eor	r1, r1
    9b1c:	e1 56       	subi	r30, 0x61	; 97
    9b1e:	f0 4f       	sbci	r31, 0xF0	; 240
    9b20:	ee 0d       	add	r30, r14
    9b22:	ff 1d       	adc	r31, r15
    9b24:	85 80       	ldd	r8, Z+5	; 0x05
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b26:	f3 e0       	ldi	r31, 0x03	; 3
    9b28:	f8 15       	cp	r31, r8
    9b2a:	08 f0       	brcs	.+2      	; 0x9b2e <_Z22Fertilizer_Tank_On_Offhh+0x17c>
    9b2c:	af c1       	rjmp	.+862    	; 0x9e8c <_Z22Fertilizer_Tank_On_Offhh+0x4da>
				euro_valve_num = 1;
				command_valve = valve_number;
			}
			else
			{
				if(valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9b2e:	6b ea       	ldi	r22, 0xAB	; 171
    9b30:	86 9e       	mul	r8, r22
    9b32:	71 2c       	mov	r7, r1
    9b34:	11 24       	eor	r1, r1
    9b36:	87 2d       	mov	r24, r7
    9b38:	86 95       	lsr	r24
    9b3a:	98 2f       	mov	r25, r24
    9b3c:	99 0f       	add	r25, r25
    9b3e:	89 0f       	add	r24, r25
    9b40:	88 1a       	sub	r8, r24
    9b42:	67 2d       	mov	r22, r7
    9b44:	66 95       	lsr	r22
    9b46:	88 20       	and	r8, r8
    9b48:	09 f4       	brne	.+2      	; 0x9b4c <_Z22Fertilizer_Tank_On_Offhh+0x19a>
    9b4a:	9c c1       	rjmp	.+824    	; 0x9e84 <_Z22Fertilizer_Tank_On_Offhh+0x4d2>
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
    9b4c:	77 24       	eor	r7, r7
    9b4e:	73 94       	inc	r7
    9b50:	76 0e       	add	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
			}
			
			/** ???????????????????????????????????? irrigating plot ????????????????????????????????????????? **/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9b52:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9b56:	81 30       	cpi	r24, 0x01	; 1
    9b58:	89 f4       	brne	.+34     	; 0x9b7c <_Z22Fertilizer_Tank_On_Offhh+0x1ca>
			{
				_kSERAIL_MON_WRITE_NO_LN("Wireless Valve no. ");
    9b5a:	63 e3       	ldi	r22, 0x33	; 51
    9b5c:	72 e1       	ldi	r23, 0x12	; 18
    9b5e:	8f e6       	ldi	r24, 0x6F	; 111
    9b60:	96 e1       	ldi	r25, 0x16	; 22
    9b62:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(euro_valve_num);
    9b66:	4a e0       	ldi	r20, 0x0A	; 10
    9b68:	50 e0       	ldi	r21, 0x00	; 0
    9b6a:	67 2d       	mov	r22, r7
    9b6c:	8f e6       	ldi	r24, 0x6F	; 111
    9b6e:	96 e1       	ldi	r25, 0x16	; 22
    9b70:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				_kSERIAL_MON_CLEAR();
    9b74:	8f e6       	ldi	r24, 0x6F	; 111
    9b76:	96 e1       	ldi	r25, 0x16	; 22
    9b78:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			
			if(_kLORA_DATA_AVAIALABLE())    /* read if there is already any data received(garbage data) */
    9b7c:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
    9b80:	81 11       	cpse	r24, r1
			{
				_kLORA_RECV_DATA();         /*  lora rx_tx buffer will update*/
    9b82:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
			}
			
			memset((char *)_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    9b86:	84 e1       	ldi	r24, 0x14	; 20
    9b88:	ec ea       	ldi	r30, 0xAC	; 172
    9b8a:	f5 e1       	ldi	r31, 0x15	; 21
    9b8c:	11 92       	st	Z+, r1
    9b8e:	8a 95       	dec	r24
    9b90:	e9 f7       	brne	.-6      	; 0x9b8c <_Z22Fertilizer_Tank_On_Offhh+0x1da>
			count = _kRESET;
			/********************************** wireless valve command (on/off) **********************************/
			/* valve id, on/off command, pump run timer */
			
			/************************************* copy the euro valve ID *********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][0];
    9b92:	67 2d       	mov	r22, r7
    9b94:	70 e0       	ldi	r23, 0x00	; 0
    9b96:	61 50       	subi	r22, 0x01	; 1
    9b98:	71 09       	sbc	r23, r1
    9b9a:	96 9e       	mul	r9, r22
    9b9c:	c0 01       	movw	r24, r0
    9b9e:	97 9e       	mul	r9, r23
    9ba0:	90 0d       	add	r25, r0
    9ba2:	11 24       	eor	r1, r1
    9ba4:	8b 59       	subi	r24, 0x9B	; 155
    9ba6:	9a 4e       	sbci	r25, 0xEA	; 234
    9ba8:	fc 01       	movw	r30, r24
    9baa:	ec 58       	subi	r30, 0x8C	; 140
    9bac:	ff 4f       	sbci	r31, 0xFF	; 255
    9bae:	20 81       	ld	r18, Z
    9bb0:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][1];
    9bb4:	31 96       	adiw	r30, 0x01	; 1
    9bb6:	20 81       	ld	r18, Z
    9bb8:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][2];
    9bbc:	31 96       	adiw	r30, 0x01	; 1
    9bbe:	20 81       	ld	r18, Z
    9bc0:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][3];
    9bc4:	31 96       	adiw	r30, 0x01	; 1
    9bc6:	20 81       	ld	r18, Z
    9bc8:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][4];
    9bcc:	31 96       	adiw	r30, 0x01	; 1
    9bce:	20 81       	ld	r18, Z
    9bd0:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][5];
    9bd4:	31 96       	adiw	r30, 0x01	; 1
    9bd6:	20 81       	ld	r18, Z
    9bd8:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
			
			/*********************************** packet_id ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_COMMAND;
    9bdc:	22 e0       	ldi	r18, 0x02	; 2
    9bde:	20 93 b2 15 	sts	0x15B2, r18	; 0x8015b2 <_sRuble_Parameters+0x4d>
			
			/*********************************** copy on/off command ***********************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = on_off;
    9be2:	b0 92 b3 15 	sts	0x15B3, r11	; 0x8015b3 <_sRuble_Parameters+0x4e>
			
			/********************************** copy operation mode ************************************************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Operation_Mode;
    9be6:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    9bea:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
			
			/******************************** copy pump timer (used if selected mode is timer) *********************/
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
    9bee:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
    9bf2:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
    9bf6:	80 92 b7 15 	sts	0x15B7, r8	; 0x8015b7 <_sRuble_Parameters+0x52>
    9bfa:	40 e0       	ldi	r20, 0x00	; 0
    9bfc:	50 e0       	ldi	r21, 0x00	; 0
    9bfe:	64 2e       	mov	r6, r20
    9c00:	81 2c       	mov	r8, r1
    9c02:	71 2c       	mov	r7, r1
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
				{
					if(_sEuro_Valve_Param[j].Euro_Valve_ID[compare_id] != _sRuble_Parameters.List_Of_Valve_ID[euro_valve_num-1][compare_id])
    9c04:	a4 9e       	mul	r10, r20
    9c06:	b0 01       	movw	r22, r0
    9c08:	a5 9e       	mul	r10, r21
    9c0a:	70 0d       	add	r23, r0
    9c0c:	11 24       	eor	r1, r1
    9c0e:	69 51       	subi	r22, 0x19	; 25
    9c10:	74 4f       	sbci	r23, 0xF4	; 244
    9c12:	28 2d       	mov	r18, r8
    9c14:	30 e0       	ldi	r19, 0x00	; 0
    9c16:	fb 01       	movw	r30, r22
    9c18:	e2 0f       	add	r30, r18
    9c1a:	f3 1f       	adc	r31, r19
    9c1c:	28 0f       	add	r18, r24
    9c1e:	39 1f       	adc	r19, r25
    9c20:	d9 01       	movw	r26, r18
    9c22:	ac 58       	subi	r26, 0x8C	; 140
    9c24:	bf 4f       	sbci	r27, 0xFF	; 255
    9c26:	31 81       	ldd	r19, Z+1	; 0x01
    9c28:	2c 91       	ld	r18, X
    9c2a:	32 17       	cp	r19, r18
    9c2c:	19 f0       	breq	.+6      	; 0x9c34 <_Z22Fertilizer_Tank_On_Offhh+0x282>
					{
						compare_id = _kVALVE_ID_LEN;
    9c2e:	e6 e0       	ldi	r30, 0x06	; 6
    9c30:	8e 2e       	mov	r8, r30
						id_len = _kRESET;
    9c32:	71 2c       	mov	r7, r1
					}
					id_len++;
    9c34:	73 94       	inc	r7
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
			{
				/************************ compare each valve id one by one with the list of euro valves **************************/
				id_len = _kRESET;
				for(compare_id=0;compare_id<_kVALVE_ID_LEN;compare_id++)
    9c36:	83 94       	inc	r8
    9c38:	f5 e0       	ldi	r31, 0x05	; 5
    9c3a:	f8 15       	cp	r31, r8
    9c3c:	50 f7       	brcc	.-44     	; 0x9c12 <_Z22Fertilizer_Tank_On_Offhh+0x260>
						id_len = _kRESET;
					}
					id_len++;
				}
				
				if(id_len == _kVALVE_ID_LEN)
    9c3e:	26 e0       	ldi	r18, 0x06	; 6
    9c40:	72 16       	cp	r7, r18
    9c42:	09 f4       	brne	.+2      	; 0x9c46 <_Z22Fertilizer_Tank_On_Offhh+0x294>
    9c44:	26 c1       	rjmp	.+588    	; 0x9e92 <_Z22Fertilizer_Tank_On_Offhh+0x4e0>
    9c46:	4f 5f       	subi	r20, 0xFF	; 255
    9c48:	5f 4f       	sbci	r21, 0xFF	; 255
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer << 8;
			_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Pump_Run_Timer;
			_sRuble_Parameters.Lora_Data_TX[count++] = command_valve;
			
			/* check which structure to which EURO valve we are going to update */
			for(j=0;j<_kMAX_EURO_VALVE;j++)
    9c4a:	44 30       	cpi	r20, 0x04	; 4
    9c4c:	51 05       	cpc	r21, r1
    9c4e:	b9 f6       	brne	.-82     	; 0x9bfe <_Z22Fertilizer_Tank_On_Offhh+0x24c>
					current_valve_number = j;    /* data send will update of this valve because valve get match */
					break;
				}
			}
			
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    9c50:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9c54:	81 30       	cpi	r24, 0x01	; 1
    9c56:	89 f4       	brne	.+34     	; 0x9c7a <_Z22Fertilizer_Tank_On_Offhh+0x2c8>
			{
				_kSERAIL_MON_WRITE_NO_LN("Current valve number ");
    9c58:	6d e1       	ldi	r22, 0x1D	; 29
    9c5a:	72 e1       	ldi	r23, 0x12	; 18
    9c5c:	8f e6       	ldi	r24, 0x6F	; 111
    9c5e:	96 e1       	ldi	r25, 0x16	; 22
    9c60:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(current_valve_number);
    9c64:	4a e0       	ldi	r20, 0x0A	; 10
    9c66:	50 e0       	ldi	r21, 0x00	; 0
    9c68:	61 2f       	mov	r22, r17
    9c6a:	8f e6       	ldi	r24, 0x6F	; 111
    9c6c:	96 e1       	ldi	r25, 0x16	; 22
    9c6e:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    9c72:	8f e6       	ldi	r24, 0x6F	; 111
    9c74:	96 e1       	ldi	r25, 0x16	; 22
    9c76:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9c7a:	3d e0       	ldi	r19, 0x0D	; 13
    9c7c:	13 9f       	mul	r17, r19
    9c7e:	20 01       	movw	r4, r0
    9c80:	11 24       	eor	r1, r1
    9c82:	81 2c       	mov	r8, r1
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9c84:	a1 9e       	mul	r10, r17
    9c86:	c0 01       	movw	r24, r0
    9c88:	11 24       	eor	r1, r1
    9c8a:	9c 01       	movw	r18, r24
    9c8c:	29 51       	subi	r18, 0x19	; 25
    9c8e:	34 4f       	sbci	r19, 0xF4	; 244
    9c90:	a9 01       	movw	r20, r18
    9c92:	45 5f       	subi	r20, 0xF5	; 245
    9c94:	5f 4f       	sbci	r21, 0xFF	; 255
    9c96:	5a 83       	std	Y+2, r21	; 0x02
    9c98:	49 83       	std	Y+1, r20	; 0x01
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9c9a:	19 01       	movw	r2, r18
    9c9c:	58 e0       	ldi	r21, 0x08	; 8
    9c9e:	25 0e       	add	r2, r21
    9ca0:	31 1c       	adc	r3, r1
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
							_kSERIAL_MON_CLEAR();
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9ca2:	fc 01       	movw	r30, r24
    9ca4:	e8 51       	subi	r30, 0x18	; 24
    9ca6:	f4 4f       	sbci	r31, 0xF4	; 244
    9ca8:	3f 01       	movw	r6, r30
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
    9caa:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
    9cae:	81 11       	cpse	r24, r1
    9cb0:	f2 c0       	rjmp	.+484    	; 0x9e96 <_Z22Fertilizer_Tank_On_Offhh+0x4e4>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					}
				}
				data_send_counter++;
    9cb2:	83 94       	inc	r8
				
				_kSERAIL_MON_WRITE("Send On/off Command to EURO valve 1");
    9cb4:	69 ef       	ldi	r22, 0xF9	; 249
    9cb6:	71 e1       	ldi	r23, 0x11	; 17
    9cb8:	8f e6       	ldi	r24, 0x6F	; 111
    9cba:	96 e1       	ldi	r25, 0x16	; 22
    9cbc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    9cc0:	8f e6       	ldi	r24, 0x6F	; 111
    9cc2:	96 e1       	ldi	r25, 0x16	; 22
    9cc4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				Display_Update_1();    // 20/1/2022
    9cc8:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
				_kLORA_SEND_DATA(count);
    9ccc:	8c e0       	ldi	r24, 0x0C	; 12
    9cce:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
				
				if(_kCHEK_DATA_AVAILABLE_TIMEOUT(3000))    /* wait for 3 sec to wait the data from the EURO valve */
    9cd2:	88 eb       	ldi	r24, 0xB8	; 184
    9cd4:	9b e0       	ldi	r25, 0x0B	; 11
    9cd6:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
    9cda:	88 23       	and	r24, r24
    9cdc:	09 f4       	brne	.+2      	; 0x9ce0 <_Z22Fertilizer_Tank_On_Offhh+0x32e>
    9cde:	44 c2       	rjmp	.+1160   	; 0xa168 <_Z22Fertilizer_Tank_On_Offhh+0x7b6>
				{
					/**************************** update the received data in buff lora rx_tx **********************/
					if(_kLORA_RECV_DATA())            /* check the received data */
    9ce0:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
    9ce4:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9ce8:	88 23       	and	r24, r24
    9cea:	09 f4       	brne	.+2      	; 0x9cee <_Z22Fertilizer_Tank_On_Offhh+0x33c>
    9cec:	ca c1       	rjmp	.+916    	; 0xa082 <_Z22Fertilizer_Tank_On_Offhh+0x6d0>
					{
						//RF95_setModeRx_Continuous();
						/* check the id get matched to the valve or not */
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    9cee:	91 30       	cpi	r25, 0x01	; 1
    9cf0:	59 f5       	brne	.+86     	; 0x9d48 <_Z22Fertilizer_Tank_On_Offhh+0x396>
						{
							_kSERAIL_MON_WRITE_NO_LN("Euro valve rx data : ");
    9cf2:	63 ee       	ldi	r22, 0xE3	; 227
    9cf4:	71 e1       	ldi	r23, 0x11	; 17
    9cf6:	8f e6       	ldi	r24, 0x6F	; 111
    9cf8:	96 e1       	ldi	r25, 0x16	; 22
    9cfa:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    9cfe:	4a e0       	ldi	r20, 0x0A	; 10
    9d00:	50 e0       	ldi	r21, 0x00	; 0
    9d02:	60 ec       	ldi	r22, 0xC0	; 192
    9d04:	75 e1       	ldi	r23, 0x15	; 21
    9d06:	8f e6       	ldi	r24, 0x6F	; 111
    9d08:	96 e1       	ldi	r25, 0x16	; 22
    9d0a:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
							_kSERIAL_MON_WRITE((char *)_sRuble_Parameters.Lora_Data_Rx,10);
							Serial.println();
    9d0e:	8f e6       	ldi	r24, 0x6F	; 111
    9d10:	96 e1       	ldi	r25, 0x16	; 22
    9d12:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9d16:	8f e6       	ldi	r24, 0x6F	; 111
    9d18:	96 e1       	ldi	r25, 0x16	; 22
    9d1a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							_kSERAIL_MON_WRITE_NO_LN("Euro valve ID which is Sent :");
    9d1e:	65 ec       	ldi	r22, 0xC5	; 197
    9d20:	71 e1       	ldi	r23, 0x11	; 17
    9d22:	8f e6       	ldi	r24, 0x6F	; 111
    9d24:	96 e1       	ldi	r25, 0x16	; 22
    9d26:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
    9d2a:	47 e0       	ldi	r20, 0x07	; 7
    9d2c:	50 e0       	ldi	r21, 0x00	; 0
    9d2e:	b3 01       	movw	r22, r6
    9d30:	8f e6       	ldi	r24, 0x6F	; 111
    9d32:	96 e1       	ldi	r25, 0x16	; 22
    9d34:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
							Serial.println();
    9d38:	8f e6       	ldi	r24, 0x6F	; 111
    9d3a:	96 e1       	ldi	r25, 0x16	; 22
    9d3c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
							_kSERIAL_MON_CLEAR();
    9d40:	8f e6       	ldi	r24, 0x6F	; 111
    9d42:	96 e1       	ldi	r25, 0x16	; 22
    9d44:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9d48:	a0 ec       	ldi	r26, 0xC0	; 192
    9d4a:	b5 e1       	ldi	r27, 0x15	; 21
    9d4c:	80 e0       	ldi	r24, 0x00	; 0
    9d4e:	90 e0       	ldi	r25, 0x00	; 0
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
						{
							if(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID[j] != _sRuble_Parameters.Lora_Data_Rx[j])
    9d50:	2d 91       	ld	r18, X+
    9d52:	f2 01       	movw	r30, r4
    9d54:	e8 0f       	add	r30, r24
    9d56:	f9 1f       	adc	r31, r25
    9d58:	e9 51       	subi	r30, 0x19	; 25
    9d5a:	f4 4f       	sbci	r31, 0xF4	; 244
    9d5c:	31 81       	ldd	r19, Z+1	; 0x01
    9d5e:	32 17       	cp	r19, r18
    9d60:	09 f4       	brne	.+2      	; 0x9d64 <_Z22Fertilizer_Tank_On_Offhh+0x3b2>
    9d62:	14 c1       	rjmp	.+552    	; 0x9f8c <_Z22Fertilizer_Tank_On_Offhh+0x5da>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    9d64:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9d68:	81 30       	cpi	r24, 0x01	; 1
    9d6a:	51 f4       	brne	.+20     	; 0x9d80 <_Z22Fertilizer_Tank_On_Offhh+0x3ce>
								{
									_kSERAIL_MON_WRITE("ID Not matched with valve which is replied");
    9d6c:	6a e9       	ldi	r22, 0x9A	; 154
    9d6e:	71 e1       	ldi	r23, 0x11	; 17
    9d70:	8f e6       	ldi	r24, 0x6F	; 111
    9d72:	96 e1       	ldi	r25, 0x16	; 22
    9d74:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    9d78:	8f e6       	ldi	r24, 0x6F	; 111
    9d7a:	96 e1       	ldi	r25, 0x16	; 22
    9d7c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9d80:	f2 e0       	ldi	r31, 0x02	; 2
    9d82:	8f 16       	cp	r8, r31
    9d84:	09 f4       	brne	.+2      	; 0x9d88 <_Z22Fertilizer_Tank_On_Offhh+0x3d6>
    9d86:	9d c0       	rjmp	.+314    	; 0x9ec2 <_Z22Fertilizer_Tank_On_Offhh+0x510>
							}
						}
						
						/* if id get matched */
						
						_sEuro_Valve_Param[current_valve_number].Euro_Valve_Online = _kVALVE_ONLINE;    /* valve online if got the data from that valve */
    9d88:	21 e0       	ldi	r18, 0x01	; 1
    9d8a:	e9 81       	ldd	r30, Y+1	; 0x01
    9d8c:	fa 81       	ldd	r31, Y+2	; 0x02
    9d8e:	20 83       	st	Z, r18
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
    9d90:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    9d94:	90 e0       	ldi	r25, 0x00	; 0
    9d96:	98 2f       	mov	r25, r24
    9d98:	88 27       	eor	r24, r24
    9d9a:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    9d9e:	82 2b       	or	r24, r18
    9da0:	f1 01       	movw	r30, r2
    9da2:	91 83       	std	Z+1, r25	; 0x01
    9da4:	80 83       	st	Z, r24
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
    9da6:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    9daa:	b8 12       	cpse	r11, r24
    9dac:	f5 c0       	rjmp	.+490    	; 0x9f98 <_Z22Fertilizer_Tank_On_Offhh+0x5e6>
								return 0;
							}
						}
						else
						{
							data_send_counter = 3;
    9dae:	43 e0       	ldi	r20, 0x03	; 3
    9db0:	84 2e       	mov	r8, r20
							}
						}
						return 0;          /* no data available */
					}
				}
				_kDELAY_MS(1000);
    9db2:	68 ee       	ldi	r22, 0xE8	; 232
    9db4:	73 e0       	ldi	r23, 0x03	; 3
    9db6:	80 e0       	ldi	r24, 0x00	; 0
    9db8:	90 e0       	ldi	r25, 0x00	; 0
    9dba:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				_kSERIAL_MON_CLEAR();
			}
			
			data_send_counter = _kRESET;
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
    9dbe:	f3 e0       	ldi	r31, 0x03	; 3
    9dc0:	8f 12       	cpse	r8, r31
    9dc2:	73 cf       	rjmp	.-282    	; 0x9caa <_Z22Fertilizer_Tank_On_Offhh+0x2f8>
    9dc4:	ff ef       	ldi	r31, 0xFF	; 255
    9dc6:	ef 1a       	sub	r14, r31
    9dc8:	ff 0a       	sbc	r15, r31
		}
	}
	
	//_sSchedules.Fertilizer_Tank_Status[];
	
	for(i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)    /* check the valve number from the array which hold the group of valve numbers */
    9dca:	25 e0       	ldi	r18, 0x05	; 5
    9dcc:	e2 16       	cp	r14, r18
    9dce:	f1 04       	cpc	r15, r1
    9dd0:	99 f0       	breq	.+38     	; 0x9df8 <_Z22Fertilizer_Tank_On_Offhh+0x446>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] <= _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > 0)
    9dd2:	f6 01       	movw	r30, r12
    9dd4:	80 81       	ld	r24, Z
    9dd6:	90 e0       	ldi	r25, 0x00	; 0
    9dd8:	85 56       	subi	r24, 0x65	; 101
    9dda:	91 09       	sbc	r25, r1
    9ddc:	08 9f       	mul	r16, r24
    9dde:	f0 01       	movw	r30, r0
    9de0:	09 9f       	mul	r16, r25
    9de2:	f0 0d       	add	r31, r0
    9de4:	11 24       	eor	r1, r1
    9de6:	e1 56       	subi	r30, 0x61	; 97
    9de8:	f0 4f       	sbci	r31, 0xF0	; 240
    9dea:	ee 0d       	add	r30, r14
    9dec:	ff 1d       	adc	r31, r15
    9dee:	85 81       	ldd	r24, Z+5	; 0x05
    9df0:	8d 30       	cpi	r24, 0x0D	; 13
    9df2:	08 f0       	brcs	.+2      	; 0x9df6 <_Z22Fertilizer_Tank_On_Offhh+0x444>
    9df4:	ac c2       	rjmp	.+1368   	; 0xa34e <_Z22Fertilizer_Tank_On_Offhh+0x99c>
    9df6:	76 ce       	rjmp	.-788    	; 0x9ae4 <_Z22Fertilizer_Tank_On_Offhh+0x132>
			}
		}
	}
	
	/* if all valve gets on */
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    9df8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9dfc:	81 30       	cpi	r24, 0x01	; 1
    9dfe:	51 f4       	brne	.+20     	; 0x9e14 <_Z22Fertilizer_Tank_On_Offhh+0x462>
	{
		_kSERAIL_MON_WRITE("All valves successfully ON/OFF");
    9e00:	62 ef       	ldi	r22, 0xF2	; 242
    9e02:	70 e1       	ldi	r23, 0x10	; 16
    9e04:	8f e6       	ldi	r24, 0x6F	; 111
    9e06:	96 e1       	ldi	r25, 0x16	; 22
    9e08:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_CLEAR();
    9e0c:	8f e6       	ldi	r24, 0x6F	; 111
    9e0e:	96 e1       	ldi	r25, 0x16	; 22
    9e10:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    9e14:	20 91 55 16 	lds	r18, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
	// 	else
	// 	{
	// 		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
	// 	}
	
	if(on_off == _kOFF)
    9e18:	b1 10       	cpse	r11, r1
    9e1a:	5d c2       	rjmp	.+1210   	; 0xa2d6 <_Z22Fertilizer_Tank_On_Offhh+0x924>
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
    9e1c:	0b 81       	ldd	r16, Y+3	; 0x03
    9e1e:	1c 81       	ldd	r17, Y+4	; 0x04
    9e20:	06 58       	subi	r16, 0x86	; 134
    9e22:	1f 4f       	sbci	r17, 0xFF	; 255
    9e24:	f8 01       	movw	r30, r16
    9e26:	80 81       	ld	r24, Z
    9e28:	90 e0       	ldi	r25, 0x00	; 0
    9e2a:	85 56       	subi	r24, 0x65	; 101
    9e2c:	91 09       	sbc	r25, r1
    9e2e:	3b e1       	ldi	r19, 0x1B	; 27
    9e30:	38 9f       	mul	r19, r24
    9e32:	f0 01       	movw	r30, r0
    9e34:	39 9f       	mul	r19, r25
    9e36:	f0 0d       	add	r31, r0
    9e38:	11 24       	eor	r1, r1
    9e3a:	e1 56       	subi	r30, 0x61	; 97
    9e3c:	f0 4f       	sbci	r31, 0xF0	; 240
    9e3e:	82 81       	ldd	r24, Z+2	; 0x02
    9e40:	85 30       	cpi	r24, 0x05	; 5
    9e42:	09 f0       	breq	.+2      	; 0x9e46 <_Z22Fertilizer_Tank_On_Offhh+0x494>
    9e44:	06 c2       	rjmp	.+1036   	; 0xa252 <_Z22Fertilizer_Tank_On_Offhh+0x8a0>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
				_kSERIAL_MON_CLEAR();
			}
		}
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    9e46:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9e4a:	81 30       	cpi	r24, 0x01	; 1
    9e4c:	c9 f4       	brne	.+50     	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x4ce>
		{
			_kSERAIL_MON_WRITE("tank to send schedule Off 1 : ");
    9e4e:	64 eb       	ldi	r22, 0xB4	; 180
    9e50:	70 e1       	ldi	r23, 0x10	; 16
    9e52:	8f e6       	ldi	r24, 0x6F	; 111
    9e54:	96 e1       	ldi	r25, 0x16	; 22
    9e56:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9e5a:	2b 81       	ldd	r18, Y+3	; 0x03
    9e5c:	3c 81       	ldd	r19, Y+4	; 0x04
    9e5e:	26 58       	subi	r18, 0x86	; 134
    9e60:	3f 4f       	sbci	r19, 0xFF	; 255
    9e62:	f9 01       	movw	r30, r18
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    9e64:	60 81       	ld	r22, Z
    9e66:	70 e0       	ldi	r23, 0x00	; 0
    9e68:	65 56       	subi	r22, 0x65	; 101
    9e6a:	71 09       	sbc	r23, r1
    9e6c:	4a e0       	ldi	r20, 0x0A	; 10
    9e6e:	50 e0       	ldi	r21, 0x00	; 0
    9e70:	8f e6       	ldi	r24, 0x6F	; 111
    9e72:	96 e1       	ldi	r25, 0x16	; 22
    9e74:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
			_kSERIAL_MON_CLEAR();
    9e78:	8f e6       	ldi	r24, 0x6F	; 111
    9e7a:	96 e1       	ldi	r25, 0x16	; 22
    9e7c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		//_kSERAIL_MON_WRITE("publish status : ");
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
    9e80:	81 e0       	ldi	r24, 0x01	; 1
    9e82:	96 c2       	rjmp	.+1324   	; 0xa3b0 <_Z22Fertilizer_Tank_On_Offhh+0x9fe>
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO+1;
					command_valve  = valve_number%_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
				}
				else
				{
					euro_valve_num = valve_number/_kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9e84:	76 2e       	mov	r7, r22
					command_valve = _kNUMBER_OF_VALVE_CONNECT_TO_EURO;
    9e86:	f3 e0       	ldi	r31, 0x03	; 3
    9e88:	8f 2e       	mov	r8, r31
    9e8a:	63 ce       	rjmp	.-826    	; 0x9b52 <_Z22Fertilizer_Tank_On_Offhh+0x1a0>
			
			valve_number =  _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i];
			
			if(valve_number <= _kNUMBER_OF_VALVE_CONNECT_TO_EURO)
			{
				euro_valve_num = 1;
    9e8c:	77 24       	eor	r7, r7
    9e8e:	73 94       	inc	r7
    9e90:	60 ce       	rjmp	.-832    	; 0x9b52 <_Z22Fertilizer_Tank_On_Offhh+0x1a0>
    9e92:	16 2d       	mov	r17, r6
    9e94:	dd ce       	rjmp	.-582    	; 0x9c50 <_Z22Fertilizer_Tank_On_Offhh+0x29e>
			
			while(data_send_counter < _kRETRY_TO_SEND_VALVE)
			{
				if(Subscribed_data_check())
				{
					if(Seperate_Out_Sub_Data())
    9e96:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
    9e9a:	88 23       	and	r24, r24
    9e9c:	09 f4       	brne	.+2      	; 0x9ea0 <_Z22Fertilizer_Tank_On_Offhh+0x4ee>
    9e9e:	09 cf       	rjmp	.-494    	; 0x9cb2 <_Z22Fertilizer_Tank_On_Offhh+0x300>
					{
						Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
    9ea0:	e7 e8       	ldi	r30, 0x87	; 135
    9ea2:	f1 e1       	ldi	r31, 0x11	; 17
    9ea4:	01 90       	ld	r0, Z+
    9ea6:	00 20       	and	r0, r0
    9ea8:	e9 f7       	brne	.-6      	; 0x9ea4 <_Z22Fertilizer_Tank_On_Offhh+0x4f2>
    9eaa:	31 97       	sbiw	r30, 0x01	; 1
    9eac:	af 01       	movw	r20, r30
    9eae:	47 58       	subi	r20, 0x87	; 135
    9eb0:	51 41       	sbci	r21, 0x11	; 17
    9eb2:	21 e0       	ldi	r18, 0x01	; 1
    9eb4:	67 e8       	ldi	r22, 0x87	; 135
    9eb6:	71 e1       	ldi	r23, 0x11	; 17
    9eb8:	89 e1       	ldi	r24, 0x19	; 25
    9eba:	91 e1       	ldi	r25, 0x11	; 17
    9ebc:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
    9ec0:	f8 ce       	rjmp	.-528    	; 0x9cb2 <_Z22Fertilizer_Tank_On_Offhh+0x300>
									_kSERIAL_MON_CLEAR();
								}
								
								if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
								{
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9ec2:	86 e0       	ldi	r24, 0x06	; 6
    9ec4:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    9ec8:	84 e6       	ldi	r24, 0x64	; 100
    9eca:	90 e0       	ldi	r25, 0x00	; 0
    9ecc:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9ed0:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9ed4:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    9ed8:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    9edc:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    9ee0:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    9ee4:	a0 62       	ori	r26, 0x20	; 32
    9ee6:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    9eea:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    9eee:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    9ef2:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
									_sRuble_Parameters.Last_Valve = current_valve_number;
    9ef6:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9efa:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    9efe:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    9f02:	82 60       	ori	r24, 0x02	; 2
    9f04:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    9f08:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9f0c:	00 e0       	ldi	r16, 0x00	; 0
    9f0e:	10 e0       	ldi	r17, 0x00	; 0
									{
										if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    9f10:	2b 81       	ldd	r18, Y+3	; 0x03
    9f12:	3c 81       	ldd	r19, Y+4	; 0x04
    9f14:	26 58       	subi	r18, 0x86	; 134
    9f16:	3f 4f       	sbci	r19, 0xFF	; 255
    9f18:	3a 83       	std	Y+2, r19	; 0x02
    9f1a:	29 83       	std	Y+1, r18	; 0x01
    9f1c:	3b e1       	ldi	r19, 0x1B	; 27
    9f1e:	f3 2e       	mov	r15, r19
    9f20:	e9 81       	ldd	r30, Y+1	; 0x01
    9f22:	fa 81       	ldd	r31, Y+2	; 0x02
    9f24:	80 81       	ld	r24, Z
    9f26:	90 e0       	ldi	r25, 0x00	; 0
    9f28:	85 56       	subi	r24, 0x65	; 101
    9f2a:	91 09       	sbc	r25, r1
    9f2c:	f8 9e       	mul	r15, r24
    9f2e:	f0 01       	movw	r30, r0
    9f30:	f9 9e       	mul	r15, r25
    9f32:	f0 0d       	add	r31, r0
    9f34:	11 24       	eor	r1, r1
    9f36:	e1 56       	subi	r30, 0x61	; 97
    9f38:	f0 4f       	sbci	r31, 0xF0	; 240
    9f3a:	e0 0f       	add	r30, r16
    9f3c:	f1 1f       	adc	r31, r17
    9f3e:	85 81       	ldd	r24, Z+5	; 0x05
    9f40:	8d 30       	cpi	r24, 0x0D	; 13
    9f42:	e8 f0       	brcs	.+58     	; 0x9f7e <_Z22Fertilizer_Tank_On_Offhh+0x5cc>
										{
											/********************************* turn on/off the wired valve *********************************/
											
											_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    9f44:	e9 81       	ldd	r30, Y+1	; 0x01
    9f46:	fa 81       	ldd	r31, Y+2	; 0x02
    9f48:	80 81       	ld	r24, Z
    9f4a:	90 e0       	ldi	r25, 0x00	; 0
    9f4c:	85 56       	subi	r24, 0x65	; 101
    9f4e:	91 09       	sbc	r25, r1
    9f50:	f8 9e       	mul	r15, r24
    9f52:	f0 01       	movw	r30, r0
    9f54:	f9 9e       	mul	r15, r25
    9f56:	f0 0d       	add	r31, r0
    9f58:	11 24       	eor	r1, r1
    9f5a:	e1 56       	subi	r30, 0x61	; 97
    9f5c:	f0 4f       	sbci	r31, 0xF0	; 240
    9f5e:	e0 0f       	add	r30, r16
    9f60:	f1 1f       	adc	r31, r17
    9f62:	e5 81       	ldd	r30, Z+5	; 0x05
    9f64:	f0 e0       	ldi	r31, 0x00	; 0
    9f66:	e8 51       	subi	r30, 0x18	; 24
    9f68:	fa 4e       	sbci	r31, 0xEA	; 234
    9f6a:	61 e0       	ldi	r22, 0x01	; 1
    9f6c:	80 81       	ld	r24, Z
    9f6e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
											_kDELAY_MS(200);
    9f72:	68 ec       	ldi	r22, 0xC8	; 200
    9f74:	70 e0       	ldi	r23, 0x00	; 0
    9f76:	80 e0       	ldi	r24, 0x00	; 0
    9f78:	90 e0       	ldi	r25, 0x00	; 0
    9f7a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
									_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
									_gfault_Occure = _kFAULT_RESET_TIMER;
									_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
									_sRuble_Parameters.Last_Valve = current_valve_number;
									_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
									for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    9f7e:	0f 5f       	subi	r16, 0xFF	; 255
    9f80:	1f 4f       	sbci	r17, 0xFF	; 255
    9f82:	05 30       	cpi	r16, 0x05	; 5
    9f84:	11 05       	cpc	r17, r1
    9f86:	61 f6       	brne	.-104    	; 0x9f20 <_Z22Fertilizer_Tank_On_Offhh+0x56e>
											if(on_off == _kON)
											{
											}
										}
									}
									return 0;      /* id not get matched */
    9f88:	80 e0       	ldi	r24, 0x00	; 0
    9f8a:	12 c2       	rjmp	.+1060   	; 0xa3b0 <_Z22Fertilizer_Tank_On_Offhh+0x9fe>
    9f8c:	01 96       	adiw	r24, 0x01	; 1
							_kSERIAL_MON_WRITE(_sEuro_Valve_Param[current_valve_number].Euro_Valve_ID,7);
							Serial.println();
							_kSERIAL_MON_CLEAR();
						}
						
						for(j=0;j<_kVALVE_ID_LEN;j++)
    9f8e:	86 30       	cpi	r24, 0x06	; 6
    9f90:	91 05       	cpc	r25, r1
    9f92:	09 f0       	breq	.+2      	; 0x9f96 <_Z22Fertilizer_Tank_On_Offhh+0x5e4>
    9f94:	dd ce       	rjmp	.-582    	; 0x9d50 <_Z22Fertilizer_Tank_On_Offhh+0x39e>
    9f96:	f8 ce       	rjmp	.-528    	; 0x9d88 <_Z22Fertilizer_Tank_On_Offhh+0x3d6>
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level = _sRuble_Parameters.Lora_Data_Rx[10];    /* copy the batter voltage */
						_sEuro_Valve_Param[current_valve_number].Euro_Battery_Level |= _sRuble_Parameters.Lora_Data_Rx[9] << 8;    /* copy the batter voltage */
						
						if(_sRuble_Parameters.Lora_Data_Rx[8] != on_off)     /* check weather valve is ON/off or Not */
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    9f98:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    9f9c:	81 30       	cpi	r24, 0x01	; 1
    9f9e:	51 f4       	brne	.+20     	; 0x9fb4 <_Z22Fertilizer_Tank_On_Offhh+0x602>
							{
								_kSERAIL_MON_WRITE("Euro Feedback fail");
    9fa0:	67 e8       	ldi	r22, 0x87	; 135
    9fa2:	71 e1       	ldi	r23, 0x11	; 17
    9fa4:	8f e6       	ldi	r24, 0x6F	; 111
    9fa6:	96 e1       	ldi	r25, 0x16	; 22
    9fa8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    9fac:	8f e6       	ldi	r24, 0x6F	; 111
    9fae:	96 e1       	ldi	r25, 0x16	; 22
    9fb0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    9fb4:	f2 e0       	ldi	r31, 0x02	; 2
    9fb6:	8f 12       	cpse	r8, r31
    9fb8:	fc ce       	rjmp	.-520    	; 0x9db2 <_Z22Fertilizer_Tank_On_Offhh+0x400>
							{
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    9fba:	86 e0       	ldi	r24, 0x06	; 6
    9fbc:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
								_gfault_Occure = _kFAULT_RESET_TIMER;
    9fc0:	84 e6       	ldi	r24, 0x64	; 100
    9fc2:	90 e0       	ldi	r25, 0x00	; 0
    9fc4:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    9fc8:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    9fcc:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    9fd0:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    9fd4:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    9fd8:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    9fdc:	a0 62       	ori	r26, 0x20	; 32
    9fde:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    9fe2:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    9fe6:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    9fea:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
								_sRuble_Parameters.Last_Valve = current_valve_number;
    9fee:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    9ff2:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    9ff6:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    9ffa:	82 60       	ori	r24, 0x02	; 2
    9ffc:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    a000:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a004:	00 e0       	ldi	r16, 0x00	; 0
    a006:	10 e0       	ldi	r17, 0x00	; 0
								{
									if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a008:	2b 81       	ldd	r18, Y+3	; 0x03
    a00a:	3c 81       	ldd	r19, Y+4	; 0x04
    a00c:	26 58       	subi	r18, 0x86	; 134
    a00e:	3f 4f       	sbci	r19, 0xFF	; 255
    a010:	3a 83       	std	Y+2, r19	; 0x02
    a012:	29 83       	std	Y+1, r18	; 0x01
    a014:	2b e1       	ldi	r18, 0x1B	; 27
    a016:	f2 2e       	mov	r15, r18
    a018:	e9 81       	ldd	r30, Y+1	; 0x01
    a01a:	fa 81       	ldd	r31, Y+2	; 0x02
    a01c:	80 81       	ld	r24, Z
    a01e:	90 e0       	ldi	r25, 0x00	; 0
    a020:	85 56       	subi	r24, 0x65	; 101
    a022:	91 09       	sbc	r25, r1
    a024:	f8 9e       	mul	r15, r24
    a026:	f0 01       	movw	r30, r0
    a028:	f9 9e       	mul	r15, r25
    a02a:	f0 0d       	add	r31, r0
    a02c:	11 24       	eor	r1, r1
    a02e:	e1 56       	subi	r30, 0x61	; 97
    a030:	f0 4f       	sbci	r31, 0xF0	; 240
    a032:	e0 0f       	add	r30, r16
    a034:	f1 1f       	adc	r31, r17
    a036:	85 81       	ldd	r24, Z+5	; 0x05
    a038:	8d 30       	cpi	r24, 0x0D	; 13
    a03a:	e8 f0       	brcs	.+58     	; 0xa076 <_Z22Fertilizer_Tank_On_Offhh+0x6c4>
									{
										/********************************* turn on/off the wired valve *********************************/
										
										_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a03c:	e9 81       	ldd	r30, Y+1	; 0x01
    a03e:	fa 81       	ldd	r31, Y+2	; 0x02
    a040:	80 81       	ld	r24, Z
    a042:	90 e0       	ldi	r25, 0x00	; 0
    a044:	85 56       	subi	r24, 0x65	; 101
    a046:	91 09       	sbc	r25, r1
    a048:	f8 9e       	mul	r15, r24
    a04a:	f0 01       	movw	r30, r0
    a04c:	f9 9e       	mul	r15, r25
    a04e:	f0 0d       	add	r31, r0
    a050:	11 24       	eor	r1, r1
    a052:	e1 56       	subi	r30, 0x61	; 97
    a054:	f0 4f       	sbci	r31, 0xF0	; 240
    a056:	e0 0f       	add	r30, r16
    a058:	f1 1f       	adc	r31, r17
    a05a:	e5 81       	ldd	r30, Z+5	; 0x05
    a05c:	f0 e0       	ldi	r31, 0x00	; 0
    a05e:	e8 51       	subi	r30, 0x18	; 24
    a060:	fa 4e       	sbci	r31, 0xEA	; 234
    a062:	61 e0       	ldi	r22, 0x01	; 1
    a064:	80 81       	ld	r24, Z
    a066:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
										_kDELAY_MS(200);
    a06a:	68 ec       	ldi	r22, 0xC8	; 200
    a06c:	70 e0       	ldi	r23, 0x00	; 0
    a06e:	80 e0       	ldi	r24, 0x00	; 0
    a070:	90 e0       	ldi	r25, 0x00	; 0
    a072:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
								_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
								_gfault_Occure = _kFAULT_RESET_TIMER;
								_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
								_sRuble_Parameters.Last_Valve = current_valve_number;
								_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
								for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a076:	0f 5f       	subi	r16, 0xFF	; 255
    a078:	1f 4f       	sbci	r17, 0xFF	; 255
    a07a:	05 30       	cpi	r16, 0x05	; 5
    a07c:	11 05       	cpc	r17, r1
    a07e:	61 f6       	brne	.-104    	; 0xa018 <_Z22Fertilizer_Tank_On_Offhh+0x666>
    a080:	83 cf       	rjmp	.-250    	; 0x9f88 <_Z22Fertilizer_Tank_On_Offhh+0x5d6>
							data_send_counter = 3;
						}
					}
					else
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    a082:	91 30       	cpi	r25, 0x01	; 1
    a084:	51 f4       	brne	.+20     	; 0xa09a <_Z22Fertilizer_Tank_On_Offhh+0x6e8>
						{
							_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 1");
    a086:	6c e4       	ldi	r22, 0x4C	; 76
    a088:	71 e1       	ldi	r23, 0x11	; 17
    a08a:	8f e6       	ldi	r24, 0x6F	; 111
    a08c:	96 e1       	ldi	r25, 0x16	; 22
    a08e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    a092:	8f e6       	ldi	r24, 0x6F	; 111
    a094:	96 e1       	ldi	r25, 0x16	; 22
    a096:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						if(data_send_counter == _kRETRY_TO_SEND_VALVE -1)
    a09a:	f2 e0       	ldi	r31, 0x02	; 2
    a09c:	8f 12       	cpse	r8, r31
    a09e:	89 ce       	rjmp	.-750    	; 0x9db2 <_Z22Fertilizer_Tank_On_Offhh+0x400>
						{
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a0a0:	86 e0       	ldi	r24, 0x06	; 6
    a0a2:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    a0a6:	84 e6       	ldi	r24, 0x64	; 100
    a0a8:	90 e0       	ldi	r25, 0x00	; 0
    a0aa:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    a0ae:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a0b2:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    a0b6:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    a0ba:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    a0be:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    a0c2:	a0 62       	ori	r26, 0x20	; 32
    a0c4:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    a0c8:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    a0cc:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    a0d0:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
							_sRuble_Parameters.Last_Valve = current_valve_number;
    a0d4:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a0d8:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    a0dc:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    a0e0:	82 60       	ori	r24, 0x02	; 2
    a0e2:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    a0e6:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a0ea:	00 e0       	ldi	r16, 0x00	; 0
    a0ec:	10 e0       	ldi	r17, 0x00	; 0
							{
								if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a0ee:	2b 81       	ldd	r18, Y+3	; 0x03
    a0f0:	3c 81       	ldd	r19, Y+4	; 0x04
    a0f2:	26 58       	subi	r18, 0x86	; 134
    a0f4:	3f 4f       	sbci	r19, 0xFF	; 255
    a0f6:	3a 83       	std	Y+2, r19	; 0x02
    a0f8:	29 83       	std	Y+1, r18	; 0x01
    a0fa:	9b e1       	ldi	r25, 0x1B	; 27
    a0fc:	f9 2e       	mov	r15, r25
    a0fe:	e9 81       	ldd	r30, Y+1	; 0x01
    a100:	fa 81       	ldd	r31, Y+2	; 0x02
    a102:	80 81       	ld	r24, Z
    a104:	90 e0       	ldi	r25, 0x00	; 0
    a106:	85 56       	subi	r24, 0x65	; 101
    a108:	91 09       	sbc	r25, r1
    a10a:	f8 9e       	mul	r15, r24
    a10c:	f0 01       	movw	r30, r0
    a10e:	f9 9e       	mul	r15, r25
    a110:	f0 0d       	add	r31, r0
    a112:	11 24       	eor	r1, r1
    a114:	e1 56       	subi	r30, 0x61	; 97
    a116:	f0 4f       	sbci	r31, 0xF0	; 240
    a118:	e0 0f       	add	r30, r16
    a11a:	f1 1f       	adc	r31, r17
    a11c:	85 81       	ldd	r24, Z+5	; 0x05
    a11e:	8d 30       	cpi	r24, 0x0D	; 13
    a120:	e8 f0       	brcs	.+58     	; 0xa15c <_Z22Fertilizer_Tank_On_Offhh+0x7aa>
								{
									/********************************* turn on/off the wired valve *********************************/
									
									_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a122:	e9 81       	ldd	r30, Y+1	; 0x01
    a124:	fa 81       	ldd	r31, Y+2	; 0x02
    a126:	80 81       	ld	r24, Z
    a128:	90 e0       	ldi	r25, 0x00	; 0
    a12a:	85 56       	subi	r24, 0x65	; 101
    a12c:	91 09       	sbc	r25, r1
    a12e:	f8 9e       	mul	r15, r24
    a130:	f0 01       	movw	r30, r0
    a132:	f9 9e       	mul	r15, r25
    a134:	f0 0d       	add	r31, r0
    a136:	11 24       	eor	r1, r1
    a138:	e1 56       	subi	r30, 0x61	; 97
    a13a:	f0 4f       	sbci	r31, 0xF0	; 240
    a13c:	e0 0f       	add	r30, r16
    a13e:	f1 1f       	adc	r31, r17
    a140:	e5 81       	ldd	r30, Z+5	; 0x05
    a142:	f0 e0       	ldi	r31, 0x00	; 0
    a144:	e8 51       	subi	r30, 0x18	; 24
    a146:	fa 4e       	sbci	r31, 0xEA	; 234
    a148:	61 e0       	ldi	r22, 0x01	; 1
    a14a:	80 81       	ld	r24, Z
    a14c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
									_kDELAY_MS(200);
    a150:	68 ec       	ldi	r22, 0xC8	; 200
    a152:	70 e0       	ldi	r23, 0x00	; 0
    a154:	80 e0       	ldi	r24, 0x00	; 0
    a156:	90 e0       	ldi	r25, 0x00	; 0
    a158:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
							_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
							_gfault_Occure = _kFAULT_RESET_TIMER;
							_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
							_sRuble_Parameters.Last_Valve = current_valve_number;
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
							for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a15c:	0f 5f       	subi	r16, 0xFF	; 255
    a15e:	1f 4f       	sbci	r17, 0xFF	; 255
    a160:	05 30       	cpi	r16, 0x05	; 5
    a162:	11 05       	cpc	r17, r1
    a164:	61 f6       	brne	.-104    	; 0xa0fe <_Z22Fertilizer_Tank_On_Offhh+0x74c>
    a166:	10 cf       	rjmp	.-480    	; 0x9f88 <_Z22Fertilizer_Tank_On_Offhh+0x5d6>
						}
					}
				}
				else
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a168:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a16c:	81 30       	cpi	r24, 0x01	; 1
    a16e:	51 f4       	brne	.+20     	; 0xa184 <_Z22Fertilizer_Tank_On_Offhh+0x7d2>
					{
						_kSERAIL_MON_WRITE("Euro Feedback fail/Not received any data from Euro valve 0");
    a170:	61 e1       	ldi	r22, 0x11	; 17
    a172:	71 e1       	ldi	r23, 0x11	; 17
    a174:	8f e6       	ldi	r24, 0x6F	; 111
    a176:	96 e1       	ldi	r25, 0x16	; 22
    a178:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a17c:	8f e6       	ldi	r24, 0x6F	; 111
    a17e:	96 e1       	ldi	r25, 0x16	; 22
    a180:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					if(data_send_counter == _kRETRY_TO_SEND_VALVE-1)
    a184:	f2 e0       	ldi	r31, 0x02	; 2
    a186:	8f 12       	cpse	r8, r31
    a188:	14 ce       	rjmp	.-984    	; 0x9db2 <_Z22Fertilizer_Tank_On_Offhh+0x400>
					{
						_sPump_Parameter.Irrigation_Status =  _eIRRIG_STAT_EURO_FEEDBACK;
    a18a:	86 e0       	ldi	r24, 0x06	; 6
    a18c:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    a190:	84 e6       	ldi	r24, 0x64	; 100
    a192:	90 e0       	ldi	r25, 0x00	; 0
    a194:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    a198:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
    a19c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    a1a0:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    a1a4:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    a1a8:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    a1ac:	a0 62       	ori	r26, 0x20	; 32
    a1ae:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    a1b2:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    a1b6:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    a1ba:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
						_sRuble_Parameters.Last_Valve = current_valve_number;
    a1be:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    a1c2:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    a1c6:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    a1ca:	82 60       	ori	r24, 0x02	; 2
    a1cc:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    a1d0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a1d4:	00 e0       	ldi	r16, 0x00	; 0
    a1d6:	10 e0       	ldi	r17, 0x00	; 0
						{
							if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a1d8:	2b 81       	ldd	r18, Y+3	; 0x03
    a1da:	3c 81       	ldd	r19, Y+4	; 0x04
    a1dc:	26 58       	subi	r18, 0x86	; 134
    a1de:	3f 4f       	sbci	r19, 0xFF	; 255
    a1e0:	3a 83       	std	Y+2, r19	; 0x02
    a1e2:	29 83       	std	Y+1, r18	; 0x01
    a1e4:	8b e1       	ldi	r24, 0x1B	; 27
    a1e6:	f8 2e       	mov	r15, r24
    a1e8:	e9 81       	ldd	r30, Y+1	; 0x01
    a1ea:	fa 81       	ldd	r31, Y+2	; 0x02
    a1ec:	80 81       	ld	r24, Z
    a1ee:	90 e0       	ldi	r25, 0x00	; 0
    a1f0:	85 56       	subi	r24, 0x65	; 101
    a1f2:	91 09       	sbc	r25, r1
    a1f4:	f8 9e       	mul	r15, r24
    a1f6:	f0 01       	movw	r30, r0
    a1f8:	f9 9e       	mul	r15, r25
    a1fa:	f0 0d       	add	r31, r0
    a1fc:	11 24       	eor	r1, r1
    a1fe:	e1 56       	subi	r30, 0x61	; 97
    a200:	f0 4f       	sbci	r31, 0xF0	; 240
    a202:	e0 0f       	add	r30, r16
    a204:	f1 1f       	adc	r31, r17
    a206:	85 81       	ldd	r24, Z+5	; 0x05
    a208:	8d 30       	cpi	r24, 0x0D	; 13
    a20a:	e8 f0       	brcs	.+58     	; 0xa246 <_Z22Fertilizer_Tank_On_Offhh+0x894>
							{
								/********************************* turn on/off the wired valve *********************************/
								
								_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[wired_valve]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(1));
    a20c:	e9 81       	ldd	r30, Y+1	; 0x01
    a20e:	fa 81       	ldd	r31, Y+2	; 0x02
    a210:	80 81       	ld	r24, Z
    a212:	90 e0       	ldi	r25, 0x00	; 0
    a214:	85 56       	subi	r24, 0x65	; 101
    a216:	91 09       	sbc	r25, r1
    a218:	f8 9e       	mul	r15, r24
    a21a:	f0 01       	movw	r30, r0
    a21c:	f9 9e       	mul	r15, r25
    a21e:	f0 0d       	add	r31, r0
    a220:	11 24       	eor	r1, r1
    a222:	e1 56       	subi	r30, 0x61	; 97
    a224:	f0 4f       	sbci	r31, 0xF0	; 240
    a226:	e0 0f       	add	r30, r16
    a228:	f1 1f       	adc	r31, r17
    a22a:	e5 81       	ldd	r30, Z+5	; 0x05
    a22c:	f0 e0       	ldi	r31, 0x00	; 0
    a22e:	e8 51       	subi	r30, 0x18	; 24
    a230:	fa 4e       	sbci	r31, 0xEA	; 234
    a232:	61 e0       	ldi	r22, 0x01	; 1
    a234:	80 81       	ld	r24, Z
    a236:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
								_kDELAY_MS(200);
    a23a:	68 ec       	ldi	r22, 0xC8	; 200
    a23c:	70 e0       	ldi	r23, 0x00	; 0
    a23e:	80 e0       	ldi	r24, 0x00	; 0
    a240:	90 e0       	ldi	r25, 0x00	; 0
    a242:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
						_gfault_Occure = _kFAULT_RESET_TIMER;
						_sGSM_Query.SMS_Alert |= _eVALVE_SENSE_FAIL;
						_sRuble_Parameters.Last_Valve = current_valve_number;
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
						
						for(int wired_valve = 0; wired_valve < _kMAX_VALVE_FOR_1PLOT ; wired_valve++)
    a246:	0f 5f       	subi	r16, 0xFF	; 255
    a248:	1f 4f       	sbci	r17, 0xFF	; 255
    a24a:	05 30       	cpi	r16, 0x05	; 5
    a24c:	11 05       	cpc	r17, r1
    a24e:	61 f6       	brne	.-104    	; 0xa1e8 <_Z22Fertilizer_Tank_On_Offhh+0x836>
    a250:	9b ce       	rjmp	.-714    	; 0x9f88 <_Z22Fertilizer_Tank_On_Offhh+0x5d6>
	
	if(on_off == _kOFF)
	{
		if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status != _kSCHEDULER_OFF)
		{
			_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a252:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    a256:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    a25a:	90 62       	ori	r25, 0x20	; 32
    a25c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    a260:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
			_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a264:	f8 01       	movw	r30, r16
    a266:	80 81       	ld	r24, Z
    a268:	85 56       	subi	r24, 0x65	; 101
    a26a:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a26e:	80 81       	ld	r24, Z
    a270:	90 e0       	ldi	r25, 0x00	; 0
    a272:	85 56       	subi	r24, 0x65	; 101
    a274:	91 09       	sbc	r25, r1
    a276:	38 9f       	mul	r19, r24
    a278:	f0 01       	movw	r30, r0
    a27a:	39 9f       	mul	r19, r25
    a27c:	f0 0d       	add	r31, r0
    a27e:	11 24       	eor	r1, r1
    a280:	e1 56       	subi	r30, 0x61	; 97
    a282:	f0 4f       	sbci	r31, 0xF0	; 240
    a284:	82 e0       	ldi	r24, 0x02	; 2
    a286:	82 8f       	std	Z+26, r24	; 0x1a
			
			_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_OFF;
    a288:	f8 01       	movw	r30, r16
    a28a:	80 81       	ld	r24, Z
    a28c:	90 e0       	ldi	r25, 0x00	; 0
    a28e:	85 56       	subi	r24, 0x65	; 101
    a290:	91 09       	sbc	r25, r1
    a292:	38 9f       	mul	r19, r24
    a294:	f0 01       	movw	r30, r0
    a296:	39 9f       	mul	r19, r25
    a298:	f0 0d       	add	r31, r0
    a29a:	11 24       	eor	r1, r1
    a29c:	e1 56       	subi	r30, 0x61	; 97
    a29e:	f0 4f       	sbci	r31, 0xF0	; 240
    a2a0:	85 e0       	ldi	r24, 0x05	; 5
    a2a2:	82 83       	std	Z+2, r24	; 0x02
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a2a4:	21 30       	cpi	r18, 0x01	; 1
    a2a6:	09 f0       	breq	.+2      	; 0xa2aa <_Z22Fertilizer_Tank_On_Offhh+0x8f8>
    a2a8:	eb cd       	rjmp	.-1066   	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x4ce>
			{
				_kSERAIL_MON_WRITE("tank to send schedule Off 0 : ");
    a2aa:	63 ed       	ldi	r22, 0xD3	; 211
    a2ac:	70 e1       	ldi	r23, 0x10	; 16
    a2ae:	8f e6       	ldi	r24, 0x6F	; 111
    a2b0:	96 e1       	ldi	r25, 0x16	; 22
    a2b2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a2b6:	f8 01       	movw	r30, r16
    a2b8:	60 81       	ld	r22, Z
    a2ba:	70 e0       	ldi	r23, 0x00	; 0
    a2bc:	65 56       	subi	r22, 0x65	; 101
    a2be:	71 09       	sbc	r23, r1
    a2c0:	4a e0       	ldi	r20, 0x0A	; 10
    a2c2:	50 e0       	ldi	r21, 0x00	; 0
    a2c4:	8f e6       	ldi	r24, 0x6F	; 111
    a2c6:	96 e1       	ldi	r25, 0x16	; 22
    a2c8:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
				_kSERIAL_MON_CLEAR();
    a2cc:	8f e6       	ldi	r24, 0x6F	; 111
    a2ce:	96 e1       	ldi	r25, 0x16	; 22
    a2d0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    a2d4:	b8 cd       	rjmp	.-1168   	; 0x9e46 <_Z22Fertilizer_Tank_On_Offhh+0x494>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		_sRuble_Parameters.Publish_Topic |= _eONE_TOUCH_FEEDBACK;
    a2d6:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    a2da:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    a2de:	90 62       	ori	r25, 0x20	; 32
    a2e0:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    a2e4:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
		_sRuble_Parameters.Extra_Plot_Feedback = _sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM;
    a2e8:	4b 81       	ldd	r20, Y+3	; 0x03
    a2ea:	5c 81       	ldd	r21, Y+4	; 0x04
    a2ec:	46 58       	subi	r20, 0x86	; 134
    a2ee:	5f 4f       	sbci	r21, 0xFF	; 255
    a2f0:	5a 83       	std	Y+2, r21	; 0x02
    a2f2:	49 83       	std	Y+1, r20	; 0x01
    a2f4:	fa 01       	movw	r30, r20
    a2f6:	80 81       	ld	r24, Z
    a2f8:	85 56       	subi	r24, 0x65	; 101
    a2fa:	80 93 1b 16 	sts	0x161B, r24	; 0x80161b <_sRuble_Parameters+0xb6>
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Publish_status = _eEXTRA_PLOT_ONETOUCH_RESEND;
    a2fe:	80 81       	ld	r24, Z
    a300:	90 e0       	ldi	r25, 0x00	; 0
    a302:	85 56       	subi	r24, 0x65	; 101
    a304:	91 09       	sbc	r25, r1
    a306:	3b e1       	ldi	r19, 0x1B	; 27
    a308:	38 9f       	mul	r19, r24
    a30a:	f0 01       	movw	r30, r0
    a30c:	39 9f       	mul	r19, r25
    a30e:	f0 0d       	add	r31, r0
    a310:	11 24       	eor	r1, r1
    a312:	e1 56       	subi	r30, 0x61	; 97
    a314:	f0 4f       	sbci	r31, 0xF0	; 240
    a316:	82 e0       	ldi	r24, 0x02	; 2
    a318:	82 8f       	std	Z+26, r24	; 0x1a
		
		_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Status = _kSCHEDULER_ON;
    a31a:	fa 01       	movw	r30, r20
    a31c:	80 81       	ld	r24, Z
    a31e:	90 e0       	ldi	r25, 0x00	; 0
    a320:	85 56       	subi	r24, 0x65	; 101
    a322:	91 09       	sbc	r25, r1
    a324:	38 9f       	mul	r19, r24
    a326:	f0 01       	movw	r30, r0
    a328:	39 9f       	mul	r19, r25
    a32a:	f0 0d       	add	r31, r0
    a32c:	11 24       	eor	r1, r1
    a32e:	e1 56       	subi	r30, 0x61	; 97
    a330:	f0 4f       	sbci	r31, 0xF0	; 240
    a332:	84 e0       	ldi	r24, 0x04	; 4
    a334:	82 83       	std	Z+2, r24	; 0x02
		
		//////////////////////////////////////////////////////////////////////////////////////////////////////
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a336:	21 30       	cpi	r18, 0x01	; 1
    a338:	09 f0       	breq	.+2      	; 0xa33c <_Z22Fertilizer_Tank_On_Offhh+0x98a>
    a33a:	a2 cd       	rjmp	.-1212   	; 0x9e80 <_Z22Fertilizer_Tank_On_Offhh+0x4ce>
		{
			_kSERAIL_MON_WRITE("tank to send schedule ON : ");
    a33c:	68 e9       	ldi	r22, 0x98	; 152
    a33e:	70 e1       	ldi	r23, 0x10	; 16
    a340:	8f e6       	ldi	r24, 0x6F	; 111
    a342:	96 e1       	ldi	r25, 0x16	; 22
    a344:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
    a348:	e9 81       	ldd	r30, Y+1	; 0x01
    a34a:	fa 81       	ldd	r31, Y+2	; 0x02
    a34c:	8b cd       	rjmp	.-1258   	; 0x9e64 <_Z22Fertilizer_Tank_On_Offhh+0x4b2>
			}
		}
		
		/******************************************************** handle wired valve *******************************************************************/
		
		else if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i] > _kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)
    a34e:	f6 01       	movw	r30, r12
    a350:	80 81       	ld	r24, Z
    a352:	90 e0       	ldi	r25, 0x00	; 0
    a354:	85 56       	subi	r24, 0x65	; 101
    a356:	91 09       	sbc	r25, r1
    a358:	08 9f       	mul	r16, r24
    a35a:	f0 01       	movw	r30, r0
    a35c:	09 9f       	mul	r16, r25
    a35e:	f0 0d       	add	r31, r0
    a360:	11 24       	eor	r1, r1
    a362:	e1 56       	subi	r30, 0x61	; 97
    a364:	f0 4f       	sbci	r31, 0xF0	; 240
    a366:	ee 0d       	add	r30, r14
    a368:	ff 1d       	adc	r31, r15
    a36a:	85 81       	ldd	r24, Z+5	; 0x05
    a36c:	8d 30       	cpi	r24, 0x0D	; 13
    a36e:	08 f4       	brcc	.+2      	; 0xa372 <_Z22Fertilizer_Tank_On_Offhh+0x9c0>
    a370:	29 cd       	rjmp	.-1454   	; 0x9dc4 <_Z22Fertilizer_Tank_On_Offhh+0x412>
		{
			/********************************* turn on/off the wired valve *********************************/
			
			_kGPIO_SET(_sRuble_Parameters.Wired_valve_List[_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM].Euro_Valve_Group[i]-((_kMAX_EURO_VALVE*_kNUMBER_OF_VALVE_CONNECT_TO_EURO)+1)],(!on_off));
    a372:	f6 01       	movw	r30, r12
    a374:	80 81       	ld	r24, Z
    a376:	61 e0       	ldi	r22, 0x01	; 1
    a378:	b1 10       	cpse	r11, r1
    a37a:	60 e0       	ldi	r22, 0x00	; 0
    a37c:	90 e0       	ldi	r25, 0x00	; 0
    a37e:	85 56       	subi	r24, 0x65	; 101
    a380:	91 09       	sbc	r25, r1
    a382:	08 9f       	mul	r16, r24
    a384:	f0 01       	movw	r30, r0
    a386:	09 9f       	mul	r16, r25
    a388:	f0 0d       	add	r31, r0
    a38a:	11 24       	eor	r1, r1
    a38c:	e1 56       	subi	r30, 0x61	; 97
    a38e:	f0 4f       	sbci	r31, 0xF0	; 240
    a390:	ee 0d       	add	r30, r14
    a392:	ff 1d       	adc	r31, r15
    a394:	e5 81       	ldd	r30, Z+5	; 0x05
    a396:	f0 e0       	ldi	r31, 0x00	; 0
    a398:	e8 51       	subi	r30, 0x18	; 24
    a39a:	fa 4e       	sbci	r31, 0xEA	; 234
    a39c:	80 81       	ld	r24, Z
    a39e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
			_kDELAY_MS(200);
    a3a2:	68 ec       	ldi	r22, 0xC8	; 200
    a3a4:	70 e0       	ldi	r23, 0x00	; 0
    a3a6:	80 e0       	ldi	r24, 0x00	; 0
    a3a8:	90 e0       	ldi	r25, 0x00	; 0
    a3aa:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    a3ae:	0a cd       	rjmp	.-1516   	; 0x9dc4 <_Z22Fertilizer_Tank_On_Offhh+0x412>
		//_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sSchedules.Fertilizer_Tank_Number[tank_number]-_kEXTRA_PLOT_START_FROM);
	}
	
	
	return 1;
}
    a3b0:	0f 90       	pop	r0
    a3b2:	0f 90       	pop	r0
    a3b4:	0f 90       	pop	r0
    a3b6:	0f 90       	pop	r0
    a3b8:	df 91       	pop	r29
    a3ba:	cf 91       	pop	r28
    a3bc:	1f 91       	pop	r17
    a3be:	0f 91       	pop	r16
    a3c0:	ff 90       	pop	r15
    a3c2:	ef 90       	pop	r14
    a3c4:	df 90       	pop	r13
    a3c6:	cf 90       	pop	r12
    a3c8:	bf 90       	pop	r11
    a3ca:	af 90       	pop	r10
    a3cc:	9f 90       	pop	r9
    a3ce:	8f 90       	pop	r8
    a3d0:	7f 90       	pop	r7
    a3d2:	6f 90       	pop	r6
    a3d4:	5f 90       	pop	r5
    a3d6:	4f 90       	pop	r4
    a3d8:	3f 90       	pop	r3
    a3da:	2f 90       	pop	r2
    a3dc:	08 95       	ret

0000a3de <_Z26Fertilizer_Tank_Monitoringv>:
	}
	
}					

void Fertilizer_Tank_Monitoring(void)
{
    a3de:	af 92       	push	r10
    a3e0:	bf 92       	push	r11
    a3e2:	df 92       	push	r13
    a3e4:	ef 92       	push	r14
    a3e6:	ff 92       	push	r15
    a3e8:	0f 93       	push	r16
    a3ea:	1f 93       	push	r17
    a3ec:	cf 93       	push	r28
    a3ee:	df 93       	push	r29
	unsigned char tank_number;
	
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET)
    a3f0:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    a3f4:	81 30       	cpi	r24, 0x01	; 1
    a3f6:	29 f5       	brne	.+74     	; 0xa442 <_Z26Fertilizer_Tank_Monitoringv+0x64>
	{	
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    a3f8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a3fc:	81 30       	cpi	r24, 0x01	; 1
    a3fe:	31 f4       	brne	.+12     	; 0xa40c <_Z26Fertilizer_Tank_Monitoringv+0x2e>
		{
			_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring : ");
    a400:	6c ec       	ldi	r22, 0xCC	; 204
    a402:	72 e1       	ldi	r23, 0x12	; 18
    a404:	8f e6       	ldi	r24, 0x6F	; 111
    a406:	96 e1       	ldi	r25, 0x16	; 22
    a408:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		}
		if(_sExtra_Plot[_kFERTIIZER_PLOT_NUMBER-1].Status == _kSCHEDULER_ON)
    a40c:	80 91 a1 0f 	lds	r24, 0x0FA1	; 0x800fa1 <_sExtra_Plot+0x2>
    a410:	84 30       	cpi	r24, 0x04	; 4
    a412:	09 f0       	breq	.+2      	; 0xa416 <_Z26Fertilizer_Tank_Monitoringv+0x38>
    a414:	46 c1       	rjmp	.+652    	; 0xa6a2 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    a416:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a41a:	81 30       	cpi	r24, 0x01	; 1
    a41c:	31 f4       	brne	.+12     	; 0xa42a <_Z26Fertilizer_Tank_Monitoringv+0x4c>
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
    a41e:	6c ea       	ldi	r22, 0xAC	; 172
    a420:	72 e1       	ldi	r23, 0x12	; 18
    a422:	8f e6       	ldi	r24, 0x6F	; 111
    a424:	96 e1       	ldi	r25, 0x16	; 22
    a426:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a42a:	83 e0       	ldi	r24, 0x03	; 3
					}
				}
			}
		}
	}
}
    a42c:	df 91       	pop	r29
    a42e:	cf 91       	pop	r28
    a430:	1f 91       	pop	r17
    a432:	0f 91       	pop	r16
    a434:	ff 90       	pop	r15
    a436:	ef 90       	pop	r14
    a438:	df 90       	pop	r13
    a43a:	bf 90       	pop	r11
    a43c:	af 90       	pop	r10
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Fertilizer_Tank_Monitoring 1 : ");
			}
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a43e:	0c 94 74 49 	jmp	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
    a442:	c0 e0       	ldi	r28, 0x00	; 0
    a444:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a446:	3b e1       	ldi	r19, 0x1B	; 27
    a448:	f3 2e       	mov	r15, r19
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a44a:	48 e7       	ldi	r20, 0x78	; 120
    a44c:	d4 2e       	mov	r13, r20
    a44e:	ec 2e       	mov	r14, r28
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		if(!_sSchedules.Tank_On_Retry[tank_number])
    a450:	8e 01       	movw	r16, r28
    a452:	00 51       	subi	r16, 0x10	; 16
    a454:	17 4f       	sbci	r17, 0xF7	; 247
    a456:	f8 01       	movw	r30, r16
    a458:	ed 5a       	subi	r30, 0xAD	; 173
    a45a:	fd 4f       	sbci	r31, 0xFD	; 253
    a45c:	80 81       	ld	r24, Z
    a45e:	81 11       	cpse	r24, r1
    a460:	7a c0       	rjmp	.+244    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
		{
			if(_sSchedules.Fertilizer_Tank_Status[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] == _kSET)
    a462:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a466:	90 e0       	ldi	r25, 0x00	; 0
    a468:	01 97       	sbiw	r24, 0x01	; 1
    a46a:	fc 01       	movw	r30, r24
    a46c:	ee 0f       	add	r30, r30
    a46e:	ff 1f       	adc	r31, r31
    a470:	e8 0f       	add	r30, r24
    a472:	f9 1f       	adc	r31, r25
    a474:	ec 0f       	add	r30, r28
    a476:	fd 1f       	adc	r31, r29
    a478:	ef 5b       	subi	r30, 0xBF	; 191
    a47a:	f5 4f       	sbci	r31, 0xF5	; 245
    a47c:	80 81       	ld	r24, Z
    a47e:	81 30       	cpi	r24, 0x01	; 1
    a480:	09 f0       	breq	.+2      	; 0xa484 <_Z26Fertilizer_Tank_Monitoringv+0xa6>
    a482:	69 c0       	rjmp	.+210    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
			{
				if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number !=0 && _sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].Extra_Plot_Number > 100)
    a484:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a488:	90 e0       	ldi	r25, 0x00	; 0
    a48a:	01 97       	sbiw	r24, 0x01	; 1
    a48c:	fc 01       	movw	r30, r24
    a48e:	ee 0f       	add	r30, r30
    a490:	ff 1f       	adc	r31, r31
    a492:	e8 0f       	add	r30, r24
    a494:	f9 1f       	adc	r31, r25
    a496:	ec 0f       	add	r30, r28
    a498:	fd 1f       	adc	r31, r29
    a49a:	e6 59       	subi	r30, 0x96	; 150
    a49c:	f6 4f       	sbci	r31, 0xF6	; 246
    a49e:	80 81       	ld	r24, Z
    a4a0:	90 e0       	ldi	r25, 0x00	; 0
    a4a2:	85 56       	subi	r24, 0x65	; 101
    a4a4:	91 09       	sbc	r25, r1
    a4a6:	f8 9e       	mul	r15, r24
    a4a8:	f0 01       	movw	r30, r0
    a4aa:	f9 9e       	mul	r15, r25
    a4ac:	f0 0d       	add	r31, r0
    a4ae:	11 24       	eor	r1, r1
    a4b0:	e1 56       	subi	r30, 0x61	; 97
    a4b2:	f0 4f       	sbci	r31, 0xF0	; 240
    a4b4:	81 81       	ldd	r24, Z+1	; 0x01
    a4b6:	88 23       	and	r24, r24
    a4b8:	09 f4       	brne	.+2      	; 0xa4bc <_Z26Fertilizer_Tank_Monitoringv+0xde>
    a4ba:	4d c0       	rjmp	.+154    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
    a4bc:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a4c0:	90 e0       	ldi	r25, 0x00	; 0
    a4c2:	01 97       	sbiw	r24, 0x01	; 1
    a4c4:	fc 01       	movw	r30, r24
    a4c6:	ee 0f       	add	r30, r30
    a4c8:	ff 1f       	adc	r31, r31
    a4ca:	e8 0f       	add	r30, r24
    a4cc:	f9 1f       	adc	r31, r25
    a4ce:	ec 0f       	add	r30, r28
    a4d0:	fd 1f       	adc	r31, r29
    a4d2:	e6 59       	subi	r30, 0x96	; 150
    a4d4:	f6 4f       	sbci	r31, 0xF6	; 246
    a4d6:	80 81       	ld	r24, Z
    a4d8:	90 e0       	ldi	r25, 0x00	; 0
    a4da:	85 56       	subi	r24, 0x65	; 101
    a4dc:	91 09       	sbc	r25, r1
    a4de:	f8 9e       	mul	r15, r24
    a4e0:	f0 01       	movw	r30, r0
    a4e2:	f9 9e       	mul	r15, r25
    a4e4:	f0 0d       	add	r31, r0
    a4e6:	11 24       	eor	r1, r1
    a4e8:	e1 56       	subi	r30, 0x61	; 97
    a4ea:	f0 4f       	sbci	r31, 0xF0	; 240
    a4ec:	81 81       	ldd	r24, Z+1	; 0x01
    a4ee:	85 36       	cpi	r24, 0x65	; 101
    a4f0:	90 f1       	brcs	.+100    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
				{
					/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 1: ");*/
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
    a4f2:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a4f6:	90 e0       	ldi	r25, 0x00	; 0
    a4f8:	01 97       	sbiw	r24, 0x01	; 1
    a4fa:	fc 01       	movw	r30, r24
    a4fc:	ee 0f       	add	r30, r30
    a4fe:	ff 1f       	adc	r31, r31
    a500:	e8 0f       	add	r30, r24
    a502:	f9 1f       	adc	r31, r25
    a504:	ec 0f       	add	r30, r28
    a506:	fd 1f       	adc	r31, r29
    a508:	e6 59       	subi	r30, 0x96	; 150
    a50a:	f6 4f       	sbci	r31, 0xF6	; 246
    a50c:	80 81       	ld	r24, Z
    a50e:	90 e0       	ldi	r25, 0x00	; 0
    a510:	85 56       	subi	r24, 0x65	; 101
    a512:	91 09       	sbc	r25, r1
    a514:	f8 9e       	mul	r15, r24
    a516:	f0 01       	movw	r30, r0
    a518:	f9 9e       	mul	r15, r25
    a51a:	f0 0d       	add	r31, r0
    a51c:	11 24       	eor	r1, r1
    a51e:	e1 56       	subi	r30, 0x61	; 97
    a520:	f0 4f       	sbci	r31, 0xF0	; 240
    a522:	80 81       	ld	r24, Z
    a524:	81 11       	cpse	r24, r1
    a526:	17 c0       	rjmp	.+46     	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a528:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a52c:	90 e0       	ldi	r25, 0x00	; 0
    a52e:	01 97       	sbiw	r24, 0x01	; 1
    a530:	fc 01       	movw	r30, r24
    a532:	ee 0f       	add	r30, r30
    a534:	ff 1f       	adc	r31, r31
    a536:	e8 0f       	add	r30, r24
    a538:	f9 1f       	adc	r31, r25
    a53a:	ec 0f       	add	r30, r28
    a53c:	fd 1f       	adc	r31, r29
    a53e:	ee 0f       	add	r30, r30
    a540:	ff 1f       	adc	r31, r31
    a542:	e3 51       	subi	r30, 0x13	; 19
    a544:	f5 4f       	sbci	r31, 0xF5	; 245
    a546:	20 81       	ld	r18, Z
    a548:	31 81       	ldd	r19, Z+1	; 0x01
    a54a:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    a54e:	90 e0       	ldi	r25, 0x00	; 0
    a550:	28 17       	cp	r18, r24
    a552:	39 07       	cpc	r19, r25
    a554:	31 f4       	brne	.+12     	; 0xa562 <_Z26Fertilizer_Tank_Monitoringv+0x184>
    a556:	21 96       	adiw	r28, 0x01	; 1
			Doser_Pump_On_Off(_kFORCEFULYY_OFF);
		}
		return;
	}
	
	for(tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    a558:	c3 30       	cpi	r28, 0x03	; 3
    a55a:	d1 05       	cpc	r29, r1
    a55c:	09 f0       	breq	.+2      	; 0xa560 <_Z26Fertilizer_Tank_Monitoringv+0x182>
    a55e:	77 cf       	rjmp	.-274    	; 0xa44e <_Z26Fertilizer_Tank_Monitoringv+0x70>
    a560:	a0 c0       	rjmp	.+320    	; 0xa6a2 <_Z26Fertilizer_Tank_Monitoringv+0x2c4>
					if(_sExtra_Plot[_sSchedules.Fertilizer_Tank_Number[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number]-_kEXTRA_PLOT_START_FROM].On_Off_Status == _kRESET)
					{
						if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
						{	
							/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 3: ");*/
							if(_sSchedules.Running_Tank[tank_number] == _kON)
    a562:	58 01       	movw	r10, r16
    a564:	80 ea       	ldi	r24, 0xA0	; 160
    a566:	a8 1a       	sub	r10, r24
    a568:	8d ef       	ldi	r24, 0xFD	; 253
    a56a:	b8 0a       	sbc	r11, r24
    a56c:	f5 01       	movw	r30, r10
    a56e:	80 81       	ld	r24, Z
    a570:	81 30       	cpi	r24, 0x01	; 1
    a572:	09 f0       	breq	.+2      	; 0xa576 <_Z26Fertilizer_Tank_Monitoringv+0x198>
    a574:	45 c0       	rjmp	.+138    	; 0xa600 <_Z26Fertilizer_Tank_Monitoringv+0x222>
							{
								Doser_Pump_On_Off(_kON);
    a576:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
								/*_kSERAIL_MON_WRITE("_sSchedules.Keep_Scheduler_Run_Timer 4: ");*/
								if(_sSchedules.Tank_Running_Timer[tank_number] > _sSchedules.Tank_Off_Time_Duration[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a57a:	8e 01       	movw	r16, r28
    a57c:	00 0f       	add	r16, r16
    a57e:	11 1f       	adc	r17, r17
    a580:	0c 5a       	subi	r16, 0xAC	; 172
    a582:	14 4f       	sbci	r17, 0xF4	; 244
    a584:	f8 01       	movw	r30, r16
    a586:	20 81       	ld	r18, Z
    a588:	31 81       	ldd	r19, Z+1	; 0x01
    a58a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a58e:	90 e0       	ldi	r25, 0x00	; 0
    a590:	01 97       	sbiw	r24, 0x01	; 1
    a592:	fc 01       	movw	r30, r24
    a594:	ee 0f       	add	r30, r30
    a596:	ff 1f       	adc	r31, r31
    a598:	e8 0f       	add	r30, r24
    a59a:	f9 1f       	adc	r31, r25
    a59c:	ec 0f       	add	r30, r28
    a59e:	fd 1f       	adc	r31, r29
    a5a0:	ee 0f       	add	r30, r30
    a5a2:	ff 1f       	adc	r31, r31
    a5a4:	e5 51       	subi	r30, 0x15	; 21
    a5a6:	f6 4f       	sbci	r31, 0xF6	; 246
    a5a8:	80 81       	ld	r24, Z
    a5aa:	91 81       	ldd	r25, Z+1	; 0x01
    a5ac:	82 17       	cp	r24, r18
    a5ae:	93 07       	cpc	r25, r19
    a5b0:	90 f6       	brcc	.-92     	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									/* stop tank schedule */
									Doser_Pump_On_Off(_kOFF);
    a5b2:	80 e0       	ldi	r24, 0x00	; 0
    a5b4:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
									_sSchedules.Tank_Running_Timer[tank_number] = _kRESET;
    a5b8:	f8 01       	movw	r30, r16
    a5ba:	11 82       	std	Z+1, r1	; 0x01
    a5bc:	10 82       	st	Z, r1
									_sSchedules.Running_Tank[tank_number] = _kOFF;
    a5be:	f5 01       	movw	r30, r10
    a5c0:	10 82       	st	Z, r1
									//_sSchedules.Already_Fertilze_Status[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
									_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;	
    a5c2:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a5c6:	90 e0       	ldi	r25, 0x00	; 0
    a5c8:	01 97       	sbiw	r24, 0x01	; 1
    a5ca:	fc 01       	movw	r30, r24
    a5cc:	ee 0f       	add	r30, r30
    a5ce:	ff 1f       	adc	r31, r31
    a5d0:	e8 0f       	add	r30, r24
    a5d2:	f9 1f       	adc	r31, r25
    a5d4:	ec 0f       	add	r30, r28
    a5d6:	fd 1f       	adc	r31, r29
    a5d8:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    a5dc:	90 e0       	ldi	r25, 0x00	; 0
    a5de:	ee 0f       	add	r30, r30
    a5e0:	ff 1f       	adc	r31, r31
    a5e2:	e3 51       	subi	r30, 0x13	; 19
    a5e4:	f5 4f       	sbci	r31, 0xF5	; 245
    a5e6:	91 83       	std	Z+1, r25	; 0x01
    a5e8:	80 83       	st	Z, r24
									Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kOFF);
    a5ea:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a5ee:	90 e0       	ldi	r25, 0x00	; 0
    a5f0:	01 97       	sbiw	r24, 0x01	; 1
    a5f2:	98 2f       	mov	r25, r24
    a5f4:	99 0f       	add	r25, r25
    a5f6:	89 0f       	add	r24, r25
    a5f8:	60 e0       	ldi	r22, 0x00	; 0
    a5fa:	8e 0d       	add	r24, r14
    a5fc:	da d9       	rcall	.-3148   	; 0x99b2 <_Z22Fertilizer_Tank_On_Offhh>
    a5fe:	ab cf       	rjmp	.-170    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									
								}
							}
							else
							{
								if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Fertilizer_Tank_On_After[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK) + tank_number])
    a600:	20 91 f8 08 	lds	r18, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    a604:	30 91 f9 08 	lds	r19, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    a608:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a60c:	90 e0       	ldi	r25, 0x00	; 0
    a60e:	01 97       	sbiw	r24, 0x01	; 1
    a610:	fc 01       	movw	r30, r24
    a612:	ee 0f       	add	r30, r30
    a614:	ff 1f       	adc	r31, r31
    a616:	e8 0f       	add	r30, r24
    a618:	f9 1f       	adc	r31, r25
    a61a:	ec 0f       	add	r30, r28
    a61c:	fd 1f       	adc	r31, r29
    a61e:	ee 0f       	add	r30, r30
    a620:	ff 1f       	adc	r31, r31
    a622:	eb 56       	subi	r30, 0x6B	; 107
    a624:	f6 4f       	sbci	r31, 0xF6	; 246
    a626:	80 81       	ld	r24, Z
    a628:	91 81       	ldd	r25, Z+1	; 0x01
    a62a:	82 17       	cp	r24, r18
    a62c:	93 07       	cpc	r25, r19
    a62e:	08 f0       	brcs	.+2      	; 0xa632 <_Z26Fertilizer_Tank_Monitoringv+0x254>
    a630:	92 cf       	rjmp	.-220    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
								{
									if(_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number] != _sSchedules.Started_Date)
    a632:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a636:	90 e0       	ldi	r25, 0x00	; 0
    a638:	01 97       	sbiw	r24, 0x01	; 1
    a63a:	fc 01       	movw	r30, r24
    a63c:	ee 0f       	add	r30, r30
    a63e:	ff 1f       	adc	r31, r31
    a640:	e8 0f       	add	r30, r24
    a642:	f9 1f       	adc	r31, r25
    a644:	ec 0f       	add	r30, r28
    a646:	fd 1f       	adc	r31, r29
    a648:	ee 0f       	add	r30, r30
    a64a:	ff 1f       	adc	r31, r31
    a64c:	e3 51       	subi	r30, 0x13	; 19
    a64e:	f5 4f       	sbci	r31, 0xF5	; 245
    a650:	20 81       	ld	r18, Z
    a652:	31 81       	ldd	r19, Z+1	; 0x01
    a654:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    a658:	90 e0       	ldi	r25, 0x00	; 0
    a65a:	28 17       	cp	r18, r24
    a65c:	39 07       	cpc	r19, r25
    a65e:	09 f4       	brne	.+2      	; 0xa662 <_Z26Fertilizer_Tank_Monitoringv+0x284>
    a660:	7a cf       	rjmp	.-268    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
									{
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
    a662:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a666:	90 e0       	ldi	r25, 0x00	; 0
    a668:	01 97       	sbiw	r24, 0x01	; 1
    a66a:	98 2f       	mov	r25, r24
    a66c:	99 0f       	add	r25, r25
    a66e:	89 0f       	add	r24, r25
    a670:	61 e0       	ldi	r22, 0x01	; 1
    a672:	8e 0d       	add	r24, r14
    a674:	9e d9       	rcall	.-3268   	; 0x99b2 <_Z22Fertilizer_Tank_On_Offhh>
    a676:	88 23       	and	r24, r24
    a678:	79 f0       	breq	.+30     	; 0xa698 <_Z26Fertilizer_Tank_Monitoringv+0x2ba>
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
    a67a:	10 92 9e 0c 	sts	0x0C9E, r1	; 0x800c9e <_gWait_Blower_Time+0x1>
    a67e:	10 92 9d 0c 	sts	0x0C9D, r1	; 0x800c9d <_gWait_Blower_Time>
											if(Doser_Pump_On_Off(_kON))
    a682:	81 e0       	ldi	r24, 0x01	; 1
    a684:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a688:	f8 01       	movw	r30, r16
										/* start tank schedule */
										if(Fertilizer_Tank_On_Off(((_sSchedules.Which_Sheduler_Is_Running-1)*_kMAX_FERTILIZER_TANK)+tank_number,_kON))
										{
											//_sSchedules.Blower_On_Time = _kRESET;
											_gWait_Blower_Time = _kRESET;
											if(Doser_Pump_On_Off(_kON))
    a68a:	88 23       	and	r24, r24
    a68c:	31 f0       	breq	.+12     	; 0xa69a <_Z26Fertilizer_Tank_Monitoringv+0x2bc>
											{
												_sSchedules.Running_Tank[tank_number] = _kON;
    a68e:	e0 5a       	subi	r30, 0xA0	; 160
    a690:	fd 4f       	sbci	r31, 0xFD	; 253
    a692:	81 e0       	ldi	r24, 0x01	; 1
    a694:	80 83       	st	Z, r24
    a696:	5f cf       	rjmp	.-322    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
												_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
											}		
										}
										else
										{
											_sSchedules.Tank_On_Retry[tank_number] = _kTANK_RETRY_TIME;
    a698:	f8 01       	movw	r30, r16
    a69a:	ed 5a       	subi	r30, 0xAD	; 173
    a69c:	fd 4f       	sbci	r31, 0xFD	; 253
    a69e:	d0 82       	st	Z, r13
    a6a0:	5a cf       	rjmp	.-332    	; 0xa556 <_Z26Fertilizer_Tank_Monitoringv+0x178>
					}
				}
			}
		}
	}
}
    a6a2:	df 91       	pop	r29
    a6a4:	cf 91       	pop	r28
    a6a6:	1f 91       	pop	r17
    a6a8:	0f 91       	pop	r16
    a6aa:	ff 90       	pop	r15
    a6ac:	ef 90       	pop	r14
    a6ae:	df 90       	pop	r13
    a6b0:	bf 90       	pop	r11
    a6b2:	af 90       	pop	r10
    a6b4:	08 95       	ret

0000a6b6 <_Z20Schedules_Monitoringv>:
	}
	
}		
	
void Schedules_Monitoring(void)
{
    a6b6:	0f 93       	push	r16
    a6b8:	1f 93       	push	r17
    a6ba:	cf 93       	push	r28
    a6bc:	df 93       	push	r29
	unsigned char check_new_true_condition;
	unsigned char Check_for_no_repeat;
	static unsigned char irrigation_Start_Set = _kRESET,flush_running_status=_kRESET;
	static unsigned char mode_change = 0;
	
	_sSchedules.Schedule_Pause_Resume = _kRESET;
    a6be:	10 92 b7 0b 	sts	0x0BB7, r1	; 0x800bb7 <_sSchedules+0x2c7>
	_sSchedules.Based_On_Trigger_Time = _sSchedules.Based_On_Trigger_Time;
    a6c2:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
    a6c6:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <_sSchedules+0x1b>
	
	switch(_sSchedules.Based_On_Trigger_Time)
    a6ca:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
    a6ce:	82 30       	cpi	r24, 0x02	; 2
    a6d0:	90 f4       	brcc	.+36     	; 0xa6f6 <_Z20Schedules_Monitoringv+0x40>
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a6d2:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <_sSchedules>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a6d6:	81 30       	cpi	r24, 0x01	; 1
    a6d8:	91 f4       	brne	.+36     	; 0xa6fe <_Z20Schedules_Monitoringv+0x48>
	switch(_sSchedules.Based_On_Trigger_Time)
	{
		case _eBASED_ON_ELECTRICITY:
		case _eBASED_ON_TRIGGER_TIME:
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
    a6da:	90 91 f1 08 	lds	r25, 0x08F1	; 0x8008f1 <_sSchedules+0x1>
    a6de:	91 11       	cpse	r25, r1
    a6e0:	0e c0       	rjmp	.+28     	; 0xa6fe <_Z20Schedules_Monitoringv+0x48>
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
    a6e2:	90 91 b7 0b 	lds	r25, 0x0BB7	; 0x800bb7 <_sSchedules+0x2c7>
    a6e6:	91 30       	cpi	r25, 0x01	; 1
    a6e8:	51 f0       	breq	.+20     	; 0xa6fe <_Z20Schedules_Monitoringv+0x48>
    a6ea:	90 91 ab 15 	lds	r25, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    a6ee:	96 34       	cpi	r25, 0x46	; 70
    a6f0:	09 f0       	breq	.+2      	; 0xa6f4 <_Z20Schedules_Monitoringv+0x3e>
    a6f2:	a7 c0       	rjmp	.+334    	; 0xa842 <_Z20Schedules_Monitoringv+0x18c>
    a6f4:	04 c0       	rjmp	.+8      	; 0xa6fe <_Z20Schedules_Monitoringv+0x48>
			}
		}break;
		
		default:
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
    a6f6:	81 e0       	ldi	r24, 0x01	; 1
    a6f8:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <_sSchedules+0x1b>
		}break;
	}
	
}					
    a6fc:	77 c7       	rjmp	.+3822   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a6fe:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a702:	88 23       	and	r24, r24
    a704:	21 f0       	breq	.+8      	; 0xa70e <_Z20Schedules_Monitoringv+0x58>
					}
				}
			}
			else
			{
				if((_sSchedules.Which_Sheduler_Is_Running && _sRuble_Parameters.Irrigating_Plot !=0)
    a706:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    a70a:	81 11       	cpse	r24, r1
    a70c:	07 c0       	rjmp	.+14     	; 0xa71c <_Z20Schedules_Monitoringv+0x66>
				|| _sSchedules.Scheduler_Retry_Timer != 0)
    a70e:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    a712:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    a716:	89 2b       	or	r24, r25
    a718:	09 f4       	brne	.+2      	; 0xa71c <_Z20Schedules_Monitoringv+0x66>
    a71a:	67 c0       	rjmp	.+206    	; 0xa7ea <_Z20Schedules_Monitoringv+0x134>
				{
					if(_sPump_Parameter.Irrigation_Status)
    a71c:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    a720:	81 11       	cpse	r24, r1
					{
						_sPump_Parameter.Irrigation_Status = _kRESET;
    a722:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
					}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a726:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a72a:	81 30       	cpi	r24, 0x01	; 1
    a72c:	51 f4       	brne	.+20     	; 0xa742 <_Z20Schedules_Monitoringv+0x8c>
					{
						_kSERAIL_MON_WRITE("sc enter 60");
    a72e:	69 e2       	ldi	r22, 0x29	; 41
    a730:	73 e1       	ldi	r23, 0x13	; 19
    a732:	8f e6       	ldi	r24, 0x6F	; 111
    a734:	96 e1       	ldi	r25, 0x16	; 22
    a736:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a73a:	8f e6       	ldi	r24, 0x6F	; 111
    a73c:	96 e1       	ldi	r25, 0x16	; 22
    a73e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
    a742:	80 91 b7 0b 	lds	r24, 0x0BB7	; 0x800bb7 <_sSchedules+0x2c7>
    a746:	81 11       	cpse	r24, r1
    a748:	0f c7       	rjmp	.+3614   	; 0xb568 <_Z20Schedules_Monitoringv+0xeb2>
    a74a:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <_sSchedules+0x1>
    a74e:	81 30       	cpi	r24, 0x01	; 1
    a750:	09 f4       	brne	.+2      	; 0xa754 <_Z20Schedules_Monitoringv+0x9e>
    a752:	0a c7       	rjmp	.+3604   	; 0xb568 <_Z20Schedules_Monitoringv+0xeb2>
    a754:	80 91 ab 15 	lds	r24, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    a758:	86 34       	cpi	r24, 0x46	; 70
    a75a:	09 f4       	brne	.+2      	; 0xa75e <_Z20Schedules_Monitoringv+0xa8>
    a75c:	05 c7       	rjmp	.+3594   	; 0xb568 <_Z20Schedules_Monitoringv+0xeb2>
					}
					
					
					
					/* what should happen when scheduler mode id not enabled */
					_sSchedules.New_Schedules_Occur = _kRESET;
    a75e:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a762:	10 92 f5 08 	sts	0x08F5, r1	; 0x8008f5 <_sSchedules+0x5>
    a766:	10 92 f4 08 	sts	0x08F4, r1	; 0x8008f4 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a76a:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a76e:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a772:	81 11       	cpse	r24, r1
    a774:	d9 c6       	rjmp	.+3506   	; 0xb528 <_Z20Schedules_Monitoringv+0xe72>
						Turn_Off_Blower_For_Safety();
					}
					
					//_sSchedules.Which_Sheduler_Is_Running = _kRESET;  // 17/02/2023
					
						if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a776:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
    a77a:	81 11       	cpse	r24, r1
    a77c:	03 c0       	rjmp	.+6      	; 0xa784 <_Z20Schedules_Monitoringv+0xce>
						{
							_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a77e:	84 e0       	ldi	r24, 0x04	; 4
    a780:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
						}
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    a784:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a788:	81 30       	cpi	r24, 0x01	; 1
    a78a:	e1 f4       	brne	.+56     	; 0xa7c4 <_Z20Schedules_Monitoringv+0x10e>
					{
						_kSERAIL_MON_WRITE("Scheduler gets off 11 : ");
    a78c:	68 ef       	ldi	r22, 0xF8	; 248
    a78e:	72 e1       	ldi	r23, 0x12	; 18
    a790:	8f e6       	ldi	r24, 0x6F	; 111
    a792:	96 e1       	ldi	r25, 0x16	; 22
    a794:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a798:	8f e6       	ldi	r24, 0x6F	; 111
    a79a:	96 e1       	ldi	r25, 0x16	; 22
    a79c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running);
    a7a0:	60 91 f3 08 	lds	r22, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a7a4:	4a e0       	ldi	r20, 0x0A	; 10
    a7a6:	50 e0       	ldi	r21, 0x00	; 0
    a7a8:	8f e6       	ldi	r24, 0x6F	; 111
    a7aa:	96 e1       	ldi	r25, 0x16	; 22
    a7ac:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						
						_kSERAIL_MON_WRITE("sc enter 59.1");
    a7b0:	6a ee       	ldi	r22, 0xEA	; 234
    a7b2:	72 e1       	ldi	r23, 0x12	; 18
    a7b4:	8f e6       	ldi	r24, 0x6F	; 111
    a7b6:	96 e1       	ldi	r25, 0x16	; 22
    a7b8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    a7bc:	8f e6       	ldi	r24, 0x6F	; 111
    a7be:	96 e1       	ldi	r25, 0x16	; 22
    a7c0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a7c4:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a7c8:	81 e0       	ldi	r24, 0x01	; 1
    a7ca:	80 93 f7 08 	sts	0x08F7, r24	; 0x8008f7 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a7ce:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
					
					_sSchedules.Schedule_Are_Started = _kRESET;
    a7d2:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a7d6:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <_sSchedules+0x1e>
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a7da:	80 91 23 16 	lds	r24, 0x1623	; 0x801623 <_sRuble_Parameters+0xbe>
    a7de:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    a7e2:	89 13       	cpse	r24, r25
    a7e4:	b8 c6       	rjmp	.+3440   	; 0xb556 <_Z20Schedules_Monitoringv+0xea0>
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
						}
					}
					
					_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a7e6:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
					
				}
				
				if(_sSchedules.New_Schedules_Occur != _kRESET)
    a7ea:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <_sSchedules+0x1>
    a7ee:	88 23       	and	r24, r24
    a7f0:	b9 f0       	breq	.+46     	; 0xa820 <_Z20Schedules_Monitoringv+0x16a>
				{
					_sSchedules.New_Schedules_Occur = _kRESET;
    a7f2:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <_sSchedules+0x1>
					
					
					
					_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* 17/02/2023reset the running schedule */
    a7f6:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
					_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a7fa:	81 e0       	ldi	r24, 0x01	; 1
    a7fc:	80 93 f7 08 	sts	0x08F7, r24	; 0x8008f7 <_sSchedules+0x7>
					_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a800:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
					_sSchedules.Schedule_Are_Started = _kRESET;
    a804:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
					_sSchedules.all_schedule_done_flag = _kRESET;
    a808:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <_sSchedules+0x1e>
					_sSchedules.New_Schedules_Occur = _kRESET;
    a80c:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <_sSchedules+0x1>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
    a810:	10 92 f5 08 	sts	0x08F5, r1	; 0x8008f5 <_sSchedules+0x5>
    a814:	10 92 f4 08 	sts	0x08F4, r1	; 0x8008f4 <_sSchedules+0x4>
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a818:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
				
				
				
					Edited_In_Schedule();
    a81c:	0e 94 bd 3f 	call	0x7f7a	; 0x7f7a <_Z18Edited_In_Schedulev>
				}
				
				if(_sRuble_Parameters.Irrigating_Plot && _sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a820:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    a824:	88 23       	and	r24, r24
    a826:	09 f4       	brne	.+2      	; 0xa82a <_Z20Schedules_Monitoringv+0x174>
    a828:	e1 c6       	rjmp	.+3522   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    a82a:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    a82e:	85 30       	cpi	r24, 0x05	; 5
    a830:	09 f0       	breq	.+2      	; 0xa834 <_Z20Schedules_Monitoringv+0x17e>
    a832:	dc c6       	rjmp	.+3512   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
				{
					Stop_Irrigation();
    a834:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
					_sRuble_Parameters.Pump_Run_Timer = _kRESET;
    a838:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
    a83c:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
    a840:	d5 c6       	rjmp	.+3498   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
		{
			if(_sSchedules.Schedule_Enable == _kON && _sSchedules.New_Schedules_Occur == _kRESET
			&& _sSchedules.Schedule_Pause_Resume != _kSET && 
			_sRuble_Parameters.Update_Local_Date[2] != 70)
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
    a842:	90 91 8c 15 	lds	r25, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    a846:	95 30       	cpi	r25, 0x05	; 5
    a848:	09 f0       	breq	.+2      	; 0xa84c <_Z20Schedules_Monitoringv+0x196>
    a84a:	42 c0       	rjmp	.+132    	; 0xa8d0 <_Z20Schedules_Monitoringv+0x21a>
				{
					mode_change = _kSET;
    a84c:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <_ZZ20Schedules_MonitoringvE11mode_change>
					if(flush_running_status == _kSET)
    a850:	80 91 ee 08 	lds	r24, 0x08EE	; 0x8008ee <_ZZ20Schedules_MonitoringvE20flush_running_status>
    a854:	81 30       	cpi	r24, 0x01	; 1
    a856:	61 f4       	brne	.+24     	; 0xa870 <_Z20Schedules_Monitoringv+0x1ba>
					{
						if(_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    a858:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
    a85c:	81 30       	cpi	r24, 0x01	; 1
    a85e:	41 f0       	breq	.+16     	; 0xa870 <_Z20Schedules_Monitoringv+0x1ba>
						&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET)
    a860:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
    a864:	81 11       	cpse	r24, r1
    a866:	04 c0       	rjmp	.+8      	; 0xa870 <_Z20Schedules_Monitoringv+0x1ba>
						{
							flush_running_status = _kRESET;
    a868:	10 92 ee 08 	sts	0x08EE, r1	; 0x8008ee <_ZZ20Schedules_MonitoringvE20flush_running_status>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    a86c:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						{
							
						}
					}
					
					if(irrigation_Start_Set == _kSET)
    a870:	80 91 ed 08 	lds	r24, 0x08ED	; 0x8008ed <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
    a874:	81 30       	cpi	r24, 0x01	; 1
    a876:	79 f4       	brne	.+30     	; 0xa896 <_Z20Schedules_Monitoringv+0x1e0>
					{
						irrigation_Start_Set = _kRESET;
    a878:	10 92 ed 08 	sts	0x08ED, r1	; 0x8008ed <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a87c:	80 91 23 16 	lds	r24, 0x1623	; 0x801623 <_sRuble_Parameters+0xbe>
    a880:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    a884:	89 17       	cp	r24, r25
    a886:	39 f0       	breq	.+14     	; 0xa896 <_Z20Schedules_Monitoringv+0x1e0>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a888:	88 23       	and	r24, r24
    a88a:	29 f0       	breq	.+10     	; 0xa896 <_Z20Schedules_Monitoringv+0x1e0>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a88c:	60 e0       	ldi	r22, 0x00	; 0
    a88e:	0e 94 4e 27 	call	0x4e9c	; 0x4e9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a892:	10 92 23 16 	sts	0x1623, r1	; 0x801623 <_sRuble_Parameters+0xbe>
							}
						}
					}
					
					//_kSERAIL_MON_WRITE("sc enter 0.1");   //1/05
					if(_sSchedules.Scheduler_Retry_Timer == _kRESET)   /* if there is no wait timer to start the schedule again */
    a896:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    a89a:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    a89e:	89 2b       	or	r24, r25
    a8a0:	41 f4       	brne	.+16     	; 0xa8b2 <_Z20Schedules_Monitoringv+0x1fc>
					{
						//_kSERAIL_MON_WRITE("sc enter 0.2");     //1/05
						flush_running_status = _kRESET;
    a8a2:	10 92 ee 08 	sts	0x08EE, r1	; 0x8008ee <_ZZ20Schedules_MonitoringvE20flush_running_status>
						if(_sSchedules.Shedule_Run_Status_Is_Triggered == _kSET && flush_running_status == _kRESET)
    a8a6:	80 91 f6 08 	lds	r24, 0x08F6	; 0x8008f6 <_sSchedules+0x6>
    a8aa:	81 30       	cpi	r24, 0x01	; 1
    a8ac:	09 f0       	breq	.+2      	; 0xa8b0 <_Z20Schedules_Monitoringv+0x1fa>
    a8ae:	ea c0       	rjmp	.+468    	; 0xaa84 <_Z20Schedules_Monitoringv+0x3ce>
    a8b0:	60 c0       	rjmp	.+192    	; 0xa972 <_Z20Schedules_Monitoringv+0x2bc>
							/*********************************************************************************/
						}
					}
					else
					{
						if(_sSchedules.Scheduler_Retry_Timer < 10)
    a8b2:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    a8b6:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    a8ba:	0a 97       	sbiw	r24, 0x0a	; 10
    a8bc:	08 f0       	brcs	.+2      	; 0xa8c0 <_Z20Schedules_Monitoringv+0x20a>
    a8be:	96 c6       	rjmp	.+3372   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
						{	
							if(_sPump_Parameter.Irrigation_Status)
    a8c0:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    a8c4:	88 23       	and	r24, r24
    a8c6:	09 f4       	brne	.+2      	; 0xa8ca <_Z20Schedules_Monitoringv+0x214>
    a8c8:	91 c6       	rjmp	.+3362   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
							{
								_sPump_Parameter.Irrigation_Status = _kRESET;
    a8ca:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
    a8ce:	8e c6       	rjmp	.+3356   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
					}
				}
				else
				{
					/* what should happen if scheduler operation mode is not selected */
					if(mode_change)
    a8d0:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <_ZZ20Schedules_MonitoringvE11mode_change>
    a8d4:	88 23       	and	r24, r24
    a8d6:	09 f4       	brne	.+2      	; 0xa8da <_Z20Schedules_Monitoringv+0x224>
    a8d8:	89 c6       	rjmp	.+3346   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
					{
						mode_change = _kRESET;
    a8da:	10 92 ef 08 	sts	0x08EF, r1	; 0x8008ef <_ZZ20Schedules_MonitoringvE11mode_change>
						if(_sPump_Parameter.Irrigation_Status)
    a8de:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    a8e2:	81 11       	cpse	r24, r1
						{
							_sPump_Parameter.Irrigation_Status = _kRESET;
    a8e4:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
						}
						if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
    a8e8:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a8ec:	88 23       	and	r24, r24
    a8ee:	89 f1       	breq	.+98     	; 0xa952 <_Z20Schedules_Monitoringv+0x29c>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    a8f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a8f4:	81 30       	cpi	r24, 0x01	; 1
    a8f6:	51 f4       	brne	.+20     	; 0xa90c <_Z20Schedules_Monitoringv+0x256>
							{
								_kSERAIL_MON_WRITE("sc enter 58");
    a8f8:	61 e4       	ldi	r22, 0x41	; 65
    a8fa:	73 e1       	ldi	r23, 0x13	; 19
    a8fc:	8f e6       	ldi	r24, 0x6F	; 111
    a8fe:	96 e1       	ldi	r25, 0x16	; 22
    a900:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    a904:	8f e6       	ldi	r24, 0x6F	; 111
    a906:	96 e1       	ldi	r25, 0x16	; 22
    a908:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    a90c:	83 e0       	ldi	r24, 0x03	; 3
    a90e:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
							Turn_Off_All_Tank_For_Safety();
    a912:	0e 94 c8 3c 	call	0x7990	; 0x7990 <_Z28Turn_Off_All_Tank_For_Safetyv>
							Blower_Monitoring(_kFORCEFULYY_OFF);    // 11-4
    a916:	83 e0       	ldi	r24, 0x03	; 3
    a918:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
							Turn_Off_Blower_For_Safety();
						
							//_sSchedules.Which_Sheduler_Is_Running = _kRESET;
							if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    a91c:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
    a920:	81 11       	cpse	r24, r1
    a922:	11 c0       	rjmp	.+34     	; 0xa946 <_Z20Schedules_Monitoringv+0x290>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    a924:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a928:	81 30       	cpi	r24, 0x01	; 1
    a92a:	51 f4       	brne	.+20     	; 0xa940 <_Z20Schedules_Monitoringv+0x28a>
								{
									_kSERAIL_MON_WRITE("sc enter 59");
    a92c:	65 e3       	ldi	r22, 0x35	; 53
    a92e:	73 e1       	ldi	r23, 0x13	; 19
    a930:	8f e6       	ldi	r24, 0x6F	; 111
    a932:	96 e1       	ldi	r25, 0x16	; 22
    a934:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    a938:	8f e6       	ldi	r24, 0x6F	; 111
    a93a:	96 e1       	ldi	r25, 0x16	; 22
    a93c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    a940:	84 e0       	ldi	r24, 0x04	; 4
    a942:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
							}				
							_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a946:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
							_sSchedules.Pump_On_In_Scheduler = _kRESET;
    a94a:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
							_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);	
    a94e:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
						}
						
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    a952:	80 91 23 16 	lds	r24, 0x1623	; 0x801623 <_sRuble_Parameters+0xbe>
    a956:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    a95a:	89 17       	cp	r24, r25
    a95c:	09 f4       	brne	.+2      	; 0xa960 <_Z20Schedules_Monitoringv+0x2aa>
    a95e:	46 c6       	rjmp	.+3212   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
						{
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    a960:	88 23       	and	r24, r24
    a962:	09 f4       	brne	.+2      	; 0xa966 <_Z20Schedules_Monitoringv+0x2b0>
    a964:	43 c6       	rjmp	.+3206   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
							{
								Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    a966:	60 e0       	ldi	r22, 0x00	; 0
    a968:	0e 94 4e 27 	call	0x4e9c	; 0x4e9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
								_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    a96c:	10 92 23 16 	sts	0x1623, r1	; 0x801623 <_sRuble_Parameters+0xbe>
    a970:	3d c6       	rjmp	.+3194   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a972:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a976:	f0 e0       	ldi	r31, 0x00	; 0
    a978:	e7 5a       	subi	r30, 0xA7	; 167
    a97a:	f6 4f       	sbci	r31, 0xF6	; 246
    a97c:	40 81       	ld	r20, Z
													
							/* check todays date with previous date */		
							if(1)
							{
								check_new_true_condition =
								Day_In_Bet_Schedulling(_sSchedules.Days_In_Between_Schedules,_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1],
    a97e:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a982:	f0 e0       	ldi	r31, 0x00	; 0
    a984:	e6 5b       	subi	r30, 0xB6	; 182
    a986:	f6 4f       	sbci	r31, 0xF6	; 246
    a988:	60 81       	ld	r22, Z
    a98a:	80 91 0c 09 	lds	r24, 0x090C	; 0x80090c <_sSchedules+0x1c>
								_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1]);
    a98e:	0e 94 35 38 	call	0x706a	; 0x706a <_Z22Day_In_Bet_Schedullinghhh>
								
								if(check_new_true_condition == 2)
								{
									check_new_true_condition = _kSET;
								}
								else if(check_new_true_condition == 1)
    a992:	81 50       	subi	r24, 0x01	; 1
    a994:	82 30       	cpi	r24, 0x02	; 2
    a996:	08 f4       	brcc	.+2      	; 0xa99a <_Z20Schedules_Monitoringv+0x2e4>
    a998:	8d c1       	rjmp	.+794    	; 0xacb4 <_Z20Schedules_Monitoringv+0x5fe>
									}
								}
							}
							else
							{
								if(_sSchedules.Which_Sheduler_Is_Running > _kMAX_LIRA_SENSOR_NODE+1) /* when reach to the last scheduler */
    a99a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    a99e:	80 31       	cpi	r24, 0x10	; 16
    a9a0:	90 f1       	brcs	.+100    	; 0xaa06 <_Z20Schedules_Monitoringv+0x350>
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9a2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a9a6:	81 30       	cpi	r24, 0x01	; 1
    a9a8:	31 f4       	brne	.+12     	; 0xa9b6 <_Z20Schedules_Monitoringv+0x300>
									{
										_kSERAIL_MON_WRITE("sc enter 10");
    a9aa:	62 ea       	ldi	r22, 0xA2	; 162
    a9ac:	74 e1       	ldi	r23, 0x14	; 20
    a9ae:	8f e6       	ldi	r24, 0x6F	; 111
    a9b0:	96 e1       	ldi	r25, 0x16	; 22
    a9b2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									}
									_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    a9b6:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
									_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    a9ba:	81 e0       	ldi	r24, 0x01	; 1
    a9bc:	80 93 f7 08 	sts	0x08F7, r24	; 0x8008f7 <_sSchedules+0x7>
									_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    a9c0:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
									
									if(_sSchedules.Schedule_Are_Started == _kSET)
    a9c4:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <_sSchedules+0xe>
    a9c8:	81 30       	cpi	r24, 0x01	; 1
    a9ca:	61 f4       	brne	.+24     	; 0xa9e4 <_Z20Schedules_Monitoringv+0x32e>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    a9cc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    a9d0:	81 30       	cpi	r24, 0x01	; 1
    a9d2:	31 f4       	brne	.+12     	; 0xa9e0 <_Z20Schedules_Monitoringv+0x32a>
										{
											_kSERAIL_MON_WRITE("sc enter 11");
    a9d4:	66 e9       	ldi	r22, 0x96	; 150
    a9d6:	74 e1       	ldi	r23, 0x14	; 20
    a9d8:	8f e6       	ldi	r24, 0x6F	; 111
    a9da:	96 e1       	ldi	r25, 0x16	; 22
    a9dc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										}
										_sSchedules.Schedule_Are_Started = _kRESET;
    a9e0:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
										/* save in eeprom */
									}
									
									_sSchedules.all_schedule_done_flag = _eSET;								
    a9e4:	82 e0       	ldi	r24, 0x02	; 2
    a9e6:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <_sSchedules+0x1e>
									_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    a9ea:	80 91 c0 0b 	lds	r24, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    a9ee:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
									_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    a9f2:	80 91 c1 0b 	lds	r24, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    a9f6:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    a9fa:	df 91       	pop	r29
    a9fc:	cf 91       	pop	r28
    a9fe:	1f 91       	pop	r17
    aa00:	0f 91       	pop	r16
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
										}
																					
										Set_Trigger_Time();								
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aa02:	0c 94 fb 31 	jmp	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									/* save in eeprom */
								}
								else
								{
									_sSchedules.Which_Sheduler_Is_Running++;  /* when time of current schedule over then next scheduler should be select */
    aa06:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    aa0a:	8f 5f       	subi	r24, 0xFF	; 255
    aa0c:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <_sSchedules+0x3>
									if(_sSchedules.Which_Sheduler_Is_Running == 1)
    aa10:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    aa14:	81 30       	cpi	r24, 0x01	; 1
    aa16:	09 f0       	breq	.+2      	; 0xaa1a <_Z20Schedules_Monitoringv+0x364>
    aa18:	e9 c5       	rjmp	.+3026   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
									{
										_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    aa1a:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    aa1e:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
										_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    aa22:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    aa26:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    aa2a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    aa2e:	81 30       	cpi	r24, 0x01	; 1
    aa30:	91 f4       	brne	.+36     	; 0xaa56 <_Z20Schedules_Monitoringv+0x3a0>
										{
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
    aa32:	64 e6       	ldi	r22, 0x64	; 100
    aa34:	74 e1       	ldi	r23, 0x14	; 20
    aa36:	8f e6       	ldi	r24, 0x6F	; 111
    aa38:	96 e1       	ldi	r25, 0x16	; 22
    aa3a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
    aa3e:	60 91 c0 0b 	lds	r22, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    aa42:	4a e0       	ldi	r20, 0x0A	; 10
    aa44:	50 e0       	ldi	r21, 0x00	; 0
    aa46:	8f e6       	ldi	r24, 0x6F	; 111
    aa48:	96 e1       	ldi	r25, 0x16	; 22
    aa4a:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
											_kSERIAL_MON_CLEAR();
    aa4e:	8f e6       	ldi	r24, 0x6F	; 111
    aa50:	96 e1       	ldi	r25, 0x16	; 22
    aa52:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										Return_Calculated_Previous_Day_Date(1);										
    aa56:	81 e0       	ldi	r24, 0x01	; 1
    aa58:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    aa5c:	81 e0       	ldi	r24, 0x01	; 1
    aa5e:	90 e0       	ldi	r25, 0x00	; 0
										for(unsigned char index_num = 1; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
										{
											_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    aa60:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    aa64:	9c 01       	movw	r18, r24
    aa66:	20 51       	subi	r18, 0x10	; 16
    aa68:	37 4f       	sbci	r19, 0xF7	; 247
    aa6a:	f9 01       	movw	r30, r18
    aa6c:	e5 5a       	subi	r30, 0xA5	; 165
    aa6e:	ff 4f       	sbci	r31, 0xFF	; 255
    aa70:	40 83       	st	Z, r20
											_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    aa72:	40 91 bf 0b 	lds	r20, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    aa76:	3f 96       	adiw	r30, 0x0f	; 15
    aa78:	40 83       	st	Z, r20
    aa7a:	01 96       	adiw	r24, 0x01	; 1
											_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 2//// :");
											_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);										
											_kSERIAL_MON_CLEAR();
										}
										Return_Calculated_Previous_Day_Date(1);										
										for(unsigned char index_num = 1; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
    aa7c:	8e 30       	cpi	r24, 0x0E	; 14
    aa7e:	91 05       	cpc	r25, r1
    aa80:	79 f7       	brne	.-34     	; 0xaa60 <_Z20Schedules_Monitoringv+0x3aa>
    aa82:	b4 c5       	rjmp	.+2920   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
// 							{
// 								return;
// 							}
							/* write logic to trigger the schedule */
							/* calculate trigger reset of time *there will be lag of 2 min* */
							if(_sSchedules.Based_On_Trigger_Time == _kSET)
    aa84:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
    aa88:	81 30       	cpi	r24, 0x01	; 1
    aa8a:	b1 f5       	brne	.+108    	; 0xaaf8 <_Z20Schedules_Monitoringv+0x442>
							{
								if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    aa8c:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    aa90:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    aa94:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    aa98:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    aa9c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    aaa0:	4c 32       	cpi	r20, 0x2C	; 44
    aaa2:	51 40       	sbci	r21, 0x01	; 1
    aaa4:	61 05       	cpc	r22, r1
    aaa6:	71 05       	cpc	r23, r1
    aaa8:	d0 f4       	brcc	.+52     	; 0xaade <_Z20Schedules_Monitoringv+0x428>
								{
									_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    aaaa:	47 e1       	ldi	r20, 0x17	; 23
    aaac:	50 e5       	ldi	r21, 0x50	; 80
    aaae:	61 e0       	ldi	r22, 0x01	; 1
    aab0:	70 e0       	ldi	r23, 0x00	; 0
    aab2:	40 93 07 09 	sts	0x0907, r20	; 0x800907 <_sSchedules+0x17>
    aab6:	50 93 08 09 	sts	0x0908, r21	; 0x800908 <_sSchedules+0x18>
    aaba:	60 93 09 09 	sts	0x0909, r22	; 0x800909 <_sSchedules+0x19>
    aabe:	70 93 0a 09 	sts	0x090A, r23	; 0x80090a <_sSchedules+0x1a>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    aac2:	81 30       	cpi	r24, 0x01	; 1
    aac4:	09 f0       	breq	.+2      	; 0xaac8 <_Z20Schedules_Monitoringv+0x412>
    aac6:	47 c0       	rjmp	.+142    	; 0xab56 <_Z20Schedules_Monitoringv+0x4a0>
									{
										_kSERAIL_MON_WRITE("sc enter 11.1");
    aac8:	66 e5       	ldi	r22, 0x56	; 86
    aaca:	74 e1       	ldi	r23, 0x14	; 20
    aacc:	8f e6       	ldi	r24, 0x6F	; 111
    aace:	96 e1       	ldi	r25, 0x16	; 22
    aad0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    aad4:	8f e6       	ldi	r24, 0x6F	; 111
    aad6:	96 e1       	ldi	r25, 0x16	; 22
    aad8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    aadc:	3c c0       	rjmp	.+120    	; 0xab56 <_Z20Schedules_Monitoringv+0x4a0>
									}
								}
								else
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    aade:	81 30       	cpi	r24, 0x01	; 1
    aae0:	31 f5       	brne	.+76     	; 0xab2e <_Z20Schedules_Monitoringv+0x478>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2");
    aae2:	68 e4       	ldi	r22, 0x48	; 72
    aae4:	74 e1       	ldi	r23, 0x14	; 20
    aae6:	8f e6       	ldi	r24, 0x6F	; 111
    aae8:	96 e1       	ldi	r25, 0x16	; 22
    aaea:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    aaee:	8f e6       	ldi	r24, 0x6F	; 111
    aaf0:	96 e1       	ldi	r25, 0x16	; 22
    aaf2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    aaf6:	1b c0       	rjmp	.+54     	; 0xab2e <_Z20Schedules_Monitoringv+0x478>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    aaf8:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    aafc:	81 11       	cpse	r24, r1
    aafe:	4e c3       	rjmp	.+1692   	; 0xb19c <_Z20Schedules_Monitoringv+0xae6>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ab00:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    ab04:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    ab08:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    ab0c:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    ab10:	89 2b       	or	r24, r25
    ab12:	8a 2b       	or	r24, r26
    ab14:	8b 2b       	or	r24, r27
    ab16:	09 f0       	breq	.+2      	; 0xab1a <_Z20Schedules_Monitoringv+0x464>
    ab18:	41 c3       	rjmp	.+1666   	; 0xb19c <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ab1a:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
									_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
								}
							}
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
    ab1e:	81 11       	cpse	r24, r1
    ab20:	3d c3       	rjmp	.+1658   	; 0xb19c <_Z20Schedules_Monitoringv+0xae6>
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
    ab22:	80 91 13 16 	lds	r24, 0x1613	; 0x801613 <_sRuble_Parameters+0xae>
    ab26:	81 30       	cpi	r24, 0x01	; 1
    ab28:	09 f0       	breq	.+2      	; 0xab2c <_Z20Schedules_Monitoringv+0x476>
    ab2a:	38 c3       	rjmp	.+1648   	; 0xb19c <_Z20Schedules_Monitoringv+0xae6>
    ab2c:	20 c3       	rjmp	.+1600   	; 0xb16e <_Z20Schedules_Monitoringv+0xab8>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
										}
										else
										{
											_sSchedules.Trigger_Reset = _sSchedules.Trigger_Time - _kMAX_BUFFER_TIME;
    ab2e:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    ab32:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    ab36:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    ab3a:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    ab3e:	8c 52       	subi	r24, 0x2C	; 44
    ab40:	91 40       	sbci	r25, 0x01	; 1
    ab42:	a1 09       	sbc	r26, r1
    ab44:	b1 09       	sbc	r27, r1
    ab46:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <_sSchedules+0x17>
    ab4a:	90 93 08 09 	sts	0x0908, r25	; 0x800908 <_sSchedules+0x18>
    ab4e:	a0 93 09 09 	sts	0x0909, r26	; 0x800909 <_sSchedules+0x19>
    ab52:	b0 93 0a 09 	sts	0x090A, r27	; 0x80090a <_sSchedules+0x1a>
										}
									}
								}
							}	
							
							irrigation_Start_Set = _kRESET;
    ab56:	10 92 ed 08 	sts	0x08ED, r1	; 0x8008ed <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
							if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
    ab5a:	80 91 23 16 	lds	r24, 0x1623	; 0x801623 <_sRuble_Parameters+0xbe>
    ab5e:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    ab62:	89 17       	cp	r24, r25
    ab64:	59 f0       	breq	.+22     	; 0xab7c <_Z20Schedules_Monitoringv+0x4c6>
							{
								if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    ab66:	88 23       	and	r24, r24
    ab68:	49 f0       	breq	.+18     	; 0xab7c <_Z20Schedules_Monitoringv+0x4c6>
								{
									Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    ab6a:	60 e0       	ldi	r22, 0x00	; 0
    ab6c:	0e 94 4e 27 	call	0x4e9c	; 0x4e9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
									_kSERIAL_MON_CLEAR();
    ab70:	8f e6       	ldi	r24, 0x6F	; 111
    ab72:	96 e1       	ldi	r25, 0x16	; 22
    ab74:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    ab78:	10 92 23 16 	sts	0x1623, r1	; 0x801623 <_sRuble_Parameters+0xbe>
								}
							}	
													
							if(_sRuble_Parameters.Irrigating_Plot != _kRESET)
    ab7c:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    ab80:	88 23       	and	r24, r24
    ab82:	09 f4       	brne	.+2      	; 0xab86 <_Z20Schedules_Monitoringv+0x4d0>
    ab84:	43 c0       	rjmp	.+134    	; 0xac0c <_Z20Schedules_Monitoringv+0x556>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    ab86:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ab8a:	81 30       	cpi	r24, 0x01	; 1
    ab8c:	51 f4       	brne	.+20     	; 0xaba2 <_Z20Schedules_Monitoringv+0x4ec>
								{
									_kSERAIL_MON_WRITE("sc enter 6.0..........................");
    ab8e:	61 e1       	ldi	r22, 0x11	; 17
    ab90:	74 e1       	ldi	r23, 0x14	; 20
    ab92:	8f e6       	ldi	r24, 0x6F	; 111
    ab94:	96 e1       	ldi	r25, 0x16	; 22
    ab96:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    ab9a:	8f e6       	ldi	r24, 0x6F	; 111
    ab9c:	96 e1       	ldi	r25, 0x16	; 22
    ab9e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								if(_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status          !=_kSCHEDULER_ON
    aba2:	80 91 0d 10 	lds	r24, 0x100D	; 0x80100d <_sExtra_Plot+0x6e>
    aba6:	84 30       	cpi	r24, 0x04	; 4
    aba8:	89 f1       	breq	.+98     	; 0xac0c <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    abaa:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    abae:	81 30       	cpi	r24, 0x01	; 1
    abb0:	69 f1       	breq	.+90     	; 0xac0c <_Z20Schedules_Monitoringv+0x556>
								&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET
    abb2:	80 91 0b 10 	lds	r24, 0x100B	; 0x80100b <_sExtra_Plot+0x6c>
    abb6:	81 11       	cpse	r24, r1
    abb8:	29 c0       	rjmp	.+82     	; 0xac0c <_Z20Schedules_Monitoringv+0x556>
								/*&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET
								&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status   !=_kSET*/)
								{
									if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    abba:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
    abbe:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    abc2:	81 11       	cpse	r24, r1
    abc4:	13 c0       	rjmp	.+38     	; 0xabec <_Z20Schedules_Monitoringv+0x536>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    abc6:	91 30       	cpi	r25, 0x01	; 1
    abc8:	51 f4       	brne	.+20     	; 0xabde <_Z20Schedules_Monitoringv+0x528>
										{
											_kSERAIL_MON_WRITE("sc enter 6.1..........................");
    abca:	6a ee       	ldi	r22, 0xEA	; 234
    abcc:	73 e1       	ldi	r23, 0x13	; 19
    abce:	8f e6       	ldi	r24, 0x6F	; 111
    abd0:	96 e1       	ldi	r25, 0x16	; 22
    abd2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    abd6:	8f e6       	ldi	r24, 0x6F	; 111
    abd8:	96 e1       	ldi	r25, 0x16	; 22
    abda:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    abde:	88 e5       	ldi	r24, 0x58	; 88
    abe0:	92 e0       	ldi	r25, 0x02	; 2
    abe2:	90 93 f5 08 	sts	0x08F5, r25	; 0x8008f5 <_sSchedules+0x5>
    abe6:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <_sSchedules+0x4>
    abea:	0c c0       	rjmp	.+24     	; 0xac04 <_Z20Schedules_Monitoringv+0x54e>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    abec:	91 30       	cpi	r25, 0x01	; 1
    abee:	51 f4       	brne	.+20     	; 0xac04 <_Z20Schedules_Monitoringv+0x54e>
										{
											_kSERAIL_MON_WRITE("sc enter 7.1");
    abf0:	6d ed       	ldi	r22, 0xDD	; 221
    abf2:	73 e1       	ldi	r23, 0x13	; 19
    abf4:	8f e6       	ldi	r24, 0x6F	; 111
    abf6:	96 e1       	ldi	r25, 0x16	; 22
    abf8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    abfc:	8f e6       	ldi	r24, 0x6F	; 111
    abfe:	96 e1       	ldi	r25, 0x16	; 22
    ac00:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    ac04:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    ac08:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
								}
							}							
							/* check the current time with trigger reset time */
							/*********************************************************************************/
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
    ac0c:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    ac10:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    ac14:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    ac18:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    ac1c:	80 91 07 09 	lds	r24, 0x0907	; 0x800907 <_sSchedules+0x17>
    ac20:	90 91 08 09 	lds	r25, 0x0908	; 0x800908 <_sSchedules+0x18>
    ac24:	a0 91 09 09 	lds	r26, 0x0909	; 0x800909 <_sSchedules+0x19>
    ac28:	b0 91 0a 09 	lds	r27, 0x090A	; 0x80090a <_sSchedules+0x1a>
    ac2c:	48 17       	cp	r20, r24
    ac2e:	59 07       	cpc	r21, r25
    ac30:	6a 07       	cpc	r22, r26
    ac32:	7b 07       	cpc	r23, r27
    ac34:	80 f4       	brcc	.+32     	; 0xac56 <_Z20Schedules_Monitoringv+0x5a0>
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
    ac36:	0e 94 fe 47 	call	0x8ffc	; 0x8ffc <_Z30Compare_Trigger_And_Reset_Timev>
    ac3a:	c8 2f       	mov	r28, r24
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    ac3c:	81 11       	cpse	r24, r1
    ac3e:	ce c2       	rjmp	.+1436   	; 0xb1dc <_Z20Schedules_Monitoringv+0xb26>
    ac40:	80 91 0e 09 	lds	r24, 0x090E	; 0x80090e <_sSchedules+0x1e>
    ac44:	81 30       	cpi	r24, 0x01	; 1
    ac46:	09 f0       	breq	.+2      	; 0xac4a <_Z20Schedules_Monitoringv+0x594>
    ac48:	d1 c4       	rjmp	.+2466   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    ac4a:	80 91 0d 09 	lds	r24, 0x090D	; 0x80090d <_sSchedules+0x1d>
    ac4e:	81 30       	cpi	r24, 0x01	; 1
    ac50:	09 f0       	breq	.+2      	; 0xac54 <_Z20Schedules_Monitoringv+0x59e>
    ac52:	cc c4       	rjmp	.+2456   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    ac54:	c3 c2       	rjmp	.+1414   	; 0xb1dc <_Z20Schedules_Monitoringv+0xb26>
									}
								}
							}
							else
							{
								if(_sSchedules.Trigger_Time >= _sSchedules.Trigger_Reset)
    ac56:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    ac5a:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    ac5e:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    ac62:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    ac66:	80 91 07 09 	lds	r24, 0x0907	; 0x800907 <_sSchedules+0x17>
    ac6a:	90 91 08 09 	lds	r25, 0x0908	; 0x800908 <_sSchedules+0x18>
    ac6e:	a0 91 09 09 	lds	r26, 0x0909	; 0x800909 <_sSchedules+0x19>
    ac72:	b0 91 0a 09 	lds	r27, 0x090A	; 0x80090a <_sSchedules+0x1a>
    ac76:	48 17       	cp	r20, r24
    ac78:	59 07       	cpc	r21, r25
    ac7a:	6a 07       	cpc	r22, r26
    ac7c:	7b 07       	cpc	r23, r27
    ac7e:	08 f4       	brcc	.+2      	; 0xac82 <_Z20Schedules_Monitoringv+0x5cc>
    ac80:	b5 c4       	rjmp	.+2410   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
								{
									check_true_condition = Compare_Trigger_And_Reset_Time();
    ac82:	0e 94 fe 47 	call	0x8ffc	; 0x8ffc <_Z30Compare_Trigger_And_Reset_Timev>
    ac86:	c8 2f       	mov	r28, r24
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    ac88:	81 11       	cpse	r24, r1
    ac8a:	ed c2       	rjmp	.+1498   	; 0xb266 <_Z20Schedules_Monitoringv+0xbb0>
    ac8c:	80 91 0e 09 	lds	r24, 0x090E	; 0x80090e <_sSchedules+0x1e>
    ac90:	81 30       	cpi	r24, 0x01	; 1
    ac92:	29 f4       	brne	.+10     	; 0xac9e <_Z20Schedules_Monitoringv+0x5e8>
    ac94:	80 91 0d 09 	lds	r24, 0x090D	; 0x80090d <_sSchedules+0x1d>
    ac98:	81 30       	cpi	r24, 0x01	; 1
    ac9a:	09 f4       	brne	.+2      	; 0xac9e <_Z20Schedules_Monitoringv+0x5e8>
    ac9c:	e4 c2       	rjmp	.+1480   	; 0xb266 <_Z20Schedules_Monitoringv+0xbb0>
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
										}
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
    ac9e:	80 91 0e 09 	lds	r24, 0x090E	; 0x80090e <_sSchedules+0x1e>
    aca2:	81 30       	cpi	r24, 0x01	; 1
    aca4:	09 f0       	breq	.+2      	; 0xaca8 <_Z20Schedules_Monitoringv+0x5f2>
    aca6:	a2 c4       	rjmp	.+2372   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    aca8:	80 91 0d 09 	lds	r24, 0x090D	; 0x80090d <_sSchedules+0x1d>
    acac:	81 30       	cpi	r24, 0x01	; 1
    acae:	09 f0       	breq	.+2      	; 0xacb2 <_Z20Schedules_Monitoringv+0x5fc>
    acb0:	9d c4       	rjmp	.+2362   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    acb2:	36 c3       	rjmp	.+1644   	; 0xb320 <_Z20Schedules_Monitoringv+0xc6a>
									check_new_true_condition = _kRESET;
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
    acb4:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    acb8:	f0 e0       	ldi	r31, 0x00	; 0
    acba:	e1 51       	subi	r30, 0x11	; 17
    acbc:	f7 4f       	sbci	r31, 0xF7	; 247
    acbe:	15 ad       	ldd	r17, Z+61	; 0x3d
    acc0:	11 30       	cpi	r17, 0x01	; 1
    acc2:	09 f0       	breq	.+2      	; 0xacc6 <_Z20Schedules_Monitoringv+0x610>
    acc4:	6a ce       	rjmp	.-812    	; 0xa99a <_Z20Schedules_Monitoringv+0x2e4>
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    acc6:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    acca:	f0 e0       	ldi	r31, 0x00	; 0
    accc:	e5 5c       	subi	r30, 0xC5	; 197
    acce:	f6 4f       	sbci	r31, 0xF6	; 246
    acd0:	80 81       	ld	r24, Z
    acd2:	90 e0       	ldi	r25, 0x00	; 0
    acd4:	01 97       	sbiw	r24, 0x01	; 1
    acd6:	26 e0       	ldi	r18, 0x06	; 6
    acd8:	28 9f       	mul	r18, r24
    acda:	f0 01       	movw	r30, r0
    acdc:	29 9f       	mul	r18, r25
    acde:	f0 0d       	add	r31, r0
    ace0:	11 24       	eor	r1, r1
    ace2:	e3 50       	subi	r30, 0x03	; 3
    ace4:	f3 4f       	sbci	r31, 0xF3	; 243
    ace6:	80 81       	ld	r24, Z
    ace8:	88 23       	and	r24, r24
    acea:	09 f4       	brne	.+2      	; 0xacee <_Z20Schedules_Monitoringv+0x638>
    acec:	56 ce       	rjmp	.-852    	; 0xa99a <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
    acee:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    acf2:	f0 e0       	ldi	r31, 0x00	; 0
    acf4:	e5 5c       	subi	r30, 0xC5	; 197
    acf6:	f6 4f       	sbci	r31, 0xF6	; 246
    acf8:	80 81       	ld	r24, Z
    acfa:	90 e0       	ldi	r25, 0x00	; 0
    acfc:	01 97       	sbiw	r24, 0x01	; 1
    acfe:	28 9f       	mul	r18, r24
    ad00:	f0 01       	movw	r30, r0
    ad02:	29 9f       	mul	r18, r25
    ad04:	f0 0d       	add	r31, r0
    ad06:	11 24       	eor	r1, r1
    ad08:	e3 50       	subi	r30, 0x03	; 3
    ad0a:	f3 4f       	sbci	r31, 0xF3	; 243
								}
							}
							
							if((check_new_true_condition == _kSET)
							&& _sSchedules.Schedule_Status[_sSchedules.Which_Sheduler_Is_Running-1] == _kSET
							&& (_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number !=0 && 
    ad0c:	80 81       	ld	r24, Z
    ad0e:	8f 30       	cpi	r24, 0x0F	; 15
    ad10:	08 f0       	brcs	.+2      	; 0xad14 <_Z20Schedules_Monitoringv+0x65e>
    ad12:	43 ce       	rjmp	.-890    	; 0xa99a <_Z20Schedules_Monitoringv+0x2e4>
							_sLira_Node_Param[_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1]-1].Lira_Sensor_Number <= _kMAX_LIRA_SENSOR_NODE ))
							{
								Check_for_no_repeat = Do_Not_Repeat_Schedule();	
    ad14:	0e 94 d0 45 	call	0x8ba0	; 0x8ba0 <_Z22Do_Not_Repeat_Schedulev>
    ad18:	d8 2f       	mov	r29, r24
								//_kSERAIL_MON_WRITE("sc enter 0.3");   //1/05
								/* save which scheduler is running in eeprom */
								if(_sSchedules.Pump_On_In_Scheduler == _kSET)   /* turn on scheduler */
    ad1a:	80 91 69 09 	lds	r24, 0x0969	; 0x800969 <_sSchedules+0x79>
    ad1e:	81 30       	cpi	r24, 0x01	; 1
    ad20:	09 f0       	breq	.+2      	; 0xad24 <_Z20Schedules_Monitoringv+0x66e>
    ad22:	41 c1       	rjmp	.+642    	; 0xafa6 <_Z20Schedules_Monitoringv+0x8f0>
								{
									/* save running time in eeprom  when no tank is running */
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ad24:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ad28:	81 30       	cpi	r24, 0x01	; 1
    ad2a:	89 f5       	brne	.+98     	; 0xad8e <_Z20Schedules_Monitoringv+0x6d8>
									{
										Serial.println("Running time in sec");
    ad2c:	6f ee       	ldi	r22, 0xEF	; 239
    ad2e:	72 e0       	ldi	r23, 0x02	; 2
    ad30:	8f e6       	ldi	r24, 0x6F	; 111
    ad32:	96 e1       	ldi	r25, 0x16	; 22
    ad34:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Keep_Scheduler_Run_Timer);
    ad38:	60 91 f8 08 	lds	r22, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    ad3c:	70 91 f9 08 	lds	r23, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    ad40:	4a e0       	ldi	r20, 0x0A	; 10
    ad42:	50 e0       	ldi	r21, 0x00	; 0
    ad44:	8f e6       	ldi	r24, 0x6F	; 111
    ad46:	96 e1       	ldi	r25, 0x16	; 22
    ad48:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
										Serial.println();
    ad4c:	8f e6       	ldi	r24, 0x6F	; 111
    ad4e:	96 e1       	ldi	r25, 0x16	; 22
    ad50:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    ad54:	8f e6       	ldi	r24, 0x6F	; 111
    ad56:	96 e1       	ldi	r25, 0x16	; 22
    ad58:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										Serial.println("Running schedule");
    ad5c:	63 e0       	ldi	r22, 0x03	; 3
    ad5e:	73 e0       	ldi	r23, 0x03	; 3
    ad60:	8f e6       	ldi	r24, 0x6F	; 111
    ad62:	96 e1       	ldi	r25, 0x16	; 22
    ad64:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
										_kSERIAL_MON_PRINT_NUM(_sSchedules.Which_Sheduler_Is_Running-1);
    ad68:	60 91 f3 08 	lds	r22, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    ad6c:	70 e0       	ldi	r23, 0x00	; 0
    ad6e:	61 50       	subi	r22, 0x01	; 1
    ad70:	71 09       	sbc	r23, r1
    ad72:	4a e0       	ldi	r20, 0x0A	; 10
    ad74:	50 e0       	ldi	r21, 0x00	; 0
    ad76:	8f e6       	ldi	r24, 0x6F	; 111
    ad78:	96 e1       	ldi	r25, 0x16	; 22
    ad7a:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
										Serial.println(); //1/05
    ad7e:	8f e6       	ldi	r24, 0x6F	; 111
    ad80:	96 e1       	ldi	r25, 0x16	; 22
    ad82:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
										_kSERIAL_MON_CLEAR();
    ad86:	8f e6       	ldi	r24, 0x6F	; 111
    ad88:	96 e1       	ldi	r25, 0x16	; 22
    ad8a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									
									Fertilizer_Tank_Monitoring();
    ad8e:	27 db       	rcall	.-2482   	; 0xa3de <_Z26Fertilizer_Tank_Monitoringv>
									
									Blower_Monitoring(_kON);  // 11-4
    ad90:	81 e0       	ldi	r24, 0x01	; 1
    ad92:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
									
									if(_sSchedules.Save_Schedule_Data_In_Eeprom > 90)
    ad96:	80 91 a8 0b 	lds	r24, 0x0BA8	; 0x800ba8 <_sSchedules+0x2b8>
    ad9a:	8b 35       	cpi	r24, 0x5B	; 91
    ad9c:	98 f4       	brcc	.+38     	; 0xadc4 <_Z20Schedules_Monitoringv+0x70e>
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
    ad9e:	80 91 a8 0b 	lds	r24, 0x0BA8	; 0x800ba8 <_sSchedules+0x2b8>
    ada2:	84 32       	cpi	r24, 0x24	; 36
    ada4:	98 f0       	brcs	.+38     	; 0xadcc <_Z20Schedules_Monitoringv+0x716>
    ada6:	80 e0       	ldi	r24, 0x00	; 0
    ada8:	90 e0       	ldi	r25, 0x00	; 0
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
											{
												if(_sSchedules.Running_Tank[tank_number] == _kON)
    adaa:	fc 01       	movw	r30, r24
    adac:	e0 5b       	subi	r30, 0xB0	; 176
    adae:	f4 4f       	sbci	r31, 0xF4	; 244
    adb0:	20 81       	ld	r18, Z
    adb2:	21 30       	cpi	r18, 0x01	; 1
    adb4:	09 f4       	brne	.+2      	; 0xadb8 <_Z20Schedules_Monitoringv+0x702>
												{
													number_of_running_tanks++;
    adb6:	cf 5f       	subi	r28, 0xFF	; 255
    adb8:	01 96       	adiw	r24, 0x01	; 1
									{
										/* when any tank is running */
										if(_sSchedules.Save_Schedule_Data_In_Eeprom > 35)
										{
											unsigned char tank_number, number_of_running_tanks;
											for(tank_number=0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
    adba:	83 30       	cpi	r24, 0x03	; 3
    adbc:	91 05       	cpc	r25, r1
    adbe:	a9 f7       	brne	.-22     	; 0xadaa <_Z20Schedules_Monitoringv+0x6f4>
												if(_sSchedules.Running_Tank[tank_number] == _kON)
												{
													number_of_running_tanks++;
												}
											}
											if(number_of_running_tanks > 0)
    adc0:	cc 23       	and	r28, r28
    adc2:	21 f0       	breq	.+8      	; 0xadcc <_Z20Schedules_Monitoringv+0x716>
											{
												_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    adc4:	10 92 a8 0b 	sts	0x0BA8, r1	; 0x800ba8 <_sSchedules+0x2b8>
												_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    adc8:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
											}
										}
									}
									
									/* while running schedule check the time and compare with schedule time with that plot  */
									if(_sSchedules.Keep_Scheduler_Run_Timer >  _sSchedules.Running_Hr_Of_Each_Plot[_sSchedules.Which_Sheduler_Is_Running-1]
    adcc:	20 91 f8 08 	lds	r18, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    add0:	30 91 f9 08 	lds	r19, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    add4:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    add8:	f0 e0       	ldi	r31, 0x00	; 0
    adda:	ee 0f       	add	r30, r30
    addc:	ff 1f       	adc	r31, r31
    adde:	e2 51       	subi	r30, 0x12	; 18
    ade0:	f7 4f       	sbci	r31, 0xF7	; 247
    ade2:	87 8d       	ldd	r24, Z+31	; 0x1f
    ade4:	90 a1       	ldd	r25, Z+32	; 0x20
									||  Check_for_no_repeat != 0)
    ade6:	82 17       	cp	r24, r18
    ade8:	93 07       	cpc	r25, r19
    adea:	18 f0       	brcs	.+6      	; 0xadf2 <_Z20Schedules_Monitoringv+0x73c>
    adec:	dd 23       	and	r29, r29
    adee:	09 f4       	brne	.+2      	; 0xadf2 <_Z20Schedules_Monitoringv+0x73c>
    adf0:	5f c0       	rjmp	.+190    	; 0xaeb0 <_Z20Schedules_Monitoringv+0x7fa>
									{
										_sRuble_Parameters.Last_Irrigating_Schedule = _sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    adf2:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    adf6:	f0 e0       	ldi	r31, 0x00	; 0
    adf8:	e5 5c       	subi	r30, 0xC5	; 197
    adfa:	f6 4f       	sbci	r31, 0xF6	; 246
    adfc:	80 81       	ld	r24, Z
    adfe:	80 93 23 16 	sts	0x1623, r24	; 0x801623 <_sRuble_Parameters+0xbe>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    ae02:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
										Serial.println("time over");
    ae06:	64 e1       	ldi	r22, 0x14	; 20
    ae08:	73 e0       	ldi	r23, 0x03	; 3
    ae0a:	8f e6       	ldi	r24, 0x6F	; 111
    ae0c:	96 e1       	ldi	r25, 0x16	; 22
    ae0e:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    ae12:	83 e0       	ldi	r24, 0x03	; 3
    ae14:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    ae18:	0e 94 c8 3c 	call	0x7990	; 0x7990 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    ae1c:	83 e0       	ldi	r24, 0x03	; 3
    ae1e:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Keep_Scheduler_Run_Timer = _kRESET;
    ae22:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
    ae26:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
    ae2a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
										if(Check_for_no_repeat != 1)
    ae2e:	d1 30       	cpi	r29, 0x01	; 1
    ae30:	09 f4       	brne	.+2      	; 0xae34 <_Z20Schedules_Monitoringv+0x77e>
    ae32:	27 c1       	rjmp	.+590    	; 0xb082 <_Z20Schedules_Monitoringv+0x9cc>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    ae34:	81 30       	cpi	r24, 0x01	; 1
    ae36:	51 f4       	brne	.+20     	; 0xae4c <_Z20Schedules_Monitoringv+0x796>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.//// :");
    ae38:	69 e0       	ldi	r22, 0x09	; 9
    ae3a:	76 e1       	ldi	r23, 0x16	; 22
    ae3c:	8f e6       	ldi	r24, 0x6F	; 111
    ae3e:	96 e1       	ldi	r25, 0x16	; 22
    ae40:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    ae44:	8f e6       	ldi	r24, 0x6F	; 111
    ae46:	96 e1       	ldi	r25, 0x16	; 22
    ae48:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
    ae4c:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    ae50:	f0 e0       	ldi	r31, 0x00	; 0
    ae52:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    ae56:	e6 5b       	subi	r30, 0xB6	; 182
    ae58:	f6 4f       	sbci	r31, 0xF6	; 246
    ae5a:	80 83       	st	Z, r24
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
    ae5c:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    ae60:	f0 e0       	ldi	r31, 0x00	; 0
    ae62:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    ae66:	e7 5a       	subi	r30, 0xA7	; 167
    ae68:	f6 4f       	sbci	r31, 0xF6	; 246
    ae6a:	80 83       	st	Z, r24
    ae6c:	20 e0       	ldi	r18, 0x00	; 0
    ae6e:	30 e0       	ldi	r19, 0x00	; 0
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
											{
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
    ae70:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    ae74:	90 e0       	ldi	r25, 0x00	; 0
    ae76:	01 97       	sbiw	r24, 0x01	; 1
    ae78:	fc 01       	movw	r30, r24
    ae7a:	ee 0f       	add	r30, r30
    ae7c:	ff 1f       	adc	r31, r31
    ae7e:	e8 0f       	add	r30, r24
    ae80:	f9 1f       	adc	r31, r25
    ae82:	e2 0f       	add	r30, r18
    ae84:	f3 1f       	adc	r31, r19
    ae86:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    ae8a:	90 e0       	ldi	r25, 0x00	; 0
    ae8c:	ee 0f       	add	r30, r30
    ae8e:	ff 1f       	adc	r31, r31
    ae90:	e3 51       	subi	r30, 0x13	; 19
    ae92:	f5 4f       	sbci	r31, 0xF5	; 245
    ae94:	91 83       	std	Z+1, r25	; 0x01
    ae96:	80 83       	st	Z, r24
    ae98:	2f 5f       	subi	r18, 0xFF	; 255
    ae9a:	3f 4f       	sbci	r19, 0xFF	; 255
											}
											
											_sSchedules.Scheduler_Already_Run[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Date;
											_sSchedules.Scheduler_Already_Run_Month[_sSchedules.Which_Sheduler_Is_Running-1] = _sSchedules.Started_Month;
											
											for(unsigned char tank_number=0;tank_number<_kMAX_FERTILIZER_TANK;tank_number++)
    ae9c:	23 30       	cpi	r18, 0x03	; 3
    ae9e:	31 05       	cpc	r19, r1
    aea0:	39 f7       	brne	.-50     	; 0xae70 <_Z20Schedules_Monitoringv+0x7ba>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
    aea2:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    aea6:	81 30       	cpi	r24, 0x01	; 1
    aea8:	09 f4       	brne	.+2      	; 0xaeac <_Z20Schedules_Monitoringv+0x7f6>
    aeaa:	2c c1       	rjmp	.+600    	; 0xb104 <_Z20Schedules_Monitoringv+0xa4e>
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
											} // 22/8/2023
										}
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    aeac:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
									}
									
									if(_sPump_Parameter.Irrigation_Status /*||
    aeb0:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    aeb4:	88 23       	and	r24, r24
    aeb6:	09 f4       	brne	.+2      	; 0xaeba <_Z20Schedules_Monitoringv+0x804>
    aeb8:	40 c0       	rjmp	.+128    	; 0xaf3a <_Z20Schedules_Monitoringv+0x884>
									(_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status != _kRESET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation != _kRESET)*/)
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    aeba:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
    aebe:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    aec2:	81 11       	cpse	r24, r1
    aec4:	05 c0       	rjmp	.+10     	; 0xaed0 <_Z20Schedules_Monitoringv+0x81a>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    aec6:	91 30       	cpi	r25, 0x01	; 1
    aec8:	79 f4       	brne	.+30     	; 0xaee8 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 4..................");
    aeca:	64 e4       	ldi	r22, 0x44	; 68
    aecc:	75 e1       	ldi	r23, 0x15	; 21
    aece:	04 c0       	rjmp	.+8      	; 0xaed8 <_Z20Schedules_Monitoringv+0x822>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    aed0:	91 30       	cpi	r25, 0x01	; 1
    aed2:	51 f4       	brne	.+20     	; 0xaee8 <_Z20Schedules_Monitoringv+0x832>
											{
												_kSERAIL_MON_WRITE("sc enter 5...................");
    aed4:	66 e2       	ldi	r22, 0x26	; 38
    aed6:	75 e1       	ldi	r23, 0x15	; 21
    aed8:	8f e6       	ldi	r24, 0x6F	; 111
    aeda:	96 e1       	ldi	r25, 0x16	; 22
    aedc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    aee0:	8f e6       	ldi	r24, 0x6F	; 111
    aee2:	96 e1       	ldi	r25, 0x16	; 22
    aee4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											if(_sPump_Parameter.Irrigation_Status)
    aee8:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    aeec:	88 23       	and	r24, r24
    aeee:	89 f0       	breq	.+34     	; 0xaf12 <_Z20Schedules_Monitoringv+0x85c>
											{
												if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    aef0:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    aef4:	81 30       	cpi	r24, 0x01	; 1
    aef6:	39 f4       	brne	.+14     	; 0xaf06 <_Z20Schedules_Monitoringv+0x850>
    aef8:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    aefc:	81 30       	cpi	r24, 0x01	; 1
    aefe:	19 f4       	brne	.+6      	; 0xaf06 <_Z20Schedules_Monitoringv+0x850>
												{
													_sSchedules.Scheduler_Retry_Timer = 4*60;
    af00:	80 ef       	ldi	r24, 0xF0	; 240
    af02:	90 e0       	ldi	r25, 0x00	; 0
    af04:	02 c0       	rjmp	.+4      	; 0xaf0a <_Z20Schedules_Monitoringv+0x854>
												}
												else
												{
													_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    af06:	88 e5       	ldi	r24, 0x58	; 88
    af08:	92 e0       	ldi	r25, 0x02	; 2
    af0a:	90 93 f5 08 	sts	0x08F5, r25	; 0x8008f5 <_sSchedules+0x5>
    af0e:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <_sSchedules+0x4>
											}
											else
											{
												//flush_running_status = _kSET;
											}
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    af12:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    af16:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    af1a:	83 e0       	ldi	r24, 0x03	; 3
    af1c:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    af20:	0e 94 c8 3c 	call	0x7990	; 0x7990 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);  // 11-4
    af24:	83 e0       	ldi	r24, 0x03	; 3
    af26:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    af2a:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    af2e:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
										
										_sSchedules.Schedule_Are_Started = _kRESET;
    af32:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    af36:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <_sSchedules+0x1e>
									}
									
									if(_sRuble_Parameters.Switch_To_Battery == _eELECTRICITY_IS_NOT_THERE)
    af3a:	80 91 54 16 	lds	r24, 0x1654	; 0x801654 <_sRuble_Parameters+0xef>
    af3e:	81 11       	cpse	r24, r1
    af40:	55 c3       	rjmp	.+1706   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
									{
										/* stops operation */
										if(!Stop_Irrigation())       /* stops the irrigation if any faults occur */
    af42:	0e 94 b7 bc 	call	0x1796e	; 0x1796e <_Z15Stop_Irrigationv>
    af46:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    af4a:	81 11       	cpse	r24, r1
    af4c:	05 c0       	rjmp	.+10     	; 0xaf58 <_Z20Schedules_Monitoringv+0x8a2>
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    af4e:	91 30       	cpi	r25, 0x01	; 1
    af50:	79 f4       	brne	.+30     	; 0xaf70 <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 6...................");
    af52:	68 e0       	ldi	r22, 0x08	; 8
    af54:	75 e1       	ldi	r23, 0x15	; 21
    af56:	04 c0       	rjmp	.+8      	; 0xaf60 <_Z20Schedules_Monitoringv+0x8aa>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    af58:	91 30       	cpi	r25, 0x01	; 1
    af5a:	51 f4       	brne	.+20     	; 0xaf70 <_Z20Schedules_Monitoringv+0x8ba>
											{
												_kSERAIL_MON_WRITE("sc enter 7..............................");
    af5c:	6f ed       	ldi	r22, 0xDF	; 223
    af5e:	74 e1       	ldi	r23, 0x14	; 20
    af60:	8f e6       	ldi	r24, 0x6F	; 111
    af62:	96 e1       	ldi	r25, 0x16	; 22
    af64:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    af68:	8f e6       	ldi	r24, 0x6F	; 111
    af6a:	96 e1       	ldi	r25, 0x16	; 22
    af6c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    af70:	88 e5       	ldi	r24, 0x58	; 88
    af72:	92 e0       	ldi	r25, 0x02	; 2
    af74:	90 93 f5 08 	sts	0x08F5, r25	; 0x8008f5 <_sSchedules+0x5>
    af78:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <_sSchedules+0x4>
											_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    af7c:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
											_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
    af80:	0e 94 fb 31 	call	0x63f6	; 0x63f6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.0.constprop.4>
										}
										Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    af84:	83 e0       	ldi	r24, 0x03	; 3
    af86:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
										Turn_Off_All_Tank_For_Safety();
    af8a:	0e 94 c8 3c 	call	0x7990	; 0x7990 <_Z28Turn_Off_All_Tank_For_Safetyv>
										Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    af8e:	83 e0       	ldi	r24, 0x03	; 3
    af90:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
										Turn_Off_Blower_For_Safety();
										
										_sSchedules.Pump_On_In_Scheduler = _kRESET;
    af94:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    af98:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
										_sSchedules.Schedule_Are_Started = _kRESET;
    af9c:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
										_sSchedules.all_schedule_done_flag = _kRESET;
    afa0:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <_sSchedules+0x1e>
    afa4:	23 c3       	rjmp	.+1606   	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
									}
								}
								else
								{
									_sRuble_Parameters.Irrigating_Plot =_sSchedules.Schedule_Num_List[_sSchedules.Which_Sheduler_Is_Running-1];
    afa6:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    afaa:	f0 e0       	ldi	r31, 0x00	; 0
    afac:	e5 5c       	subi	r30, 0xC5	; 197
    afae:	f6 4f       	sbci	r31, 0xF6	; 246
    afb0:	80 81       	ld	r24, Z
    afb2:	80 93 d5 15 	sts	0x15D5, r24	; 0x8015d5 <_sRuble_Parameters+0x70>
									//_sRuble_Parameters.Pump_Selected_For_Irrigation = _sSchedules.Pump_Selected_For_Schedule;
									_sRuble_Parameters.Pump_Selected_For_Irrigation = _sRuble_Parameters.Pump_Selected_For_Irrigation;
									if(!Start_Irrigation())
    afb6:	0e 94 73 c0 	call	0x180e6	; 0x180e6 <_Z16Start_Irrigationv>
    afba:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    afbe:	81 11       	cpse	r24, r1
    afc0:	22 c0       	rjmp	.+68     	; 0xb006 <_Z20Schedules_Monitoringv+0x950>
									{
										/* what should happen if irrigation doesn't start */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    afc2:	91 30       	cpi	r25, 0x01	; 1
    afc4:	51 f4       	brne	.+20     	; 0xafda <_Z20Schedules_Monitoringv+0x924>
										{
											_kSERAIL_MON_WRITE("sc enter 8...........................");
    afc6:	69 eb       	ldi	r22, 0xB9	; 185
    afc8:	74 e1       	ldi	r23, 0x14	; 20
    afca:	8f e6       	ldi	r24, 0x6F	; 111
    afcc:	96 e1       	ldi	r25, 0x16	; 22
    afce:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    afd2:	8f e6       	ldi	r24, 0x6F	; 111
    afd4:	96 e1       	ldi	r25, 0x16	; 22
    afd6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    afda:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
										_sSchedules.Pump_On_In_Scheduler = _kRESET;  // 15/09/2023
    afde:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
										
										if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER && _sRuble_Parameters.Line_Fault_Flag == _kSET)
    afe2:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    afe6:	81 30       	cpi	r24, 0x01	; 1
    afe8:	39 f4       	brne	.+14     	; 0xaff8 <_Z20Schedules_Monitoringv+0x942>
    afea:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    afee:	81 30       	cpi	r24, 0x01	; 1
    aff0:	19 f4       	brne	.+6      	; 0xaff8 <_Z20Schedules_Monitoringv+0x942>
										{
											_sSchedules.Scheduler_Retry_Timer = 4*60;
    aff2:	80 ef       	ldi	r24, 0xF0	; 240
    aff4:	90 e0       	ldi	r25, 0x00	; 0
    aff6:	02 c0       	rjmp	.+4      	; 0xaffc <_Z20Schedules_Monitoringv+0x946>
										}
										else
										{
											_sSchedules.Scheduler_Retry_Timer = _kSCHEDULE_RETRY_TIMER;
    aff8:	88 e5       	ldi	r24, 0x58	; 88
    affa:	92 e0       	ldi	r25, 0x02	; 2
    affc:	90 93 f5 08 	sts	0x08F5, r25	; 0x8008f5 <_sSchedules+0x5>
    b000:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <_sSchedules+0x4>
    b004:	fa cc       	rjmp	.-1548   	; 0xa9fa <_Z20Schedules_Monitoringv+0x344>
										
										_kEEPROM_WRITE(_kEEPROM_SCHEDULE_DATA, _sSchedules);
									}
									else
									{
										irrigation_Start_Set = _kSET;
    b006:	10 93 ed 08 	sts	0x08ED, r17	; 0x8008ed <_ZZ20Schedules_MonitoringvE20irrigation_Start_Set>
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b00a:	91 30       	cpi	r25, 0x01	; 1
    b00c:	51 f4       	brne	.+20     	; 0xb022 <_Z20Schedules_Monitoringv+0x96c>
										{
											_kSERAIL_MON_WRITE("sc enter 9");
    b00e:	6e ea       	ldi	r22, 0xAE	; 174
    b010:	74 e1       	ldi	r23, 0x14	; 20
    b012:	8f e6       	ldi	r24, 0x6F	; 111
    b014:	96 e1       	ldi	r25, 0x16	; 22
    b016:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b01a:	8f e6       	ldi	r24, 0x6F	; 111
    b01c:	96 e1       	ldi	r25, 0x16	; 22
    b01e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										_sSchedules.Pump_On_In_Scheduler = _kSET;   /* pump on by the scheduler */
    b022:	81 e0       	ldi	r24, 0x01	; 1
    b024:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <_sSchedules+0x79>
										_sSchedules.Shedule_Run_Status_Is_Triggered = _kSET;
    b028:	80 93 f6 08 	sts	0x08F6, r24	; 0x8008f6 <_sSchedules+0x6>
										_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b02c:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    b030:	80 93 aa 0b 	sts	0x0BAA, r24	; 0x800baa <_sSchedules+0x2ba>
										_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b034:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    b038:	80 93 ab 0b 	sts	0x0BAB, r24	; 0x800bab <_sSchedules+0x2bb>
										_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;						
    b03c:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    b040:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    b044:	90 93 ad 0b 	sts	0x0BAD, r25	; 0x800bad <_sSchedules+0x2bd>
    b048:	80 93 ac 0b 	sts	0x0BAC, r24	; 0x800bac <_sSchedules+0x2bc>
										
										for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
										{
											_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b04c:	80 91 54 0b 	lds	r24, 0x0B54	; 0x800b54 <_sSchedules+0x264>
    b050:	90 91 55 0b 	lds	r25, 0x0B55	; 0x800b55 <_sSchedules+0x265>
    b054:	90 93 af 0b 	sts	0x0BAF, r25	; 0x800baf <_sSchedules+0x2bf>
    b058:	80 93 ae 0b 	sts	0x0BAE, r24	; 0x800bae <_sSchedules+0x2be>
    b05c:	80 91 56 0b 	lds	r24, 0x0B56	; 0x800b56 <_sSchedules+0x266>
    b060:	90 91 57 0b 	lds	r25, 0x0B57	; 0x800b57 <_sSchedules+0x267>
    b064:	90 93 b1 0b 	sts	0x0BB1, r25	; 0x800bb1 <_sSchedules+0x2c1>
    b068:	80 93 b0 0b 	sts	0x0BB0, r24	; 0x800bb0 <_sSchedules+0x2c0>
    b06c:	80 91 58 0b 	lds	r24, 0x0B58	; 0x800b58 <_sSchedules+0x268>
    b070:	90 91 59 0b 	lds	r25, 0x0B59	; 0x800b59 <_sSchedules+0x269>
    b074:	90 93 b3 0b 	sts	0x0BB3, r25	; 0x800bb3 <_sSchedules+0x2c3>
    b078:	80 93 b2 0b 	sts	0x0BB2, r24	; 0x800bb2 <_sSchedules+0x2c2>
										}
																					
										Set_Trigger_Time();								
    b07c:	0e 94 44 49 	call	0x9288	; 0x9288 <_Z16Set_Trigger_Timev>
    b080:	bc cc       	rjmp	.-1672   	; 0xa9fa <_Z20Schedules_Monitoringv+0x344>
												_sSchedules.Tank_Running_Date[((_sSchedules.Which_Sheduler_Is_Running-1) * _kMAX_FERTILIZER_TANK)+tank_number] = _sSchedules.Started_Date;
											}
										}
										else
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b082:	81 30       	cpi	r24, 0x01	; 1
    b084:	51 f4       	brne	.+20     	; 0xb09a <_Z20Schedules_Monitoringv+0x9e4>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0//// :");
    b086:	65 ed       	ldi	r22, 0xD5	; 213
    b088:	75 e1       	ldi	r23, 0x15	; 21
    b08a:	8f e6       	ldi	r24, 0x6F	; 111
    b08c:	96 e1       	ldi	r25, 0x16	; 22
    b08e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b092:	8f e6       	ldi	r24, 0x6F	; 111
    b094:	96 e1       	ldi	r25, 0x16	; 22
    b096:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											if(Check_for_no_repeat == 1)
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b09a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b09e:	81 30       	cpi	r24, 0x01	; 1
    b0a0:	51 f4       	brne	.+20     	; 0xb0b6 <_Z20Schedules_Monitoringv+0xa00>
												{
													_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0.0.0//// :");
    b0a2:	6f e9       	ldi	r22, 0x9F	; 159
    b0a4:	75 e1       	ldi	r23, 0x15	; 21
    b0a6:	8f e6       	ldi	r24, 0x6F	; 111
    b0a8:	96 e1       	ldi	r25, 0x16	; 22
    b0aa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b0ae:	8f e6       	ldi	r24, 0x6F	; 111
    b0b0:	96 e1       	ldi	r25, 0x16	; 22
    b0b2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												}
												_sSchedules.Which_Sheduler_Is_Running = _kRESET;  /* reset the running schedule */
    b0b6:	10 92 f3 08 	sts	0x08F3, r1	; 0x8008f3 <_sSchedules+0x3>
												_sSchedules.All_Schedule_Run_Flag = _kSET;       /* all schedule are completed so set this flag */
    b0ba:	81 e0       	ldi	r24, 0x01	; 1
    b0bc:	80 93 f7 08 	sts	0x08F7, r24	; 0x8008f7 <_sSchedules+0x7>
												_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;  /* reset the trigger flag which earlier set by trigger time */
    b0c0:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
												
												if(_sSchedules.Schedule_Are_Started == _kSET)
    b0c4:	80 91 fe 08 	lds	r24, 0x08FE	; 0x8008fe <_sSchedules+0xe>
    b0c8:	81 30       	cpi	r24, 0x01	; 1
    b0ca:	81 f4       	brne	.+32     	; 0xb0ec <_Z20Schedules_Monitoringv+0xa36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b0cc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b0d0:	81 30       	cpi	r24, 0x01	; 1
    b0d2:	51 f4       	brne	.+20     	; 0xb0e8 <_Z20Schedules_Monitoringv+0xa32>
													{
														_kSERAIL_MON_WRITE("sc enter 11");
    b0d4:	63 e9       	ldi	r22, 0x93	; 147
    b0d6:	75 e1       	ldi	r23, 0x15	; 21
    b0d8:	8f e6       	ldi	r24, 0x6F	; 111
    b0da:	96 e1       	ldi	r25, 0x16	; 22
    b0dc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b0e0:	8f e6       	ldi	r24, 0x6F	; 111
    b0e2:	96 e1       	ldi	r25, 0x16	; 22
    b0e4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
													}
													_sSchedules.Schedule_Are_Started = _kRESET;
    b0e8:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <_sSchedules+0xe>
													/* save in eeprom */
												}
												_sSchedules.all_schedule_done_flag = _eSET;
    b0ec:	82 e0       	ldi	r24, 0x02	; 2
    b0ee:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <_sSchedules+0x1e>
												_sSchedules.Irrigating_Date = _sSchedules.First_Schedule_Irrigated_Date;
    b0f2:	80 91 c0 0b 	lds	r24, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    b0f6:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
												_sSchedules.Irrigating_Month = _sSchedules.First_Schedule_Irrigated_Month;
    b0fa:	80 91 c1 0b 	lds	r24, 0x0BC1	; 0x800bc1 <_sSchedules+0x2d1>
    b0fe:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
    b102:	cf ce       	rjmp	.-610    	; 0xaea2 <_Z20Schedules_Monitoringv+0x7ec>
											}
										}
										
										if(_sSchedules.Which_Sheduler_Is_Running == 1)
										{
											_sSchedules.First_Schedule_Irrigated_Date = _sSchedules.Started_Date;
    b104:	80 91 fc 08 	lds	r24, 0x08FC	; 0x8008fc <_sSchedules+0xc>
    b108:	80 93 c0 0b 	sts	0x0BC0, r24	; 0x800bc0 <_sSchedules+0x2d0>
											_sSchedules.First_Schedule_Irrigated_Month = _sSchedules.Started_Month;
    b10c:	80 91 fd 08 	lds	r24, 0x08FD	; 0x8008fd <_sSchedules+0xd>
    b110:	80 93 c1 0b 	sts	0x0BC1, r24	; 0x800bc1 <_sSchedules+0x2d1>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b114:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b118:	81 30       	cpi	r24, 0x01	; 1
    b11a:	91 f4       	brne	.+36     	; 0xb140 <_Z20Schedules_Monitoringv+0xa8a>
											{
												_kSERAIL_MON_WRITE("_sSchedules.First_Schedule_Irrigated_Date 0//// :");
    b11c:	61 e6       	ldi	r22, 0x61	; 97
    b11e:	75 e1       	ldi	r23, 0x15	; 21
    b120:	8f e6       	ldi	r24, 0x6F	; 111
    b122:	96 e1       	ldi	r25, 0x16	; 22
    b124:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
    b128:	60 91 c0 0b 	lds	r22, 0x0BC0	; 0x800bc0 <_sSchedules+0x2d0>
    b12c:	4a e0       	ldi	r20, 0x0A	; 10
    b12e:	50 e0       	ldi	r21, 0x00	; 0
    b130:	8f e6       	ldi	r24, 0x6F	; 111
    b132:	96 e1       	ldi	r25, 0x16	; 22
    b134:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
												_kSERIAL_MON_CLEAR();
    b138:	8f e6       	ldi	r24, 0x6F	; 111
    b13a:	96 e1       	ldi	r25, 0x16	; 22
    b13c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											Return_Calculated_Previous_Day_Date(1);	
    b140:	81 e0       	ldi	r24, 0x01	; 1
    b142:	0e 94 b6 32 	call	0x656c	; 0x656c <_Z35Return_Calculated_Previous_Day_Dateh>
    b146:	81 e0       	ldi	r24, 0x01	; 1
    b148:	90 e0       	ldi	r25, 0x00	; 0
											
											for(unsigned char index_num = 1; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
											{
												_sSchedules.Scheduler_Already_Run[index_num] =  _sSchedules.Temp_date;
    b14a:	40 91 be 0b 	lds	r20, 0x0BBE	; 0x800bbe <_sSchedules+0x2ce>
    b14e:	9c 01       	movw	r18, r24
    b150:	20 51       	subi	r18, 0x10	; 16
    b152:	37 4f       	sbci	r19, 0xF7	; 247
    b154:	f9 01       	movw	r30, r18
    b156:	e5 5a       	subi	r30, 0xA5	; 165
    b158:	ff 4f       	sbci	r31, 0xFF	; 255
    b15a:	40 83       	st	Z, r20
												_sSchedules.Scheduler_Already_Run_Month[index_num] = _sSchedules.Temp_Month;
    b15c:	40 91 bf 0b 	lds	r20, 0x0BBF	; 0x800bbf <_sSchedules+0x2cf>
    b160:	3f 96       	adiw	r30, 0x0f	; 15
    b162:	40 83       	st	Z, r20
    b164:	01 96       	adiw	r24, 0x01	; 1
												_kSERIAL_MON_PRINT_NUM(_sSchedules.First_Schedule_Irrigated_Date);
												_kSERIAL_MON_CLEAR();
											}
											Return_Calculated_Previous_Day_Date(1);	
											
											for(unsigned char index_num = 1; index_num<_kMAX_LIRA_SENSOR_NODE; index_num++)
    b166:	8e 30       	cpi	r24, 0x0E	; 14
    b168:	91 05       	cpc	r25, r1
    b16a:	79 f7       	brne	.-34     	; 0xb14a <_Z20Schedules_Monitoringv+0xa94>
    b16c:	9f ce       	rjmp	.-706    	; 0xaeac <_Z20Schedules_Monitoringv+0x7f6>
							else
							{
								if((_sSchedules.Based_On_Trigger_Time == _eBASED_ON_ELECTRICITY) && (_sSchedules.Trigger_Time == 0) &&
								(_sSchedules.Which_Sheduler_Is_Running == 0) && (_sRuble_Parameters.Electricity_Status == _kON) )
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b16e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b172:	81 30       	cpi	r24, 0x01	; 1
    b174:	51 f4       	brne	.+20     	; 0xb18a <_Z20Schedules_Monitoringv+0xad4>
									{
										_kSERAIL_MON_WRITE("sc enter 11.2.1");
    b176:	68 e3       	ldi	r22, 0x38	; 56
    b178:	74 e1       	ldi	r23, 0x14	; 20
    b17a:	8f e6       	ldi	r24, 0x6F	; 111
    b17c:	96 e1       	ldi	r25, 0x16	; 22
    b17e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b182:	8f e6       	ldi	r24, 0x6F	; 111
    b184:	96 e1       	ldi	r25, 0x16	; 22
    b186:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									_sSchedules.Trigger_Reset = _kRESET;
    b18a:	10 92 07 09 	sts	0x0907, r1	; 0x800907 <_sSchedules+0x17>
    b18e:	10 92 08 09 	sts	0x0908, r1	; 0x800908 <_sSchedules+0x18>
    b192:	10 92 09 09 	sts	0x0909, r1	; 0x800909 <_sSchedules+0x19>
    b196:	10 92 0a 09 	sts	0x090A, r1	; 0x80090a <_sSchedules+0x1a>
    b19a:	dd cc       	rjmp	.-1606   	; 0xab56 <_Z20Schedules_Monitoringv+0x4a0>
								}
								else
								{
									if(_sSchedules.Trigger_Time != 0)
    b19c:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    b1a0:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    b1a4:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    b1a8:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    b1ac:	89 2b       	or	r24, r25
    b1ae:	8a 2b       	or	r24, r26
    b1b0:	8b 2b       	or	r24, r27
    b1b2:	09 f4       	brne	.+2      	; 0xb1b6 <_Z20Schedules_Monitoringv+0xb00>
    b1b4:	d0 cc       	rjmp	.-1632   	; 0xab56 <_Z20Schedules_Monitoringv+0x4a0>
									{
										if(_sSchedules.Trigger_Time <  _kMAX_BUFFER_TIME)
    b1b6:	80 91 03 09 	lds	r24, 0x0903	; 0x800903 <_sSchedules+0x13>
    b1ba:	90 91 04 09 	lds	r25, 0x0904	; 0x800904 <_sSchedules+0x14>
    b1be:	a0 91 05 09 	lds	r26, 0x0905	; 0x800905 <_sSchedules+0x15>
    b1c2:	b0 91 06 09 	lds	r27, 0x0906	; 0x800906 <_sSchedules+0x16>
    b1c6:	8c 32       	cpi	r24, 0x2C	; 44
    b1c8:	91 40       	sbci	r25, 0x01	; 1
    b1ca:	a1 05       	cpc	r26, r1
    b1cc:	b1 05       	cpc	r27, r1
    b1ce:	08 f0       	brcs	.+2      	; 0xb1d2 <_Z20Schedules_Monitoringv+0xb1c>
    b1d0:	ae cc       	rjmp	.-1700   	; 0xab2e <_Z20Schedules_Monitoringv+0x478>
										{
											_sSchedules.Trigger_Reset = _kMAX_TIME_IN_SEC - _kMAX_BUFFER_TIME;
    b1d2:	87 e1       	ldi	r24, 0x17	; 23
    b1d4:	90 e5       	ldi	r25, 0x50	; 80
    b1d6:	a1 e0       	ldi	r26, 0x01	; 1
    b1d8:	b0 e0       	ldi	r27, 0x00	; 0
    b1da:	b5 cc       	rjmp	.-1686   	; 0xab46 <_Z20Schedules_Monitoringv+0x490>
							if(_sSchedules.Trigger_Time < _sSchedules.Trigger_Reset)	/* compare the reset time with trigger time */
							{
								check_true_condition = Compare_Trigger_And_Reset_Time();
								if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
								{
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    b1dc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b1e0:	81 30       	cpi	r24, 0x01	; 1
    b1e2:	51 f4       	brne	.+20     	; 0xb1f8 <_Z20Schedules_Monitoringv+0xb42>
									{
										_kSERAIL_MON_WRITE("sc enter 16");
    b1e4:	61 ed       	ldi	r22, 0xD1	; 209
    b1e6:	73 e1       	ldi	r23, 0x13	; 19
    b1e8:	8f e6       	ldi	r24, 0x6F	; 111
    b1ea:	96 e1       	ldi	r25, 0x16	; 22
    b1ec:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    b1f0:	8f e6       	ldi	r24, 0x6F	; 111
    b1f2:	96 e1       	ldi	r25, 0x16	; 22
    b1f4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									if((_sRuble_Parameters.Current_Time_In_Sec >= _sSchedules.Trigger_Time) &&(_sRuble_Parameters.Current_Time_In_Sec < _sSchedules.Trigger_Reset))
    b1f8:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    b1fc:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    b200:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    b204:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    b208:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b20c:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b210:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b214:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b218:	84 17       	cp	r24, r20
    b21a:	95 07       	cpc	r25, r21
    b21c:	a6 07       	cpc	r26, r22
    b21e:	b7 07       	cpc	r27, r23
    b220:	08 f4       	brcc	.+2      	; 0xb224 <_Z20Schedules_Monitoringv+0xb6e>
    b222:	e4 c1       	rjmp	.+968    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    b224:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b228:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b22c:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b230:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
    b234:	84 17       	cp	r24, r20
    b236:	95 07       	cpc	r25, r21
    b238:	a6 07       	cpc	r26, r22
    b23a:	b7 07       	cpc	r27, r23
    b23c:	08 f0       	brcs	.+2      	; 0xb240 <_Z20Schedules_Monitoringv+0xb8a>
    b23e:	d6 c1       	rjmp	.+940    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b240:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b244:	81 30       	cpi	r24, 0x01	; 1
    b246:	51 f4       	brne	.+20     	; 0xb25c <_Z20Schedules_Monitoringv+0xba6>
										{
											_kSERAIL_MON_WRITE("sc enter 17");
    b248:	65 ec       	ldi	r22, 0xC5	; 197
    b24a:	73 e1       	ldi	r23, 0x13	; 19
    b24c:	8f e6       	ldi	r24, 0x6F	; 111
    b24e:	96 e1       	ldi	r25, 0x16	; 22
    b250:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b254:	8f e6       	ldi	r24, 0x6F	; 111
    b256:	96 e1       	ldi	r25, 0x16	; 22
    b258:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										/* set the trigger time for ON */
										Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b25c:	6c 2f       	mov	r22, r28
    b25e:	81 e0       	ldi	r24, 0x01	; 1
    b260:	0e 94 65 46 	call	0x8cca	; 0x8cca <_Z34Check_Time_For_Schedule_To_Triggerhh>
    b264:	ca cb       	rjmp	.-2156   	; 0xa9fa <_Z20Schedules_Monitoringv+0x344>
									check_true_condition = Compare_Trigger_And_Reset_Time();
									
									if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
									{
										/* no need to check next date */
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    b266:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b26a:	81 30       	cpi	r24, 0x01	; 1
    b26c:	51 f4       	brne	.+20     	; 0xb282 <_Z20Schedules_Monitoringv+0xbcc>
										{
											_kSERAIL_MON_WRITE("sc enter 26");
    b26e:	69 eb       	ldi	r22, 0xB9	; 185
    b270:	73 e1       	ldi	r23, 0x13	; 19
    b272:	8f e6       	ldi	r24, 0x6F	; 111
    b274:	96 e1       	ldi	r25, 0x16	; 22
    b276:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    b27a:	8f e6       	ldi	r24, 0x6F	; 111
    b27c:	96 e1       	ldi	r25, 0x16	; 22
    b27e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b282:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b286:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b28a:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b28e:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b292:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    b296:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    b29a:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    b29e:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    b2a2:	84 17       	cp	r24, r20
    b2a4:	95 07       	cpc	r25, r21
    b2a6:	a6 07       	cpc	r26, r22
    b2a8:	b7 07       	cpc	r27, r23
    b2aa:	68 f0       	brcs	.+26     	; 0xb2c6 <_Z20Schedules_Monitoringv+0xc10>
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b2ac:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b2b0:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b2b4:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b2b8:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
												_kSERIAL_MON_CLEAR();
											}
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b2bc:	48 17       	cp	r20, r24
    b2be:	59 07       	cpc	r21, r25
    b2c0:	6a 07       	cpc	r22, r26
    b2c2:	7b 07       	cpc	r23, r27
    b2c4:	e8 f0       	brcs	.+58     	; 0xb300 <_Z20Schedules_Monitoringv+0xc4a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b2c6:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b2ca:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b2ce:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b2d2:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b2d6:	48 17       	cp	r20, r24
    b2d8:	59 07       	cpc	r21, r25
    b2da:	6a 07       	cpc	r22, r26
    b2dc:	7b 07       	cpc	r23, r27
    b2de:	08 f4       	brcc	.+2      	; 0xb2e2 <_Z20Schedules_Monitoringv+0xc2c>
    b2e0:	85 c1       	rjmp	.+778    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b2e2:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b2e6:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b2ea:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b2ee:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
										}
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
    b2f2:	84 17       	cp	r24, r20
    b2f4:	95 07       	cpc	r25, r21
    b2f6:	a6 07       	cpc	r26, r22
    b2f8:	b7 07       	cpc	r27, r23
    b2fa:	08 f4       	brcc	.+2      	; 0xb2fe <_Z20Schedules_Monitoringv+0xc48>
    b2fc:	78 c0       	rjmp	.+240    	; 0xb3ee <_Z20Schedules_Monitoringv+0xd38>
    b2fe:	76 c1       	rjmp	.+748    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
										}*/
										
										if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
										_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b300:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b304:	81 30       	cpi	r24, 0x01	; 1
    b306:	51 f4       	brne	.+20     	; 0xb31c <_Z20Schedules_Monitoringv+0xc66>
											{
												_kSERAIL_MON_WRITE("sc enter 27");
    b308:	6d ea       	ldi	r22, 0xAD	; 173
    b30a:	73 e1       	ldi	r23, 0x13	; 19
    b30c:	8f e6       	ldi	r24, 0x6F	; 111
    b30e:	96 e1       	ldi	r25, 0x16	; 22
    b310:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b314:	8f e6       	ldi	r24, 0x6F	; 111
    b316:	96 e1       	ldi	r25, 0x16	; 22
    b318:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											/* set the trigger time for ON */
											Check_Time_For_Schedule_To_Trigger(1,check_true_condition);	
    b31c:	6c 2f       	mov	r22, r28
    b31e:	65 c0       	rjmp	.+202    	; 0xb3ea <_Z20Schedules_Monitoringv+0xd34>
									}
									else
									{
										if(check_true_condition || (_sSchedules.all_schedule_done_flag == _eNOT_SET && _sSchedules.Cyclic_Schedule_Flag == _kSET))
										{
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b320:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b324:	81 30       	cpi	r24, 0x01	; 1
    b326:	51 f4       	brne	.+20     	; 0xb33c <_Z20Schedules_Monitoringv+0xc86>
											{
												_kSERAIL_MON_WRITE("sc enter 37");
    b328:	65 e9       	ldi	r22, 0x95	; 149
    b32a:	73 e1       	ldi	r23, 0x13	; 19
    b32c:	8f e6       	ldi	r24, 0x6F	; 111
    b32e:	96 e1       	ldi	r25, 0x16	; 22
    b330:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b334:	8f e6       	ldi	r24, 0x6F	; 111
    b336:	96 e1       	ldi	r25, 0x16	; 22
    b338:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											if(_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec)
    b33c:	00 91 03 09 	lds	r16, 0x0903	; 0x800903 <_sSchedules+0x13>
    b340:	10 91 04 09 	lds	r17, 0x0904	; 0x800904 <_sSchedules+0x14>
    b344:	20 91 05 09 	lds	r18, 0x0905	; 0x800905 <_sSchedules+0x15>
    b348:	30 91 06 09 	lds	r19, 0x0906	; 0x800906 <_sSchedules+0x16>
    b34c:	40 91 75 15 	lds	r20, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    b350:	50 91 76 15 	lds	r21, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    b354:	60 91 77 15 	lds	r22, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    b358:	70 91 78 15 	lds	r23, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    b35c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b360:	04 17       	cp	r16, r20
    b362:	15 07       	cpc	r17, r21
    b364:	26 07       	cpc	r18, r22
    b366:	37 07       	cpc	r19, r23
    b368:	08 f4       	brcc	.+2      	; 0xb36c <_Z20Schedules_Monitoringv+0xcb6>
    b36a:	57 c0       	rjmp	.+174    	; 0xb41a <_Z20Schedules_Monitoringv+0xd64>
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b36c:	81 30       	cpi	r24, 0x01	; 1
    b36e:	51 f4       	brne	.+20     	; 0xb384 <_Z20Schedules_Monitoringv+0xcce>
												{
													_kSERAIL_MON_WRITE("sc enter 38");
    b370:	69 e8       	ldi	r22, 0x89	; 137
    b372:	73 e1       	ldi	r23, 0x13	; 19
    b374:	8f e6       	ldi	r24, 0x6F	; 111
    b376:	96 e1       	ldi	r25, 0x16	; 22
    b378:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b37c:	8f e6       	ldi	r24, 0x6F	; 111
    b37e:	96 e1       	ldi	r25, 0x16	; 22
    b380:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b384:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b388:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b38c:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b390:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b394:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    b398:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    b39c:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    b3a0:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    b3a4:	84 17       	cp	r24, r20
    b3a6:	95 07       	cpc	r25, r21
    b3a8:	a6 07       	cpc	r26, r22
    b3aa:	b7 07       	cpc	r27, r23
    b3ac:	08 f4       	brcc	.+2      	; 0xb3b0 <_Z20Schedules_Monitoringv+0xcfa>
    b3ae:	65 c0       	rjmp	.+202    	; 0xb47a <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b3b0:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b3b4:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b3b8:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b3bc:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 38");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b3c0:	48 17       	cp	r20, r24
    b3c2:	59 07       	cpc	r21, r25
    b3c4:	6a 07       	cpc	r22, r26
    b3c6:	7b 07       	cpc	r23, r27
    b3c8:	08 f0       	brcs	.+2      	; 0xb3cc <_Z20Schedules_Monitoringv+0xd16>
    b3ca:	57 c0       	rjmp	.+174    	; 0xb47a <_Z20Schedules_Monitoringv+0xdc4>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3cc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b3d0:	81 30       	cpi	r24, 0x01	; 1
    b3d2:	51 f4       	brne	.+20     	; 0xb3e8 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 39");
    b3d4:	6d e7       	ldi	r22, 0x7D	; 125
    b3d6:	73 e1       	ldi	r23, 0x13	; 19
    b3d8:	8f e6       	ldi	r24, 0x6F	; 111
    b3da:	96 e1       	ldi	r25, 0x16	; 22
    b3dc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b3e0:	8f e6       	ldi	r24, 0x6F	; 111
    b3e2:	96 e1       	ldi	r25, 0x16	; 22
    b3e4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
    b3e8:	60 e0       	ldi	r22, 0x00	; 0
    b3ea:	81 e0       	ldi	r24, 0x01	; 1
    b3ec:	10 c0       	rjmp	.+32     	; 0xb40e <_Z20Schedules_Monitoringv+0xd58>
										
										else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && 
										(_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
										{
											/* set the trigger time for ON */
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    b3ee:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b3f2:	81 30       	cpi	r24, 0x01	; 1
    b3f4:	51 f4       	brne	.+20     	; 0xb40a <_Z20Schedules_Monitoringv+0xd54>
											{
												_kSERAIL_MON_WRITE("sc enter 32");
    b3f6:	61 ea       	ldi	r22, 0xA1	; 161
    b3f8:	73 e1       	ldi	r23, 0x13	; 19
    b3fa:	8f e6       	ldi	r24, 0x6F	; 111
    b3fc:	96 e1       	ldi	r25, 0x16	; 22
    b3fe:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();
    b402:	8f e6       	ldi	r24, 0x6F	; 111
    b404:	96 e1       	ldi	r25, 0x16	; 22
    b406:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b40a:	6c 2f       	mov	r22, r28
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b40c:	82 e0       	ldi	r24, 0x02	; 2
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b40e:	df 91       	pop	r29
    b410:	cf 91       	pop	r28
    b412:	1f 91       	pop	r17
    b414:	0f 91       	pop	r16
													{
														_kSERAIL_MON_WRITE("sc enter 44");
														_kSERIAL_MON_CLEAR();
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b416:	0c 94 65 46 	jmp	0x8cca	; 0x8cca <_Z34Check_Time_For_Schedule_To_Triggerhh>
												}
												
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    b41a:	81 30       	cpi	r24, 0x01	; 1
    b41c:	51 f4       	brne	.+20     	; 0xb432 <_Z20Schedules_Monitoringv+0xd7c>
												{
													_kSERAIL_MON_WRITE("sc enter 49");
    b41e:	65 e6       	ldi	r22, 0x65	; 101
    b420:	73 e1       	ldi	r23, 0x13	; 19
    b422:	8f e6       	ldi	r24, 0x6F	; 111
    b424:	96 e1       	ldi	r25, 0x16	; 22
    b426:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    b42a:	8f e6       	ldi	r24, 0x6F	; 111
    b42c:	96 e1       	ldi	r25, 0x16	; 22
    b42e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b432:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b436:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b43a:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b43e:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b442:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    b446:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    b44a:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    b44e:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    b452:	84 17       	cp	r24, r20
    b454:	95 07       	cpc	r25, r21
    b456:	a6 07       	cpc	r26, r22
    b458:	b7 07       	cpc	r27, r23
    b45a:	08 f4       	brcc	.+2      	; 0xb45e <_Z20Schedules_Monitoringv+0xda8>
    b45c:	42 c0       	rjmp	.+132    	; 0xb4e2 <_Z20Schedules_Monitoringv+0xe2c>
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
    b45e:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b462:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b466:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b46a:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
												if(_sRuble_Parameters.Debug_Mode == _kSET)
												{
													_kSERAIL_MON_WRITE("sc enter 49");
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
    b46e:	48 17       	cp	r20, r24
    b470:	59 07       	cpc	r21, r25
    b472:	6a 07       	cpc	r22, r26
    b474:	7b 07       	cpc	r23, r27
    b476:	68 f1       	brcs	.+90     	; 0xb4d2 <_Z20Schedules_Monitoringv+0xe1c>
    b478:	34 c0       	rjmp	.+104    	; 0xb4e2 <_Z20Schedules_Monitoringv+0xe2c>
														_kSERIAL_MON_CLEAR();
													}
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b47a:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b47e:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b482:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b486:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b48a:	48 17       	cp	r20, r24
    b48c:	59 07       	cpc	r21, r25
    b48e:	6a 07       	cpc	r22, r26
    b490:	7b 07       	cpc	r23, r27
    b492:	08 f4       	brcc	.+2      	; 0xb496 <_Z20Schedules_Monitoringv+0xde0>
    b494:	ab c0       	rjmp	.+342    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    b496:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b49a:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b49e:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b4a2:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
    b4a6:	84 17       	cp	r24, r20
    b4a8:	95 07       	cpc	r25, r21
    b4aa:	a6 07       	cpc	r26, r22
    b4ac:	b7 07       	cpc	r27, r23
    b4ae:	08 f0       	brcs	.+2      	; 0xb4b2 <_Z20Schedules_Monitoringv+0xdfc>
    b4b0:	9d c0       	rjmp	.+314    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4b2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b4b6:	81 30       	cpi	r24, 0x01	; 1
    b4b8:	51 f4       	brne	.+20     	; 0xb4ce <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 44");
    b4ba:	61 e7       	ldi	r22, 0x71	; 113
    b4bc:	73 e1       	ldi	r23, 0x13	; 19
    b4be:	8f e6       	ldi	r24, 0x6F	; 111
    b4c0:	96 e1       	ldi	r25, 0x16	; 22
    b4c2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
														_kSERIAL_MON_CLEAR();
    b4c6:	8f e6       	ldi	r24, 0x6F	; 111
    b4c8:	96 e1       	ldi	r25, 0x16	; 22
    b4ca:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(2,check_true_condition);
    b4ce:	60 e0       	ldi	r22, 0x00	; 0
    b4d0:	9d cf       	rjmp	.-198    	; 0xb40c <_Z20Schedules_Monitoringv+0xd56>
													_kSERIAL_MON_CLEAR();
												}
												if(_sSchedules.Trigger_Time <= _sRuble_Parameters.Current_Time_In_Sec &&
												_sSchedules.Trigger_Reset < _sRuble_Parameters.Current_Time_In_Sec)
												{
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b4d2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b4d6:	81 30       	cpi	r24, 0x01	; 1
    b4d8:	09 f0       	breq	.+2      	; 0xb4dc <_Z20Schedules_Monitoringv+0xe26>
    b4da:	86 cf       	rjmp	.-244    	; 0xb3e8 <_Z20Schedules_Monitoringv+0xd32>
													{
														_kSERAIL_MON_WRITE("sc enter 50");
    b4dc:	69 e5       	ldi	r22, 0x59	; 89
    b4de:	73 e1       	ldi	r23, 0x13	; 19
    b4e0:	7b cf       	rjmp	.-266    	; 0xb3d8 <_Z20Schedules_Monitoringv+0xd22>
													}
													/* set the trigger time for ON */
													Check_Time_For_Schedule_To_Trigger(1,check_true_condition);
												}
												
												else if((_sSchedules.Trigger_Time >= _sRuble_Parameters.Current_Time_In_Sec) && (_sSchedules.Trigger_Reset > _sRuble_Parameters.Current_Time_In_Sec))
    b4e2:	40 91 03 09 	lds	r20, 0x0903	; 0x800903 <_sSchedules+0x13>
    b4e6:	50 91 04 09 	lds	r21, 0x0904	; 0x800904 <_sSchedules+0x14>
    b4ea:	60 91 05 09 	lds	r22, 0x0905	; 0x800905 <_sSchedules+0x15>
    b4ee:	70 91 06 09 	lds	r23, 0x0906	; 0x800906 <_sSchedules+0x16>
    b4f2:	48 17       	cp	r20, r24
    b4f4:	59 07       	cpc	r21, r25
    b4f6:	6a 07       	cpc	r22, r26
    b4f8:	7b 07       	cpc	r23, r27
    b4fa:	08 f4       	brcc	.+2      	; 0xb4fe <_Z20Schedules_Monitoringv+0xe48>
    b4fc:	77 c0       	rjmp	.+238    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
    b4fe:	40 91 07 09 	lds	r20, 0x0907	; 0x800907 <_sSchedules+0x17>
    b502:	50 91 08 09 	lds	r21, 0x0908	; 0x800908 <_sSchedules+0x18>
    b506:	60 91 09 09 	lds	r22, 0x0909	; 0x800909 <_sSchedules+0x19>
    b50a:	70 91 0a 09 	lds	r23, 0x090A	; 0x80090a <_sSchedules+0x1a>
    b50e:	84 17       	cp	r24, r20
    b510:	95 07       	cpc	r25, r21
    b512:	a6 07       	cpc	r26, r22
    b514:	b7 07       	cpc	r27, r23
    b516:	08 f0       	brcs	.+2      	; 0xb51a <_Z20Schedules_Monitoringv+0xe64>
    b518:	69 c0       	rjmp	.+210    	; 0xb5ec <_Z20Schedules_Monitoringv+0xf36>
												{
													/* set the trigger time for ON */
													if(_sRuble_Parameters.Debug_Mode == _kSET)
    b51a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b51e:	81 30       	cpi	r24, 0x01	; 1
    b520:	b1 f6       	brne	.-84     	; 0xb4ce <_Z20Schedules_Monitoringv+0xe18>
													{
														_kSERAIL_MON_WRITE("sc enter 55");
    b522:	6d e4       	ldi	r22, 0x4D	; 77
    b524:	73 e1       	ldi	r23, 0x13	; 19
    b526:	cb cf       	rjmp	.-106    	; 0xb4be <_Z20Schedules_Monitoringv+0xe08>
					_sSchedules.Scheduler_Retry_Timer = _kRESET;
					_sSchedules.Pump_On_In_Scheduler = _kRESET;
					
					if(_sSchedules.Which_Sheduler_Is_Running)    /* check if any scheduler is running */
					{
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    b528:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b52c:	81 30       	cpi	r24, 0x01	; 1
    b52e:	51 f4       	brne	.+20     	; 0xb544 <_Z20Schedules_Monitoringv+0xe8e>
						{
							_kSERAIL_MON_WRITE("sc enter 62");
    b530:	61 e1       	ldi	r22, 0x11	; 17
    b532:	73 e1       	ldi	r23, 0x13	; 19
    b534:	8f e6       	ldi	r24, 0x6F	; 111
    b536:	96 e1       	ldi	r25, 0x16	; 22
    b538:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    b53c:	8f e6       	ldi	r24, 0x6F	; 111
    b53e:	96 e1       	ldi	r25, 0x16	; 22
    b540:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						Doser_Pump_On_Off(_kFORCEFULYY_OFF);
    b544:	83 e0       	ldi	r24, 0x03	; 3
    b546:	0e 94 74 49 	call	0x92e8	; 0x92e8 <_Z17Doser_Pump_On_Offh>
						Turn_Off_All_Tank_For_Safety();
    b54a:	0e 94 c8 3c 	call	0x7990	; 0x7990 <_Z28Turn_Off_All_Tank_For_Safetyv>
						Blower_Monitoring(_kFORCEFULYY_OFF);   // 11-4
    b54e:	83 e0       	ldi	r24, 0x03	; 3
    b550:	0e 94 8d 3d 	call	0x7b1a	; 0x7b1a <_Z17Blower_Monitoringh>
    b554:	10 c9       	rjmp	.-3552   	; 0xa776 <_Z20Schedules_Monitoringv+0xc0>
					_sSchedules.Schedule_Are_Started = _kRESET;
					_sSchedules.all_schedule_done_flag = _kRESET;
					
					if(_sRuble_Parameters.Last_Irrigating_Schedule != _sRuble_Parameters.Irrigating_Plot)
					{
						if(_sRuble_Parameters.Last_Irrigating_Schedule != _kRESET)
    b556:	88 23       	and	r24, r24
    b558:	09 f4       	brne	.+2      	; 0xb55c <_Z20Schedules_Monitoringv+0xea6>
    b55a:	45 c9       	rjmp	.-3446   	; 0xa7e6 <_Z20Schedules_Monitoringv+0x130>
						{
							Valve_Grouping_Handler_For_wireless_Pump(_sRuble_Parameters.Last_Irrigating_Schedule, _kOFF);
    b55c:	60 e0       	ldi	r22, 0x00	; 0
    b55e:	0e 94 4e 27 	call	0x4e9c	; 0x4e9c <_Z40Valve_Grouping_Handler_For_wireless_Pumphh>
							_sRuble_Parameters.Last_Irrigating_Schedule = _kRESET;
    b562:	10 92 23 16 	sts	0x1623, r1	; 0x801623 <_sRuble_Parameters+0xbe>
    b566:	3f c9       	rjmp	.-3458   	; 0xa7e6 <_Z20Schedules_Monitoringv+0x130>
					if(_sSchedules.Schedule_Pause_Resume != 0 || _sSchedules.New_Schedules_Occur == _kSET || _sRuble_Parameters.Update_Local_Date[2] == 70)
					{
						/* should add what happen if schedule pause */
						/* in ruble data resume section will be there */
						
						if(_sSchedules.Which_Sheduler_Is_Running)
    b568:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    b56c:	88 23       	and	r24, r24
    b56e:	b1 f1       	breq	.+108    	; 0xb5dc <_Z20Schedules_Monitoringv+0xf26>
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b570:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b574:	81 30       	cpi	r24, 0x01	; 1
    b576:	51 f4       	brne	.+20     	; 0xb58c <_Z20Schedules_Monitoringv+0xed6>
							{
								_kSERAIL_MON_WRITE("sc enter 61");
    b578:	6d e1       	ldi	r22, 0x1D	; 29
    b57a:	73 e1       	ldi	r23, 0x13	; 19
    b57c:	8f e6       	ldi	r24, 0x6F	; 111
    b57e:	96 e1       	ldi	r25, 0x16	; 22
    b580:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b584:	8f e6       	ldi	r24, 0x6F	; 111
    b586:	96 e1       	ldi	r25, 0x16	; 22
    b588:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							_sSchedules.Back_Up_Running_Scheduler_Number = _sSchedules.Which_Sheduler_Is_Running;
    b58c:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
    b590:	80 93 aa 0b 	sts	0x0BAA, r24	; 0x800baa <_sSchedules+0x2ba>
							_sSchedules.Back_Up_Running_Schedule_Plot_Number = _sRuble_Parameters.Irrigating_Plot;
    b594:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    b598:	80 93 ab 0b 	sts	0x0BAB, r24	; 0x800bab <_sSchedules+0x2bb>
							_sSchedules.Back_Up_Pump_Running_Time = _sSchedules.Keep_Scheduler_Run_Timer;
    b59c:	80 91 f8 08 	lds	r24, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    b5a0:	90 91 f9 08 	lds	r25, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    b5a4:	90 93 ad 0b 	sts	0x0BAD, r25	; 0x800bad <_sSchedules+0x2bd>
    b5a8:	80 93 ac 0b 	sts	0x0BAC, r24	; 0x800bac <_sSchedules+0x2bc>
							
							for(unsigned char fert_tank=0; fert_tank < _kMAX_FERTILIZER_TANK;fert_tank++)
							{
								_sSchedules.Back_Up_Tank_Running_Time[fert_tank] = _sSchedules.Tank_Running_Timer[fert_tank];
    b5ac:	80 91 54 0b 	lds	r24, 0x0B54	; 0x800b54 <_sSchedules+0x264>
    b5b0:	90 91 55 0b 	lds	r25, 0x0B55	; 0x800b55 <_sSchedules+0x265>
    b5b4:	90 93 af 0b 	sts	0x0BAF, r25	; 0x800baf <_sSchedules+0x2bf>
    b5b8:	80 93 ae 0b 	sts	0x0BAE, r24	; 0x800bae <_sSchedules+0x2be>
    b5bc:	80 91 56 0b 	lds	r24, 0x0B56	; 0x800b56 <_sSchedules+0x266>
    b5c0:	90 91 57 0b 	lds	r25, 0x0B57	; 0x800b57 <_sSchedules+0x267>
    b5c4:	90 93 b1 0b 	sts	0x0BB1, r25	; 0x800bb1 <_sSchedules+0x2c1>
    b5c8:	80 93 b0 0b 	sts	0x0BB0, r24	; 0x800bb0 <_sSchedules+0x2c0>
    b5cc:	80 91 58 0b 	lds	r24, 0x0B58	; 0x800b58 <_sSchedules+0x268>
    b5d0:	90 91 59 0b 	lds	r25, 0x0B59	; 0x800b59 <_sSchedules+0x269>
    b5d4:	90 93 b3 0b 	sts	0x0BB3, r25	; 0x800bb3 <_sSchedules+0x2c3>
    b5d8:	80 93 b2 0b 	sts	0x0BB2, r24	; 0x800bb2 <_sSchedules+0x2c2>
							}
							
							/* ########################## add schedule pause to ruble data topic ############# */
						}
						
						if(_sSchedules.New_Schedules_Occur == _kSET)
    b5dc:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <_sSchedules+0x1>
    b5e0:	81 30       	cpi	r24, 0x01	; 1
    b5e2:	09 f0       	breq	.+2      	; 0xb5e6 <_Z20Schedules_Monitoringv+0xf30>
    b5e4:	bc c8       	rjmp	.-3720   	; 0xa75e <_Z20Schedules_Monitoringv+0xa8>
						{
							Edited_In_Schedule();
    b5e6:	0e 94 bd 3f 	call	0x7f7a	; 0x7f7a <_Z18Edited_In_Schedulev>
    b5ea:	b9 c8       	rjmp	.-3726   	; 0xa75e <_Z20Schedules_Monitoringv+0xa8>
		{
			_sSchedules.Based_On_Trigger_Time = _eBASED_ON_TRIGGER_TIME;
		}break;
	}
	
}					
    b5ec:	df 91       	pop	r29
    b5ee:	cf 91       	pop	r28
    b5f0:	1f 91       	pop	r17
    b5f2:	0f 91       	pop	r16
    b5f4:	08 95       	ret

0000b5f6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>:
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
        return t;
    }
    
    template< typename T > const T &put( int idx, const T &t ){
    b5f6:	cf 93       	push	r28
    b5f8:	df 93       	push	r29
    b5fa:	1f 92       	push	r1
    b5fc:	1f 92       	push	r1
    b5fe:	cd b7       	in	r28, 0x3d	; 61
    b600:	de b7       	in	r29, 0x3e	; 62
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b602:	60 91 25 16 	lds	r22, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
    b606:	85 e3       	ldi	r24, 0x35	; 53
    b608:	9c e0       	ldi	r25, 0x0C	; 12
    b60a:	9a 83       	std	Y+2, r25	; 0x02
    b60c:	89 83       	std	Y+1, r24	; 0x01
    b60e:	ce 01       	movw	r24, r28
    b610:	01 96       	adiw	r24, 0x01	; 1
    b612:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
        return t;
    }
    b616:	85 e2       	ldi	r24, 0x25	; 37
    b618:	96 e1       	ldi	r25, 0x16	; 22
    b61a:	0f 90       	pop	r0
    b61c:	0f 90       	pop	r0
    b61e:	df 91       	pop	r29
    b620:	cf 91       	pop	r28
    b622:	08 95       	ret

0000b624 <_Z16Euro_Data_EEPROMh>:
	}
	return 0;
}

void Euro_Data_EEPROM(unsigned char valve_number)
{
    b624:	cf 92       	push	r12
    b626:	df 92       	push	r13
    b628:	ef 92       	push	r14
    b62a:	ff 92       	push	r15
    b62c:	0f 93       	push	r16
    b62e:	1f 93       	push	r17
    b630:	cf 93       	push	r28
    b632:	df 93       	push	r29
    b634:	1f 92       	push	r1
    b636:	1f 92       	push	r1
    b638:	cd b7       	in	r28, 0x3d	; 61
    b63a:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
    b63c:	90 e0       	ldi	r25, 0x00	; 0
    b63e:	ac 01       	movw	r20, r24
    b640:	41 50       	subi	r20, 0x01	; 1
    b642:	51 09       	sbc	r21, r1
    b644:	64 e1       	ldi	r22, 0x14	; 20
    b646:	64 9f       	mul	r22, r20
    b648:	90 01       	movw	r18, r0
    b64a:	65 9f       	mul	r22, r21
    b64c:	30 0d       	add	r19, r0
    b64e:	11 24       	eor	r1, r1
    b650:	79 01       	movw	r14, r18
    b652:	4e ea       	ldi	r20, 0xAE	; 174
    b654:	e4 1a       	sub	r14, r20
    b656:	4c ef       	ldi	r20, 0xFC	; 252
    b658:	f4 0a       	sbc	r15, r20
    b65a:	6d e0       	ldi	r22, 0x0D	; 13
    b65c:	68 9f       	mul	r22, r24
    b65e:	a0 01       	movw	r20, r0
    b660:	69 9f       	mul	r22, r25
    b662:	50 0d       	add	r21, r0
    b664:	11 24       	eor	r1, r1
    b666:	ca 01       	movw	r24, r20
    b668:	89 51       	subi	r24, 0x19	; 25
    b66a:	94 4f       	sbci	r25, 0xF4	; 244
    b66c:	6c 01       	movw	r12, r24
    b66e:	89 01       	movw	r16, r18
    b670:	01 5a       	subi	r16, 0xA1	; 161
    b672:	1c 4f       	sbci	r17, 0xFC	; 252
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    b674:	f6 01       	movw	r30, r12
    b676:	61 91       	ld	r22, Z+
    b678:	6f 01       	movw	r12, r30
    b67a:	fa 82       	std	Y+2, r15	; 0x02
    b67c:	e9 82       	std	Y+1, r14	; 0x01
    b67e:	ce 01       	movw	r24, r28
    b680:	01 96       	adiw	r24, 0x01	; 1
    b682:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    b686:	ff ef       	ldi	r31, 0xFF	; 255
    b688:	ef 1a       	sub	r14, r31
    b68a:	ff 0a       	sbc	r15, r31
    b68c:	e0 16       	cp	r14, r16
    b68e:	f1 06       	cpc	r15, r17
    b690:	89 f7       	brne	.-30     	; 0xb674 <_Z16Euro_Data_EEPROMh+0x50>
	return;
}
    b692:	0f 90       	pop	r0
    b694:	0f 90       	pop	r0
    b696:	df 91       	pop	r29
    b698:	cf 91       	pop	r28
    b69a:	1f 91       	pop	r17
    b69c:	0f 91       	pop	r16
    b69e:	ff 90       	pop	r15
    b6a0:	ef 90       	pop	r14
    b6a2:	df 90       	pop	r13
    b6a4:	cf 90       	pop	r12
    b6a6:	08 95       	ret

0000b6a8 <_Z20Wireless_Pump_EEPROMh>:
	
	return 0;
}

void Wireless_Pump_EEPROM(unsigned char Pump_Number)
{
    b6a8:	cf 92       	push	r12
    b6aa:	df 92       	push	r13
    b6ac:	ef 92       	push	r14
    b6ae:	ff 92       	push	r15
    b6b0:	0f 93       	push	r16
    b6b2:	1f 93       	push	r17
    b6b4:	cf 93       	push	r28
    b6b6:	df 93       	push	r29
    b6b8:	1f 92       	push	r1
    b6ba:	1f 92       	push	r1
    b6bc:	cd b7       	in	r28, 0x3d	; 61
    b6be:	de b7       	in	r29, 0x3e	; 62
	_kEEPROM_WRITE(_kWIRELESS_PUMP_DATA_SAVE(Pump_Number), _sWireless_Pump_Param[Pump_Number]);
    b6c0:	94 e1       	ldi	r25, 0x14	; 20
    b6c2:	89 9f       	mul	r24, r25
    b6c4:	90 01       	movw	r18, r0
    b6c6:	11 24       	eor	r1, r1
    b6c8:	69 01       	movw	r12, r18
    b6ca:	ea ec       	ldi	r30, 0xCA	; 202
    b6cc:	ce 1a       	sub	r12, r30
    b6ce:	e3 ef       	ldi	r30, 0xF3	; 243
    b6d0:	de 0a       	sbc	r13, r30
    b6d2:	fb e0       	ldi	r31, 0x0B	; 11
    b6d4:	8f 9f       	mul	r24, r31
    b6d6:	80 01       	movw	r16, r0
    b6d8:	11 24       	eor	r1, r1
    b6da:	0a 53       	subi	r16, 0x3A	; 58
    b6dc:	14 4f       	sbci	r17, 0xF4	; 244
    b6de:	79 01       	movw	r14, r18
    b6e0:	8f eb       	ldi	r24, 0xBF	; 191
    b6e2:	e8 1a       	sub	r14, r24
    b6e4:	83 ef       	ldi	r24, 0xF3	; 243
    b6e6:	f8 0a       	sbc	r15, r24
    b6e8:	f8 01       	movw	r30, r16
    b6ea:	61 91       	ld	r22, Z+
    b6ec:	8f 01       	movw	r16, r30
    b6ee:	da 82       	std	Y+2, r13	; 0x02
    b6f0:	c9 82       	std	Y+1, r12	; 0x01
    b6f2:	ce 01       	movw	r24, r28
    b6f4:	01 96       	adiw	r24, 0x01	; 1
    b6f6:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    b6fa:	ff ef       	ldi	r31, 0xFF	; 255
    b6fc:	cf 1a       	sub	r12, r31
    b6fe:	df 0a       	sbc	r13, r31
    b700:	ce 14       	cp	r12, r14
    b702:	df 04       	cpc	r13, r15
    b704:	89 f7       	brne	.-30     	; 0xb6e8 <_Z20Wireless_Pump_EEPROMh+0x40>
	return;
    b706:	0f 90       	pop	r0
    b708:	0f 90       	pop	r0
    b70a:	df 91       	pop	r29
    b70c:	cf 91       	pop	r28
    b70e:	1f 91       	pop	r17
    b710:	0f 91       	pop	r16
    b712:	ff 90       	pop	r15
    b714:	ef 90       	pop	r14
    b716:	df 90       	pop	r13
    b718:	cf 90       	pop	r12
    b71a:	08 95       	ret

0000b71c <_Z22Update_Euro_Valve_DataPh>:
Euro_Valve_Param _sEuro_Valve_Param[_kMAX_EURO_VALVE];
Wireless_Pump_Param _sWireless_Pump_Param[_kMAX_WIRELESS_PUMP];


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
    b71c:	ef 92       	push	r14
    b71e:	ff 92       	push	r15
    b720:	0f 93       	push	r16
    b722:	1f 93       	push	r17
    b724:	cf 93       	push	r28
    b726:	df 93       	push	r29
    b728:	fc 01       	movw	r30, r24
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b72a:	81 e0       	ldi	r24, 0x01	; 1
    b72c:	80 93 c6 0b 	sts	0x0BC6, r24	; 0x800bc6 <_sWireless_Pump_Param>
    b730:	c0 e0       	ldi	r28, 0x00	; 0
    b732:	d0 e0       	ldi	r29, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b734:	8d e0       	ldi	r24, 0x0D	; 13
    b736:	fc 2e       	mov	r15, r28


bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
    b738:	20 e0       	ldi	r18, 0x00	; 0
    b73a:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
    b73c:	8c 9f       	mul	r24, r28
    b73e:	b0 01       	movw	r22, r0
    b740:	8d 9f       	mul	r24, r29
    b742:	70 0d       	add	r23, r0
    b744:	11 24       	eor	r1, r1
    b746:	69 51       	subi	r22, 0x19	; 25
    b748:	74 4f       	sbci	r23, 0xF4	; 244
    b74a:	49 2f       	mov	r20, r25
    b74c:	50 e0       	ldi	r21, 0x00	; 0
    b74e:	df 01       	movw	r26, r30
    b750:	a4 0f       	add	r26, r20
    b752:	b5 1f       	adc	r27, r21
    b754:	46 0f       	add	r20, r22
    b756:	57 1f       	adc	r21, r23
    b758:	1c 91       	ld	r17, X
    b75a:	da 01       	movw	r26, r20
    b75c:	11 96       	adiw	r26, 0x01	; 1
    b75e:	3c 91       	ld	r19, X
    b760:	13 17       	cp	r17, r19
    b762:	11 f0       	breq	.+4      	; 0xb768 <_Z22Update_Euro_Valve_DataPh+0x4c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    b764:	20 e0       	ldi	r18, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i])
			{
				i = _kVALVE_ID_LEN;
    b766:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    b768:	2f 5f       	subi	r18, 0xFF	; 255
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    b76a:	9f 5f       	subi	r25, 0xFF	; 255
    b76c:	96 30       	cpi	r25, 0x06	; 6
    b76e:	68 f3       	brcs	.-38     	; 0xb74a <_Z22Update_Euro_Valve_DataPh+0x2e>
			
			id_len++;
		}
		count = 0;
		
		if(id_len == _kVALVE_ID_LEN)
    b770:	26 30       	cpi	r18, 0x06	; 6
    b772:	09 f0       	breq	.+2      	; 0xb776 <_Z22Update_Euro_Valve_DataPh+0x5a>
    b774:	b6 c2       	rjmp	.+1388   	; 0xbce2 <_Z22Update_Euro_Valve_DataPh+0x5c6>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    b776:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b77a:	81 30       	cpi	r24, 0x01	; 1
    b77c:	51 f4       	brne	.+20     	; 0xb792 <_Z22Update_Euro_Valve_DataPh+0x76>
			{
				_kSERAIL_MON_WRITE("EURO DATA RECIEVED");                /* for debugging purpose */
    b77e:	66 e7       	ldi	r22, 0x76	; 118
    b780:	7f e1       	ldi	r23, 0x1F	; 31
    b782:	8f e6       	ldi	r24, 0x6F	; 111
    b784:	96 e1       	ldi	r25, 0x16	; 22
    b786:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    b78a:	8f e6       	ldi	r24, 0x6F	; 111
    b78c:	96 e1       	ldi	r25, 0x16	; 22
    b78e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    b792:	90 91 c6 15 	lds	r25, 0x15C6	; 0x8015c6 <_sRuble_Parameters+0x61>
    b796:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b79a:	91 30       	cpi	r25, 0x01	; 1
    b79c:	09 f0       	breq	.+2      	; 0xb7a0 <_Z22Update_Euro_Valve_DataPh+0x84>
    b79e:	3e c1       	rjmp	.+636    	; 0xba1c <_Z22Update_Euro_Valve_DataPh+0x300>
			{
				case _eEURO_VALVE_FAULT_DATA:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7a0:	81 30       	cpi	r24, 0x01	; 1
    b7a2:	51 f4       	brne	.+20     	; 0xb7b8 <_Z22Update_Euro_Valve_DataPh+0x9c>
					{
						_kSERAIL_MON_WRITE("_eEURO_VALVE_FAULT_DATA");                /* for debugging purpose */
    b7a4:	6e e5       	ldi	r22, 0x5E	; 94
    b7a6:	7f e1       	ldi	r23, 0x1F	; 31
    b7a8:	8f e6       	ldi	r24, 0x6F	; 111
    b7aa:	96 e1       	ldi	r25, 0x16	; 22
    b7ac:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    b7b0:	8f e6       	ldi	r24, 0x6F	; 111
    b7b2:	96 e1       	ldi	r25, 0x16	; 22
    b7b4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					
					switch(_sRuble_Parameters.Lora_Data_Rx[7])
    b7b8:	90 91 c7 15 	lds	r25, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
    b7bc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b7c0:	99 23       	and	r25, r25
    b7c2:	19 f0       	breq	.+6      	; 0xb7ca <_Z22Update_Euro_Valve_DataPh+0xae>
    b7c4:	91 30       	cpi	r25, 0x01	; 1
    b7c6:	f1 f0       	breq	.+60     	; 0xb804 <_Z22Update_Euro_Valve_DataPh+0xe8>
    b7c8:	64 c0       	rjmp	.+200    	; 0xb892 <_Z22Update_Euro_Valve_DataPh+0x176>
					{
						case _eNO_FAULT:
						{
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b7ca:	81 30       	cpi	r24, 0x01	; 1
    b7cc:	51 f4       	brne	.+20     	; 0xb7e2 <_Z22Update_Euro_Valve_DataPh+0xc6>
							{
								_kSERAIL_MON_WRITE("_eNO_FAULT ");
    b7ce:	62 e5       	ldi	r22, 0x52	; 82
    b7d0:	7f e1       	ldi	r23, 0x1F	; 31
    b7d2:	8f e6       	ldi	r24, 0x6F	; 111
    b7d4:	96 e1       	ldi	r25, 0x16	; 22
    b7d6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b7da:	8f e6       	ldi	r24, 0x6F	; 111
    b7dc:	96 e1       	ldi	r25, 0x16	; 22
    b7de:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b7e2:	8d e0       	ldi	r24, 0x0D	; 13
    b7e4:	8c 9f       	mul	r24, r28
    b7e6:	f0 01       	movw	r30, r0
    b7e8:	8d 9f       	mul	r24, r29
    b7ea:	f0 0d       	add	r31, r0
    b7ec:	11 24       	eor	r1, r1
    b7ee:	e9 51       	subi	r30, 0x19	; 25
    b7f0:	f4 4f       	sbci	r31, 0xF4	; 244
    b7f2:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
    b7f6:	84 87       	std	Z+12, r24	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
    b7f8:	81 e0       	ldi	r24, 0x01	; 1
    b7fa:	83 87       	std	Z+11, r24	; 0x0b
							_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _sRuble_Parameters.Lora_Data_Rx[9];    /* update valve status data  */
    b7fc:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    b800:	82 87       	std	Z+10, r24	; 0x0a
						}break;
    b802:	55 c0       	rjmp	.+170    	; 0xb8ae <_Z22Update_Euro_Valve_DataPh+0x192>
						
						case _eLOW_BAT_FAULT:
						{
							_sEuro_Valve_Param[valve_number].Faults = _sRuble_Parameters.Lora_Data_Rx[7];    /* update the battery low faults */
    b804:	2d e0       	ldi	r18, 0x0D	; 13
    b806:	2c 9f       	mul	r18, r28
    b808:	f0 01       	movw	r30, r0
    b80a:	2d 9f       	mul	r18, r29
    b80c:	f0 0d       	add	r31, r0
    b80e:	11 24       	eor	r1, r1
    b810:	e9 51       	subi	r30, 0x19	; 25
    b812:	f4 4f       	sbci	r31, 0xF4	; 244
    b814:	94 87       	std	Z+12, r25	; 0x0c
							_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_OFFLINE;
    b816:	13 86       	std	Z+11, r1	; 0x0b
							if(_sRuble_Parameters.Irrigating_Plot == 0) /* if not any plot is irrigating and valve status is still on then off the valve */
    b818:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    b81c:	91 11       	cpse	r25, r1
    b81e:	16 c0       	rjmp	.+44     	; 0xb84c <_Z22Update_Euro_Valve_DataPh+0x130>
							{
								if(_sRuble_Parameters.Debug_Mode == _kSET)
    b820:	81 30       	cpi	r24, 0x01	; 1
    b822:	51 f4       	brne	.+20     	; 0xb838 <_Z22Update_Euro_Valve_DataPh+0x11c>
								{
									_kSERAIL_MON_WRITE_NO_LN("not any plot is irrigating");
    b824:	67 e3       	ldi	r22, 0x37	; 55
    b826:	7f e1       	ldi	r23, 0x1F	; 31
    b828:	8f e6       	ldi	r24, 0x6F	; 111
    b82a:	96 e1       	ldi	r25, 0x16	; 22
    b82c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
									_kSERIAL_MON_CLEAR();
    b830:	8f e6       	ldi	r24, 0x6F	; 111
    b832:	96 e1       	ldi	r25, 0x16	; 22
    b834:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
								}
								
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    b838:	8d e0       	ldi	r24, 0x0D	; 13
    b83a:	8c 9f       	mul	r24, r28
    b83c:	f0 01       	movw	r30, r0
    b83e:	8d 9f       	mul	r24, r29
    b840:	f0 0d       	add	r31, r0
    b842:	11 24       	eor	r1, r1
    b844:	e9 51       	subi	r30, 0x19	; 25
    b846:	f4 4f       	sbci	r31, 0xF4	; 244
    b848:	81 e0       	ldi	r24, 0x01	; 1
    b84a:	02 c0       	rjmp	.+4      	; 0xb850 <_Z22Update_Euro_Valve_DataPh+0x134>
							}
							else
							{
								_sEuro_Valve_Param[valve_number].Euro_Valve_Status   = _sRuble_Parameters.Lora_Data_Rx[9];
    b84c:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    b850:	82 87       	std	Z+10, r24	; 0x0a
							}
							
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b852:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b856:	81 30       	cpi	r24, 0x01	; 1
    b858:	51 f4       	brne	.+20     	; 0xb86e <_Z22Update_Euro_Valve_DataPh+0x152>
							{
								_kSERAIL_MON_WRITE_NO_LN("low battery fault");
    b85a:	65 e2       	ldi	r22, 0x25	; 37
    b85c:	7f e1       	ldi	r23, 0x1F	; 31
    b85e:	8f e6       	ldi	r24, 0x6F	; 111
    b860:	96 e1       	ldi	r25, 0x16	; 22
    b862:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR(); 
    b866:	8f e6       	ldi	r24, 0x6F	; 111
    b868:	96 e1       	ldi	r25, 0x16	; 22
    b86a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							_sGSM_Query.SMS_Alert |= _eEURO_BATT_LOW;
    b86e:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    b872:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    b876:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    b87a:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    b87e:	a4 60       	ori	r26, 0x04	; 4
    b880:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    b884:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    b888:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    b88c:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
						}break;
    b890:	0e c0       	rjmp	.+28     	; 0xb8ae <_Z22Update_Euro_Valve_DataPh+0x192>
						
						default:
						{
							/* Fault not matched */
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    b892:	81 30       	cpi	r24, 0x01	; 1
    b894:	51 f4       	brne	.+20     	; 0xb8aa <_Z22Update_Euro_Valve_DataPh+0x18e>
							{
								_kSERAIL_MON_WRITE("default command ");
    b896:	64 e1       	ldi	r22, 0x14	; 20
    b898:	7f e1       	ldi	r23, 0x1F	; 31
    b89a:	8f e6       	ldi	r24, 0x6F	; 111
    b89c:	96 e1       	ldi	r25, 0x16	; 22
    b89e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    b8a2:	8f e6       	ldi	r24, 0x6F	; 111
    b8a4:	96 e1       	ldi	r25, 0x16	; 22
    b8a6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							return 0;
    b8aa:	80 e0       	ldi	r24, 0x00	; 0
    b8ac:	20 c2       	rjmp	.+1088   	; 0xbcee <_Z22Update_Euro_Valve_DataPh+0x5d2>
						}break;
					}
					
					_sEuro_Valve_Param[valve_number].Euro_Battery_Level  = (_sRuble_Parameters.Lora_Data_Rx[10]<<8) | (_sRuble_Parameters.Lora_Data_Rx[11]);      /* update battery level */
    b8ae:	8d e0       	ldi	r24, 0x0D	; 13
    b8b0:	8c 9f       	mul	r24, r28
    b8b2:	80 01       	movw	r16, r0
    b8b4:	8d 9f       	mul	r24, r29
    b8b6:	10 0d       	add	r17, r0
    b8b8:	11 24       	eor	r1, r1
    b8ba:	09 51       	subi	r16, 0x19	; 25
    b8bc:	14 4f       	sbci	r17, 0xF4	; 244
    b8be:	80 91 ca 15 	lds	r24, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
    b8c2:	90 91 cb 15 	lds	r25, 0x15CB	; 0x8015cb <_sRuble_Parameters+0x66>
    b8c6:	98 27       	eor	r25, r24
    b8c8:	89 27       	eor	r24, r25
    b8ca:	98 27       	eor	r25, r24
    b8cc:	f8 01       	movw	r30, r16
    b8ce:	91 87       	std	Z+9, r25	; 0x09
    b8d0:	80 87       	std	Z+8, r24	; 0x08
					
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    b8d2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    b8d6:	81 30       	cpi	r24, 0x01	; 1
    b8d8:	09 f0       	breq	.+2      	; 0xb8dc <_Z22Update_Euro_Valve_DataPh+0x1c0>
    b8da:	52 c0       	rjmp	.+164    	; 0xb980 <_Z22Update_Euro_Valve_DataPh+0x264>
					{
						_kSERAIL_MON_WRITE_NO_LN("Data recvd From Euro : "); 
    b8dc:	6c ef       	ldi	r22, 0xFC	; 252
    b8de:	7e e1       	ldi	r23, 0x1E	; 30
    b8e0:	8f e6       	ldi	r24, 0x6F	; 111
    b8e2:	96 e1       	ldi	r25, 0x16	; 22
    b8e4:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                         /* for debugging purpose */
    b8e8:	8f e6       	ldi	r24, 0x6F	; 111
    b8ea:	96 e1       	ldi	r25, 0x16	; 22
    b8ec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Number);
    b8f0:	4a e0       	ldi	r20, 0x0A	; 10
    b8f2:	50 e0       	ldi	r21, 0x00	; 0
    b8f4:	d8 01       	movw	r26, r16
    b8f6:	6c 91       	ld	r22, X
    b8f8:	8f e6       	ldi	r24, 0x6F	; 111
    b8fa:	96 e1       	ldi	r25, 0x16	; 22
    b8fc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b900:	8f e6       	ldi	r24, 0x6F	; 111
    b902:	96 e1       	ldi	r25, 0x16	; 22
    b904:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Battery level : ");                                 /* for debugging purpose */
    b908:	6b ee       	ldi	r22, 0xEB	; 235
    b90a:	7e e1       	ldi	r23, 0x1E	; 30
    b90c:	8f e6       	ldi	r24, 0x6F	; 111
    b90e:	96 e1       	ldi	r25, 0x16	; 22
    b910:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Battery_Level);
    b914:	f8 01       	movw	r30, r16
    b916:	60 85       	ldd	r22, Z+8	; 0x08
    b918:	71 85       	ldd	r23, Z+9	; 0x09
    b91a:	4a e0       	ldi	r20, 0x0A	; 10
    b91c:	50 e0       	ldi	r21, 0x00	; 0
    b91e:	8f e6       	ldi	r24, 0x6F	; 111
    b920:	96 e1       	ldi	r25, 0x16	; 22
    b922:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
						_kSERIAL_MON_CLEAR();
    b926:	8f e6       	ldi	r24, 0x6F	; 111
    b928:	96 e1       	ldi	r25, 0x16	; 22
    b92a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERAIL_MON_WRITE_NO_LN("Euro online/offline : ");      
    b92e:	64 ed       	ldi	r22, 0xD4	; 212
    b930:	7e e1       	ldi	r23, 0x1E	; 30
    b932:	8f e6       	ldi	r24, 0x6F	; 111
    b934:	96 e1       	ldi	r25, 0x16	; 22
    b936:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                     /* for debugging purpose */
    b93a:	8f e6       	ldi	r24, 0x6F	; 111
    b93c:	96 e1       	ldi	r25, 0x16	; 22
    b93e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Online);
    b942:	4a e0       	ldi	r20, 0x0A	; 10
    b944:	50 e0       	ldi	r21, 0x00	; 0
    b946:	d8 01       	movw	r26, r16
    b948:	1b 96       	adiw	r26, 0x0b	; 11
    b94a:	6c 91       	ld	r22, X
    b94c:	8f e6       	ldi	r24, 0x6F	; 111
    b94e:	96 e1       	ldi	r25, 0x16	; 22
    b950:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						_kSERAIL_MON_WRITE_NO_LN("Euro status : "); 
    b954:	65 ec       	ldi	r22, 0xC5	; 197
    b956:	7e e1       	ldi	r23, 0x1E	; 30
    b958:	8f e6       	ldi	r24, 0x6F	; 111
    b95a:	96 e1       	ldi	r25, 0x16	; 22
    b95c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();                                  /* for debugging purpose */
    b960:	8f e6       	ldi	r24, 0x6F	; 111
    b962:	96 e1       	ldi	r25, 0x16	; 22
    b964:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						_kSERIAL_MON_PRINT_NUM(_sEuro_Valve_Param[valve_number].Euro_Valve_Status);
    b968:	4a e0       	ldi	r20, 0x0A	; 10
    b96a:	50 e0       	ldi	r21, 0x00	; 0
    b96c:	f8 01       	movw	r30, r16
    b96e:	62 85       	ldd	r22, Z+10	; 0x0a
    b970:	8f e6       	ldi	r24, 0x6F	; 111
    b972:	96 e1       	ldi	r25, 0x16	; 22
    b974:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
						_kSERIAL_MON_CLEAR();
    b978:	8f e6       	ldi	r24, 0x6F	; 111
    b97a:	96 e1       	ldi	r25, 0x16	; 22
    b97c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    b980:	84 e1       	ldi	r24, 0x14	; 20
    b982:	ec ea       	ldi	r30, 0xAC	; 172
    b984:	f5 e1       	ldi	r31, 0x15	; 21
    b986:	df 01       	movw	r26, r30
    b988:	1d 92       	st	X+, r1
    b98a:	8a 95       	dec	r24
    b98c:	e9 f7       	brne	.-6      	; 0xb988 <_Z22Update_Euro_Valve_DataPh+0x26c>
    b98e:	8f 01       	movw	r16, r30
    b990:	8d e0       	ldi	r24, 0x0D	; 13
    b992:	8c 9f       	mul	r24, r28
    b994:	a0 01       	movw	r20, r0
    b996:	8d 9f       	mul	r24, r29
    b998:	50 0d       	add	r21, r0
    b99a:	11 24       	eor	r1, r1
    b99c:	df 01       	movw	r26, r30
    b99e:	80 e0       	ldi	r24, 0x00	; 0
    b9a0:	90 e0       	ldi	r25, 0x00	; 0
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
    b9a2:	fa 01       	movw	r30, r20
    b9a4:	e8 0f       	add	r30, r24
    b9a6:	f9 1f       	adc	r31, r25
    b9a8:	e9 51       	subi	r30, 0x19	; 25
    b9aa:	f4 4f       	sbci	r31, 0xF4	; 244
    b9ac:	21 81       	ldd	r18, Z+1	; 0x01
    b9ae:	2d 93       	st	X+, r18
    b9b0:	01 96       	adiw	r24, 0x01	; 1
						_kSERIAL_MON_CLEAR();
					}
					/*********************************** make the ack packet ***************************************/
					memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
					
					for(i=0;i<_kVALVE_ID_LEN;i++)
    b9b2:	86 30       	cpi	r24, 0x06	; 6
    b9b4:	91 05       	cpc	r25, r1
    b9b6:	a9 f7       	brne	.-22     	; 0xb9a2 <_Z22Update_Euro_Valve_DataPh+0x286>
					{
						_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_ID[i];   /* copy the id */
					}
					_sRuble_Parameters.Lora_Data_TX[count++] = _eEURO_VALVE_FAULT_DATA;
    b9b8:	81 e0       	ldi	r24, 0x01	; 1
    b9ba:	80 93 b2 15 	sts	0x15B2, r24	; 0x8015b2 <_sRuble_Parameters+0x4d>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sRuble_Parameters.Lora_Data_Rx[7];
    b9be:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
    b9c2:	80 93 b3 15 	sts	0x15B3, r24	; 0x8015b3 <_sRuble_Parameters+0x4e>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
    b9c6:	8d e0       	ldi	r24, 0x0D	; 13
    b9c8:	8c 9f       	mul	r24, r28
    b9ca:	f0 01       	movw	r30, r0
    b9cc:	8d 9f       	mul	r24, r29
    b9ce:	f0 0d       	add	r31, r0
    b9d0:	11 24       	eor	r1, r1
    b9d2:	e9 51       	subi	r30, 0x19	; 25
    b9d4:	f4 4f       	sbci	r31, 0xF4	; 244
    b9d6:	83 85       	ldd	r24, Z+11	; 0x0b
    b9d8:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
			switch(_sRuble_Parameters.Lora_Data_TX[6])
			{
				case _eEURO_VALVE_FAULT_DATA:
				case _eVALVE_OFFLINE_FAULT:
				{
					_sRuble_Parameters.Last_Valve = valve_number;   /* update last valve number to publish the data */
    b9dc:	f0 92 17 16 	sts	0x1617, r15	; 0x801617 <_sRuble_Parameters+0xb2>
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
    b9e0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    b9e4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    b9e8:	80 68       	ori	r24, 0x80	; 128
    b9ea:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    b9ee:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
					Euro_Data_EEPROM(valve_number);
    b9f2:	8f 2d       	mov	r24, r15
    b9f4:	17 de       	rcall	.-978    	; 0xb624 <_Z16Euro_Data_EEPROMh>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
    b9f6:	40 91 d5 15 	lds	r20, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    b9fa:	ce 01       	movw	r24, r28
    b9fc:	88 0f       	add	r24, r24
    b9fe:	99 1f       	adc	r25, r25
    ba00:	44 23       	and	r20, r20
    ba02:	09 f4       	brne	.+2      	; 0xba06 <_Z22Update_Euro_Valve_DataPh+0x2ea>
    ba04:	94 c0       	rjmp	.+296    	; 0xbb2e <_Z22Update_Euro_Valve_DataPh+0x412>
    ba06:	9c 01       	movw	r18, r24
    ba08:	2c 0f       	add	r18, r28
    ba0a:	3d 1f       	adc	r19, r29
    ba0c:	2f 5f       	subi	r18, 0xFF	; 255
    ba0e:	3f 4f       	sbci	r19, 0xFF	; 255
    ba10:	b6 e0       	ldi	r27, 0x06	; 6
    ba12:	4b 9f       	mul	r20, r27
    ba14:	a0 01       	movw	r20, r0
    ba16:	11 24       	eor	r1, r1
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    ba18:	e3 e0       	ldi	r30, 0x03	; 3
    ba1a:	1b c0       	rjmp	.+54     	; 0xba52 <_Z22Update_Euro_Valve_DataPh+0x336>
					_sRuble_Parameters.Lora_Data_TX[count++] = _sEuro_Valve_Param[valve_number].Euro_Valve_Online;
				}break;
				
				default:
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba1c:	81 30       	cpi	r24, 0x01	; 1
    ba1e:	09 f0       	breq	.+2      	; 0xba22 <_Z22Update_Euro_Valve_DataPh+0x306>
    ba20:	44 cf       	rjmp	.-376    	; 0xb8aa <_Z22Update_Euro_Valve_DataPh+0x18e>
					{
						_kSERAIL_MON_WRITE("EURO PACKET IS NOT APPLICABLE");
    ba22:	67 ea       	ldi	r22, 0xA7	; 167
    ba24:	7e e1       	ldi	r23, 0x1E	; 30
    ba26:	39 cf       	rjmp	.-398    	; 0xb89a <_Z22Update_Euro_Valve_DataPh+0x17e>
    ba28:	da 01       	movw	r26, r20
    ba2a:	a6 0f       	add	r26, r22
    ba2c:	b7 1f       	adc	r27, r23
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    ba2e:	a8 50       	subi	r26, 0x08	; 8
    ba30:	b3 4f       	sbci	r27, 0xF3	; 243
    ba32:	ac 91       	ld	r26, X
    ba34:	b0 e0       	ldi	r27, 0x00	; 0
    ba36:	a2 17       	cp	r26, r18
    ba38:	b3 07       	cpc	r27, r19
    ba3a:	71 f0       	breq	.+28     	; 0xba58 <_Z22Update_Euro_Valve_DataPh+0x33c>
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    ba3c:	6f 5f       	subi	r22, 0xFF	; 255
    ba3e:	7f 4f       	sbci	r23, 0xFF	; 255
    ba40:	65 30       	cpi	r22, 0x05	; 5
    ba42:	71 05       	cpc	r23, r1
    ba44:	89 f7       	brne	.-30     	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x30c>
    ba46:	e1 50       	subi	r30, 0x01	; 1
    ba48:	2f 5f       	subi	r18, 0xFF	; 255
    ba4a:	3f 4f       	sbci	r19, 0xFF	; 255
					_sRuble_Parameters.Publish_Topic |= _ePUB_EURO_VALVE_DATA;  /* update the publish data for server */
					Euro_Data_EEPROM(valve_number);
					
					if(_sRuble_Parameters.Irrigating_Plot)   /* if plot is irrigating then stop the irrigation */
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    ba4c:	ee 23       	and	r30, r30
    ba4e:	09 f4       	brne	.+2      	; 0xba52 <_Z22Update_Euro_Valve_DataPh+0x336>
    ba50:	6e c0       	rjmp	.+220    	; 0xbb2e <_Z22Update_Euro_Valve_DataPh+0x412>
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sLira_Node_Param[_sRuble_Parameters.Irrigating_Plot-1].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    ba52:	60 e0       	ldi	r22, 0x00	; 0
    ba54:	70 e0       	ldi	r23, 0x00	; 0
    ba56:	e8 cf       	rjmp	.-48     	; 0xba28 <_Z22Update_Euro_Valve_DataPh+0x30c>
								{
									/********* if valve is on and there is some fault then stop the irrigation process **********/
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    ba58:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ba5c:	81 30       	cpi	r24, 0x01	; 1
    ba5e:	51 f4       	brne	.+20     	; 0xba74 <_Z22Update_Euro_Valve_DataPh+0x358>
									{
										_kSERAIL_MON_WRITE("valve fault occure please turn off the pump");
    ba60:	6b e7       	ldi	r22, 0x7B	; 123
    ba62:	7e e1       	ldi	r23, 0x1E	; 30
    ba64:	8f e6       	ldi	r24, 0x6F	; 111
    ba66:	96 e1       	ldi	r25, 0x16	; 22
    ba68:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
										_kSERIAL_MON_CLEAR();
    ba6c:	8f e6       	ldi	r24, 0x6F	; 111
    ba6e:	96 e1       	ldi	r25, 0x16	; 22
    ba70:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
									}
									_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_SUSPENDED;   // suspend the operation if fault occur in running valve
    ba74:	81 e0       	ldi	r24, 0x01	; 1
    ba76:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
									// turn off the pump immediately
									if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    ba7a:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    ba7e:	81 11       	cpse	r24, r1
    ba80:	13 c0       	rjmp	.+38     	; 0xbaa8 <_Z22Update_Euro_Valve_DataPh+0x38c>
									{
										if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    ba82:	8a e0       	ldi	r24, 0x0A	; 10
    ba84:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    ba88:	01 97       	sbiw	r24, 0x01	; 1
    ba8a:	21 f0       	breq	.+8      	; 0xba94 <_Z22Update_Euro_Valve_DataPh+0x378>
										{
											_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    ba8c:	61 e0       	ldi	r22, 0x01	; 1
    ba8e:	8a e0       	ldi	r24, 0x0A	; 10
    ba90:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
										}
										
										if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    ba94:	8b e0       	ldi	r24, 0x0B	; 11
    ba96:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    ba9a:	01 97       	sbiw	r24, 0x01	; 1
    ba9c:	71 f1       	breq	.+92     	; 0xbafa <_Z22Update_Euro_Valve_DataPh+0x3de>
										{
											_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    ba9e:	61 e0       	ldi	r22, 0x01	; 1
    baa0:	8b e0       	ldi	r24, 0x0B	; 11
    baa2:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    baa6:	29 c0       	rjmp	.+82     	; 0xbafa <_Z22Update_Euro_Valve_DataPh+0x3de>
										}
									}
									else
									{
										if(_sRuble_Parameters.Debug_Mode == _kSET)
    baa8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    baac:	81 30       	cpi	r24, 0x01	; 1
    baae:	51 f4       	brne	.+20     	; 0xbac4 <_Z22Update_Euro_Valve_DataPh+0x3a8>
										{
											_kSERAIL_MON_WRITE("wl pump trigger 11111111111111111111");
    bab0:	66 e5       	ldi	r22, 0x56	; 86
    bab2:	7e e1       	ldi	r23, 0x1E	; 30
    bab4:	8f e6       	ldi	r24, 0x6F	; 111
    bab6:	96 e1       	ldi	r25, 0x16	; 22
    bab8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											_kSERIAL_MON_CLEAR();
    babc:	8f e6       	ldi	r24, 0x6F	; 111
    babe:	96 e1       	ldi	r25, 0x16	; 22
    bac0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
										}
										if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bac4:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    bac8:	62 50       	subi	r22, 0x02	; 2
    baca:	84 e0       	ldi	r24, 0x04	; 4
    bacc:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
    bad0:	81 11       	cpse	r24, r1
    bad2:	10 c0       	rjmp	.+32     	; 0xbaf4 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
										}
										else
										{
											if(_sRuble_Parameters.Irrigating_Plot == _kRESET 
    bad4:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    bad8:	81 11       	cpse	r24, r1
    bada:	0c c0       	rjmp	.+24     	; 0xbaf4 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    badc:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    bae0:	81 30       	cpi	r24, 0x01	; 1
    bae2:	41 f0       	breq	.+16     	; 0xbaf4 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bae4:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
    bae8:	81 30       	cpi	r24, 0x01	; 1
    baea:	21 f0       	breq	.+8      	; 0xbaf4 <_Z22Update_Euro_Valve_DataPh+0x3d8>
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    baec:	81 e0       	ldi	r24, 0x01	; 1
    baee:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
    baf2:	02 c0       	rjmp	.+4      	; 0xbaf8 <_Z22Update_Euro_Valve_DataPh+0x3dc>
											}
											else
											{
												_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;	
    baf4:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
											}
											_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    baf8:	7e dd       	rcall	.-1284   	; 0xb5f6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
										}
									}				
									_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bafa:	8d e0       	ldi	r24, 0x0D	; 13
    bafc:	8c 9f       	mul	r24, r28
    bafe:	f0 01       	movw	r30, r0
    bb00:	8d 9f       	mul	r24, r29
    bb02:	f0 0d       	add	r31, r0
    bb04:	11 24       	eor	r1, r1
    bb06:	e9 51       	subi	r30, 0x19	; 25
    bb08:	f4 4f       	sbci	r31, 0xF4	; 244
    bb0a:	91 e0       	ldi	r25, 0x01	; 1
    bb0c:	92 87       	std	Z+10, r25	; 0x0a
									_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bb0e:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
									_gfault_Occure = _kFAULT_RESET_TIMER;
    bb12:	84 e6       	ldi	r24, 0x64	; 100
    bb14:	90 e0       	ldi	r25, 0x00	; 0
    bb16:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    bb1a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
									if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb1e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bb22:	81 30       	cpi	r24, 0x01	; 1
    bb24:	09 f0       	breq	.+2      	; 0xbb28 <_Z22Update_Euro_Valve_DataPh+0x40c>
    bb26:	9b c0       	rjmp	.+310    	; 0xbc5e <_Z22Update_Euro_Valve_DataPh+0x542>
									{
										_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW");
    bb28:	63 e4       	ldi	r22, 0x43	; 67
    bb2a:	7e e1       	ldi	r23, 0x1E	; 30
    bb2c:	94 c0       	rjmp	.+296    	; 0xbc56 <_Z22Update_Euro_Valve_DataPh+0x53a>
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bb2e:	8c 0f       	add	r24, r28
    bb30:	9d 1f       	adc	r25, r29
    bb32:	ef e9       	ldi	r30, 0x9F	; 159
    bb34:	ff e0       	ldi	r31, 0x0F	; 15
    bb36:	20 e0       	ldi	r18, 0x00	; 0
    bb38:	30 e0       	ldi	r19, 0x00	; 0
    bb3a:	7c 01       	movw	r14, r24
    bb3c:	44 e0       	ldi	r20, 0x04	; 4
    bb3e:	e4 0e       	add	r14, r20
    bb40:	f1 1c       	adc	r15, r1
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
    bb42:	41 81       	ldd	r20, Z+1	; 0x01
    bb44:	44 23       	and	r20, r20
    bb46:	09 f4       	brne	.+2      	; 0xbb4a <_Z22Update_Euro_Valve_DataPh+0x42e>
    bb48:	a0 c0       	rjmp	.+320    	; 0xbc8a <_Z22Update_Euro_Valve_DataPh+0x56e>
    bb4a:	ac 01       	movw	r20, r24
    bb4c:	4f 5f       	subi	r20, 0xFF	; 255
    bb4e:	5f 4f       	sbci	r21, 0xFF	; 255
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
							{
								if(_sExtra_Plot[check_plot].Euro_Valve_Group[wireless_valve_num] == (valve_number*3) + (port_number+1))
    bb50:	60 e0       	ldi	r22, 0x00	; 0
    bb52:	70 e0       	ldi	r23, 0x00	; 0
    bb54:	df 01       	movw	r26, r30
    bb56:	a6 0f       	add	r26, r22
    bb58:	b7 1f       	adc	r27, r23
    bb5a:	15 96       	adiw	r26, 0x05	; 5
    bb5c:	ac 91       	ld	r26, X
    bb5e:	b0 e0       	ldi	r27, 0x00	; 0
    bb60:	a4 17       	cp	r26, r20
    bb62:	b5 07       	cpc	r27, r21
    bb64:	09 f0       	breq	.+2      	; 0xbb68 <_Z22Update_Euro_Valve_DataPh+0x44c>
    bb66:	85 c0       	rjmp	.+266    	; 0xbc72 <_Z22Update_Euro_Valve_DataPh+0x556>
								{
									if(_sExtra_Plot[check_plot].On_Off_Status == _kSET || _sExtra_Plot[check_plot].Auto_Operation == _kSET)
    bb68:	a0 81       	ld	r26, Z
    bb6a:	a1 11       	cpse	r26, r1
    bb6c:	04 c0       	rjmp	.+8      	; 0xbb76 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bb6e:	a1 8d       	ldd	r26, Z+25	; 0x19
    bb70:	a1 30       	cpi	r26, 0x01	; 1
    bb72:	09 f0       	breq	.+2      	; 0xbb76 <_Z22Update_Euro_Valve_DataPh+0x45a>
    bb74:	7e c0       	rjmp	.+252    	; 0xbc72 <_Z22Update_Euro_Valve_DataPh+0x556>
									{
										if((check_plot+_kEXTRA_PLOT_START_FROM) == _kFOOGER_PLOT_NUMBER)
    bb76:	23 30       	cpi	r18, 0x03	; 3
    bb78:	31 05       	cpc	r19, r1
    bb7a:	09 f0       	breq	.+2      	; 0xbb7e <_Z22Update_Euro_Valve_DataPh+0x462>
    bb7c:	7a c0       	rjmp	.+244    	; 0xbc72 <_Z22Update_Euro_Valve_DataPh+0x556>
										{
											/********* if valve is on and there is some fault then stop the irrigation process **********/
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bb7e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bb82:	81 30       	cpi	r24, 0x01	; 1
    bb84:	51 f4       	brne	.+20     	; 0xbb9a <_Z22Update_Euro_Valve_DataPh+0x47e>
											{
												_kSERAIL_MON_WRITE("fogger: valve fault occure please turn off the pump");
    bb86:	6f e0       	ldi	r22, 0x0F	; 15
    bb88:	7e e1       	ldi	r23, 0x1E	; 30
    bb8a:	8f e6       	ldi	r24, 0x6F	; 111
    bb8c:	96 e1       	ldi	r25, 0x16	; 22
    bb8e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
												_kSERIAL_MON_CLEAR();	
    bb92:	8f e6       	ldi	r24, 0x6F	; 111
    bb94:	96 e1       	ldi	r25, 0x16	; 22
    bb96:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
											}
											if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    bb9a:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    bb9e:	81 11       	cpse	r24, r1
    bba0:	13 c0       	rjmp	.+38     	; 0xbbc8 <_Z22Update_Euro_Valve_DataPh+0x4ac>
											{
												if(_kGPIO_GET(_kPUMP_1) != _kPUMP_OFF)     /* check weather pump is already Off */
    bba2:	8a e0       	ldi	r24, 0x0A	; 10
    bba4:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    bba8:	01 97       	sbiw	r24, 0x01	; 1
    bbaa:	21 f0       	breq	.+8      	; 0xbbb4 <_Z22Update_Euro_Valve_DataPh+0x498>
												{
													_kGPIO_SET(_kPUMP_1,_kPUMP_OFF);      /* turn Off the pump */
    bbac:	61 e0       	ldi	r22, 0x01	; 1
    bbae:	8a e0       	ldi	r24, 0x0A	; 10
    bbb0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
												}
												
												if(_kGPIO_GET(_kPUMP_2) != _kPUMP_OFF)     /* check weather pump is already Off */
    bbb4:	8b e0       	ldi	r24, 0x0B	; 11
    bbb6:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    bbba:	01 97       	sbiw	r24, 0x01	; 1
    bbbc:	71 f1       	breq	.+92     	; 0xbc1a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												{
													_kGPIO_SET(_kPUMP_2,_kPUMP_OFF);      /* turn Off the pump */
    bbbe:	61 e0       	ldi	r22, 0x01	; 1
    bbc0:	8b e0       	ldi	r24, 0x0B	; 11
    bbc2:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    bbc6:	29 c0       	rjmp	.+82     	; 0xbc1a <_Z22Update_Euro_Valve_DataPh+0x4fe>
												}
											}
											else
											{
												if(_sRuble_Parameters.Debug_Mode == _kSET)
    bbc8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bbcc:	81 30       	cpi	r24, 0x01	; 1
    bbce:	51 f4       	brne	.+20     	; 0xbbe4 <_Z22Update_Euro_Valve_DataPh+0x4c8>
												{
													_kSERAIL_MON_WRITE("wl pump trigger 000000000000000000");
    bbd0:	6c ee       	ldi	r22, 0xEC	; 236
    bbd2:	7d e1       	ldi	r23, 0x1D	; 29
    bbd4:	8f e6       	ldi	r24, 0x6F	; 111
    bbd6:	96 e1       	ldi	r25, 0x16	; 22
    bbd8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
													_kSERIAL_MON_CLEAR();
    bbdc:	8f e6       	ldi	r24, 0x6F	; 111
    bbde:	96 e1       	ldi	r25, 0x16	; 22
    bbe0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
												}
												if(Wireless_Pump_On_Off(_ePUMP_OFF,_sRuble_Parameters.Pump_Selected_For_Irrigation -2))
    bbe4:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    bbe8:	62 50       	subi	r22, 0x02	; 2
    bbea:	84 e0       	ldi	r24, 0x04	; 4
    bbec:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
    bbf0:	81 11       	cpse	r24, r1
    bbf2:	10 c0       	rjmp	.+32     	; 0xbc14 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
												}
												else
												{
													if(_sRuble_Parameters.Irrigating_Plot == _kRESET
    bbf4:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    bbf8:	81 11       	cpse	r24, r1
    bbfa:	0c c0       	rjmp	.+24     	; 0xbc14 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation  !=_kSET
    bbfc:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    bc00:	81 30       	cpi	r24, 0x01	; 1
    bc02:	41 f0       	breq	.+16     	; 0xbc14 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													&& _sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation !=_kSET)
    bc04:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
    bc08:	81 30       	cpi	r24, 0x01	; 1
    bc0a:	21 f0       	breq	.+8      	; 0xbc14 <_Z22Update_Euro_Valve_DataPh+0x4f8>
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kON;
    bc0c:	81 e0       	ldi	r24, 0x01	; 1
    bc0e:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
    bc12:	02 c0       	rjmp	.+4      	; 0xbc18 <_Z22Update_Euro_Valve_DataPh+0x4fc>
													}
													else
													{
														_sRuble_Parameters.Wirelss_Pump_Status = _kOFF;
    bc14:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
													}
													_kEEPROM_WRITE(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    bc18:	ee dc       	rcall	.-1572   	; 0xb5f6 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.0.constprop.3>
												}
											}
											_sExtra_Plot[check_plot].Run_Timer = _kRESET;
    bc1a:	10 92 f4 0f 	sts	0x0FF4, r1	; 0x800ff4 <_sExtra_Plot+0x55>
    bc1e:	10 92 f3 0f 	sts	0x0FF3, r1	; 0x800ff3 <_sExtra_Plot+0x54>
											_sExtra_Plot[check_plot].One_Touch = _kRESET;					
    bc22:	10 92 fa 0f 	sts	0x0FFA, r1	; 0x800ffa <_sExtra_Plot+0x5b>
											_sEuro_Valve_Param[valve_number].Euro_Valve_Status = _kVALVE_OFF;
    bc26:	8d e0       	ldi	r24, 0x0D	; 13
    bc28:	8c 9f       	mul	r24, r28
    bc2a:	f0 01       	movw	r30, r0
    bc2c:	8d 9f       	mul	r24, r29
    bc2e:	f0 0d       	add	r31, r0
    bc30:	11 24       	eor	r1, r1
    bc32:	e9 51       	subi	r30, 0x19	; 25
    bc34:	f4 4f       	sbci	r31, 0xF4	; 244
    bc36:	91 e0       	ldi	r25, 0x01	; 1
    bc38:	92 87       	std	Z+10, r25	; 0x0a
											_sPump_Parameter.Irrigation_Status = _eEURO_BATTERY_LOW;
    bc3a:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
											_gfault_Occure = _kFAULT_RESET_TIMER;
    bc3e:	84 e6       	ldi	r24, 0x64	; 100
    bc40:	90 e0       	ldi	r25, 0x00	; 0
    bc42:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    bc46:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
											if(_sRuble_Parameters.Debug_Mode == _kSET)
    bc4a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bc4e:	81 30       	cpi	r24, 0x01	; 1
    bc50:	31 f4       	brne	.+12     	; 0xbc5e <_Z22Update_Euro_Valve_DataPh+0x542>
											{
												_kSERAIL_MON_WRITE("_eEURO_BATTERY_LOW 1 ");
    bc52:	66 ed       	ldi	r22, 0xD6	; 214
    bc54:	7d e1       	ldi	r23, 0x1D	; 29
    bc56:	8f e6       	ldi	r24, 0x6F	; 111
    bc58:	96 e1       	ldi	r25, 0x16	; 22
    bc5a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
											}
											_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    bc5e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    bc62:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    bc66:	82 60       	ori	r24, 0x02	; 2
    bc68:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    bc6c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    bc70:	34 c0       	rjmp	.+104    	; 0xbcda <_Z22Update_Euro_Valve_DataPh+0x5be>
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
						{
							for(unsigned int wireless_valve_num=0; wireless_valve_num<_kMAX_VALVE_FOR_1PLOT; wireless_valve_num++)
    bc72:	6f 5f       	subi	r22, 0xFF	; 255
    bc74:	7f 4f       	sbci	r23, 0xFF	; 255
    bc76:	65 30       	cpi	r22, 0x05	; 5
    bc78:	71 05       	cpc	r23, r1
    bc7a:	09 f0       	breq	.+2      	; 0xbc7e <_Z22Update_Euro_Valve_DataPh+0x562>
    bc7c:	6b cf       	rjmp	.-298    	; 0xbb54 <_Z22Update_Euro_Valve_DataPh+0x438>
    bc7e:	4f 5f       	subi	r20, 0xFF	; 255
    bc80:	5f 4f       	sbci	r21, 0xFF	; 255
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
				{
					if(_sExtra_Plot[check_plot].Extra_Plot_Number)
					{
						for(unsigned char port_number =0 ; port_number < _kNUMBER_OF_VALVE_CONNECT_TO_EURO; port_number++)
    bc82:	4e 15       	cp	r20, r14
    bc84:	5f 05       	cpc	r21, r15
    bc86:	09 f0       	breq	.+2      	; 0xbc8a <_Z22Update_Euro_Valve_DataPh+0x56e>
    bc88:	63 cf       	rjmp	.-314    	; 0xbb50 <_Z22Update_Euro_Valve_DataPh+0x434>
								}
							}
						}
					}
				
				for(unsigned int check_plot=0; check_plot<_kMAX_EXTRA_PLOT; check_plot++)
    bc8a:	2f 5f       	subi	r18, 0xFF	; 255
    bc8c:	3f 4f       	sbci	r19, 0xFF	; 255
    bc8e:	7b 96       	adiw	r30, 0x1b	; 27
    bc90:	2e 30       	cpi	r18, 0x0E	; 14
    bc92:	31 05       	cpc	r19, r1
    bc94:	09 f0       	breq	.+2      	; 0xbc98 <_Z22Update_Euro_Valve_DataPh+0x57c>
    bc96:	55 cf       	rjmp	.-342    	; 0xbb42 <_Z22Update_Euro_Valve_DataPh+0x426>
							}
						}						
					}
				}
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    bc98:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bc9c:	81 30       	cpi	r24, 0x01	; 1
    bc9e:	c9 f4       	brne	.+50     	; 0xbcd2 <_Z22Update_Euro_Valve_DataPh+0x5b6>
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
    bca0:	62 ec       	ldi	r22, 0xC2	; 194
    bca2:	7d e1       	ldi	r23, 0x1D	; 29
    bca4:	8f e6       	ldi	r24, 0x6F	; 111
    bca6:	96 e1       	ldi	r25, 0x16	; 22
    bca8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    bcac:	8f e6       	ldi	r24, 0x6F	; 111
    bcae:	96 e1       	ldi	r25, 0x16	; 22
    bcb0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    bcb4:	c5 eb       	ldi	r28, 0xB5	; 181
    bcb6:	d5 e1       	ldi	r29, 0x15	; 21
					for(int k =0; k<count; k++)
    bcb8:	c0 17       	cp	r28, r16
    bcba:	d1 07       	cpc	r29, r17
    bcbc:	51 f0       	breq	.+20     	; 0xbcd2 <_Z22Update_Euro_Valve_DataPh+0x5b6>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
    bcbe:	d8 01       	movw	r26, r16
    bcc0:	6d 91       	ld	r22, X+
    bcc2:	8d 01       	movw	r16, r26
    bcc4:	4a e0       	ldi	r20, 0x0A	; 10
    bcc6:	50 e0       	ldi	r21, 0x00	; 0
    bcc8:	8f e6       	ldi	r24, 0x6F	; 111
    bcca:	96 e1       	ldi	r25, 0x16	; 22
    bccc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
				 {
					_kSERAIL_MON_WRITE("ACK0 SEND TO VALVE ");
					_kSERIAL_MON_CLEAR();
					for(int k =0; k<count; k++)
    bcd0:	f3 cf       	rjmp	.-26     	; 0xbcb8 <_Z22Update_Euro_Valve_DataPh+0x59c>
					{
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
    bcd2:	8f e6       	ldi	r24, 0x6F	; 111
    bcd4:	96 e1       	ldi	r25, 0x16	; 22
    bcd6:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
					_kLORA_SEND_DATA(count);
    bcda:	89 e0       	ldi	r24, 0x09	; 9
    bcdc:	a2 d7       	rcall	.+3908   	; 0xcc22 <_Z14Lora_Data_Sendh>
					}
					_kLORA_SEND_DATA(count);
					_sEuro_Valve_Param[valve_number].Euro_Valve_Online = _kVALVE_ONLINE;
				}break;
			}
			return 1;
    bcde:	81 e0       	ldi	r24, 0x01	; 1
						_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Lora_Data_TX[k]);
					}
				 }
					_kSERIAL_MON_PRINT_NUM();
					_kLORA_SEND_DATA(count);
				}break;
    bce0:	06 c0       	rjmp	.+12     	; 0xbcee <_Z22Update_Euro_Valve_DataPh+0x5d2>
    bce2:	21 96       	adiw	r28, 0x01	; 1
bool Update_Euro_Valve_Data(unsigned char *temp_id)
{
	unsigned char valve_number=0,i=0,count =0,id_len;
	_sWireless_Pump_Param[0].Wireless_Pump_Number = 1;
	
	for(valve_number=0; valve_number < _kMAX_EURO_VALVE; valve_number++)
    bce4:	c4 30       	cpi	r28, 0x04	; 4
    bce6:	d1 05       	cpc	r29, r1
    bce8:	09 f0       	breq	.+2      	; 0xbcec <_Z22Update_Euro_Valve_DataPh+0x5d0>
    bcea:	25 cd       	rjmp	.-1462   	; 0xb736 <_Z22Update_Euro_Valve_DataPh+0x1a>
    bcec:	de cd       	rjmp	.-1092   	; 0xb8aa <_Z22Update_Euro_Valve_DataPh+0x18e>
			}
			return 1;
		}
	}
	return 0;
}
    bcee:	df 91       	pop	r29
    bcf0:	cf 91       	pop	r28
    bcf2:	1f 91       	pop	r17
    bcf4:	0f 91       	pop	r16
    bcf6:	ff 90       	pop	r15
    bcf8:	ef 90       	pop	r14
    bcfa:	08 95       	ret

0000bcfc <_Z25Update_Wireless_Pump_DataPh>:
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bcfc:	1f 93       	push	r17
    bcfe:	cf 93       	push	r28
    bd00:	df 93       	push	r29
    bd02:	dc 01       	movw	r26, r24
    bd04:	20 e0       	ldi	r18, 0x00	; 0
    bd06:	30 e0       	ldi	r19, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bd08:	8b e0       	ldi	r24, 0x0B	; 11
	_kEEPROM_WRITE(_kEEPROM_LOC_EURO_VALVE_DATA(valve_number), _sEuro_Valve_Param[valve_number]);
	return;
}

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
    bd0a:	40 e0       	ldi	r20, 0x00	; 0
    bd0c:	90 e0       	ldi	r25, 0x00	; 0
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
    bd0e:	82 9f       	mul	r24, r18
    bd10:	f0 01       	movw	r30, r0
    bd12:	83 9f       	mul	r24, r19
    bd14:	f0 0d       	add	r31, r0
    bd16:	11 24       	eor	r1, r1
    bd18:	ea 53       	subi	r30, 0x3A	; 58
    bd1a:	f4 4f       	sbci	r31, 0xF4	; 244
    bd1c:	69 2f       	mov	r22, r25
    bd1e:	70 e0       	ldi	r23, 0x00	; 0
    bd20:	ed 01       	movw	r28, r26
    bd22:	c6 0f       	add	r28, r22
    bd24:	d7 1f       	adc	r29, r23
    bd26:	6e 0f       	add	r22, r30
    bd28:	7f 1f       	adc	r23, r31
    bd2a:	18 81       	ld	r17, Y
    bd2c:	eb 01       	movw	r28, r22
    bd2e:	59 81       	ldd	r21, Y+1	; 0x01
    bd30:	15 17       	cp	r17, r21
    bd32:	11 f0       	breq	.+4      	; 0xbd38 <_Z25Update_Wireless_Pump_DataPh+0x3c>
			{
				i = _kVALVE_ID_LEN;
				id_len = _kRESET;
    bd34:	40 e0       	ldi	r20, 0x00	; 0
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
		{
			if(temp_id[i] != _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i])
			{
				i = _kVALVE_ID_LEN;
    bd36:	96 e0       	ldi	r25, 0x06	; 6
				id_len = _kRESET;
			}
			
			id_len++;
    bd38:	4f 5f       	subi	r20, 0xFF	; 255
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
	{
		/***************************** compare the id first ***********************************************/
		id_len = _kRESET;
		for(i=0;i<_kVALVE_ID_LEN;i++)
    bd3a:	9f 5f       	subi	r25, 0xFF	; 255
    bd3c:	96 30       	cpi	r25, 0x06	; 6
    bd3e:	70 f3       	brcs	.-36     	; 0xbd1c <_Z25Update_Wireless_Pump_DataPh+0x20>
			}
			
			id_len++;
		}
		count = 0;
		if(id_len == _kVALVE_ID_LEN)
    bd40:	46 30       	cpi	r20, 0x06	; 6
    bd42:	09 f0       	breq	.+2      	; 0xbd46 <_Z25Update_Wireless_Pump_DataPh+0x4a>
    bd44:	59 c0       	rjmp	.+178    	; 0xbdf8 <_Z25Update_Wireless_Pump_DataPh+0xfc>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    bd46:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    bd4a:	81 30       	cpi	r24, 0x01	; 1
    bd4c:	51 f4       	brne	.+20     	; 0xbd62 <_Z25Update_Wireless_Pump_DataPh+0x66>
			{
				_kSERAIL_MON_WRITE("WIRELESS PUMP DATA RECIEVED");
    bd4e:	66 ea       	ldi	r22, 0xA6	; 166
    bd50:	7d e1       	ldi	r23, 0x1D	; 29
    bd52:	8f e6       	ldi	r24, 0x6F	; 111
    bd54:	96 e1       	ldi	r25, 0x16	; 22
    bd56:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    bd5a:	8f e6       	ldi	r24, 0x6F	; 111
    bd5c:	96 e1       	ldi	r25, 0x16	; 22
    bd5e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			
			pump_number =  _sRuble_Parameters.Lora_Data_Rx[10];
    bd62:	c0 91 ca 15 	lds	r28, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
			pump_number = pump_number-1;
    bd66:	c1 50       	subi	r28, 0x01	; 1
			
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
    bd68:	80 91 c6 15 	lds	r24, 0x15C6	; 0x8015c6 <_sRuble_Parameters+0x61>
    bd6c:	82 30       	cpi	r24, 0x02	; 2
    bd6e:	b9 f0       	breq	.+46     	; 0xbd9e <_Z25Update_Wireless_Pump_DataPh+0xa2>
    bd70:	83 30       	cpi	r24, 0x03	; 3
    bd72:	01 f5       	brne	.+64     	; 0xbdb4 <_Z25Update_Wireless_Pump_DataPh+0xb8>
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
				}break;
				
				case _eWIRELESS_FAULT:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
    bd74:	8b e0       	ldi	r24, 0x0B	; 11
    bd76:	c8 9f       	mul	r28, r24
    bd78:	f0 01       	movw	r30, r0
    bd7a:	11 24       	eor	r1, r1
    bd7c:	ea 53       	subi	r30, 0x3A	; 58
    bd7e:	f4 4f       	sbci	r31, 0xF4	; 244
    bd80:	92 85       	ldd	r25, Z+10	; 0x0a
    bd82:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
    bd86:	89 2b       	or	r24, r25
    bd88:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
    bd8a:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
    bd8e:	90 91 c9 15 	lds	r25, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
    bd92:	98 27       	eor	r25, r24
    bd94:	89 27       	eor	r24, r25
    bd96:	98 27       	eor	r25, r24
    bd98:	91 87       	std	Z+9, r25	; 0x09
    bd9a:	80 87       	std	Z+8, r24	; 0x08
				}break;
    bd9c:	0b c0       	rjmp	.+22     	; 0xbdb4 <_Z25Update_Wireless_Pump_DataPh+0xb8>
			
			switch(_sRuble_Parameters.Lora_Data_Rx[6])
			{
				case _eCALIBRATION_RESPONSE:
				{
					_sWireless_Pump_Param[pump_number].Response_To_Ruble |= _sRuble_Parameters.Lora_Data_Rx[7];
    bd9e:	db e0       	ldi	r29, 0x0B	; 11
    bda0:	cd 9f       	mul	r28, r29
    bda2:	f0 01       	movw	r30, r0
    bda4:	11 24       	eor	r1, r1
    bda6:	ea 53       	subi	r30, 0x3A	; 58
    bda8:	f4 4f       	sbci	r31, 0xF4	; 244
    bdaa:	92 85       	ldd	r25, Z+10	; 0x0a
    bdac:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
    bdb0:	89 2b       	or	r24, r25
    bdb2:	82 87       	std	Z+10, r24	; 0x0a
					_sWireless_Pump_Param[pump_number].Response_To_Ruble   |= _sRuble_Parameters.Lora_Data_Rx[7];
					_sWireless_Pump_Param[pump_number].Indication_Of_Faults = (_sRuble_Parameters.Lora_Data_Rx[8]<<8) | (_sRuble_Parameters.Lora_Data_Rx[9]);
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
    bdb4:	84 e1       	ldi	r24, 0x14	; 20
    bdb6:	ec ea       	ldi	r30, 0xAC	; 172
    bdb8:	f5 e1       	ldi	r31, 0x15	; 21
    bdba:	df 01       	movw	r26, r30
    bdbc:	1d 92       	st	X+, r1
    bdbe:	8a 95       	dec	r24
    bdc0:	e9 f7       	brne	.-6      	; 0xbdbc <_Z25Update_Wireless_Pump_DataPh+0xc0>
    bdc2:	df 01       	movw	r26, r30
    bdc4:	db e0       	ldi	r29, 0x0B	; 11
    bdc6:	cd 9f       	mul	r28, r29
    bdc8:	a0 01       	movw	r20, r0
    bdca:	11 24       	eor	r1, r1
    bdcc:	80 e0       	ldi	r24, 0x00	; 0
    bdce:	90 e0       	ldi	r25, 0x00	; 0
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
    bdd0:	fc 01       	movw	r30, r24
    bdd2:	e4 0f       	add	r30, r20
    bdd4:	f5 1f       	adc	r31, r21
    bdd6:	ea 53       	subi	r30, 0x3A	; 58
    bdd8:	f4 4f       	sbci	r31, 0xF4	; 244
    bdda:	21 81       	ldd	r18, Z+1	; 0x01
    bddc:	2d 93       	st	X+, r18
    bdde:	01 96       	adiw	r24, 0x01	; 1
				}break;
			}
				
			memset(_sRuble_Parameters.Lora_Data_TX,0,sizeof(_sRuble_Parameters.Lora_Data_TX));
			
			for(i=0;i<_kVALVE_ID_LEN;i++)
    bde0:	86 30       	cpi	r24, 0x06	; 6
    bde2:	91 05       	cpc	r25, r1
    bde4:	a9 f7       	brne	.-22     	; 0xbdd0 <_Z25Update_Wireless_Pump_DataPh+0xd4>
			{
				_sRuble_Parameters.Lora_Data_TX[count++] = _sWireless_Pump_Param[pump_number].Wireless_Pump_ID[i];   /* copy the id */
			}
			
			_sRuble_Parameters.Lora_Data_TX[count++] = _eGOT_DATA;
    bde6:	81 e0       	ldi	r24, 0x01	; 1
    bde8:	80 93 b2 15 	sts	0x15B2, r24	; 0x8015b2 <_sRuble_Parameters+0x4d>
			
			_kLORA_SEND_DATA(count);
    bdec:	87 e0       	ldi	r24, 0x07	; 7
    bdee:	19 d7       	rcall	.+3634   	; 0xcc22 <_Z14Lora_Data_Sendh>
			
			Wireless_Pump_EEPROM(pump_number);
    bdf0:	8c 2f       	mov	r24, r28
    bdf2:	5a dc       	rcall	.-1868   	; 0xb6a8 <_Z20Wireless_Pump_EEPROMh>
			
			return 1;
    bdf4:	81 e0       	ldi	r24, 0x01	; 1
    bdf6:	07 c0       	rjmp	.+14     	; 0xbe06 <_Z25Update_Wireless_Pump_DataPh+0x10a>
    bdf8:	2f 5f       	subi	r18, 0xFF	; 255
    bdfa:	3f 4f       	sbci	r19, 0xFF	; 255

bool Update_Wireless_Pump_Data(unsigned char *temp_id)
{
	unsigned char pump_number=0,i=0,count = 0,id_len;
	
	for(pump_number=0; pump_number < _kMAX_WIRELESS_PUMP; pump_number++)
    bdfc:	23 30       	cpi	r18, 0x03	; 3
    bdfe:	31 05       	cpc	r19, r1
    be00:	09 f0       	breq	.+2      	; 0xbe04 <_Z25Update_Wireless_Pump_DataPh+0x108>
    be02:	83 cf       	rjmp	.-250    	; 0xbd0a <_Z25Update_Wireless_Pump_DataPh+0xe>
			return 1;
			
		}
	}
	
	return 0;
    be04:	80 e0       	ldi	r24, 0x00	; 0
}
    be06:	df 91       	pop	r29
    be08:	cf 91       	pop	r28
    be0a:	1f 91       	pop	r17
    be0c:	08 95       	ret

0000be0e <_Z13Store_All_APNv>:
    be0e:	08 95       	ret

0000be10 <_Z16Check_GSM_Signalv>:
// 	sprintf(_sSim_APNs.Jio,"jionet");
}


void Check_GSM_Signal(void)
{
    be10:	cf 93       	push	r28
    be12:	df 93       	push	r29
	static unsigned char counter;
	int temp_sig_strenght;
	
	counter++;
    be14:	80 91 1b 0c 	lds	r24, 0x0C1B	; 0x800c1b <_ZZ16Check_GSM_SignalvE7counter>
    be18:	8f 5f       	subi	r24, 0xFF	; 255
    be1a:	80 93 1b 0c 	sts	0x0C1B, r24	; 0x800c1b <_ZZ16Check_GSM_SignalvE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    be1e:	8c e2       	ldi	r24, 0x2C	; 44
    be20:	98 e1       	ldi	r25, 0x18	; 24
    be22:	0e 94 ff cd 	call	0x19bfe	; 0x19bfe <_ZN14HardwareSerial9availableEv>
    be26:	89 2b       	or	r24, r25
    be28:	c9 f5       	brne	.+114    	; 0xbe9c <_Z16Check_GSM_Signalv+0x8c>
	{
		return;
	}
		
	if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    be2a:	80 91 14 16 	lds	r24, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
    be2e:	82 30       	cpi	r24, 0x02	; 2
    be30:	a1 f4       	brne	.+40     	; 0xbe5a <_Z16Check_GSM_Signalv+0x4a>
	{
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
    be32:	0e 94 f5 6a 	call	0xd5ea	; 0xd5ea <_Z18_kGSM_SIG_STRENGTHv>
    be36:	ec 01       	movw	r28, r24
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
    be38:	4a e0       	ldi	r20, 0x0A	; 10
    be3a:	50 e0       	ldi	r21, 0x00	; 0
    be3c:	bc 01       	movw	r22, r24
    be3e:	8f e6       	ldi	r24, 0x6F	; 111
    be40:	96 e1       	ldi	r25, 0x16	; 22
    be42:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
	else
	{
		temp_sig_strenght = 0;
	}
	
	if(temp_sig_strenght > 19)                 /* if there is weak signal */
    be46:	c4 31       	cpi	r28, 0x14	; 20
    be48:	d1 05       	cpc	r29, r1
    be4a:	4c f0       	brlt	.+18     	; 0xbe5e <_Z16Check_GSM_Signalv+0x4e>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    be4c:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    be50:	88 7f       	andi	r24, 0xF8	; 248
    be52:	88 60       	ori	r24, 0x08	; 8
    be54:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
    be58:	02 c0       	rjmp	.+4      	; 0xbe5e <_Z16Check_GSM_Signalv+0x4e>
		temp_sig_strenght = _kGSM_SIG_STRENGTH();   /* get the signal strength */		
		_kSERIAL_MON_PRINT_NUM(temp_sig_strenght);
	}
	else
	{
		temp_sig_strenght = 0;
    be5a:	c0 e0       	ldi	r28, 0x00	; 0
    be5c:	d0 e0       	ldi	r29, 0x00	; 0
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
	}
	 
	if(temp_sig_strenght < 20 && temp_sig_strenght > 13)   /* if there is moderate signal */
    be5e:	ce 01       	movw	r24, r28
    be60:	0e 97       	sbiw	r24, 0x0e	; 14
    be62:	06 97       	sbiw	r24, 0x06	; 6
    be64:	30 f4       	brcc	.+12     	; 0xbe72 <_Z16Check_GSM_Signalv+0x62>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    be66:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    be6a:	84 7f       	andi	r24, 0xF4	; 244
    be6c:	84 60       	ori	r24, 0x04	; 4
    be6e:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
	}
	 
	 if(temp_sig_strenght < 14 && temp_sig_strenght > 5)   /* if there is strong signal */
    be72:	ce 01       	movw	r24, r28
    be74:	06 97       	sbiw	r24, 0x06	; 6
    be76:	08 97       	sbiw	r24, 0x08	; 8
    be78:	28 f4       	brcc	.+10     	; 0xbe84 <_Z16Check_GSM_Signalv+0x74>
	{
		_sRuble_Parameters.Display_Update  |=    _kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    be7a:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    be7e:	82 7f       	andi	r24, 0xF2	; 242
    be80:	82 60       	ori	r24, 0x02	; 2
    be82:	0a c0       	rjmp	.+20     	; 0xbe98 <_Z16Check_GSM_Signalv+0x88>
	}
	 
	if(temp_sig_strenght < 5)                           /* if there is no signal */
    be84:	c5 30       	cpi	r28, 0x05	; 5
    be86:	d1 05       	cpc	r29, r1
    be88:	1c f0       	brlt	.+6      	; 0xbe90 <_Z16Check_GSM_Signalv+0x80>
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
	}
	
	if (temp_sig_strenght >= 99) 
    be8a:	c3 36       	cpi	r28, 0x63	; 99
    be8c:	d1 05       	cpc	r29, r1
    be8e:	34 f0       	brlt	.+12     	; 0xbe9c <_Z16Check_GSM_Signalv+0x8c>
	{
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
		_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
		_sRuble_Parameters.Display_Update  |=    _kDISP_NO_RANGE;
    be90:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    be94:	81 7f       	andi	r24, 0xF1	; 241
    be96:	81 60       	ori	r24, 0x01	; 1
    be98:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
	}
	
}
    be9c:	df 91       	pop	r29
    be9e:	cf 91       	pop	r28
    bea0:	08 95       	ret

0000bea2 <_Z14Get_Local_Timev>:


void Get_Local_Time(void)
{
    bea2:	cf 92       	push	r12
    bea4:	df 92       	push	r13
    bea6:	ef 92       	push	r14
    bea8:	ff 92       	push	r15
    beaa:	0f 93       	push	r16
    beac:	cf 93       	push	r28
    beae:	df 93       	push	r29
	//Send_AT_Command(NULL, "OK",  NULL,3000,2);
	
	//_kSERIAL_AT.println(F("AT+CNTP=\"202.120.2.101\",22"));
	
	
	_kSERIAL_AT.println(F("AT+CNTP=\"in.pool.ntp.org\",22"));
    beb0:	69 e7       	ldi	r22, 0x79	; 121
    beb2:	70 e2       	ldi	r23, 0x20	; 32
    beb4:	8c e2       	ldi	r24, 0x2C	; 44
    beb6:	98 e1       	ldi	r25, 0x18	; 24
    beb8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
	Send_AT_Command(NULL, "OK",  NULL,5000,2);
    bebc:	02 e0       	ldi	r16, 0x02	; 2
    bebe:	28 e8       	ldi	r18, 0x88	; 136
    bec0:	33 e1       	ldi	r19, 0x13	; 19
    bec2:	40 e0       	ldi	r20, 0x00	; 0
    bec4:	50 e0       	ldi	r21, 0x00	; 0
    bec6:	6e e1       	ldi	r22, 0x1E	; 30
    bec8:	73 e0       	ldi	r23, 0x03	; 3
    beca:	80 e0       	ldi	r24, 0x00	; 0
    becc:	90 e0       	ldi	r25, 0x00	; 0
    bece:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
// 	
// 	
	_kSERIAL_AT.println(F("AT+CNTP"));
    bed2:	61 e7       	ldi	r22, 0x71	; 113
    bed4:	70 e2       	ldi	r23, 0x20	; 32
    bed6:	8c e2       	ldi	r24, 0x2C	; 44
    bed8:	98 e1       	ldi	r25, 0x18	; 24
    beda:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
	Send_AT_Command(NULL, "+CNTP: 0",  NULL,3000,2);
    bede:	28 eb       	ldi	r18, 0xB8	; 184
    bee0:	3b e0       	ldi	r19, 0x0B	; 11
    bee2:	40 e0       	ldi	r20, 0x00	; 0
    bee4:	50 e0       	ldi	r21, 0x00	; 0
    bee6:	61 e2       	ldi	r22, 0x21	; 33
    bee8:	73 e0       	ldi	r23, 0x03	; 3
    beea:	80 e0       	ldi	r24, 0x00	; 0
    beec:	90 e0       	ldi	r25, 0x00	; 0
    beee:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
// 	Send_AT_Command(NULL, "OK",  NULL,5000,2);
	
// 	_kSERIAL_AT.println(F("AT+CTZU=1"));
// 	Send_AT_Command(NULL, "OK",  NULL,3000,2);
	
	_kSERIAL_AT.println(F("AT+CCLK?"));
    bef2:	68 e6       	ldi	r22, 0x68	; 104
    bef4:	70 e2       	ldi	r23, 0x20	; 32
    bef6:	8c e2       	ldi	r24, 0x2C	; 44
    bef8:	98 e1       	ldi	r25, 0x18	; 24
    befa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
	Send_AT_Command(NULL, "OK", NULL,2000,2);
    befe:	20 ed       	ldi	r18, 0xD0	; 208
    bf00:	37 e0       	ldi	r19, 0x07	; 7
    bf02:	40 e0       	ldi	r20, 0x00	; 0
    bf04:	50 e0       	ldi	r21, 0x00	; 0
    bf06:	6e e1       	ldi	r22, 0x1E	; 30
    bf08:	73 e0       	ldi	r23, 0x03	; 3
    bf0a:	80 e0       	ldi	r24, 0x00	; 0
    bf0c:	90 e0       	ldi	r25, 0x00	; 0
    bf0e:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
	
   if(strstr((char *)_gRecvd_Data,"+CCLK") != 0)
    bf12:	6a e2       	ldi	r22, 0x2A	; 42
    bf14:	73 e0       	ldi	r23, 0x03	; 3
    bf16:	89 e1       	ldi	r24, 0x19	; 25
    bf18:	91 e1       	ldi	r25, 0x11	; 17
    bf1a:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    bf1e:	89 2b       	or	r24, r25
    bf20:	09 f4       	brne	.+2      	; 0xbf24 <_Z14Get_Local_Timev+0x82>
    bf22:	ff c0       	rjmp	.+510    	; 0xc122 <_Z14Get_Local_Timev+0x280>
    bf24:	80 e0       	ldi	r24, 0x00	; 0
    bf26:	90 e0       	ldi	r25, 0x00	; 0
    bf28:	c8 2f       	mov	r28, r24
   {
	   for(i=0;i<20;i++)
	   {
		   if(_gRecvd_Data[i] == '+' && _gRecvd_Data[i+5] == ':')
    bf2a:	fc 01       	movw	r30, r24
    bf2c:	e7 5e       	subi	r30, 0xE7	; 231
    bf2e:	fe 4e       	sbci	r31, 0xEE	; 238
    bf30:	20 81       	ld	r18, Z
    bf32:	2b 32       	cpi	r18, 0x2B	; 43
    bf34:	31 f4       	brne	.+12     	; 0xbf42 <_Z14Get_Local_Timev+0xa0>
    bf36:	fc 01       	movw	r30, r24
    bf38:	e2 5e       	subi	r30, 0xE2	; 226
    bf3a:	fe 4e       	sbci	r31, 0xEE	; 238
    bf3c:	20 81       	ld	r18, Z
    bf3e:	2a 33       	cpi	r18, 0x3A	; 58
    bf40:	29 f0       	breq	.+10     	; 0xbf4c <_Z14Get_Local_Timev+0xaa>
    bf42:	01 96       	adiw	r24, 0x01	; 1
	_kSERIAL_AT.println(F("AT+CCLK?"));
	Send_AT_Command(NULL, "OK", NULL,2000,2);
	
   if(strstr((char *)_gRecvd_Data,"+CCLK") != 0)
   {
	   for(i=0;i<20;i++)
    bf44:	84 31       	cpi	r24, 0x14	; 20
    bf46:	91 05       	cpc	r25, r1
    bf48:	79 f7       	brne	.-34     	; 0xbf28 <_Z14Get_Local_Timev+0x86>
    bf4a:	c4 e1       	ldi	r28, 0x14	; 20
	   return;
   }
   
	/*************************************************** UPDATE TIME AND DATE *********************************************/
	
	_sRuble_Parameters.Update_Local_Time[0] = ((_gRecvd_Data[i+17]-0x30)*10) + (_gRecvd_Data[i+18]-0x30);    /* hold hour */
    bf4c:	d0 e0       	ldi	r29, 0x00	; 0
    bf4e:	fe 01       	movw	r30, r28
    bf50:	e6 5d       	subi	r30, 0xD6	; 214
    bf52:	fe 4e       	sbci	r31, 0xEE	; 238
    bf54:	20 81       	ld	r18, Z
    bf56:	fe 01       	movw	r30, r28
    bf58:	e5 5d       	subi	r30, 0xD5	; 213
    bf5a:	fe 4e       	sbci	r31, 0xEE	; 238
    bf5c:	80 81       	ld	r24, Z
    bf5e:	22 0f       	add	r18, r18
    bf60:	20 56       	subi	r18, 0x60	; 96
    bf62:	92 2f       	mov	r25, r18
    bf64:	99 0f       	add	r25, r25
    bf66:	99 0f       	add	r25, r25
    bf68:	29 0f       	add	r18, r25
    bf6a:	80 53       	subi	r24, 0x30	; 48
    bf6c:	92 2f       	mov	r25, r18
    bf6e:	98 0f       	add	r25, r24
    bf70:	90 93 a6 15 	sts	0x15A6, r25	; 0x8015a6 <_sRuble_Parameters+0x41>
	_sRuble_Parameters.Update_Local_Time[1] = ((_gRecvd_Data[i+20]-0X30)*10) + (_gRecvd_Data[i+21]-0X30);    /* hold minute */
    bf74:	fe 01       	movw	r30, r28
    bf76:	e3 5d       	subi	r30, 0xD3	; 211
    bf78:	fe 4e       	sbci	r31, 0xEE	; 238
    bf7a:	20 81       	ld	r18, Z
    bf7c:	fe 01       	movw	r30, r28
    bf7e:	e2 5d       	subi	r30, 0xD2	; 210
    bf80:	fe 4e       	sbci	r31, 0xEE	; 238
    bf82:	80 81       	ld	r24, Z
    bf84:	22 0f       	add	r18, r18
    bf86:	20 56       	subi	r18, 0x60	; 96
    bf88:	42 2f       	mov	r20, r18
    bf8a:	44 0f       	add	r20, r20
    bf8c:	44 0f       	add	r20, r20
    bf8e:	24 0f       	add	r18, r20
    bf90:	80 53       	subi	r24, 0x30	; 48
    bf92:	42 2f       	mov	r20, r18
    bf94:	48 0f       	add	r20, r24
    bf96:	40 93 a7 15 	sts	0x15A7, r20	; 0x8015a7 <_sRuble_Parameters+0x42>
	_sRuble_Parameters.Update_Local_Time[2] = ((_gRecvd_Data[i+23]-0X30)*10) + (_gRecvd_Data[i+24]-0X30);    /* hold second */
    bf9a:	fe 01       	movw	r30, r28
    bf9c:	e0 5d       	subi	r30, 0xD0	; 208
    bf9e:	fe 4e       	sbci	r31, 0xEE	; 238
    bfa0:	50 81       	ld	r21, Z
    bfa2:	fe 01       	movw	r30, r28
    bfa4:	ef 5c       	subi	r30, 0xCF	; 207
    bfa6:	fe 4e       	sbci	r31, 0xEE	; 238
    bfa8:	80 81       	ld	r24, Z
    bfaa:	55 0f       	add	r21, r21
    bfac:	50 56       	subi	r21, 0x60	; 96
    bfae:	25 2f       	mov	r18, r21
    bfb0:	22 0f       	add	r18, r18
    bfb2:	22 0f       	add	r18, r18
    bfb4:	52 0f       	add	r21, r18
    bfb6:	80 53       	subi	r24, 0x30	; 48
    bfb8:	58 0f       	add	r21, r24
    bfba:	50 93 a8 15 	sts	0x15A8, r21	; 0x8015a8 <_sRuble_Parameters+0x43>
	
	_sRuble_Parameters.Current_Time_In_Sec = (unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[0]*3600)+(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[1]*60) +(unsigned long int)((unsigned long int)_sRuble_Parameters.Update_Local_Time[2]) ;
    bfbe:	29 2f       	mov	r18, r25
    bfc0:	30 e0       	ldi	r19, 0x00	; 0
    bfc2:	a0 e1       	ldi	r26, 0x10	; 16
    bfc4:	be e0       	ldi	r27, 0x0E	; 14
    bfc6:	0e 94 8b e7 	call	0x1cf16	; 0x1cf16 <__umulhisi3>
    bfca:	6b 01       	movw	r12, r22
    bfcc:	7c 01       	movw	r14, r24
    bfce:	24 2f       	mov	r18, r20
    bfd0:	30 e0       	ldi	r19, 0x00	; 0
    bfd2:	ac e3       	ldi	r26, 0x3C	; 60
    bfd4:	b0 e0       	ldi	r27, 0x00	; 0
    bfd6:	0e 94 8b e7 	call	0x1cf16	; 0x1cf16 <__umulhisi3>
    bfda:	dc 01       	movw	r26, r24
    bfdc:	cb 01       	movw	r24, r22
    bfde:	8c 0d       	add	r24, r12
    bfe0:	9d 1d       	adc	r25, r13
    bfe2:	ae 1d       	adc	r26, r14
    bfe4:	bf 1d       	adc	r27, r15
    bfe6:	85 0f       	add	r24, r21
    bfe8:	91 1d       	adc	r25, r1
    bfea:	a1 1d       	adc	r26, r1
    bfec:	b1 1d       	adc	r27, r1
    bfee:	80 93 75 15 	sts	0x1575, r24	; 0x801575 <_sRuble_Parameters+0x10>
    bff2:	90 93 76 15 	sts	0x1576, r25	; 0x801576 <_sRuble_Parameters+0x11>
    bff6:	a0 93 77 15 	sts	0x1577, r26	; 0x801577 <_sRuble_Parameters+0x12>
    bffa:	b0 93 78 15 	sts	0x1578, r27	; 0x801578 <_sRuble_Parameters+0x13>
	//_sRuble_Parameters.Current_Time_In_Sec = 36000;
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    bffe:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    c002:	81 30       	cpi	r24, 0x01	; 1
    c004:	91 f4       	brne	.+36     	; 0xc02a <_Z14Get_Local_Timev+0x188>
	{
		Serial.println();
    c006:	8f e6       	ldi	r24, 0x6F	; 111
    c008:	96 e1       	ldi	r25, 0x16	; 22
    c00a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
		_kSERIAL_MON_PRINT_NUM((unsigned long int)_sRuble_Parameters.Current_Time_In_Sec);
    c00e:	40 91 75 15 	lds	r20, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
    c012:	50 91 76 15 	lds	r21, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
    c016:	60 91 77 15 	lds	r22, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
    c01a:	70 91 78 15 	lds	r23, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
    c01e:	2a e0       	ldi	r18, 0x0A	; 10
    c020:	30 e0       	ldi	r19, 0x00	; 0
    c022:	8f e6       	ldi	r24, 0x6F	; 111
    c024:	96 e1       	ldi	r25, 0x16	; 22
    c026:	0e 94 5e d1 	call	0x1a2bc	; 0x1a2bc <_ZN5Print7printlnEmi>
	}
	
	_sRuble_Parameters.Update_Local_Date[2] = ((_gRecvd_Data[i+8]-0X30)*10) +  (_gRecvd_Data[i+9]-0X30);      /* hold date */
    c02a:	fe 01       	movw	r30, r28
    c02c:	ef 5d       	subi	r30, 0xDF	; 223
    c02e:	fe 4e       	sbci	r31, 0xEE	; 238
    c030:	80 81       	ld	r24, Z
    c032:	fe 01       	movw	r30, r28
    c034:	ee 5d       	subi	r30, 0xDE	; 222
    c036:	fe 4e       	sbci	r31, 0xEE	; 238
    c038:	90 81       	ld	r25, Z
    c03a:	88 0f       	add	r24, r24
    c03c:	80 56       	subi	r24, 0x60	; 96
    c03e:	28 2f       	mov	r18, r24
    c040:	22 0f       	add	r18, r18
    c042:	22 0f       	add	r18, r18
    c044:	82 0f       	add	r24, r18
    c046:	90 53       	subi	r25, 0x30	; 48
    c048:	89 0f       	add	r24, r25
    c04a:	80 93 ab 15 	sts	0x15AB, r24	; 0x8015ab <_sRuble_Parameters+0x46>
	_sRuble_Parameters.Update_Local_Date[1] = ((_gRecvd_Data[i+11]-0X30)*10) + (_gRecvd_Data[i+12]-0X30);     /* hold month */
    c04e:	fe 01       	movw	r30, r28
    c050:	ec 5d       	subi	r30, 0xDC	; 220
    c052:	fe 4e       	sbci	r31, 0xEE	; 238
    c054:	80 81       	ld	r24, Z
    c056:	fe 01       	movw	r30, r28
    c058:	eb 5d       	subi	r30, 0xDB	; 219
    c05a:	fe 4e       	sbci	r31, 0xEE	; 238
    c05c:	90 81       	ld	r25, Z
    c05e:	88 0f       	add	r24, r24
    c060:	80 56       	subi	r24, 0x60	; 96
    c062:	28 2f       	mov	r18, r24
    c064:	22 0f       	add	r18, r18
    c066:	22 0f       	add	r18, r18
    c068:	82 0f       	add	r24, r18
    c06a:	90 53       	subi	r25, 0x30	; 48
    c06c:	89 0f       	add	r24, r25
    c06e:	80 93 aa 15 	sts	0x15AA, r24	; 0x8015aa <_sRuble_Parameters+0x45>
	_sRuble_Parameters.Update_Local_Date[0] = ((_gRecvd_Data[i+14]-0X30)*10) + (_gRecvd_Data[i+15]-0X30); 
    c072:	fe 01       	movw	r30, r28
    c074:	e9 5d       	subi	r30, 0xD9	; 217
    c076:	fe 4e       	sbci	r31, 0xEE	; 238
    c078:	80 81       	ld	r24, Z
    c07a:	c8 5d       	subi	r28, 0xD8	; 216
    c07c:	de 4e       	sbci	r29, 0xEE	; 238
    c07e:	98 81       	ld	r25, Y
    c080:	88 0f       	add	r24, r24
    c082:	80 56       	subi	r24, 0x60	; 96
    c084:	28 2f       	mov	r18, r24
    c086:	22 0f       	add	r18, r18
    c088:	22 0f       	add	r18, r18
    c08a:	82 0f       	add	r24, r18
    c08c:	90 53       	subi	r25, 0x30	; 48
    c08e:	89 0f       	add	r24, r25
    c090:	80 93 a9 15 	sts	0x15A9, r24	; 0x8015a9 <_sRuble_Parameters+0x44>
		//_sRuble_Parameters.Update_Local_Date[0] = 31;
		//_sRuble_Parameters.Update_Local_Date[1] = _eDEC;
		//_sRuble_Parameters.Current_Time_In_Sec = 0;
		
		
		_kSERAIL_MON_WRITE("my date : ");
    c094:	6d e5       	ldi	r22, 0x5D	; 93
    c096:	70 e2       	ldi	r23, 0x20	; 32
    c098:	8f e6       	ldi	r24, 0x6F	; 111
    c09a:	96 e1       	ldi	r25, 0x16	; 22
    c09c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[0]);
    c0a0:	4a e0       	ldi	r20, 0x0A	; 10
    c0a2:	50 e0       	ldi	r21, 0x00	; 0
    c0a4:	60 91 a9 15 	lds	r22, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
    c0a8:	8f e6       	ldi	r24, 0x6F	; 111
    c0aa:	96 e1       	ldi	r25, 0x16	; 22
    c0ac:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c0b0:	8f e6       	ldi	r24, 0x6F	; 111
    c0b2:	96 e1       	ldi	r25, 0x16	; 22
    c0b4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my month : ");
    c0b8:	61 e5       	ldi	r22, 0x51	; 81
    c0ba:	70 e2       	ldi	r23, 0x20	; 32
    c0bc:	8f e6       	ldi	r24, 0x6F	; 111
    c0be:	96 e1       	ldi	r25, 0x16	; 22
    c0c0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[1]);
    c0c4:	4a e0       	ldi	r20, 0x0A	; 10
    c0c6:	50 e0       	ldi	r21, 0x00	; 0
    c0c8:	60 91 aa 15 	lds	r22, 0x15AA	; 0x8015aa <_sRuble_Parameters+0x45>
    c0cc:	8f e6       	ldi	r24, 0x6F	; 111
    c0ce:	96 e1       	ldi	r25, 0x16	; 22
    c0d0:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c0d4:	8f e6       	ldi	r24, 0x6F	; 111
    c0d6:	96 e1       	ldi	r25, 0x16	; 22
    c0d8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("my year : ");
    c0dc:	66 e4       	ldi	r22, 0x46	; 70
    c0de:	70 e2       	ldi	r23, 0x20	; 32
    c0e0:	8f e6       	ldi	r24, 0x6F	; 111
    c0e2:	96 e1       	ldi	r25, 0x16	; 22
    c0e4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sRuble_Parameters.Update_Local_Date[2]);
    c0e8:	4a e0       	ldi	r20, 0x0A	; 10
    c0ea:	50 e0       	ldi	r21, 0x00	; 0
    c0ec:	60 91 ab 15 	lds	r22, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    c0f0:	8f e6       	ldi	r24, 0x6F	; 111
    c0f2:	96 e1       	ldi	r25, 0x16	; 22
    c0f4:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    c0f8:	8f e6       	ldi	r24, 0x6F	; 111
    c0fa:	96 e1       	ldi	r25, 0x16	; 22
    c0fc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		
	if(_sRuble_Parameters.Update_Local_Time[0] > 23 || _sRuble_Parameters.Update_Local_Time[1] > 59 ||  _sRuble_Parameters.Update_Local_Time[2] > 59)
    c100:	80 91 a6 15 	lds	r24, 0x15A6	; 0x8015a6 <_sRuble_Parameters+0x41>
    c104:	88 31       	cpi	r24, 0x18	; 24
    c106:	68 f4       	brcc	.+26     	; 0xc122 <_Z14Get_Local_Timev+0x280>
    c108:	80 91 a7 15 	lds	r24, 0x15A7	; 0x8015a7 <_sRuble_Parameters+0x42>
    c10c:	8c 33       	cpi	r24, 0x3C	; 60
    c10e:	48 f4       	brcc	.+18     	; 0xc122 <_Z14Get_Local_Timev+0x280>
    c110:	80 91 a8 15 	lds	r24, 0x15A8	; 0x8015a8 <_sRuble_Parameters+0x43>
    c114:	8c 33       	cpi	r24, 0x3C	; 60
    c116:	28 f4       	brcc	.+10     	; 0xc122 <_Z14Get_Local_Timev+0x280>
	{
		return;
	}
	_sRuble_Parameters.Display_Update  |= _kTIME_UPDATE;
    c118:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    c11c:	81 60       	ori	r24, 0x01	; 1
    c11e:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
}
    c122:	df 91       	pop	r29
    c124:	cf 91       	pop	r28
    c126:	0f 91       	pop	r16
    c128:	ff 90       	pop	r15
    c12a:	ef 90       	pop	r14
    c12c:	df 90       	pop	r13
    c12e:	cf 90       	pop	r12
    c130:	08 95       	ret

0000c132 <_Z16Gsm_Gprs_Networkv>:


bool Gsm_Gprs_Network(void)
{
    c132:	ff 92       	push	r15
    c134:	0f 93       	push	r16
    c136:	1f 93       	push	r17
    c138:	cf 93       	push	r28
    c13a:	df 93       	push	r29
    c13c:	cd b7       	in	r28, 0x3d	; 61
    c13e:	de b7       	in	r29, 0x3e	; 62
    c140:	c4 56       	subi	r28, 0x64	; 100
    c142:	d1 09       	sbc	r29, r1
    c144:	0f b6       	in	r0, 0x3f	; 63
    c146:	f8 94       	cli
    c148:	de bf       	out	0x3e, r29	; 62
    c14a:	0f be       	out	0x3f, r0	; 63
    c14c:	cd bf       	out	0x3d, r28	; 61
	char temp_data[100];
	unsigned char check_sim;
	/***************************************** wait for the netwrok *******************************************/ 
	check_sim = 0;
	if (_kIS_GSM_CONNECTED())
    c14e:	0e 94 7f 6d 	call	0xdafe	; 0xdafe <_Z20Check_Gsm_Connectionv>
    c152:	f8 2e       	mov	r15, r24
    c154:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    c158:	ff 20       	and	r15, r15
    c15a:	09 f4       	brne	.+2      	; 0xc15e <_Z16Gsm_Gprs_Networkv+0x2c>
    c15c:	aa c0       	rjmp	.+340    	; 0xc2b2 <_Z16Gsm_Gprs_Networkv+0x180>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c15e:	81 30       	cpi	r24, 0x01	; 1
    c160:	51 f4       	brne	.+20     	; 0xc176 <_Z16Gsm_Gprs_Networkv+0x44>
		{
			_kSERAIL_MON_WRITE("Connected to gsm/GPRS network 0");                /* for debugging purpose */
    c162:	66 e2       	ldi	r22, 0x26	; 38
    c164:	70 e2       	ldi	r23, 0x20	; 32
    c166:	8f e6       	ldi	r24, 0x6F	; 111
    c168:	96 e1       	ldi	r25, 0x16	; 22
    c16a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c16e:	8f e6       	ldi	r24, 0x6F	; 111
    c170:	96 e1       	ldi	r25, 0x16	; 22
    c172:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		memset(temp_data,0,sizeof(temp_data));
    c176:	8e 01       	movw	r16, r28
    c178:	0f 5f       	subi	r16, 0xFF	; 255
    c17a:	1f 4f       	sbci	r17, 0xFF	; 255
    c17c:	84 e6       	ldi	r24, 0x64	; 100
    c17e:	f8 01       	movw	r30, r16
    c180:	11 92       	st	Z+, r1
    c182:	8a 95       	dec	r24
    c184:	e9 f7       	brne	.-6      	; 0xc180 <_Z16Gsm_Gprs_Networkv+0x4e>
		Get_Operator_Name(temp_data);
    c186:	c8 01       	movw	r24, r16
    c188:	0e 94 31 6e 	call	0xdc62	; 0xdc62 <_Z17Get_Operator_NamePc>
		
		
		if(strstr(temp_data,"Vod") != 0 || strstr(temp_data,"Vi In") != 0)
    c18c:	60 e3       	ldi	r22, 0x30	; 48
    c18e:	73 e0       	ldi	r23, 0x03	; 3
    c190:	c8 01       	movw	r24, r16
    c192:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    c196:	89 2b       	or	r24, r25
    c198:	39 f4       	brne	.+14     	; 0xc1a8 <_Z16Gsm_Gprs_Networkv+0x76>
    c19a:	64 e3       	ldi	r22, 0x34	; 52
    c19c:	73 e0       	ldi	r23, 0x03	; 3
    c19e:	c8 01       	movw	r24, r16
    c1a0:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    c1a4:	89 2b       	or	r24, r25
    c1a6:	49 f0       	breq	.+18     	; 0xc1ba <_Z16Gsm_Gprs_Networkv+0x88>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"www"/*_sSim_APNs.Vodafone*/);
    c1a8:	6a e3       	ldi	r22, 0x3A	; 58
    c1aa:	73 e0       	ldi	r23, 0x03	; 3
    c1ac:	84 e5       	ldi	r24, 0x54	; 84
    c1ae:	9d e0       	ldi	r25, 0x0D	; 13
    c1b0:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
			_kSERAIL_MON_WRITE("Vodafone");               
    c1b4:	6d e1       	ldi	r22, 0x1D	; 29
    c1b6:	70 e2       	ldi	r23, 0x20	; 32
    c1b8:	16 c0       	rjmp	.+44     	; 0xc1e6 <_Z16Gsm_Gprs_Networkv+0xb4>
			/*strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,_sSim_APNs.BSNL);
			_kSERAIL_MON_WRITE("BSNL");               
			_kSERIAL_MON_CLEAR();
		}*/
		
		else if(strstr(temp_data,"jio") != 0  || strstr(temp_data,"Jio")!=0)
    c1ba:	6e e3       	ldi	r22, 0x3E	; 62
    c1bc:	73 e0       	ldi	r23, 0x03	; 3
    c1be:	c8 01       	movw	r24, r16
    c1c0:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    c1c4:	89 2b       	or	r24, r25
    c1c6:	39 f4       	brne	.+14     	; 0xc1d6 <_Z16Gsm_Gprs_Networkv+0xa4>
    c1c8:	62 e4       	ldi	r22, 0x42	; 66
    c1ca:	73 e0       	ldi	r23, 0x03	; 3
    c1cc:	c8 01       	movw	r24, r16
    c1ce:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    c1d2:	89 2b       	or	r24, r25
    c1d4:	b9 f0       	breq	.+46     	; 0xc204 <_Z16Gsm_Gprs_Networkv+0xd2>
		{
			strcpy(_sNetwork_and_Usr_Info.Ruble_Sim_APN,"jionet"/*_sSim_APNs.Jio*/);
    c1d6:	66 e4       	ldi	r22, 0x46	; 70
    c1d8:	73 e0       	ldi	r23, 0x03	; 3
    c1da:	84 e5       	ldi	r24, 0x54	; 84
    c1dc:	9d e0       	ldi	r25, 0x0D	; 13
    c1de:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
			_kSERAIL_MON_WRITE("jio");                /* for debugging purpose */
    c1e2:	69 e1       	ldi	r22, 0x19	; 25
    c1e4:	70 e2       	ldi	r23, 0x20	; 32
    c1e6:	8f e6       	ldi	r24, 0x6F	; 111
    c1e8:	96 e1       	ldi	r25, 0x16	; 22
    c1ea:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c1ee:	8f e6       	ldi	r24, 0x6F	; 111
    c1f0:	96 e1       	ldi	r25, 0x16	; 22
    c1f2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			//return 0;
		}		
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
    c1f6:	84 e5       	ldi	r24, 0x54	; 84
    c1f8:	9d e0       	ldi	r25, 0x0D	; 13
    c1fa:	0e 94 4d 6e 	call	0xdc9a	; 0xdc9a <_Z12Gprs_ConnectPc>
    c1fe:	81 11       	cpse	r24, r1
    c200:	48 c0       	rjmp	.+144    	; 0xc292 <_Z16Gsm_Gprs_Networkv+0x160>
    c202:	0b c0       	rjmp	.+22     	; 0xc21a <_Z16Gsm_Gprs_Networkv+0xe8>
			check_sim = 1;
		}
		
		else
		{
			_kSERAIL_MON_WRITE("Can't get opeartor Name");                /* for debugging purpose */
    c204:	61 e0       	ldi	r22, 0x01	; 1
    c206:	70 e2       	ldi	r23, 0x20	; 32
    c208:	8f e6       	ldi	r24, 0x6F	; 111
    c20a:	96 e1       	ldi	r25, 0x16	; 22
    c20c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c210:	8f e6       	ldi	r24, 0x6F	; 111
    c212:	96 e1       	ldi	r25, 0x16	; 22
    c214:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    c218:	3c c0       	rjmp	.+120    	; 0xc292 <_Z16Gsm_Gprs_Networkv+0x160>
		
		if(check_sim == 1)
		{		
			if (!_kGPRS_CONNECT(_sNetwork_and_Usr_Info.Ruble_Sim_APN))
			{
				_kSERAIL_MON_WRITE("Fail to Connect GPRS");                /* for debugging purpose */
    c21a:	6c ee       	ldi	r22, 0xEC	; 236
    c21c:	7f e1       	ldi	r23, 0x1F	; 31
    c21e:	8f e6       	ldi	r24, 0x6F	; 111
    c220:	96 e1       	ldi	r25, 0x16	; 22
    c222:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    c226:	8f e6       	ldi	r24, 0x6F	; 111
    c228:	96 e1       	ldi	r25, 0x16	; 22
    c22a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c22e:	60 ee       	ldi	r22, 0xE0	; 224
    c230:	7f e1       	ldi	r23, 0x1F	; 31
    c232:	8c e2       	ldi	r24, 0x2C	; 44
    c234:	98 e1       	ldi	r25, 0x18	; 24
    c236:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "Call Ready",  NULL,10000,1);
    c23a:	01 e0       	ldi	r16, 0x01	; 1
    c23c:	20 e1       	ldi	r18, 0x10	; 16
    c23e:	37 e2       	ldi	r19, 0x27	; 39
    c240:	40 e0       	ldi	r20, 0x00	; 0
    c242:	50 e0       	ldi	r21, 0x00	; 0
    c244:	6d e4       	ldi	r22, 0x4D	; 77
    c246:	73 e0       	ldi	r23, 0x03	; 3
    c248:	80 e0       	ldi	r24, 0x00	; 0
    c24a:	90 e0       	ldi	r25, 0x00	; 0
    c24c:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
				_kDELAY_MS(10000);
    c250:	60 e1       	ldi	r22, 0x10	; 16
    c252:	77 e2       	ldi	r23, 0x27	; 39
    c254:	80 e0       	ldi	r24, 0x00	; 0
    c256:	90 e0       	ldi	r25, 0x00	; 0
    c258:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c25c:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
    c260:	81 30       	cpi	r24, 0x01	; 1
    c262:	31 f0       	breq	.+12     	; 0xc270 <_Z16Gsm_Gprs_Networkv+0x13e>
				{
					_kDELAY_MS(120000);
    c264:	60 ec       	ldi	r22, 0xC0	; 192
    c266:	74 ed       	ldi	r23, 0xD4	; 212
    c268:	81 e0       	ldi	r24, 0x01	; 1
    c26a:	90 e0       	ldi	r25, 0x00	; 0
    c26c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
				}
				_kSERIAL_AT.println(F("ATE0"));
    c270:	6b ed       	ldi	r22, 0xDB	; 219
    c272:	7f e1       	ldi	r23, 0x1F	; 31
    c274:	8c e2       	ldi	r24, 0x2C	; 44
    c276:	98 e1       	ldi	r25, 0x18	; 24
    c278:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c27c:	02 e0       	ldi	r16, 0x02	; 2
    c27e:	28 eb       	ldi	r18, 0xB8	; 184
    c280:	3b e0       	ldi	r19, 0x0B	; 11
    c282:	40 e0       	ldi	r20, 0x00	; 0
    c284:	50 e0       	ldi	r21, 0x00	; 0
    c286:	6e e1       	ldi	r22, 0x1E	; 30
    c288:	73 e0       	ldi	r23, 0x03	; 3
    c28a:	80 e0       	ldi	r24, 0x00	; 0
    c28c:	90 e0       	ldi	r25, 0x00	; 0
    c28e:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
				//return 0;
			}
		}


		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c292:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    c296:	81 30       	cpi	r24, 0x01	; 1
    c298:	09 f0       	breq	.+2      	; 0xc29c <_Z16Gsm_Gprs_Networkv+0x16a>
    c29a:	49 c0       	rjmp	.+146    	; 0xc32e <_Z16Gsm_Gprs_Networkv+0x1fc>
		{			
			_kSERAIL_MON_WRITE("Succs Connected to GPRS network");                /* for debugging purpose */
    c29c:	6b eb       	ldi	r22, 0xBB	; 187
    c29e:	7f e1       	ldi	r23, 0x1F	; 31
    c2a0:	8f e6       	ldi	r24, 0x6F	; 111
    c2a2:	96 e1       	ldi	r25, 0x16	; 22
    c2a4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c2a8:	8f e6       	ldi	r24, 0x6F	; 111
    c2aa:	96 e1       	ldi	r25, 0x16	; 22
    c2ac:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    c2b0:	3e c0       	rjmp	.+124    	; 0xc32e <_Z16Gsm_Gprs_Networkv+0x1fc>
		return 1;
		
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    c2b2:	81 30       	cpi	r24, 0x01	; 1
    c2b4:	51 f4       	brne	.+20     	; 0xc2ca <_Z16Gsm_Gprs_Networkv+0x198>
		{
			_kSERAIL_MON_WRITE("fail to connect gsm/GPRS network");                /* for debugging purpose */
    c2b6:	6a e9       	ldi	r22, 0x9A	; 154
    c2b8:	7f e1       	ldi	r23, 0x1F	; 31
    c2ba:	8f e6       	ldi	r24, 0x6F	; 111
    c2bc:	96 e1       	ldi	r25, 0x16	; 22
    c2be:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    c2c2:	8f e6       	ldi	r24, 0x6F	; 111
    c2c4:	96 e1       	ldi	r25, 0x16	; 22
    c2c6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    c2ca:	6e e8       	ldi	r22, 0x8E	; 142
    c2cc:	7f e1       	ldi	r23, 0x1F	; 31
    c2ce:	8c e2       	ldi	r24, 0x2C	; 44
    c2d0:	98 e1       	ldi	r25, 0x18	; 24
    c2d2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    c2d6:	01 e0       	ldi	r16, 0x01	; 1
    c2d8:	20 e1       	ldi	r18, 0x10	; 16
    c2da:	37 e2       	ldi	r19, 0x27	; 39
    c2dc:	40 e0       	ldi	r20, 0x00	; 0
    c2de:	50 e0       	ldi	r21, 0x00	; 0
    c2e0:	6e e1       	ldi	r22, 0x1E	; 30
    c2e2:	73 e0       	ldi	r23, 0x03	; 3
    c2e4:	80 e0       	ldi	r24, 0x00	; 0
    c2e6:	90 e0       	ldi	r25, 0x00	; 0
    c2e8:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    c2ec:	60 e1       	ldi	r22, 0x10	; 16
    c2ee:	77 e2       	ldi	r23, 0x27	; 39
    c2f0:	80 e0       	ldi	r24, 0x00	; 0
    c2f2:	90 e0       	ldi	r25, 0x00	; 0
    c2f4:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    c2f8:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
    c2fc:	81 30       	cpi	r24, 0x01	; 1
    c2fe:	31 f0       	breq	.+12     	; 0xc30c <_Z16Gsm_Gprs_Networkv+0x1da>
		{
			_kDELAY_MS(120000);
    c300:	60 ec       	ldi	r22, 0xC0	; 192
    c302:	74 ed       	ldi	r23, 0xD4	; 212
    c304:	81 e0       	ldi	r24, 0x01	; 1
    c306:	90 e0       	ldi	r25, 0x00	; 0
    c308:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
		}
		_kSERIAL_AT.println(F("ATE0"));
    c30c:	69 e8       	ldi	r22, 0x89	; 137
    c30e:	7f e1       	ldi	r23, 0x1F	; 31
    c310:	8c e2       	ldi	r24, 0x2C	; 44
    c312:	98 e1       	ldi	r25, 0x18	; 24
    c314:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    c318:	02 e0       	ldi	r16, 0x02	; 2
    c31a:	28 eb       	ldi	r18, 0xB8	; 184
    c31c:	3b e0       	ldi	r19, 0x0B	; 11
    c31e:	40 e0       	ldi	r20, 0x00	; 0
    c320:	50 e0       	ldi	r21, 0x00	; 0
    c322:	6e e1       	ldi	r22, 0x1E	; 30
    c324:	73 e0       	ldi	r23, 0x03	; 3
    c326:	80 e0       	ldi	r24, 0x00	; 0
    c328:	90 e0       	ldi	r25, 0x00	; 0
    c32a:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
		return 0;
		
	}
	
}
    c32e:	8f 2d       	mov	r24, r15
    c330:	cc 59       	subi	r28, 0x9C	; 156
    c332:	df 4f       	sbci	r29, 0xFF	; 255
    c334:	0f b6       	in	r0, 0x3f	; 63
    c336:	f8 94       	cli
    c338:	de bf       	out	0x3e, r29	; 62
    c33a:	0f be       	out	0x3f, r0	; 63
    c33c:	cd bf       	out	0x3d, r28	; 61
    c33e:	df 91       	pop	r29
    c340:	cf 91       	pop	r28
    c342:	1f 91       	pop	r17
    c344:	0f 91       	pop	r16
    c346:	ff 90       	pop	r15
    c348:	08 95       	ret

0000c34a <__vector_12>:
		Serial.println(response);
		_kSERIAL_MON_CLEAR();
	}
	sprintf((char *)_gRecvd_Data,"%s",(char *)response);
	return answer;
}
    c34a:	1f 92       	push	r1
    c34c:	0f 92       	push	r0
    c34e:	0f b6       	in	r0, 0x3f	; 63
    c350:	0f 92       	push	r0
    c352:	11 24       	eor	r1, r1
    c354:	0b b6       	in	r0, 0x3b	; 59
    c356:	0f 92       	push	r0
    c358:	2f 93       	push	r18
    c35a:	8f 93       	push	r24
    c35c:	9f 93       	push	r25
    c35e:	ef 93       	push	r30
    c360:	ff 93       	push	r31
    c362:	e7 e0       	ldi	r30, 0x07	; 7
    c364:	f1 e0       	ldi	r31, 0x01	; 1
    c366:	80 81       	ld	r24, Z
    c368:	80 64       	ori	r24, 0x40	; 64
    c36a:	80 83       	st	Z, r24
    c36c:	e8 e0       	ldi	r30, 0x08	; 8
    c36e:	f1 e0       	ldi	r31, 0x01	; 1
    c370:	80 81       	ld	r24, Z
    c372:	8f 7b       	andi	r24, 0xBF	; 191
    c374:	80 83       	st	Z, r24
    c376:	2f ef       	ldi	r18, 0xFF	; 255
    c378:	83 ed       	ldi	r24, 0xD3	; 211
    c37a:	90 e3       	ldi	r25, 0x30	; 48
    c37c:	21 50       	subi	r18, 0x01	; 1
    c37e:	80 40       	sbci	r24, 0x00	; 0
    c380:	90 40       	sbci	r25, 0x00	; 0
    c382:	e1 f7       	brne	.-8      	; 0xc37c <__vector_12+0x32>
    c384:	00 c0       	rjmp	.+0      	; 0xc386 <__vector_12+0x3c>
    c386:	00 00       	nop
    c388:	80 81       	ld	r24, Z
    c38a:	80 64       	ori	r24, 0x40	; 64
    c38c:	80 83       	st	Z, r24
    c38e:	0f b6       	in	r0, 0x3f	; 63
    c390:	f8 94       	cli
    c392:	a8 95       	wdr
    c394:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c398:	88 61       	ori	r24, 0x18	; 24
    c39a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c39e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    c3a2:	0f be       	out	0x3f, r0	; 63
    c3a4:	ff 91       	pop	r31
    c3a6:	ef 91       	pop	r30
    c3a8:	9f 91       	pop	r25
    c3aa:	8f 91       	pop	r24
    c3ac:	2f 91       	pop	r18
    c3ae:	0f 90       	pop	r0
    c3b0:	0b be       	out	0x3b, r0	; 59
    c3b2:	0f 90       	pop	r0
    c3b4:	0f be       	out	0x3f, r0	; 63
    c3b6:	0f 90       	pop	r0
    c3b8:	1f 90       	pop	r1
    c3ba:	18 95       	reti

0000c3bc <_Z20Timer1_Interrupt_Intv>:
    c3bc:	f8 94       	cli
    c3be:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
    c3c2:	e1 e8       	ldi	r30, 0x81	; 129
    c3c4:	f0 e0       	ldi	r31, 0x00	; 0
    c3c6:	10 82       	st	Z, r1
    c3c8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
    c3cc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
    c3d0:	88 e0       	ldi	r24, 0x08	; 8
    c3d2:	9d e3       	ldi	r25, 0x3D	; 61
    c3d4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
    c3d8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
    c3dc:	80 81       	ld	r24, Z
    c3de:	88 60       	ori	r24, 0x08	; 8
    c3e0:	80 83       	st	Z, r24
    c3e2:	80 81       	ld	r24, Z
    c3e4:	85 60       	ori	r24, 0x05	; 5
    c3e6:	80 83       	st	Z, r24
    c3e8:	ef e6       	ldi	r30, 0x6F	; 111
    c3ea:	f0 e0       	ldi	r31, 0x00	; 0
    c3ec:	80 81       	ld	r24, Z
    c3ee:	82 60       	ori	r24, 0x02	; 2
    c3f0:	80 83       	st	Z, r24
    c3f2:	78 94       	sei
    c3f4:	08 95       	ret

0000c3f6 <__vector_17>:
    c3f6:	1f 92       	push	r1
    c3f8:	0f 92       	push	r0
    c3fa:	0f b6       	in	r0, 0x3f	; 63
    c3fc:	0f 92       	push	r0
    c3fe:	11 24       	eor	r1, r1
    c400:	0b b6       	in	r0, 0x3b	; 59
    c402:	0f 92       	push	r0
    c404:	2f 93       	push	r18
    c406:	3f 93       	push	r19
    c408:	4f 93       	push	r20
    c40a:	5f 93       	push	r21
    c40c:	6f 93       	push	r22
    c40e:	7f 93       	push	r23
    c410:	8f 93       	push	r24
    c412:	9f 93       	push	r25
    c414:	af 93       	push	r26
    c416:	bf 93       	push	r27
    c418:	ef 93       	push	r30
    c41a:	ff 93       	push	r31
    c41c:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gfault_Occure>
    c420:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gfault_Occure+0x1>
    c424:	00 97       	sbiw	r24, 0x00	; 0
    c426:	29 f0       	breq	.+10     	; 0xc432 <__vector_17+0x3c>
    c428:	01 97       	sbiw	r24, 0x01	; 1
    c42a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    c42e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
    c432:	81 e0       	ldi	r24, 0x01	; 1
    c434:	90 e0       	ldi	r25, 0x00	; 0
    c436:	a0 e0       	ldi	r26, 0x00	; 0
    c438:	b0 e0       	ldi	r27, 0x00	; 0
    c43a:	80 93 83 0c 	sts	0x0C83, r24	; 0x800c83 <_g_1Sec_Time>
    c43e:	90 93 84 0c 	sts	0x0C84, r25	; 0x800c84 <_g_1Sec_Time+0x1>
    c442:	a0 93 85 0c 	sts	0x0C85, r26	; 0x800c85 <_g_1Sec_Time+0x2>
    c446:	b0 93 86 0c 	sts	0x0C86, r27	; 0x800c86 <_g_1Sec_Time+0x3>
    c44a:	80 91 7f 15 	lds	r24, 0x157F	; 0x80157f <_sRuble_Parameters+0x1a>
    c44e:	90 91 80 15 	lds	r25, 0x1580	; 0x801580 <_sRuble_Parameters+0x1b>
    c452:	01 96       	adiw	r24, 0x01	; 1
    c454:	90 93 80 15 	sts	0x1580, r25	; 0x801580 <_sRuble_Parameters+0x1b>
    c458:	80 93 7f 15 	sts	0x157F, r24	; 0x80157f <_sRuble_Parameters+0x1a>
    c45c:	80 91 2e 0c 	lds	r24, 0x0C2E	; 0x800c2e <_ZZ11__vector_17E14display_conter>
    c460:	8f 5f       	subi	r24, 0xFF	; 255
    c462:	85 30       	cpi	r24, 0x05	; 5
    c464:	18 f4       	brcc	.+6      	; 0xc46c <__vector_17+0x76>
    c466:	80 93 2e 0c 	sts	0x0C2E, r24	; 0x800c2e <_ZZ11__vector_17E14display_conter>
    c46a:	05 c0       	rjmp	.+10     	; 0xc476 <__vector_17+0x80>
    c46c:	10 92 2e 0c 	sts	0x0C2E, r1	; 0x800c2e <_ZZ11__vector_17E14display_conter>
    c470:	81 e0       	ldi	r24, 0x01	; 1
    c472:	80 93 16 16 	sts	0x1616, r24	; 0x801616 <_sRuble_Parameters+0xb1>
    c476:	80 91 2d 0c 	lds	r24, 0x0C2D	; 0x800c2d <_ZZ11__vector_17E8ct_timer>
    c47a:	8f 5f       	subi	r24, 0xFF	; 255
    c47c:	8a 30       	cpi	r24, 0x0A	; 10
    c47e:	18 f4       	brcc	.+6      	; 0xc486 <__vector_17+0x90>
    c480:	80 93 2d 0c 	sts	0x0C2D, r24	; 0x800c2d <_ZZ11__vector_17E8ct_timer>
    c484:	08 c0       	rjmp	.+16     	; 0xc496 <__vector_17+0xa0>
    c486:	10 92 2d 0c 	sts	0x0C2D, r1	; 0x800c2d <_ZZ11__vector_17E8ct_timer>
    c48a:	81 e0       	ldi	r24, 0x01	; 1
    c48c:	90 e0       	ldi	r25, 0x00	; 0
    c48e:	90 93 82 15 	sts	0x1582, r25	; 0x801582 <_sRuble_Parameters+0x1d>
    c492:	80 93 81 15 	sts	0x1581, r24	; 0x801581 <_sRuble_Parameters+0x1c>
    c496:	80 91 21 16 	lds	r24, 0x1621	; 0x801621 <_sRuble_Parameters+0xbc>
    c49a:	88 23       	and	r24, r24
    c49c:	19 f0       	breq	.+6      	; 0xc4a4 <__vector_17+0xae>
    c49e:	81 50       	subi	r24, 0x01	; 1
    c4a0:	80 93 21 16 	sts	0x1621, r24	; 0x801621 <_sRuble_Parameters+0xbc>
    c4a4:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    c4a8:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    c4ac:	89 2b       	or	r24, r25
    c4ae:	49 f0       	breq	.+18     	; 0xc4c2 <__vector_17+0xcc>
    c4b0:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <_sSchedules+0x4>
    c4b4:	90 91 f5 08 	lds	r25, 0x08F5	; 0x8008f5 <_sSchedules+0x5>
    c4b8:	01 97       	sbiw	r24, 0x01	; 1
    c4ba:	90 93 f5 08 	sts	0x08F5, r25	; 0x8008f5 <_sSchedules+0x5>
    c4be:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <_sSchedules+0x4>
    c4c2:	80 91 2b 0c 	lds	r24, 0x0C2B	; 0x800c2b <_ZZ11__vector_17E22pub_ruble_data_counter>
    c4c6:	90 91 2c 0c 	lds	r25, 0x0C2C	; 0x800c2c <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c4ca:	01 96       	adiw	r24, 0x01	; 1
    c4cc:	8d 32       	cpi	r24, 0x2D	; 45
    c4ce:	21 e0       	ldi	r18, 0x01	; 1
    c4d0:	92 07       	cpc	r25, r18
    c4d2:	28 f4       	brcc	.+10     	; 0xc4de <__vector_17+0xe8>
    c4d4:	90 93 2c 0c 	sts	0x0C2C, r25	; 0x800c2c <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c4d8:	80 93 2b 0c 	sts	0x0C2B, r24	; 0x800c2b <_ZZ11__vector_17E22pub_ruble_data_counter>
    c4dc:	0d c0       	rjmp	.+26     	; 0xc4f8 <__vector_17+0x102>
    c4de:	10 92 2c 0c 	sts	0x0C2C, r1	; 0x800c2c <_ZZ11__vector_17E22pub_ruble_data_counter+0x1>
    c4e2:	10 92 2b 0c 	sts	0x0C2B, r1	; 0x800c2b <_ZZ11__vector_17E22pub_ruble_data_counter>
    c4e6:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    c4ea:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    c4ee:	84 60       	ori	r24, 0x04	; 4
    c4f0:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    c4f4:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    c4f8:	ef e9       	ldi	r30, 0x9F	; 159
    c4fa:	ff e0       	ldi	r31, 0x0F	; 15
    c4fc:	29 e1       	ldi	r18, 0x19	; 25
    c4fe:	31 e1       	ldi	r19, 0x11	; 17
    c500:	83 81       	ldd	r24, Z+3	; 0x03
    c502:	94 81       	ldd	r25, Z+4	; 0x04
    c504:	00 97       	sbiw	r24, 0x00	; 0
    c506:	19 f0       	breq	.+6      	; 0xc50e <__vector_17+0x118>
    c508:	01 97       	sbiw	r24, 0x01	; 1
    c50a:	94 83       	std	Z+4, r25	; 0x04
    c50c:	83 83       	std	Z+3, r24	; 0x03
    c50e:	7b 96       	adiw	r30, 0x1b	; 27
    c510:	2e 17       	cp	r18, r30
    c512:	3f 07       	cpc	r19, r31
    c514:	a9 f7       	brne	.-22     	; 0xc500 <__vector_17+0x10a>
    c516:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
    c51a:	81 30       	cpi	r24, 0x01	; 1
    c51c:	59 f4       	brne	.+22     	; 0xc534 <__vector_17+0x13e>
    c51e:	80 91 5e 0b 	lds	r24, 0x0B5E	; 0x800b5e <_sSchedules+0x26e>
    c522:	88 23       	and	r24, r24
    c524:	09 f4       	brne	.+2      	; 0xc528 <__vector_17+0x132>
    c526:	75 c0       	rjmp	.+234    	; 0xc612 <__vector_17+0x21c>
    c528:	80 91 5e 0b 	lds	r24, 0x0B5E	; 0x800b5e <_sSchedules+0x26e>
    c52c:	81 50       	subi	r24, 0x01	; 1
    c52e:	80 93 5e 0b 	sts	0x0B5E, r24	; 0x800b5e <_sSchedules+0x26e>
    c532:	6f c0       	rjmp	.+222    	; 0xc612 <__vector_17+0x21c>
    c534:	20 91 4a 16 	lds	r18, 0x164A	; 0x80164a <_sRuble_Parameters+0xe5>
    c538:	80 91 83 15 	lds	r24, 0x1583	; 0x801583 <_sRuble_Parameters+0x1e>
    c53c:	90 91 84 15 	lds	r25, 0x1584	; 0x801584 <_sRuble_Parameters+0x1f>
    c540:	22 23       	and	r18, r18
    c542:	e1 f1       	breq	.+120    	; 0xc5bc <__vector_17+0x1c6>
    c544:	20 91 69 09 	lds	r18, 0x0969	; 0x800969 <_sSchedules+0x79>
    c548:	21 30       	cpi	r18, 0x01	; 1
    c54a:	79 f4       	brne	.+30     	; 0xc56a <__vector_17+0x174>
    c54c:	20 91 f8 08 	lds	r18, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
    c550:	30 91 f9 08 	lds	r19, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
    c554:	2f 5f       	subi	r18, 0xFF	; 255
    c556:	3f 4f       	sbci	r19, 0xFF	; 255
    c558:	30 93 f9 08 	sts	0x08F9, r19	; 0x8008f9 <_sSchedules+0x9>
    c55c:	20 93 f8 08 	sts	0x08F8, r18	; 0x8008f8 <_sSchedules+0x8>
    c560:	20 91 a8 0b 	lds	r18, 0x0BA8	; 0x800ba8 <_sSchedules+0x2b8>
    c564:	2f 5f       	subi	r18, 0xFF	; 255
    c566:	20 93 a8 0b 	sts	0x0BA8, r18	; 0x800ba8 <_sSchedules+0x2b8>
    c56a:	20 91 4e 16 	lds	r18, 0x164E	; 0x80164e <_sRuble_Parameters+0xe9>
    c56e:	30 91 4f 16 	lds	r19, 0x164F	; 0x80164f <_sRuble_Parameters+0xea>
    c572:	23 2b       	or	r18, r19
    c574:	a1 f4       	brne	.+40     	; 0xc59e <__vector_17+0x1a8>
    c576:	40 91 44 16 	lds	r20, 0x1644	; 0x801644 <_sRuble_Parameters+0xdf>
    c57a:	50 91 45 16 	lds	r21, 0x1645	; 0x801645 <_sRuble_Parameters+0xe0>
    c57e:	60 91 46 16 	lds	r22, 0x1646	; 0x801646 <_sRuble_Parameters+0xe1>
    c582:	70 91 47 16 	lds	r23, 0x1647	; 0x801647 <_sRuble_Parameters+0xe2>
    c586:	4f 5f       	subi	r20, 0xFF	; 255
    c588:	5f 4f       	sbci	r21, 0xFF	; 255
    c58a:	6f 4f       	sbci	r22, 0xFF	; 255
    c58c:	7f 4f       	sbci	r23, 0xFF	; 255
    c58e:	40 93 44 16 	sts	0x1644, r20	; 0x801644 <_sRuble_Parameters+0xdf>
    c592:	50 93 45 16 	sts	0x1645, r21	; 0x801645 <_sRuble_Parameters+0xe0>
    c596:	60 93 46 16 	sts	0x1646, r22	; 0x801646 <_sRuble_Parameters+0xe1>
    c59a:	70 93 47 16 	sts	0x1647, r23	; 0x801647 <_sRuble_Parameters+0xe2>
    c59e:	00 97       	sbiw	r24, 0x00	; 0
    c5a0:	79 f4       	brne	.+30     	; 0xc5c0 <__vector_17+0x1ca>
    c5a2:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
    c5a6:	30 91 7c 15 	lds	r19, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
    c5aa:	21 15       	cp	r18, r1
    c5ac:	31 05       	cpc	r19, r1
    c5ae:	69 f0       	breq	.+26     	; 0xc5ca <__vector_17+0x1d4>
    c5b0:	21 50       	subi	r18, 0x01	; 1
    c5b2:	31 09       	sbc	r19, r1
    c5b4:	30 93 7c 15 	sts	0x157C, r19	; 0x80157c <_sRuble_Parameters+0x17>
    c5b8:	20 93 7b 15 	sts	0x157B, r18	; 0x80157b <_sRuble_Parameters+0x16>
    c5bc:	00 97       	sbiw	r24, 0x00	; 0
    c5be:	29 f0       	breq	.+10     	; 0xc5ca <__vector_17+0x1d4>
    c5c0:	01 97       	sbiw	r24, 0x01	; 1
    c5c2:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
    c5c6:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
    c5ca:	80 e0       	ldi	r24, 0x00	; 0
    c5cc:	90 e0       	ldi	r25, 0x00	; 0
    c5ce:	9c 01       	movw	r18, r24
    c5d0:	20 51       	subi	r18, 0x10	; 16
    c5d2:	37 4f       	sbci	r19, 0xF7	; 247
    c5d4:	f9 01       	movw	r30, r18
    c5d6:	ed 5a       	subi	r30, 0xAD	; 173
    c5d8:	fd 4f       	sbci	r31, 0xFD	; 253
    c5da:	40 81       	ld	r20, Z
    c5dc:	44 23       	and	r20, r20
    c5de:	19 f0       	breq	.+6      	; 0xc5e6 <__vector_17+0x1f0>
    c5e0:	40 81       	ld	r20, Z
    c5e2:	41 50       	subi	r20, 0x01	; 1
    c5e4:	40 83       	st	Z, r20
    c5e6:	f9 01       	movw	r30, r18
    c5e8:	e0 5a       	subi	r30, 0xA0	; 160
    c5ea:	fd 4f       	sbci	r31, 0xFD	; 253
    c5ec:	20 81       	ld	r18, Z
    c5ee:	21 30       	cpi	r18, 0x01	; 1
    c5f0:	59 f4       	brne	.+22     	; 0xc608 <__vector_17+0x212>
    c5f2:	fc 01       	movw	r30, r24
    c5f4:	ee 0f       	add	r30, r30
    c5f6:	ff 1f       	adc	r31, r31
    c5f8:	ec 5a       	subi	r30, 0xAC	; 172
    c5fa:	f4 4f       	sbci	r31, 0xF4	; 244
    c5fc:	20 81       	ld	r18, Z
    c5fe:	31 81       	ldd	r19, Z+1	; 0x01
    c600:	2f 5f       	subi	r18, 0xFF	; 255
    c602:	3f 4f       	sbci	r19, 0xFF	; 255
    c604:	31 83       	std	Z+1, r19	; 0x01
    c606:	20 83       	st	Z, r18
    c608:	01 96       	adiw	r24, 0x01	; 1
    c60a:	83 30       	cpi	r24, 0x03	; 3
    c60c:	91 05       	cpc	r25, r1
    c60e:	f9 f6       	brne	.-66     	; 0xc5ce <__vector_17+0x1d8>
    c610:	86 cf       	rjmp	.-244    	; 0xc51e <__vector_17+0x128>
    c612:	80 91 5c 0b 	lds	r24, 0x0B5C	; 0x800b5c <_sSchedules+0x26c>
    c616:	88 23       	and	r24, r24
    c618:	29 f0       	breq	.+10     	; 0xc624 <__vector_17+0x22e>
    c61a:	80 91 5c 0b 	lds	r24, 0x0B5C	; 0x800b5c <_sSchedules+0x26c>
    c61e:	81 50       	subi	r24, 0x01	; 1
    c620:	80 93 5c 0b 	sts	0x0B5C, r24	; 0x800b5c <_sSchedules+0x26c>
    c624:	80 91 4e 16 	lds	r24, 0x164E	; 0x80164e <_sRuble_Parameters+0xe9>
    c628:	90 91 4f 16 	lds	r25, 0x164F	; 0x80164f <_sRuble_Parameters+0xea>
    c62c:	00 97       	sbiw	r24, 0x00	; 0
    c62e:	61 f4       	brne	.+24     	; 0xc648 <__vector_17+0x252>
    c630:	80 91 48 16 	lds	r24, 0x1648	; 0x801648 <_sRuble_Parameters+0xe3>
    c634:	90 91 49 16 	lds	r25, 0x1649	; 0x801649 <_sRuble_Parameters+0xe4>
    c638:	00 97       	sbiw	r24, 0x00	; 0
    c63a:	59 f0       	breq	.+22     	; 0xc652 <__vector_17+0x25c>
    c63c:	01 97       	sbiw	r24, 0x01	; 1
    c63e:	90 93 49 16 	sts	0x1649, r25	; 0x801649 <_sRuble_Parameters+0xe4>
    c642:	80 93 48 16 	sts	0x1648, r24	; 0x801648 <_sRuble_Parameters+0xe3>
    c646:	05 c0       	rjmp	.+10     	; 0xc652 <__vector_17+0x25c>
    c648:	01 97       	sbiw	r24, 0x01	; 1
    c64a:	90 93 4f 16 	sts	0x164F, r25	; 0x80164f <_sRuble_Parameters+0xea>
    c64e:	80 93 4e 16 	sts	0x164E, r24	; 0x80164e <_sRuble_Parameters+0xe9>
    c652:	80 91 26 16 	lds	r24, 0x1626	; 0x801626 <_sRuble_Parameters+0xc1>
    c656:	90 91 27 16 	lds	r25, 0x1627	; 0x801627 <_sRuble_Parameters+0xc2>
    c65a:	00 97       	sbiw	r24, 0x00	; 0
    c65c:	29 f0       	breq	.+10     	; 0xc668 <__vector_17+0x272>
    c65e:	01 97       	sbiw	r24, 0x01	; 1
    c660:	90 93 27 16 	sts	0x1627, r25	; 0x801627 <_sRuble_Parameters+0xc2>
    c664:	80 93 26 16 	sts	0x1626, r24	; 0x801626 <_sRuble_Parameters+0xc1>
    c668:	80 91 9f 0c 	lds	r24, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
    c66c:	90 91 a0 0c 	lds	r25, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
    c670:	01 96       	adiw	r24, 0x01	; 1
    c672:	90 93 a0 0c 	sts	0x0CA0, r25	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
    c676:	80 93 9f 0c 	sts	0x0C9F, r24	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
    c67a:	80 91 9d 0c 	lds	r24, 0x0C9D	; 0x800c9d <_gWait_Blower_Time>
    c67e:	90 91 9e 0c 	lds	r25, 0x0C9E	; 0x800c9e <_gWait_Blower_Time+0x1>
    c682:	00 97       	sbiw	r24, 0x00	; 0
    c684:	29 f0       	breq	.+10     	; 0xc690 <__vector_17+0x29a>
    c686:	01 97       	sbiw	r24, 0x01	; 1
    c688:	90 93 9e 0c 	sts	0x0C9E, r25	; 0x800c9e <_gWait_Blower_Time+0x1>
    c68c:	80 93 9d 0c 	sts	0x0C9D, r24	; 0x800c9d <_gWait_Blower_Time>
    c690:	80 91 98 0c 	lds	r24, 0x0C98	; 0x800c98 <_gWdt_Counter>
    c694:	90 91 99 0c 	lds	r25, 0x0C99	; 0x800c99 <_gWdt_Counter+0x1>
    c698:	01 96       	adiw	r24, 0x01	; 1
    c69a:	90 93 99 0c 	sts	0x0C99, r25	; 0x800c99 <_gWdt_Counter+0x1>
    c69e:	80 93 98 0c 	sts	0x0C98, r24	; 0x800c98 <_gWdt_Counter>
    c6a2:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
    c6a6:	8c 33       	cpi	r24, 0x3C	; 60
    c6a8:	28 f4       	brcc	.+10     	; 0xc6b4 <__vector_17+0x2be>
    c6aa:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
    c6ae:	8f 5f       	subi	r24, 0xFF	; 255
    c6b0:	80 93 96 0c 	sts	0x0C96, r24	; 0x800c96 <_gTank_Topic_check>
    c6b4:	80 91 97 0c 	lds	r24, 0x0C97	; 0x800c97 <_gStart_Wdt>
    c6b8:	81 30       	cpi	r24, 0x01	; 1
    c6ba:	39 f4       	brne	.+14     	; 0xc6ca <__vector_17+0x2d4>
    c6bc:	80 91 98 0c 	lds	r24, 0x0C98	; 0x800c98 <_gWdt_Counter>
    c6c0:	90 91 99 0c 	lds	r25, 0x0C99	; 0x800c99 <_gWdt_Counter+0x1>
    c6c4:	80 3f       	cpi	r24, 0xF0	; 240
    c6c6:	91 05       	cpc	r25, r1
    c6c8:	08 f4       	brcc	.+2      	; 0xc6cc <__vector_17+0x2d6>
    c6ca:	a8 95       	wdr
    c6cc:	ff 91       	pop	r31
    c6ce:	ef 91       	pop	r30
    c6d0:	bf 91       	pop	r27
    c6d2:	af 91       	pop	r26
    c6d4:	9f 91       	pop	r25
    c6d6:	8f 91       	pop	r24
    c6d8:	7f 91       	pop	r23
    c6da:	6f 91       	pop	r22
    c6dc:	5f 91       	pop	r21
    c6de:	4f 91       	pop	r20
    c6e0:	3f 91       	pop	r19
    c6e2:	2f 91       	pop	r18
    c6e4:	0f 90       	pop	r0
    c6e6:	0b be       	out	0x3b, r0	; 59
    c6e8:	0f 90       	pop	r0
    c6ea:	0f be       	out	0x3f, r0	; 63
    c6ec:	0f 90       	pop	r0
    c6ee:	1f 90       	pop	r1
    c6f0:	18 95       	reti

0000c6f2 <_Z20Timer0_Interrupt_Intv>:
    c6f2:	f8 94       	cli
    c6f4:	a0 eb       	ldi	r26, 0xB0	; 176
    c6f6:	b0 e0       	ldi	r27, 0x00	; 0
    c6f8:	1c 92       	st	X, r1
    c6fa:	e1 eb       	ldi	r30, 0xB1	; 177
    c6fc:	f0 e0       	ldi	r31, 0x00	; 0
    c6fe:	10 82       	st	Z, r1
    c700:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7c00b2>
    c704:	8c e7       	ldi	r24, 0x7C	; 124
    c706:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
    c70a:	8c 91       	ld	r24, X
    c70c:	82 60       	ori	r24, 0x02	; 2
    c70e:	8c 93       	st	X, r24
    c710:	80 81       	ld	r24, Z
    c712:	85 60       	ori	r24, 0x05	; 5
    c714:	80 83       	st	Z, r24
    c716:	e0 e7       	ldi	r30, 0x70	; 112
    c718:	f0 e0       	ldi	r31, 0x00	; 0
    c71a:	80 81       	ld	r24, Z
    c71c:	82 60       	ori	r24, 0x02	; 2
    c71e:	80 83       	st	Z, r24
    c720:	78 94       	sei
    c722:	08 95       	ret

0000c724 <__vector_13>:
    c724:	1f 92       	push	r1
    c726:	0f 92       	push	r0
    c728:	0f b6       	in	r0, 0x3f	; 63
    c72a:	0f 92       	push	r0
    c72c:	11 24       	eor	r1, r1
    c72e:	0b b6       	in	r0, 0x3b	; 59
    c730:	0f 92       	push	r0
    c732:	2f 93       	push	r18
    c734:	3f 93       	push	r19
    c736:	4f 93       	push	r20
    c738:	5f 93       	push	r21
    c73a:	6f 93       	push	r22
    c73c:	7f 93       	push	r23
    c73e:	8f 93       	push	r24
    c740:	9f 93       	push	r25
    c742:	af 93       	push	r26
    c744:	bf 93       	push	r27
    c746:	ef 93       	push	r30
    c748:	ff 93       	push	r31
    c74a:	80 91 87 0c 	lds	r24, 0x0C87	; 0x800c87 <g_uTick>
    c74e:	90 91 88 0c 	lds	r25, 0x0C88	; 0x800c88 <g_uTick+0x1>
    c752:	a0 91 89 0c 	lds	r26, 0x0C89	; 0x800c89 <g_uTick+0x2>
    c756:	b0 91 8a 0c 	lds	r27, 0x0C8A	; 0x800c8a <g_uTick+0x3>
    c75a:	01 96       	adiw	r24, 0x01	; 1
    c75c:	a1 1d       	adc	r26, r1
    c75e:	b1 1d       	adc	r27, r1
    c760:	80 93 87 0c 	sts	0x0C87, r24	; 0x800c87 <g_uTick>
    c764:	90 93 88 0c 	sts	0x0C88, r25	; 0x800c88 <g_uTick+0x1>
    c768:	a0 93 89 0c 	sts	0x0C89, r26	; 0x800c89 <g_uTick+0x2>
    c76c:	b0 93 8a 0c 	sts	0x0C8A, r27	; 0x800c8a <g_uTick+0x3>
    c770:	0e 94 8d 84 	call	0x1091a	; 0x1091a <_Z18Read_Switch_Statusv>
    c774:	ff 91       	pop	r31
    c776:	ef 91       	pop	r30
    c778:	bf 91       	pop	r27
    c77a:	af 91       	pop	r26
    c77c:	9f 91       	pop	r25
    c77e:	8f 91       	pop	r24
    c780:	7f 91       	pop	r23
    c782:	6f 91       	pop	r22
    c784:	5f 91       	pop	r21
    c786:	4f 91       	pop	r20
    c788:	3f 91       	pop	r19
    c78a:	2f 91       	pop	r18
    c78c:	0f 90       	pop	r0
    c78e:	0b be       	out	0x3b, r0	; 59
    c790:	0f 90       	pop	r0
    c792:	0f be       	out	0x3f, r0	; 63
    c794:	0f 90       	pop	r0
    c796:	1f 90       	pop	r1
    c798:	18 95       	reti

0000c79a <_Z8Lcd_Initv>:
    c79a:	87 e7       	ldi	r24, 0x77	; 119
    c79c:	9c e0       	ldi	r25, 0x0C	; 12
    c79e:	0c 94 2a d7 	jmp	0x1ae54	; 0x1ae54 <_ZN17LiquidCrystal_I2C4initEv>
    c7a2:	08 95       	ret

0000c7a4 <_Z14Lcd_Print_BuffPchhh>:
    c7a4:	cf 92       	push	r12
    c7a6:	df 92       	push	r13
    c7a8:	ef 92       	push	r14
    c7aa:	ff 92       	push	r15
    c7ac:	0f 93       	push	r16
    c7ae:	1f 93       	push	r17
    c7b0:	cf 93       	push	r28
    c7b2:	df 93       	push	r29
    c7b4:	7c 01       	movw	r14, r24
    c7b6:	c4 2e       	mov	r12, r20
    c7b8:	ec 01       	movw	r28, r24
    c7ba:	06 2f       	mov	r16, r22
    c7bc:	10 e0       	ldi	r17, 0x00	; 0
    c7be:	ce 01       	movw	r24, r28
    c7c0:	8e 19       	sub	r24, r14
    c7c2:	9f 09       	sbc	r25, r15
    c7c4:	80 17       	cp	r24, r16
    c7c6:	91 07       	cpc	r25, r17
    c7c8:	84 f4       	brge	.+32     	; 0xc7ea <_Z14Lcd_Print_BuffPchhh+0x46>
    c7ca:	dd 24       	eor	r13, r13
    c7cc:	d3 94       	inc	r13
    c7ce:	d2 0e       	add	r13, r18
    c7d0:	4c 2d       	mov	r20, r12
    c7d2:	62 2f       	mov	r22, r18
    c7d4:	87 e7       	ldi	r24, 0x77	; 119
    c7d6:	9c e0       	ldi	r25, 0x0C	; 12
    c7d8:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    c7dc:	69 91       	ld	r22, Y+
    c7de:	87 e7       	ldi	r24, 0x77	; 119
    c7e0:	9c e0       	ldi	r25, 0x0C	; 12
    c7e2:	0e 94 b2 d0 	call	0x1a164	; 0x1a164 <_ZN5Print5printEc>
    c7e6:	2d 2d       	mov	r18, r13
    c7e8:	ea cf       	rjmp	.-44     	; 0xc7be <_Z14Lcd_Print_BuffPchhh+0x1a>
    c7ea:	df 91       	pop	r29
    c7ec:	cf 91       	pop	r28
    c7ee:	1f 91       	pop	r17
    c7f0:	0f 91       	pop	r16
    c7f2:	ff 90       	pop	r15
    c7f4:	ef 90       	pop	r14
    c7f6:	df 90       	pop	r13
    c7f8:	cf 90       	pop	r12
    c7fa:	08 95       	ret

0000c7fc <_Z9Lcd_Clearv>:
    c7fc:	87 e7       	ldi	r24, 0x77	; 119
    c7fe:	9c e0       	ldi	r25, 0x0C	; 12
    c800:	0c 94 6b d6 	jmp	0x1acd6	; 0x1acd6 <_ZN17LiquidCrystal_I2C5clearEv>

0000c804 <_Z9Lora_Initv>:
    c804:	8f e2       	ldi	r24, 0x2F	; 47
    c806:	9c e0       	ldi	r25, 0x0C	; 12
    c808:	0c 94 fe db 	jmp	0x1b7fc	; 0x1b7fc <_ZN7RH_RF954initEv>

0000c80c <_Z14Lora_Availablev>:
    c80c:	8f e2       	ldi	r24, 0x2F	; 47
    c80e:	9c e0       	ldi	r25, 0x0C	; 12
    c810:	0c 94 1e db 	jmp	0x1b63c	; 0x1b63c <_ZN7RH_RF959availableEv>

0000c814 <_Z17Lora_Data_Receivev>:
    c814:	cf 93       	push	r28
    c816:	df 93       	push	r29
    c818:	1f 92       	push	r1
    c81a:	cd b7       	in	r28, 0x3d	; 61
    c81c:	de b7       	in	r29, 0x3e	; 62
    c81e:	84 e1       	ldi	r24, 0x14	; 20
    c820:	e0 ec       	ldi	r30, 0xC0	; 192
    c822:	f5 e1       	ldi	r31, 0x15	; 21
    c824:	df 01       	movw	r26, r30
    c826:	98 2f       	mov	r25, r24
    c828:	1d 92       	st	X+, r1
    c82a:	9a 95       	dec	r25
    c82c:	e9 f7       	brne	.-6      	; 0xc828 <_Z17Lora_Data_Receivev+0x14>
    c82e:	89 83       	std	Y+1, r24	; 0x01
    c830:	ae 01       	movw	r20, r28
    c832:	4f 5f       	subi	r20, 0xFF	; 255
    c834:	5f 4f       	sbci	r21, 0xFF	; 255
    c836:	bf 01       	movw	r22, r30
    c838:	8f e2       	ldi	r24, 0x2F	; 47
    c83a:	9c e0       	ldi	r25, 0x0C	; 12
    c83c:	0e 94 9f d9 	call	0x1b33e	; 0x1b33e <_ZN7RH_RF954recvEPhS0_>
    c840:	0f 90       	pop	r0
    c842:	df 91       	pop	r29
    c844:	cf 91       	pop	r28
    c846:	08 95       	ret

0000c848 <_Z13Lora_Set_Freqv>:
    c848:	4a e5       	ldi	r20, 0x5A	; 90
    c84a:	54 e4       	ldi	r21, 0x44	; 68
    c84c:	68 e5       	ldi	r22, 0x58	; 88
    c84e:	74 e4       	ldi	r23, 0x44	; 68
    c850:	8f e2       	ldi	r24, 0x2F	; 47
    c852:	9c e0       	ldi	r25, 0x0C	; 12
    c854:	0c 94 dd d9 	jmp	0x1b3ba	; 0x1b3ba <_ZN7RH_RF9512setFrequencyEf>

0000c858 <_Z14Lora_Set_Powerv>:
    c858:	40 e0       	ldi	r20, 0x00	; 0
    c85a:	64 e1       	ldi	r22, 0x14	; 20
    c85c:	8f e2       	ldi	r24, 0x2F	; 47
    c85e:	9c e0       	ldi	r25, 0x0C	; 12
    c860:	0c 94 93 db 	jmp	0x1b726	; 0x1b726 <_ZN7RH_RF9510setTxPowerEab>

0000c864 <_Z15Lora_Set_Configv>:
    c864:	60 e0       	ldi	r22, 0x00	; 0
    c866:	8f e2       	ldi	r24, 0x2F	; 47
    c868:	9c e0       	ldi	r25, 0x0C	; 12
    c86a:	0e 94 c6 db 	call	0x1b78c	; 0x1b78c <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
    c86e:	6b e0       	ldi	r22, 0x0B	; 11
    c870:	8f e2       	ldi	r24, 0x2F	; 47
    c872:	9c e0       	ldi	r25, 0x0C	; 12
    c874:	0c 94 01 dd 	jmp	0x1ba02	; 0x1ba02 <_ZN7RH_RF9518setSpreadingFactorEh>

0000c878 <_Z20Check_Data_Availablej>:
    c878:	bc 01       	movw	r22, r24
    c87a:	8f e2       	ldi	r24, 0x2F	; 47
    c87c:	9c e0       	ldi	r25, 0x0C	; 12
    c87e:	0c 94 84 d7 	jmp	0x1af08	; 0x1af08 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>

0000c882 <_Z21Seperate_Out_Sub_Datav>:
    c882:	8f 92       	push	r8
    c884:	9f 92       	push	r9
    c886:	af 92       	push	r10
    c888:	bf 92       	push	r11
    c88a:	cf 92       	push	r12
    c88c:	df 92       	push	r13
    c88e:	ef 92       	push	r14
    c890:	ff 92       	push	r15
    c892:	0f 93       	push	r16
    c894:	1f 93       	push	r17
    c896:	cf 93       	push	r28
    c898:	df 93       	push	r29
    c89a:	cd b7       	in	r28, 0x3d	; 61
    c89c:	de b7       	in	r29, 0x3e	; 62
    c89e:	c0 53       	subi	r28, 0x30	; 48
    c8a0:	d4 40       	sbci	r29, 0x04	; 4
    c8a2:	0f b6       	in	r0, 0x3f	; 63
    c8a4:	f8 94       	cli
    c8a6:	de bf       	out	0x3e, r29	; 62
    c8a8:	0f be       	out	0x3f, r0	; 63
    c8aa:	cd bf       	out	0x3d, r28	; 61
    c8ac:	22 e1       	ldi	r18, 0x12	; 18
    c8ae:	e8 e5       	ldi	r30, 0x58	; 88
    c8b0:	f3 e0       	ldi	r31, 0x03	; 3
    c8b2:	de 01       	movw	r26, r28
    c8b4:	a5 5e       	subi	r26, 0xE5	; 229
    c8b6:	bb 4f       	sbci	r27, 0xFB	; 251
    c8b8:	01 90       	ld	r0, Z+
    c8ba:	0d 92       	st	X+, r0
    c8bc:	2a 95       	dec	r18
    c8be:	e1 f7       	brne	.-8      	; 0xc8b8 <_Z21Seperate_Out_Sub_Datav+0x36>
    c8c0:	24 e1       	ldi	r18, 0x14	; 20
    c8c2:	ea e6       	ldi	r30, 0x6A	; 106
    c8c4:	f3 e0       	ldi	r31, 0x03	; 3
    c8c6:	de 01       	movw	r26, r28
    c8c8:	a9 5f       	subi	r26, 0xF9	; 249
    c8ca:	bb 4f       	sbci	r27, 0xFB	; 251
    c8cc:	01 90       	ld	r0, Z+
    c8ce:	0d 92       	st	X+, r0
    c8d0:	2a 95       	dec	r18
    c8d2:	e1 f7       	brne	.-8      	; 0xc8cc <_Z21Seperate_Out_Sub_Datav+0x4a>
    c8d4:	8e 01       	movw	r16, r28
    c8d6:	0f 5f       	subi	r16, 0xFF	; 255
    c8d8:	1f 4f       	sbci	r17, 0xFF	; 255
    c8da:	24 ed       	ldi	r18, 0xD4	; 212
    c8dc:	33 e0       	ldi	r19, 0x03	; 3
    c8de:	d8 01       	movw	r26, r16
    c8e0:	f9 01       	movw	r30, r18
    c8e2:	1d 92       	st	X+, r1
    c8e4:	31 97       	sbiw	r30, 0x01	; 1
    c8e6:	e9 f7       	brne	.-6      	; 0xc8e2 <_Z21Seperate_Out_Sub_Datav+0x60>
    c8e8:	be 01       	movw	r22, r28
    c8ea:	6b 52       	subi	r22, 0x2B	; 43
    c8ec:	7c 4f       	sbci	r23, 0xFC	; 252
    c8ee:	22 e3       	ldi	r18, 0x32	; 50
    c8f0:	db 01       	movw	r26, r22
    c8f2:	1d 92       	st	X+, r1
    c8f4:	2a 95       	dec	r18
    c8f6:	e9 f7       	brne	.-6      	; 0xc8f2 <_Z21Seperate_Out_Sub_Datav+0x70>
    c8f8:	88 24       	eor	r8, r8
    c8fa:	83 94       	inc	r8
    c8fc:	91 2c       	mov	r9, r1
    c8fe:	40 e0       	ldi	r20, 0x00	; 0
    c900:	50 e0       	ldi	r21, 0x00	; 0
    c902:	20 e0       	ldi	r18, 0x00	; 0
    c904:	30 e0       	ldi	r19, 0x00	; 0
    c906:	fe 01       	movw	r30, r28
    c908:	e3 5d       	subi	r30, 0xD3	; 211
    c90a:	fb 4f       	sbci	r31, 0xFB	; 251
    c90c:	aa e0       	ldi	r26, 0x0A	; 10
    c90e:	fa 2e       	mov	r15, r26
    c910:	b4 e6       	ldi	r27, 0x64	; 100
    c912:	eb 2e       	mov	r14, r27
    c914:	d9 01       	movw	r26, r18
    c916:	a9 57       	subi	r26, 0x79	; 121
    c918:	be 4e       	sbci	r27, 0xEE	; 238
    c91a:	dc 90       	ld	r13, X
    c91c:	dd 20       	and	r13, r13
    c91e:	09 f4       	brne	.+2      	; 0xc922 <_Z21Seperate_Out_Sub_Datav+0xa0>
    c920:	40 c1       	rjmp	.+640    	; 0xcba2 <_Z21Seperate_Out_Sub_Datav+0x320>
    c922:	2f 5f       	subi	r18, 0xFF	; 255
    c924:	3f 4f       	sbci	r19, 0xFF	; 255
    c926:	24 3d       	cpi	r18, 0xD4	; 212
    c928:	b3 e0       	ldi	r27, 0x03	; 3
    c92a:	3b 07       	cpc	r19, r27
    c92c:	08 f0       	brcs	.+2      	; 0xc930 <_Z21Seperate_Out_Sub_Datav+0xae>
    c92e:	55 c1       	rjmp	.+682    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    c930:	d9 01       	movw	r26, r18
    c932:	a9 57       	subi	r26, 0x79	; 121
    c934:	be 4e       	sbci	r27, 0xEE	; 238
    c936:	6d 01       	movw	r12, r26
    c938:	b1 e0       	ldi	r27, 0x01	; 1
    c93a:	8b 16       	cp	r8, r27
    c93c:	91 04       	cpc	r9, r1
    c93e:	31 f0       	breq	.+12     	; 0xc94c <_Z21Seperate_Out_Sub_Datav+0xca>
    c940:	a2 e0       	ldi	r26, 0x02	; 2
    c942:	8a 16       	cp	r8, r26
    c944:	91 04       	cpc	r9, r1
    c946:	09 f4       	brne	.+2      	; 0xc94a <_Z21Seperate_Out_Sub_Datav+0xc8>
    c948:	8f c0       	rjmp	.+286    	; 0xca68 <_Z21Seperate_Out_Sub_Datav+0x1e6>
    c94a:	e4 cf       	rjmp	.-56     	; 0xc914 <_Z21Seperate_Out_Sub_Datav+0x92>
    c94c:	d6 01       	movw	r26, r12
    c94e:	bc 90       	ld	r11, X
    c950:	bb e1       	ldi	r27, 0x1B	; 27
    c952:	cb 2e       	mov	r12, r27
    c954:	b4 e0       	ldi	r27, 0x04	; 4
    c956:	db 2e       	mov	r13, r27
    c958:	cc 0e       	add	r12, r28
    c95a:	dd 1e       	adc	r13, r29
    c95c:	c4 0e       	add	r12, r20
    c95e:	d5 1e       	adc	r13, r21
    c960:	d6 01       	movw	r26, r12
    c962:	dc 90       	ld	r13, X
    c964:	bd 14       	cp	r11, r13
    c966:	19 f0       	breq	.+6      	; 0xc96e <_Z21Seperate_Out_Sub_Datav+0xec>
    c968:	40 e0       	ldi	r20, 0x00	; 0
    c96a:	50 e0       	ldi	r21, 0x00	; 0
    c96c:	d3 cf       	rjmp	.-90     	; 0xc914 <_Z21Seperate_Out_Sub_Datav+0x92>
    c96e:	4f 5f       	subi	r20, 0xFF	; 255
    c970:	5f 4f       	sbci	r21, 0xFF	; 255
    c972:	ab e1       	ldi	r26, 0x1B	; 27
    c974:	ca 2e       	mov	r12, r26
    c976:	a4 e0       	ldi	r26, 0x04	; 4
    c978:	da 2e       	mov	r13, r26
    c97a:	cc 0e       	add	r12, r28
    c97c:	dd 1e       	adc	r13, r29
    c97e:	c4 0e       	add	r12, r20
    c980:	d5 1e       	adc	r13, r21
    c982:	d6 01       	movw	r26, r12
    c984:	dc 90       	ld	r13, X
    c986:	d1 10       	cpse	r13, r1
    c988:	c5 cf       	rjmp	.-118    	; 0xc914 <_Z21Seperate_Out_Sub_Datav+0x92>
    c98a:	af 01       	movw	r20, r30
    c98c:	5a 01       	movw	r10, r20
    c98e:	ae 1a       	sub	r10, r30
    c990:	bf 0a       	sbc	r11, r31
    c992:	d9 01       	movw	r26, r18
    c994:	a9 57       	subi	r26, 0x79	; 121
    c996:	be 4e       	sbci	r27, 0xEE	; 238
    c998:	dc 90       	ld	r13, X
    c99a:	bd e0       	ldi	r27, 0x0D	; 13
    c99c:	db 16       	cp	r13, r27
    c99e:	79 f0       	breq	.+30     	; 0xc9be <_Z21Seperate_Out_Sub_Datav+0x13c>
    c9a0:	2f 5f       	subi	r18, 0xFF	; 255
    c9a2:	3f 4f       	sbci	r19, 0xFF	; 255
    c9a4:	24 3d       	cpi	r18, 0xD4	; 212
    c9a6:	a3 e0       	ldi	r26, 0x03	; 3
    c9a8:	3a 07       	cpc	r19, r26
    c9aa:	09 f4       	brne	.+2      	; 0xc9ae <_Z21Seperate_Out_Sub_Datav+0x12c>
    c9ac:	16 c1       	rjmp	.+556    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    c9ae:	d9 01       	movw	r26, r18
    c9b0:	a9 57       	subi	r26, 0x79	; 121
    c9b2:	be 4e       	sbci	r27, 0xEE	; 238
    c9b4:	dc 90       	ld	r13, X
    c9b6:	da 01       	movw	r26, r20
    c9b8:	dd 92       	st	X+, r13
    c9ba:	ad 01       	movw	r20, r26
    c9bc:	e7 cf       	rjmp	.-50     	; 0xc98c <_Z21Seperate_Out_Sub_Datav+0x10a>
    c9be:	d5 01       	movw	r26, r10
    c9c0:	ae 0f       	add	r26, r30
    c9c2:	bf 1f       	adc	r27, r31
    c9c4:	1c 92       	st	X, r1
    c9c6:	df 01       	movw	r26, r30
    c9c8:	0d 90       	ld	r0, X+
    c9ca:	00 20       	and	r0, r0
    c9cc:	e9 f7       	brne	.-6      	; 0xc9c8 <_Z21Seperate_Out_Sub_Datav+0x146>
    c9ce:	11 97       	sbiw	r26, 0x01	; 1
    c9d0:	ad 01       	movw	r20, r26
    c9d2:	4e 1b       	sub	r20, r30
    c9d4:	5f 0b       	sbc	r21, r31
    c9d6:	42 30       	cpi	r20, 0x02	; 2
    c9d8:	51 05       	cpc	r21, r1
    c9da:	49 f0       	breq	.+18     	; 0xc9ee <_Z21Seperate_Out_Sub_Datav+0x16c>
    c9dc:	08 f4       	brcc	.+2      	; 0xc9e0 <_Z21Seperate_Out_Sub_Datav+0x15e>
    c9de:	fd c0       	rjmp	.+506    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    c9e0:	43 30       	cpi	r20, 0x03	; 3
    c9e2:	51 05       	cpc	r21, r1
    c9e4:	49 f0       	breq	.+18     	; 0xc9f8 <_Z21Seperate_Out_Sub_Datav+0x176>
    c9e6:	44 30       	cpi	r20, 0x04	; 4
    c9e8:	51 05       	cpc	r21, r1
    c9ea:	d9 f4       	brne	.+54     	; 0xca22 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    c9ec:	f6 c0       	rjmp	.+492    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    c9ee:	80 81       	ld	r24, Z
    c9f0:	90 e0       	ldi	r25, 0x00	; 0
    c9f2:	c0 97       	sbiw	r24, 0x30	; 48
    c9f4:	b1 f4       	brne	.+44     	; 0xca22 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    c9f6:	f1 c0       	rjmp	.+482    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    c9f8:	80 81       	ld	r24, Z
    c9fa:	90 e0       	ldi	r25, 0x00	; 0
    c9fc:	c0 97       	sbiw	r24, 0x30	; 48
    c9fe:	f8 9e       	mul	r15, r24
    ca00:	a0 01       	movw	r20, r0
    ca02:	f9 9e       	mul	r15, r25
    ca04:	50 0d       	add	r21, r0
    ca06:	11 24       	eor	r1, r1
    ca08:	91 81       	ldd	r25, Z+1	; 0x01
    ca0a:	89 2f       	mov	r24, r25
    ca0c:	90 e0       	ldi	r25, 0x00	; 0
    ca0e:	c0 97       	sbiw	r24, 0x30	; 48
    ca10:	84 0f       	add	r24, r20
    ca12:	95 1f       	adc	r25, r21
    ca14:	ac 01       	movw	r20, r24
    ca16:	41 50       	subi	r20, 0x01	; 1
    ca18:	51 09       	sbc	r21, r1
    ca1a:	42 33       	cpi	r20, 0x32	; 50
    ca1c:	51 05       	cpc	r21, r1
    ca1e:	08 f0       	brcs	.+2      	; 0xca22 <_Z21Seperate_Out_Sub_Datav+0x1a0>
    ca20:	dc c0       	rjmp	.+440    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    ca22:	2e 5f       	subi	r18, 0xFE	; 254
    ca24:	3f 4f       	sbci	r19, 0xFF	; 255
    ca26:	24 3d       	cpi	r18, 0xD4	; 212
    ca28:	b3 e0       	ldi	r27, 0x03	; 3
    ca2a:	3b 07       	cpc	r19, r27
    ca2c:	08 f0       	brcs	.+2      	; 0xca30 <_Z21Seperate_Out_Sub_Datav+0x1ae>
    ca2e:	d5 c0       	rjmp	.+426    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    ca30:	6b 01       	movw	r12, r22
    ca32:	a6 01       	movw	r20, r12
    ca34:	46 1b       	sub	r20, r22
    ca36:	57 0b       	sbc	r21, r23
    ca38:	48 17       	cp	r20, r24
    ca3a:	59 07       	cpc	r21, r25
    ca3c:	20 f0       	brcs	.+8      	; 0xca46 <_Z21Seperate_Out_Sub_Datav+0x1c4>
    ca3e:	42 e0       	ldi	r20, 0x02	; 2
    ca40:	84 2e       	mov	r8, r20
    ca42:	91 2c       	mov	r9, r1
    ca44:	91 cf       	rjmp	.-222    	; 0xc968 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ca46:	a9 01       	movw	r20, r18
    ca48:	4f 5f       	subi	r20, 0xFF	; 255
    ca4a:	5f 4f       	sbci	r21, 0xFF	; 255
    ca4c:	29 57       	subi	r18, 0x79	; 121
    ca4e:	3e 4e       	sbci	r19, 0xEE	; 238
    ca50:	d9 01       	movw	r26, r18
    ca52:	2c 91       	ld	r18, X
    ca54:	d6 01       	movw	r26, r12
    ca56:	2d 93       	st	X+, r18
    ca58:	6d 01       	movw	r12, r26
    ca5a:	44 3d       	cpi	r20, 0xD4	; 212
    ca5c:	b3 e0       	ldi	r27, 0x03	; 3
    ca5e:	5b 07       	cpc	r21, r27
    ca60:	09 f4       	brne	.+2      	; 0xca64 <_Z21Seperate_Out_Sub_Datav+0x1e2>
    ca62:	bb c0       	rjmp	.+374    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    ca64:	9a 01       	movw	r18, r20
    ca66:	e5 cf       	rjmp	.-54     	; 0xca32 <_Z21Seperate_Out_Sub_Datav+0x1b0>
    ca68:	d6 01       	movw	r26, r12
    ca6a:	bc 90       	ld	r11, X
    ca6c:	b7 e0       	ldi	r27, 0x07	; 7
    ca6e:	cb 2e       	mov	r12, r27
    ca70:	b4 e0       	ldi	r27, 0x04	; 4
    ca72:	db 2e       	mov	r13, r27
    ca74:	cc 0e       	add	r12, r28
    ca76:	dd 1e       	adc	r13, r29
    ca78:	c4 0e       	add	r12, r20
    ca7a:	d5 1e       	adc	r13, r21
    ca7c:	d6 01       	movw	r26, r12
    ca7e:	dc 90       	ld	r13, X
    ca80:	bd 10       	cpse	r11, r13
    ca82:	72 cf       	rjmp	.-284    	; 0xc968 <_Z21Seperate_Out_Sub_Datav+0xe6>
    ca84:	4f 5f       	subi	r20, 0xFF	; 255
    ca86:	5f 4f       	sbci	r21, 0xFF	; 255
    ca88:	a7 e0       	ldi	r26, 0x07	; 7
    ca8a:	ca 2e       	mov	r12, r26
    ca8c:	a4 e0       	ldi	r26, 0x04	; 4
    ca8e:	da 2e       	mov	r13, r26
    ca90:	cc 0e       	add	r12, r28
    ca92:	dd 1e       	adc	r13, r29
    ca94:	c4 0e       	add	r12, r20
    ca96:	d5 1e       	adc	r13, r21
    ca98:	d6 01       	movw	r26, r12
    ca9a:	dc 90       	ld	r13, X
    ca9c:	d1 10       	cpse	r13, r1
    ca9e:	3a cf       	rjmp	.-396    	; 0xc914 <_Z21Seperate_Out_Sub_Datav+0x92>
    caa0:	6f 01       	movw	r12, r30
    caa2:	46 01       	movw	r8, r12
    caa4:	8e 1a       	sub	r8, r30
    caa6:	9f 0a       	sbc	r9, r31
    caa8:	d9 01       	movw	r26, r18
    caaa:	a9 57       	subi	r26, 0x79	; 121
    caac:	be 4e       	sbci	r27, 0xEE	; 238
    caae:	bc 90       	ld	r11, X
    cab0:	bd e0       	ldi	r27, 0x0D	; 13
    cab2:	bb 16       	cp	r11, r27
    cab4:	79 f0       	breq	.+30     	; 0xcad4 <_Z21Seperate_Out_Sub_Datav+0x252>
    cab6:	2f 5f       	subi	r18, 0xFF	; 255
    cab8:	3f 4f       	sbci	r19, 0xFF	; 255
    caba:	24 3d       	cpi	r18, 0xD4	; 212
    cabc:	a3 e0       	ldi	r26, 0x03	; 3
    cabe:	3a 07       	cpc	r19, r26
    cac0:	09 f4       	brne	.+2      	; 0xcac4 <_Z21Seperate_Out_Sub_Datav+0x242>
    cac2:	8b c0       	rjmp	.+278    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    cac4:	d9 01       	movw	r26, r18
    cac6:	a9 57       	subi	r26, 0x79	; 121
    cac8:	be 4e       	sbci	r27, 0xEE	; 238
    caca:	bc 90       	ld	r11, X
    cacc:	d6 01       	movw	r26, r12
    cace:	bd 92       	st	X+, r11
    cad0:	6d 01       	movw	r12, r26
    cad2:	e7 cf       	rjmp	.-50     	; 0xcaa2 <_Z21Seperate_Out_Sub_Datav+0x220>
    cad4:	d4 01       	movw	r26, r8
    cad6:	ae 0f       	add	r26, r30
    cad8:	bf 1f       	adc	r27, r31
    cada:	1c 92       	st	X, r1
    cadc:	df 01       	movw	r26, r30
    cade:	0d 90       	ld	r0, X+
    cae0:	00 20       	and	r0, r0
    cae2:	e9 f7       	brne	.-6      	; 0xcade <_Z21Seperate_Out_Sub_Datav+0x25c>
    cae4:	11 97       	sbiw	r26, 0x01	; 1
    cae6:	ae 1b       	sub	r26, r30
    cae8:	bf 0b       	sbc	r27, r31
    caea:	a2 30       	cpi	r26, 0x02	; 2
    caec:	b1 05       	cpc	r27, r1
    caee:	41 f0       	breq	.+16     	; 0xcb00 <_Z21Seperate_Out_Sub_Datav+0x27e>
    caf0:	08 f4       	brcc	.+2      	; 0xcaf4 <_Z21Seperate_Out_Sub_Datav+0x272>
    caf2:	73 c0       	rjmp	.+230    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    caf4:	a3 30       	cpi	r26, 0x03	; 3
    caf6:	b1 05       	cpc	r27, r1
    caf8:	39 f0       	breq	.+14     	; 0xcb08 <_Z21Seperate_Out_Sub_Datav+0x286>
    cafa:	14 97       	sbiw	r26, 0x04	; 4
    cafc:	a9 f0       	breq	.+42     	; 0xcb28 <_Z21Seperate_Out_Sub_Datav+0x2a6>
    cafe:	2f c0       	rjmp	.+94     	; 0xcb5e <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cb00:	80 81       	ld	r24, Z
    cb02:	90 e0       	ldi	r25, 0x00	; 0
    cb04:	c0 97       	sbiw	r24, 0x30	; 48
    cb06:	0d c0       	rjmp	.+26     	; 0xcb22 <_Z21Seperate_Out_Sub_Datav+0x2a0>
    cb08:	80 81       	ld	r24, Z
    cb0a:	90 e0       	ldi	r25, 0x00	; 0
    cb0c:	c0 97       	sbiw	r24, 0x30	; 48
    cb0e:	f8 9e       	mul	r15, r24
    cb10:	d0 01       	movw	r26, r0
    cb12:	f9 9e       	mul	r15, r25
    cb14:	b0 0d       	add	r27, r0
    cb16:	11 24       	eor	r1, r1
    cb18:	81 81       	ldd	r24, Z+1	; 0x01
    cb1a:	90 e0       	ldi	r25, 0x00	; 0
    cb1c:	c0 97       	sbiw	r24, 0x30	; 48
    cb1e:	8a 0f       	add	r24, r26
    cb20:	9b 1f       	adc	r25, r27
    cb22:	00 97       	sbiw	r24, 0x00	; 0
    cb24:	e1 f4       	brne	.+56     	; 0xcb5e <_Z21Seperate_Out_Sub_Datav+0x2dc>
    cb26:	59 c0       	rjmp	.+178    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    cb28:	a0 81       	ld	r26, Z
    cb2a:	b0 e0       	ldi	r27, 0x00	; 0
    cb2c:	d0 97       	sbiw	r26, 0x30	; 48
    cb2e:	ea 9e       	mul	r14, r26
    cb30:	c0 01       	movw	r24, r0
    cb32:	eb 9e       	mul	r14, r27
    cb34:	90 0d       	add	r25, r0
    cb36:	11 24       	eor	r1, r1
    cb38:	a1 81       	ldd	r26, Z+1	; 0x01
    cb3a:	b0 e0       	ldi	r27, 0x00	; 0
    cb3c:	d0 97       	sbiw	r26, 0x30	; 48
    cb3e:	fa 9e       	mul	r15, r26
    cb40:	60 01       	movw	r12, r0
    cb42:	fb 9e       	mul	r15, r27
    cb44:	d0 0c       	add	r13, r0
    cb46:	11 24       	eor	r1, r1
    cb48:	8c 0d       	add	r24, r12
    cb4a:	9d 1d       	adc	r25, r13
    cb4c:	a2 81       	ldd	r26, Z+2	; 0x02
    cb4e:	b0 e0       	ldi	r27, 0x00	; 0
    cb50:	d0 97       	sbiw	r26, 0x30	; 48
    cb52:	8a 0f       	add	r24, r26
    cb54:	9b 1f       	adc	r25, r27
    cb56:	85 3d       	cpi	r24, 0xD5	; 213
    cb58:	b3 e0       	ldi	r27, 0x03	; 3
    cb5a:	9b 07       	cpc	r25, r27
    cb5c:	f0 f5       	brcc	.+124    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    cb5e:	2e 5f       	subi	r18, 0xFE	; 254
    cb60:	3f 4f       	sbci	r19, 0xFF	; 255
    cb62:	24 3d       	cpi	r18, 0xD4	; 212
    cb64:	a3 e0       	ldi	r26, 0x03	; 3
    cb66:	3a 07       	cpc	r19, r26
    cb68:	c0 f5       	brcc	.+112    	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    cb6a:	58 01       	movw	r10, r16
    cb6c:	65 01       	movw	r12, r10
    cb6e:	c0 1a       	sub	r12, r16
    cb70:	d1 0a       	sbc	r13, r17
    cb72:	c8 16       	cp	r12, r24
    cb74:	d9 06       	cpc	r13, r25
    cb76:	18 f0       	brcs	.+6      	; 0xcb7e <_Z21Seperate_Out_Sub_Datav+0x2fc>
    cb78:	81 2c       	mov	r8, r1
    cb7a:	91 2c       	mov	r9, r1
    cb7c:	cb ce       	rjmp	.-618    	; 0xc914 <_Z21Seperate_Out_Sub_Datav+0x92>
    cb7e:	69 01       	movw	r12, r18
    cb80:	bf ef       	ldi	r27, 0xFF	; 255
    cb82:	cb 1a       	sub	r12, r27
    cb84:	db 0a       	sbc	r13, r27
    cb86:	29 57       	subi	r18, 0x79	; 121
    cb88:	3e 4e       	sbci	r19, 0xEE	; 238
    cb8a:	d9 01       	movw	r26, r18
    cb8c:	2c 91       	ld	r18, X
    cb8e:	d5 01       	movw	r26, r10
    cb90:	2d 93       	st	X+, r18
    cb92:	5d 01       	movw	r10, r26
    cb94:	b4 ed       	ldi	r27, 0xD4	; 212
    cb96:	cb 16       	cp	r12, r27
    cb98:	b3 e0       	ldi	r27, 0x03	; 3
    cb9a:	db 06       	cpc	r13, r27
    cb9c:	f1 f0       	breq	.+60     	; 0xcbda <_Z21Seperate_Out_Sub_Datav+0x358>
    cb9e:	96 01       	movw	r18, r12
    cba0:	e5 cf       	rjmp	.-54     	; 0xcb6c <_Z21Seperate_Out_Sub_Datav+0x2ea>
    cba2:	8e e6       	ldi	r24, 0x6E	; 110
    cba4:	e9 e1       	ldi	r30, 0x19	; 25
    cba6:	f1 e1       	ldi	r31, 0x11	; 17
    cba8:	df 01       	movw	r26, r30
    cbaa:	1d 92       	st	X+, r1
    cbac:	8a 95       	dec	r24
    cbae:	e9 f7       	brne	.-6      	; 0xcbaa <_Z21Seperate_Out_Sub_Datav+0x328>
    cbb0:	84 ed       	ldi	r24, 0xD4	; 212
    cbb2:	93 e0       	ldi	r25, 0x03	; 3
    cbb4:	e7 e8       	ldi	r30, 0x87	; 135
    cbb6:	f1 e1       	ldi	r31, 0x11	; 17
    cbb8:	df 01       	movw	r26, r30
    cbba:	9c 01       	movw	r18, r24
    cbbc:	1d 92       	st	X+, r1
    cbbe:	21 50       	subi	r18, 0x01	; 1
    cbc0:	30 40       	sbci	r19, 0x00	; 0
    cbc2:	e1 f7       	brne	.-8      	; 0xcbbc <_Z21Seperate_Out_Sub_Datav+0x33a>
    cbc4:	89 e1       	ldi	r24, 0x19	; 25
    cbc6:	91 e1       	ldi	r25, 0x11	; 17
    cbc8:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
    cbcc:	b8 01       	movw	r22, r16
    cbce:	87 e8       	ldi	r24, 0x87	; 135
    cbd0:	91 e1       	ldi	r25, 0x11	; 17
    cbd2:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
    cbd6:	81 e0       	ldi	r24, 0x01	; 1
    cbd8:	01 c0       	rjmp	.+2      	; 0xcbdc <_Z21Seperate_Out_Sub_Datav+0x35a>
    cbda:	80 e0       	ldi	r24, 0x00	; 0
    cbdc:	c0 5d       	subi	r28, 0xD0	; 208
    cbde:	db 4f       	sbci	r29, 0xFB	; 251
    cbe0:	0f b6       	in	r0, 0x3f	; 63
    cbe2:	f8 94       	cli
    cbe4:	de bf       	out	0x3e, r29	; 62
    cbe6:	0f be       	out	0x3f, r0	; 63
    cbe8:	cd bf       	out	0x3d, r28	; 61
    cbea:	df 91       	pop	r29
    cbec:	cf 91       	pop	r28
    cbee:	1f 91       	pop	r17
    cbf0:	0f 91       	pop	r16
    cbf2:	ff 90       	pop	r15
    cbf4:	ef 90       	pop	r14
    cbf6:	df 90       	pop	r13
    cbf8:	cf 90       	pop	r12
    cbfa:	bf 90       	pop	r11
    cbfc:	af 90       	pop	r10
    cbfe:	9f 90       	pop	r9
    cc00:	8f 90       	pop	r8
    cc02:	08 95       	ret

0000cc04 <_GLOBAL__sub_I_g_uTick>:
    cc04:	24 e0       	ldi	r18, 0x04	; 4
    cc06:	44 e1       	ldi	r20, 0x14	; 20
    cc08:	67 e2       	ldi	r22, 0x27	; 39
    cc0a:	87 e7       	ldi	r24, 0x77	; 119
    cc0c:	9c e0       	ldi	r25, 0x0C	; 12
    cc0e:	0e 94 11 d6 	call	0x1ac22	; 0x1ac22 <_ZN17LiquidCrystal_I2CC1Ehhh>
    cc12:	22 ef       	ldi	r18, 0xF2	; 242
    cc14:	39 e1       	ldi	r19, 0x19	; 25
    cc16:	42 e0       	ldi	r20, 0x02	; 2
    cc18:	65 e3       	ldi	r22, 0x35	; 53
    cc1a:	8f e2       	ldi	r24, 0x2F	; 47
    cc1c:	9c e0       	ldi	r25, 0x0C	; 12
    cc1e:	0c 94 59 d9 	jmp	0x1b2b2	; 0x1b2b2 <_ZN7RH_RF95C1EhhR12RHGenericSPI>

0000cc22 <_Z14Lora_Data_Sendh>:
    cc22:	cf 93       	push	r28
    cc24:	c8 2f       	mov	r28, r24
    cc26:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    cc2a:	81 30       	cpi	r24, 0x01	; 1
    cc2c:	89 f4       	brne	.+34     	; 0xcc50 <_Z14Lora_Data_Sendh+0x2e>
    cc2e:	6a e3       	ldi	r22, 0x3A	; 58
    cc30:	74 e2       	ldi	r23, 0x24	; 36
    cc32:	8f e6       	ldi	r24, 0x6F	; 111
    cc34:	96 e1       	ldi	r25, 0x16	; 22
    cc36:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc3a:	4a e0       	ldi	r20, 0x0A	; 10
    cc3c:	50 e0       	ldi	r21, 0x00	; 0
    cc3e:	6c 2f       	mov	r22, r28
    cc40:	8f e6       	ldi	r24, 0x6F	; 111
    cc42:	96 e1       	ldi	r25, 0x16	; 22
    cc44:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
    cc48:	8f e6       	ldi	r24, 0x6F	; 111
    cc4a:	96 e1       	ldi	r25, 0x16	; 22
    cc4c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    cc50:	4c 2f       	mov	r20, r28
    cc52:	6c ea       	ldi	r22, 0xAC	; 172
    cc54:	75 e1       	ldi	r23, 0x15	; 21
    cc56:	8f e2       	ldi	r24, 0x2F	; 47
    cc58:	9c e0       	ldi	r25, 0x0C	; 12
    cc5a:	0e 94 4c db 	call	0x1b698	; 0x1b698 <_ZN7RH_RF954sendEPKhh>
    cc5e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    cc62:	81 30       	cpi	r24, 0x01	; 1
    cc64:	51 f4       	brne	.+20     	; 0xcc7a <_Z14Lora_Data_Sendh+0x58>
    cc66:	6d e2       	ldi	r22, 0x2D	; 45
    cc68:	74 e2       	ldi	r23, 0x24	; 36
    cc6a:	8f e6       	ldi	r24, 0x6F	; 111
    cc6c:	96 e1       	ldi	r25, 0x16	; 22
    cc6e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc72:	8f e6       	ldi	r24, 0x6F	; 111
    cc74:	96 e1       	ldi	r25, 0x16	; 22
    cc76:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    cc7a:	64 ef       	ldi	r22, 0xF4	; 244
    cc7c:	71 e0       	ldi	r23, 0x01	; 1
    cc7e:	8f e2       	ldi	r24, 0x2F	; 47
    cc80:	9c e0       	ldi	r25, 0x0C	; 12
    cc82:	0e 94 b8 d7 	call	0x1af70	; 0x1af70 <_ZN15RHGenericDriver14waitPacketSentEj>
    cc86:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    cc8a:	81 30       	cpi	r24, 0x01	; 1
    cc8c:	39 f4       	brne	.+14     	; 0xcc9c <_Z14Lora_Data_Sendh+0x7a>
    cc8e:	63 e2       	ldi	r22, 0x23	; 35
    cc90:	74 e2       	ldi	r23, 0x24	; 36
    cc92:	8f e6       	ldi	r24, 0x6F	; 111
    cc94:	96 e1       	ldi	r25, 0x16	; 22
    cc96:	cf 91       	pop	r28
    cc98:	0c 94 bd d0 	jmp	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    cc9c:	cf 91       	pop	r28
    cc9e:	08 95       	ret

0000cca0 <_Z16Lcd_Special_Charhhhh>:
    cca0:	df 92       	push	r13
    cca2:	ef 92       	push	r14
    cca4:	ff 92       	push	r15
    cca6:	0f 93       	push	r16
    cca8:	1f 93       	push	r17
    ccaa:	cf 93       	push	r28
    ccac:	df 93       	push	r29
    ccae:	cd b7       	in	r28, 0x3d	; 61
    ccb0:	de b7       	in	r29, 0x3e	; 62
    ccb2:	28 97       	sbiw	r28, 0x08	; 8
    ccb4:	0f b6       	in	r0, 0x3f	; 63
    ccb6:	f8 94       	cli
    ccb8:	de bf       	out	0x3e, r29	; 62
    ccba:	0f be       	out	0x3f, r0	; 63
    ccbc:	cd bf       	out	0x3d, r28	; 61
    ccbe:	f8 2e       	mov	r15, r24
    ccc0:	e6 2e       	mov	r14, r22
    ccc2:	d4 2e       	mov	r13, r20
    ccc4:	8e 01       	movw	r16, r28
    ccc6:	0f 5f       	subi	r16, 0xFF	; 255
    ccc8:	1f 4f       	sbci	r17, 0xFF	; 255
    ccca:	88 e0       	ldi	r24, 0x08	; 8
    cccc:	f8 01       	movw	r30, r16
    ccce:	11 92       	st	Z+, r1
    ccd0:	8a 95       	dec	r24
    ccd2:	e9 f7       	brne	.-6      	; 0xccce <_Z16Lcd_Special_Charhhhh+0x2e>
    ccd4:	82 2f       	mov	r24, r18
    ccd6:	90 e0       	ldi	r25, 0x00	; 0
    ccd8:	fc 01       	movw	r30, r24
    ccda:	31 97       	sbiw	r30, 0x01	; 1
    ccdc:	ea 30       	cpi	r30, 0x0A	; 10
    ccde:	f1 05       	cpc	r31, r1
    cce0:	08 f0       	brcs	.+2      	; 0xcce4 <_Z16Lcd_Special_Charhhhh+0x44>
    cce2:	86 c0       	rjmp	.+268    	; 0xcdf0 <_Z16Lcd_Special_Charhhhh+0x150>
    cce4:	88 27       	eor	r24, r24
    cce6:	e3 52       	subi	r30, 0x23	; 35
    cce8:	ff 4f       	sbci	r31, 0xFF	; 255
    ccea:	8f 4f       	sbci	r24, 0xFF	; 255
    ccec:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
    ccf0:	8f e1       	ldi	r24, 0x1F	; 31
    ccf2:	89 83       	std	Y+1, r24	; 0x01
    ccf4:	81 e1       	ldi	r24, 0x11	; 17
    ccf6:	8a 83       	std	Y+2, r24	; 0x02
    ccf8:	8a e0       	ldi	r24, 0x0A	; 10
    ccfa:	58 c0       	rjmp	.+176    	; 0xcdac <_Z16Lcd_Special_Charhhhh+0x10c>
    ccfc:	9c e1       	ldi	r25, 0x1C	; 28
    ccfe:	99 83       	std	Y+1, r25	; 0x01
    cd00:	80 e1       	ldi	r24, 0x10	; 16
    cd02:	8a 83       	std	Y+2, r24	; 0x02
    cd04:	28 e1       	ldi	r18, 0x18	; 24
    cd06:	2b 83       	std	Y+3, r18	; 0x03
    cd08:	8c 83       	std	Y+4, r24	; 0x04
    cd0a:	9d 83       	std	Y+5, r25	; 0x05
    cd0c:	0b c0       	rjmp	.+22     	; 0xcd24 <_Z16Lcd_Special_Charhhhh+0x84>
    cd0e:	8c e1       	ldi	r24, 0x1C	; 28
    cd10:	89 83       	std	Y+1, r24	; 0x01
    cd12:	90 e1       	ldi	r25, 0x10	; 16
    cd14:	9a 83       	std	Y+2, r25	; 0x02
    cd16:	28 e1       	ldi	r18, 0x18	; 24
    cd18:	2b 83       	std	Y+3, r18	; 0x03
    cd1a:	9c 83       	std	Y+4, r25	; 0x04
    cd1c:	8d 83       	std	Y+5, r24	; 0x05
    cd1e:	84 e0       	ldi	r24, 0x04	; 4
    cd20:	8f 83       	std	Y+7, r24	; 0x07
    cd22:	84 e1       	ldi	r24, 0x14	; 20
    cd24:	88 87       	std	Y+8, r24	; 0x08
    cd26:	64 c0       	rjmp	.+200    	; 0xcdf0 <_Z16Lcd_Special_Charhhhh+0x150>
    cd28:	8c e1       	ldi	r24, 0x1C	; 28
    cd2a:	89 83       	std	Y+1, r24	; 0x01
    cd2c:	80 e1       	ldi	r24, 0x10	; 16
    cd2e:	8a 83       	std	Y+2, r24	; 0x02
    cd30:	98 e1       	ldi	r25, 0x18	; 24
    cd32:	9b 83       	std	Y+3, r25	; 0x03
    cd34:	8c 83       	std	Y+4, r24	; 0x04
    cd36:	8d e1       	ldi	r24, 0x1D	; 29
    cd38:	8d 83       	std	Y+5, r24	; 0x05
    cd3a:	81 e0       	ldi	r24, 0x01	; 1
    cd3c:	8e 83       	std	Y+6, r24	; 0x06
    cd3e:	85 e0       	ldi	r24, 0x05	; 5
    cd40:	8f 83       	std	Y+7, r24	; 0x07
    cd42:	85 e1       	ldi	r24, 0x15	; 21
    cd44:	ef cf       	rjmp	.-34     	; 0xcd24 <_Z16Lcd_Special_Charhhhh+0x84>
    cd46:	8c e1       	ldi	r24, 0x1C	; 28
    cd48:	89 83       	std	Y+1, r24	; 0x01
    cd4a:	90 e1       	ldi	r25, 0x10	; 16
    cd4c:	9a 83       	std	Y+2, r25	; 0x02
    cd4e:	28 e1       	ldi	r18, 0x18	; 24
    cd50:	2b 83       	std	Y+3, r18	; 0x03
    cd52:	9c 83       	std	Y+4, r25	; 0x04
    cd54:	8d 83       	std	Y+5, r24	; 0x05
    cd56:	85 e0       	ldi	r24, 0x05	; 5
    cd58:	8e 83       	std	Y+6, r24	; 0x06
    cd5a:	92 e0       	ldi	r25, 0x02	; 2
    cd5c:	9f 83       	std	Y+7, r25	; 0x07
    cd5e:	e2 cf       	rjmp	.-60     	; 0xcd24 <_Z16Lcd_Special_Charhhhh+0x84>
    cd60:	9e e0       	ldi	r25, 0x0E	; 14
    cd62:	99 83       	std	Y+1, r25	; 0x01
    cd64:	81 e1       	ldi	r24, 0x11	; 17
    cd66:	8a 83       	std	Y+2, r24	; 0x02
    cd68:	8b 83       	std	Y+3, r24	; 0x03
    cd6a:	8c 83       	std	Y+4, r24	; 0x04
    cd6c:	8b e1       	ldi	r24, 0x1B	; 27
    cd6e:	8d 83       	std	Y+5, r24	; 0x05
    cd70:	25 e1       	ldi	r18, 0x15	; 21
    cd72:	2e 83       	std	Y+6, r18	; 0x06
    cd74:	8f 83       	std	Y+7, r24	; 0x07
    cd76:	98 87       	std	Y+8, r25	; 0x08
    cd78:	3b c0       	rjmp	.+118    	; 0xcdf0 <_Z16Lcd_Special_Charhhhh+0x150>
    cd7a:	87 e0       	ldi	r24, 0x07	; 7
    cd7c:	89 83       	std	Y+1, r24	; 0x01
    cd7e:	89 e0       	ldi	r24, 0x09	; 9
    cd80:	8a 83       	std	Y+2, r24	; 0x02
    cd82:	81 e1       	ldi	r24, 0x11	; 17
    cd84:	8b 83       	std	Y+3, r24	; 0x03
    cd86:	8c 83       	std	Y+4, r24	; 0x04
    cd88:	8b e1       	ldi	r24, 0x1B	; 27
    cd8a:	8d 83       	std	Y+5, r24	; 0x05
    cd8c:	95 e1       	ldi	r25, 0x15	; 21
    cd8e:	9e 83       	std	Y+6, r25	; 0x06
    cd90:	8f 83       	std	Y+7, r24	; 0x07
    cd92:	8f e1       	ldi	r24, 0x1F	; 31
    cd94:	c7 cf       	rjmp	.-114    	; 0xcd24 <_Z16Lcd_Special_Charhhhh+0x84>
    cd96:	84 e0       	ldi	r24, 0x04	; 4
    cd98:	89 83       	std	Y+1, r24	; 0x01
    cd9a:	8a 83       	std	Y+2, r24	; 0x02
    cd9c:	8b 83       	std	Y+3, r24	; 0x03
    cd9e:	87 e0       	ldi	r24, 0x07	; 7
    cda0:	8c 83       	std	Y+4, r24	; 0x04
    cda2:	26 c0       	rjmp	.+76     	; 0xcdf0 <_Z16Lcd_Special_Charhhhh+0x150>
    cda4:	8f e1       	ldi	r24, 0x1F	; 31
    cda6:	89 83       	std	Y+1, r24	; 0x01
    cda8:	8a 83       	std	Y+2, r24	; 0x02
    cdaa:	8e e0       	ldi	r24, 0x0E	; 14
    cdac:	8b 83       	std	Y+3, r24	; 0x03
    cdae:	84 e0       	ldi	r24, 0x04	; 4
    cdb0:	8c 83       	std	Y+4, r24	; 0x04
    cdb2:	8d 83       	std	Y+5, r24	; 0x05
    cdb4:	8e 83       	std	Y+6, r24	; 0x06
    cdb6:	8f 83       	std	Y+7, r24	; 0x07
    cdb8:	1b c0       	rjmp	.+54     	; 0xcdf0 <_Z16Lcd_Special_Charhhhh+0x150>
    cdba:	80 91 a7 15 	lds	r24, 0x15A7	; 0x8015a7 <_sRuble_Parameters+0x42>
    cdbe:	1f 92       	push	r1
    cdc0:	8f 93       	push	r24
    cdc2:	80 91 a6 15 	lds	r24, 0x15A6	; 0x8015a6 <_sRuble_Parameters+0x41>
    cdc6:	1f 92       	push	r1
    cdc8:	8f 93       	push	r24
    cdca:	8e e7       	ldi	r24, 0x7E	; 126
    cdcc:	93 e0       	ldi	r25, 0x03	; 3
    cdce:	9f 93       	push	r25
    cdd0:	8f 93       	push	r24
    cdd2:	1f 93       	push	r17
    cdd4:	0f 93       	push	r16
    cdd6:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    cdda:	2f e0       	ldi	r18, 0x0F	; 15
    cddc:	40 e0       	ldi	r20, 0x00	; 0
    cdde:	65 e0       	ldi	r22, 0x05	; 5
    cde0:	c8 01       	movw	r24, r16
    cde2:	e0 dc       	rcall	.-1600   	; 0xc7a4 <_Z14Lcd_Print_BuffPchhh>
    cde4:	0f b6       	in	r0, 0x3f	; 63
    cde6:	f8 94       	cli
    cde8:	de bf       	out	0x3e, r29	; 62
    cdea:	0f be       	out	0x3f, r0	; 63
    cdec:	cd bf       	out	0x3d, r28	; 61
    cdee:	11 c0       	rjmp	.+34     	; 0xce12 <_Z16Lcd_Special_Charhhhh+0x172>
    cdf0:	a8 01       	movw	r20, r16
    cdf2:	6f 2d       	mov	r22, r15
    cdf4:	87 e7       	ldi	r24, 0x77	; 119
    cdf6:	9c e0       	ldi	r25, 0x0C	; 12
    cdf8:	0e 94 a9 d6 	call	0x1ad52	; 0x1ad52 <_ZN17LiquidCrystal_I2C10createCharEhPh>
    cdfc:	4d 2d       	mov	r20, r13
    cdfe:	6e 2d       	mov	r22, r14
    ce00:	87 e7       	ldi	r24, 0x77	; 119
    ce02:	9c e0       	ldi	r25, 0x0C	; 12
    ce04:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    ce08:	6f 2d       	mov	r22, r15
    ce0a:	87 e7       	ldi	r24, 0x77	; 119
    ce0c:	9c e0       	ldi	r25, 0x0C	; 12
    ce0e:	0e 94 d0 d6 	call	0x1ada0	; 0x1ada0 <_ZN17LiquidCrystal_I2C5writeEh>
    ce12:	28 96       	adiw	r28, 0x08	; 8
    ce14:	0f b6       	in	r0, 0x3f	; 63
    ce16:	f8 94       	cli
    ce18:	de bf       	out	0x3e, r29	; 62
    ce1a:	0f be       	out	0x3f, r0	; 63
    ce1c:	cd bf       	out	0x3d, r28	; 61
    ce1e:	df 91       	pop	r29
    ce20:	cf 91       	pop	r28
    ce22:	1f 91       	pop	r17
    ce24:	0f 91       	pop	r16
    ce26:	ff 90       	pop	r15
    ce28:	ef 90       	pop	r14
    ce2a:	df 90       	pop	r13
    ce2c:	08 95       	ret

0000ce2e <_Z16Display_Update_1v>:
    ce2e:	ff 92       	push	r15
    ce30:	0f 93       	push	r16
    ce32:	1f 93       	push	r17
    ce34:	cf 93       	push	r28
    ce36:	df 93       	push	r29
    ce38:	80 91 76 0c 	lds	r24, 0x0C76	; 0x800c76 <Start_Display_In_Interrupt>
    ce3c:	81 11       	cpse	r24, r1
    ce3e:	7a c1       	rjmp	.+756    	; 0xd134 <_Z16Display_Update_1v+0x306>
    ce40:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    ce44:	3e 2f       	mov	r19, r30
    ce46:	32 70       	andi	r19, 0x02	; 2
    ce48:	20 e0       	ldi	r18, 0x00	; 0
    ce4a:	40 e0       	ldi	r20, 0x00	; 0
    ce4c:	50 e0       	ldi	r21, 0x00	; 0
    ce4e:	60 e0       	ldi	r22, 0x00	; 0
    ce50:	70 e0       	ldi	r23, 0x00	; 0
    ce52:	90 e0       	ldi	r25, 0x00	; 0
    ce54:	a0 e0       	ldi	r26, 0x00	; 0
    ce56:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    ce5a:	71 f0       	breq	.+28     	; 0xce78 <_Z16Display_Update_1v+0x4a>
    ce5c:	ed 7f       	andi	r30, 0xFD	; 253
    ce5e:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    ce62:	41 e0       	ldi	r20, 0x01	; 1
    ce64:	87 e7       	ldi	r24, 0x77	; 119
    ce66:	9c e0       	ldi	r25, 0x0C	; 12
    ce68:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    ce6c:	65 ea       	ldi	r22, 0xA5	; 165
    ce6e:	72 e2       	ldi	r23, 0x22	; 34
    ce70:	87 e7       	ldi	r24, 0x77	; 119
    ce72:	9c e0       	ldi	r25, 0x0C	; 12
    ce74:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    ce78:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    ce7c:	3e 2f       	mov	r19, r30
    ce7e:	34 70       	andi	r19, 0x04	; 4
    ce80:	20 e0       	ldi	r18, 0x00	; 0
    ce82:	40 e0       	ldi	r20, 0x00	; 0
    ce84:	50 e0       	ldi	r21, 0x00	; 0
    ce86:	60 e0       	ldi	r22, 0x00	; 0
    ce88:	70 e0       	ldi	r23, 0x00	; 0
    ce8a:	80 e0       	ldi	r24, 0x00	; 0
    ce8c:	90 e0       	ldi	r25, 0x00	; 0
    ce8e:	a0 e0       	ldi	r26, 0x00	; 0
    ce90:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    ce94:	d1 f0       	breq	.+52     	; 0xceca <_Z16Display_Update_1v+0x9c>
    ce96:	eb 7f       	andi	r30, 0xFB	; 251
    ce98:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    ce9c:	41 e0       	ldi	r20, 0x01	; 1
    ce9e:	87 e7       	ldi	r24, 0x77	; 119
    cea0:	9c e0       	ldi	r25, 0x0C	; 12
    cea2:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cea6:	60 e9       	ldi	r22, 0x90	; 144
    cea8:	72 e2       	ldi	r23, 0x22	; 34
    ceaa:	87 e7       	ldi	r24, 0x77	; 119
    ceac:	9c e0       	ldi	r25, 0x0C	; 12
    ceae:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    ceb2:	42 e0       	ldi	r20, 0x02	; 2
    ceb4:	60 e0       	ldi	r22, 0x00	; 0
    ceb6:	87 e7       	ldi	r24, 0x77	; 119
    ceb8:	9c e0       	ldi	r25, 0x0C	; 12
    ceba:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cebe:	6b e7       	ldi	r22, 0x7B	; 123
    cec0:	72 e2       	ldi	r23, 0x22	; 34
    cec2:	87 e7       	ldi	r24, 0x77	; 119
    cec4:	9c e0       	ldi	r25, 0x0C	; 12
    cec6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    ceca:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    cece:	3e 2f       	mov	r19, r30
    ced0:	38 70       	andi	r19, 0x08	; 8
    ced2:	20 e0       	ldi	r18, 0x00	; 0
    ced4:	40 e0       	ldi	r20, 0x00	; 0
    ced6:	50 e0       	ldi	r21, 0x00	; 0
    ced8:	60 e0       	ldi	r22, 0x00	; 0
    ceda:	70 e0       	ldi	r23, 0x00	; 0
    cedc:	80 e0       	ldi	r24, 0x00	; 0
    cede:	90 e0       	ldi	r25, 0x00	; 0
    cee0:	a0 e0       	ldi	r26, 0x00	; 0
    cee2:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    cee6:	d1 f0       	breq	.+52     	; 0xcf1c <_Z16Display_Update_1v+0xee>
    cee8:	e7 7f       	andi	r30, 0xF7	; 247
    ceea:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    ceee:	41 e0       	ldi	r20, 0x01	; 1
    cef0:	87 e7       	ldi	r24, 0x77	; 119
    cef2:	9c e0       	ldi	r25, 0x0C	; 12
    cef4:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cef8:	66 e6       	ldi	r22, 0x66	; 102
    cefa:	72 e2       	ldi	r23, 0x22	; 34
    cefc:	87 e7       	ldi	r24, 0x77	; 119
    cefe:	9c e0       	ldi	r25, 0x0C	; 12
    cf00:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cf04:	42 e0       	ldi	r20, 0x02	; 2
    cf06:	60 e0       	ldi	r22, 0x00	; 0
    cf08:	87 e7       	ldi	r24, 0x77	; 119
    cf0a:	9c e0       	ldi	r25, 0x0C	; 12
    cf0c:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cf10:	61 e5       	ldi	r22, 0x51	; 81
    cf12:	72 e2       	ldi	r23, 0x22	; 34
    cf14:	87 e7       	ldi	r24, 0x77	; 119
    cf16:	9c e0       	ldi	r25, 0x0C	; 12
    cf18:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cf1c:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    cf20:	e0 71       	andi	r30, 0x10	; 16
    cf22:	20 e0       	ldi	r18, 0x00	; 0
    cf24:	3e 2f       	mov	r19, r30
    cf26:	40 e0       	ldi	r20, 0x00	; 0
    cf28:	50 e0       	ldi	r21, 0x00	; 0
    cf2a:	60 e0       	ldi	r22, 0x00	; 0
    cf2c:	70 e0       	ldi	r23, 0x00	; 0
    cf2e:	80 e0       	ldi	r24, 0x00	; 0
    cf30:	90 e0       	ldi	r25, 0x00	; 0
    cf32:	a0 e0       	ldi	r26, 0x00	; 0
    cf34:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    cf38:	39 f1       	breq	.+78     	; 0xcf88 <_Z16Display_Update_1v+0x15a>
    cf3a:	10 92 65 15 	sts	0x1565, r1	; 0x801565 <_sRuble_Parameters>
    cf3e:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    cf42:	10 92 67 15 	sts	0x1567, r1	; 0x801567 <_sRuble_Parameters+0x2>
    cf46:	10 92 68 15 	sts	0x1568, r1	; 0x801568 <_sRuble_Parameters+0x3>
    cf4a:	10 92 69 15 	sts	0x1569, r1	; 0x801569 <_sRuble_Parameters+0x4>
    cf4e:	10 92 6a 15 	sts	0x156A, r1	; 0x80156a <_sRuble_Parameters+0x5>
    cf52:	10 92 6b 15 	sts	0x156B, r1	; 0x80156b <_sRuble_Parameters+0x6>
    cf56:	10 92 6c 15 	sts	0x156C, r1	; 0x80156c <_sRuble_Parameters+0x7>
    cf5a:	41 e0       	ldi	r20, 0x01	; 1
    cf5c:	87 e7       	ldi	r24, 0x77	; 119
    cf5e:	9c e0       	ldi	r25, 0x0C	; 12
    cf60:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cf64:	6c e3       	ldi	r22, 0x3C	; 60
    cf66:	72 e2       	ldi	r23, 0x22	; 34
    cf68:	87 e7       	ldi	r24, 0x77	; 119
    cf6a:	9c e0       	ldi	r25, 0x0C	; 12
    cf6c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cf70:	42 e0       	ldi	r20, 0x02	; 2
    cf72:	60 e0       	ldi	r22, 0x00	; 0
    cf74:	87 e7       	ldi	r24, 0x77	; 119
    cf76:	9c e0       	ldi	r25, 0x0C	; 12
    cf78:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cf7c:	67 e2       	ldi	r22, 0x27	; 39
    cf7e:	72 e2       	ldi	r23, 0x22	; 34
    cf80:	87 e7       	ldi	r24, 0x77	; 119
    cf82:	9c e0       	ldi	r25, 0x0C	; 12
    cf84:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cf88:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    cf8c:	3e 2f       	mov	r19, r30
    cf8e:	30 72       	andi	r19, 0x20	; 32
    cf90:	20 e0       	ldi	r18, 0x00	; 0
    cf92:	40 e0       	ldi	r20, 0x00	; 0
    cf94:	50 e0       	ldi	r21, 0x00	; 0
    cf96:	60 e0       	ldi	r22, 0x00	; 0
    cf98:	70 e0       	ldi	r23, 0x00	; 0
    cf9a:	80 e0       	ldi	r24, 0x00	; 0
    cf9c:	90 e0       	ldi	r25, 0x00	; 0
    cf9e:	a0 e0       	ldi	r26, 0x00	; 0
    cfa0:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    cfa4:	d1 f0       	breq	.+52     	; 0xcfda <_Z16Display_Update_1v+0x1ac>
    cfa6:	ef 7d       	andi	r30, 0xDF	; 223
    cfa8:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    cfac:	41 e0       	ldi	r20, 0x01	; 1
    cfae:	87 e7       	ldi	r24, 0x77	; 119
    cfb0:	9c e0       	ldi	r25, 0x0C	; 12
    cfb2:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cfb6:	62 e1       	ldi	r22, 0x12	; 18
    cfb8:	72 e2       	ldi	r23, 0x22	; 34
    cfba:	87 e7       	ldi	r24, 0x77	; 119
    cfbc:	9c e0       	ldi	r25, 0x0C	; 12
    cfbe:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cfc2:	42 e0       	ldi	r20, 0x02	; 2
    cfc4:	60 e0       	ldi	r22, 0x00	; 0
    cfc6:	87 e7       	ldi	r24, 0x77	; 119
    cfc8:	9c e0       	ldi	r25, 0x0C	; 12
    cfca:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    cfce:	6d ef       	ldi	r22, 0xFD	; 253
    cfd0:	71 e2       	ldi	r23, 0x21	; 33
    cfd2:	87 e7       	ldi	r24, 0x77	; 119
    cfd4:	9c e0       	ldi	r25, 0x0C	; 12
    cfd6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    cfda:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    cfde:	3e 2f       	mov	r19, r30
    cfe0:	30 74       	andi	r19, 0x40	; 64
    cfe2:	20 e0       	ldi	r18, 0x00	; 0
    cfe4:	40 e0       	ldi	r20, 0x00	; 0
    cfe6:	50 e0       	ldi	r21, 0x00	; 0
    cfe8:	60 e0       	ldi	r22, 0x00	; 0
    cfea:	70 e0       	ldi	r23, 0x00	; 0
    cfec:	80 e0       	ldi	r24, 0x00	; 0
    cfee:	90 e0       	ldi	r25, 0x00	; 0
    cff0:	a0 e0       	ldi	r26, 0x00	; 0
    cff2:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    cff6:	d1 f0       	breq	.+52     	; 0xd02c <_Z16Display_Update_1v+0x1fe>
    cff8:	ef 7b       	andi	r30, 0xBF	; 191
    cffa:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    cffe:	41 e0       	ldi	r20, 0x01	; 1
    d000:	87 e7       	ldi	r24, 0x77	; 119
    d002:	9c e0       	ldi	r25, 0x0C	; 12
    d004:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d008:	68 ee       	ldi	r22, 0xE8	; 232
    d00a:	71 e2       	ldi	r23, 0x21	; 33
    d00c:	87 e7       	ldi	r24, 0x77	; 119
    d00e:	9c e0       	ldi	r25, 0x0C	; 12
    d010:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d014:	42 e0       	ldi	r20, 0x02	; 2
    d016:	60 e0       	ldi	r22, 0x00	; 0
    d018:	87 e7       	ldi	r24, 0x77	; 119
    d01a:	9c e0       	ldi	r25, 0x0C	; 12
    d01c:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d020:	63 ed       	ldi	r22, 0xD3	; 211
    d022:	71 e2       	ldi	r23, 0x21	; 33
    d024:	87 e7       	ldi	r24, 0x77	; 119
    d026:	9c e0       	ldi	r25, 0x0C	; 12
    d028:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d02c:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    d030:	3e 2f       	mov	r19, r30
    d032:	30 78       	andi	r19, 0x80	; 128
    d034:	20 e0       	ldi	r18, 0x00	; 0
    d036:	40 e0       	ldi	r20, 0x00	; 0
    d038:	50 e0       	ldi	r21, 0x00	; 0
    d03a:	60 e0       	ldi	r22, 0x00	; 0
    d03c:	70 e0       	ldi	r23, 0x00	; 0
    d03e:	80 e0       	ldi	r24, 0x00	; 0
    d040:	90 e0       	ldi	r25, 0x00	; 0
    d042:	a0 e0       	ldi	r26, 0x00	; 0
    d044:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d048:	d1 f0       	breq	.+52     	; 0xd07e <_Z16Display_Update_1v+0x250>
    d04a:	ef 77       	andi	r30, 0x7F	; 127
    d04c:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    d050:	41 e0       	ldi	r20, 0x01	; 1
    d052:	87 e7       	ldi	r24, 0x77	; 119
    d054:	9c e0       	ldi	r25, 0x0C	; 12
    d056:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d05a:	6e eb       	ldi	r22, 0xBE	; 190
    d05c:	71 e2       	ldi	r23, 0x21	; 33
    d05e:	87 e7       	ldi	r24, 0x77	; 119
    d060:	9c e0       	ldi	r25, 0x0C	; 12
    d062:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d066:	42 e0       	ldi	r20, 0x02	; 2
    d068:	60 e0       	ldi	r22, 0x00	; 0
    d06a:	87 e7       	ldi	r24, 0x77	; 119
    d06c:	9c e0       	ldi	r25, 0x0C	; 12
    d06e:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d072:	69 ea       	ldi	r22, 0xA9	; 169
    d074:	71 e2       	ldi	r23, 0x21	; 33
    d076:	87 e7       	ldi	r24, 0x77	; 119
    d078:	9c e0       	ldi	r25, 0x0C	; 12
    d07a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d07e:	e0 91 67 15 	lds	r30, 0x1567	; 0x801567 <_sRuble_Parameters+0x2>
    d082:	4e 2f       	mov	r20, r30
    d084:	41 70       	andi	r20, 0x01	; 1
    d086:	20 e0       	ldi	r18, 0x00	; 0
    d088:	30 e0       	ldi	r19, 0x00	; 0
    d08a:	50 e0       	ldi	r21, 0x00	; 0
    d08c:	60 e0       	ldi	r22, 0x00	; 0
    d08e:	70 e0       	ldi	r23, 0x00	; 0
    d090:	80 e0       	ldi	r24, 0x00	; 0
    d092:	90 e0       	ldi	r25, 0x00	; 0
    d094:	a0 e0       	ldi	r26, 0x00	; 0
    d096:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d09a:	d1 f0       	breq	.+52     	; 0xd0d0 <_Z16Display_Update_1v+0x2a2>
    d09c:	ee 7f       	andi	r30, 0xFE	; 254
    d09e:	e0 93 67 15 	sts	0x1567, r30	; 0x801567 <_sRuble_Parameters+0x2>
    d0a2:	41 e0       	ldi	r20, 0x01	; 1
    d0a4:	87 e7       	ldi	r24, 0x77	; 119
    d0a6:	9c e0       	ldi	r25, 0x0C	; 12
    d0a8:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d0ac:	64 e9       	ldi	r22, 0x94	; 148
    d0ae:	71 e2       	ldi	r23, 0x21	; 33
    d0b0:	87 e7       	ldi	r24, 0x77	; 119
    d0b2:	9c e0       	ldi	r25, 0x0C	; 12
    d0b4:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d0b8:	42 e0       	ldi	r20, 0x02	; 2
    d0ba:	60 e0       	ldi	r22, 0x00	; 0
    d0bc:	87 e7       	ldi	r24, 0x77	; 119
    d0be:	9c e0       	ldi	r25, 0x0C	; 12
    d0c0:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d0c4:	6f e7       	ldi	r22, 0x7F	; 127
    d0c6:	71 e2       	ldi	r23, 0x21	; 33
    d0c8:	87 e7       	ldi	r24, 0x77	; 119
    d0ca:	9c e0       	ldi	r25, 0x0C	; 12
    d0cc:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d0d0:	e0 91 67 15 	lds	r30, 0x1567	; 0x801567 <_sRuble_Parameters+0x2>
    d0d4:	4e 2f       	mov	r20, r30
    d0d6:	44 70       	andi	r20, 0x04	; 4
    d0d8:	20 e0       	ldi	r18, 0x00	; 0
    d0da:	30 e0       	ldi	r19, 0x00	; 0
    d0dc:	50 e0       	ldi	r21, 0x00	; 0
    d0de:	60 e0       	ldi	r22, 0x00	; 0
    d0e0:	70 e0       	ldi	r23, 0x00	; 0
    d0e2:	80 e0       	ldi	r24, 0x00	; 0
    d0e4:	90 e0       	ldi	r25, 0x00	; 0
    d0e6:	a0 e0       	ldi	r26, 0x00	; 0
    d0e8:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d0ec:	d9 f0       	breq	.+54     	; 0xd124 <_Z16Display_Update_1v+0x2f6>
    d0ee:	eb 7f       	andi	r30, 0xFB	; 251
    d0f0:	e0 93 67 15 	sts	0x1567, r30	; 0x801567 <_sRuble_Parameters+0x2>
    d0f4:	41 e0       	ldi	r20, 0x01	; 1
    d0f6:	61 e0       	ldi	r22, 0x01	; 1
    d0f8:	87 e7       	ldi	r24, 0x77	; 119
    d0fa:	9c e0       	ldi	r25, 0x0C	; 12
    d0fc:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d100:	6d e6       	ldi	r22, 0x6D	; 109
    d102:	71 e2       	ldi	r23, 0x21	; 33
    d104:	87 e7       	ldi	r24, 0x77	; 119
    d106:	9c e0       	ldi	r25, 0x0C	; 12
    d108:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d10c:	42 e0       	ldi	r20, 0x02	; 2
    d10e:	60 e0       	ldi	r22, 0x00	; 0
    d110:	87 e7       	ldi	r24, 0x77	; 119
    d112:	9c e0       	ldi	r25, 0x0C	; 12
    d114:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d118:	68 e5       	ldi	r22, 0x58	; 88
    d11a:	71 e2       	ldi	r23, 0x21	; 33
    d11c:	87 e7       	ldi	r24, 0x77	; 119
    d11e:	9c e0       	ldi	r25, 0x0C	; 12
    d120:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d124:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d128:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <_ZZ16Display_Update_1vE12temp_display+0x1>
    d12c:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <_ZZ16Display_Update_1vE12temp_display+0x2>
    d130:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <_ZZ16Display_Update_1vE12temp_display+0x3>
    d134:	80 91 76 0c 	lds	r24, 0x0C76	; 0x800c76 <Start_Display_In_Interrupt>
    d138:	88 23       	and	r24, r24
    d13a:	09 f4       	brne	.+2      	; 0xd13e <_Z16Display_Update_1v+0x310>
    d13c:	95 c1       	rjmp	.+810    	; 0xd468 <_Z16Display_Update_1v+0x63a>
    d13e:	80 91 21 0c 	lds	r24, 0x0C21	; 0x800c21 <_sGSM_Query+0x5>
    d142:	e0 91 90 15 	lds	r30, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    d146:	81 30       	cpi	r24, 0x01	; 1
    d148:	09 f4       	brne	.+2      	; 0xd14c <_Z16Display_Update_1v+0x31e>
    d14a:	9f c0       	rjmp	.+318    	; 0xd28a <_Z16Display_Update_1v+0x45c>
    d14c:	80 91 14 16 	lds	r24, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
    d150:	81 30       	cpi	r24, 0x01	; 1
    d152:	09 f4       	brne	.+2      	; 0xd156 <_Z16Display_Update_1v+0x328>
    d154:	9a c0       	rjmp	.+308    	; 0xd28a <_Z16Display_Update_1v+0x45c>
    d156:	f0 91 65 15 	lds	r31, 0x1565	; 0x801565 <_sRuble_Parameters>
    d15a:	2f 2f       	mov	r18, r31
    d15c:	21 70       	andi	r18, 0x01	; 1
    d15e:	30 e0       	ldi	r19, 0x00	; 0
    d160:	40 e0       	ldi	r20, 0x00	; 0
    d162:	50 e0       	ldi	r21, 0x00	; 0
    d164:	60 e0       	ldi	r22, 0x00	; 0
    d166:	70 e0       	ldi	r23, 0x00	; 0
    d168:	80 e0       	ldi	r24, 0x00	; 0
    d16a:	90 e0       	ldi	r25, 0x00	; 0
    d16c:	a0 e0       	ldi	r26, 0x00	; 0
    d16e:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d172:	b9 f0       	breq	.+46     	; 0xd1a2 <_Z16Display_Update_1v+0x374>
    d174:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d178:	80 fd       	sbrc	r24, 0
    d17a:	0e c0       	rjmp	.+28     	; 0xd198 <_Z16Display_Update_1v+0x36a>
    d17c:	e2 fd       	sbrc	r30, 2
    d17e:	02 c0       	rjmp	.+4      	; 0xd184 <_Z16Display_Update_1v+0x356>
    d180:	21 e0       	ldi	r18, 0x01	; 1
    d182:	03 c0       	rjmp	.+6      	; 0xd18a <_Z16Display_Update_1v+0x35c>
    d184:	29 e0       	ldi	r18, 0x09	; 9
    d186:	40 e0       	ldi	r20, 0x00	; 0
    d188:	60 e0       	ldi	r22, 0x00	; 0
    d18a:	80 e0       	ldi	r24, 0x00	; 0
    d18c:	89 dd       	rcall	.-1262   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d18e:	25 e0       	ldi	r18, 0x05	; 5
    d190:	40 e0       	ldi	r20, 0x00	; 0
    d192:	61 e0       	ldi	r22, 0x01	; 1
    d194:	81 e0       	ldi	r24, 0x01	; 1
    d196:	84 dd       	rcall	.-1272   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d198:	81 ef       	ldi	r24, 0xF1	; 241
    d19a:	9f ef       	ldi	r25, 0xFF	; 255
    d19c:	af ef       	ldi	r26, 0xFF	; 255
    d19e:	b0 e0       	ldi	r27, 0x00	; 0
    d1a0:	6b c0       	rjmp	.+214    	; 0xd278 <_Z16Display_Update_1v+0x44a>
    d1a2:	2f 2f       	mov	r18, r31
    d1a4:	22 70       	andi	r18, 0x02	; 2
    d1a6:	30 e0       	ldi	r19, 0x00	; 0
    d1a8:	40 e0       	ldi	r20, 0x00	; 0
    d1aa:	50 e0       	ldi	r21, 0x00	; 0
    d1ac:	60 e0       	ldi	r22, 0x00	; 0
    d1ae:	70 e0       	ldi	r23, 0x00	; 0
    d1b0:	80 e0       	ldi	r24, 0x00	; 0
    d1b2:	90 e0       	ldi	r25, 0x00	; 0
    d1b4:	a0 e0       	ldi	r26, 0x00	; 0
    d1b6:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d1ba:	b9 f0       	breq	.+46     	; 0xd1ea <_Z16Display_Update_1v+0x3bc>
    d1bc:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d1c0:	81 fd       	sbrc	r24, 1
    d1c2:	0e c0       	rjmp	.+28     	; 0xd1e0 <_Z16Display_Update_1v+0x3b2>
    d1c4:	e2 fd       	sbrc	r30, 2
    d1c6:	02 c0       	rjmp	.+4      	; 0xd1cc <_Z16Display_Update_1v+0x39e>
    d1c8:	21 e0       	ldi	r18, 0x01	; 1
    d1ca:	03 c0       	rjmp	.+6      	; 0xd1d2 <_Z16Display_Update_1v+0x3a4>
    d1cc:	29 e0       	ldi	r18, 0x09	; 9
    d1ce:	40 e0       	ldi	r20, 0x00	; 0
    d1d0:	60 e0       	ldi	r22, 0x00	; 0
    d1d2:	80 e0       	ldi	r24, 0x00	; 0
    d1d4:	65 dd       	rcall	.-1334   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d1d6:	22 e0       	ldi	r18, 0x02	; 2
    d1d8:	40 e0       	ldi	r20, 0x00	; 0
    d1da:	61 e0       	ldi	r22, 0x01	; 1
    d1dc:	89 e0       	ldi	r24, 0x09	; 9
    d1de:	60 dd       	rcall	.-1344   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d1e0:	82 ef       	ldi	r24, 0xF2	; 242
    d1e2:	9f ef       	ldi	r25, 0xFF	; 255
    d1e4:	af ef       	ldi	r26, 0xFF	; 255
    d1e6:	b0 e0       	ldi	r27, 0x00	; 0
    d1e8:	47 c0       	rjmp	.+142    	; 0xd278 <_Z16Display_Update_1v+0x44a>
    d1ea:	2f 2f       	mov	r18, r31
    d1ec:	24 70       	andi	r18, 0x04	; 4
    d1ee:	30 e0       	ldi	r19, 0x00	; 0
    d1f0:	40 e0       	ldi	r20, 0x00	; 0
    d1f2:	50 e0       	ldi	r21, 0x00	; 0
    d1f4:	60 e0       	ldi	r22, 0x00	; 0
    d1f6:	70 e0       	ldi	r23, 0x00	; 0
    d1f8:	80 e0       	ldi	r24, 0x00	; 0
    d1fa:	90 e0       	ldi	r25, 0x00	; 0
    d1fc:	a0 e0       	ldi	r26, 0x00	; 0
    d1fe:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d202:	b9 f0       	breq	.+46     	; 0xd232 <_Z16Display_Update_1v+0x404>
    d204:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d208:	82 fd       	sbrc	r24, 2
    d20a:	0e c0       	rjmp	.+28     	; 0xd228 <_Z16Display_Update_1v+0x3fa>
    d20c:	e2 fd       	sbrc	r30, 2
    d20e:	02 c0       	rjmp	.+4      	; 0xd214 <_Z16Display_Update_1v+0x3e6>
    d210:	21 e0       	ldi	r18, 0x01	; 1
    d212:	03 c0       	rjmp	.+6      	; 0xd21a <_Z16Display_Update_1v+0x3ec>
    d214:	29 e0       	ldi	r18, 0x09	; 9
    d216:	40 e0       	ldi	r20, 0x00	; 0
    d218:	60 e0       	ldi	r22, 0x00	; 0
    d21a:	80 e0       	ldi	r24, 0x00	; 0
    d21c:	41 dd       	rcall	.-1406   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d21e:	23 e0       	ldi	r18, 0x03	; 3
    d220:	40 e0       	ldi	r20, 0x00	; 0
    d222:	61 e0       	ldi	r22, 0x01	; 1
    d224:	8a e0       	ldi	r24, 0x0A	; 10
    d226:	3c dd       	rcall	.-1416   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d228:	84 ef       	ldi	r24, 0xF4	; 244
    d22a:	9f ef       	ldi	r25, 0xFF	; 255
    d22c:	af ef       	ldi	r26, 0xFF	; 255
    d22e:	b0 e0       	ldi	r27, 0x00	; 0
    d230:	23 c0       	rjmp	.+70     	; 0xd278 <_Z16Display_Update_1v+0x44a>
    d232:	2f 2f       	mov	r18, r31
    d234:	28 70       	andi	r18, 0x08	; 8
    d236:	30 e0       	ldi	r19, 0x00	; 0
    d238:	40 e0       	ldi	r20, 0x00	; 0
    d23a:	50 e0       	ldi	r21, 0x00	; 0
    d23c:	60 e0       	ldi	r22, 0x00	; 0
    d23e:	70 e0       	ldi	r23, 0x00	; 0
    d240:	80 e0       	ldi	r24, 0x00	; 0
    d242:	90 e0       	ldi	r25, 0x00	; 0
    d244:	a0 e0       	ldi	r26, 0x00	; 0
    d246:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d24a:	a9 f1       	breq	.+106    	; 0xd2b6 <_Z16Display_Update_1v+0x488>
    d24c:	80 91 23 0c 	lds	r24, 0x0C23	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d250:	83 fd       	sbrc	r24, 3
    d252:	0e c0       	rjmp	.+28     	; 0xd270 <_Z16Display_Update_1v+0x442>
    d254:	e2 fd       	sbrc	r30, 2
    d256:	02 c0       	rjmp	.+4      	; 0xd25c <_Z16Display_Update_1v+0x42e>
    d258:	21 e0       	ldi	r18, 0x01	; 1
    d25a:	03 c0       	rjmp	.+6      	; 0xd262 <_Z16Display_Update_1v+0x434>
    d25c:	29 e0       	ldi	r18, 0x09	; 9
    d25e:	40 e0       	ldi	r20, 0x00	; 0
    d260:	60 e0       	ldi	r22, 0x00	; 0
    d262:	80 e0       	ldi	r24, 0x00	; 0
    d264:	1d dd       	rcall	.-1478   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d266:	24 e0       	ldi	r18, 0x04	; 4
    d268:	40 e0       	ldi	r20, 0x00	; 0
    d26a:	61 e0       	ldi	r22, 0x01	; 1
    d26c:	82 e0       	ldi	r24, 0x02	; 2
    d26e:	18 dd       	rcall	.-1488   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d270:	88 ef       	ldi	r24, 0xF8	; 248
    d272:	9f ef       	ldi	r25, 0xFF	; 255
    d274:	af ef       	ldi	r26, 0xFF	; 255
    d276:	b0 e0       	ldi	r27, 0x00	; 0
    d278:	80 93 23 0c 	sts	0x0C23, r24	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d27c:	90 93 24 0c 	sts	0x0C24, r25	; 0x800c24 <_ZZ16Display_Update_1vE12temp_display+0x1>
    d280:	a0 93 25 0c 	sts	0x0C25, r26	; 0x800c25 <_ZZ16Display_Update_1vE12temp_display+0x2>
    d284:	b0 93 26 0c 	sts	0x0C26, r27	; 0x800c26 <_ZZ16Display_Update_1vE12temp_display+0x3>
    d288:	16 c0       	rjmp	.+44     	; 0xd2b6 <_Z16Display_Update_1v+0x488>
    d28a:	e2 fd       	sbrc	r30, 2
    d28c:	02 c0       	rjmp	.+4      	; 0xd292 <_Z16Display_Update_1v+0x464>
    d28e:	21 e0       	ldi	r18, 0x01	; 1
    d290:	01 c0       	rjmp	.+2      	; 0xd294 <_Z16Display_Update_1v+0x466>
    d292:	29 e0       	ldi	r18, 0x09	; 9
    d294:	40 e0       	ldi	r20, 0x00	; 0
    d296:	60 e0       	ldi	r22, 0x00	; 0
    d298:	80 e0       	ldi	r24, 0x00	; 0
    d29a:	02 dd       	rcall	.-1532   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d29c:	27 e0       	ldi	r18, 0x07	; 7
    d29e:	40 e0       	ldi	r20, 0x00	; 0
    d2a0:	61 e0       	ldi	r22, 0x01	; 1
    d2a2:	82 e0       	ldi	r24, 0x02	; 2
    d2a4:	fd dc       	rcall	.-1542   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d2a6:	10 92 23 0c 	sts	0x0C23, r1	; 0x800c23 <_ZZ16Display_Update_1vE12temp_display>
    d2aa:	10 92 24 0c 	sts	0x0C24, r1	; 0x800c24 <_ZZ16Display_Update_1vE12temp_display+0x1>
    d2ae:	10 92 25 0c 	sts	0x0C25, r1	; 0x800c25 <_ZZ16Display_Update_1vE12temp_display+0x2>
    d2b2:	10 92 26 0c 	sts	0x0C26, r1	; 0x800c26 <_ZZ16Display_Update_1vE12temp_display+0x3>
    d2b6:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    d2ba:	82 fd       	sbrc	r24, 2
    d2bc:	02 c0       	rjmp	.+4      	; 0xd2c2 <_Z16Display_Update_1v+0x494>
    d2be:	21 e0       	ldi	r18, 0x01	; 1
    d2c0:	01 c0       	rjmp	.+2      	; 0xd2c4 <_Z16Display_Update_1v+0x496>
    d2c2:	29 e0       	ldi	r18, 0x09	; 9
    d2c4:	40 e0       	ldi	r20, 0x00	; 0
    d2c6:	60 e0       	ldi	r22, 0x00	; 0
    d2c8:	80 e0       	ldi	r24, 0x00	; 0
    d2ca:	ea dc       	rcall	.-1580   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d2cc:	e0 91 66 15 	lds	r30, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    d2d0:	3e 2f       	mov	r19, r30
    d2d2:	31 70       	andi	r19, 0x01	; 1
    d2d4:	20 e0       	ldi	r18, 0x00	; 0
    d2d6:	40 e0       	ldi	r20, 0x00	; 0
    d2d8:	50 e0       	ldi	r21, 0x00	; 0
    d2da:	60 e0       	ldi	r22, 0x00	; 0
    d2dc:	70 e0       	ldi	r23, 0x00	; 0
    d2de:	80 e0       	ldi	r24, 0x00	; 0
    d2e0:	90 e0       	ldi	r25, 0x00	; 0
    d2e2:	a0 e0       	ldi	r26, 0x00	; 0
    d2e4:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    d2e8:	29 f0       	breq	.+10     	; 0xd2f4 <_Z16Display_Update_1v+0x4c6>
    d2ea:	ee 7f       	andi	r30, 0xFE	; 254
    d2ec:	e0 93 66 15 	sts	0x1566, r30	; 0x801566 <_sRuble_Parameters+0x1>
    d2f0:	2a e0       	ldi	r18, 0x0A	; 10
    d2f2:	d6 dc       	rcall	.-1620   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d2f4:	ed ef       	ldi	r30, 0xFD	; 253
    d2f6:	fc e0       	ldi	r31, 0x0C	; 12
    d2f8:	21 e5       	ldi	r18, 0x51	; 81
    d2fa:	3d e0       	ldi	r19, 0x0D	; 13
    d2fc:	80 e0       	ldi	r24, 0x00	; 0
    d2fe:	90 81       	ld	r25, Z
    d300:	91 11       	cpse	r25, r1
    d302:	8f 5f       	subi	r24, 0xFF	; 255
    d304:	36 96       	adiw	r30, 0x06	; 6
    d306:	2e 17       	cp	r18, r30
    d308:	3f 07       	cpc	r19, r31
    d30a:	c9 f7       	brne	.-14     	; 0xd2fe <_Z16Display_Update_1v+0x4d0>
    d30c:	80 93 22 0c 	sts	0x0C22, r24	; 0x800c22 <_ZZ16Display_Update_1vE10plot_added>
    d310:	80 91 16 16 	lds	r24, 0x1616	; 0x801616 <_sRuble_Parameters+0xb1>
    d314:	88 23       	and	r24, r24
    d316:	09 f4       	brne	.+2      	; 0xd31a <_Z16Display_Update_1v+0x4ec>
    d318:	a7 c0       	rjmp	.+334    	; 0xd468 <_Z16Display_Update_1v+0x63a>
    d31a:	10 92 16 16 	sts	0x1616, r1	; 0x801616 <_sRuble_Parameters+0xb1>
    d31e:	80 91 15 16 	lds	r24, 0x1615	; 0x801615 <_sRuble_Parameters+0xb0>
    d322:	81 11       	cpse	r24, r1
    d324:	05 c0       	rjmp	.+10     	; 0xd330 <_Z16Display_Update_1v+0x502>
    d326:	28 e0       	ldi	r18, 0x08	; 8
    d328:	40 e0       	ldi	r20, 0x00	; 0
    d32a:	62 e0       	ldi	r22, 0x02	; 2
    d32c:	84 e0       	ldi	r24, 0x04	; 4
    d32e:	b8 dc       	rcall	.-1680   	; 0xcca0 <_Z16Lcd_Special_Charhhhh>
    d330:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    d334:	83 30       	cpi	r24, 0x03	; 3
    d336:	b1 f0       	breq	.+44     	; 0xd364 <_Z16Display_Update_1v+0x536>
    d338:	85 30       	cpi	r24, 0x05	; 5
    d33a:	59 f0       	breq	.+22     	; 0xd352 <_Z16Display_Update_1v+0x524>
    d33c:	82 30       	cpi	r24, 0x02	; 2
    d33e:	f1 f4       	brne	.+60     	; 0xd37c <_Z16Display_Update_1v+0x54e>
    d340:	41 e0       	ldi	r20, 0x01	; 1
    d342:	60 e0       	ldi	r22, 0x00	; 0
    d344:	87 e7       	ldi	r24, 0x77	; 119
    d346:	9c e0       	ldi	r25, 0x0C	; 12
    d348:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d34c:	69 e1       	ldi	r22, 0x19	; 25
    d34e:	71 e2       	ldi	r23, 0x21	; 33
    d350:	11 c0       	rjmp	.+34     	; 0xd374 <_Z16Display_Update_1v+0x546>
    d352:	41 e0       	ldi	r20, 0x01	; 1
    d354:	60 e0       	ldi	r22, 0x00	; 0
    d356:	87 e7       	ldi	r24, 0x77	; 119
    d358:	9c e0       	ldi	r25, 0x0C	; 12
    d35a:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d35e:	63 e4       	ldi	r22, 0x43	; 67
    d360:	71 e2       	ldi	r23, 0x21	; 33
    d362:	08 c0       	rjmp	.+16     	; 0xd374 <_Z16Display_Update_1v+0x546>
    d364:	41 e0       	ldi	r20, 0x01	; 1
    d366:	60 e0       	ldi	r22, 0x00	; 0
    d368:	87 e7       	ldi	r24, 0x77	; 119
    d36a:	9c e0       	ldi	r25, 0x0C	; 12
    d36c:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d370:	6e e2       	ldi	r22, 0x2E	; 46
    d372:	71 e2       	ldi	r23, 0x21	; 33
    d374:	87 e7       	ldi	r24, 0x77	; 119
    d376:	9c e0       	ldi	r25, 0x0C	; 12
    d378:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d37c:	80 91 22 0c 	lds	r24, 0x0C22	; 0x800c22 <_ZZ16Display_Update_1vE10plot_added>
    d380:	81 11       	cpse	r24, r1
    d382:	15 c0       	rjmp	.+42     	; 0xd3ae <_Z16Display_Update_1v+0x580>
    d384:	42 e0       	ldi	r20, 0x02	; 2
    d386:	60 e0       	ldi	r22, 0x00	; 0
    d388:	87 e7       	ldi	r24, 0x77	; 119
    d38a:	9c e0       	ldi	r25, 0x0C	; 12
    d38c:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d390:	64 e0       	ldi	r22, 0x04	; 4
    d392:	71 e2       	ldi	r23, 0x21	; 33
    d394:	87 e7       	ldi	r24, 0x77	; 119
    d396:	9c e0       	ldi	r25, 0x0C	; 12
    d398:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d39c:	43 e0       	ldi	r20, 0x03	; 3
    d39e:	60 e0       	ldi	r22, 0x00	; 0
    d3a0:	87 e7       	ldi	r24, 0x77	; 119
    d3a2:	9c e0       	ldi	r25, 0x0C	; 12
    d3a4:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d3a8:	6f ee       	ldi	r22, 0xEF	; 239
    d3aa:	70 e2       	ldi	r23, 0x20	; 32
    d3ac:	3d c0       	rjmp	.+122    	; 0xd428 <_Z16Display_Update_1v+0x5fa>
    d3ae:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    d3b2:	88 23       	and	r24, r24
    d3b4:	29 f1       	breq	.+74     	; 0xd400 <_Z16Display_Update_1v+0x5d2>
    d3b6:	1f 92       	push	r1
    d3b8:	8f 93       	push	r24
    d3ba:	88 e8       	ldi	r24, 0x88	; 136
    d3bc:	93 e0       	ldi	r25, 0x03	; 3
    d3be:	9f 93       	push	r25
    d3c0:	8f 93       	push	r24
    d3c2:	81 e9       	ldi	r24, 0x91	; 145
    d3c4:	95 e1       	ldi	r25, 0x15	; 21
    d3c6:	9f 93       	push	r25
    d3c8:	8f 93       	push	r24
    d3ca:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    d3ce:	20 e0       	ldi	r18, 0x00	; 0
    d3d0:	42 e0       	ldi	r20, 0x02	; 2
    d3d2:	64 e1       	ldi	r22, 0x14	; 20
    d3d4:	81 e9       	ldi	r24, 0x91	; 145
    d3d6:	95 e1       	ldi	r25, 0x15	; 21
    d3d8:	e5 d9       	rcall	.-3126   	; 0xc7a4 <_Z14Lcd_Print_BuffPchhh>
    d3da:	43 e0       	ldi	r20, 0x03	; 3
    d3dc:	60 e0       	ldi	r22, 0x00	; 0
    d3de:	87 e7       	ldi	r24, 0x77	; 119
    d3e0:	9c e0       	ldi	r25, 0x0C	; 12
    d3e2:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d3e6:	6a ed       	ldi	r22, 0xDA	; 218
    d3e8:	70 e2       	ldi	r23, 0x20	; 32
    d3ea:	87 e7       	ldi	r24, 0x77	; 119
    d3ec:	9c e0       	ldi	r25, 0x0C	; 12
    d3ee:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d3f2:	0f 90       	pop	r0
    d3f4:	0f 90       	pop	r0
    d3f6:	0f 90       	pop	r0
    d3f8:	0f 90       	pop	r0
    d3fa:	0f 90       	pop	r0
    d3fc:	0f 90       	pop	r0
    d3fe:	18 c0       	rjmp	.+48     	; 0xd430 <_Z16Display_Update_1v+0x602>
    d400:	42 e0       	ldi	r20, 0x02	; 2
    d402:	60 e0       	ldi	r22, 0x00	; 0
    d404:	87 e7       	ldi	r24, 0x77	; 119
    d406:	9c e0       	ldi	r25, 0x0C	; 12
    d408:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d40c:	65 ec       	ldi	r22, 0xC5	; 197
    d40e:	70 e2       	ldi	r23, 0x20	; 32
    d410:	87 e7       	ldi	r24, 0x77	; 119
    d412:	9c e0       	ldi	r25, 0x0C	; 12
    d414:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d418:	43 e0       	ldi	r20, 0x03	; 3
    d41a:	60 e0       	ldi	r22, 0x00	; 0
    d41c:	87 e7       	ldi	r24, 0x77	; 119
    d41e:	9c e0       	ldi	r25, 0x0C	; 12
    d420:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d424:	60 eb       	ldi	r22, 0xB0	; 176
    d426:	70 e2       	ldi	r23, 0x20	; 32
    d428:	87 e7       	ldi	r24, 0x77	; 119
    d42a:	9c e0       	ldi	r25, 0x0C	; 12
    d42c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d430:	80 91 4a 16 	lds	r24, 0x164A	; 0x80164a <_sRuble_Parameters+0xe5>
    d434:	40 e0       	ldi	r20, 0x00	; 0
    d436:	63 e0       	ldi	r22, 0x03	; 3
    d438:	81 30       	cpi	r24, 0x01	; 1
    d43a:	39 f4       	brne	.+14     	; 0xd44a <_Z16Display_Update_1v+0x61c>
    d43c:	87 e7       	ldi	r24, 0x77	; 119
    d43e:	9c e0       	ldi	r25, 0x0C	; 12
    d440:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d444:	63 ea       	ldi	r22, 0xA3	; 163
    d446:	70 e2       	ldi	r23, 0x20	; 32
    d448:	06 c0       	rjmp	.+12     	; 0xd456 <_Z16Display_Update_1v+0x628>
    d44a:	87 e7       	ldi	r24, 0x77	; 119
    d44c:	9c e0       	ldi	r25, 0x0C	; 12
    d44e:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d452:	66 e9       	ldi	r22, 0x96	; 150
    d454:	70 e2       	ldi	r23, 0x20	; 32
    d456:	87 e7       	ldi	r24, 0x77	; 119
    d458:	9c e0       	ldi	r25, 0x0C	; 12
    d45a:	df 91       	pop	r29
    d45c:	cf 91       	pop	r28
    d45e:	1f 91       	pop	r17
    d460:	0f 91       	pop	r16
    d462:	ff 90       	pop	r15
    d464:	0c 94 8c d0 	jmp	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d468:	df 91       	pop	r29
    d46a:	cf 91       	pop	r28
    d46c:	1f 91       	pop	r17
    d46e:	0f 91       	pop	r16
    d470:	ff 90       	pop	r15
    d472:	08 95       	ret

0000d474 <_Z15Send_AT_CommandPcS_S_jh>:
    d474:	2f 92       	push	r2
    d476:	3f 92       	push	r3
    d478:	4f 92       	push	r4
    d47a:	5f 92       	push	r5
    d47c:	6f 92       	push	r6
    d47e:	7f 92       	push	r7
    d480:	8f 92       	push	r8
    d482:	9f 92       	push	r9
    d484:	af 92       	push	r10
    d486:	bf 92       	push	r11
    d488:	cf 92       	push	r12
    d48a:	df 92       	push	r13
    d48c:	ef 92       	push	r14
    d48e:	ff 92       	push	r15
    d490:	0f 93       	push	r16
    d492:	1f 93       	push	r17
    d494:	cf 93       	push	r28
    d496:	df 93       	push	r29
    d498:	cd b7       	in	r28, 0x3d	; 61
    d49a:	de b7       	in	r29, 0x3e	; 62
    d49c:	c6 56       	subi	r28, 0x66	; 102
    d49e:	d1 09       	sbc	r29, r1
    d4a0:	0f b6       	in	r0, 0x3f	; 63
    d4a2:	f8 94       	cli
    d4a4:	de bf       	out	0x3e, r29	; 62
    d4a6:	0f be       	out	0x3f, r0	; 63
    d4a8:	cd bf       	out	0x3d, r28	; 61
    d4aa:	7c 01       	movw	r14, r24
    d4ac:	6b 01       	movw	r12, r22
    d4ae:	1a 01       	movw	r2, r20
    d4b0:	29 01       	movw	r4, r18
    d4b2:	8e 01       	movw	r16, r28
    d4b4:	0f 5f       	subi	r16, 0xFF	; 255
    d4b6:	1f 4f       	sbci	r17, 0xFF	; 255
    d4b8:	84 e6       	ldi	r24, 0x64	; 100
    d4ba:	f8 01       	movw	r30, r16
    d4bc:	11 92       	st	Z+, r1
    d4be:	8a 95       	dec	r24
    d4c0:	e9 f7       	brne	.-6      	; 0xd4bc <_Z15Send_AT_CommandPcS_S_jh+0x48>
    d4c2:	e1 14       	cp	r14, r1
    d4c4:	f1 04       	cpc	r15, r1
    d4c6:	59 f0       	breq	.+22     	; 0xd4de <_Z15Send_AT_CommandPcS_S_jh+0x6a>
    d4c8:	64 e6       	ldi	r22, 0x64	; 100
    d4ca:	70 e0       	ldi	r23, 0x00	; 0
    d4cc:	80 e0       	ldi	r24, 0x00	; 0
    d4ce:	90 e0       	ldi	r25, 0x00	; 0
    d4d0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    d4d4:	b7 01       	movw	r22, r14
    d4d6:	8c e2       	ldi	r24, 0x2C	; 44
    d4d8:	98 e1       	ldi	r25, 0x18	; 24
    d4da:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
    d4de:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    d4e2:	4b 01       	movw	r8, r22
    d4e4:	5c 01       	movw	r10, r24
    d4e6:	e1 2c       	mov	r14, r1
    d4e8:	f1 2c       	mov	r15, r1
    d4ea:	61 2c       	mov	r6, r1
    d4ec:	71 2c       	mov	r7, r1
    d4ee:	f3 e6       	ldi	r31, 0x63	; 99
    d4f0:	ef 16       	cp	r14, r31
    d4f2:	f1 04       	cpc	r15, r1
    d4f4:	00 f5       	brcc	.+64     	; 0xd536 <_Z15Send_AT_CommandPcS_S_jh+0xc2>
    d4f6:	8c e2       	ldi	r24, 0x2C	; 44
    d4f8:	98 e1       	ldi	r25, 0x18	; 24
    d4fa:	0e 94 ff cd 	call	0x19bfe	; 0x19bfe <_ZN14HardwareSerial9availableEv>
    d4fe:	89 2b       	or	r24, r25
    d500:	d1 f0       	breq	.+52     	; 0xd536 <_Z15Send_AT_CommandPcS_S_jh+0xc2>
    d502:	8c e2       	ldi	r24, 0x2C	; 44
    d504:	98 e1       	ldi	r25, 0x18	; 24
    d506:	0e 94 20 ce 	call	0x19c40	; 0x19c40 <_ZN14HardwareSerial4readEv>
    d50a:	f8 01       	movw	r30, r16
    d50c:	ee 0d       	add	r30, r14
    d50e:	ff 1d       	adc	r31, r15
    d510:	80 83       	st	Z, r24
    d512:	8f ef       	ldi	r24, 0xFF	; 255
    d514:	e8 1a       	sub	r14, r24
    d516:	f8 0a       	sbc	r15, r24
    d518:	b6 01       	movw	r22, r12
    d51a:	c8 01       	movw	r24, r16
    d51c:	21 14       	cp	r2, r1
    d51e:	31 04       	cpc	r3, r1
    d520:	31 f0       	breq	.+12     	; 0xd52e <_Z15Send_AT_CommandPcS_S_jh+0xba>
    d522:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    d526:	89 2b       	or	r24, r25
    d528:	b1 f4       	brne	.+44     	; 0xd556 <_Z15Send_AT_CommandPcS_S_jh+0xe2>
    d52a:	b1 01       	movw	r22, r2
    d52c:	c8 01       	movw	r24, r16
    d52e:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    d532:	89 2b       	or	r24, r25
    d534:	81 f4       	brne	.+32     	; 0xd556 <_Z15Send_AT_CommandPcS_S_jh+0xe2>
    d536:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    d53a:	dc 01       	movw	r26, r24
    d53c:	cb 01       	movw	r24, r22
    d53e:	88 19       	sub	r24, r8
    d540:	99 09       	sbc	r25, r9
    d542:	aa 09       	sbc	r26, r10
    d544:	bb 09       	sbc	r27, r11
    d546:	84 15       	cp	r24, r4
    d548:	95 05       	cpc	r25, r5
    d54a:	a6 05       	cpc	r26, r6
    d54c:	b7 05       	cpc	r27, r7
    d54e:	78 f2       	brcs	.-98     	; 0xd4ee <_Z15Send_AT_CommandPcS_S_jh+0x7a>
    d550:	e1 2c       	mov	r14, r1
    d552:	f1 2c       	mov	r15, r1
    d554:	03 c0       	rjmp	.+6      	; 0xd55c <_Z15Send_AT_CommandPcS_S_jh+0xe8>
    d556:	ee 24       	eor	r14, r14
    d558:	e3 94       	inc	r14
    d55a:	f1 2c       	mov	r15, r1
    d55c:	64 e6       	ldi	r22, 0x64	; 100
    d55e:	70 e0       	ldi	r23, 0x00	; 0
    d560:	80 e0       	ldi	r24, 0x00	; 0
    d562:	90 e0       	ldi	r25, 0x00	; 0
    d564:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    d568:	0e 94 ed 7c 	call	0xf9da	; 0xf9da <_Z17Clear_Serial_Datav>
    d56c:	e1 14       	cp	r14, r1
    d56e:	f1 04       	cpc	r15, r1
    d570:	79 f4       	brne	.+30     	; 0xd590 <_Z15Send_AT_CommandPcS_S_jh+0x11c>
    d572:	a7 96       	adiw	r28, 0x27	; 39
    d574:	1f ae       	std	Y+63, r1	; 0x3f
    d576:	1e ae       	std	Y+62, r1	; 0x3e
    d578:	a7 97       	sbiw	r28, 0x27	; 39
    d57a:	8a e1       	ldi	r24, 0x1A	; 26
    d57c:	a6 96       	adiw	r28, 0x26	; 38
    d57e:	8f af       	std	Y+63, r24	; 0x3f
    d580:	a6 97       	sbiw	r28, 0x26	; 38
    d582:	be 01       	movw	r22, r28
    d584:	6b 59       	subi	r22, 0x9B	; 155
    d586:	7f 4f       	sbci	r23, 0xFF	; 255
    d588:	8c e2       	ldi	r24, 0x2C	; 44
    d58a:	98 e1       	ldi	r25, 0x18	; 24
    d58c:	0e 94 b0 d0 	call	0x1a160	; 0x1a160 <_ZN5Print5printEPKc>
    d590:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    d594:	81 30       	cpi	r24, 0x01	; 1
    d596:	49 f4       	brne	.+18     	; 0xd5aa <_Z15Send_AT_CommandPcS_S_jh+0x136>
    d598:	b8 01       	movw	r22, r16
    d59a:	8f e6       	ldi	r24, 0x6F	; 111
    d59c:	96 e1       	ldi	r25, 0x16	; 22
    d59e:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
    d5a2:	8f e6       	ldi	r24, 0x6F	; 111
    d5a4:	96 e1       	ldi	r25, 0x16	; 22
    d5a6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    d5aa:	b8 01       	movw	r22, r16
    d5ac:	89 e1       	ldi	r24, 0x19	; 25
    d5ae:	91 e1       	ldi	r25, 0x11	; 17
    d5b0:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
    d5b4:	8e 2d       	mov	r24, r14
    d5b6:	ca 59       	subi	r28, 0x9A	; 154
    d5b8:	df 4f       	sbci	r29, 0xFF	; 255
    d5ba:	0f b6       	in	r0, 0x3f	; 63
    d5bc:	f8 94       	cli
    d5be:	de bf       	out	0x3e, r29	; 62
    d5c0:	0f be       	out	0x3f, r0	; 63
    d5c2:	cd bf       	out	0x3d, r28	; 61
    d5c4:	df 91       	pop	r29
    d5c6:	cf 91       	pop	r28
    d5c8:	1f 91       	pop	r17
    d5ca:	0f 91       	pop	r16
    d5cc:	ff 90       	pop	r15
    d5ce:	ef 90       	pop	r14
    d5d0:	df 90       	pop	r13
    d5d2:	cf 90       	pop	r12
    d5d4:	bf 90       	pop	r11
    d5d6:	af 90       	pop	r10
    d5d8:	9f 90       	pop	r9
    d5da:	8f 90       	pop	r8
    d5dc:	7f 90       	pop	r7
    d5de:	6f 90       	pop	r6
    d5e0:	5f 90       	pop	r5
    d5e2:	4f 90       	pop	r4
    d5e4:	3f 90       	pop	r3
    d5e6:	2f 90       	pop	r2
    d5e8:	08 95       	ret

0000d5ea <_Z18_kGSM_SIG_STRENGTHv>:
    d5ea:	0f 93       	push	r16
    d5ec:	6c e1       	ldi	r22, 0x1C	; 28
    d5ee:	74 e2       	ldi	r23, 0x24	; 36
    d5f0:	8c e2       	ldi	r24, 0x2C	; 44
    d5f2:	98 e1       	ldi	r25, 0x18	; 24
    d5f4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d5f8:	01 e0       	ldi	r16, 0x01	; 1
    d5fa:	20 ed       	ldi	r18, 0xD0	; 208
    d5fc:	37 e0       	ldi	r19, 0x07	; 7
    d5fe:	40 e0       	ldi	r20, 0x00	; 0
    d600:	50 e0       	ldi	r21, 0x00	; 0
    d602:	6e e1       	ldi	r22, 0x1E	; 30
    d604:	73 e0       	ldi	r23, 0x03	; 3
    d606:	80 e0       	ldi	r24, 0x00	; 0
    d608:	90 e0       	ldi	r25, 0x00	; 0
    d60a:	34 df       	rcall	.-408    	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    d60c:	88 23       	and	r24, r24
    d60e:	81 f1       	breq	.+96     	; 0xd670 <_Z18_kGSM_SIG_STRENGTHv+0x86>
    d610:	6f e9       	ldi	r22, 0x9F	; 159
    d612:	73 e0       	ldi	r23, 0x03	; 3
    d614:	89 e1       	ldi	r24, 0x19	; 25
    d616:	91 e1       	ldi	r25, 0x11	; 17
    d618:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    d61c:	89 2b       	or	r24, r25
    d61e:	41 f1       	breq	.+80     	; 0xd670 <_Z18_kGSM_SIG_STRENGTHv+0x86>
    d620:	80 e0       	ldi	r24, 0x00	; 0
    d622:	90 e0       	ldi	r25, 0x00	; 0
    d624:	28 2f       	mov	r18, r24
    d626:	fc 01       	movw	r30, r24
    d628:	e7 5e       	subi	r30, 0xE7	; 231
    d62a:	fe 4e       	sbci	r31, 0xEE	; 238
    d62c:	30 81       	ld	r19, Z
    d62e:	3b 32       	cpi	r19, 0x2B	; 43
    d630:	31 f4       	brne	.+12     	; 0xd63e <_Z18_kGSM_SIG_STRENGTHv+0x54>
    d632:	fc 01       	movw	r30, r24
    d634:	e3 5e       	subi	r30, 0xE3	; 227
    d636:	fe 4e       	sbci	r31, 0xEE	; 238
    d638:	30 81       	ld	r19, Z
    d63a:	3a 33       	cpi	r19, 0x3A	; 58
    d63c:	29 f0       	breq	.+10     	; 0xd648 <_Z18_kGSM_SIG_STRENGTHv+0x5e>
    d63e:	01 96       	adiw	r24, 0x01	; 1
    d640:	84 31       	cpi	r24, 0x14	; 20
    d642:	91 05       	cpc	r25, r1
    d644:	79 f7       	brne	.-34     	; 0xd624 <_Z18_kGSM_SIG_STRENGTHv+0x3a>
    d646:	24 e1       	ldi	r18, 0x14	; 20
    d648:	2a 5f       	subi	r18, 0xFA	; 250
    d64a:	30 e0       	ldi	r19, 0x00	; 0
    d64c:	f9 01       	movw	r30, r18
    d64e:	e7 5e       	subi	r30, 0xE7	; 231
    d650:	fe 4e       	sbci	r31, 0xEE	; 238
    d652:	80 81       	ld	r24, Z
    d654:	f9 01       	movw	r30, r18
    d656:	e6 5e       	subi	r30, 0xE6	; 230
    d658:	fe 4e       	sbci	r31, 0xEE	; 238
    d65a:	90 81       	ld	r25, Z
    d65c:	88 0f       	add	r24, r24
    d65e:	80 56       	subi	r24, 0x60	; 96
    d660:	28 2f       	mov	r18, r24
    d662:	22 0f       	add	r18, r18
    d664:	22 0f       	add	r18, r18
    d666:	82 0f       	add	r24, r18
    d668:	90 53       	subi	r25, 0x30	; 48
    d66a:	89 0f       	add	r24, r25
    d66c:	90 e0       	ldi	r25, 0x00	; 0
    d66e:	10 c0       	rjmp	.+32     	; 0xd690 <_Z18_kGSM_SIG_STRENGTHv+0xa6>
    d670:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    d674:	81 30       	cpi	r24, 0x01	; 1
    d676:	51 f4       	brne	.+20     	; 0xd68c <_Z18_kGSM_SIG_STRENGTHv+0xa2>
    d678:	6d e0       	ldi	r22, 0x0D	; 13
    d67a:	74 e2       	ldi	r23, 0x24	; 36
    d67c:	8f e6       	ldi	r24, 0x6F	; 111
    d67e:	96 e1       	ldi	r25, 0x16	; 22
    d680:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d684:	8f e6       	ldi	r24, 0x6F	; 111
    d686:	96 e1       	ldi	r25, 0x16	; 22
    d688:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    d68c:	80 e0       	ldi	r24, 0x00	; 0
    d68e:	90 e0       	ldi	r25, 0x00	; 0
    d690:	0f 91       	pop	r16
    d692:	08 95       	ret

0000d694 <_Z8Gsm_Initv>:
    d694:	0f 93       	push	r16
    d696:	6a e0       	ldi	r22, 0x0A	; 10
    d698:	74 e2       	ldi	r23, 0x24	; 36
    d69a:	8c e2       	ldi	r24, 0x2C	; 44
    d69c:	98 e1       	ldi	r25, 0x18	; 24
    d69e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6a2:	02 e0       	ldi	r16, 0x02	; 2
    d6a4:	28 ee       	ldi	r18, 0xE8	; 232
    d6a6:	33 e0       	ldi	r19, 0x03	; 3
    d6a8:	40 e0       	ldi	r20, 0x00	; 0
    d6aa:	50 e0       	ldi	r21, 0x00	; 0
    d6ac:	6e e1       	ldi	r22, 0x1E	; 30
    d6ae:	73 e0       	ldi	r23, 0x03	; 3
    d6b0:	80 e0       	ldi	r24, 0x00	; 0
    d6b2:	90 e0       	ldi	r25, 0x00	; 0
    d6b4:	df de       	rcall	.-578    	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    d6b6:	88 23       	and	r24, r24
    d6b8:	91 f0       	breq	.+36     	; 0xd6de <_Z8Gsm_Initv+0x4a>
    d6ba:	60 e0       	ldi	r22, 0x00	; 0
    d6bc:	74 e2       	ldi	r23, 0x24	; 36
    d6be:	8c e2       	ldi	r24, 0x2C	; 44
    d6c0:	98 e1       	ldi	r25, 0x18	; 24
    d6c2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    d6c6:	01 e0       	ldi	r16, 0x01	; 1
    d6c8:	28 eb       	ldi	r18, 0xB8	; 184
    d6ca:	3b e0       	ldi	r19, 0x0B	; 11
    d6cc:	40 e0       	ldi	r20, 0x00	; 0
    d6ce:	50 e0       	ldi	r21, 0x00	; 0
    d6d0:	6e e1       	ldi	r22, 0x1E	; 30
    d6d2:	73 e0       	ldi	r23, 0x03	; 3
    d6d4:	80 e0       	ldi	r24, 0x00	; 0
    d6d6:	90 e0       	ldi	r25, 0x00	; 0
    d6d8:	cd de       	rcall	.-614    	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    d6da:	81 e0       	ldi	r24, 0x01	; 1
    d6dc:	01 c0       	rjmp	.+2      	; 0xd6e0 <_Z8Gsm_Initv+0x4c>
    d6de:	80 e0       	ldi	r24, 0x00	; 0
    d6e0:	0f 91       	pop	r16
    d6e2:	08 95       	ret

0000d6e4 <_Z19Initialise_Hardwarev>:
    d6e4:	0f 93       	push	r16
    d6e6:	1f 93       	push	r17
    d6e8:	cf 93       	push	r28
    d6ea:	df 93       	push	r29
    d6ec:	00 d0       	rcall	.+0      	; 0xd6ee <_Z19Initialise_Hardwarev+0xa>
    d6ee:	cd b7       	in	r28, 0x3d	; 61
    d6f0:	de b7       	in	r29, 0x3e	; 62
    d6f2:	18 e1       	ldi	r17, 0x18	; 24
    d6f4:	89 e2       	ldi	r24, 0x29	; 41
    d6f6:	0f b6       	in	r0, 0x3f	; 63
    d6f8:	f8 94       	cli
    d6fa:	a8 95       	wdr
    d6fc:	10 93 60 00 	sts	0x0060, r17	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    d700:	0f be       	out	0x3f, r0	; 63
    d702:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7c0060>
    d706:	10 92 97 0c 	sts	0x0C97, r1	; 0x800c97 <_gStart_Wdt>
    d70a:	0e 94 de 61 	call	0xc3bc	; 0xc3bc <_Z20Timer1_Interrupt_Intv>
    d70e:	0e 94 79 63 	call	0xc6f2	; 0xc6f2 <_Z20Timer0_Interrupt_Intv>
    d712:	43 d8       	rcall	.-3962   	; 0xc79a <_Z8Lcd_Initv>
    d714:	26 e0       	ldi	r18, 0x06	; 6
    d716:	40 e8       	ldi	r20, 0x80	; 128
    d718:	55 e2       	ldi	r21, 0x25	; 37
    d71a:	60 e0       	ldi	r22, 0x00	; 0
    d71c:	70 e0       	ldi	r23, 0x00	; 0
    d71e:	8f e6       	ldi	r24, 0x6F	; 111
    d720:	96 e1       	ldi	r25, 0x16	; 22
    d722:	0e 94 d9 ce 	call	0x19db2	; 0x19db2 <_ZN14HardwareSerial5beginEmh>
    d726:	26 e0       	ldi	r18, 0x06	; 6
    d728:	40 e0       	ldi	r20, 0x00	; 0
    d72a:	52 ec       	ldi	r21, 0xC2	; 194
    d72c:	61 e0       	ldi	r22, 0x01	; 1
    d72e:	70 e0       	ldi	r23, 0x00	; 0
    d730:	8c e2       	ldi	r24, 0x2C	; 44
    d732:	98 e1       	ldi	r25, 0x18	; 24
    d734:	0e 94 d9 ce 	call	0x19db2	; 0x19db2 <_ZN14HardwareSerial5beginEmh>
    d738:	62 e0       	ldi	r22, 0x02	; 2
    d73a:	83 e1       	ldi	r24, 0x13	; 19
    d73c:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d740:	41 e0       	ldi	r20, 0x01	; 1
    d742:	60 e0       	ldi	r22, 0x00	; 0
    d744:	87 e7       	ldi	r24, 0x77	; 119
    d746:	9c e0       	ldi	r25, 0x0C	; 12
    d748:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d74c:	64 eb       	ldi	r22, 0xB4	; 180
    d74e:	74 e2       	ldi	r23, 0x24	; 36
    d750:	87 e7       	ldi	r24, 0x77	; 119
    d752:	9c e0       	ldi	r25, 0x0C	; 12
    d754:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d758:	42 e0       	ldi	r20, 0x02	; 2
    d75a:	60 e0       	ldi	r22, 0x00	; 0
    d75c:	87 e7       	ldi	r24, 0x77	; 119
    d75e:	9c e0       	ldi	r25, 0x0C	; 12
    d760:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d764:	6f e9       	ldi	r22, 0x9F	; 159
    d766:	74 e2       	ldi	r23, 0x24	; 36
    d768:	87 e7       	ldi	r24, 0x77	; 119
    d76a:	9c e0       	ldi	r25, 0x0C	; 12
    d76c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d770:	68 eb       	ldi	r22, 0xB8	; 184
    d772:	7b e0       	ldi	r23, 0x0B	; 11
    d774:	80 e0       	ldi	r24, 0x00	; 0
    d776:	90 e0       	ldi	r25, 0x00	; 0
    d778:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    d77c:	87 e7       	ldi	r24, 0x77	; 119
    d77e:	9c e0       	ldi	r25, 0x0C	; 12
    d780:	0e 94 6b d6 	call	0x1acd6	; 0x1acd6 <_ZN17LiquidCrystal_I2C5clearEv>
    d784:	41 e0       	ldi	r20, 0x01	; 1
    d786:	65 e0       	ldi	r22, 0x05	; 5
    d788:	87 e7       	ldi	r24, 0x77	; 119
    d78a:	9c e0       	ldi	r25, 0x0C	; 12
    d78c:	0e 94 75 d6 	call	0x1acea	; 0x1acea <_ZN17LiquidCrystal_I2C9setCursorEhh>
    d790:	62 e9       	ldi	r22, 0x92	; 146
    d792:	74 e2       	ldi	r23, 0x24	; 36
    d794:	87 e7       	ldi	r24, 0x77	; 119
    d796:	9c e0       	ldi	r25, 0x0C	; 12
    d798:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
    d79c:	8f e6       	ldi	r24, 0x6F	; 111
    d79e:	96 e1       	ldi	r25, 0x16	; 22
    d7a0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    d7a4:	61 e0       	ldi	r22, 0x01	; 1
    d7a6:	8d e0       	ldi	r24, 0x0D	; 13
    d7a8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7ac:	61 e0       	ldi	r22, 0x01	; 1
    d7ae:	8a e0       	ldi	r24, 0x0A	; 10
    d7b0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7b4:	61 e0       	ldi	r22, 0x01	; 1
    d7b6:	8b e0       	ldi	r24, 0x0B	; 11
    d7b8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7bc:	61 e0       	ldi	r22, 0x01	; 1
    d7be:	86 e1       	ldi	r24, 0x16	; 22
    d7c0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7c4:	61 e0       	ldi	r22, 0x01	; 1
    d7c6:	88 e1       	ldi	r24, 0x18	; 24
    d7c8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7cc:	61 e0       	ldi	r22, 0x01	; 1
    d7ce:	8a e1       	ldi	r24, 0x1A	; 26
    d7d0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7d4:	61 e0       	ldi	r22, 0x01	; 1
    d7d6:	8c e1       	ldi	r24, 0x1C	; 28
    d7d8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7dc:	61 e0       	ldi	r22, 0x01	; 1
    d7de:	85 e2       	ldi	r24, 0x25	; 37
    d7e0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7e4:	61 e0       	ldi	r22, 0x01	; 1
    d7e6:	82 e2       	ldi	r24, 0x22	; 34
    d7e8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7ec:	61 e0       	ldi	r22, 0x01	; 1
    d7ee:	80 e2       	ldi	r24, 0x20	; 32
    d7f0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7f4:	61 e0       	ldi	r22, 0x01	; 1
    d7f6:	8e e1       	ldi	r24, 0x1E	; 30
    d7f8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d7fc:	61 e0       	ldi	r22, 0x01	; 1
    d7fe:	87 e1       	ldi	r24, 0x17	; 23
    d800:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d804:	61 e0       	ldi	r22, 0x01	; 1
    d806:	89 e1       	ldi	r24, 0x19	; 25
    d808:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d80c:	61 e0       	ldi	r22, 0x01	; 1
    d80e:	8b e1       	ldi	r24, 0x1B	; 27
    d810:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d814:	61 e0       	ldi	r22, 0x01	; 1
    d816:	8d e1       	ldi	r24, 0x1D	; 29
    d818:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d81c:	61 e0       	ldi	r22, 0x01	; 1
    d81e:	83 e2       	ldi	r24, 0x23	; 35
    d820:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d824:	61 e0       	ldi	r22, 0x01	; 1
    d826:	81 e2       	ldi	r24, 0x21	; 33
    d828:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d82c:	61 e0       	ldi	r22, 0x01	; 1
    d82e:	8f e1       	ldi	r24, 0x1F	; 31
    d830:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d834:	61 e0       	ldi	r22, 0x01	; 1
    d836:	81 e3       	ldi	r24, 0x31	; 49
    d838:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d83c:	61 e0       	ldi	r22, 0x01	; 1
    d83e:	86 e0       	ldi	r24, 0x06	; 6
    d840:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d844:	61 e0       	ldi	r22, 0x01	; 1
    d846:	87 e0       	ldi	r24, 0x07	; 7
    d848:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d84c:	61 e0       	ldi	r22, 0x01	; 1
    d84e:	88 e0       	ldi	r24, 0x08	; 8
    d850:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d854:	61 e0       	ldi	r22, 0x01	; 1
    d856:	89 e0       	ldi	r24, 0x09	; 9
    d858:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d85c:	61 e0       	ldi	r22, 0x01	; 1
    d85e:	80 e3       	ldi	r24, 0x30	; 48
    d860:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d864:	61 e0       	ldi	r22, 0x01	; 1
    d866:	8f e2       	ldi	r24, 0x2F	; 47
    d868:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d86c:	61 e0       	ldi	r22, 0x01	; 1
    d86e:	8e e2       	ldi	r24, 0x2E	; 46
    d870:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d874:	61 e0       	ldi	r22, 0x01	; 1
    d876:	8d e2       	ldi	r24, 0x2D	; 45
    d878:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d87c:	61 e0       	ldi	r22, 0x01	; 1
    d87e:	85 e3       	ldi	r24, 0x35	; 53
    d880:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d884:	61 e0       	ldi	r22, 0x01	; 1
    d886:	84 e2       	ldi	r24, 0x24	; 36
    d888:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d88c:	61 e0       	ldi	r22, 0x01	; 1
    d88e:	81 e0       	ldi	r24, 0x01	; 1
    d890:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d894:	61 e0       	ldi	r22, 0x01	; 1
    d896:	8c e0       	ldi	r24, 0x0C	; 12
    d898:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d89c:	61 e0       	ldi	r22, 0x01	; 1
    d89e:	87 e2       	ldi	r24, 0x27	; 39
    d8a0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d8a4:	61 e0       	ldi	r22, 0x01	; 1
    d8a6:	8e e1       	ldi	r24, 0x1E	; 30
    d8a8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d8ac:	61 e0       	ldi	r22, 0x01	; 1
    d8ae:	8e e1       	ldi	r24, 0x1E	; 30
    d8b0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    d8b4:	60 e0       	ldi	r22, 0x00	; 0
    d8b6:	87 e3       	ldi	r24, 0x37	; 55
    d8b8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d8bc:	60 e0       	ldi	r22, 0x00	; 0
    d8be:	88 e3       	ldi	r24, 0x38	; 56
    d8c0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d8c4:	61 e0       	ldi	r22, 0x01	; 1
    d8c6:	8a e0       	ldi	r24, 0x0A	; 10
    d8c8:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    d8cc:	61 e0       	ldi	r22, 0x01	; 1
    d8ce:	8b e0       	ldi	r24, 0x0B	; 11
    d8d0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    d8d4:	86 e1       	ldi	r24, 0x16	; 22
    d8d6:	80 93 f5 15 	sts	0x15F5, r24	; 0x8015f5 <_sRuble_Parameters+0x90>
    d8da:	10 93 f6 15 	sts	0x15F6, r17	; 0x8015f6 <_sRuble_Parameters+0x91>
    d8de:	8a e1       	ldi	r24, 0x1A	; 26
    d8e0:	80 93 f7 15 	sts	0x15F7, r24	; 0x8015f7 <_sRuble_Parameters+0x92>
    d8e4:	8c e1       	ldi	r24, 0x1C	; 28
    d8e6:	80 93 f8 15 	sts	0x15F8, r24	; 0x8015f8 <_sRuble_Parameters+0x93>
    d8ea:	85 e2       	ldi	r24, 0x25	; 37
    d8ec:	80 93 f9 15 	sts	0x15F9, r24	; 0x8015f9 <_sRuble_Parameters+0x94>
    d8f0:	82 e2       	ldi	r24, 0x22	; 34
    d8f2:	80 93 fa 15 	sts	0x15FA, r24	; 0x8015fa <_sRuble_Parameters+0x95>
    d8f6:	80 e2       	ldi	r24, 0x20	; 32
    d8f8:	80 93 fb 15 	sts	0x15FB, r24	; 0x8015fb <_sRuble_Parameters+0x96>
    d8fc:	8e e1       	ldi	r24, 0x1E	; 30
    d8fe:	80 93 fc 15 	sts	0x15FC, r24	; 0x8015fc <_sRuble_Parameters+0x97>
    d902:	87 e1       	ldi	r24, 0x17	; 23
    d904:	80 93 fd 15 	sts	0x15FD, r24	; 0x8015fd <_sRuble_Parameters+0x98>
    d908:	89 e1       	ldi	r24, 0x19	; 25
    d90a:	80 93 fe 15 	sts	0x15FE, r24	; 0x8015fe <_sRuble_Parameters+0x99>
    d90e:	8b e1       	ldi	r24, 0x1B	; 27
    d910:	80 93 ff 15 	sts	0x15FF, r24	; 0x8015ff <_sRuble_Parameters+0x9a>
    d914:	8d e1       	ldi	r24, 0x1D	; 29
    d916:	80 93 00 16 	sts	0x1600, r24	; 0x801600 <_sRuble_Parameters+0x9b>
    d91a:	83 e2       	ldi	r24, 0x23	; 35
    d91c:	80 93 01 16 	sts	0x1601, r24	; 0x801601 <_sRuble_Parameters+0x9c>
    d920:	81 e2       	ldi	r24, 0x21	; 33
    d922:	80 93 02 16 	sts	0x1602, r24	; 0x801602 <_sRuble_Parameters+0x9d>
    d926:	8f e1       	ldi	r24, 0x1F	; 31
    d928:	80 93 03 16 	sts	0x1603, r24	; 0x801603 <_sRuble_Parameters+0x9e>
    d92c:	81 e3       	ldi	r24, 0x31	; 49
    d92e:	80 93 04 16 	sts	0x1604, r24	; 0x801604 <_sRuble_Parameters+0x9f>
    d932:	86 e0       	ldi	r24, 0x06	; 6
    d934:	80 93 05 16 	sts	0x1605, r24	; 0x801605 <_sRuble_Parameters+0xa0>
    d938:	87 e0       	ldi	r24, 0x07	; 7
    d93a:	80 93 06 16 	sts	0x1606, r24	; 0x801606 <_sRuble_Parameters+0xa1>
    d93e:	88 e0       	ldi	r24, 0x08	; 8
    d940:	80 93 07 16 	sts	0x1607, r24	; 0x801607 <_sRuble_Parameters+0xa2>
    d944:	89 e0       	ldi	r24, 0x09	; 9
    d946:	80 93 08 16 	sts	0x1608, r24	; 0x801608 <_sRuble_Parameters+0xa3>
    d94a:	80 e3       	ldi	r24, 0x30	; 48
    d94c:	80 93 09 16 	sts	0x1609, r24	; 0x801609 <_sRuble_Parameters+0xa4>
    d950:	8f e2       	ldi	r24, 0x2F	; 47
    d952:	80 93 0a 16 	sts	0x160A, r24	; 0x80160a <_sRuble_Parameters+0xa5>
    d956:	8e e2       	ldi	r24, 0x2E	; 46
    d958:	80 93 0b 16 	sts	0x160B, r24	; 0x80160b <_sRuble_Parameters+0xa6>
    d95c:	8d e2       	ldi	r24, 0x2D	; 45
    d95e:	80 93 0c 16 	sts	0x160C, r24	; 0x80160c <_sRuble_Parameters+0xa7>
    d962:	05 ef       	ldi	r16, 0xF5	; 245
    d964:	15 e1       	ldi	r17, 0x15	; 21
    d966:	61 e0       	ldi	r22, 0x01	; 1
    d968:	f8 01       	movw	r30, r16
    d96a:	81 91       	ld	r24, Z+
    d96c:	8f 01       	movw	r16, r30
    d96e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    d972:	f6 e1       	ldi	r31, 0x16	; 22
    d974:	0d 30       	cpi	r16, 0x0D	; 13
    d976:	1f 07       	cpc	r17, r31
    d978:	b1 f7       	brne	.-20     	; 0xd966 <_Z19Initialise_Hardwarev+0x282>
    d97a:	62 e0       	ldi	r22, 0x02	; 2
    d97c:	89 e3       	ldi	r24, 0x39	; 57
    d97e:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d982:	62 e0       	ldi	r22, 0x02	; 2
    d984:	8a e3       	ldi	r24, 0x3A	; 58
    d986:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d98a:	62 e0       	ldi	r22, 0x02	; 2
    d98c:	8b e3       	ldi	r24, 0x3B	; 59
    d98e:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    d992:	6e 98       	cbi	0x0d, 6	; 13
    d994:	76 9a       	sbi	0x0e, 6	; 14
    d996:	68 ee       	ldi	r22, 0xE8	; 232
    d998:	73 e0       	ldi	r23, 0x03	; 3
    d99a:	80 e0       	ldi	r24, 0x00	; 0
    d99c:	90 e0       	ldi	r25, 0x00	; 0
    d99e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    d9a2:	5f d6       	rcall	.+3262   	; 0xe662 <_Z11Debug_Checkv>
    d9a4:	0e 94 02 64 	call	0xc804	; 0xc804 <_Z9Lora_Initv>
    d9a8:	88 23       	and	r24, r24
    d9aa:	79 f0       	breq	.+30     	; 0xd9ca <_Z19Initialise_Hardwarev+0x2e6>
    d9ac:	0e 94 24 64 	call	0xc848	; 0xc848 <_Z13Lora_Set_Freqv>
    d9b0:	0e 94 32 64 	call	0xc864	; 0xc864 <_Z15Lora_Set_Configv>
    d9b4:	0e 94 2c 64 	call	0xc858	; 0xc858 <_Z14Lora_Set_Powerv>
    d9b8:	10 92 15 16 	sts	0x1615, r1	; 0x801615 <_sRuble_Parameters+0xb0>
    d9bc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    d9c0:	81 30       	cpi	r24, 0x01	; 1
    d9c2:	11 f5       	brne	.+68     	; 0xda08 <_Z19Initialise_Hardwarev+0x324>
    d9c4:	63 e8       	ldi	r22, 0x83	; 131
    d9c6:	74 e2       	ldi	r23, 0x24	; 36
    d9c8:	17 c0       	rjmp	.+46     	; 0xd9f8 <_Z19Initialise_Hardwarev+0x314>
    d9ca:	80 91 d4 15 	lds	r24, 0x15D4	; 0x8015d4 <_sRuble_Parameters+0x6f>
    d9ce:	82 60       	ori	r24, 0x02	; 2
    d9d0:	80 93 d4 15 	sts	0x15D4, r24	; 0x8015d4 <_sRuble_Parameters+0x6f>
    d9d4:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    d9d8:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    d9dc:	91 60       	ori	r25, 0x01	; 1
    d9de:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    d9e2:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    d9e6:	81 e0       	ldi	r24, 0x01	; 1
    d9e8:	80 93 15 16 	sts	0x1615, r24	; 0x801615 <_sRuble_Parameters+0xb0>
    d9ec:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    d9f0:	81 30       	cpi	r24, 0x01	; 1
    d9f2:	51 f4       	brne	.+20     	; 0xda08 <_Z19Initialise_Hardwarev+0x324>
    d9f4:	60 e7       	ldi	r22, 0x70	; 112
    d9f6:	74 e2       	ldi	r23, 0x24	; 36
    d9f8:	8f e6       	ldi	r24, 0x6F	; 111
    d9fa:	96 e1       	ldi	r25, 0x16	; 22
    d9fc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    da00:	8f e6       	ldi	r24, 0x6F	; 111
    da02:	96 e1       	ldi	r25, 0x16	; 22
    da04:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    da08:	80 9a       	sbi	0x10, 0	; 16
    da0a:	88 98       	cbi	0x11, 0	; 17
    da0c:	68 e8       	ldi	r22, 0x88	; 136
    da0e:	73 e1       	ldi	r23, 0x13	; 19
    da10:	80 e0       	ldi	r24, 0x00	; 0
    da12:	90 e0       	ldi	r25, 0x00	; 0
    da14:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da18:	81 b3       	in	r24, 0x11	; 17
    da1a:	8e 6f       	ori	r24, 0xFE	; 254
    da1c:	81 bb       	out	0x11, r24	; 17
    da1e:	80 91 67 15 	lds	r24, 0x1567	; 0x801567 <_sRuble_Parameters+0x2>
    da22:	84 60       	ori	r24, 0x04	; 4
    da24:	80 93 67 15 	sts	0x1567, r24	; 0x801567 <_sRuble_Parameters+0x2>
    da28:	02 da       	rcall	.-3068   	; 0xce2e <_Z16Display_Update_1v>
    da2a:	68 e8       	ldi	r22, 0x88	; 136
    da2c:	73 e1       	ldi	r23, 0x13	; 19
    da2e:	80 e0       	ldi	r24, 0x00	; 0
    da30:	90 e0       	ldi	r25, 0x00	; 0
    da32:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da36:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    da3a:	82 60       	ori	r24, 0x02	; 2
    da3c:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
    da40:	f6 d9       	rcall	.-3092   	; 0xce2e <_Z16Display_Update_1v>
    da42:	68 e8       	ldi	r22, 0x88	; 136
    da44:	73 e1       	ldi	r23, 0x13	; 19
    da46:	80 e0       	ldi	r24, 0x00	; 0
    da48:	90 e0       	ldi	r25, 0x00	; 0
    da4a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da4e:	68 e8       	ldi	r22, 0x88	; 136
    da50:	73 e1       	ldi	r23, 0x13	; 19
    da52:	80 e0       	ldi	r24, 0x00	; 0
    da54:	90 e0       	ldi	r25, 0x00	; 0
    da56:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da5a:	68 e8       	ldi	r22, 0x88	; 136
    da5c:	73 e1       	ldi	r23, 0x13	; 19
    da5e:	80 e0       	ldi	r24, 0x00	; 0
    da60:	90 e0       	ldi	r25, 0x00	; 0
    da62:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da66:	68 e8       	ldi	r22, 0x88	; 136
    da68:	73 e1       	ldi	r23, 0x13	; 19
    da6a:	80 e0       	ldi	r24, 0x00	; 0
    da6c:	90 e0       	ldi	r25, 0x00	; 0
    da6e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da72:	68 e8       	ldi	r22, 0x88	; 136
    da74:	73 e1       	ldi	r23, 0x13	; 19
    da76:	80 e0       	ldi	r24, 0x00	; 0
    da78:	90 e0       	ldi	r25, 0x00	; 0
    da7a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    da7e:	ce 01       	movw	r24, r28
    da80:	01 96       	adiw	r24, 0x01	; 1
    da82:	23 e0       	ldi	r18, 0x03	; 3
    da84:	fc 01       	movw	r30, r24
    da86:	11 92       	st	Z+, r1
    da88:	2a 95       	dec	r18
    da8a:	e9 f7       	brne	.-6      	; 0xda86 <_Z19Initialise_Hardwarev+0x3a2>
    da8c:	2a e1       	ldi	r18, 0x1A	; 26
    da8e:	29 83       	std	Y+1, r18	; 0x01
    da90:	01 e0       	ldi	r16, 0x01	; 1
    da92:	28 e8       	ldi	r18, 0x88	; 136
    da94:	33 e1       	ldi	r19, 0x13	; 19
    da96:	40 e0       	ldi	r20, 0x00	; 0
    da98:	50 e0       	ldi	r21, 0x00	; 0
    da9a:	6e e1       	ldi	r22, 0x1E	; 30
    da9c:	73 e0       	ldi	r23, 0x03	; 3
    da9e:	ea dc       	rcall	.-1580   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    daa0:	f9 dd       	rcall	.-1038   	; 0xd694 <_Z8Gsm_Initv>
    daa2:	20 91 55 16 	lds	r18, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    daa6:	88 23       	and	r24, r24
    daa8:	29 f0       	breq	.+10     	; 0xdab4 <_Z19Initialise_Hardwarev+0x3d0>
    daaa:	21 30       	cpi	r18, 0x01	; 1
    daac:	e9 f4       	brne	.+58     	; 0xdae8 <_Z19Initialise_Hardwarev+0x404>
    daae:	62 e6       	ldi	r22, 0x62	; 98
    dab0:	74 e2       	ldi	r23, 0x24	; 36
    dab2:	12 c0       	rjmp	.+36     	; 0xdad8 <_Z19Initialise_Hardwarev+0x3f4>
    dab4:	80 91 d4 15 	lds	r24, 0x15D4	; 0x8015d4 <_sRuble_Parameters+0x6f>
    dab8:	81 60       	ori	r24, 0x01	; 1
    daba:	80 93 d4 15 	sts	0x15D4, r24	; 0x8015d4 <_sRuble_Parameters+0x6f>
    dabe:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    dac2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    dac6:	91 60       	ori	r25, 0x01	; 1
    dac8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    dacc:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    dad0:	21 30       	cpi	r18, 0x01	; 1
    dad2:	51 f4       	brne	.+20     	; 0xdae8 <_Z19Initialise_Hardwarev+0x404>
    dad4:	60 e5       	ldi	r22, 0x50	; 80
    dad6:	74 e2       	ldi	r23, 0x24	; 36
    dad8:	8f e6       	ldi	r24, 0x6F	; 111
    dada:	96 e1       	ldi	r25, 0x16	; 22
    dadc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dae0:	8f e6       	ldi	r24, 0x6F	; 111
    dae2:	96 e1       	ldi	r25, 0x16	; 22
    dae4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    dae8:	81 e0       	ldi	r24, 0x01	; 1
    daea:	80 93 54 16 	sts	0x1654, r24	; 0x801654 <_sRuble_Parameters+0xef>
    daee:	0f 90       	pop	r0
    daf0:	0f 90       	pop	r0
    daf2:	0f 90       	pop	r0
    daf4:	df 91       	pop	r29
    daf6:	cf 91       	pop	r28
    daf8:	1f 91       	pop	r17
    dafa:	0f 91       	pop	r16
    dafc:	08 95       	ret

0000dafe <_Z20Check_Gsm_Connectionv>:
    dafe:	0f 93       	push	r16
    db00:	65 ef       	ldi	r22, 0xF5	; 245
    db02:	73 e2       	ldi	r23, 0x23	; 35
    db04:	8c e2       	ldi	r24, 0x2C	; 44
    db06:	98 e1       	ldi	r25, 0x18	; 24
    db08:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    db0c:	02 e0       	ldi	r16, 0x02	; 2
    db0e:	28 e8       	ldi	r18, 0x88	; 136
    db10:	33 e1       	ldi	r19, 0x13	; 19
    db12:	40 e0       	ldi	r20, 0x00	; 0
    db14:	50 e0       	ldi	r21, 0x00	; 0
    db16:	6e e1       	ldi	r22, 0x1E	; 30
    db18:	73 e0       	ldi	r23, 0x03	; 3
    db1a:	80 e0       	ldi	r24, 0x00	; 0
    db1c:	90 e0       	ldi	r25, 0x00	; 0
    db1e:	aa dc       	rcall	.-1708   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    db20:	20 ea       	ldi	r18, 0xA0	; 160
    db22:	3f e0       	ldi	r19, 0x0F	; 15
    db24:	40 e0       	ldi	r20, 0x00	; 0
    db26:	50 e0       	ldi	r21, 0x00	; 0
    db28:	6e e1       	ldi	r22, 0x1E	; 30
    db2a:	73 e0       	ldi	r23, 0x03	; 3
    db2c:	80 e0       	ldi	r24, 0x00	; 0
    db2e:	90 e0       	ldi	r25, 0x00	; 0
    db30:	a1 dc       	rcall	.-1726   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    db32:	6b ee       	ldi	r22, 0xEB	; 235
    db34:	73 e2       	ldi	r23, 0x23	; 35
    db36:	8c e2       	ldi	r24, 0x2C	; 44
    db38:	98 e1       	ldi	r25, 0x18	; 24
    db3a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    db3e:	28 eb       	ldi	r18, 0xB8	; 184
    db40:	3b e0       	ldi	r19, 0x0B	; 11
    db42:	40 e0       	ldi	r20, 0x00	; 0
    db44:	50 e0       	ldi	r21, 0x00	; 0
    db46:	6e e1       	ldi	r22, 0x1E	; 30
    db48:	73 e0       	ldi	r23, 0x03	; 3
    db4a:	80 e0       	ldi	r24, 0x00	; 0
    db4c:	90 e0       	ldi	r25, 0x00	; 0
    db4e:	92 dc       	rcall	.-1756   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    db50:	62 ee       	ldi	r22, 0xE2	; 226
    db52:	73 e2       	ldi	r23, 0x23	; 35
    db54:	8c e2       	ldi	r24, 0x2C	; 44
    db56:	98 e1       	ldi	r25, 0x18	; 24
    db58:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    db5c:	28 eb       	ldi	r18, 0xB8	; 184
    db5e:	3b e0       	ldi	r19, 0x0B	; 11
    db60:	43 ea       	ldi	r20, 0xA3	; 163
    db62:	53 e0       	ldi	r21, 0x03	; 3
    db64:	6e ea       	ldi	r22, 0xAE	; 174
    db66:	73 e0       	ldi	r23, 0x03	; 3
    db68:	80 e0       	ldi	r24, 0x00	; 0
    db6a:	90 e0       	ldi	r25, 0x00	; 0
    db6c:	83 dc       	rcall	.-1786   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    db6e:	81 11       	cpse	r24, r1
    db70:	24 c0       	rjmp	.+72     	; 0xdbba <_Z20Check_Gsm_Connectionv+0xbc>
    db72:	68 eb       	ldi	r22, 0xB8	; 184
    db74:	7b e0       	ldi	r23, 0x0B	; 11
    db76:	80 e0       	ldi	r24, 0x00	; 0
    db78:	90 e0       	ldi	r25, 0x00	; 0
    db7a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    db7e:	68 ed       	ldi	r22, 0xD8	; 216
    db80:	73 e2       	ldi	r23, 0x23	; 35
    db82:	8c e2       	ldi	r24, 0x2C	; 44
    db84:	98 e1       	ldi	r25, 0x18	; 24
    db86:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    db8a:	28 eb       	ldi	r18, 0xB8	; 184
    db8c:	3b e0       	ldi	r19, 0x0B	; 11
    db8e:	40 e0       	ldi	r20, 0x00	; 0
    db90:	50 e0       	ldi	r21, 0x00	; 0
    db92:	6e e1       	ldi	r22, 0x1E	; 30
    db94:	73 e0       	ldi	r23, 0x03	; 3
    db96:	80 e0       	ldi	r24, 0x00	; 0
    db98:	90 e0       	ldi	r25, 0x00	; 0
    db9a:	6c dc       	rcall	.-1832   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    db9c:	6f ec       	ldi	r22, 0xCF	; 207
    db9e:	73 e2       	ldi	r23, 0x23	; 35
    dba0:	8c e2       	ldi	r24, 0x2C	; 44
    dba2:	98 e1       	ldi	r25, 0x18	; 24
    dba4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dba8:	28 eb       	ldi	r18, 0xB8	; 184
    dbaa:	3b e0       	ldi	r19, 0x0B	; 11
    dbac:	43 ea       	ldi	r20, 0xA3	; 163
    dbae:	53 e0       	ldi	r21, 0x03	; 3
    dbb0:	6e ea       	ldi	r22, 0xAE	; 174
    dbb2:	73 e0       	ldi	r23, 0x03	; 3
    dbb4:	80 e0       	ldi	r24, 0x00	; 0
    dbb6:	90 e0       	ldi	r25, 0x00	; 0
    dbb8:	5d dc       	rcall	.-1862   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dbba:	68 ee       	ldi	r22, 0xE8	; 232
    dbbc:	73 e0       	ldi	r23, 0x03	; 3
    dbbe:	80 e0       	ldi	r24, 0x00	; 0
    dbc0:	90 e0       	ldi	r25, 0x00	; 0
    dbc2:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    dbc6:	64 ec       	ldi	r22, 0xC4	; 196
    dbc8:	73 e2       	ldi	r23, 0x23	; 35
    dbca:	8c e2       	ldi	r24, 0x2C	; 44
    dbcc:	98 e1       	ldi	r25, 0x18	; 24
    dbce:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dbd2:	02 e0       	ldi	r16, 0x02	; 2
    dbd4:	28 eb       	ldi	r18, 0xB8	; 184
    dbd6:	3b e0       	ldi	r19, 0x0B	; 11
    dbd8:	40 e0       	ldi	r20, 0x00	; 0
    dbda:	50 e0       	ldi	r21, 0x00	; 0
    dbdc:	6e e1       	ldi	r22, 0x1E	; 30
    dbde:	73 e0       	ldi	r23, 0x03	; 3
    dbe0:	80 e0       	ldi	r24, 0x00	; 0
    dbe2:	90 e0       	ldi	r25, 0x00	; 0
    dbe4:	47 dc       	rcall	.-1906   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dbe6:	6a eb       	ldi	r22, 0xBA	; 186
    dbe8:	73 e2       	ldi	r23, 0x23	; 35
    dbea:	8c e2       	ldi	r24, 0x2C	; 44
    dbec:	98 e1       	ldi	r25, 0x18	; 24
    dbee:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dbf2:	28 eb       	ldi	r18, 0xB8	; 184
    dbf4:	3b e0       	ldi	r19, 0x0B	; 11
    dbf6:	49 eb       	ldi	r20, 0xB9	; 185
    dbf8:	53 e0       	ldi	r21, 0x03	; 3
    dbfa:	65 ec       	ldi	r22, 0xC5	; 197
    dbfc:	73 e0       	ldi	r23, 0x03	; 3
    dbfe:	80 e0       	ldi	r24, 0x00	; 0
    dc00:	90 e0       	ldi	r25, 0x00	; 0
    dc02:	38 dc       	rcall	.-1936   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dc04:	81 11       	cpse	r24, r1
    dc06:	29 c0       	rjmp	.+82     	; 0xdc5a <_Z20Check_Gsm_Connectionv+0x15c>
    dc08:	68 ee       	ldi	r22, 0xE8	; 232
    dc0a:	73 e0       	ldi	r23, 0x03	; 3
    dc0c:	80 e0       	ldi	r24, 0x00	; 0
    dc0e:	90 e0       	ldi	r25, 0x00	; 0
    dc10:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    dc14:	6f ea       	ldi	r22, 0xAF	; 175
    dc16:	73 e2       	ldi	r23, 0x23	; 35
    dc18:	8c e2       	ldi	r24, 0x2C	; 44
    dc1a:	98 e1       	ldi	r25, 0x18	; 24
    dc1c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dc20:	28 eb       	ldi	r18, 0xB8	; 184
    dc22:	3b e0       	ldi	r19, 0x0B	; 11
    dc24:	40 e0       	ldi	r20, 0x00	; 0
    dc26:	50 e0       	ldi	r21, 0x00	; 0
    dc28:	6e e1       	ldi	r22, 0x1E	; 30
    dc2a:	73 e0       	ldi	r23, 0x03	; 3
    dc2c:	80 e0       	ldi	r24, 0x00	; 0
    dc2e:	90 e0       	ldi	r25, 0x00	; 0
    dc30:	21 dc       	rcall	.-1982   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dc32:	65 ea       	ldi	r22, 0xA5	; 165
    dc34:	73 e2       	ldi	r23, 0x23	; 35
    dc36:	8c e2       	ldi	r24, 0x2C	; 44
    dc38:	98 e1       	ldi	r25, 0x18	; 24
    dc3a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dc3e:	28 eb       	ldi	r18, 0xB8	; 184
    dc40:	3b e0       	ldi	r19, 0x0B	; 11
    dc42:	49 eb       	ldi	r20, 0xB9	; 185
    dc44:	53 e0       	ldi	r21, 0x03	; 3
    dc46:	65 ec       	ldi	r22, 0xC5	; 197
    dc48:	73 e0       	ldi	r23, 0x03	; 3
    dc4a:	80 e0       	ldi	r24, 0x00	; 0
    dc4c:	90 e0       	ldi	r25, 0x00	; 0
    dc4e:	12 dc       	rcall	.-2012   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dc50:	91 e0       	ldi	r25, 0x01	; 1
    dc52:	81 11       	cpse	r24, r1
    dc54:	03 c0       	rjmp	.+6      	; 0xdc5c <_Z20Check_Gsm_Connectionv+0x15e>
    dc56:	90 e0       	ldi	r25, 0x00	; 0
    dc58:	01 c0       	rjmp	.+2      	; 0xdc5c <_Z20Check_Gsm_Connectionv+0x15e>
    dc5a:	91 e0       	ldi	r25, 0x01	; 1
    dc5c:	89 2f       	mov	r24, r25
    dc5e:	0f 91       	pop	r16
    dc60:	08 95       	ret

0000dc62 <_Z17Get_Operator_NamePc>:
    dc62:	0f 93       	push	r16
    dc64:	cf 93       	push	r28
    dc66:	df 93       	push	r29
    dc68:	ec 01       	movw	r28, r24
    dc6a:	6c e9       	ldi	r22, 0x9C	; 156
    dc6c:	73 e2       	ldi	r23, 0x23	; 35
    dc6e:	8c e2       	ldi	r24, 0x2C	; 44
    dc70:	98 e1       	ldi	r25, 0x18	; 24
    dc72:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dc76:	02 e0       	ldi	r16, 0x02	; 2
    dc78:	28 eb       	ldi	r18, 0xB8	; 184
    dc7a:	3b e0       	ldi	r19, 0x0B	; 11
    dc7c:	40 e0       	ldi	r20, 0x00	; 0
    dc7e:	50 e0       	ldi	r21, 0x00	; 0
    dc80:	6e e1       	ldi	r22, 0x1E	; 30
    dc82:	73 e0       	ldi	r23, 0x03	; 3
    dc84:	80 e0       	ldi	r24, 0x00	; 0
    dc86:	90 e0       	ldi	r25, 0x00	; 0
    dc88:	f5 db       	rcall	.-2070   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dc8a:	69 e1       	ldi	r22, 0x19	; 25
    dc8c:	71 e1       	ldi	r23, 0x11	; 17
    dc8e:	ce 01       	movw	r24, r28
    dc90:	df 91       	pop	r29
    dc92:	cf 91       	pop	r28
    dc94:	0f 91       	pop	r16
    dc96:	0c 94 9e e9 	jmp	0x1d33c	; 0x1d33c <strcpy>

0000dc9a <_Z12Gprs_ConnectPc>:
    dc9a:	ef 92       	push	r14
    dc9c:	ff 92       	push	r15
    dc9e:	0f 93       	push	r16
    dca0:	cf 93       	push	r28
    dca2:	df 93       	push	r29
    dca4:	cd b7       	in	r28, 0x3d	; 61
    dca6:	de b7       	in	r29, 0x3e	; 62
    dca8:	c4 56       	subi	r28, 0x64	; 100
    dcaa:	d1 09       	sbc	r29, r1
    dcac:	0f b6       	in	r0, 0x3f	; 63
    dcae:	f8 94       	cli
    dcb0:	de bf       	out	0x3e, r29	; 62
    dcb2:	0f be       	out	0x3f, r0	; 63
    dcb4:	cd bf       	out	0x3d, r28	; 61
    dcb6:	84 e5       	ldi	r24, 0x54	; 84
    dcb8:	9d e0       	ldi	r25, 0x0D	; 13
    dcba:	9f 93       	push	r25
    dcbc:	8f 93       	push	r24
    dcbe:	81 ed       	ldi	r24, 0xD1	; 209
    dcc0:	93 e0       	ldi	r25, 0x03	; 3
    dcc2:	9f 93       	push	r25
    dcc4:	8f 93       	push	r24
    dcc6:	ce 01       	movw	r24, r28
    dcc8:	01 96       	adiw	r24, 0x01	; 1
    dcca:	7c 01       	movw	r14, r24
    dccc:	9f 93       	push	r25
    dcce:	8f 93       	push	r24
    dcd0:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    dcd4:	01 e0       	ldi	r16, 0x01	; 1
    dcd6:	28 ee       	ldi	r18, 0xE8	; 232
    dcd8:	33 e0       	ldi	r19, 0x03	; 3
    dcda:	40 e0       	ldi	r20, 0x00	; 0
    dcdc:	50 e0       	ldi	r21, 0x00	; 0
    dcde:	6e e1       	ldi	r22, 0x1E	; 30
    dce0:	73 e0       	ldi	r23, 0x03	; 3
    dce2:	c7 01       	movw	r24, r14
    dce4:	c7 db       	rcall	.-2162   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dce6:	63 e7       	ldi	r22, 0x73	; 115
    dce8:	73 e2       	ldi	r23, 0x23	; 35
    dcea:	8f e6       	ldi	r24, 0x6F	; 111
    dcec:	96 e1       	ldi	r25, 0x16	; 22
    dcee:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dcf2:	0f 90       	pop	r0
    dcf4:	0f 90       	pop	r0
    dcf6:	0f 90       	pop	r0
    dcf8:	0f 90       	pop	r0
    dcfa:	0f 90       	pop	r0
    dcfc:	0f 90       	pop	r0
    dcfe:	81 e0       	ldi	r24, 0x01	; 1
    dd00:	cc 59       	subi	r28, 0x9C	; 156
    dd02:	df 4f       	sbci	r29, 0xFF	; 255
    dd04:	0f b6       	in	r0, 0x3f	; 63
    dd06:	f8 94       	cli
    dd08:	de bf       	out	0x3e, r29	; 62
    dd0a:	0f be       	out	0x3f, r0	; 63
    dd0c:	cd bf       	out	0x3d, r28	; 61
    dd0e:	df 91       	pop	r29
    dd10:	cf 91       	pop	r28
    dd12:	0f 91       	pop	r16
    dd14:	ff 90       	pop	r15
    dd16:	ef 90       	pop	r14
    dd18:	08 95       	ret

0000dd1a <_Z12MQTT_PublishPhS_>:
    dd1a:	af 92       	push	r10
    dd1c:	bf 92       	push	r11
    dd1e:	cf 92       	push	r12
    dd20:	df 92       	push	r13
    dd22:	ef 92       	push	r14
    dd24:	ff 92       	push	r15
    dd26:	0f 93       	push	r16
    dd28:	1f 93       	push	r17
    dd2a:	cf 93       	push	r28
    dd2c:	df 93       	push	r29
    dd2e:	cd b7       	in	r28, 0x3d	; 61
    dd30:	de b7       	in	r29, 0x3e	; 62
    dd32:	c4 56       	subi	r28, 0x64	; 100
    dd34:	d1 09       	sbc	r29, r1
    dd36:	0f b6       	in	r0, 0x3f	; 63
    dd38:	f8 94       	cli
    dd3a:	de bf       	out	0x3e, r29	; 62
    dd3c:	0f be       	out	0x3f, r0	; 63
    dd3e:	cd bf       	out	0x3d, r28	; 61
    dd40:	5c 01       	movw	r10, r24
    dd42:	6b 01       	movw	r12, r22
    dd44:	14 e6       	ldi	r17, 0x64	; 100
    dd46:	ce 01       	movw	r24, r28
    dd48:	01 96       	adiw	r24, 0x01	; 1
    dd4a:	7c 01       	movw	r14, r24
    dd4c:	fc 01       	movw	r30, r24
    dd4e:	81 2f       	mov	r24, r17
    dd50:	11 92       	st	Z+, r1
    dd52:	8a 95       	dec	r24
    dd54:	e9 f7       	brne	.-6      	; 0xdd50 <_Z12MQTT_PublishPhS_+0x36>
    dd56:	f5 01       	movw	r30, r10
    dd58:	01 90       	ld	r0, Z+
    dd5a:	00 20       	and	r0, r0
    dd5c:	e9 f7       	brne	.-6      	; 0xdd58 <_Z12MQTT_PublishPhS_+0x3e>
    dd5e:	31 97       	sbiw	r30, 0x01	; 1
    dd60:	ea 19       	sub	r30, r10
    dd62:	fb 09       	sbc	r31, r11
    dd64:	ff 93       	push	r31
    dd66:	ef 93       	push	r30
    dd68:	88 ee       	ldi	r24, 0xE8	; 232
    dd6a:	93 e0       	ldi	r25, 0x03	; 3
    dd6c:	9f 93       	push	r25
    dd6e:	8f 93       	push	r24
    dd70:	ff 92       	push	r15
    dd72:	ef 92       	push	r14
    dd74:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    dd78:	02 e0       	ldi	r16, 0x02	; 2
    dd7a:	28 eb       	ldi	r18, 0xB8	; 184
    dd7c:	3b e0       	ldi	r19, 0x0B	; 11
    dd7e:	40 e0       	ldi	r20, 0x00	; 0
    dd80:	50 e0       	ldi	r21, 0x00	; 0
    dd82:	6b ef       	ldi	r22, 0xFB	; 251
    dd84:	73 e0       	ldi	r23, 0x03	; 3
    dd86:	c7 01       	movw	r24, r14
    dd88:	75 db       	rcall	.-2326   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dd8a:	0f 90       	pop	r0
    dd8c:	0f 90       	pop	r0
    dd8e:	0f 90       	pop	r0
    dd90:	0f 90       	pop	r0
    dd92:	0f 90       	pop	r0
    dd94:	0f 90       	pop	r0
    dd96:	81 11       	cpse	r24, r1
    dd98:	21 c0       	rjmp	.+66     	; 0xdddc <_Z12MQTT_PublishPhS_+0xc2>
    dd9a:	69 e6       	ldi	r22, 0x69	; 105
    dd9c:	73 e2       	ldi	r23, 0x23	; 35
    dd9e:	8c e2       	ldi	r24, 0x2C	; 44
    dda0:	98 e1       	ldi	r25, 0x18	; 24
    dda2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    dda6:	01 e0       	ldi	r16, 0x01	; 1
    dda8:	28 ee       	ldi	r18, 0xE8	; 232
    ddaa:	33 e0       	ldi	r19, 0x03	; 3
    ddac:	40 e0       	ldi	r20, 0x00	; 0
    ddae:	50 e0       	ldi	r21, 0x00	; 0
    ddb0:	6e e1       	ldi	r22, 0x1E	; 30
    ddb2:	73 e0       	ldi	r23, 0x03	; 3
    ddb4:	80 e0       	ldi	r24, 0x00	; 0
    ddb6:	90 e0       	ldi	r25, 0x00	; 0
    ddb8:	5d db       	rcall	.-2374   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    ddba:	84 e6       	ldi	r24, 0x64	; 100
    ddbc:	f7 01       	movw	r30, r14
    ddbe:	11 92       	st	Z+, r1
    ddc0:	8a 95       	dec	r24
    ddc2:	e9 f7       	brne	.-6      	; 0xddbe <_Z12MQTT_PublishPhS_+0xa4>
    ddc4:	8a e1       	ldi	r24, 0x1A	; 26
    ddc6:	89 83       	std	Y+1, r24	; 0x01
    ddc8:	28 ec       	ldi	r18, 0xC8	; 200
    ddca:	30 e0       	ldi	r19, 0x00	; 0
    ddcc:	40 e0       	ldi	r20, 0x00	; 0
    ddce:	50 e0       	ldi	r21, 0x00	; 0
    ddd0:	6e e1       	ldi	r22, 0x1E	; 30
    ddd2:	73 e0       	ldi	r23, 0x03	; 3
    ddd4:	c7 01       	movw	r24, r14
    ddd6:	4e db       	rcall	.-2404   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    ddd8:	80 e0       	ldi	r24, 0x00	; 0
    ddda:	3e c0       	rjmp	.+124    	; 0xde58 <_Z12MQTT_PublishPhS_+0x13e>
    dddc:	b5 01       	movw	r22, r10
    ddde:	8c e2       	ldi	r24, 0x2C	; 44
    dde0:	98 e1       	ldi	r25, 0x18	; 24
    dde2:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
    dde6:	f7 01       	movw	r30, r14
    dde8:	11 92       	st	Z+, r1
    ddea:	1a 95       	dec	r17
    ddec:	e9 f7       	brne	.-6      	; 0xdde8 <_Z12MQTT_PublishPhS_+0xce>
    ddee:	f6 01       	movw	r30, r12
    ddf0:	01 90       	ld	r0, Z+
    ddf2:	00 20       	and	r0, r0
    ddf4:	e9 f7       	brne	.-6      	; 0xddf0 <_Z12MQTT_PublishPhS_+0xd6>
    ddf6:	31 97       	sbiw	r30, 0x01	; 1
    ddf8:	ec 19       	sub	r30, r12
    ddfa:	fd 09       	sbc	r31, r13
    ddfc:	ff 93       	push	r31
    ddfe:	ef 93       	push	r30
    de00:	8d ef       	ldi	r24, 0xFD	; 253
    de02:	93 e0       	ldi	r25, 0x03	; 3
    de04:	9f 93       	push	r25
    de06:	8f 93       	push	r24
    de08:	ff 92       	push	r15
    de0a:	ef 92       	push	r14
    de0c:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    de10:	02 e0       	ldi	r16, 0x02	; 2
    de12:	28 eb       	ldi	r18, 0xB8	; 184
    de14:	3b e0       	ldi	r19, 0x0B	; 11
    de16:	40 e0       	ldi	r20, 0x00	; 0
    de18:	50 e0       	ldi	r21, 0x00	; 0
    de1a:	6b ef       	ldi	r22, 0xFB	; 251
    de1c:	73 e0       	ldi	r23, 0x03	; 3
    de1e:	c7 01       	movw	r24, r14
    de20:	29 db       	rcall	.-2478   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    de22:	0f 90       	pop	r0
    de24:	0f 90       	pop	r0
    de26:	0f 90       	pop	r0
    de28:	0f 90       	pop	r0
    de2a:	0f 90       	pop	r0
    de2c:	0f 90       	pop	r0
    de2e:	88 23       	and	r24, r24
    de30:	09 f4       	brne	.+2      	; 0xde34 <_Z12MQTT_PublishPhS_+0x11a>
    de32:	b3 cf       	rjmp	.-154    	; 0xdd9a <_Z12MQTT_PublishPhS_+0x80>
    de34:	b6 01       	movw	r22, r12
    de36:	8c e2       	ldi	r24, 0x2C	; 44
    de38:	98 e1       	ldi	r25, 0x18	; 24
    de3a:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
    de3e:	28 eb       	ldi	r18, 0xB8	; 184
    de40:	3b e0       	ldi	r19, 0x0B	; 11
    de42:	40 e0       	ldi	r20, 0x00	; 0
    de44:	50 e0       	ldi	r21, 0x00	; 0
    de46:	62 e1       	ldi	r22, 0x12	; 18
    de48:	74 e0       	ldi	r23, 0x04	; 4
    de4a:	81 e2       	ldi	r24, 0x21	; 33
    de4c:	94 e0       	ldi	r25, 0x04	; 4
    de4e:	12 db       	rcall	.-2524   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    de50:	88 23       	and	r24, r24
    de52:	09 f4       	brne	.+2      	; 0xde56 <_Z12MQTT_PublishPhS_+0x13c>
    de54:	a2 cf       	rjmp	.-188    	; 0xdd9a <_Z12MQTT_PublishPhS_+0x80>
    de56:	81 e0       	ldi	r24, 0x01	; 1
    de58:	cc 59       	subi	r28, 0x9C	; 156
    de5a:	df 4f       	sbci	r29, 0xFF	; 255
    de5c:	0f b6       	in	r0, 0x3f	; 63
    de5e:	f8 94       	cli
    de60:	de bf       	out	0x3e, r29	; 62
    de62:	0f be       	out	0x3f, r0	; 63
    de64:	cd bf       	out	0x3d, r28	; 61
    de66:	df 91       	pop	r29
    de68:	cf 91       	pop	r28
    de6a:	1f 91       	pop	r17
    de6c:	0f 91       	pop	r16
    de6e:	ff 90       	pop	r15
    de70:	ef 90       	pop	r14
    de72:	df 90       	pop	r13
    de74:	cf 90       	pop	r12
    de76:	bf 90       	pop	r11
    de78:	af 90       	pop	r10
    de7a:	08 95       	ret

0000de7c <_Z17Is_MQTT_Connectedv>:
    de7c:	0f 93       	push	r16
    de7e:	6d e1       	ldi	r22, 0x1D	; 29
    de80:	73 e2       	ldi	r23, 0x23	; 35
    de82:	8c e2       	ldi	r24, 0x2C	; 44
    de84:	98 e1       	ldi	r25, 0x18	; 24
    de86:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    de8a:	01 e0       	ldi	r16, 0x01	; 1
    de8c:	28 eb       	ldi	r18, 0xB8	; 184
    de8e:	3b e0       	ldi	r19, 0x0B	; 11
    de90:	40 e0       	ldi	r20, 0x00	; 0
    de92:	50 e0       	ldi	r21, 0x00	; 0
    de94:	64 e3       	ldi	r22, 0x34	; 52
    de96:	74 e0       	ldi	r23, 0x04	; 4
    de98:	80 e0       	ldi	r24, 0x00	; 0
    de9a:	90 e0       	ldi	r25, 0x00	; 0
    de9c:	eb da       	rcall	.-2602   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    de9e:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    dea2:	88 23       	and	r24, r24
    dea4:	69 f0       	breq	.+26     	; 0xdec0 <_Z17Is_MQTT_Connectedv+0x44>
    dea6:	91 30       	cpi	r25, 0x01	; 1
    dea8:	c1 f4       	brne	.+48     	; 0xdeda <_Z17Is_MQTT_Connectedv+0x5e>
    deaa:	65 e0       	ldi	r22, 0x05	; 5
    deac:	73 e2       	ldi	r23, 0x23	; 35
    deae:	8f e6       	ldi	r24, 0x6F	; 111
    deb0:	96 e1       	ldi	r25, 0x16	; 22
    deb2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    deb6:	8f e6       	ldi	r24, 0x6F	; 111
    deb8:	96 e1       	ldi	r25, 0x16	; 22
    deba:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    debe:	0d c0       	rjmp	.+26     	; 0xdeda <_Z17Is_MQTT_Connectedv+0x5e>
    dec0:	91 30       	cpi	r25, 0x01	; 1
    dec2:	69 f4       	brne	.+26     	; 0xdede <_Z17Is_MQTT_Connectedv+0x62>
    dec4:	6d ee       	ldi	r22, 0xED	; 237
    dec6:	72 e2       	ldi	r23, 0x22	; 34
    dec8:	8f e6       	ldi	r24, 0x6F	; 111
    deca:	96 e1       	ldi	r25, 0x16	; 22
    decc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    ded0:	8f e6       	ldi	r24, 0x6F	; 111
    ded2:	96 e1       	ldi	r25, 0x16	; 22
    ded4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    ded8:	02 c0       	rjmp	.+4      	; 0xdede <_Z17Is_MQTT_Connectedv+0x62>
    deda:	81 e0       	ldi	r24, 0x01	; 1
    dedc:	01 c0       	rjmp	.+2      	; 0xdee0 <_Z17Is_MQTT_Connectedv+0x64>
    dede:	80 e0       	ldi	r24, 0x00	; 0
    dee0:	0f 91       	pop	r16
    dee2:	08 95       	ret

0000dee4 <_Z12MQTT_ConnectPKcS0_S0_>:
    dee4:	af 92       	push	r10
    dee6:	bf 92       	push	r11
    dee8:	cf 92       	push	r12
    deea:	df 92       	push	r13
    deec:	ef 92       	push	r14
    deee:	ff 92       	push	r15
    def0:	0f 93       	push	r16
    def2:	1f 93       	push	r17
    def4:	cf 93       	push	r28
    def6:	df 93       	push	r29
    def8:	cd b7       	in	r28, 0x3d	; 61
    defa:	de b7       	in	r29, 0x3e	; 62
    defc:	c8 57       	subi	r28, 0x78	; 120
    defe:	d1 09       	sbc	r29, r1
    df00:	0f b6       	in	r0, 0x3f	; 63
    df02:	f8 94       	cli
    df04:	de bf       	out	0x3e, r29	; 62
    df06:	0f be       	out	0x3f, r0	; 63
    df08:	cd bf       	out	0x3d, r28	; 61
    df0a:	d6 2e       	mov	r13, r22
    df0c:	c7 2e       	mov	r12, r23
    df0e:	b4 2e       	mov	r11, r20
    df10:	a5 2e       	mov	r10, r21
    df12:	18 e7       	ldi	r17, 0x78	; 120
    df14:	9e 01       	movw	r18, r28
    df16:	2f 5f       	subi	r18, 0xFF	; 255
    df18:	3f 4f       	sbci	r19, 0xFF	; 255
    df1a:	79 01       	movw	r14, r18
    df1c:	f9 01       	movw	r30, r18
    df1e:	21 2f       	mov	r18, r17
    df20:	11 92       	st	Z+, r1
    df22:	2a 95       	dec	r18
    df24:	e9 f7       	brne	.-6      	; 0xdf20 <_Z12MQTT_ConnectPKcS0_S0_+0x3c>
    df26:	6a e4       	ldi	r22, 0x4A	; 74
    df28:	73 e2       	ldi	r23, 0x23	; 35
    df2a:	8c e2       	ldi	r24, 0x2C	; 44
    df2c:	98 e1       	ldi	r25, 0x18	; 24
    df2e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    df32:	02 e0       	ldi	r16, 0x02	; 2
    df34:	28 eb       	ldi	r18, 0xB8	; 184
    df36:	3b e0       	ldi	r19, 0x0B	; 11
    df38:	40 e0       	ldi	r20, 0x00	; 0
    df3a:	50 e0       	ldi	r21, 0x00	; 0
    df3c:	6a e4       	ldi	r22, 0x4A	; 74
    df3e:	74 e0       	ldi	r23, 0x04	; 4
    df40:	80 e0       	ldi	r24, 0x00	; 0
    df42:	90 e0       	ldi	r25, 0x00	; 0
    df44:	97 da       	rcall	.-2770   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    df46:	6c e3       	ldi	r22, 0x3C	; 60
    df48:	73 e2       	ldi	r23, 0x23	; 35
    df4a:	8c e2       	ldi	r24, 0x2C	; 44
    df4c:	98 e1       	ldi	r25, 0x18	; 24
    df4e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    df52:	28 eb       	ldi	r18, 0xB8	; 184
    df54:	3b e0       	ldi	r19, 0x0B	; 11
    df56:	40 e0       	ldi	r20, 0x00	; 0
    df58:	50 e0       	ldi	r21, 0x00	; 0
    df5a:	6e e1       	ldi	r22, 0x1E	; 30
    df5c:	73 e0       	ldi	r23, 0x03	; 3
    df5e:	80 e0       	ldi	r24, 0x00	; 0
    df60:	90 e0       	ldi	r25, 0x00	; 0
    df62:	88 da       	rcall	.-2800   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    df64:	6e e2       	ldi	r22, 0x2E	; 46
    df66:	73 e2       	ldi	r23, 0x23	; 35
    df68:	8c e2       	ldi	r24, 0x2C	; 44
    df6a:	98 e1       	ldi	r25, 0x18	; 24
    df6c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    df70:	28 eb       	ldi	r18, 0xB8	; 184
    df72:	3b e0       	ldi	r19, 0x0B	; 11
    df74:	46 e5       	ldi	r20, 0x56	; 86
    df76:	54 e0       	ldi	r21, 0x04	; 4
    df78:	66 e6       	ldi	r22, 0x66	; 102
    df7a:	74 e0       	ldi	r23, 0x04	; 4
    df7c:	80 e0       	ldi	r24, 0x00	; 0
    df7e:	90 e0       	ldi	r25, 0x00	; 0
    df80:	79 da       	rcall	.-2830   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    df82:	85 e7       	ldi	r24, 0x75	; 117
    df84:	94 e0       	ldi	r25, 0x04	; 4
    df86:	9f 93       	push	r25
    df88:	8f 93       	push	r24
    df8a:	8c e7       	ldi	r24, 0x7C	; 124
    df8c:	94 e0       	ldi	r25, 0x04	; 4
    df8e:	9f 93       	push	r25
    df90:	8f 93       	push	r24
    df92:	ff 92       	push	r15
    df94:	ef 92       	push	r14
    df96:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    df9a:	01 e0       	ldi	r16, 0x01	; 1
    df9c:	28 eb       	ldi	r18, 0xB8	; 184
    df9e:	3b e0       	ldi	r19, 0x0B	; 11
    dfa0:	40 e0       	ldi	r20, 0x00	; 0
    dfa2:	50 e0       	ldi	r21, 0x00	; 0
    dfa4:	6e e1       	ldi	r22, 0x1E	; 30
    dfa6:	73 e0       	ldi	r23, 0x03	; 3
    dfa8:	c7 01       	movw	r24, r14
    dfaa:	64 da       	rcall	.-2872   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dfac:	f7 01       	movw	r30, r14
    dfae:	11 92       	st	Z+, r1
    dfb0:	1a 95       	dec	r17
    dfb2:	e9 f7       	brne	.-6      	; 0xdfae <_Z12MQTT_ConnectPKcS0_S0_+0xca>
    dfb4:	af 92       	push	r10
    dfb6:	bf 92       	push	r11
    dfb8:	cf 92       	push	r12
    dfba:	df 92       	push	r13
    dfbc:	87 e0       	ldi	r24, 0x07	; 7
    dfbe:	8f 93       	push	r24
    dfc0:	8b e5       	ldi	r24, 0x5B	; 91
    dfc2:	8f 93       	push	r24
    dfc4:	82 e9       	ldi	r24, 0x92	; 146
    dfc6:	94 e0       	ldi	r25, 0x04	; 4
    dfc8:	9f 93       	push	r25
    dfca:	8f 93       	push	r24
    dfcc:	80 ea       	ldi	r24, 0xA0	; 160
    dfce:	94 e0       	ldi	r25, 0x04	; 4
    dfd0:	9f 93       	push	r25
    dfd2:	8f 93       	push	r24
    dfd4:	ff 92       	push	r15
    dfd6:	ef 92       	push	r14
    dfd8:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    dfdc:	28 e8       	ldi	r18, 0x88	; 136
    dfde:	33 e1       	ldi	r19, 0x13	; 19
    dfe0:	40 e0       	ldi	r20, 0x00	; 0
    dfe2:	50 e0       	ldi	r21, 0x00	; 0
    dfe4:	6e e1       	ldi	r22, 0x1E	; 30
    dfe6:	73 e0       	ldi	r23, 0x03	; 3
    dfe8:	c7 01       	movw	r24, r14
    dfea:	44 da       	rcall	.-2936   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    dfec:	68 eb       	ldi	r22, 0xB8	; 184
    dfee:	7b e0       	ldi	r23, 0x0B	; 11
    dff0:	80 e0       	ldi	r24, 0x00	; 0
    dff2:	90 e0       	ldi	r25, 0x00	; 0
    dff4:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    dff8:	41 df       	rcall	.-382    	; 0xde7c <_Z17Is_MQTT_Connectedv>
    dffa:	0f b6       	in	r0, 0x3f	; 63
    dffc:	f8 94       	cli
    dffe:	de bf       	out	0x3e, r29	; 62
    e000:	0f be       	out	0x3f, r0	; 63
    e002:	cd bf       	out	0x3d, r28	; 61
    e004:	c8 58       	subi	r28, 0x88	; 136
    e006:	df 4f       	sbci	r29, 0xFF	; 255
    e008:	0f b6       	in	r0, 0x3f	; 63
    e00a:	f8 94       	cli
    e00c:	de bf       	out	0x3e, r29	; 62
    e00e:	0f be       	out	0x3f, r0	; 63
    e010:	cd bf       	out	0x3d, r28	; 61
    e012:	df 91       	pop	r29
    e014:	cf 91       	pop	r28
    e016:	1f 91       	pop	r17
    e018:	0f 91       	pop	r16
    e01a:	ff 90       	pop	r15
    e01c:	ef 90       	pop	r14
    e01e:	df 90       	pop	r13
    e020:	cf 90       	pop	r12
    e022:	bf 90       	pop	r11
    e024:	af 90       	pop	r10
    e026:	08 95       	ret

0000e028 <_Z9MQTT_Loopv>:
    e028:	0f 93       	push	r16
    e02a:	83 e0       	ldi	r24, 0x03	; 3
    e02c:	0e 94 6e 7c 	call	0xf8dc	; 0xf8dc <_Z9Check_Simc>
    e030:	0e 94 08 5f 	call	0xbe10	; 0xbe10 <_Z16Check_GSM_Signalv>
    e034:	80 91 14 16 	lds	r24, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
    e038:	81 30       	cpi	r24, 0x01	; 1
    e03a:	09 f4       	brne	.+2      	; 0xe03e <_Z9MQTT_Loopv+0x16>
    e03c:	46 c0       	rjmp	.+140    	; 0xe0ca <_Z9MQTT_Loopv+0xa2>
    e03e:	63 ee       	ldi	r22, 0xE3	; 227
    e040:	72 e2       	ldi	r23, 0x22	; 34
    e042:	8c e2       	ldi	r24, 0x2C	; 44
    e044:	98 e1       	ldi	r25, 0x18	; 24
    e046:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e04a:	02 e0       	ldi	r16, 0x02	; 2
    e04c:	28 eb       	ldi	r18, 0xB8	; 184
    e04e:	3b e0       	ldi	r19, 0x0B	; 11
    e050:	49 eb       	ldi	r20, 0xB9	; 185
    e052:	53 e0       	ldi	r21, 0x03	; 3
    e054:	65 ec       	ldi	r22, 0xC5	; 197
    e056:	73 e0       	ldi	r23, 0x03	; 3
    e058:	80 e0       	ldi	r24, 0x00	; 0
    e05a:	90 e0       	ldi	r25, 0x00	; 0
    e05c:	0b da       	rcall	.-3050   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e05e:	88 23       	and	r24, r24
    e060:	21 f0       	breq	.+8      	; 0xe06a <_Z9MQTT_Loopv+0x42>
    e062:	0c df       	rcall	.-488    	; 0xde7c <_Z17Is_MQTT_Connectedv>
    e064:	81 11       	cpse	r24, r1
    e066:	29 c0       	rjmp	.+82     	; 0xe0ba <_Z9MQTT_Loopv+0x92>
    e068:	30 c0       	rjmp	.+96     	; 0xe0ca <_Z9MQTT_Loopv+0xa2>
    e06a:	68 ed       	ldi	r22, 0xD8	; 216
    e06c:	72 e2       	ldi	r23, 0x22	; 34
    e06e:	8c e2       	ldi	r24, 0x2C	; 44
    e070:	98 e1       	ldi	r25, 0x18	; 24
    e072:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e076:	02 e0       	ldi	r16, 0x02	; 2
    e078:	28 eb       	ldi	r18, 0xB8	; 184
    e07a:	3b e0       	ldi	r19, 0x0B	; 11
    e07c:	40 e0       	ldi	r20, 0x00	; 0
    e07e:	50 e0       	ldi	r21, 0x00	; 0
    e080:	6e e1       	ldi	r22, 0x1E	; 30
    e082:	73 e0       	ldi	r23, 0x03	; 3
    e084:	80 e0       	ldi	r24, 0x00	; 0
    e086:	90 e0       	ldi	r25, 0x00	; 0
    e088:	f5 d9       	rcall	.-3094   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e08a:	60 ed       	ldi	r22, 0xD0	; 208
    e08c:	77 e0       	ldi	r23, 0x07	; 7
    e08e:	80 e0       	ldi	r24, 0x00	; 0
    e090:	90 e0       	ldi	r25, 0x00	; 0
    e092:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
    e096:	6e ec       	ldi	r22, 0xCE	; 206
    e098:	72 e2       	ldi	r23, 0x22	; 34
    e09a:	8c e2       	ldi	r24, 0x2C	; 44
    e09c:	98 e1       	ldi	r25, 0x18	; 24
    e09e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e0a2:	28 eb       	ldi	r18, 0xB8	; 184
    e0a4:	3b e0       	ldi	r19, 0x0B	; 11
    e0a6:	49 eb       	ldi	r20, 0xB9	; 185
    e0a8:	53 e0       	ldi	r21, 0x03	; 3
    e0aa:	65 ec       	ldi	r22, 0xC5	; 197
    e0ac:	73 e0       	ldi	r23, 0x03	; 3
    e0ae:	80 e0       	ldi	r24, 0x00	; 0
    e0b0:	90 e0       	ldi	r25, 0x00	; 0
    e0b2:	e0 d9       	rcall	.-3136   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e0b4:	81 11       	cpse	r24, r1
    e0b6:	d5 cf       	rjmp	.-86     	; 0xe062 <_Z9MQTT_Loopv+0x3a>
    e0b8:	08 c0       	rjmp	.+16     	; 0xe0ca <_Z9MQTT_Loopv+0xa2>
    e0ba:	80 91 d7 15 	lds	r24, 0x15D7	; 0x8015d7 <_sRuble_Parameters+0x72>
    e0be:	81 30       	cpi	r24, 0x01	; 1
    e0c0:	21 f4       	brne	.+8      	; 0xe0ca <_Z9MQTT_Loopv+0xa2>
    e0c2:	90 91 ab 15 	lds	r25, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    e0c6:	96 34       	cpi	r25, 0x46	; 70
    e0c8:	09 f4       	brne	.+2      	; 0xe0cc <_Z9MQTT_Loopv+0xa4>
    e0ca:	80 e0       	ldi	r24, 0x00	; 0
    e0cc:	0f 91       	pop	r16
    e0ce:	08 95       	ret

0000e0d0 <_Z14MQTT_SUBSCRIBEPc>:
	return 0;
	
}

bool MQTT_SUBSCRIBE(char topic[])
{
    e0d0:	cf 92       	push	r12
    e0d2:	df 92       	push	r13
    e0d4:	ef 92       	push	r14
    e0d6:	ff 92       	push	r15
    e0d8:	0f 93       	push	r16
    e0da:	cf 93       	push	r28
    e0dc:	df 93       	push	r29
    e0de:	cd b7       	in	r28, 0x3d	; 61
    e0e0:	de b7       	in	r29, 0x3e	; 62
    e0e2:	c4 56       	subi	r28, 0x64	; 100
    e0e4:	d1 09       	sbc	r29, r1
    e0e6:	0f b6       	in	r0, 0x3f	; 63
    e0e8:	f8 94       	cli
    e0ea:	de bf       	out	0x3e, r29	; 62
    e0ec:	0f be       	out	0x3f, r0	; 63
    e0ee:	cd bf       	out	0x3d, r28	; 61
    e0f0:	7c 01       	movw	r14, r24
	char temp_data[100];
	memset(temp_data,0,sizeof(temp_data));
    e0f2:	ce 01       	movw	r24, r28
    e0f4:	01 96       	adiw	r24, 0x01	; 1
    e0f6:	6c 01       	movw	r12, r24
    e0f8:	84 e6       	ldi	r24, 0x64	; 100
    e0fa:	f6 01       	movw	r30, r12
    e0fc:	11 92       	st	Z+, r1
    e0fe:	8a 95       	dec	r24
    e100:	e9 f7       	brne	.-6      	; 0xe0fc <_Z14MQTT_SUBSCRIBEPc+0x2c>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    e102:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e106:	81 30       	cpi	r24, 0x01	; 1
    e108:	69 f4       	brne	.+26     	; 0xe124 <_Z14MQTT_SUBSCRIBEPc+0x54>
	{
		_kSERIAL_MON_WRITE(topic,strlen(topic));
    e10a:	f7 01       	movw	r30, r14
    e10c:	01 90       	ld	r0, Z+
    e10e:	00 20       	and	r0, r0
    e110:	e9 f7       	brne	.-6      	; 0xe10c <_Z14MQTT_SUBSCRIBEPc+0x3c>
    e112:	31 97       	sbiw	r30, 0x01	; 1
    e114:	af 01       	movw	r20, r30
    e116:	4e 19       	sub	r20, r14
    e118:	5f 09       	sbc	r21, r15
    e11a:	b7 01       	movw	r22, r14
    e11c:	8f e6       	ldi	r24, 0x6F	; 111
    e11e:	96 e1       	ldi	r25, 0x16	; 22
    e120:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
	}
	
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
    e124:	f7 01       	movw	r30, r14
    e126:	01 90       	ld	r0, Z+
    e128:	00 20       	and	r0, r0
    e12a:	e9 f7       	brne	.-6      	; 0xe126 <_Z14MQTT_SUBSCRIBEPc+0x56>
    e12c:	31 97       	sbiw	r30, 0x01	; 1
    e12e:	ee 19       	sub	r30, r14
    e130:	ff 09       	sbc	r31, r15
    e132:	ff 93       	push	r31
    e134:	ef 93       	push	r30
    e136:	8f ec       	ldi	r24, 0xCF	; 207
    e138:	94 e0       	ldi	r25, 0x04	; 4
    e13a:	9f 93       	push	r25
    e13c:	8f 93       	push	r24
    e13e:	df 92       	push	r13
    e140:	cf 92       	push	r12
    e142:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
    e146:	02 e0       	ldi	r16, 0x02	; 2
    e148:	28 eb       	ldi	r18, 0xB8	; 184
    e14a:	3b e0       	ldi	r19, 0x0B	; 11
    e14c:	40 e0       	ldi	r20, 0x00	; 0
    e14e:	50 e0       	ldi	r21, 0x00	; 0
    e150:	6b ef       	ldi	r22, 0xFB	; 251
    e152:	73 e0       	ldi	r23, 0x03	; 3
    e154:	c6 01       	movw	r24, r12
    e156:	8e d9       	rcall	.-3300   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e158:	0f 90       	pop	r0
    e15a:	0f 90       	pop	r0
    e15c:	0f 90       	pop	r0
    e15e:	0f 90       	pop	r0
    e160:	0f 90       	pop	r0
    e162:	0f 90       	pop	r0
    e164:	81 11       	cpse	r24, r1
    e166:	02 c0       	rjmp	.+4      	; 0xe16c <_Z14MQTT_SUBSCRIBEPc+0x9c>
				}
				return 1;
			}
		}
	}
	return 0;
    e168:	80 e0       	ldi	r24, 0x00	; 0
    e16a:	30 c0       	rjmp	.+96     	; 0xe1cc <_Z14MQTT_SUBSCRIBEPc+0xfc>
	
	sprintf(temp_data,"AT+CMQTTSUBTOPIC=0,%d,1",strlen(topic));
	
	if(_kSEND_AT_COMMAND(temp_data,">",NULL,3000,2))
	{
		_kSERIAL_AT.println(topic);
    e16c:	b7 01       	movw	r22, r14
    e16e:	8c e2       	ldi	r24, 0x2C	; 44
    e170:	98 e1       	ldi	r25, 0x18	; 24
    e172:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
		if(_kSEND_AT_COMMAND("AT+CMQTTSUB=0,10,1,1",">",NULL,3000,2))
    e176:	02 e0       	ldi	r16, 0x02	; 2
    e178:	28 eb       	ldi	r18, 0xB8	; 184
    e17a:	3b e0       	ldi	r19, 0x0B	; 11
    e17c:	40 e0       	ldi	r20, 0x00	; 0
    e17e:	50 e0       	ldi	r21, 0x00	; 0
    e180:	6b ef       	ldi	r22, 0xFB	; 251
    e182:	73 e0       	ldi	r23, 0x03	; 3
    e184:	87 ee       	ldi	r24, 0xE7	; 231
    e186:	94 e0       	ldi	r25, 0x04	; 4
    e188:	75 d9       	rcall	.-3350   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e18a:	88 23       	and	r24, r24
    e18c:	69 f3       	breq	.-38     	; 0xe168 <_Z14MQTT_SUBSCRIBEPc+0x98>
		{
			_kSERIAL_AT.println(topic);
    e18e:	b7 01       	movw	r22, r14
    e190:	8c e2       	ldi	r24, 0x2C	; 44
    e192:	98 e1       	ldi	r25, 0x18	; 24
    e194:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>
			if((_kSEND_AT_COMMAND(NULL,"+CMQTTSUB: 0,0",NULL,5000,2)))
    e198:	28 e8       	ldi	r18, 0x88	; 136
    e19a:	33 e1       	ldi	r19, 0x13	; 19
    e19c:	40 e0       	ldi	r20, 0x00	; 0
    e19e:	50 e0       	ldi	r21, 0x00	; 0
    e1a0:	6c ef       	ldi	r22, 0xFC	; 252
    e1a2:	74 e0       	ldi	r23, 0x04	; 4
    e1a4:	80 e0       	ldi	r24, 0x00	; 0
    e1a6:	90 e0       	ldi	r25, 0x00	; 0
    e1a8:	65 d9       	rcall	.-3382   	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    e1aa:	88 23       	and	r24, r24
    e1ac:	e9 f2       	breq	.-70     	; 0xe168 <_Z14MQTT_SUBSCRIBEPc+0x98>
			{
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e1ae:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e1b2:	81 30       	cpi	r24, 0x01	; 1
    e1b4:	51 f4       	brne	.+20     	; 0xe1ca <_Z14MQTT_SUBSCRIBEPc+0xfa>
				{
					_kSERAIL_MON_WRITE("SUB SUCCESS");
    e1b6:	6d e5       	ldi	r22, 0x5D	; 93
    e1b8:	73 e2       	ldi	r23, 0x23	; 35
    e1ba:	8f e6       	ldi	r24, 0x6F	; 111
    e1bc:	96 e1       	ldi	r25, 0x16	; 22
    e1be:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e1c2:	8f e6       	ldi	r24, 0x6F	; 111
    e1c4:	96 e1       	ldi	r25, 0x16	; 22
    e1c6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				}
				return 1;
    e1ca:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	return 0;
}
    e1cc:	cc 59       	subi	r28, 0x9C	; 156
    e1ce:	df 4f       	sbci	r29, 0xFF	; 255
    e1d0:	0f b6       	in	r0, 0x3f	; 63
    e1d2:	f8 94       	cli
    e1d4:	de bf       	out	0x3e, r29	; 62
    e1d6:	0f be       	out	0x3f, r0	; 63
    e1d8:	cd bf       	out	0x3d, r28	; 61
    e1da:	df 91       	pop	r29
    e1dc:	cf 91       	pop	r28
    e1de:	0f 91       	pop	r16
    e1e0:	ff 90       	pop	r15
    e1e2:	ef 90       	pop	r14
    e1e4:	df 90       	pop	r13
    e1e6:	cf 90       	pop	r12
    e1e8:	08 95       	ret

0000e1ea <_Z21Subscribed_data_checkv>:
		return 0;
	}
}

bool Subscribed_data_check(void)
{
    e1ea:	ef 92       	push	r14
    e1ec:	ff 92       	push	r15
    e1ee:	0f 93       	push	r16
    e1f0:	1f 93       	push	r17
    e1f2:	cf 93       	push	r28
    e1f4:	df 93       	push	r29
    e1f6:	00 d0       	rcall	.+0      	; 0xe1f8 <_Z21Subscribed_data_checkv+0xe>
    e1f8:	cd b7       	in	r28, 0x3d	; 61
    e1fa:	de b7       	in	r29, 0x3e	; 62
	static int counter,data_available,len;
	memset((unsigned char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    e1fc:	84 ed       	ldi	r24, 0xD4	; 212
    e1fe:	93 e0       	ldi	r25, 0x03	; 3
    e200:	e7 e8       	ldi	r30, 0x87	; 135
    e202:	f1 e1       	ldi	r31, 0x11	; 17
    e204:	df 01       	movw	r26, r30
    e206:	9c 01       	movw	r18, r24
    e208:	1d 92       	st	X+, r1
    e20a:	21 50       	subi	r18, 0x01	; 1
    e20c:	30 40       	sbci	r19, 0x00	; 0
    e20e:	e1 f7       	brne	.-8      	; 0xe208 <_Z21Subscribed_data_checkv+0x1e>
	counter = 0;
    e210:	10 92 2a 0c 	sts	0x0C2A, r1	; 0x800c2a <_ZZ21Subscribed_data_checkvE7counter+0x1>
    e214:	10 92 29 0c 	sts	0x0C29, r1	; 0x800c29 <_ZZ21Subscribed_data_checkvE7counter>
	data_available = 0;
    e218:	10 92 28 0c 	sts	0x0C28, r1	; 0x800c28 <_ZZ21Subscribed_data_checkvE14data_available+0x1>
    e21c:	10 92 27 0c 	sts	0x0C27, r1	; 0x800c27 <_ZZ21Subscribed_data_checkvE14data_available>
	unsigned long previous;
	int  index = 0;
	int  inByte = 0;
	char WS[3];
	
	inByte = _kSERIAL_AT.readBytes(WS, 1);
    e220:	41 e0       	ldi	r20, 0x01	; 1
    e222:	50 e0       	ldi	r21, 0x00	; 0
    e224:	be 01       	movw	r22, r28
    e226:	6f 5f       	subi	r22, 0xFF	; 255
    e228:	7f 4f       	sbci	r23, 0xFF	; 255
    e22a:	8c e2       	ldi	r24, 0x2C	; 44
    e22c:	98 e1       	ldi	r25, 0x18	; 24
    e22e:	0e 94 d1 d2 	call	0x1a5a2	; 0x1a5a2 <_ZN6Stream9readBytesEPcj>
    e232:	7c 01       	movw	r14, r24
	_gPub_Buff[counter++] = WS[0];
    e234:	80 91 29 0c 	lds	r24, 0x0C29	; 0x800c29 <_ZZ21Subscribed_data_checkvE7counter>
    e238:	90 91 2a 0c 	lds	r25, 0x0C2A	; 0x800c2a <_ZZ21Subscribed_data_checkvE7counter+0x1>
    e23c:	9c 01       	movw	r18, r24
    e23e:	2f 5f       	subi	r18, 0xFF	; 255
    e240:	3f 4f       	sbci	r19, 0xFF	; 255
    e242:	30 93 2a 0c 	sts	0x0C2A, r19	; 0x800c2a <_ZZ21Subscribed_data_checkvE7counter+0x1>
    e246:	20 93 29 0c 	sts	0x0C29, r18	; 0x800c29 <_ZZ21Subscribed_data_checkvE7counter>
    e24a:	29 81       	ldd	r18, Y+1	; 0x01
    e24c:	fc 01       	movw	r30, r24
    e24e:	e9 57       	subi	r30, 0x79	; 121
    e250:	fe 4e       	sbci	r31, 0xEE	; 238
    e252:	20 83       	st	Z, r18
	previous = millis();
    e254:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
	static int counter,data_available,len;
	memset((unsigned char *)_gPub_Buff,0,sizeof(_gPub_Buff));
	counter = 0;
	data_available = 0;
	unsigned long previous;
	int  index = 0;
    e258:	00 e0       	ldi	r16, 0x00	; 0
    e25a:	10 e0       	ldi	r17, 0x00	; 0
	inByte = _kSERIAL_AT.readBytes(WS, 1);
	_gPub_Buff[counter++] = WS[0];
	previous = millis();

	/*----------( wait of further characters until a pause of 30 ms occur )----------*/
	while (inByte > 0)
    e25c:	1e 14       	cp	r1, r14
    e25e:	1f 04       	cpc	r1, r15
    e260:	3c f5       	brge	.+78     	; 0xe2b0 <_Z21Subscribed_data_checkv+0xc6>
	{
		if(inByte)
		{
			if(index < sizeof(_gPub_Buff)-1)
    e262:	03 3d       	cpi	r16, 0xD3	; 211
    e264:	33 e0       	ldi	r19, 0x03	; 3
    e266:	13 07       	cpc	r17, r19
    e268:	c4 f4       	brge	.+48     	; 0xe29a <_Z21Subscribed_data_checkv+0xb0>
			{
				data_available = 1;
    e26a:	81 e0       	ldi	r24, 0x01	; 1
    e26c:	90 e0       	ldi	r25, 0x00	; 0
    e26e:	90 93 28 0c 	sts	0x0C28, r25	; 0x800c28 <_ZZ21Subscribed_data_checkvE14data_available+0x1>
    e272:	80 93 27 0c 	sts	0x0C27, r24	; 0x800c27 <_ZZ21Subscribed_data_checkvE14data_available>
				inByte = _kSERIAL_AT.readBytes(WS, 1);
    e276:	41 e0       	ldi	r20, 0x01	; 1
    e278:	50 e0       	ldi	r21, 0x00	; 0
    e27a:	be 01       	movw	r22, r28
    e27c:	6f 5f       	subi	r22, 0xFF	; 255
    e27e:	7f 4f       	sbci	r23, 0xFF	; 255
    e280:	8c e2       	ldi	r24, 0x2C	; 44
    e282:	98 e1       	ldi	r25, 0x18	; 24
    e284:	0e 94 d1 d2 	call	0x1a5a2	; 0x1a5a2 <_ZN6Stream9readBytesEPcj>
    e288:	7c 01       	movw	r14, r24
				_gPub_Buff[index++] = WS[0];
    e28a:	89 81       	ldd	r24, Y+1	; 0x01
    e28c:	f8 01       	movw	r30, r16
    e28e:	e9 57       	subi	r30, 0x79	; 121
    e290:	fe 4e       	sbci	r31, 0xEE	; 238
    e292:	80 83       	st	Z, r24
    e294:	0f 5f       	subi	r16, 0xFF	; 255
    e296:	1f 4f       	sbci	r17, 0xFF	; 255
    e298:	e1 cf       	rjmp	.-62     	; 0xe25c <_Z21Subscribed_data_checkv+0x72>
			}
			else
			{
				inByte = _kSERIAL_AT.readBytes(WS, 1);
    e29a:	41 e0       	ldi	r20, 0x01	; 1
    e29c:	50 e0       	ldi	r21, 0x00	; 0
    e29e:	be 01       	movw	r22, r28
    e2a0:	6f 5f       	subi	r22, 0xFF	; 255
    e2a2:	7f 4f       	sbci	r23, 0xFF	; 255
    e2a4:	8c e2       	ldi	r24, 0x2C	; 44
    e2a6:	98 e1       	ldi	r25, 0x18	; 24
    e2a8:	0e 94 d1 d2 	call	0x1a5a2	; 0x1a5a2 <_ZN6Stream9readBytesEPcj>
    e2ac:	7c 01       	movw	r14, r24
    e2ae:	d6 cf       	rjmp	.-84     	; 0xe25c <_Z21Subscribed_data_checkv+0x72>
			}
		}
	}
	if(data_available)
    e2b0:	80 91 27 0c 	lds	r24, 0x0C27	; 0x800c27 <_ZZ21Subscribed_data_checkvE14data_available>
    e2b4:	90 91 28 0c 	lds	r25, 0x0C28	; 0x800c28 <_ZZ21Subscribed_data_checkvE14data_available+0x1>
    e2b8:	89 2b       	or	r24, r25
    e2ba:	11 f4       	brne	.+4      	; 0xe2c0 <_Z21Subscribed_data_checkv+0xd6>
			}
			return 1;
		}
	}
	
	return 0;
    e2bc:	80 e0       	ldi	r24, 0x00	; 0
    e2be:	32 c0       	rjmp	.+100    	; 0xe324 <_Z21Subscribed_data_checkv+0x13a>
			}
		}
	}
	if(data_available)
	{
		Clear_Serial_Data();
    e2c0:	0e 94 ed 7c 	call	0xf9da	; 0xf9da <_Z17Clear_Serial_Datav>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    e2c4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e2c8:	81 30       	cpi	r24, 0x01	; 1
    e2ca:	a9 f4       	brne	.+42     	; 0xe2f6 <_Z21Subscribed_data_checkv+0x10c>
		{
			_kSERAIL_MON_WRITE("enter 1");
    e2cc:	66 ec       	ldi	r22, 0xC6	; 198
    e2ce:	72 e2       	ldi	r23, 0x22	; 34
    e2d0:	8f e6       	ldi	r24, 0x6F	; 111
    e2d2:	96 e1       	ldi	r25, 0x16	; 22
    e2d4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_WRITE((const char*)_gPub_Buff,strlen((const char*)_gPub_Buff));
    e2d8:	e7 e8       	ldi	r30, 0x87	; 135
    e2da:	f1 e1       	ldi	r31, 0x11	; 17
    e2dc:	01 90       	ld	r0, Z+
    e2de:	00 20       	and	r0, r0
    e2e0:	e9 f7       	brne	.-6      	; 0xe2dc <_Z21Subscribed_data_checkv+0xf2>
    e2e2:	31 97       	sbiw	r30, 0x01	; 1
    e2e4:	af 01       	movw	r20, r30
    e2e6:	47 58       	subi	r20, 0x87	; 135
    e2e8:	51 41       	sbci	r21, 0x11	; 17
    e2ea:	67 e8       	ldi	r22, 0x87	; 135
    e2ec:	71 e1       	ldi	r23, 0x11	; 17
    e2ee:	8f e6       	ldi	r24, 0x6F	; 111
    e2f0:	96 e1       	ldi	r25, 0x16	; 22
    e2f2:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
		}
		if(strstr((const char *)_gPub_Buff,"+CMQTTRX"))
    e2f6:	6b e0       	ldi	r22, 0x0B	; 11
    e2f8:	75 e0       	ldi	r23, 0x05	; 5
    e2fa:	87 e8       	ldi	r24, 0x87	; 135
    e2fc:	91 e1       	ldi	r25, 0x11	; 17
    e2fe:	0e 94 a5 e9 	call	0x1d34a	; 0x1d34a <strstr>
    e302:	89 2b       	or	r24, r25
    e304:	d9 f2       	breq	.-74     	; 0xe2bc <_Z21Subscribed_data_checkv+0xd2>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    e306:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e30a:	81 30       	cpi	r24, 0x01	; 1
    e30c:	51 f4       	brne	.+20     	; 0xe322 <_Z21Subscribed_data_checkv+0x138>
			{
				_kSERAIL_MON_WRITE("TOPIC MATCH");
    e30e:	6a eb       	ldi	r22, 0xBA	; 186
    e310:	72 e2       	ldi	r23, 0x22	; 34
    e312:	8f e6       	ldi	r24, 0x6F	; 111
    e314:	96 e1       	ldi	r25, 0x16	; 22
    e316:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    e31a:	8f e6       	ldi	r24, 0x6F	; 111
    e31c:	96 e1       	ldi	r25, 0x16	; 22
    e31e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			return 1;
    e322:	81 e0       	ldi	r24, 0x01	; 1
		}
	}
	
	return 0;
}
    e324:	0f 90       	pop	r0
    e326:	0f 90       	pop	r0
    e328:	0f 90       	pop	r0
    e32a:	df 91       	pop	r29
    e32c:	cf 91       	pop	r28
    e32e:	1f 91       	pop	r17
    e330:	0f 91       	pop	r16
    e332:	ff 90       	pop	r15
    e334:	ef 90       	pop	r14
    e336:	08 95       	ret

0000e338 <_ZNK5EERefdeEv>:
	}
}


void Kill_Switch_Through_SMS(void)
{
    e338:	fc 01       	movw	r30, r24
    e33a:	80 81       	ld	r24, Z
    e33c:	91 81       	ldd	r25, Z+1	; 0x01
    e33e:	0c 94 9a ec 	jmp	0x1d934	; 0x1d934 <eeprom_read_byte>

0000e342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>:
    e342:	0f 93       	push	r16
    e344:	1f 93       	push	r17
    e346:	cf 93       	push	r28
    e348:	df 93       	push	r29
    e34a:	1f 92       	push	r1
    e34c:	1f 92       	push	r1
    e34e:	cd b7       	in	r28, 0x3d	; 61
    e350:	de b7       	in	r29, 0x3e	; 62
    e352:	8b 01       	movw	r16, r22
    e354:	9a 83       	std	Y+2, r25	; 0x02
    e356:	89 83       	std	Y+1, r24	; 0x01
    e358:	ce 01       	movw	r24, r28
    e35a:	01 96       	adiw	r24, 0x01	; 1
    e35c:	ed df       	rcall	.-38     	; 0xe338 <_ZNK5EERefdeEv>
    e35e:	f8 01       	movw	r30, r16
    e360:	80 83       	st	Z, r24
    e362:	c8 01       	movw	r24, r16
    e364:	0f 90       	pop	r0
    e366:	0f 90       	pop	r0
    e368:	df 91       	pop	r29
    e36a:	cf 91       	pop	r28
    e36c:	1f 91       	pop	r17
    e36e:	0f 91       	pop	r16
    e370:	08 95       	ret

0000e372 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>:
    e372:	af 92       	push	r10
    e374:	bf 92       	push	r11
    e376:	cf 92       	push	r12
    e378:	df 92       	push	r13
    e37a:	ef 92       	push	r14
    e37c:	ff 92       	push	r15
    e37e:	0f 93       	push	r16
    e380:	1f 93       	push	r17
    e382:	cf 93       	push	r28
    e384:	df 93       	push	r29
    e386:	1f 92       	push	r1
    e388:	1f 92       	push	r1
    e38a:	cd b7       	in	r28, 0x3d	; 61
    e38c:	de b7       	in	r29, 0x3e	; 62
    e38e:	8b 01       	movw	r16, r22
    e390:	6b 01       	movw	r12, r22
    e392:	24 e0       	ldi	r18, 0x04	; 4
    e394:	c2 0e       	add	r12, r18
    e396:	d1 1c       	adc	r13, r1
    e398:	7b 01       	movw	r14, r22
    e39a:	5c 01       	movw	r10, r24
    e39c:	a6 1a       	sub	r10, r22
    e39e:	b7 0a       	sbc	r11, r23
    e3a0:	c5 01       	movw	r24, r10
    e3a2:	8e 0d       	add	r24, r14
    e3a4:	9f 1d       	adc	r25, r15
    e3a6:	9a 83       	std	Y+2, r25	; 0x02
    e3a8:	89 83       	std	Y+1, r24	; 0x01
    e3aa:	ce 01       	movw	r24, r28
    e3ac:	01 96       	adiw	r24, 0x01	; 1
    e3ae:	c4 df       	rcall	.-120    	; 0xe338 <_ZNK5EERefdeEv>
    e3b0:	f7 01       	movw	r30, r14
    e3b2:	81 93       	st	Z+, r24
    e3b4:	7f 01       	movw	r14, r30
    e3b6:	ec 15       	cp	r30, r12
    e3b8:	fd 05       	cpc	r31, r13
    e3ba:	91 f7       	brne	.-28     	; 0xe3a0 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4+0x2e>
    e3bc:	c8 01       	movw	r24, r16
    e3be:	0f 90       	pop	r0
    e3c0:	0f 90       	pop	r0
    e3c2:	df 91       	pop	r29
    e3c4:	cf 91       	pop	r28
    e3c6:	1f 91       	pop	r17
    e3c8:	0f 91       	pop	r16
    e3ca:	ff 90       	pop	r15
    e3cc:	ef 90       	pop	r14
    e3ce:	df 90       	pop	r13
    e3d0:	cf 90       	pop	r12
    e3d2:	bf 90       	pop	r11
    e3d4:	af 90       	pop	r10
    e3d6:	08 95       	ret

0000e3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>:
    e3d8:	af 92       	push	r10
    e3da:	bf 92       	push	r11
    e3dc:	cf 92       	push	r12
    e3de:	df 92       	push	r13
    e3e0:	ef 92       	push	r14
    e3e2:	ff 92       	push	r15
    e3e4:	0f 93       	push	r16
    e3e6:	1f 93       	push	r17
    e3e8:	cf 93       	push	r28
    e3ea:	df 93       	push	r29
    e3ec:	1f 92       	push	r1
    e3ee:	1f 92       	push	r1
    e3f0:	cd b7       	in	r28, 0x3d	; 61
    e3f2:	de b7       	in	r29, 0x3e	; 62
    e3f4:	8b 01       	movw	r16, r22
    e3f6:	6b 01       	movw	r12, r22
    e3f8:	2b e0       	ldi	r18, 0x0B	; 11
    e3fa:	c2 0e       	add	r12, r18
    e3fc:	d1 1c       	adc	r13, r1
    e3fe:	7b 01       	movw	r14, r22
    e400:	5c 01       	movw	r10, r24
    e402:	a6 1a       	sub	r10, r22
    e404:	b7 0a       	sbc	r11, r23
    e406:	c5 01       	movw	r24, r10
    e408:	8e 0d       	add	r24, r14
    e40a:	9f 1d       	adc	r25, r15
    e40c:	9a 83       	std	Y+2, r25	; 0x02
    e40e:	89 83       	std	Y+1, r24	; 0x01
    e410:	ce 01       	movw	r24, r28
    e412:	01 96       	adiw	r24, 0x01	; 1
    e414:	91 df       	rcall	.-222    	; 0xe338 <_ZNK5EERefdeEv>
    e416:	f7 01       	movw	r30, r14
    e418:	81 93       	st	Z+, r24
    e41a:	7f 01       	movw	r14, r30
    e41c:	ec 15       	cp	r30, r12
    e41e:	fd 05       	cpc	r31, r13
    e420:	91 f7       	brne	.-28     	; 0xe406 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15+0x2e>
    e422:	c8 01       	movw	r24, r16
    e424:	0f 90       	pop	r0
    e426:	0f 90       	pop	r0
    e428:	df 91       	pop	r29
    e42a:	cf 91       	pop	r28
    e42c:	1f 91       	pop	r17
    e42e:	0f 91       	pop	r16
    e430:	ff 90       	pop	r15
    e432:	ef 90       	pop	r14
    e434:	df 90       	pop	r13
    e436:	cf 90       	pop	r12
    e438:	bf 90       	pop	r11
    e43a:	af 90       	pop	r10
    e43c:	08 95       	ret

0000e43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
    e43e:	0f 93       	push	r16
    e440:	1f 93       	push	r17
    e442:	cf 93       	push	r28
    e444:	df 93       	push	r29
    e446:	1f 92       	push	r1
    e448:	1f 92       	push	r1
    e44a:	cd b7       	in	r28, 0x3d	; 61
    e44c:	de b7       	in	r29, 0x3e	; 62
    e44e:	8b 01       	movw	r16, r22
    e450:	fb 01       	movw	r30, r22
    e452:	60 81       	ld	r22, Z
    e454:	9a 83       	std	Y+2, r25	; 0x02
    e456:	89 83       	std	Y+1, r24	; 0x01
    e458:	ce 01       	movw	r24, r28
    e45a:	01 96       	adiw	r24, 0x01	; 1
    e45c:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    e460:	c8 01       	movw	r24, r16
    e462:	0f 90       	pop	r0
    e464:	0f 90       	pop	r0
    e466:	df 91       	pop	r29
    e468:	cf 91       	pop	r28
    e46a:	1f 91       	pop	r17
    e46c:	0f 91       	pop	r16
    e46e:	08 95       	ret

0000e470 <_Z11Check_Phasev>:
    e470:	cf 93       	push	r28
    e472:	87 e3       	ldi	r24, 0x37	; 55
    e474:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    e478:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e47c:	89 2b       	or	r24, r25
    e47e:	49 f0       	breq	.+18     	; 0xe492 <_Z11Check_Phasev+0x22>
    e480:	c1 30       	cpi	r28, 0x01	; 1
    e482:	81 f4       	brne	.+32     	; 0xe4a4 <_Z11Check_Phasev+0x34>
    e484:	67 e5       	ldi	r22, 0x57	; 87
    e486:	75 e2       	ldi	r23, 0x25	; 37
    e488:	8f e6       	ldi	r24, 0x6F	; 111
    e48a:	96 e1       	ldi	r25, 0x16	; 22
    e48c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e490:	0c c0       	rjmp	.+24     	; 0xe4aa <_Z11Check_Phasev+0x3a>
    e492:	c1 30       	cpi	r28, 0x01	; 1
    e494:	49 f4       	brne	.+18     	; 0xe4a8 <_Z11Check_Phasev+0x38>
    e496:	67 e4       	ldi	r22, 0x47	; 71
    e498:	75 e2       	ldi	r23, 0x25	; 37
    e49a:	8f e6       	ldi	r24, 0x6F	; 111
    e49c:	96 e1       	ldi	r25, 0x16	; 22
    e49e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    e4a2:	02 c0       	rjmp	.+4      	; 0xe4a8 <_Z11Check_Phasev+0x38>
    e4a4:	c1 e0       	ldi	r28, 0x01	; 1
    e4a6:	01 c0       	rjmp	.+2      	; 0xe4aa <_Z11Check_Phasev+0x3a>
    e4a8:	c0 e0       	ldi	r28, 0x00	; 0
    e4aa:	8c 2f       	mov	r24, r28
    e4ac:	cf 91       	pop	r28
    e4ae:	08 95       	ret

0000e4b0 <_Z31Keeps_Monitor_Server_Connectionv>:
{
	static uint32_t server_wait_timer;
	static unsigned char timer_count,connect_count,ping_timer,ping_req_timer;
	if(_sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)
	{
		ping_req_timer = 100;
    e4b0:	84 e6       	ldi	r24, 0x64	; 100
    e4b2:	80 93 91 0c 	sts	0x0C91, r24	; 0x800c91 <_ZZ31Keeps_Monitor_Server_ConnectionvE14ping_req_timer>
	else
	{
		ping_req_timer = 100;
	}
				
	if(!_sRuble_Parameters.Wait_Server_Not_Reachable)
    e4b6:	80 91 11 16 	lds	r24, 0x1611	; 0x801611 <_sRuble_Parameters+0xac>
    e4ba:	81 11       	cpse	r24, r1
    e4bc:	3f c0       	rjmp	.+126    	; 0xe53c <_Z31Keeps_Monitor_Server_Connectionv+0x8c>
	{
		if(ping_timer > ping_req_timer)
    e4be:	80 91 90 0c 	lds	r24, 0x0C90	; 0x800c90 <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
    e4c2:	85 36       	cpi	r24, 0x65	; 101
    e4c4:	a0 f1       	brcs	.+104    	; 0xe52e <_Z31Keeps_Monitor_Server_Connectionv+0x7e>
		{
			ping_timer = 0;
    e4c6:	10 92 90 0c 	sts	0x0C90, r1	; 0x800c90 <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
			if(!_kMQTT_LOOP())
    e4ca:	ae dd       	rcall	.-1188   	; 0xe028 <_Z9MQTT_Loopv>
    e4cc:	81 11       	cpse	r24, r1
    e4ce:	32 c0       	rjmp	.+100    	; 0xe534 <_Z31Keeps_Monitor_Server_Connectionv+0x84>
			{
				_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    e4d0:	82 e0       	ldi	r24, 0x02	; 2
    e4d2:	80 93 d7 15 	sts	0x15D7, r24	; 0x8015d7 <_sRuble_Parameters+0x72>
				_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    e4d6:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    e4da:	8b 7f       	andi	r24, 0xFB	; 251
    e4dc:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
				if(connect_count < _kRETRY_TO_CONNECT_SERVER)
    e4e0:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e4e4:	83 30       	cpi	r24, 0x03	; 3
    e4e6:	78 f4       	brcc	.+30     	; 0xe506 <_Z31Keeps_Monitor_Server_Connectionv+0x56>
				{
					_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    e4e8:	10 92 11 16 	sts	0x1611, r1	; 0x801611 <_sRuble_Parameters+0xac>
					if(!Ping_to_Server())
    e4ec:	0e 94 d0 7e 	call	0xfda0	; 0xfda0 <_Z14Ping_to_Serverv>
    e4f0:	81 11       	cpse	r24, r1
    e4f2:	06 c0       	rjmp	.+12     	; 0xe500 <_Z31Keeps_Monitor_Server_Connectionv+0x50>
					{
						connect_count++;
    e4f4:	80 91 8f 0c 	lds	r24, 0x0C8F	; 0x800c8f <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e4f8:	8f 5f       	subi	r24, 0xFF	; 255
    e4fa:	80 93 8f 0c 	sts	0x0C8F, r24	; 0x800c8f <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e4fe:	1a c0       	rjmp	.+52     	; 0xe534 <_Z31Keeps_Monitor_Server_Connectionv+0x84>
					}
					else
					{
						connect_count = _kRESET;
    e500:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e504:	17 c0       	rjmp	.+46     	; 0xe534 <_Z31Keeps_Monitor_Server_Connectionv+0x84>
					}
				}
				else
				{
					if(_sRuble_Parameters.Wait_Server_Not_Reachable != _kSET)
    e506:	80 91 11 16 	lds	r24, 0x1611	; 0x801611 <_sRuble_Parameters+0xac>
    e50a:	81 30       	cpi	r24, 0x01	; 1
    e50c:	b9 f0       	breq	.+46     	; 0xe53c <_Z31Keeps_Monitor_Server_Connectionv+0x8c>
					{
						_sRuble_Parameters.Wait_Server_Not_Reachable = _kSET;
    e50e:	81 e0       	ldi	r24, 0x01	; 1
    e510:	80 93 11 16 	sts	0x1611, r24	; 0x801611 <_sRuble_Parameters+0xac>
						server_wait_timer = _kWAIT_DUE_TO_SERVER_NOT_RECHABLE;
    e514:	8e e1       	ldi	r24, 0x1E	; 30
    e516:	90 e0       	ldi	r25, 0x00	; 0
    e518:	a0 e0       	ldi	r26, 0x00	; 0
    e51a:	b0 e0       	ldi	r27, 0x00	; 0
    e51c:	80 93 8b 0c 	sts	0x0C8B, r24	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e520:	90 93 8c 0c 	sts	0x0C8C, r25	; 0x800c8c <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e524:	a0 93 8d 0c 	sts	0x0C8D, r26	; 0x800c8d <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e528:	b0 93 8e 0c 	sts	0x0C8E, r27	; 0x800c8e <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e52c:	03 c0       	rjmp	.+6      	; 0xe534 <_Z31Keeps_Monitor_Server_Connectionv+0x84>
				}
			}
		}
		else
		{
			ping_timer++;
    e52e:	8f 5f       	subi	r24, 0xFF	; 255
    e530:	80 93 90 0c 	sts	0x0C90, r24	; 0x800c90 <_ZZ31Keeps_Monitor_Server_ConnectionvE10ping_timer>
		}
	}
						
	if(_sRuble_Parameters.Wait_Server_Not_Reachable)  /* don't try again and again to connect the server have to wait for some time */
    e534:	80 91 11 16 	lds	r24, 0x1611	; 0x801611 <_sRuble_Parameters+0xac>
    e538:	88 23       	and	r24, r24
    e53a:	e1 f0       	breq	.+56     	; 0xe574 <_Z31Keeps_Monitor_Server_Connectionv+0xc4>
	{
		if(server_wait_timer)
    e53c:	80 91 8b 0c 	lds	r24, 0x0C8B	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e540:	90 91 8c 0c 	lds	r25, 0x0C8C	; 0x800c8c <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e544:	a0 91 8d 0c 	lds	r26, 0x0C8D	; 0x800c8d <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e548:	b0 91 8e 0c 	lds	r27, 0x0C8E	; 0x800c8e <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e54c:	00 97       	sbiw	r24, 0x00	; 0
    e54e:	a1 05       	cpc	r26, r1
    e550:	b1 05       	cpc	r27, r1
    e552:	61 f0       	breq	.+24     	; 0xe56c <_Z31Keeps_Monitor_Server_Connectionv+0xbc>
		{
			server_wait_timer--;
    e554:	01 97       	sbiw	r24, 0x01	; 1
    e556:	a1 09       	sbc	r26, r1
    e558:	b1 09       	sbc	r27, r1
    e55a:	80 93 8b 0c 	sts	0x0C8B, r24	; 0x800c8b <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer>
    e55e:	90 93 8c 0c 	sts	0x0C8C, r25	; 0x800c8c <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x1>
    e562:	a0 93 8d 0c 	sts	0x0C8D, r26	; 0x800c8d <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x2>
    e566:	b0 93 8e 0c 	sts	0x0C8E, r27	; 0x800c8e <_ZZ31Keeps_Monitor_Server_ConnectionvE17server_wait_timer+0x3>
    e56a:	08 95       	ret
		}
		else
		{
			_sRuble_Parameters.Wait_Server_Not_Reachable = _kRESET;
    e56c:	10 92 11 16 	sts	0x1611, r1	; 0x801611 <_sRuble_Parameters+0xac>
			connect_count = _kRESET;
    e570:	10 92 8f 0c 	sts	0x0C8F, r1	; 0x800c8f <_ZZ31Keeps_Monitor_Server_ConnectionvE13connect_count>
    e574:	08 95       	ret

0000e576 <_Z19Pump_Run_Monitoringv>:
	return;
}


char Pump_Run_Monitoring(void)
{
    e576:	cf 92       	push	r12
    e578:	df 92       	push	r13
    e57a:	ef 92       	push	r14
    e57c:	ff 92       	push	r15
    e57e:	cf 93       	push	r28
	if(_sRuble_Parameters.Wireless_Pump_Command == _kRESET)
    e580:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
    e584:	81 11       	cpse	r24, r1
    e586:	50 c0       	rjmp	.+160    	; 0xe628 <_Z19Pump_Run_Monitoringv+0xb2>
	{
		if(_sRuble_Parameters.By_Pass_CT == _kSET)
    e588:	c0 91 22 16 	lds	r28, 0x1622	; 0x801622 <_sRuble_Parameters+0xbd>
    e58c:	c1 30       	cpi	r28, 0x01	; 1
    e58e:	09 f0       	breq	.+2      	; 0xe592 <_Z19Pump_Run_Monitoringv+0x1c>
    e590:	42 c0       	rjmp	.+132    	; 0xe616 <_Z19Pump_Run_Monitoringv+0xa0>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current) - ((_sPump_Parameter.Pump_Nominal_Current/100) * 90)))   // DEMO ONLY
    e592:	c0 90 5b 15 	lds	r12, 0x155B	; 0x80155b <_sPump_Parameter>
    e596:	d0 90 5c 15 	lds	r13, 0x155C	; 0x80155c <_sPump_Parameter+0x1>
    e59a:	e0 90 5d 15 	lds	r14, 0x155D	; 0x80155d <_sPump_Parameter+0x2>
    e59e:	f0 90 5e 15 	lds	r15, 0x155E	; 0x80155e <_sPump_Parameter+0x3>
    e5a2:	20 e0       	ldi	r18, 0x00	; 0
    e5a4:	30 e0       	ldi	r19, 0x00	; 0
    e5a6:	48 ec       	ldi	r20, 0xC8	; 200
    e5a8:	52 e4       	ldi	r21, 0x42	; 66
    e5aa:	c7 01       	movw	r24, r14
    e5ac:	b6 01       	movw	r22, r12
    e5ae:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
    e5b2:	20 e0       	ldi	r18, 0x00	; 0
    e5b4:	30 e0       	ldi	r19, 0x00	; 0
    e5b6:	44 eb       	ldi	r20, 0xB4	; 180
    e5b8:	52 e4       	ldi	r21, 0x42	; 66
    e5ba:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    e5be:	9b 01       	movw	r18, r22
    e5c0:	ac 01       	movw	r20, r24
    e5c2:	c7 01       	movw	r24, r14
    e5c4:	b6 01       	movw	r22, r12
    e5c6:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <__subsf3>
    e5ca:	9b 01       	movw	r18, r22
    e5cc:	ac 01       	movw	r20, r24
    e5ce:	60 91 5f 15 	lds	r22, 0x155F	; 0x80155f <_sPump_Parameter+0x4>
    e5d2:	70 91 60 15 	lds	r23, 0x1560	; 0x801560 <_sPump_Parameter+0x5>
    e5d6:	80 91 61 15 	lds	r24, 0x1561	; 0x801561 <_sPump_Parameter+0x6>
    e5da:	90 91 62 15 	lds	r25, 0x1562	; 0x801562 <_sPump_Parameter+0x7>
    e5de:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    e5e2:	18 16       	cp	r1, r24
    e5e4:	24 f4       	brge	.+8      	; 0xe5ee <_Z19Pump_Run_Monitoringv+0x78>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    e5e6:	c0 93 4a 16 	sts	0x164A, r28	; 0x80164a <_sRuble_Parameters+0xe5>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;	
    e5ea:	82 e0       	ldi	r24, 0x02	; 2
    e5ec:	03 c0       	rjmp	.+6      	; 0xe5f4 <_Z19Pump_Run_Monitoringv+0x7e>
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    e5ee:	10 92 4a 16 	sts	0x164A, r1	; 0x80164a <_sRuble_Parameters+0xe5>
				_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    e5f2:	84 e0       	ldi	r24, 0x04	; 4
    e5f4:	80 93 6d 15 	sts	0x156D, r24	; 0x80156d <_sRuble_Parameters+0x8>
    e5f8:	10 92 6e 15 	sts	0x156E, r1	; 0x80156e <_sRuble_Parameters+0x9>
    e5fc:	10 92 6f 15 	sts	0x156F, r1	; 0x80156f <_sRuble_Parameters+0xa>
    e600:	10 92 70 15 	sts	0x1570, r1	; 0x801570 <_sRuble_Parameters+0xb>
    e604:	10 92 71 15 	sts	0x1571, r1	; 0x801571 <_sRuble_Parameters+0xc>
    e608:	10 92 72 15 	sts	0x1572, r1	; 0x801572 <_sRuble_Parameters+0xd>
    e60c:	10 92 73 15 	sts	0x1573, r1	; 0x801573 <_sRuble_Parameters+0xe>
    e610:	10 92 74 15 	sts	0x1574, r1	; 0x801574 <_sRuble_Parameters+0xf>
    e614:	20 c0       	rjmp	.+64     	; 0xe656 <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
		else
		{
			if(!_kGPIO_GET(_kPUMP_1))
    e616:	8a e0       	ldi	r24, 0x0A	; 10
    e618:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    e61c:	89 2b       	or	r24, r25
    e61e:	41 f4       	brne	.+16     	; 0xe630 <_Z19Pump_Run_Monitoringv+0xba>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
    e620:	81 e0       	ldi	r24, 0x01	; 1
    e622:	80 93 4a 16 	sts	0x164A, r24	; 0x80164a <_sRuble_Parameters+0xe5>
    e626:	17 c0       	rjmp	.+46     	; 0xe656 <_Z19Pump_Run_Monitoringv+0xe0>
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    e628:	80 91 25 16 	lds	r24, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
    e62c:	81 30       	cpi	r24, 0x01	; 1
    e62e:	19 f0       	breq	.+6      	; 0xe636 <_Z19Pump_Run_Monitoringv+0xc0>
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kSET;
			}
			else
			{
				_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
    e630:	10 92 4a 16 	sts	0x164A, r1	; 0x80164a <_sRuble_Parameters+0xe5>
    e634:	10 c0       	rjmp	.+32     	; 0xe656 <_Z19Pump_Run_Monitoringv+0xe0>
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
		(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_STATUS) == _ePUMP_STATUS)
    e636:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    e63a:	90 e0       	ldi	r25, 0x00	; 0
    e63c:	02 97       	sbiw	r24, 0x02	; 2
    e63e:	2b e0       	ldi	r18, 0x0B	; 11
    e640:	28 9f       	mul	r18, r24
    e642:	f0 01       	movw	r30, r0
    e644:	29 9f       	mul	r18, r25
    e646:	f0 0d       	add	r31, r0
    e648:	11 24       	eor	r1, r1
    e64a:	ea 53       	subi	r30, 0x3A	; 58
    e64c:	f4 4f       	sbci	r31, 0xF4	; 244
			}
		}
	}
	else
	{
		if(_sRuble_Parameters.Wirelss_Pump_Status == _kON &&
    e64e:	80 85       	ldd	r24, Z+8	; 0x08
    e650:	86 ff       	sbrs	r24, 6
    e652:	ee cf       	rjmp	.-36     	; 0xe630 <_Z19Pump_Run_Monitoringv+0xba>
    e654:	e5 cf       	rjmp	.-54     	; 0xe620 <_Z19Pump_Run_Monitoringv+0xaa>
		{
			_sRuble_Parameters.Pump_Is_Running_Or_Not = _kRESET;
		}
		
	}
}
    e656:	cf 91       	pop	r28
    e658:	ff 90       	pop	r15
    e65a:	ef 90       	pop	r14
    e65c:	df 90       	pop	r13
    e65e:	cf 90       	pop	r12
    e660:	08 95       	ret

0000e662 <_Z11Debug_Checkv>:


unsigned char Debug_Check(void)
{
	if(_kGPIO_GET(_kDEBUG_PIN))
    e662:	88 e3       	ldi	r24, 0x38	; 56
    e664:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    e668:	89 2b       	or	r24, r25
    e66a:	21 f0       	breq	.+8      	; 0xe674 <_Z11Debug_Checkv+0x12>
	{
		_sRuble_Parameters.Debug_Mode = _kRESET;
    e66c:	10 92 55 16 	sts	0x1655, r1	; 0x801655 <_sRuble_Parameters+0xf0>
		return	1;	
    e670:	81 e0       	ldi	r24, 0x01	; 1
    e672:	08 95       	ret
	}
	
	_sRuble_Parameters.Debug_Mode = _kSET;
    e674:	81 e0       	ldi	r24, 0x01	; 1
    e676:	80 93 55 16 	sts	0x1655, r24	; 0x801655 <_sRuble_Parameters+0xf0>
	return 0;
    e67a:	80 e0       	ldi	r24, 0x00	; 0
}	
    e67c:	08 95       	ret

0000e67e <_Z19Calibration_Of_Pumpv>:
	
}


int Calibration_Of_Pump(void)
{
    e67e:	2f 92       	push	r2
    e680:	3f 92       	push	r3
    e682:	4f 92       	push	r4
    e684:	5f 92       	push	r5
    e686:	6f 92       	push	r6
    e688:	7f 92       	push	r7
    e68a:	8f 92       	push	r8
    e68c:	9f 92       	push	r9
    e68e:	af 92       	push	r10
    e690:	bf 92       	push	r11
    e692:	cf 92       	push	r12
    e694:	df 92       	push	r13
    e696:	ef 92       	push	r14
    e698:	ff 92       	push	r15
    e69a:	0f 93       	push	r16
    e69c:	1f 93       	push	r17
    e69e:	cf 93       	push	r28
    e6a0:	df 93       	push	r29
    e6a2:	cd b7       	in	r28, 0x3d	; 61
    e6a4:	de b7       	in	r29, 0x3e	; 62
    e6a6:	6a 97       	sbiw	r28, 0x1a	; 26
    e6a8:	0f b6       	in	r0, 0x3f	; 63
    e6aa:	f8 94       	cli
    e6ac:	de bf       	out	0x3e, r29	; 62
    e6ae:	0f be       	out	0x3f, r0	; 63
    e6b0:	cd bf       	out	0x3d, r28	; 61
	
	
	
	
	
	if(_sRuble_Parameters.Do_Calibration == _kSET)
    e6b2:	60 91 10 16 	lds	r22, 0x1610	; 0x801610 <_sRuble_Parameters+0xab>
    e6b6:	61 30       	cpi	r22, 0x01	; 1
    e6b8:	09 f0       	breq	.+2      	; 0xe6bc <_Z19Calibration_Of_Pumpv+0x3e>
    e6ba:	ca c0       	rjmp	.+404    	; 0xe850 <_Z19Calibration_Of_Pumpv+0x1d2>
	{
		_sRuble_Parameters.Do_Calibration = _kRESET;
    e6bc:	10 92 10 16 	sts	0x1610, r1	; 0x801610 <_sRuble_Parameters+0xab>
		
		if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    e6c0:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    e6c4:	62 30       	cpi	r22, 0x02	; 2
    e6c6:	08 f1       	brcs	.+66     	; 0xe70a <_Z19Calibration_Of_Pumpv+0x8c>
		{
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    e6c8:	84 ed       	ldi	r24, 0xD4	; 212
    e6ca:	93 e0       	ldi	r25, 0x03	; 3
    e6cc:	e7 e8       	ldi	r30, 0x87	; 135
    e6ce:	f1 e1       	ldi	r31, 0x11	; 17
    e6d0:	df 01       	movw	r26, r30
    e6d2:	9c 01       	movw	r18, r24
    e6d4:	1d 92       	st	X+, r1
    e6d6:	21 50       	subi	r18, 0x01	; 1
    e6d8:	30 40       	sbci	r19, 0x00	; 0
    e6da:	e1 f7       	brne	.-8      	; 0xe6d4 <_Z19Calibration_Of_Pumpv+0x56>
			if(Wireless_Pump_On_Off(_eDO_CALIBRATION,_sRuble_Parameters.Pump_Selected_For_Irrigation - 2))
    e6dc:	62 50       	subi	r22, 0x02	; 2
    e6de:	81 e0       	ldi	r24, 0x01	; 1
    e6e0:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
    e6e4:	88 23       	and	r24, r24
    e6e6:	19 f0       	breq	.+6      	; 0xe6ee <_Z19Calibration_Of_Pumpv+0x70>
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    e6e8:	64 e1       	ldi	r22, 0x14	; 20
    e6ea:	75 e0       	ldi	r23, 0x05	; 5
    e6ec:	02 c0       	rjmp	.+4      	; 0xe6f2 <_Z19Calibration_Of_Pumpv+0x74>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    e6ee:	68 e2       	ldi	r22, 0x28	; 40
    e6f0:	75 e0       	ldi	r23, 0x05	; 5
    e6f2:	87 e8       	ldi	r24, 0x87	; 135
    e6f4:	91 e1       	ldi	r25, 0x11	; 17
    e6f6:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
			}
			
			_kMQTT_PUB((unsigned char *)_sPublish_Topic.Calibration_FeedBack,(unsigned char *)_gPub_Buff);
    e6fa:	67 e8       	ldi	r22, 0x87	; 135
    e6fc:	71 e1       	ldi	r23, 0x11	; 17
    e6fe:	83 e5       	ldi	r24, 0x53	; 83
    e700:	9e e0       	ldi	r25, 0x0E	; 14
    e702:	0b db       	rcall	.-2538   	; 0xdd1a <_Z12MQTT_PublishPhS_>
			
			return 1;
    e704:	81 e0       	ldi	r24, 0x01	; 1
    e706:	90 e0       	ldi	r25, 0x00	; 0
    e708:	27 c1       	rjmp	.+590    	; 0xe958 <_Z19Calibration_Of_Pumpv+0x2da>
		}
		
		
		previous = millis();
    e70a:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    e70e:	6f 8b       	std	Y+23, r22	; 0x17
    e710:	78 8f       	std	Y+24, r23	; 0x18
    e712:	89 8f       	std	Y+25, r24	; 0x19
    e714:	9a 8f       	std	Y+26, r25	; 0x1a
    e716:	1e 01       	movw	r2, r28
    e718:	35 e1       	ldi	r19, 0x15	; 21
    e71a:	23 0e       	add	r2, r19
    e71c:	31 1c       	adc	r3, r1
    e71e:	ae 01       	movw	r20, r28
    e720:	4f 5f       	subi	r20, 0xFF	; 255
    e722:	5f 4f       	sbci	r21, 0xFF	; 255
    e724:	6a 01       	movw	r12, r20
	
}


int Calibration_Of_Pump(void)
{
    e726:	8a 01       	movw	r16, r20
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    e728:	68 ec       	ldi	r22, 0xC8	; 200
    e72a:	75 e0       	ldi	r23, 0x05	; 5
    e72c:	81 ea       	ldi	r24, 0xA1	; 161
    e72e:	9c e0       	ldi	r25, 0x0C	; 12
    e730:	0e 94 3c d5 	call	0x1aa78	; 0x1aa78 <_ZN13EnergyMonitor8calcIrmsEj>
    e734:	d8 01       	movw	r26, r16
    e736:	6d 93       	st	X+, r22
    e738:	7d 93       	st	X+, r23
    e73a:	8d 93       	st	X+, r24
    e73c:	9d 93       	st	X+, r25
    e73e:	8d 01       	movw	r16, r26
		
		
		previous = millis();
		do
		{
			for(i=0;i<5;i++)
    e740:	a2 15       	cp	r26, r2
    e742:	b3 05       	cpc	r27, r3
    e744:	89 f7       	brne	.-30     	; 0xe728 <_Z19Calibration_Of_Pumpv+0xaa>
    e746:	00 e0       	ldi	r16, 0x00	; 0
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    e748:	0f 5f       	subi	r16, 0xFF	; 255
    e74a:	10 2f       	mov	r17, r16
    e74c:	15 30       	cpi	r17, 0x05	; 5
    e74e:	31 f4       	brne	.+12     	; 0xe75c <_Z19Calibration_Of_Pumpv+0xde>
    e750:	b4 e0       	ldi	r27, 0x04	; 4
    e752:	cb 0e       	add	r12, r27
    e754:	d1 1c       	adc	r13, r1
		{
			for(i=0;i<5;i++)
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
    e756:	05 30       	cpi	r16, 0x05	; 5
    e758:	b9 f7       	brne	.-18     	; 0xe748 <_Z19Calibration_Of_Pumpv+0xca>
    e75a:	29 c0       	rjmp	.+82     	; 0xe7ae <_Z19Calibration_Of_Pumpv+0x130>
			{
				for (j = i + 1; j < 5; j++)
				{
					if (filter_data[i] > filter_data[j])
    e75c:	f6 01       	movw	r30, r12
    e75e:	80 80       	ld	r8, Z
    e760:	91 80       	ldd	r9, Z+1	; 0x01
    e762:	a2 80       	ldd	r10, Z+2	; 0x02
    e764:	b3 80       	ldd	r11, Z+3	; 0x03
    e766:	ee 24       	eor	r14, r14
    e768:	e3 94       	inc	r14
    e76a:	f1 2c       	mov	r15, r1
    e76c:	ec 0e       	add	r14, r28
    e76e:	fd 1e       	adc	r15, r29
    e770:	f4 e0       	ldi	r31, 0x04	; 4
    e772:	1f 9f       	mul	r17, r31
    e774:	e0 0c       	add	r14, r0
    e776:	f1 1c       	adc	r15, r1
    e778:	11 24       	eor	r1, r1
    e77a:	d7 01       	movw	r26, r14
    e77c:	4d 90       	ld	r4, X+
    e77e:	5d 90       	ld	r5, X+
    e780:	6d 90       	ld	r6, X+
    e782:	7c 90       	ld	r7, X
    e784:	a3 01       	movw	r20, r6
    e786:	92 01       	movw	r18, r4
    e788:	c5 01       	movw	r24, r10
    e78a:	b4 01       	movw	r22, r8
    e78c:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    e790:	18 16       	cp	r1, r24
    e792:	5c f4       	brge	.+22     	; 0xe7aa <_Z19Calibration_Of_Pumpv+0x12c>
					{
						filter_data_1 = filter_data[i];
						filter_data[i] = filter_data[j];
    e794:	f6 01       	movw	r30, r12
    e796:	40 82       	st	Z, r4
    e798:	51 82       	std	Z+1, r5	; 0x01
    e79a:	62 82       	std	Z+2, r6	; 0x02
    e79c:	73 82       	std	Z+3, r7	; 0x03
						filter_data[j] = filter_data_1;
    e79e:	d7 01       	movw	r26, r14
    e7a0:	8d 92       	st	X+, r8
    e7a2:	9d 92       	st	X+, r9
    e7a4:	ad 92       	st	X+, r10
    e7a6:	bc 92       	st	X, r11
    e7a8:	13 97       	sbiw	r26, 0x03	; 3
			{
				filter_data[i] = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			}
			for (i = 0; i < 5; i++)
			{
				for (j = i + 1; j < 5; j++)
    e7aa:	1f 5f       	subi	r17, 0xFF	; 255
    e7ac:	cf cf       	rjmp	.-98     	; 0xe74c <_Z19Calibration_Of_Pumpv+0xce>
						filter_data[i] = filter_data[j];
						filter_data[j] = filter_data_1;
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    e7ae:	69 85       	ldd	r22, Y+9	; 0x09
    e7b0:	7a 85       	ldd	r23, Y+10	; 0x0a
    e7b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    e7b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    e7b6:	60 93 5f 15 	sts	0x155F, r22	; 0x80155f <_sPump_Parameter+0x4>
    e7ba:	70 93 60 15 	sts	0x1560, r23	; 0x801560 <_sPump_Parameter+0x5>
    e7be:	80 93 61 15 	sts	0x1561, r24	; 0x801561 <_sPump_Parameter+0x6>
    e7c2:	90 93 62 15 	sts	0x1562, r25	; 0x801562 <_sPump_Parameter+0x7>
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    e7c6:	20 e0       	ldi	r18, 0x00	; 0
    e7c8:	30 e0       	ldi	r19, 0x00	; 0
    e7ca:	40 e0       	ldi	r20, 0x00	; 0
    e7cc:	50 e4       	ldi	r21, 0x40	; 64
    e7ce:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    e7d2:	18 16       	cp	r1, r24
    e7d4:	4c f5       	brge	.+82     	; 0xe828 <_Z19Calibration_Of_Pumpv+0x1aa>
    e7d6:	8f e5       	ldi	r24, 0x5F	; 95
    e7d8:	e8 2e       	mov	r14, r24
    e7da:	85 e1       	ldi	r24, 0x15	; 21
    e7dc:	f8 2e       	mov	r15, r24
    e7de:	07 e9       	ldi	r16, 0x97	; 151
    e7e0:	14 e0       	ldi	r17, 0x04	; 4
    e7e2:	f7 01       	movw	r30, r14
    e7e4:	61 91       	ld	r22, Z+
    e7e6:	7f 01       	movw	r14, r30
    e7e8:	1e 8b       	std	Y+22, r17	; 0x16
    e7ea:	0d 8b       	std	Y+21, r16	; 0x15
    e7ec:	c1 01       	movw	r24, r2
    e7ee:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    e7f2:	0f 5f       	subi	r16, 0xFF	; 255
    e7f4:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    e7f6:	0b 39       	cpi	r16, 0x9B	; 155
    e7f8:	f4 e0       	ldi	r31, 0x04	; 4
    e7fa:	1f 07       	cpc	r17, r31
    e7fc:	91 f7       	brne	.-28     	; 0xe7e2 <_Z19Calibration_Of_Pumpv+0x164>
			{
				_kEEPROM_WRITE(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Run_Current);     /* save the pump current */
				_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read pump nominal current */
    e7fe:	6b e5       	ldi	r22, 0x5B	; 91
    e800:	75 e1       	ldi	r23, 0x15	; 21
    e802:	87 e9       	ldi	r24, 0x97	; 151
    e804:	94 e0       	ldi	r25, 0x04	; 4
    e806:	b5 dd       	rcall	.-1174   	; 0xe372 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    e808:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e80c:	81 30       	cpi	r24, 0x01	; 1
    e80e:	09 f0       	breq	.+2      	; 0xe812 <_Z19Calibration_Of_Pumpv+0x194>
    e810:	4c c0       	rjmp	.+152    	; 0xe8aa <_Z19Calibration_Of_Pumpv+0x22c>
				{
					_kSERAIL_MON_WRITE("Pump Calibration is done");                /* for debugging purpose */
    e812:	60 ef       	ldi	r22, 0xF0	; 240
    e814:	75 e2       	ldi	r23, 0x25	; 37
    e816:	8f e6       	ldi	r24, 0x6F	; 111
    e818:	96 e1       	ldi	r25, 0x16	; 22
    e81a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
    e81e:	8f e6       	ldi	r24, 0x6F	; 111
    e820:	96 e1       	ldi	r25, 0x16	; 22
    e822:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    e826:	41 c0       	rjmp	.+130    	; 0xe8aa <_Z19Calibration_Of_Pumpv+0x22c>
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
    e828:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    e82c:	dc 01       	movw	r26, r24
    e82e:	cb 01       	movw	r24, r22
    e830:	2f 89       	ldd	r18, Y+23	; 0x17
    e832:	38 8d       	ldd	r19, Y+24	; 0x18
    e834:	49 8d       	ldd	r20, Y+25	; 0x19
    e836:	5a 8d       	ldd	r21, Y+26	; 0x1a
    e838:	82 1b       	sub	r24, r18
    e83a:	93 0b       	sbc	r25, r19
    e83c:	a4 0b       	sbc	r26, r20
    e83e:	b5 0b       	sbc	r27, r21
    e840:	80 31       	cpi	r24, 0x10	; 16
    e842:	97 42       	sbci	r25, 0x27	; 39
    e844:	a1 05       	cpc	r26, r1
    e846:	b1 05       	cpc	r27, r1
    e848:	08 f4       	brcc	.+2      	; 0xe84c <_Z19Calibration_Of_Pumpv+0x1ce>
    e84a:	69 cf       	rjmp	.-302    	; 0xe71e <_Z19Calibration_Of_Pumpv+0xa0>
    e84c:	80 e0       	ldi	r24, 0x00	; 0
    e84e:	2e c0       	rjmp	.+92     	; 0xe8ac <_Z19Calibration_Of_Pumpv+0x22e>
		}
		_kMQTT_PUB((unsigned char *)_sPublish_Topic.Calibration_FeedBack,(unsigned char *)_gPub_Buff);
	}
	else
	{
		if(_sRuble_Parameters.Do_Calibration > _kWIRED_PUMP_NUMBER)
    e850:	62 30       	cpi	r22, 0x02	; 2
    e852:	08 f4       	brcc	.+2      	; 0xe856 <_Z19Calibration_Of_Pumpv+0x1d8>
    e854:	4a c0       	rjmp	.+148    	; 0xe8ea <_Z19Calibration_Of_Pumpv+0x26c>
		{
			//Wireless_Pump_On_Off(_kDO_CALIBRATION);
			Wireless_Pump_On_Off(_kDO_CALIBRATION,_sRuble_Parameters.Do_Calibration -2);
    e856:	62 50       	subi	r22, 0x02	; 2
    e858:	86 e0       	ldi	r24, 0x06	; 6
    e85a:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
    e85e:	10 92 10 16 	sts	0x1610, r1	; 0x801610 <_sRuble_Parameters+0xab>
			previous = millis();
    e862:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    e866:	6b 01       	movw	r12, r22
    e868:	7c 01       	movw	r14, r24
			do
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    e86a:	1b e0       	ldi	r17, 0x0B	; 11
			
			_sRuble_Parameters.Do_Calibration = _kRESET;
			previous = millis();
			do
			{
				Lora_Operation();
    e86c:	0e 94 8c cb 	call	0x19718	; 0x19718 <_Z14Lora_Operationv>
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
    e870:	80 91 10 16 	lds	r24, 0x1610	; 0x801610 <_sRuble_Parameters+0xab>
    e874:	90 e0       	ldi	r25, 0x00	; 0
    e876:	02 97       	sbiw	r24, 0x02	; 2
    e878:	18 9f       	mul	r17, r24
    e87a:	f0 01       	movw	r30, r0
    e87c:	19 9f       	mul	r17, r25
    e87e:	f0 0d       	add	r31, r0
    e880:	11 24       	eor	r1, r1
    e882:	ea 53       	subi	r30, 0x3A	; 58
    e884:	f4 4f       	sbci	r31, 0xF4	; 244
    e886:	82 85       	ldd	r24, Z+10	; 0x0a
    e888:	80 fd       	sbrc	r24, 0
    e88a:	33 c0       	rjmp	.+102    	; 0xe8f2 <_Z19Calibration_Of_Pumpv+0x274>
				{
					answer = 1;
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
    e88c:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    e890:	dc 01       	movw	r26, r24
    e892:	cb 01       	movw	r24, r22
    e894:	8c 19       	sub	r24, r12
    e896:	9d 09       	sbc	r25, r13
    e898:	ae 09       	sbc	r26, r14
    e89a:	bf 09       	sbc	r27, r15
    e89c:	80 31       	cpi	r24, 0x10	; 16
    e89e:	97 42       	sbci	r25, 0x27	; 39
    e8a0:	a1 05       	cpc	r26, r1
    e8a2:	b1 05       	cpc	r27, r1
    e8a4:	18 f3       	brcs	.-58     	; 0xe86c <_Z19Calibration_Of_Pumpv+0x1ee>
    e8a6:	80 e0       	ldi	r24, 0x00	; 0
    e8a8:	25 c0       	rjmp	.+74     	; 0xe8f4 <_Z19Calibration_Of_Pumpv+0x276>
					}
				}
			}
			_sPump_Parameter.Pump_Run_Current =  filter_data[2];      // RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
			
			if(_sPump_Parameter.Pump_Run_Current > 2)
    e8aa:	81 e0       	ldi	r24, 0x01	; 1
				}
				answer = 1;
			}	
		}while ((answer == 0) && ((millis() - previous) < timeout));
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    e8ac:	24 ed       	ldi	r18, 0xD4	; 212
    e8ae:	33 e0       	ldi	r19, 0x03	; 3
    e8b0:	e7 e8       	ldi	r30, 0x87	; 135
    e8b2:	f1 e1       	ldi	r31, 0x11	; 17
    e8b4:	df 01       	movw	r26, r30
    e8b6:	a9 01       	movw	r20, r18
    e8b8:	1d 92       	st	X+, r1
    e8ba:	41 50       	subi	r20, 0x01	; 1
    e8bc:	50 40       	sbci	r21, 0x00	; 0
    e8be:	e1 f7       	brne	.-8      	; 0xe8b8 <_Z19Calibration_Of_Pumpv+0x23a>
		if(answer)
    e8c0:	88 23       	and	r24, r24
    e8c2:	a1 f0       	breq	.+40     	; 0xe8ec <_Z19Calibration_Of_Pumpv+0x26e>
		{
			_sRuble_Parameters.By_Pass_CT = _kSET;
    e8c4:	81 e0       	ldi	r24, 0x01	; 1
    e8c6:	80 93 22 16 	sts	0x1622, r24	; 0x801622 <_sRuble_Parameters+0xbd>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    e8ca:	62 e2       	ldi	r22, 0x22	; 34
    e8cc:	76 e1       	ldi	r23, 0x16	; 22
    e8ce:	89 e2       	ldi	r24, 0x29	; 41
    e8d0:	9c e0       	ldi	r25, 0x0C	; 12
    e8d2:	b5 dd       	rcall	.-1174   	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
    e8d4:	64 e1       	ldi	r22, 0x14	; 20
    e8d6:	75 e0       	ldi	r23, 0x05	; 5
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    e8d8:	87 e8       	ldi	r24, 0x87	; 135
    e8da:	91 e1       	ldi	r25, 0x11	; 17
    e8dc:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
		}
		_kMQTT_PUB((unsigned char *)_sPublish_Topic.Calibration_FeedBack,(unsigned char *)_gPub_Buff);
    e8e0:	67 e8       	ldi	r22, 0x87	; 135
    e8e2:	71 e1       	ldi	r23, 0x11	; 17
    e8e4:	83 e5       	ldi	r24, 0x53	; 83
    e8e6:	9e e0       	ldi	r25, 0x0E	; 14
    e8e8:	18 da       	rcall	.-3024   	; 0xdd1a <_Z12MQTT_PublishPhS_>
			_kMQTT_PUB((unsigned char *)_sPublish_Topic.Calibration_FeedBack,(unsigned char *)_gPub_Buff);
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
		}
	}
}
    e8ea:	36 c0       	rjmp	.+108    	; 0xe958 <_Z19Calibration_Of_Pumpv+0x2da>
			_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");	
		}
		else
		{
			sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    e8ec:	68 e2       	ldi	r22, 0x28	; 40
    e8ee:	75 e0       	ldi	r23, 0x05	; 5
    e8f0:	f3 cf       	rjmp	.-26     	; 0xe8d8 <_Z19Calibration_Of_Pumpv+0x25a>
			{
				Lora_Operation();
				
				if(_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble & _eCALIBARATION_SUCCESS)
				{
					answer = 1;
    e8f2:	81 e0       	ldi	r24, 0x01	; 1
				}
			}while ((answer == 0) && ((millis() - previous) < timeout));
			
			memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
    e8f4:	24 ed       	ldi	r18, 0xD4	; 212
    e8f6:	33 e0       	ldi	r19, 0x03	; 3
    e8f8:	e7 e8       	ldi	r30, 0x87	; 135
    e8fa:	f1 e1       	ldi	r31, 0x11	; 17
    e8fc:	df 01       	movw	r26, r30
    e8fe:	a9 01       	movw	r20, r18
    e900:	1d 92       	st	X+, r1
    e902:	41 50       	subi	r20, 0x01	; 1
    e904:	50 40       	sbci	r21, 0x00	; 0
    e906:	e1 f7       	brne	.-8      	; 0xe900 <_Z19Calibration_Of_Pumpv+0x282>
			if(answer)
    e908:	88 23       	and	r24, r24
    e90a:	59 f0       	breq	.+22     	; 0xe922 <_Z19Calibration_Of_Pumpv+0x2a4>
			{
				_sRuble_Parameters.By_Pass_CT = _kSET;
    e90c:	81 e0       	ldi	r24, 0x01	; 1
    e90e:	80 93 22 16 	sts	0x1622, r24	; 0x801622 <_sRuble_Parameters+0xbd>
				_kEEPROM_WRITE(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    e912:	62 e2       	ldi	r22, 0x22	; 34
    e914:	76 e1       	ldi	r23, 0x16	; 22
    e916:	89 e2       	ldi	r24, 0x29	; 41
    e918:	9c e0       	ldi	r25, 0x0C	; 12
    e91a:	91 dd       	rcall	.-1246   	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"true\"}");
    e91c:	64 e1       	ldi	r22, 0x14	; 20
    e91e:	75 e0       	ldi	r23, 0x05	; 5
    e920:	02 c0       	rjmp	.+4      	; 0xe926 <_Z19Calibration_Of_Pumpv+0x2a8>
			}
			else
			{
				sprintf((char *)_gPub_Buff,(const char *)"{\"success\": \"false\"}");
    e922:	68 e2       	ldi	r22, 0x28	; 40
    e924:	75 e0       	ldi	r23, 0x05	; 5
    e926:	87 e8       	ldi	r24, 0x87	; 135
    e928:	91 e1       	ldi	r25, 0x11	; 17
    e92a:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
			}
			_kMQTT_PUB((unsigned char *)_sPublish_Topic.Calibration_FeedBack,(unsigned char *)_gPub_Buff);
    e92e:	67 e8       	ldi	r22, 0x87	; 135
    e930:	71 e1       	ldi	r23, 0x11	; 17
    e932:	83 e5       	ldi	r24, 0x53	; 83
    e934:	9e e0       	ldi	r25, 0x0E	; 14
    e936:	f1 d9       	rcall	.-3102   	; 0xdd1a <_Z12MQTT_PublishPhS_>
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBARATION_SUCCESS;
    e938:	80 91 10 16 	lds	r24, 0x1610	; 0x801610 <_sRuble_Parameters+0xab>
    e93c:	90 e0       	ldi	r25, 0x00	; 0
    e93e:	02 97       	sbiw	r24, 0x02	; 2
			_sWireless_Pump_Param[_sRuble_Parameters.Do_Calibration -2].Response_To_Ruble &= ~_eCALIBRATION_FAIL;
    e940:	2b e0       	ldi	r18, 0x0B	; 11
    e942:	28 9f       	mul	r18, r24
    e944:	f0 01       	movw	r30, r0
    e946:	29 9f       	mul	r18, r25
    e948:	f0 0d       	add	r31, r0
    e94a:	11 24       	eor	r1, r1
    e94c:	ea 53       	subi	r30, 0x3A	; 58
    e94e:	f4 4f       	sbci	r31, 0xF4	; 244
    e950:	82 85       	ldd	r24, Z+10	; 0x0a
    e952:	8c 7f       	andi	r24, 0xFC	; 252
    e954:	82 87       	std	Z+10, r24	; 0x0a
    e956:	c9 cf       	rjmp	.-110    	; 0xe8ea <_Z19Calibration_Of_Pumpv+0x26c>
		}
	}
}
    e958:	6a 96       	adiw	r28, 0x1a	; 26
    e95a:	0f b6       	in	r0, 0x3f	; 63
    e95c:	f8 94       	cli
    e95e:	de bf       	out	0x3e, r29	; 62
    e960:	0f be       	out	0x3f, r0	; 63
    e962:	cd bf       	out	0x3d, r28	; 61
    e964:	df 91       	pop	r29
    e966:	cf 91       	pop	r28
    e968:	1f 91       	pop	r17
    e96a:	0f 91       	pop	r16
    e96c:	ff 90       	pop	r15
    e96e:	ef 90       	pop	r14
    e970:	df 90       	pop	r13
    e972:	cf 90       	pop	r12
    e974:	bf 90       	pop	r11
    e976:	af 90       	pop	r10
    e978:	9f 90       	pop	r9
    e97a:	8f 90       	pop	r8
    e97c:	7f 90       	pop	r7
    e97e:	6f 90       	pop	r6
    e980:	5f 90       	pop	r5
    e982:	4f 90       	pop	r4
    e984:	3f 90       	pop	r3
    e986:	2f 90       	pop	r2
    e988:	08 95       	ret

0000e98a <_Z14Faults_Handlerv>:


void Faults_Handler(void)
{
    e98a:	4f 92       	push	r4
    e98c:	5f 92       	push	r5
    e98e:	6f 92       	push	r6
    e990:	7f 92       	push	r7
    e992:	8f 92       	push	r8
    e994:	9f 92       	push	r9
    e996:	af 92       	push	r10
    e998:	bf 92       	push	r11
    e99a:	cf 92       	push	r12
    e99c:	df 92       	push	r13
    e99e:	ef 92       	push	r14
    e9a0:	ff 92       	push	r15
	
	//_kSERAIL_MON_WRITE("Faults_Handler 1 ");
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation > 1)
    e9a2:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    e9a6:	82 30       	cpi	r24, 0x02	; 2
    e9a8:	08 f4       	brcc	.+2      	; 0xe9ac <_Z14Faults_Handlerv+0x22>
    e9aa:	52 c0       	rjmp	.+164    	; 0xea50 <_Z14Faults_Handlerv+0xc6>
	{
		if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    e9ac:	90 91 8c 15 	lds	r25, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    e9b0:	29 2f       	mov	r18, r25
    e9b2:	2d 7f       	andi	r18, 0xFD	; 253
    e9b4:	21 30       	cpi	r18, 0x01	; 1
    e9b6:	19 f0       	breq	.+6      	; 0xe9be <_Z14Faults_Handlerv+0x34>
    e9b8:	95 30       	cpi	r25, 0x05	; 5
    e9ba:	09 f0       	breq	.+2      	; 0xe9be <_Z14Faults_Handlerv+0x34>
    e9bc:	fb c2       	rjmp	.+1526   	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
		_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
		{
			if(_sRuble_Parameters.Wirelss_Pump_Status == _kON)
    e9be:	90 91 25 16 	lds	r25, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
    e9c2:	91 30       	cpi	r25, 0x01	; 1
    e9c4:	09 f0       	breq	.+2      	; 0xe9c8 <_Z14Faults_Handlerv+0x3e>
    e9c6:	f6 c2       	rjmp	.+1516   	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
			{
				/* check faults */
				//_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults;
				if((_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eR_PHASE_STATUS) !=  _eR_PHASE_STATUS||
    e9c8:	90 e0       	ldi	r25, 0x00	; 0
    e9ca:	02 97       	sbiw	r24, 0x02	; 2
    e9cc:	2b e0       	ldi	r18, 0x0B	; 11
    e9ce:	28 9f       	mul	r18, r24
    e9d0:	f0 01       	movw	r30, r0
    e9d2:	29 9f       	mul	r18, r25
    e9d4:	f0 0d       	add	r31, r0
    e9d6:	11 24       	eor	r1, r1
    e9d8:	ea 53       	subi	r30, 0x3A	; 58
    e9da:	f4 4f       	sbci	r31, 0xF4	; 244
    e9dc:	80 85       	ldd	r24, Z+8	; 0x08
    e9de:	91 85       	ldd	r25, Z+9	; 0x09
    e9e0:	9c 01       	movw	r18, r24
    e9e2:	23 70       	andi	r18, 0x03	; 3
    e9e4:	33 27       	eor	r19, r19
    e9e6:	23 30       	cpi	r18, 0x03	; 3
    e9e8:	31 05       	cpc	r19, r1
    e9ea:	39 f4       	brne	.+14     	; 0xe9fa <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eY_PHASE_STATUS) != _eY_PHASE_STATUS    ||
    e9ec:	82 ff       	sbrs	r24, 2
    e9ee:	05 c0       	rjmp	.+10     	; 0xe9fa <_Z14Faults_Handlerv+0x70>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eB_PHASE_STATUS) != _eB_PHASE_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eDRY_RUN_STATUS) == _eDRY_RUN_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _eLINE_FAULT_STATUS) ==  _eLINE_FAULT_STATUS ||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_OVERLOAD) ==  _ePUMP_OVERLOAD||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _eMANUAL_MODE) == _eMANUAL_MODE /*||
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults  & _ePUMP_STATUS) != _ePUMP_STATUS*/ ||
    e9f0:	88 7b       	andi	r24, 0xB8	; 184
    e9f2:	92 70       	andi	r25, 0x02	; 2
    e9f4:	89 2b       	or	r24, r25
    e9f6:	09 f4       	brne	.+2      	; 0xe9fa <_Z14Faults_Handlerv+0x70>
    e9f8:	dd c2       	rjmp	.+1466   	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
				   (_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults & _ePUMP_NOT_WORKING)  == _ePUMP_NOT_WORKING /*||
				   _sRuble_Parameters.Update_Local_Date[2] == 70*/)
				{
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    e9fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    e9fe:	81 30       	cpi	r24, 0x01	; 1
    ea00:	d1 f4       	brne	.+52     	; 0xea36 <_Z14Faults_Handlerv+0xac>
					{
						_kSERAIL_MON_WRITE("Wireless Pump Fault ocuure............ ");
    ea02:	68 ec       	ldi	r22, 0xC8	; 200
    ea04:	75 e2       	ldi	r23, 0x25	; 37
    ea06:	8f e6       	ldi	r24, 0x6F	; 111
    ea08:	96 e1       	ldi	r25, 0x16	; 22
    ea0a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(_sWireless_Pump_Param[_sRuble_Parameters.Pump_Selected_For_Irrigation-2].Indication_Of_Faults);
    ea0e:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    ea12:	90 e0       	ldi	r25, 0x00	; 0
    ea14:	02 97       	sbiw	r24, 0x02	; 2
    ea16:	2b e0       	ldi	r18, 0x0B	; 11
    ea18:	28 9f       	mul	r18, r24
    ea1a:	f0 01       	movw	r30, r0
    ea1c:	29 9f       	mul	r18, r25
    ea1e:	f0 0d       	add	r31, r0
    ea20:	11 24       	eor	r1, r1
    ea22:	ea 53       	subi	r30, 0x3A	; 58
    ea24:	f4 4f       	sbci	r31, 0xF4	; 244
    ea26:	60 85       	ldd	r22, Z+8	; 0x08
    ea28:	71 85       	ldd	r23, Z+9	; 0x09
    ea2a:	4a e0       	ldi	r20, 0x0A	; 10
    ea2c:	50 e0       	ldi	r21, 0x00	; 0
    ea2e:	8f e6       	ldi	r24, 0x6F	; 111
    ea30:	96 e1       	ldi	r25, 0x16	; 22
    ea32:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
					}
					_sPump_Parameter.Irrigation_Status = _eWIRELESS_PUMP_FAIL_FAULT;
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    ea36:	84 e0       	ldi	r24, 0x04	; 4
    ea38:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
					_sRuble_Parameters.Publish_Topic  |= _ePUB_RUBLE_FAULTS; 
    ea3c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ea40:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ea44:	82 60       	ori	r24, 0x02	; 2
    ea46:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ea4a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    ea4e:	b2 c2       	rjmp	.+1380   	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
		return ;
	}
	
	
	
	if(_sPump_Parameter.Irrigation_Status != 0)
    ea50:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    ea54:	88 23       	and	r24, r24
    ea56:	41 f0       	breq	.+16     	; 0xea68 <_Z14Faults_Handlerv+0xde>
	{
		if(_gfault_Occure == 0)
    ea58:	80 91 9b 0c 	lds	r24, 0x0C9B	; 0x800c9b <_gfault_Occure>
    ea5c:	90 91 9c 0c 	lds	r25, 0x0C9C	; 0x800c9c <_gfault_Occure+0x1>
    ea60:	89 2b       	or	r24, r25
    ea62:	11 f4       	brne	.+4      	; 0xea68 <_Z14Faults_Handlerv+0xde>
		{
			_sPump_Parameter.Irrigation_Status = 0;
    ea64:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
		}	
	}
	
	
	
	if(_sRuble_Parameters.Read_Ct_Value_Timer)
    ea68:	80 91 81 15 	lds	r24, 0x1581	; 0x801581 <_sRuble_Parameters+0x1c>
    ea6c:	90 91 82 15 	lds	r25, 0x1582	; 0x801582 <_sRuble_Parameters+0x1d>
    ea70:	89 2b       	or	r24, r25
    ea72:	e9 f0       	breq	.+58     	; 0xeaae <_Z14Faults_Handlerv+0x124>
	{
		if(fault_occure)
    ea74:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
    ea78:	88 23       	and	r24, r24
    ea7a:	39 f0       	breq	.+14     	; 0xea8a <_Z14Faults_Handlerv+0x100>
		{
			fault_occure = _kRESET;
    ea7c:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer++;
    ea80:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ea84:	8f 5f       	subi	r24, 0xFF	; 255
    ea86:	80 93 93 0c 	sts	0x0C93, r24	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
		}
		
		_sRuble_Parameters.Read_Ct_Value_Timer = _kRESET;
    ea8a:	10 92 82 15 	sts	0x1582, r1	; 0x801582 <_sRuble_Parameters+0x1d>
    ea8e:	10 92 81 15 	sts	0x1581, r1	; 0x801581 <_sRuble_Parameters+0x1c>
		_sPump_Parameter.Pump_Run_Current = RUBLE_PUMP_CURRENT.calcIrms(_kCT_AVERAGE_TURNS);
    ea92:	68 ec       	ldi	r22, 0xC8	; 200
    ea94:	75 e0       	ldi	r23, 0x05	; 5
    ea96:	81 ea       	ldi	r24, 0xA1	; 161
    ea98:	9c e0       	ldi	r25, 0x0C	; 12
    ea9a:	0e 94 3c d5 	call	0x1aa78	; 0x1aa78 <_ZN13EnergyMonitor8calcIrmsEj>
    ea9e:	60 93 5f 15 	sts	0x155F, r22	; 0x80155f <_sPump_Parameter+0x4>
    eaa2:	70 93 60 15 	sts	0x1560, r23	; 0x801560 <_sPump_Parameter+0x5>
    eaa6:	80 93 61 15 	sts	0x1561, r24	; 0x801561 <_sPump_Parameter+0x6>
    eaaa:	90 93 62 15 	sts	0x1562, r25	; 0x801562 <_sPump_Parameter+0x7>
	}
	
	
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kWIRED_PUMP_NUMBER)
    eaae:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    eab2:	81 30       	cpi	r24, 0x01	; 1
    eab4:	51 f5       	brne	.+84     	; 0xeb0a <_Z14Faults_Handlerv+0x180>
	{
		if((Check_Phase()) == 1)
    eab6:	dc dc       	rcall	.-1608   	; 0xe470 <_Z11Check_Phasev>
    eab8:	81 30       	cpi	r24, 0x01	; 1
    eaba:	21 f5       	brne	.+72     	; 0xeb04 <_Z14Faults_Handlerv+0x17a>
		{
			if(_kGPIO_GET(_kPUMP_1) == _kPUMP_ON)
    eabc:	8a e0       	ldi	r24, 0x0A	; 10
    eabe:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    eac2:	89 2b       	or	r24, r25
    eac4:	59 f4       	brne	.+22     	; 0xeadc <_Z14Faults_Handlerv+0x152>
			{
				if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    eac6:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    eaca:	98 2f       	mov	r25, r24
    eacc:	9d 7f       	andi	r25, 0xFD	; 253
    eace:	91 30       	cpi	r25, 0x01	; 1
    ead0:	11 f0       	breq	.+4      	; 0xead6 <_Z14Faults_Handlerv+0x14c>
    ead2:	85 30       	cpi	r24, 0x05	; 5
    ead4:	19 f4       	brne	.+6      	; 0xeadc <_Z14Faults_Handlerv+0x152>
				_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
				{
					_sPump_Parameter.Irrigation_Status = _eTHREE_PHASE_POWER_INT;
    ead6:	8c e0       	ldi	r24, 0x0C	; 12
    ead8:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
				}
			}
			if(!_sRuble_Parameters.Line_Fault_Flag)
    eadc:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    eae0:	81 11       	cpse	r24, r1
    eae2:	15 c0       	rjmp	.+42     	; 0xeb0e <_Z14Faults_Handlerv+0x184>
			{
				_sRuble_Parameters.Line_Fault_Flag = _kSET;
    eae4:	81 e0       	ldi	r24, 0x01	; 1
    eae6:	80 93 19 16 	sts	0x1619, r24	; 0x801619 <_sRuble_Parameters+0xb4>
				_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    eaea:	84 e0       	ldi	r24, 0x04	; 4
    eaec:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
				_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_FAULTS;
    eaf0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    eaf4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    eaf8:	82 60       	ori	r24, 0x02	; 2
    eafa:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    eafe:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    eb02:	05 c0       	rjmp	.+10     	; 0xeb0e <_Z14Faults_Handlerv+0x184>
			}
		}
		else
		{
			if(_sRuble_Parameters.Line_Fault_Flag)
    eb04:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
    eb08:	81 11       	cpse	r24, r1
			{
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
    eb0a:	10 92 19 16 	sts	0x1619, r1	; 0x801619 <_sRuble_Parameters+0xb4>
		_sRuble_Parameters.Line_Fault_Flag = _kRESET;
	}
	
	
	
	if(!_sRuble_Parameters.By_Pass_CT)
    eb0e:	80 91 22 16 	lds	r24, 0x1622	; 0x801622 <_sRuble_Parameters+0xbd>
    eb12:	88 23       	and	r24, r24
    eb14:	09 f4       	brne	.+2      	; 0xeb18 <_Z14Faults_Handlerv+0x18e>
    eb16:	4e c2       	rjmp	.+1180   	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
	{
		return;
	}
	
	if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    eb18:	c0 90 5f 15 	lds	r12, 0x155F	; 0x80155f <_sPump_Parameter+0x4>
    eb1c:	d0 90 60 15 	lds	r13, 0x1560	; 0x801560 <_sPump_Parameter+0x5>
    eb20:	e0 90 61 15 	lds	r14, 0x1561	; 0x801561 <_sPump_Parameter+0x6>
    eb24:	f0 90 62 15 	lds	r15, 0x1562	; 0x801562 <_sPump_Parameter+0x7>
    eb28:	40 90 5b 15 	lds	r4, 0x155B	; 0x80155b <_sPump_Parameter>
    eb2c:	50 90 5c 15 	lds	r5, 0x155C	; 0x80155c <_sPump_Parameter+0x1>
    eb30:	60 90 5d 15 	lds	r6, 0x155D	; 0x80155d <_sPump_Parameter+0x2>
    eb34:	70 90 5e 15 	lds	r7, 0x155E	; 0x80155e <_sPump_Parameter+0x3>
    eb38:	20 e0       	ldi	r18, 0x00	; 0
    eb3a:	30 e0       	ldi	r19, 0x00	; 0
    eb3c:	48 ec       	ldi	r20, 0xC8	; 200
    eb3e:	52 e4       	ldi	r21, 0x42	; 66
    eb40:	c3 01       	movw	r24, r6
    eb42:	b2 01       	movw	r22, r4
    eb44:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
    eb48:	4b 01       	movw	r8, r22
    eb4a:	5c 01       	movw	r10, r24
    eb4c:	20 e0       	ldi	r18, 0x00	; 0
    eb4e:	30 e0       	ldi	r19, 0x00	; 0
    eb50:	40 e7       	ldi	r20, 0x70	; 112
    eb52:	51 e4       	ldi	r21, 0x41	; 65
    eb54:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    eb58:	9b 01       	movw	r18, r22
    eb5a:	ac 01       	movw	r20, r24
    eb5c:	c7 01       	movw	r24, r14
    eb5e:	b6 01       	movw	r22, r12
    eb60:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
    eb64:	87 ff       	sbrs	r24, 7
    eb66:	43 c0       	rjmp	.+134    	; 0xebee <_Z14Faults_Handlerv+0x264>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_ON)
    eb68:	20 91 6d 15 	lds	r18, 0x156D	; 0x80156d <_sRuble_Parameters+0x8>
    eb6c:	30 91 6e 15 	lds	r19, 0x156E	; 0x80156e <_sRuble_Parameters+0x9>
    eb70:	40 91 6f 15 	lds	r20, 0x156F	; 0x80156f <_sRuble_Parameters+0xa>
    eb74:	50 91 70 15 	lds	r21, 0x1570	; 0x801570 <_sRuble_Parameters+0xb>
    eb78:	60 91 71 15 	lds	r22, 0x1571	; 0x801571 <_sRuble_Parameters+0xc>
    eb7c:	70 91 72 15 	lds	r23, 0x1572	; 0x801572 <_sRuble_Parameters+0xd>
    eb80:	80 91 73 15 	lds	r24, 0x1573	; 0x801573 <_sRuble_Parameters+0xe>
    eb84:	90 91 74 15 	lds	r25, 0x1574	; 0x801574 <_sRuble_Parameters+0xf>
    eb88:	a2 e0       	ldi	r26, 0x02	; 2
    eb8a:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    eb8e:	79 f5       	brne	.+94     	; 0xebee <_Z14Faults_Handlerv+0x264>
		{
			fault_occure = _kRESET;
    eb90:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    eb94:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_OFF;
    eb98:	84 e0       	ldi	r24, 0x04	; 4
    eb9a:	80 93 6d 15 	sts	0x156D, r24	; 0x80156d <_sRuble_Parameters+0x8>
    eb9e:	10 92 6e 15 	sts	0x156E, r1	; 0x80156e <_sRuble_Parameters+0x9>
    eba2:	10 92 6f 15 	sts	0x156F, r1	; 0x80156f <_sRuble_Parameters+0xa>
    eba6:	10 92 70 15 	sts	0x1570, r1	; 0x801570 <_sRuble_Parameters+0xb>
    ebaa:	10 92 71 15 	sts	0x1571, r1	; 0x801571 <_sRuble_Parameters+0xc>
    ebae:	10 92 72 15 	sts	0x1572, r1	; 0x801572 <_sRuble_Parameters+0xd>
    ebb2:	10 92 73 15 	sts	0x1573, r1	; 0x801573 <_sRuble_Parameters+0xe>
    ebb6:	10 92 74 15 	sts	0x1574, r1	; 0x801574 <_sRuble_Parameters+0xf>
			_sGSM_Query.SMS_Alert |= _ePUMP_OFF;
    ebba:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    ebbe:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    ebc2:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    ebc6:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    ebca:	84 60       	ori	r24, 0x04	; 4
    ebcc:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    ebd0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    ebd4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    ebd8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    ebdc:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ebe0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ebe4:	84 60       	ori	r24, 0x04	; 4
    ebe6:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ebea:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
		}
	}
	
	if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 18))
    ebee:	20 e0       	ldi	r18, 0x00	; 0
    ebf0:	30 e0       	ldi	r19, 0x00	; 0
    ebf2:	40 e9       	ldi	r20, 0x90	; 144
    ebf4:	51 e4       	ldi	r21, 0x41	; 65
    ebf6:	c5 01       	movw	r24, r10
    ebf8:	b4 01       	movw	r22, r8
    ebfa:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    ebfe:	9b 01       	movw	r18, r22
    ec00:	ac 01       	movw	r20, r24
    ec02:	c7 01       	movw	r24, r14
    ec04:	b6 01       	movw	r22, r12
    ec06:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    ec0a:	18 16       	cp	r1, r24
    ec0c:	0c f0       	brlt	.+2      	; 0xec10 <_Z14Faults_Handlerv+0x286>
    ec0e:	43 c0       	rjmp	.+134    	; 0xec96 <_Z14Faults_Handlerv+0x30c>
	{
		if(_sRuble_Parameters.Pump_On_Flag == _ePUMP_OFF)
    ec10:	20 91 6d 15 	lds	r18, 0x156D	; 0x80156d <_sRuble_Parameters+0x8>
    ec14:	30 91 6e 15 	lds	r19, 0x156E	; 0x80156e <_sRuble_Parameters+0x9>
    ec18:	40 91 6f 15 	lds	r20, 0x156F	; 0x80156f <_sRuble_Parameters+0xa>
    ec1c:	50 91 70 15 	lds	r21, 0x1570	; 0x801570 <_sRuble_Parameters+0xb>
    ec20:	60 91 71 15 	lds	r22, 0x1571	; 0x801571 <_sRuble_Parameters+0xc>
    ec24:	70 91 72 15 	lds	r23, 0x1572	; 0x801572 <_sRuble_Parameters+0xd>
    ec28:	80 91 73 15 	lds	r24, 0x1573	; 0x801573 <_sRuble_Parameters+0xe>
    ec2c:	90 91 74 15 	lds	r25, 0x1574	; 0x801574 <_sRuble_Parameters+0xf>
    ec30:	a4 e0       	ldi	r26, 0x04	; 4
    ec32:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
    ec36:	79 f5       	brne	.+94     	; 0xec96 <_Z14Faults_Handlerv+0x30c>
		{
			fault_occure = _kRESET;
    ec38:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
			faults_check_timer = _kRESET;
    ec3c:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
			_sGSM_Query.SMS_Alert |=  _ePUMP_ON;
    ec40:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    ec44:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    ec48:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    ec4c:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    ec50:	82 60       	ori	r24, 0x02	; 2
    ec52:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    ec56:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    ec5a:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    ec5e:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
			_sRuble_Parameters.Pump_On_Flag = _ePUMP_ON;
    ec62:	82 e0       	ldi	r24, 0x02	; 2
    ec64:	80 93 6d 15 	sts	0x156D, r24	; 0x80156d <_sRuble_Parameters+0x8>
    ec68:	10 92 6e 15 	sts	0x156E, r1	; 0x80156e <_sRuble_Parameters+0x9>
    ec6c:	10 92 6f 15 	sts	0x156F, r1	; 0x80156f <_sRuble_Parameters+0xa>
    ec70:	10 92 70 15 	sts	0x1570, r1	; 0x801570 <_sRuble_Parameters+0xb>
    ec74:	10 92 71 15 	sts	0x1571, r1	; 0x801571 <_sRuble_Parameters+0xc>
    ec78:	10 92 72 15 	sts	0x1572, r1	; 0x801572 <_sRuble_Parameters+0xd>
    ec7c:	10 92 73 15 	sts	0x1573, r1	; 0x801573 <_sRuble_Parameters+0xe>
    ec80:	10 92 74 15 	sts	0x1574, r1	; 0x801574 <_sRuble_Parameters+0xf>
			_sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    ec84:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ec88:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ec8c:	84 60       	ori	r24, 0x04	; 4
    ec8e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ec92:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 9 ");
	
	
	if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_MANUAL || ( (_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer > _kSTART_MONITORING_PUMP_FAULTS_TIMER) && ((_sRuble_Parameters.Irrigating_Plot !=0) ||( _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET) || (_sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))))
    ec96:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    ec9a:	82 30       	cpi	r24, 0x02	; 2
    ec9c:	a9 f0       	breq	.+42     	; 0xecc8 <_Z14Faults_Handlerv+0x33e>
    ec9e:	80 91 7f 15 	lds	r24, 0x157F	; 0x80157f <_sRuble_Parameters+0x1a>
    eca2:	90 91 80 15 	lds	r25, 0x1580	; 0x801580 <_sRuble_Parameters+0x1b>
    eca6:	89 37       	cpi	r24, 0x79	; 121
    eca8:	91 05       	cpc	r25, r1
    ecaa:	08 f4       	brcc	.+2      	; 0xecae <_Z14Faults_Handlerv+0x324>
    ecac:	83 c1       	rjmp	.+774    	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
    ecae:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
    ecb2:	81 11       	cpse	r24, r1
    ecb4:	09 c0       	rjmp	.+18     	; 0xecc8 <_Z14Faults_Handlerv+0x33e>
    ecb6:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
    ecba:	81 11       	cpse	r24, r1
    ecbc:	05 c0       	rjmp	.+10     	; 0xecc8 <_Z14Faults_Handlerv+0x33e>
    ecbe:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
    ecc2:	81 30       	cpi	r24, 0x01	; 1
    ecc4:	09 f0       	breq	.+2      	; 0xecc8 <_Z14Faults_Handlerv+0x33e>
    ecc6:	76 c1       	rjmp	.+748    	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
	// || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].On_Off_Status == _kSET || _sExtra_Plot[_kFOOGER_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Auto_Operation == _kSET))
	{
		_sRuble_Parameters.Start_Monitoring_Pump_Faults_Timer = _kSTART_MONITORING_PUMP_FAULTS_TIMER+1;   /* don't want to overflow */
    ecc8:	89 e7       	ldi	r24, 0x79	; 121
    ecca:	90 e0       	ldi	r25, 0x00	; 0
    eccc:	90 93 80 15 	sts	0x1580, r25	; 0x801580 <_sRuble_Parameters+0x1b>
    ecd0:	80 93 7f 15 	sts	0x157F, r24	; 0x80157f <_sRuble_Parameters+0x1a>
		
		if(_sPump_Parameter.Pump_Run_Current > (_sPump_Parameter.Pump_Nominal_Current) + ((_sPump_Parameter.Pump_Nominal_Current/100) * 32))
    ecd4:	20 e0       	ldi	r18, 0x00	; 0
    ecd6:	30 e0       	ldi	r19, 0x00	; 0
    ecd8:	40 e0       	ldi	r20, 0x00	; 0
    ecda:	52 e4       	ldi	r21, 0x42	; 66
    ecdc:	c5 01       	movw	r24, r10
    ecde:	b4 01       	movw	r22, r8
    ece0:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    ece4:	a3 01       	movw	r20, r6
    ece6:	92 01       	movw	r18, r4
    ece8:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
    ecec:	9b 01       	movw	r18, r22
    ecee:	ac 01       	movw	r20, r24
    ecf0:	c7 01       	movw	r24, r14
    ecf2:	b6 01       	movw	r22, r12
    ecf4:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    ecf8:	18 16       	cp	r1, r24
    ecfa:	0c f0       	brlt	.+2      	; 0xecfe <_Z14Faults_Handlerv+0x374>
    ecfc:	52 c0       	rjmp	.+164    	; 0xeda2 <_Z14Faults_Handlerv+0x418>
		{
			if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_OVER_LOAD))
    ecfe:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    ed02:	89 30       	cpi	r24, 0x09	; 9
    ed04:	09 f4       	brne	.+2      	; 0xed08 <_Z14Faults_Handlerv+0x37e>
    ed06:	53 c0       	rjmp	.+166    	; 0xedae <_Z14Faults_Handlerv+0x424>
			{
				fault_occure = _eIRRIG_STAT_OVER_LOAD;
    ed08:	89 e0       	ldi	r24, 0x09	; 9
    ed0a:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
				if(_sRuble_Parameters.Debug_Mode == _kSET)
    ed0e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ed12:	81 30       	cpi	r24, 0x01	; 1
    ed14:	71 f4       	brne	.+28     	; 0xed32 <_Z14Faults_Handlerv+0x3a8>
				{
					_kSERAIL_MON_WRITE("Pump Overlaoded ");
    ed16:	67 eb       	ldi	r22, 0xB7	; 183
    ed18:	75 e2       	ldi	r23, 0x25	; 37
    ed1a:	8f e6       	ldi	r24, 0x6F	; 111
    ed1c:	96 e1       	ldi	r25, 0x16	; 22
    ed1e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    ed22:	4a e0       	ldi	r20, 0x0A	; 10
    ed24:	50 e0       	ldi	r21, 0x00	; 0
    ed26:	60 91 93 0c 	lds	r22, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ed2a:	8f e6       	ldi	r24, 0x6F	; 111
    ed2c:	96 e1       	ldi	r25, 0x16	; 22
    ed2e:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
				}
				if(faults_check_timer > 3)
    ed32:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ed36:	84 30       	cpi	r24, 0x04	; 4
    ed38:	d0 f1       	brcs	.+116    	; 0xedae <_Z14Faults_Handlerv+0x424>
				{
					faults_check_timer = 0;
    ed3a:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    ed3e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ed42:	81 30       	cpi	r24, 0x01	; 1
    ed44:	51 f4       	brne	.+20     	; 0xed5a <_Z14Faults_Handlerv+0x3d0>
					{
						_kSERAIL_MON_WRITE("Pump Overlaoded");
    ed46:	67 ea       	ldi	r22, 0xA7	; 167
    ed48:	75 e2       	ldi	r23, 0x25	; 37
    ed4a:	8f e6       	ldi	r24, 0x6F	; 111
    ed4c:	96 e1       	ldi	r25, 0x16	; 22
    ed4e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_CLEAR();
    ed52:	8f e6       	ldi	r24, 0x6F	; 111
    ed54:	96 e1       	ldi	r25, 0x16	; 22
    ed56:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					}
					_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_OVER_LOAD;
    ed5a:	89 e0       	ldi	r24, 0x09	; 9
    ed5c:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
					_gfault_Occure = _kFAULT_RESET_TIMER;
    ed60:	84 e6       	ldi	r24, 0x64	; 100
    ed62:	90 e0       	ldi	r25, 0x00	; 0
    ed64:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    ed68:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
					_sGSM_Query.SMS_Alert |=  _ePUMP_OVERLOAD;
    ed6c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    ed70:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    ed74:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    ed78:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    ed7c:	80 62       	ori	r24, 0x20	; 32
    ed7e:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    ed82:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    ed86:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    ed8a:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
					_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    ed8e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ed92:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ed96:	82 60       	ori	r24, 0x02	; 2
    ed98:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ed9c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    eda0:	06 c0       	rjmp	.+12     	; 0xedae <_Z14Faults_Handlerv+0x424>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_OVER_LOAD)
    eda2:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
    eda6:	89 30       	cpi	r24, 0x09	; 9
    eda8:	11 f4       	brne	.+4      	; 0xedae <_Z14Faults_Handlerv+0x424>
			{
				fault_occure = _kRESET;
    edaa:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
		
		//_kSERAIL_MON_WRITE("Faults_Handler 10 ");
		
		/*********if pump consume less current which is 60% less than nominal current then there is dry run fault *******************/
		
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 58))
    edae:	c0 90 5f 15 	lds	r12, 0x155F	; 0x80155f <_sPump_Parameter+0x4>
    edb2:	d0 90 60 15 	lds	r13, 0x1560	; 0x801560 <_sPump_Parameter+0x5>
    edb6:	e0 90 61 15 	lds	r14, 0x1561	; 0x801561 <_sPump_Parameter+0x6>
    edba:	f0 90 62 15 	lds	r15, 0x1562	; 0x801562 <_sPump_Parameter+0x7>
    edbe:	20 e0       	ldi	r18, 0x00	; 0
    edc0:	30 e0       	ldi	r19, 0x00	; 0
    edc2:	48 ec       	ldi	r20, 0xC8	; 200
    edc4:	52 e4       	ldi	r21, 0x42	; 66
    edc6:	60 91 5b 15 	lds	r22, 0x155B	; 0x80155b <_sPump_Parameter>
    edca:	70 91 5c 15 	lds	r23, 0x155C	; 0x80155c <_sPump_Parameter+0x1>
    edce:	80 91 5d 15 	lds	r24, 0x155D	; 0x80155d <_sPump_Parameter+0x2>
    edd2:	90 91 5e 15 	lds	r25, 0x155E	; 0x80155e <_sPump_Parameter+0x3>
    edd6:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
    edda:	4b 01       	movw	r8, r22
    eddc:	5c 01       	movw	r10, r24
    edde:	20 e0       	ldi	r18, 0x00	; 0
    ede0:	30 e0       	ldi	r19, 0x00	; 0
    ede2:	48 e6       	ldi	r20, 0x68	; 104
    ede4:	52 e4       	ldi	r21, 0x42	; 66
    ede6:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    edea:	9b 01       	movw	r18, r22
    edec:	ac 01       	movw	r20, r24
    edee:	c7 01       	movw	r24, r14
    edf0:	b6 01       	movw	r22, r12
    edf2:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
    edf6:	87 ff       	sbrs	r24, 7
    edf8:	63 c0       	rjmp	.+198    	; 0xeec0 <_Z14Faults_Handlerv+0x536>
		{
			if(_sPump_Parameter.Pump_Run_Current > ((_sPump_Parameter.Pump_Nominal_Current/100) * 20))
    edfa:	20 e0       	ldi	r18, 0x00	; 0
    edfc:	30 e0       	ldi	r19, 0x00	; 0
    edfe:	40 ea       	ldi	r20, 0xA0	; 160
    ee00:	51 e4       	ldi	r21, 0x41	; 65
    ee02:	c5 01       	movw	r24, r10
    ee04:	b4 01       	movw	r22, r8
    ee06:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    ee0a:	9b 01       	movw	r18, r22
    ee0c:	ac 01       	movw	r20, r24
    ee0e:	c7 01       	movw	r24, r14
    ee10:	b6 01       	movw	r22, r12
    ee12:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
    ee16:	18 16       	cp	r1, r24
    ee18:	0c f0       	brlt	.+2      	; 0xee1c <_Z14Faults_Handlerv+0x492>
    ee1a:	58 c0       	rjmp	.+176    	; 0xeecc <_Z14Faults_Handlerv+0x542>
			{
				if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_DRY_RUN))
    ee1c:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    ee20:	81 30       	cpi	r24, 0x01	; 1
    ee22:	09 f4       	brne	.+2      	; 0xee26 <_Z14Faults_Handlerv+0x49c>
    ee24:	53 c0       	rjmp	.+166    	; 0xeecc <_Z14Faults_Handlerv+0x542>
				{
					fault_occure = _eIRRIG_STAT_DRY_RUN;
    ee26:	81 e0       	ldi	r24, 0x01	; 1
    ee28:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
					if(_sRuble_Parameters.Debug_Mode == _kSET)
    ee2c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ee30:	81 30       	cpi	r24, 0x01	; 1
    ee32:	71 f4       	brne	.+28     	; 0xee50 <_Z14Faults_Handlerv+0x4c6>
					{
						_kSERAIL_MON_WRITE("Pump Dry Run ");
    ee34:	69 e9       	ldi	r22, 0x99	; 153
    ee36:	75 e2       	ldi	r23, 0x25	; 37
    ee38:	8f e6       	ldi	r24, 0x6F	; 111
    ee3a:	96 e1       	ldi	r25, 0x16	; 22
    ee3c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						_kSERIAL_MON_PRINT_NUM(faults_check_timer);
    ee40:	4a e0       	ldi	r20, 0x0A	; 10
    ee42:	50 e0       	ldi	r21, 0x00	; 0
    ee44:	60 91 93 0c 	lds	r22, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ee48:	8f e6       	ldi	r24, 0x6F	; 111
    ee4a:	96 e1       	ldi	r25, 0x16	; 22
    ee4c:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
					}
					if(faults_check_timer > 3)
    ee50:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ee54:	84 30       	cpi	r24, 0x04	; 4
    ee56:	d0 f1       	brcs	.+116    	; 0xeecc <_Z14Faults_Handlerv+0x542>
					{
						faults_check_timer = 0;
    ee58:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    ee5c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ee60:	81 30       	cpi	r24, 0x01	; 1
    ee62:	51 f4       	brne	.+20     	; 0xee78 <_Z14Faults_Handlerv+0x4ee>
						{
							_kSERAIL_MON_WRITE("Pump Dry Run");
    ee64:	6c e8       	ldi	r22, 0x8C	; 140
    ee66:	75 e2       	ldi	r23, 0x25	; 37
    ee68:	8f e6       	ldi	r24, 0x6F	; 111
    ee6a:	96 e1       	ldi	r25, 0x16	; 22
    ee6c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
							_kSERIAL_MON_CLEAR();
    ee70:	8f e6       	ldi	r24, 0x6F	; 111
    ee72:	96 e1       	ldi	r25, 0x16	; 22
    ee74:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
						}
						_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_DRY_RUN;
    ee78:	81 e0       	ldi	r24, 0x01	; 1
    ee7a:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
						_gfault_Occure = _kFAULT_RESET_TIMER;
    ee7e:	84 e6       	ldi	r24, 0x64	; 100
    ee80:	90 e0       	ldi	r25, 0x00	; 0
    ee82:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    ee86:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
						_sGSM_Query.SMS_Alert |=  _eDRY_RUN;
    ee8a:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
    ee8e:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
    ee92:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
    ee96:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
    ee9a:	90 61       	ori	r25, 0x10	; 16
    ee9c:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
    eea0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
    eea4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
    eea8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
						_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    eeac:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    eeb0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    eeb4:	82 60       	ori	r24, 0x02	; 2
    eeb6:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    eeba:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    eebe:	06 c0       	rjmp	.+12     	; 0xeecc <_Z14Faults_Handlerv+0x542>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_DRY_RUN)
    eec0:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
    eec4:	81 30       	cpi	r24, 0x01	; 1
    eec6:	11 f4       	brne	.+4      	; 0xeecc <_Z14Faults_Handlerv+0x542>
			{
				fault_occure = _kRESET;
    eec8:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
		}
		
		//_kSERAIL_MON_WRITE("Faults_Handler 11 ");
		
		/*********if pump consume less current which is 90% less than nominal current then there is line fault *******************/
		if(_sPump_Parameter.Pump_Run_Current < ((_sPump_Parameter.Pump_Nominal_Current/100) * 15))
    eecc:	20 e0       	ldi	r18, 0x00	; 0
    eece:	30 e0       	ldi	r19, 0x00	; 0
    eed0:	48 ec       	ldi	r20, 0xC8	; 200
    eed2:	52 e4       	ldi	r21, 0x42	; 66
    eed4:	60 91 5b 15 	lds	r22, 0x155B	; 0x80155b <_sPump_Parameter>
    eed8:	70 91 5c 15 	lds	r23, 0x155C	; 0x80155c <_sPump_Parameter+0x1>
    eedc:	80 91 5d 15 	lds	r24, 0x155D	; 0x80155d <_sPump_Parameter+0x2>
    eee0:	90 91 5e 15 	lds	r25, 0x155E	; 0x80155e <_sPump_Parameter+0x3>
    eee4:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
    eee8:	20 e0       	ldi	r18, 0x00	; 0
    eeea:	30 e0       	ldi	r19, 0x00	; 0
    eeec:	40 e7       	ldi	r20, 0x70	; 112
    eeee:	51 e4       	ldi	r21, 0x41	; 65
    eef0:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    eef4:	9b 01       	movw	r18, r22
    eef6:	ac 01       	movw	r20, r24
    eef8:	60 91 5f 15 	lds	r22, 0x155F	; 0x80155f <_sPump_Parameter+0x4>
    eefc:	70 91 60 15 	lds	r23, 0x1560	; 0x801560 <_sPump_Parameter+0x5>
    ef00:	80 91 61 15 	lds	r24, 0x1561	; 0x801561 <_sPump_Parameter+0x6>
    ef04:	90 91 62 15 	lds	r25, 0x1562	; 0x801562 <_sPump_Parameter+0x7>
    ef08:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
    ef0c:	87 ff       	sbrs	r24, 7
    ef0e:	46 c0       	rjmp	.+140    	; 0xef9c <_Z14Faults_Handlerv+0x612>
		{
			if(_sRuble_Parameters.Operation_Mode == _eOPER_MOD_AUTO || _sRuble_Parameters.Operation_Mode == _eOPER_MOD_TIMER ||
    ef10:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    ef14:	98 2f       	mov	r25, r24
    ef16:	9d 7f       	andi	r25, 0xFD	; 253
    ef18:	91 30       	cpi	r25, 0x01	; 1
    ef1a:	19 f0       	breq	.+6      	; 0xef22 <_Z14Faults_Handlerv+0x598>
    ef1c:	85 30       	cpi	r24, 0x05	; 5
    ef1e:	09 f0       	breq	.+2      	; 0xef22 <_Z14Faults_Handlerv+0x598>
    ef20:	43 c0       	rjmp	.+134    	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
			_sRuble_Parameters.Operation_Mode == _eOPER_MOD_SCHEDULER)
			{
				if(_kGPIO_GET(_kPUMP_1) == _kPUMP_ON)
    ef22:	8a e0       	ldi	r24, 0x0A	; 10
    ef24:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
    ef28:	89 2b       	or	r24, r25
    ef2a:	f1 f5       	brne	.+124    	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
				{
					if((_sPump_Parameter.Irrigation_Status != _eIRRIG_STAT_LINE_FAULT))
    ef2c:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
    ef30:	84 30       	cpi	r24, 0x04	; 4
    ef32:	d1 f1       	breq	.+116    	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
					{
						fault_occure = _eIRRIG_STAT_LINE_FAULT;
						fault_occure = _eIRRIG_STAT_DRY_RUN;
    ef34:	81 e0       	ldi	r24, 0x01	; 1
    ef36:	80 93 94 0c 	sts	0x0C94, r24	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
						if(_sRuble_Parameters.Debug_Mode == _kSET)
    ef3a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ef3e:	81 30       	cpi	r24, 0x01	; 1
    ef40:	31 f4       	brne	.+12     	; 0xef4e <_Z14Faults_Handlerv+0x5c4>
						{
							_kSERAIL_MON_WRITE("Pump Line Fault ");
    ef42:	6b e7       	ldi	r22, 0x7B	; 123
    ef44:	75 e2       	ldi	r23, 0x25	; 37
    ef46:	8f e6       	ldi	r24, 0x6F	; 111
    ef48:	96 e1       	ldi	r25, 0x16	; 22
    ef4a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
						}
						if(faults_check_timer > 3)
    ef4e:	80 91 93 0c 	lds	r24, 0x0C93	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
    ef52:	84 30       	cpi	r24, 0x04	; 4
    ef54:	48 f1       	brcs	.+82     	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
						{
							faults_check_timer = _kRESET;
    ef56:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
							if(_sRuble_Parameters.Debug_Mode == _kSET)
    ef5a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ef5e:	81 30       	cpi	r24, 0x01	; 1
    ef60:	51 f4       	brne	.+20     	; 0xef76 <_Z14Faults_Handlerv+0x5ec>
							{
								_kSERAIL_MON_WRITE("Pump Line Fault");
    ef62:	6b e6       	ldi	r22, 0x6B	; 107
    ef64:	75 e2       	ldi	r23, 0x25	; 37
    ef66:	8f e6       	ldi	r24, 0x6F	; 111
    ef68:	96 e1       	ldi	r25, 0x16	; 22
    ef6a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
								_kSERIAL_MON_CLEAR();
    ef6e:	8f e6       	ldi	r24, 0x6F	; 111
    ef70:	96 e1       	ldi	r25, 0x16	; 22
    ef72:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
							}
							
							_sPump_Parameter.Irrigation_Status = _eIRRIG_STAT_LINE_FAULT;
    ef76:	84 e0       	ldi	r24, 0x04	; 4
    ef78:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
							_gfault_Occure = _kFAULT_RESET_TIMER;
    ef7c:	84 e6       	ldi	r24, 0x64	; 100
    ef7e:	90 e0       	ldi	r25, 0x00	; 0
    ef80:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
    ef84:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
							{
								_sRuble_Parameters.Line_Fault_Flag = _kSET;
								_sGSM_Query.SMS_Alert |=  _eLINE_FAULT_SMS;
							}*/
							
							_sRuble_Parameters.Publish_Topic |=   _ePUB_RUBLE_FAULTS;
    ef88:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ef8c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ef90:	82 60       	ori	r24, 0x02	; 2
    ef92:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ef96:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
    ef9a:	06 c0       	rjmp	.+12     	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
				}
			}
		}
		else
		{
			if(fault_occure == _eIRRIG_STAT_LINE_FAULT)
    ef9c:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
    efa0:	84 30       	cpi	r24, 0x04	; 4
    efa2:	11 f4       	brne	.+4      	; 0xefa8 <_Z14Faults_Handlerv+0x61e>
			{
				fault_occure = _kRESET;
    efa4:	10 92 94 0c 	sts	0x0C94, r1	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
				_sRuble_Parameters.Line_Fault_Flag = _kRESET;
				//_sGSM_Query.SMS_Alert |=  _e3PHASE_POWER_INTERRUPTED;
			}*/
		}
		
		if(fault_occure == _kRESET)
    efa8:	80 91 94 0c 	lds	r24, 0x0C94	; 0x800c94 <_ZZ14Faults_HandlervE12fault_occure>
    efac:	81 11       	cpse	r24, r1
    efae:	02 c0       	rjmp	.+4      	; 0xefb4 <_Z14Faults_Handlerv+0x62a>
		{
			faults_check_timer = _kRESET;
    efb0:	10 92 93 0c 	sts	0x0C93, r1	; 0x800c93 <_ZZ14Faults_HandlervE18faults_check_timer>
		}
	}
	
	//_kSERAIL_MON_WRITE("Faults_Handler 12 ");
}
    efb4:	ff 90       	pop	r15
    efb6:	ef 90       	pop	r14
    efb8:	df 90       	pop	r13
    efba:	cf 90       	pop	r12
    efbc:	bf 90       	pop	r11
    efbe:	af 90       	pop	r10
    efc0:	9f 90       	pop	r9
    efc2:	8f 90       	pop	r8
    efc4:	7f 90       	pop	r7
    efc6:	6f 90       	pop	r6
    efc8:	5f 90       	pop	r5
    efca:	4f 90       	pop	r4
    efcc:	08 95       	ret

0000efce <_Z18Local_Time_Settingv>:
	}
}


void Local_Time_Setting(void)
{
    efce:	0f 93       	push	r16
	_kSERIAL_AT.println(F("AT"));
    efd0:	6a e2       	ldi	r22, 0x2A	; 42
    efd2:	75 e2       	ldi	r23, 0x25	; 37
    efd4:	8c e2       	ldi	r24, 0x2C	; 44
    efd6:	98 e1       	ldi	r25, 0x18	; 24
    efd8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(Send_AT_Command(NULL, "OK",  NULL,3000,2))
    efdc:	02 e0       	ldi	r16, 0x02	; 2
    efde:	28 eb       	ldi	r18, 0xB8	; 184
    efe0:	3b e0       	ldi	r19, 0x0B	; 11
    efe2:	40 e0       	ldi	r20, 0x00	; 0
    efe4:	50 e0       	ldi	r21, 0x00	; 0
    efe6:	6e e1       	ldi	r22, 0x1E	; 30
    efe8:	73 e0       	ldi	r23, 0x03	; 3
    efea:	80 e0       	ldi	r24, 0x00	; 0
    efec:	90 e0       	ldi	r25, 0x00	; 0
    efee:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    eff2:	88 23       	and	r24, r24
    eff4:	a1 f1       	breq	.+104    	; 0xf05e <_Z18Local_Time_Settingv+0x90>
	{			
		_kSERIAL_AT.println(F("ATE0"));
    eff6:	65 e2       	ldi	r22, 0x25	; 37
    eff8:	75 e2       	ldi	r23, 0x25	; 37
    effa:	8c e2       	ldi	r24, 0x2C	; 44
    effc:	98 e1       	ldi	r25, 0x18	; 24
    effe:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    f002:	28 eb       	ldi	r18, 0xB8	; 184
    f004:	3b e0       	ldi	r19, 0x0B	; 11
    f006:	40 e0       	ldi	r20, 0x00	; 0
    f008:	50 e0       	ldi	r21, 0x00	; 0
    f00a:	6e e1       	ldi	r22, 0x1E	; 30
    f00c:	73 e0       	ldi	r23, 0x03	; 3
    f00e:	80 e0       	ldi	r24, 0x00	; 0
    f010:	90 e0       	ldi	r25, 0x00	; 0
    f012:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
		_kSERIAL_AT.println(F("AT+CPIN?"));
    f016:	6c e1       	ldi	r22, 0x1C	; 28
    f018:	75 e2       	ldi	r23, 0x25	; 37
    f01a:	8c e2       	ldi	r24, 0x2C	; 44
    f01c:	98 e1       	ldi	r25, 0x18	; 24
    f01e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		
		if(!Send_AT_Command(NULL, "OK",  NULL,10000,2))
    f022:	20 e1       	ldi	r18, 0x10	; 16
    f024:	37 e2       	ldi	r19, 0x27	; 39
    f026:	40 e0       	ldi	r20, 0x00	; 0
    f028:	50 e0       	ldi	r21, 0x00	; 0
    f02a:	6e e1       	ldi	r22, 0x1E	; 30
    f02c:	73 e0       	ldi	r23, 0x03	; 3
    f02e:	80 e0       	ldi	r24, 0x00	; 0
    f030:	90 e0       	ldi	r25, 0x00	; 0
    f032:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    f036:	81 11       	cpse	r24, r1
    f038:	15 c0       	rjmp	.+42     	; 0xf064 <_Z18Local_Time_Settingv+0x96>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f03a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f03e:	81 30       	cpi	r24, 0x01	; 1
    f040:	51 f4       	brne	.+20     	; 0xf056 <_Z18Local_Time_Settingv+0x88>
			{
				_kSERAIL_MON_WRITE("check sim me");
    f042:	6f e0       	ldi	r22, 0x0F	; 15
    f044:	75 e2       	ldi	r23, 0x25	; 37
    f046:	8f e6       	ldi	r24, 0x6F	; 111
    f048:	96 e1       	ldi	r25, 0x16	; 22
    f04a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f04e:	8f e6       	ldi	r24, 0x6F	; 111
    f050:	96 e1       	ldi	r25, 0x16	; 22
    f052:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Sim_Check = _eSIM_NOT_INSERTED;
    f056:	81 e0       	ldi	r24, 0x01	; 1
    f058:	80 93 14 16 	sts	0x1614, r24	; 0x801614 <_sRuble_Parameters+0xaf>
    f05c:	03 c0       	rjmp	.+6      	; 0xf064 <_Z18Local_Time_Settingv+0x96>
		}
	}
	else
	{
		_sGSM_Query.Gsm_Module_Test = _kSET;
    f05e:	81 e0       	ldi	r24, 0x01	; 1
    f060:	80 93 21 0c 	sts	0x0C21, r24	; 0x800c21 <_sGSM_Query+0x5>
	}
}
    f064:	0f 91       	pop	r16
    f066:	08 95       	ret

0000f068 <_Z21Exra_Plot_Data_EEPROMh>:


void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
    f068:	cf 92       	push	r12
    f06a:	df 92       	push	r13
    f06c:	ef 92       	push	r14
    f06e:	ff 92       	push	r15
    f070:	0f 93       	push	r16
    f072:	1f 93       	push	r17
    f074:	cf 93       	push	r28
    f076:	df 93       	push	r29
    f078:	1f 92       	push	r1
    f07a:	1f 92       	push	r1
    f07c:	cd b7       	in	r28, 0x3d	; 61
    f07e:	de b7       	in	r29, 0x3e	; 62
	if(_sRuble_Parameters.Debug_Mode == _kSET)
    f080:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f084:	08 2f       	mov	r16, r24
    f086:	10 e0       	ldi	r17, 0x00	; 0
    f088:	91 30       	cpi	r25, 0x01	; 1
    f08a:	d9 f0       	breq	.+54     	; 0xf0c2 <_Z21Exra_Plot_Data_EEPROMh+0x5a>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
			_kSERIAL_MON_CLEAR();
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
    f08c:	01 50       	subi	r16, 0x01	; 1
    f08e:	11 09       	sbc	r17, r1
    f090:	8e e1       	ldi	r24, 0x1E	; 30
    f092:	80 9f       	mul	r24, r16
    f094:	90 01       	movw	r18, r0
    f096:	81 9f       	mul	r24, r17
    f098:	30 0d       	add	r19, r0
    f09a:	11 24       	eor	r1, r1
    f09c:	79 01       	movw	r14, r18
    f09e:	88 e8       	ldi	r24, 0x88	; 136
    f0a0:	e8 1a       	sub	r14, r24
    f0a2:	86 ef       	ldi	r24, 0xF6	; 246
    f0a4:	f8 0a       	sbc	r15, r24
    f0a6:	8b e1       	ldi	r24, 0x1B	; 27
    f0a8:	80 9f       	mul	r24, r16
    f0aa:	a0 01       	movw	r20, r0
    f0ac:	81 9f       	mul	r24, r17
    f0ae:	50 0d       	add	r21, r0
    f0b0:	11 24       	eor	r1, r1
    f0b2:	fa 01       	movw	r30, r20
    f0b4:	e1 56       	subi	r30, 0x61	; 97
    f0b6:	f0 4f       	sbci	r31, 0xF0	; 240
    f0b8:	6f 01       	movw	r12, r30
    f0ba:	89 01       	movw	r16, r18
    f0bc:	0d 56       	subi	r16, 0x6D	; 109
    f0be:	16 4f       	sbci	r17, 0xF6	; 246
    f0c0:	5f c0       	rjmp	.+190    	; 0xf180 <_Z21Exra_Plot_Data_EEPROMh+0x118>

void Exra_Plot_Data_EEPROM(unsigned char plot_number)
{
	if(_sRuble_Parameters.Debug_Mode == _kSET)
	{
		Serial.println();
    f0c2:	8f e6       	ldi	r24, 0x6F	; 111
    f0c4:	96 e1       	ldi	r25, 0x16	; 22
    f0c6:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
		_kSERAIL_MON_WRITE_NO_LN("extra plot : ");
    f0ca:	61 e0       	ldi	r22, 0x01	; 1
    f0cc:	75 e2       	ldi	r23, 0x25	; 37
    f0ce:	8f e6       	ldi	r24, 0x6F	; 111
    f0d0:	96 e1       	ldi	r25, 0x16	; 22
    f0d2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM((int )plot_number);
    f0d6:	4a e0       	ldi	r20, 0x0A	; 10
    f0d8:	50 e0       	ldi	r21, 0x00	; 0
    f0da:	b8 01       	movw	r22, r16
    f0dc:	8f e6       	ldi	r24, 0x6F	; 111
    f0de:	96 e1       	ldi	r25, 0x16	; 22
    f0e0:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
		Serial.println();
    f0e4:	8f e6       	ldi	r24, 0x6F	; 111
    f0e6:	96 e1       	ldi	r25, 0x16	; 22
    f0e8:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
		_kSERIAL_MON_CLEAR();
    f0ec:	8f e6       	ldi	r24, 0x6F	; 111
    f0ee:	96 e1       	ldi	r25, 0x16	; 22
    f0f0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		_kSERAIL_MON_WRITE("data saving in eeprom ");
    f0f4:	6a ee       	ldi	r22, 0xEA	; 234
    f0f6:	74 e2       	ldi	r23, 0x24	; 36
    f0f8:	8f e6       	ldi	r24, 0x6F	; 111
    f0fa:	96 e1       	ldi	r25, 0x16	; 22
    f0fc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
    f100:	65 ed       	ldi	r22, 0xD5	; 213
    f102:	74 e2       	ldi	r23, 0x24	; 36
    f104:	8f e6       	ldi	r24, 0x6F	; 111
    f106:	96 e1       	ldi	r25, 0x16	; 22
    f108:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
    f10c:	c8 01       	movw	r24, r16
    f10e:	01 97       	sbiw	r24, 0x01	; 1
    f110:	2b e1       	ldi	r18, 0x1B	; 27
    f112:	28 9f       	mul	r18, r24
    f114:	60 01       	movw	r12, r0
    f116:	29 9f       	mul	r18, r25
    f118:	d0 0c       	add	r13, r0
    f11a:	11 24       	eor	r1, r1
    f11c:	f6 01       	movw	r30, r12
    f11e:	e1 56       	subi	r30, 0x61	; 97
    f120:	f0 4f       	sbci	r31, 0xF0	; 240
    f122:	4a e0       	ldi	r20, 0x0A	; 10
    f124:	50 e0       	ldi	r21, 0x00	; 0
    f126:	61 81       	ldd	r22, Z+1	; 0x01
    f128:	8f e6       	ldi	r24, 0x6F	; 111
    f12a:	96 e1       	ldi	r25, 0x16	; 22
    f12c:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
    f130:	8f e6       	ldi	r24, 0x6F	; 111
    f132:	96 e1       	ldi	r25, 0x16	; 22
    f134:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f138:	e1 2c       	mov	r14, r1
    f13a:	f1 2c       	mov	r15, r1
		{
			Serial.println();
    f13c:	8f e6       	ldi	r24, 0x6F	; 111
    f13e:	96 e1       	ldi	r25, 0x16	; 22
    f140:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
			_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f144:	69 ec       	ldi	r22, 0xC9	; 201
    f146:	74 e2       	ldi	r23, 0x24	; 36
    f148:	8f e6       	ldi	r24, 0x6F	; 111
    f14a:	96 e1       	ldi	r25, 0x16	; 22
    f14c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[plot_number-1].Euro_Valve_Group[i]);
    f150:	f7 01       	movw	r30, r14
    f152:	ec 0d       	add	r30, r12
    f154:	fd 1d       	adc	r31, r13
    f156:	e1 56       	subi	r30, 0x61	; 97
    f158:	f0 4f       	sbci	r31, 0xF0	; 240
    f15a:	4a e0       	ldi	r20, 0x0A	; 10
    f15c:	50 e0       	ldi	r21, 0x00	; 0
    f15e:	65 81       	ldd	r22, Z+5	; 0x05
    f160:	8f e6       	ldi	r24, 0x6F	; 111
    f162:	96 e1       	ldi	r25, 0x16	; 22
    f164:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
			_kSERIAL_MON_CLEAR();
    f168:	8f e6       	ldi	r24, 0x6F	; 111
    f16a:	96 e1       	ldi	r25, 0x16	; 22
    f16c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		_kSERAIL_MON_WRITE("data saving in eeprom ");
		_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number.: ");
		_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[plot_number-1].Extra_Plot_Number);
		_kSERIAL_MON_CLEAR();
	
		for(int i=0;i<_kMAX_VALVE_FOR_1PLOT;i++)
    f170:	ff ef       	ldi	r31, 0xFF	; 255
    f172:	ef 1a       	sub	r14, r31
    f174:	ff 0a       	sbc	r15, r31
    f176:	85 e0       	ldi	r24, 0x05	; 5
    f178:	e8 16       	cp	r14, r24
    f17a:	f1 04       	cpc	r15, r1
    f17c:	f9 f6       	brne	.-66     	; 0xf13c <_Z21Exra_Plot_Data_EEPROMh+0xd4>
    f17e:	86 cf       	rjmp	.-244    	; 0xf08c <_Z21Exra_Plot_Data_EEPROMh+0x24>
    f180:	f6 01       	movw	r30, r12
    f182:	61 91       	ld	r22, Z+
    f184:	6f 01       	movw	r12, r30
    f186:	fa 82       	std	Y+2, r15	; 0x02
    f188:	e9 82       	std	Y+1, r14	; 0x01
    f18a:	ce 01       	movw	r24, r28
    f18c:	01 96       	adiw	r24, 0x01	; 1
    f18e:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    f192:	ff ef       	ldi	r31, 0xFF	; 255
    f194:	ef 1a       	sub	r14, r31
    f196:	ff 0a       	sbc	r15, r31
    f198:	e0 16       	cp	r14, r16
    f19a:	f1 06       	cpc	r15, r17
    f19c:	89 f7       	brne	.-30     	; 0xf180 <_Z21Exra_Plot_Data_EEPROMh+0x118>
		}
	}
	
	_kEEPROM_WRITE(_kEEPROM_EXTRA_PLOT_DATA(plot_number), _sExtra_Plot[plot_number-1]);
	return;
}
    f19e:	0f 90       	pop	r0
    f1a0:	0f 90       	pop	r0
    f1a2:	df 91       	pop	r29
    f1a4:	cf 91       	pop	r28
    f1a6:	1f 91       	pop	r17
    f1a8:	0f 91       	pop	r16
    f1aa:	ff 90       	pop	r15
    f1ac:	ef 90       	pop	r14
    f1ae:	df 90       	pop	r13
    f1b0:	cf 90       	pop	r12
    f1b2:	08 95       	ret

0000f1b4 <_Z11Read_EEPROMv>:
	
}


void Read_EEPROM(void)
{
    f1b4:	4f 92       	push	r4
    f1b6:	5f 92       	push	r5
    f1b8:	6f 92       	push	r6
    f1ba:	7f 92       	push	r7
    f1bc:	8f 92       	push	r8
    f1be:	9f 92       	push	r9
    f1c0:	af 92       	push	r10
    f1c2:	bf 92       	push	r11
    f1c4:	cf 92       	push	r12
    f1c6:	df 92       	push	r13
    f1c8:	ef 92       	push	r14
    f1ca:	ff 92       	push	r15
    f1cc:	0f 93       	push	r16
    f1ce:	1f 93       	push	r17
    f1d0:	cf 93       	push	r28
    f1d2:	df 93       	push	r29
    f1d4:	cd b7       	in	r28, 0x3d	; 61
    f1d6:	de b7       	in	r29, 0x3e	; 62
    f1d8:	e4 97       	sbiw	r28, 0x34	; 52
    f1da:	0f b6       	in	r0, 0x3f	; 63
    f1dc:	f8 94       	cli
    f1de:	de bf       	out	0x3e, r29	; 62
    f1e0:	0f be       	out	0x3f, r0	; 63
    f1e2:	cd bf       	out	0x3d, r28	; 61
	unsigned char temp_data[50],count=0,i=0,j=0;
	
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
    f1e4:	6b e5       	ldi	r22, 0x5B	; 91
    f1e6:	75 e1       	ldi	r23, 0x15	; 21
    f1e8:	87 e9       	ldi	r24, 0x97	; 151
    f1ea:	94 e0       	ldi	r25, 0x04	; 4
    f1ec:	c2 d8       	rcall	.-3708   	; 0xe372 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
    f1ee:	f5 e8       	ldi	r31, 0x85	; 133
    f1f0:	ef 2e       	mov	r14, r31
    f1f2:	f5 e1       	ldi	r31, 0x15	; 21
    f1f4:	ff 2e       	mov	r15, r31
    f1f6:	67 01       	movw	r12, r14
    f1f8:	00 e0       	ldi	r16, 0x00	; 0
    f1fa:	10 e0       	ldi	r17, 0x00	; 0
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f1fc:	ce 01       	movw	r24, r28
    f1fe:	01 96       	adiw	r24, 0x01	; 1
    f200:	3c 01       	movw	r6, r24
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f202:	1a 83       	std	Y+2, r17	; 0x02
    f204:	09 83       	std	Y+1, r16	; 0x01
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f206:	c3 01       	movw	r24, r6
    f208:	97 d8       	rcall	.-3794   	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f20a:	f6 01       	movw	r30, r12
    f20c:	81 93       	st	Z+, r24
    f20e:	6f 01       	movw	r12, r30
    f210:	0f 5f       	subi	r16, 0xFF	; 255
    f212:	1f 4f       	sbci	r17, 0xFF	; 255
    f214:	07 30       	cpi	r16, 0x07	; 7
    f216:	11 05       	cpc	r17, r1
    f218:	a1 f7       	brne	.-24     	; 0xf202 <_Z11Read_EEPROMv+0x4e>
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);
    f21a:	f7 01       	movw	r30, r14
    f21c:	61 91       	ld	r22, Z+
    f21e:	7f 01       	movw	r14, r30
    f220:	8f e6       	ldi	r24, 0x6F	; 111
    f222:	96 e1       	ldi	r25, 0x16	; 22
    f224:	0e 94 6e ce 	call	0x19cdc	; 0x19cdc <_ZN14HardwareSerial5writeEh>
	/*********************************** Read the pump nominal current *******************************/
	_kEEPROM_READ(_kEEPROM_LOC_PUMP_NOMINAL_CURRENT,_sPump_Parameter.Pump_Nominal_Current);  /* read that ruble is registered or not */
	
	/************************** Read the RUBLE ID **************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);
	for(i=0;i<6;i++)
    f228:	fb e8       	ldi	r31, 0x8B	; 139
    f22a:	ef 16       	cp	r14, r31
    f22c:	f5 e1       	ldi	r31, 0x15	; 21
    f22e:	ff 06       	cpc	r15, r31
    f230:	a1 f7       	brne	.-24     	; 0xf21a <_Z11Read_EEPROMv+0x66>
    f232:	7d ef       	ldi	r23, 0xFD	; 253
    f234:	c7 2e       	mov	r12, r23
    f236:	7c e0       	ldi	r23, 0x0C	; 12
    f238:	d7 2e       	mov	r13, r23
    f23a:	00 ee       	ldi	r16, 0xE0	; 224
    f23c:	1f ef       	ldi	r17, 0xFF	; 255
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
	{
		memset(temp_data,0,sizeof(temp_data));
    f23e:	e2 e3       	ldi	r30, 0x32	; 50
    f240:	5e 2e       	mov	r5, r30
    f242:	f3 01       	movw	r30, r6
    f244:	85 2d       	mov	r24, r5
    f246:	11 92       	st	Z+, r1
    f248:	8a 95       	dec	r24
    f24a:	e9 f7       	brne	.-6      	; 0xf246 <_Z11Read_EEPROMv+0x92>
    f24c:	48 01       	movw	r8, r16
    f24e:	96 e0       	ldi	r25, 0x06	; 6
    f250:	89 0e       	add	r8, r25
    f252:	91 1c       	adc	r9, r1
    f254:	56 01       	movw	r10, r12
    f256:	78 01       	movw	r14, r16
    f258:	fc aa       	std	Y+52, r15	; 0x34
    f25a:	eb aa       	std	Y+51, r14	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f25c:	ce 01       	movw	r24, r28
    f25e:	c3 96       	adiw	r24, 0x33	; 51
    f260:	6b d8       	rcall	.-3882   	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f262:	f5 01       	movw	r30, r10
    f264:	81 93       	st	Z+, r24
    f266:	5f 01       	movw	r10, r30
    f268:	ff ef       	ldi	r31, 0xFF	; 255
    f26a:	ef 1a       	sub	r14, r31
    f26c:	ff 0a       	sbc	r15, r31
    f26e:	e8 14       	cp	r14, r8
    f270:	f9 04       	cpc	r15, r9
    f272:	91 f7       	brne	.-28     	; 0xf258 <_Z11Read_EEPROMv+0xa4>
    f274:	08 5d       	subi	r16, 0xD8	; 216
    f276:	1f 4f       	sbci	r17, 0xFF	; 255
    f278:	86 e0       	ldi	r24, 0x06	; 6
    f27a:	c8 0e       	add	r12, r24
    f27c:	d1 1c       	adc	r13, r1
	/************************* Read FC value ******************************/
	//_kEEPROM_READ(_kEEPROM_LOC_FC_VALUE,_sRuble_Parameters.FC_Value_Deafault);
	
	
	/************************* Upadte the all lira node data **************/
	for(i=0;i<_kMAX_LIRA_SENSOR_NODE;i++)
    f27e:	00 31       	cpi	r16, 0x10	; 16
    f280:	92 e0       	ldi	r25, 0x02	; 2
    f282:	19 07       	cpc	r17, r25
    f284:	f1 f6       	brne	.-68     	; 0xf242 <_Z11Read_EEPROMv+0x8e>
    f286:	67 ee       	ldi	r22, 0xE7	; 231
    f288:	c6 2e       	mov	r12, r22
    f28a:	6b e0       	ldi	r22, 0x0B	; 11
    f28c:	d6 2e       	mov	r13, r22
    f28e:	0e e3       	ldi	r16, 0x3E	; 62
    f290:	13 e0       	ldi	r17, 0x03	; 3
    f292:	48 01       	movw	r8, r16
    f294:	ed e0       	ldi	r30, 0x0D	; 13
    f296:	8e 0e       	add	r8, r30
    f298:	91 1c       	adc	r9, r1
    f29a:	56 01       	movw	r10, r12
    f29c:	78 01       	movw	r14, r16
    f29e:	fc aa       	std	Y+52, r15	; 0x34
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f2a0:	eb aa       	std	Y+51, r14	; 0x33
    f2a2:	ce 01       	movw	r24, r28
    f2a4:	c3 96       	adiw	r24, 0x33	; 51
    f2a6:	48 d8       	rcall	.-3952   	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f2a8:	f5 01       	movw	r30, r10
    f2aa:	81 93       	st	Z+, r24
    f2ac:	5f 01       	movw	r10, r30
    f2ae:	ff ef       	ldi	r31, 0xFF	; 255
    f2b0:	ef 1a       	sub	r14, r31
    f2b2:	ff 0a       	sbc	r15, r31
    f2b4:	8e 14       	cp	r8, r14
    f2b6:	9f 04       	cpc	r9, r15
    f2b8:	91 f7       	brne	.-28     	; 0xf29e <_Z11Read_EEPROMv+0xea>
    f2ba:	0c 5e       	subi	r16, 0xEC	; 236
    f2bc:	1f 4f       	sbci	r17, 0xFF	; 255
    f2be:	8d e0       	ldi	r24, 0x0D	; 13
    f2c0:	c8 0e       	add	r12, r24
    f2c2:	d1 1c       	adc	r13, r1
		_kEEPROM_READ(_kEEPROM_LOC_LIRA_SENSOR_DATA(i),_sLira_Node_Param[i]);
	}
	
	/*************************** Update all euro valve data ********************************/
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f2c4:	0e 38       	cpi	r16, 0x8E	; 142
    f2c6:	93 e0       	ldi	r25, 0x03	; 3
    f2c8:	19 07       	cpc	r17, r25
    f2ca:	19 f7       	brne	.-58     	; 0xf292 <_Z11Read_EEPROMv+0xde>
		_kEEPROM_READ(_kEEPROM_LOC_EURO_VALVE_DATA(i),_sEuro_Valve_Param[i]);
	}
	
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		_sEuro_Valve_Param[i].Euro_Valve_Status = _kUNDEFINED;
    f2cc:	14 e0       	ldi	r17, 0x04	; 4
    f2ce:	10 93 f1 0b 	sts	0x0BF1, r17	; 0x800bf1 <_sEuro_Valve_Param+0xa>
    f2d2:	10 93 fe 0b 	sts	0x0BFE, r17	; 0x800bfe <_sEuro_Valve_Param+0x17>
    f2d6:	10 93 0b 0c 	sts	0x0C0B, r17	; 0x800c0b <_sEuro_Valve_Param+0x24>
    f2da:	10 93 18 0c 	sts	0x0C18, r17	; 0x800c18 <_sEuro_Valve_Param+0x31>
	/******************************************* update hardware version **************************/
	//_kEEPROM_READ(_kEEPROM_LOC_HARDWARE_VESRION,_sRuble_Parameters.Hardware_Version);
	
	
	/******************************************* update operation mode **************************/
	_kEEPROM_READ(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f2de:	6c e8       	ldi	r22, 0x8C	; 140
    f2e0:	75 e1       	ldi	r23, 0x15	; 21
    f2e2:	80 e6       	ldi	r24, 0x60	; 96
    f2e4:	94 e0       	ldi	r25, 0x04	; 4
    f2e6:	2d d8       	rcall	.-4006   	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	switch(_sRuble_Parameters.Operation_Mode)
    f2e8:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    f2ec:	83 30       	cpi	r24, 0x03	; 3
    f2ee:	99 f0       	breq	.+38     	; 0xf316 <_Z11Read_EEPROMv+0x162>
    f2f0:	28 f4       	brcc	.+10     	; 0xf2fc <_Z11Read_EEPROMv+0x148>
    f2f2:	81 30       	cpi	r24, 0x01	; 1
    f2f4:	39 f0       	breq	.+14     	; 0xf304 <_Z11Read_EEPROMv+0x150>
    f2f6:	82 30       	cpi	r24, 0x02	; 2
    f2f8:	c1 f1       	breq	.+112    	; 0xf36a <_Z11Read_EEPROMv+0x1b6>
    f2fa:	40 c0       	rjmp	.+128    	; 0xf37c <_Z11Read_EEPROMv+0x1c8>
    f2fc:	84 30       	cpi	r24, 0x04	; 4
    f2fe:	a9 f1       	breq	.+106    	; 0xf36a <_Z11Read_EEPROMv+0x1b6>
    f300:	85 30       	cpi	r24, 0x05	; 5
    f302:	e1 f5       	brne	.+120    	; 0xf37c <_Z11Read_EEPROMv+0x1c8>
	{
		case _eOPER_MOD_AUTO:
		case _eOPER_MOD_SCHEDULER:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f304:	85 e0       	ldi	r24, 0x05	; 5
    f306:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f30a:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    f30e:	8e 7f       	andi	r24, 0xFE	; 254
    f310:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
    f314:	36 c0       	rjmp	.+108    	; 0xf382 <_Z11Read_EEPROMv+0x1ce>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
		}break;
		
		case _eOPER_MOD_TIMER:
		{
			_sRuble_Parameters.lndications   &= ~_eRUBL_INDI_AUTO_MANUAL;
    f316:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    f31a:	8e 7f       	andi	r24, 0xFE	; 254
    f31c:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f320:	10 93 8d 15 	sts	0x158D, r17	; 0x80158d <_sRuble_Parameters+0x28>
			
			_kEEPROM_READ(_kTIMER_IRRIGATING_PLOT,_sRuble_Parameters.Temp_Irrigating_Plot);
    f324:	6e e0       	ldi	r22, 0x0E	; 14
    f326:	76 e1       	ldi	r23, 0x16	; 22
    f328:	8e e1       	ldi	r24, 0x1E	; 30
    f32a:	9c e0       	ldi	r25, 0x0C	; 12
    f32c:	0a d8       	rcall	.-4076   	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f32e:	80 e2       	ldi	r24, 0x20	; 32
    f330:	9c e0       	ldi	r25, 0x0C	; 12
    f332:	9c ab       	std	Y+52, r25	; 0x34
    f334:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f336:	ce 01       	movw	r24, r28
    f338:	c3 96       	adiw	r24, 0x33	; 51
    f33a:	0e 94 9c 71 	call	0xe338	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f33e:	80 93 7b 15 	sts	0x157B, r24	; 0x80157b <_sRuble_Parameters+0x16>
    f342:	81 e2       	ldi	r24, 0x21	; 33
    f344:	9c e0       	ldi	r25, 0x0C	; 12
    f346:	9c ab       	std	Y+52, r25	; 0x34
    f348:	8b ab       	std	Y+51, r24	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f34a:	ce 01       	movw	r24, r28
    f34c:	c3 96       	adiw	r24, 0x33	; 51
    f34e:	0e 94 9c 71 	call	0xe338	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f352:	80 93 7c 15 	sts	0x157C, r24	; 0x80157c <_sRuble_Parameters+0x17>
			_kEEPROM_READ(_kPUMP_REMAINING_TIME,_sRuble_Parameters.Pump_Run_Timer);
			//_sRuble_Parameters.Temp_Irrigating_Plot = _sRuble_Parameters.Irrigating_Plot;
			_sRuble_Parameters.Publish_Topic |= _ePUB_TIMER_FEEDBACK;
    f356:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    f35a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    f35e:	88 60       	ori	r24, 0x08	; 8
    f360:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    f364:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
		}break;
    f368:	14 c0       	rjmp	.+40     	; 0xf392 <_Z11Read_EEPROMv+0x1de>
		
		case _eOPER_MOD_MANUAL:
		case _eOPER_MOD_DATALOG:
		{
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f36a:	84 e0       	ldi	r24, 0x04	; 4
    f36c:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
			_sRuble_Parameters.lndications   |= _eRUBL_INDI_AUTO_MANUAL;
    f370:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    f374:	81 60       	ori	r24, 0x01	; 1
    f376:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
		}break;
    f37a:	0b c0       	rjmp	.+22     	; 0xf392 <_Z11Read_EEPROMv+0x1de>
		default:
		{
			_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f37c:	85 e0       	ldi	r24, 0x05	; 5
    f37e:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f382:	84 e0       	ldi	r24, 0x04	; 4
    f384:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f388:	6c e8       	ldi	r22, 0x8C	; 140
    f38a:	75 e1       	ldi	r23, 0x15	; 21
    f38c:	80 e6       	ldi	r24, 0x60	; 96
    f38e:	94 e0       	ldi	r25, 0x04	; 4
		}break;
	}
	
	/******************************************* update ruble sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_RUBLE_SIM_NUM,_sNetwork_and_Usr_Info.Ruble_SIM_No);
    f390:	56 d8       	rcall	.-3924   	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    f392:	68 e6       	ldi	r22, 0x68	; 104
    f394:	7d e0       	ldi	r23, 0x0D	; 13
    f396:	82 e6       	ldi	r24, 0x62	; 98
    f398:	94 e0       	ldi	r25, 0x04	; 4
	
	
	/******************************************* update user sim no. ************************************/
	_kEEPROM_READ(_kEEPROM_LOC_USER_SIM_NUM,_sNetwork_and_Usr_Info.User_Sim_No);
    f39a:	1e d8       	rcall	.-4036   	; 0xe3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    f39c:	63 e7       	ldi	r22, 0x73	; 115
    f39e:	7d e0       	ldi	r23, 0x0D	; 13
    f3a0:	8f e6       	ldi	r24, 0x6F	; 111
    f3a2:	94 e0       	ldi	r25, 0x04	; 4
    f3a4:	19 d8       	rcall	.-4046   	; 0xe3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	/***************************************** Update coefficient 3 *************************************/
	//_kEEPROM_READ(_kEEPROM_LOC_COEFF_3,_sRuble_Parameters.Coeff_3);
	
	
	/***************************************** update the sms alert ***********************************/
	_kEEPROM_READ(_kEEPROM_SMS_ALERT_START,_sRuble_Parameters.SMS_Alert_Start);
    f3a6:	62 e1       	ldi	r22, 0x12	; 18
    f3a8:	76 e1       	ldi	r23, 0x16	; 22
    f3aa:	80 ea       	ldi	r24, 0xA0	; 160
    f3ac:	94 e0       	ldi	r25, 0x04	; 4
    f3ae:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	
	/**************************************** update the kill switch **********************************/
	_kEEPROM_READ(_kEEPROM_KILL_SWITCH,_sRuble_Parameters.Kill_Switch);
    f3b2:	6a e1       	ldi	r22, 0x1A	; 26
    f3b4:	76 e1       	ldi	r23, 0x16	; 22
    f3b6:	81 ea       	ldi	r24, 0xA1	; 161
    f3b8:	94 e0       	ldi	r25, 0x04	; 4
    f3ba:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f3be:	50 ef       	ldi	r21, 0xF0	; 240
    f3c0:	e5 2e       	mov	r14, r21
    f3c2:	58 e0       	ldi	r21, 0x08	; 8
    f3c4:	f5 2e       	mov	r15, r21
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f3c6:	02 ea       	ldi	r16, 0xA2	; 162
    f3c8:	14 e0       	ldi	r17, 0x04	; 4
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f3ca:	1c ab       	std	Y+52, r17	; 0x34
    f3cc:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f3ce:	ce 01       	movw	r24, r28
    f3d0:	c3 96       	adiw	r24, 0x33	; 51
    f3d2:	0e 94 9c 71 	call	0xe338	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f3d6:	f7 01       	movw	r30, r14
    f3d8:	81 93       	st	Z+, r24
    f3da:	7f 01       	movw	r14, r30
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f3dc:	0f 5f       	subi	r16, 0xFF	; 255
    f3de:	1f 4f       	sbci	r17, 0xFF	; 255
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f3e0:	08 37       	cpi	r16, 0x78	; 120
    f3e2:	f7 e0       	ldi	r31, 0x07	; 7
    f3e4:	1f 07       	cpc	r17, r31
    f3e6:	89 f7       	brne	.-30     	; 0xf3ca <_Z11Read_EEPROMv+0x216>
	
	/*************************************** read schedule data ******************************************/
	_kEEPROM_READ(_kEEPROM_SCHEDULE_DATA, _sSchedules);
	
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
    f3e8:	10 92 f5 08 	sts	0x08F5, r1	; 0x8008f5 <_sSchedules+0x5>
    f3ec:	10 92 f4 08 	sts	0x08F4, r1	; 0x8008f4 <_sSchedules+0x4>
	_sSchedules.Fertilizer_On_Scheduler_Status = _kRESET;
    f3f0:	10 92 47 0b 	sts	0x0B47, r1	; 0x800b47 <_sSchedules+0x257>
	_sSchedules.New_Schedules_Occur = _kRESET;
    f3f4:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <_sSchedules+0x1>
	_sSchedules.Shedule_Run_Status_Is_Triggered = _kRESET;
    f3f8:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
    f3fc:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
	_sSchedules.Save_Schedule_Data_In_Eeprom = _kRESET;
    f400:	10 92 a8 0b 	sts	0x0BA8, r1	; 0x800ba8 <_sSchedules+0x2b8>
	_sSchedules.Blower_On_Scheduler_Status = _kOFF;
    f404:	10 92 5d 0b 	sts	0x0B5D, r1	; 0x800b5d <_sSchedules+0x26d>
	
	for(unsigned char tank_number = 0; tank_number < _kMAX_FERTILIZER_TANK; tank_number++)
	{
		_sSchedules.Running_Tank[tank_number] = _kRESET;
    f408:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
    f40c:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
    f410:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
	
	
	
	
	
	if(_sSchedules.Schedule_Enable)   /* schedules are enable then change the mode from auto to scheduler */
    f414:	90 91 f0 08 	lds	r25, 0x08F0	; 0x8008f0 <_sSchedules>
    f418:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
    f41c:	99 23       	and	r25, r25
    f41e:	21 f1       	breq	.+72     	; 0xf468 <_Z11Read_EEPROMv+0x2b4>
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f420:	81 30       	cpi	r24, 0x01	; 1
    f422:	11 f0       	breq	.+4      	; 0xf428 <_Z11Read_EEPROMv+0x274>
    f424:	85 30       	cpi	r24, 0x05	; 5
    f426:	89 f4       	brne	.+34     	; 0xf44a <_Z11Read_EEPROMv+0x296>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;
    f428:	85 e0       	ldi	r24, 0x05	; 5
    f42a:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f42e:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    f432:	8e 7f       	andi	r24, 0xFE	; 254
    f434:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f438:	84 e0       	ldi	r24, 0x04	; 4
    f43a:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
				_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f43e:	6c e8       	ldi	r22, 0x8C	; 140
    f440:	75 e1       	ldi	r23, 0x15	; 21
    f442:	80 e6       	ldi	r24, 0x60	; 96
    f444:	94 e0       	ldi	r25, 0x04	; 4
    f446:	0e 94 1f 72 	call	0xe43e	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    f44a:	0f e9       	ldi	r16, 0x9F	; 159
    f44c:	1f e0       	ldi	r17, 0x0F	; 15
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f44e:	98 e7       	ldi	r25, 0x78	; 120
    f450:	e9 2e       	mov	r14, r25
    f452:	99 e0       	ldi	r25, 0x09	; 9
    f454:	f9 2e       	mov	r15, r25
    f456:	2e ef       	ldi	r18, 0xFE	; 254
    f458:	72 2e       	mov	r7, r18
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
				_kSERIAL_MON_CLEAR();
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f45a:	66 24       	eor	r6, r6
    f45c:	63 94       	inc	r6
			
			default:
			{
				if(i < 2 || i > 9)
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f45e:	35 e0       	ldi	r19, 0x05	; 5
    f460:	53 2e       	mov	r5, r19
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f462:	42 e0       	ldi	r20, 0x02	; 2
    f464:	44 2e       	mov	r4, r20
    f466:	14 c0       	rjmp	.+40     	; 0xf490 <_Z11Read_EEPROMv+0x2dc>
			}break;
		}
	}
	else    /* schedules are not enable then change the mode from scheduler to auto */
	{
		switch(_sRuble_Parameters.Operation_Mode)
    f468:	81 30       	cpi	r24, 0x01	; 1
    f46a:	11 f0       	breq	.+4      	; 0xf470 <_Z11Read_EEPROMv+0x2bc>
    f46c:	85 30       	cpi	r24, 0x05	; 5
    f46e:	69 f7       	brne	.-38     	; 0xf44a <_Z11Read_EEPROMv+0x296>
		{
			case _eOPER_MOD_AUTO:
			case _eOPER_MOD_SCHEDULER:
			{
				_sRuble_Parameters.Manual_Mode_Wait = 0;
    f470:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
    f474:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
				_sRuble_Parameters.Operation_Mode = _eOPER_MOD_SCHEDULER;   // 5/5
    f478:	85 e0       	ldi	r24, 0x05	; 5
    f47a:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
				_sRuble_Parameters.lndications     &= ~_eRUBL_INDI_AUTO_MANUAL;
    f47e:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    f482:	8e 7f       	andi	r24, 0xFE	; 254
    f484:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
				_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f488:	84 e0       	ldi	r24, 0x04	; 4
    f48a:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
			}break;
    f48e:	dd cf       	rjmp	.-70     	; 0xf44a <_Z11Read_EEPROMv+0x296>
    f490:	47 01       	movw	r8, r14
    f492:	8b e1       	ldi	r24, 0x1B	; 27
    f494:	88 0e       	add	r8, r24
    f496:	91 1c       	adc	r9, r1
    f498:	58 01       	movw	r10, r16
    f49a:	67 01       	movw	r12, r14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f49c:	dc aa       	std	Y+52, r13	; 0x34
    f49e:	cb aa       	std	Y+51, r12	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f4a0:	ce 01       	movw	r24, r28
    f4a2:	c3 96       	adiw	r24, 0x33	; 51
    f4a4:	0e 94 9c 71 	call	0xe338	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f4a8:	f5 01       	movw	r30, r10
    f4aa:	81 93       	st	Z+, r24
    f4ac:	5f 01       	movw	r10, r30
    f4ae:	ff ef       	ldi	r31, 0xFF	; 255
    f4b0:	cf 1a       	sub	r12, r31
    f4b2:	df 0a       	sbc	r13, r31
    f4b4:	8c 14       	cp	r8, r12
    f4b6:	9d 04       	cpc	r9, r13
    f4b8:	89 f7       	brne	.-30     	; 0xf49c <_Z11Read_EEPROMv+0x2e8>
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
	{
		_kEEPROM_READ(_kEEPROM_EXTRA_PLOT_DATA(i+1),_sExtra_Plot[i]);
		
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f4ba:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f4be:	81 30       	cpi	r24, 0x01	; 1
    f4c0:	91 f4       	brne	.+36     	; 0xf4e6 <_Z11Read_EEPROMv+0x332>
		{
			_kSERAIL_MON_WRITE_NO_LN("Extra Plot Number : ");
    f4c2:	69 e4       	ldi	r22, 0x49	; 73
    f4c4:	76 e2       	ldi	r23, 0x26	; 38
    f4c6:	8f e6       	ldi	r24, 0x6F	; 111
    f4c8:	96 e1       	ldi	r25, 0x16	; 22
    f4ca:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
			_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Extra_Plot_Number);
    f4ce:	4a e0       	ldi	r20, 0x0A	; 10
    f4d0:	50 e0       	ldi	r21, 0x00	; 0
    f4d2:	f8 01       	movw	r30, r16
    f4d4:	61 81       	ldd	r22, Z+1	; 0x01
    f4d6:	8f e6       	ldi	r24, 0x6F	; 111
    f4d8:	96 e1       	ldi	r25, 0x16	; 22
    f4da:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
			_kSERIAL_MON_CLEAR();
    f4de:	8f e6       	ldi	r24, 0x6F	; 111
    f4e0:	96 e1       	ldi	r25, 0x16	; 22
    f4e2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_sExtra_Plot[i].Run_Timer)    /* check if timer was set for the extra plot */
    f4e6:	f8 01       	movw	r30, r16
    f4e8:	83 81       	ldd	r24, Z+3	; 0x03
    f4ea:	94 81       	ldd	r25, Z+4	; 0x04
    f4ec:	89 2b       	or	r24, r25
    f4ee:	c9 f0       	breq	.+50     	; 0xf522 <_Z11Read_EEPROMv+0x36e>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f4f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f4f4:	81 30       	cpi	r24, 0x01	; 1
    f4f6:	99 f4       	brne	.+38     	; 0xf51e <_Z11Read_EEPROMv+0x36a>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra Plot Run Timer : ");
    f4f8:	61 e3       	ldi	r22, 0x31	; 49
    f4fa:	76 e2       	ldi	r23, 0x26	; 38
    f4fc:	8f e6       	ldi	r24, 0x6F	; 111
    f4fe:	96 e1       	ldi	r25, 0x16	; 22
    f500:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM(_sExtra_Plot[i].Run_Timer);
    f504:	f8 01       	movw	r30, r16
    f506:	63 81       	ldd	r22, Z+3	; 0x03
    f508:	74 81       	ldd	r23, Z+4	; 0x04
    f50a:	4a e0       	ldi	r20, 0x0A	; 10
    f50c:	50 e0       	ldi	r21, 0x00	; 0
    f50e:	8f e6       	ldi	r24, 0x6F	; 111
    f510:	96 e1       	ldi	r25, 0x16	; 22
    f512:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
				_kSERIAL_MON_CLEAR();
    f516:	8f e6       	ldi	r24, 0x6F	; 111
    f518:	96 e1       	ldi	r25, 0x16	; 22
    f51a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Set_Through_Timer = _eSET_THROUGH_TIMER;
    f51e:	f8 01       	movw	r30, r16
    f520:	63 86       	std	Z+11, r6	; 0x0b
		}
		
		if(!_sExtra_Plot[i].Run_Timer &&  !_sExtra_Plot[i].One_Touch)   /* if user not took any action earlier */
    f522:	f8 01       	movw	r30, r16
    f524:	83 81       	ldd	r24, Z+3	; 0x03
    f526:	94 81       	ldd	r25, Z+4	; 0x04
    f528:	89 2b       	or	r24, r25
    f52a:	a1 f4       	brne	.+40     	; 0xf554 <_Z11Read_EEPROMv+0x3a0>
    f52c:	82 85       	ldd	r24, Z+10	; 0x0a
    f52e:	81 11       	cpse	r24, r1
    f530:	11 c0       	rjmp	.+34     	; 0xf554 <_Z11Read_EEPROMv+0x3a0>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f532:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f536:	81 30       	cpi	r24, 0x01	; 1
    f538:	51 f4       	brne	.+20     	; 0xf54e <_Z11Read_EEPROMv+0x39a>
			{
				_kSERAIL_MON_WRITE_NO_LN("Extra not Plot Run Timer : ");
    f53a:	65 e1       	ldi	r22, 0x15	; 21
    f53c:	76 e2       	ldi	r23, 0x26	; 38
    f53e:	8f e6       	ldi	r24, 0x6F	; 111
    f540:	96 e1       	ldi	r25, 0x16	; 22
    f542:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    f546:	8f e6       	ldi	r24, 0x6F	; 111
    f548:	96 e1       	ldi	r25, 0x16	; 22
    f54a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f54e:	f8 01       	movw	r30, r16
    f550:	62 82       	std	Z+2, r6	; 0x02
			_sExtra_Plot[i].Set_Through_Timer = _kRESET;
    f552:	13 86       	std	Z+11, r1	; 0x0b
		}
		
		_sExtra_Plot[i].On_Off_Status = _kRESET;   /* initially off the status */
    f554:	f8 01       	movw	r30, r16
    f556:	10 82       	st	Z, r1
		
		switch(_sExtra_Plot[i].Status)
    f558:	82 81       	ldd	r24, Z+2	; 0x02
    f55a:	82 30       	cpi	r24, 0x02	; 2
    f55c:	49 f0       	breq	.+18     	; 0xf570 <_Z11Read_EEPROMv+0x3bc>
    f55e:	83 30       	cpi	r24, 0x03	; 3
    f560:	11 f4       	brne	.+4      	; 0xf566 <_Z11Read_EEPROMv+0x3b2>
				
			}break;
			
			case _eRUN_EXTRA_PLOT_OPERATION:
			{
				_sExtra_Plot[i].Status = _eSTART_EXTRA_PLOT_OPERATION;
    f562:	42 82       	std	Z+2, r4	; 0x02
			}break;
    f564:	05 c0       	rjmp	.+10     	; 0xf570 <_Z11Read_EEPROMv+0x3bc>
			
			default:
			{
				if(i < 2 || i > 9)
    f566:	f7 e0       	ldi	r31, 0x07	; 7
    f568:	f7 15       	cp	r31, r7
    f56a:	28 f4       	brcc	.+10     	; 0xf576 <_Z11Read_EEPROMv+0x3c2>
				{
					_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
    f56c:	f8 01       	movw	r30, r16
    f56e:	52 82       	std	Z+2, r5	; 0x02
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f570:	c1 2c       	mov	r12, r1
    f572:	d1 2c       	mov	r13, r1
    f574:	0a c0       	rjmp	.+20     	; 0xf58a <_Z11Read_EEPROMv+0x3d6>
					
				}
				else
				{
					_sExtra_Plot[i].Status = _eSTOP_EXTRA_PLOT_OPERATION;
    f576:	f8 01       	movw	r30, r16
    f578:	62 82       	std	Z+2, r6	; 0x02
    f57a:	fa cf       	rjmp	.-12     	; 0xf570 <_Z11Read_EEPROMv+0x3bc>
				}
				//_sExtra_Plot[i].Status = _kSCHEDULER_OFF;
			}break;
		}
		
		for(int k=0;k<_kMAX_VALVE_FOR_1PLOT;k++)
    f57c:	ff ef       	ldi	r31, 0xFF	; 255
    f57e:	cf 1a       	sub	r12, r31
    f580:	df 0a       	sbc	r13, r31
    f582:	85 e0       	ldi	r24, 0x05	; 5
    f584:	c8 16       	cp	r12, r24
    f586:	d1 04       	cpc	r13, r1
    f588:	e9 f0       	breq	.+58     	; 0xf5c4 <_Z11Read_EEPROMv+0x410>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f58a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f58e:	81 30       	cpi	r24, 0x01	; 1
    f590:	a9 f7       	brne	.-22     	; 0xf57c <_Z11Read_EEPROMv+0x3c8>
			{
				Serial.println();
    f592:	8f e6       	ldi	r24, 0x6F	; 111
    f594:	96 e1       	ldi	r25, 0x16	; 22
    f596:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
				_kSERAIL_MON_WRITE_NO_LN("VALVE NO : ");
    f59a:	69 e0       	ldi	r22, 0x09	; 9
    f59c:	76 e2       	ldi	r23, 0x26	; 38
    f59e:	8f e6       	ldi	r24, 0x6F	; 111
    f5a0:	96 e1       	ldi	r25, 0x16	; 22
    f5a2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
				_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(_sExtra_Plot[i].Euro_Valve_Group[k]);
    f5a6:	4a e0       	ldi	r20, 0x0A	; 10
    f5a8:	50 e0       	ldi	r21, 0x00	; 0
    f5aa:	f8 01       	movw	r30, r16
    f5ac:	ec 0d       	add	r30, r12
    f5ae:	fd 1d       	adc	r31, r13
    f5b0:	65 81       	ldd	r22, Z+5	; 0x05
    f5b2:	8f e6       	ldi	r24, 0x6F	; 111
    f5b4:	96 e1       	ldi	r25, 0x16	; 22
    f5b6:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
				_kSERIAL_MON_CLEAR();
    f5ba:	8f e6       	ldi	r24, 0x6F	; 111
    f5bc:	96 e1       	ldi	r25, 0x16	; 22
    f5be:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    f5c2:	dc cf       	rjmp	.-72     	; 0xf57c <_Z11Read_EEPROMv+0x3c8>
    f5c4:	05 5e       	subi	r16, 0xE5	; 229
    f5c6:	1f 4f       	sbci	r17, 0xFF	; 255
    f5c8:	73 94       	inc	r7
    f5ca:	9e e1       	ldi	r25, 0x1E	; 30
    f5cc:	e9 0e       	add	r14, r25
    f5ce:	f1 1c       	adc	r15, r1
	}
	
	
	/*********************************** update extra plot ***************************/
	
	for(i=0;i<_kMAX_EXTRA_PLOT;i++)
    f5d0:	ec e1       	ldi	r30, 0x1C	; 28
    f5d2:	ee 16       	cp	r14, r30
    f5d4:	eb e0       	ldi	r30, 0x0B	; 11
    f5d6:	fe 06       	cpc	r15, r30
    f5d8:	09 f0       	breq	.+2      	; 0xf5dc <_Z11Read_EEPROMv+0x428>
    f5da:	5a cf       	rjmp	.-332    	; 0xf490 <_Z11Read_EEPROMv+0x2dc>
		}
	}
	
	
	
	_kEEPROM_READ(_kCT_BY_PASS,_sRuble_Parameters.By_Pass_CT);
    f5dc:	62 e2       	ldi	r22, 0x22	; 34
    f5de:	76 e1       	ldi	r23, 0x16	; 22
    f5e0:	89 e2       	ldi	r24, 0x29	; 41
    f5e2:	9c e0       	ldi	r25, 0x0C	; 12
    f5e4:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_COMMAND,_sRuble_Parameters.Wireless_Pump_Command);
    f5e8:	64 e2       	ldi	r22, 0x24	; 36
    f5ea:	76 e1       	ldi	r23, 0x16	; 22
    f5ec:	80 e3       	ldi	r24, 0x30	; 48
    f5ee:	9c e0       	ldi	r25, 0x0C	; 12
    f5f0:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	_kEEPROM_READ(_kEEPROM_LOC_WIRELESS_PUMP_STATUS,_sRuble_Parameters.Wirelss_Pump_Status);
    f5f4:	65 e2       	ldi	r22, 0x25	; 37
    f5f6:	76 e1       	ldi	r23, 0x16	; 22
    f5f8:	85 e3       	ldi	r24, 0x35	; 53
    f5fa:	9c e0       	ldi	r25, 0x0C	; 12
    f5fc:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f600:	8c e3       	ldi	r24, 0x3C	; 60
    f602:	e8 2e       	mov	r14, r24
    f604:	86 e1       	ldi	r24, 0x16	; 22
    f606:	f8 2e       	mov	r15, r24
    f608:	00 e1       	ldi	r16, 0x10	; 16
    f60a:	1e e0       	ldi	r17, 0x0E	; 14
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f60c:	1c ab       	std	Y+52, r17	; 0x34
    f60e:	0b ab       	std	Y+51, r16	; 0x33
    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    f610:	ce 01       	movw	r24, r28
    f612:	c3 96       	adiw	r24, 0x33	; 51
    f614:	0e 94 9c 71 	call	0xe338	; 0xe338 <_ZNK5EERefdeEv>
    
    //Functionality to 'get' and 'put' objects to and from EEPROM.
    template< typename T > T &get( int idx, T &t ){
        EEPtr e = idx;
        uint8_t *ptr = (uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  *ptr++ = *e;
    f618:	f7 01       	movw	r30, r14
    f61a:	81 93       	st	Z+, r24
    f61c:	7f 01       	movw	r14, r30
    f61e:	0f 5f       	subi	r16, 0xFF	; 255
    f620:	1f 4f       	sbci	r17, 0xFF	; 255
    f622:	05 31       	cpi	r16, 0x15	; 21
    f624:	fe e0       	ldi	r31, 0x0E	; 14
    f626:	1f 07       	cpc	r17, r31
    f628:	89 f7       	brne	.-30     	; 0xf60c <_Z11Read_EEPROMv+0x458>
	
	_kEEPROM_READ(_kHANDLE_WIRELESS_STATUS_LIST,_sRuble_Parameters.Wireless_Pump_Handle_List);
	
	_kEEPROM_READ(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f62a:	61 e4       	ldi	r22, 0x41	; 65
    f62c:	76 e1       	ldi	r23, 0x16	; 22
    f62e:	83 e3       	ldi	r24, 0x33	; 51
    f630:	9e e0       	ldi	r25, 0x0E	; 14
    f632:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
	if(_sRuble_Parameters.Pump_Selected_For_Irrigation == _kRESET || _sRuble_Parameters.Pump_Selected_For_Irrigation > _kMAX_WIRELESS_PUMP+1)
    f636:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
    f63a:	81 50       	subi	r24, 0x01	; 1
    f63c:	84 30       	cpi	r24, 0x04	; 4
    f63e:	48 f0       	brcs	.+18     	; 0xf652 <_Z11Read_EEPROMv+0x49e>
	{
		_sRuble_Parameters.Pump_Selected_For_Irrigation = _kWIRED_PUMP_NUMBER;
    f640:	81 e0       	ldi	r24, 0x01	; 1
    f642:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>
		_kEEPROM_WRITE(_kPUMP_SELECTED_FOR_IRRIGATION,_sRuble_Parameters.Pump_Selected_For_Irrigation);
    f646:	61 e4       	ldi	r22, 0x41	; 65
    f648:	76 e1       	ldi	r23, 0x16	; 22
    f64a:	83 e3       	ldi	r24, 0x33	; 51
    f64c:	9e e0       	ldi	r25, 0x0E	; 14
    f64e:	0e 94 1f 72 	call	0xe43e	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
	}
	
	_kEEPROM_READ(_kFLUSH_RUN_BACK_UP, _sRuble_Parameters.Pump_Run_Timer_for_flush);
    f652:	64 e4       	ldi	r22, 0x44	; 68
    f654:	76 e1       	ldi	r23, 0x16	; 22
    f656:	85 e3       	ldi	r24, 0x35	; 53
    f658:	9e e0       	ldi	r25, 0x0E	; 14
    f65a:	0e 94 b9 71 	call	0xe372	; 0xe372 <_ZN11EEPROMClass3getIfEERT_iS2_.isra.4>
	
	for(unsigned char wl_pump_num=0; wl_pump_num < _kMAX_WIRELESS_PUMP; wl_pump_num++)
	{
		_kEEPROM_READ(_kWIRELESS_PUMP_DATA_SAVE(wl_pump_num), _sWireless_Pump_Param[wl_pump_num]);
    f65e:	66 ec       	ldi	r22, 0xC6	; 198
    f660:	7b e0       	ldi	r23, 0x0B	; 11
    f662:	86 e3       	ldi	r24, 0x36	; 54
    f664:	9c e0       	ldi	r25, 0x0C	; 12
    f666:	0e 94 ec 71 	call	0xe3d8	; 0xe3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    f66a:	61 ed       	ldi	r22, 0xD1	; 209
    f66c:	7b e0       	ldi	r23, 0x0B	; 11
    f66e:	8a e4       	ldi	r24, 0x4A	; 74
    f670:	9c e0       	ldi	r25, 0x0C	; 12
    f672:	0e 94 ec 71 	call	0xe3d8	; 0xe3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
    f676:	6c ed       	ldi	r22, 0xDC	; 220
    f678:	7b e0       	ldi	r23, 0x0B	; 11
    f67a:	8e e5       	ldi	r24, 0x5E	; 94
    f67c:	9c e0       	ldi	r25, 0x0C	; 12
    f67e:	0e 94 ec 71 	call	0xe3d8	; 0xe3d8 <_ZN11EEPROMClass3getI19Wireless_Pump_ParamEERT_iS3_.isra.15>
	}
	
	_kEEPROM_READ(_kRUNNING_FLUSH_NUMBER, _gRunning_Flush_Num);
    f682:	6a e9       	ldi	r22, 0x9A	; 154
    f684:	7c e0       	ldi	r23, 0x0C	; 12
    f686:	8f e3       	ldi	r24, 0x3F	; 63
    f688:	9e e0       	ldi	r25, 0x0E	; 14
    f68a:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
	
}
    f68e:	e4 96       	adiw	r28, 0x34	; 52
    f690:	0f b6       	in	r0, 0x3f	; 63
    f692:	f8 94       	cli
    f694:	de bf       	out	0x3e, r29	; 62
    f696:	0f be       	out	0x3f, r0	; 63
    f698:	cd bf       	out	0x3d, r28	; 61
    f69a:	df 91       	pop	r29
    f69c:	cf 91       	pop	r28
    f69e:	1f 91       	pop	r17
    f6a0:	0f 91       	pop	r16
    f6a2:	ff 90       	pop	r15
    f6a4:	ef 90       	pop	r14
    f6a6:	df 90       	pop	r13
    f6a8:	cf 90       	pop	r12
    f6aa:	bf 90       	pop	r11
    f6ac:	af 90       	pop	r10
    f6ae:	9f 90       	pop	r9
    f6b0:	8f 90       	pop	r8
    f6b2:	7f 90       	pop	r7
    f6b4:	6f 90       	pop	r6
    f6b6:	5f 90       	pop	r5
    f6b8:	4f 90       	pop	r4
    f6ba:	08 95       	ret

0000f6bc <_Z20Param_Initializationv>:
volatile unsigned char _gTank_Topic_check;
volatile unsigned char plot_schedule_topic;


void Param_Initialization(void)
{
    f6bc:	cf 92       	push	r12
    f6be:	df 92       	push	r13
    f6c0:	ef 92       	push	r14
    f6c2:	ff 92       	push	r15
    f6c4:	0f 93       	push	r16
    f6c6:	1f 93       	push	r17
    f6c8:	cf 93       	push	r28
    f6ca:	df 93       	push	r29
    f6cc:	00 d0       	rcall	.+0      	; 0xf6ce <_Z20Param_Initializationv+0x12>
    f6ce:	cd b7       	in	r28, 0x3d	; 61
    f6d0:	de b7       	in	r29, 0x3e	; 62
	char temp = 0;
    f6d2:	1b 82       	std	Y+3, r1	; 0x03
	unsigned int i;
	
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
    f6d4:	65 e7       	ldi	r22, 0x75	; 117
    f6d6:	74 e0       	ldi	r23, 0x04	; 4
    f6d8:	85 e8       	ldi	r24, 0x85	; 133
    f6da:	95 e1       	ldi	r25, 0x15	; 21
    f6dc:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
    f6e0:	85 e8       	ldi	r24, 0x85	; 133
    f6e2:	e8 2e       	mov	r14, r24
    f6e4:	85 e1       	ldi	r24, 0x15	; 21
    f6e6:	f8 2e       	mov	r15, r24
    f6e8:	67 01       	movw	r12, r14
***/

struct EEPtr{

    EEPtr( const int index )
        : index( index )                {}
    f6ea:	00 e0       	ldi	r16, 0x00	; 0
    f6ec:	10 e0       	ldi	r17, 0x00	; 0
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f6ee:	f6 01       	movw	r30, r12
    f6f0:	61 91       	ld	r22, Z+
    f6f2:	6f 01       	movw	r12, r30
    f6f4:	1a 83       	std	Y+2, r17	; 0x02
    f6f6:	09 83       	std	Y+1, r16	; 0x01
    f6f8:	ce 01       	movw	r24, r28
    f6fa:	01 96       	adiw	r24, 0x01	; 1
    f6fc:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
    //Iterator functionality.
    bool operator!=( const EEPtr &ptr ) { return index != ptr.index; }
    EERef operator*()                   { return index; }
    
    /** Prefix & Postfix increment/decrement **/
    EEPtr& operator++()                 { return ++index, *this; }
    f700:	0f 5f       	subi	r16, 0xFF	; 255
    f702:	1f 4f       	sbci	r17, 0xFF	; 255
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    f704:	07 30       	cpi	r16, 0x07	; 7
    f706:	11 05       	cpc	r17, r1
    f708:	91 f7       	brne	.-28     	; 0xf6ee <_Z20Param_Initializationv+0x32>
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
    f70a:	8f e6       	ldi	r24, 0x6F	; 111
    f70c:	96 e1       	ldi	r25, 0x16	; 22
    f70e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	
	_kSERIAL_MON_PRINT_NUM();
    f712:	8f e6       	ldi	r24, 0x6F	; 111
    f714:	96 e1       	ldi	r25, 0x16	; 22
    f716:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
	for(i=0;i<6;i++)
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
    f71a:	f7 01       	movw	r30, r14
    f71c:	61 91       	ld	r22, Z+
    f71e:	7f 01       	movw	r14, r30
    f720:	8f e6       	ldi	r24, 0x6F	; 111
    f722:	96 e1       	ldi	r25, 0x16	; 22
    f724:	0e 94 6e ce 	call	0x19cdc	; 0x19cdc <_ZN14HardwareSerial5writeEh>
	sprintf((char *)_sRuble_Parameters.Ruble_ID,"%s",_kRUBLE_ID);       /* Update the Ruble ID */
	_kEEPROM_WRITE(_kEEPROM_LOC_RUBLE_ID,_sRuble_Parameters.Ruble_ID);  /* save the ruble id */
	_kSERIAL_MON_CLEAR();
	
	_kSERIAL_MON_PRINT_NUM();
	for(i=0;i<6;i++)
    f728:	fb e8       	ldi	r31, 0x8B	; 139
    f72a:	ef 16       	cp	r14, r31
    f72c:	f5 e1       	ldi	r31, 0x15	; 21
    f72e:	ff 06       	cpc	r15, r31
    f730:	a1 f7       	brne	.-24     	; 0xf71a <_Z20Param_Initializationv+0x5e>
	{
		_kSERIAL_MON_WRITE(_sRuble_Parameters.Ruble_ID[i]);    /* print Ruble ID on serial monitor */
	}
	_kSERIAL_MON_PRINT_NUM();
    f732:	8f e6       	ldi	r24, 0x6F	; 111
    f734:	96 e1       	ldi	r25, 0x16	; 22
    f736:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
	
	Store_MQTT_Pub_Topics();                        /* store all publish topics */
    f73a:	af d1       	rcall	.+862    	; 0xfa9a <_Z21Store_MQTT_Pub_Topicsv>
	
	Store_MQTT_Sub_Topics();                        /* store all subscribe topics */
    f73c:	3d d2       	rcall	.+1146   	; 0xfbb8 <_Z21Store_MQTT_Sub_Topicsv>
    f73e:	0e 94 07 5f 	call	0xbe0e	; 0xbe0e <_Z13Store_All_APNv>
	
	Store_All_APN();                                /* store all operating network's APN */
    f742:	be 01       	movw	r22, r28
	
	
	_kEEPROM_READ(_kEEPROM_LOC_READ_REGISTRATION,temp);                     /* read that ruble is registered or not */
    f744:	6d 5f       	subi	r22, 0xFD	; 253
    f746:	7f 4f       	sbci	r23, 0xFF	; 255
    f748:	8c e7       	ldi	r24, 0x7C	; 124
    f74a:	94 e0       	ldi	r25, 0x04	; 4
    f74c:	0e 94 a1 71 	call	0xe342	; 0xe342 <_ZN11EEPROMClass3getIcEERT_iS2_.isra.2>
    f750:	9b 81       	ldd	r25, Y+3	; 0x03

	if(temp == _kCHECK_REGISTRATION)  /* if _kEEPROM_LOC_READ_REGISTRATION location filled with 0x09 it means that ruble controller is already register */
    f752:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    f756:	98 30       	cpi	r25, 0x08	; 8
    f758:	81 f4       	brne	.+32     	; 0xf77a <_Z20Param_Initializationv+0xbe>
    f75a:	91 e0       	ldi	r25, 0x01	; 1
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_REGISTERED; /* update that ruble is already registered */
    f75c:	90 93 d6 15 	sts	0x15D6, r25	; 0x8015d6 <_sRuble_Parameters+0x71>
    f760:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f762:	e1 f4       	brne	.+56     	; 0xf79c <_Z20Param_Initializationv+0xe0>
    f764:	67 e0       	ldi	r22, 0x07	; 7
		{	
			_kSERAIL_MON_WRITE("Ruble is already Registered To Sever");                /* for debugging purpose */
    f766:	77 e2       	ldi	r23, 0x27	; 39
    f768:	8f e6       	ldi	r24, 0x6F	; 111
    f76a:	96 e1       	ldi	r25, 0x16	; 22
    f76c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f770:	8f e6       	ldi	r24, 0x6F	; 111
			_kSERIAL_MON_CLEAR();
    f772:	96 e1       	ldi	r25, 0x16	; 22
    f774:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    f778:	11 c0       	rjmp	.+34     	; 0xf79c <_Z20Param_Initializationv+0xe0>
    f77a:	92 e0       	ldi	r25, 0x02	; 2
		}
	}
	else
	{
		_sRuble_Parameters.Ruble_Registration_Status = _eRUBLE_NOT_REGISTERED;  /* set that ruble is not register to server */
    f77c:	90 93 d6 15 	sts	0x15D6, r25	; 0x8015d6 <_sRuble_Parameters+0x71>
    f780:	81 30       	cpi	r24, 0x01	; 1
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    f782:	51 f4       	brne	.+20     	; 0xf798 <_Z20Param_Initializationv+0xdc>
    f784:	66 ee       	ldi	r22, 0xE6	; 230
		{
			_kSERAIL_MON_WRITE("Ruble is not Registered To Sever");                /* for debugging purpose */
    f786:	76 e2       	ldi	r23, 0x26	; 38
    f788:	8f e6       	ldi	r24, 0x6F	; 111
    f78a:	96 e1       	ldi	r25, 0x16	; 22
    f78c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f790:	8f e6       	ldi	r24, 0x6F	; 111
			_kSERIAL_MON_CLEAR();
    f792:	96 e1       	ldi	r25, 0x16	; 22
    f794:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    f798:	0e 94 ff 84 	call	0x109fe	; 0x109fe <_Z16Dummy_Data_Storev>
		}
		/****************************** Reset all the epprom location *************************************************/
		Dummy_Data_Store();
    f79c:	82 e0       	ldi	r24, 0x02	; 2
	}
	
	/********************************** Check gsm fault to init the gsm/gprs network and init broker **************************/
	_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;   /* initially set sim is inserted, then we will check sim status using  AT command */
    f79e:	80 93 14 16 	sts	0x1614, r24	; 0x801614 <_sRuble_Parameters+0xaf>
	
	
	Local_Time_Setting();
    f7a2:	15 dc       	rcall	.-2006   	; 0xefce <_Z18Local_Time_Settingv>
    f7a4:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
	
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    f7a8:	81 30       	cpi	r24, 0x01	; 1
    f7aa:	e1 f0       	breq	.+56     	; 0xf7e4 <_Z20Param_Initializationv+0x128>
    f7ac:	90 91 14 16 	lds	r25, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    f7b0:	91 30       	cpi	r25, 0x01	; 1
    f7b2:	c1 f4       	brne	.+48     	; 0xf7e4 <_Z20Param_Initializationv+0x128>
    f7b4:	0e 94 fe 63 	call	0xc7fc	; 0xc7fc <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    f7b8:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: SIM",10,0,5);        /* print company name */
    f7ba:	40 e0       	ldi	r20, 0x00	; 0
    f7bc:	6a e0       	ldi	r22, 0x0A	; 10
    f7be:	8d e3       	ldi	r24, 0x3D	; 61
    f7c0:	95 e0       	ldi	r25, 0x05	; 5
    f7c2:	0e 94 d2 63 	call	0xc7a4	; 0xc7a4 <_Z14Lcd_Print_BuffPchhh>
    f7c6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f7ca:	81 30       	cpi	r24, 0x01	; 1
    f7cc:	51 f4       	brne	.+20     	; 0xf7e2 <_Z20Param_Initializationv+0x126>
    f7ce:	6f ec       	ldi	r22, 0xCF	; 207
			{
				_kSERAIL_MON_WRITE("Please Insert Sim Card");  /* for debugging purpose */
    f7d0:	76 e2       	ldi	r23, 0x26	; 38
    f7d2:	8f e6       	ldi	r24, 0x6F	; 111
    f7d4:	96 e1       	ldi	r25, 0x16	; 22
    f7d6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f7da:	8f e6       	ldi	r24, 0x6F	; 111
				_kSERIAL_MON_CLEAR();
    f7dc:	96 e1       	ldi	r25, 0x16	; 22
    f7de:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    f7e2:	ff cf       	rjmp	.-2      	; 0xf7e2 <_Z20Param_Initializationv+0x126>
    f7e4:	90 91 d4 15 	lds	r25, 0x15D4	; 0x8015d4 <_sRuble_Parameters+0x6f>
			}
			while(1);
		}
	}
	
	if(!(_sRuble_Parameters.Hardware_Faults & _eGSM_INIT_FAIL))
    f7e8:	90 fd       	sbrc	r25, 0
    f7ea:	09 c0       	rjmp	.+18     	; 0xf7fe <_Z20Param_Initializationv+0x142>
    f7ec:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
	{
		_sRuble_Parameters.Display_Update |= _eSEARCHING_FOR_NETWORK;
    f7f0:	80 62       	ori	r24, 0x20	; 32
    f7f2:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
		Display_Update_1();
    f7f6:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
		Init_Broker();          /* if gsm initialize successfully then call the init_broker() function */
    f7fa:	69 d4       	rcall	.+2258   	; 0x100ce <_Z11Init_Brokerv>
    f7fc:	28 c0       	rjmp	.+80     	; 0xf84e <_Z20Param_Initializationv+0x192>
    f7fe:	81 30       	cpi	r24, 0x01	; 1
	}
	else
	{
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    f800:	c1 f0       	breq	.+48     	; 0xf832 <_Z20Param_Initializationv+0x176>
    f802:	0e 94 fe 63 	call	0xc7fc	; 0xc7fc <_Z9Lcd_Clearv>
		{
			_kLCD_CLEAR();
    f806:	25 e0       	ldi	r18, 0x05	; 5
			_kLCD_BUFF_WRITE("FAULT: GSM",10,0,5);        /* print company name */
    f808:	40 e0       	ldi	r20, 0x00	; 0
    f80a:	6a e0       	ldi	r22, 0x0A	; 10
    f80c:	88 e4       	ldi	r24, 0x48	; 72
    f80e:	95 e0       	ldi	r25, 0x05	; 5
    f810:	0e 94 d2 63 	call	0xc7a4	; 0xc7a4 <_Z14Lcd_Print_BuffPchhh>
    f814:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f818:	81 30       	cpi	r24, 0x01	; 1
    f81a:	51 f4       	brne	.+20     	; 0xf830 <_Z20Param_Initializationv+0x174>
    f81c:	69 e7       	ldi	r22, 0x79	; 121
			{
				_kSERAIL_MON_WRITE("NOT REGISTER AND ALSO MODULE NOT WORK, PLEASE CHECK THE MODULE AND RESTART THE DEVICE");  /* for debugging purpose */
    f81e:	76 e2       	ldi	r23, 0x26	; 38
    f820:	8f e6       	ldi	r24, 0x6F	; 111
    f822:	96 e1       	ldi	r25, 0x16	; 22
    f824:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f828:	8f e6       	ldi	r24, 0x6F	; 111
				_kSERIAL_MON_CLEAR();
    f82a:	96 e1       	ldi	r25, 0x16	; 22
    f82c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    f830:	ff cf       	rjmp	.-2      	; 0xf830 <_Z20Param_Initializationv+0x174>
    f832:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
			}
			while(1);
		}
		else
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    f836:	81 30       	cpi	r24, 0x01	; 1
    f838:	51 f4       	brne	.+20     	; 0xf84e <_Z20Param_Initializationv+0x192>
    f83a:	6e e5       	ldi	r22, 0x5E	; 94
			{
				_kSERAIL_MON_WRITE("GSM AND MQTT WILL NOT WORK");                /* for debugging purpose */
    f83c:	76 e2       	ldi	r23, 0x26	; 38
    f83e:	8f e6       	ldi	r24, 0x6F	; 111
    f840:	96 e1       	ldi	r25, 0x16	; 22
    f842:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
    f846:	8f e6       	ldi	r24, 0x6F	; 111
				_kSERIAL_MON_CLEAR();
    f848:	96 e1       	ldi	r25, 0x16	; 22
    f84a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
		}
	}
	
	Read_EEPROM();                        /* read all the data which is stored in the EEPROM till now */
    f84e:	b2 dc       	rcall	.-1692   	; 0xf1b4 <_Z11Read_EEPROMv>
    f850:	07 ee       	ldi	r16, 0xE7	; 231
    f852:	1b e0       	ldi	r17, 0x0B	; 11
    f854:	e1 2c       	mov	r14, r1
    f856:	f1 2c       	mov	r15, r1
    f858:	dd 24       	eor	r13, r13
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    f85a:	d3 94       	inc	r13
    f85c:	b8 01       	movw	r22, r16
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
	{
		sprintf((char*)_sRuble_Parameters.List_Of_Valve_ID[i],"%s",_sEuro_Valve_Param[i].Euro_Valve_ID);
    f85e:	6f 5f       	subi	r22, 0xFF	; 255
    f860:	7f 4f       	sbci	r23, 0xFF	; 255
    f862:	c7 01       	movw	r24, r14
    f864:	87 52       	subi	r24, 0x27	; 39
    f866:	9a 4e       	sbci	r25, 0xEA	; 234
    f868:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
    f86c:	f8 01       	movw	r30, r16
		
		if(_sEuro_Valve_Param[i].Euro_Valve_Number)
    f86e:	80 81       	ld	r24, Z
    f870:	81 11       	cpse	r24, r1
    f872:	d3 86       	std	Z+11, r13	; 0x0b
		{
			/********************** make all valve ONLINE first *********************************/
			_sEuro_Valve_Param[i].Euro_Valve_Online = _kVALVE_ONLINE;
    f874:	f7 e0       	ldi	r31, 0x07	; 7
    f876:	ef 0e       	add	r14, r31
    f878:	f1 1c       	adc	r15, r1
    f87a:	03 5f       	subi	r16, 0xF3	; 243
    f87c:	1f 4f       	sbci	r17, 0xFF	; 255
    f87e:	8c e1       	ldi	r24, 0x1C	; 28
	/******************************************************* Read the pump Nominal current **********************************/
	
	/****************************************************** Turn Off all valves and pumps fisrt *****************************/
	
	/********************************************************** copy the valve ids into the valve id ist **************************************/
	for(i=0;i<_kMAX_EURO_VALVE;i++)
    f880:	e8 16       	cp	r14, r24
    f882:	f1 04       	cpc	r15, r1
    f884:	59 f7       	brne	.-42     	; 0xf85c <_Z20Param_Initializationv+0x1a0>
    f886:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
		}
	}
	
	
	/****************************************** set the operation mode if Read EEPROM function is not working *************************/
	switch(_sRuble_Parameters.Operation_Mode)
    f88a:	81 50       	subi	r24, 0x01	; 1
    f88c:	85 30       	cpi	r24, 0x05	; 5
    f88e:	80 f0       	brcs	.+32     	; 0xf8b0 <_Z20Param_Initializationv+0x1f4>
    f890:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
		{
			
		}break;
		default:
		{
			_sRuble_Parameters.Manual_Mode_Wait = 0;
    f894:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
    f898:	85 e0       	ldi	r24, 0x05	; 5
			_sRuble_Parameters.Operation_Mode   = _eOPER_MOD_SCHEDULER;  // 5/5
    f89a:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
    f89e:	84 e0       	ldi	r24, 0x04	; 4
			_sRuble_Parameters.Operation_Status = _eOPERATION_STAT_OPRN_END;
    f8a0:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
    f8a4:	6c e8       	ldi	r22, 0x8C	; 140
			_kEEPROM_WRITE(_kEEPROM_LOC_OPERATION_MODE,_sRuble_Parameters.Operation_Mode);
    f8a6:	75 e1       	ldi	r23, 0x15	; 21
    f8a8:	80 e6       	ldi	r24, 0x60	; 96
    f8aa:	94 e0       	ldi	r25, 0x04	; 4
    f8ac:	0e 94 1f 72 	call	0xe43e	; 0xe43e <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
    f8b0:	20 e0       	ldi	r18, 0x00	; 0
		}break;
	}
	
	/****************************************** set the CT calibration ************************************************/
	RUBLE_PUMP_CURRENT.current(_kADC_PUMP_CUR, _kCT_CALIBRATION_FACTOR);
    f8b2:	30 e0       	ldi	r19, 0x00	; 0
    f8b4:	40 ec       	ldi	r20, 0xC0	; 192
    f8b6:	50 e4       	ldi	r21, 0x40	; 64
    f8b8:	65 e4       	ldi	r22, 0x45	; 69
    f8ba:	70 e0       	ldi	r23, 0x00	; 0
    f8bc:	81 ea       	ldi	r24, 0xA1	; 161
    f8be:	9c e0       	ldi	r25, 0x0C	; 12
    f8c0:	0e 94 ff d4 	call	0x1a9fe	; 0x1a9fe <_ZN13EnergyMonitor7currentEjd>
    f8c4:	0f 90       	pop	r0
	
}
    f8c6:	0f 90       	pop	r0
    f8c8:	0f 90       	pop	r0
    f8ca:	df 91       	pop	r29
    f8cc:	cf 91       	pop	r28
    f8ce:	1f 91       	pop	r17
    f8d0:	0f 91       	pop	r16
    f8d2:	ff 90       	pop	r15
    f8d4:	ef 90       	pop	r14
    f8d6:	df 90       	pop	r13
    f8d8:	cf 90       	pop	r12
    f8da:	08 95       	ret

0000f8dc <_Z9Check_Simc>:
    f8dc:	0f 93       	push	r16
	return 0;
}


bool Check_Sim(char check_status)
{
    f8de:	1f 93       	push	r17
    f8e0:	cf 93       	push	r28
    f8e2:	df 93       	push	r29
    f8e4:	1f 92       	push	r1
    f8e6:	1f 92       	push	r1
    f8e8:	cd b7       	in	r28, 0x3d	; 61
    f8ea:	de b7       	in	r29, 0x3e	; 62
    f8ec:	18 2f       	mov	r17, r24
	static char counter;
	char temp_data[2];
	
	counter++;
    f8ee:	80 91 92 0c 	lds	r24, 0x0C92	; 0x800c92 <_ZZ9Check_SimcE7counter>
    f8f2:	8f 5f       	subi	r24, 0xFF	; 255
    f8f4:	80 93 92 0c 	sts	0x0C92, r24	; 0x800c92 <_ZZ9Check_SimcE7counter>
	
	if(_kSERIAL_AT.available() != 0)
    f8f8:	8c e2       	ldi	r24, 0x2C	; 44
    f8fa:	98 e1       	ldi	r25, 0x18	; 24
    f8fc:	0e 94 ff cd 	call	0x19bfe	; 0x19bfe <_ZN14HardwareSerial9availableEv>
    f900:	89 2b       	or	r24, r25
    f902:	39 f0       	breq	.+14     	; 0xf912 <_Z9Check_Simc+0x36>
	{
		if(_sRuble_Parameters.Sim_Check == _eSIM_INSERTED)
    f904:	81 e0       	ldi	r24, 0x01	; 1
    f906:	90 91 14 16 	lds	r25, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
    f90a:	92 30       	cpi	r25, 0x02	; 2
    f90c:	09 f0       	breq	.+2      	; 0xf910 <_Z9Check_Simc+0x34>
    f90e:	57 c0       	rjmp	.+174    	; 0xf9be <_Z9Check_Simc+0xe2>
    f910:	5d c0       	rjmp	.+186    	; 0xf9cc <_Z9Check_Simc+0xf0>
		}
		
		return 0;
	}
	
	switch(check_status)
    f912:	13 30       	cpi	r17, 0x03	; 3
    f914:	09 f0       	breq	.+2      	; 0xf918 <_Z9Check_Simc+0x3c>
    f916:	5a c0       	rjmp	.+180    	; 0xf9cc <_Z9Check_Simc+0xf0>
	{
		case _eDIRESCT_CHECK:
		{
			if(_sRuble_Parameters.Sim_Check == _eSIM_NOT_INSERTED)
    f918:	80 91 14 16 	lds	r24, 0x1614	; 0x801614 <_sRuble_Parameters+0xaf>
    f91c:	81 30       	cpi	r24, 0x01	; 1
    f91e:	a1 f5       	brne	.+104    	; 0xf988 <_Z9Check_Simc+0xac>
			{
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    f920:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    f924:	80 7f       	andi	r24, 0xF0	; 240
    f926:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
				
				memset(temp_data,0,sizeof(temp_data));
    f92a:	1a 82       	std	Y+2, r1	; 0x02
    f92c:	19 82       	std	Y+1, r1	; 0x01
				temp_data[0] = 0x1A;
    f92e:	8a e1       	ldi	r24, 0x1A	; 26
    f930:	89 83       	std	Y+1, r24	; 0x01
				_kSERIAL_AT.println((char *)temp_data);
    f932:	be 01       	movw	r22, r28
    f934:	6f 5f       	subi	r22, 0xFF	; 255
    f936:	7f 4f       	sbci	r23, 0xFF	; 255
    f938:	8c e2       	ldi	r24, 0x2C	; 44
    f93a:	98 e1       	ldi	r25, 0x18	; 24
    f93c:	0e 94 cd d0 	call	0x1a19a	; 0x1a19a <_ZN5Print7printlnEPKc>

	             _kSERIAL_AT.println(F("AT+CFUN=1,1"));
    f940:	6b e3       	ldi	r22, 0x3B	; 59
    f942:	75 e2       	ldi	r23, 0x25	; 37
    f944:	8c e2       	ldi	r24, 0x2C	; 44
    f946:	98 e1       	ldi	r25, 0x18	; 24
    f948:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 Send_AT_Command(NULL, "OK",  NULL,10000,1);
    f94c:	01 e0       	ldi	r16, 0x01	; 1
    f94e:	20 e1       	ldi	r18, 0x10	; 16
    f950:	37 e2       	ldi	r19, 0x27	; 39
    f952:	40 e0       	ldi	r20, 0x00	; 0
    f954:	50 e0       	ldi	r21, 0x00	; 0
    f956:	6e e1       	ldi	r22, 0x1E	; 30
    f958:	73 e0       	ldi	r23, 0x03	; 3
    f95a:	80 e0       	ldi	r24, 0x00	; 0
    f95c:	90 e0       	ldi	r25, 0x00	; 0
    f95e:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
				 _kSERIAL_AT.println(F("ATE0"));
    f962:	66 e3       	ldi	r22, 0x36	; 54
    f964:	75 e2       	ldi	r23, 0x25	; 37
    f966:	8c e2       	ldi	r24, 0x2C	; 44
    f968:	98 e1       	ldi	r25, 0x18	; 24
    f96a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 Send_AT_Command(NULL, "OK",  NULL,3000,2);
    f96e:	02 e0       	ldi	r16, 0x02	; 2
    f970:	28 eb       	ldi	r18, 0xB8	; 184
    f972:	3b e0       	ldi	r19, 0x0B	; 11
    f974:	40 e0       	ldi	r20, 0x00	; 0
    f976:	50 e0       	ldi	r21, 0x00	; 0
    f978:	6e e1       	ldi	r22, 0x1E	; 30
    f97a:	73 e0       	ldi	r23, 0x03	; 3
    f97c:	80 e0       	ldi	r24, 0x00	; 0
    f97e:	90 e0       	ldi	r25, 0x00	; 0
    f980:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
				_kGSM_INIT();
    f984:	0e 94 4a 6b 	call	0xd694	; 0xd694 <_Z8Gsm_Initv>
			}
			_kSERIAL_AT.println(F("AT+CPIN?"));
    f988:	6d e2       	ldi	r22, 0x2D	; 45
    f98a:	75 e2       	ldi	r23, 0x25	; 37
    f98c:	8c e2       	ldi	r24, 0x2C	; 44
    f98e:	98 e1       	ldi	r25, 0x18	; 24
    f990:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			if(!Send_AT_Command(NULL, "OK",  NULL,2000,2))
    f994:	02 e0       	ldi	r16, 0x02	; 2
    f996:	20 ed       	ldi	r18, 0xD0	; 208
    f998:	37 e0       	ldi	r19, 0x07	; 7
    f99a:	40 e0       	ldi	r20, 0x00	; 0
    f99c:	50 e0       	ldi	r21, 0x00	; 0
    f99e:	6e e1       	ldi	r22, 0x1E	; 30
    f9a0:	73 e0       	ldi	r23, 0x03	; 3
    f9a2:	80 e0       	ldi	r24, 0x00	; 0
    f9a4:	90 e0       	ldi	r25, 0x00	; 0
    f9a6:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    f9aa:	81 11       	cpse	r24, r1
    f9ac:	0a c0       	rjmp	.+20     	; 0xf9c2 <_Z9Check_Simc+0xe6>
			{
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_1 ;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_2;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_RANGE_3;
				_sRuble_Parameters.Display_Update  &=   ~_kDISP_NO_RANGE;
    f9ae:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
    f9b2:	80 7f       	andi	r24, 0xF0	; 240
    f9b4:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
				_sRuble_Parameters.Sim_Check = _eSIM_NOT_INSERTED;
    f9b8:	81 e0       	ldi	r24, 0x01	; 1
    f9ba:	80 93 14 16 	sts	0x1614, r24	; 0x801614 <_sRuble_Parameters+0xaf>
				return 0;
    f9be:	80 e0       	ldi	r24, 0x00	; 0
    f9c0:	05 c0       	rjmp	.+10     	; 0xf9cc <_Z9Check_Simc+0xf0>
			}
			_sRuble_Parameters.Sim_Check = _eSIM_INSERTED;
    f9c2:	82 e0       	ldi	r24, 0x02	; 2
    f9c4:	80 93 14 16 	sts	0x1614, r24	; 0x801614 <_sRuble_Parameters+0xaf>
			return 1;
    f9c8:	81 e0       	ldi	r24, 0x01	; 1
    f9ca:	00 c0       	rjmp	.+0      	; 0xf9cc <_Z9Check_Simc+0xf0>
		}break;
	}	
}
    f9cc:	0f 90       	pop	r0
    f9ce:	0f 90       	pop	r0
    f9d0:	df 91       	pop	r29
    f9d2:	cf 91       	pop	r28
    f9d4:	1f 91       	pop	r17
    f9d6:	0f 91       	pop	r16
    f9d8:	08 95       	ret

0000f9da <_Z17Clear_Serial_Datav>:


void Clear_Serial_Data(void)
{
    f9da:	cf 92       	push	r12
    f9dc:	df 92       	push	r13
    f9de:	ef 92       	push	r14
    f9e0:	ff 92       	push	r15
	unsigned long previous;
	previous = millis();
    f9e2:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    f9e6:	6b 01       	movw	r12, r22
    f9e8:	7c 01       	movw	r14, r24
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    f9ea:	8c e2       	ldi	r24, 0x2C	; 44
    f9ec:	98 e1       	ldi	r25, 0x18	; 24
    f9ee:	0e 94 ff cd 	call	0x19bfe	; 0x19bfe <_ZN14HardwareSerial9availableEv>
    f9f2:	18 16       	cp	r1, r24
    f9f4:	19 06       	cpc	r1, r25
    f9f6:	94 f4       	brge	.+36     	; 0xfa1c <_Z17Clear_Serial_Datav+0x42>
    f9f8:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
    f9fc:	dc 01       	movw	r26, r24
    f9fe:	cb 01       	movw	r24, r22
    fa00:	8c 19       	sub	r24, r12
    fa02:	9d 09       	sbc	r25, r13
    fa04:	ae 09       	sbc	r26, r14
    fa06:	bf 09       	sbc	r27, r15
    fa08:	84 36       	cpi	r24, 0x64	; 100
    fa0a:	91 05       	cpc	r25, r1
    fa0c:	a1 05       	cpc	r26, r1
    fa0e:	b1 05       	cpc	r27, r1
    fa10:	28 f4       	brcc	.+10     	; 0xfa1c <_Z17Clear_Serial_Datav+0x42>
	{
		_kSERIAL_AT.read(); // clears the buffer
    fa12:	8c e2       	ldi	r24, 0x2C	; 44
    fa14:	98 e1       	ldi	r25, 0x18	; 24
    fa16:	0e 94 20 ce 	call	0x19c40	; 0x19c40 <_ZN14HardwareSerial4readEv>

void Clear_Serial_Data(void)
{
	unsigned long previous;
	previous = millis();
	while (_kSERIAL_AT.available() > 0 && ((millis() - previous) < 100))
    fa1a:	e7 cf       	rjmp	.-50     	; 0xf9ea <_Z17Clear_Serial_Datav+0x10>
	{
		_kSERIAL_AT.read(); // clears the buffer
	}
}
    fa1c:	ff 90       	pop	r15
    fa1e:	ef 90       	pop	r14
    fa20:	df 90       	pop	r13
    fa22:	cf 90       	pop	r12
    fa24:	08 95       	ret

0000fa26 <_Z23Update_Lira_Sensor_DataPh>:
// 			return 1;    /* if id get matched lira sensor node */
// 		}
// 	}
	
	return 0;           /*  id not matched with any lira sensor node */
}
    fa26:	80 e0       	ldi	r24, 0x00	; 0
    fa28:	08 95       	ret

0000fa2a <_Z16Lira_Data_EEPROMh>:


void Lira_Data_EEPROM(unsigned char plot_number)
{
    fa2a:	df 92       	push	r13
    fa2c:	ef 92       	push	r14
    fa2e:	ff 92       	push	r15
    fa30:	0f 93       	push	r16
    fa32:	1f 93       	push	r17
    fa34:	cf 93       	push	r28
    fa36:	df 93       	push	r29
	_kEEPROM_WRITE(_kEEPROM_LOC_LIRA_SENSOR_DATA(plot_number), _sLira_Node_Param[plot_number]);
    fa38:	90 e0       	ldi	r25, 0x00	; 0
    fa3a:	ac 01       	movw	r20, r24
    fa3c:	41 50       	subi	r20, 0x01	; 1
    fa3e:	51 09       	sbc	r21, r1
    fa40:	68 e2       	ldi	r22, 0x28	; 40
    fa42:	64 9f       	mul	r22, r20
    fa44:	90 01       	movw	r18, r0
    fa46:	65 9f       	mul	r22, r21
    fa48:	30 0d       	add	r19, r0
    fa4a:	11 24       	eor	r1, r1
    fa4c:	e9 01       	movw	r28, r18
    fa4e:	28 96       	adiw	r28, 0x08	; 8
    fa50:	66 e0       	ldi	r22, 0x06	; 6
    fa52:	68 9f       	mul	r22, r24
    fa54:	a0 01       	movw	r20, r0
    fa56:	69 9f       	mul	r22, r25
    fa58:	50 0d       	add	r21, r0
    fa5a:	11 24       	eor	r1, r1
    fa5c:	ca 01       	movw	r24, r20
    fa5e:	83 50       	subi	r24, 0x03	; 3
    fa60:	93 4f       	sbci	r25, 0xF3	; 243
    fa62:	7c 01       	movw	r14, r24
    fa64:	89 01       	movw	r16, r18
    fa66:	02 5f       	subi	r16, 0xF2	; 242
    fa68:	1f 4f       	sbci	r17, 0xFF	; 255
    fa6a:	f7 01       	movw	r30, r14
    fa6c:	d1 90       	ld	r13, Z+
    fa6e:	7f 01       	movw	r14, r30

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    fa70:	ce 01       	movw	r24, r28
    fa72:	0e 94 9a ec 	call	0x1d934	; 0x1d934 <eeprom_read_byte>
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }
    
    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    fa76:	d8 16       	cp	r13, r24
    fa78:	21 f0       	breq	.+8      	; 0xfa82 <_Z16Lira_Data_EEPROMh+0x58>
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    fa7a:	6d 2d       	mov	r22, r13
    fa7c:	ce 01       	movw	r24, r28
    fa7e:	0e 94 a2 ec 	call	0x1d944	; 0x1d944 <eeprom_write_byte>
    fa82:	21 96       	adiw	r28, 0x01	; 1
    }
    
    template< typename T > const T &put( int idx, const T &t ){
        EEPtr e = idx;
        const uint8_t *ptr = (const uint8_t*) &t;
        for( int count = sizeof(T) ; count ; --count, ++e )  (*e).update( *ptr++ );
    fa84:	c0 17       	cp	r28, r16
    fa86:	d1 07       	cpc	r29, r17
    fa88:	81 f7       	brne	.-32     	; 0xfa6a <_Z16Lira_Data_EEPROMh+0x40>
	return;
}
    fa8a:	df 91       	pop	r29
    fa8c:	cf 91       	pop	r28
    fa8e:	1f 91       	pop	r17
    fa90:	0f 91       	pop	r16
    fa92:	ff 90       	pop	r15
    fa94:	ef 90       	pop	r14
    fa96:	df 90       	pop	r13
    fa98:	08 95       	ret

0000fa9a <_Z21Store_MQTT_Pub_Topicsv>:
Broker_Info          _sBroker_Info;
Network_and_Usr_Info _sNetwork_and_Usr_Info;


void Store_MQTT_Pub_Topics(void)
{
    fa9a:	cf 93       	push	r28
    fa9c:	df 93       	push	r29
	sprintf(_sPublish_Topic.Ruble_Register,"SICCA/STATE/%s",_sRuble_Parameters.Ruble_ID);    /* ruble registration topic */ // done
    fa9e:	c5 e8       	ldi	r28, 0x85	; 133
    faa0:	d5 e1       	ldi	r29, 0x15	; 21
    faa2:	df 93       	push	r29
    faa4:	cf 93       	push	r28
    faa6:	83 e5       	ldi	r24, 0x53	; 83
    faa8:	95 e0       	ldi	r25, 0x05	; 5
    faaa:	9f 93       	push	r25
    faac:	8f 93       	push	r24
    faae:	8e e7       	ldi	r24, 0x7E	; 126
    fab0:	9d e0       	ldi	r25, 0x0D	; 13
    fab2:	9f 93       	push	r25
    fab4:	8f 93       	push	r24
    fab6:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sPublish_Topic.Ruble_Faults, "SICCA/CODES/%s",_sRuble_Parameters.Ruble_ID);                // done
    faba:	df 93       	push	r29
    fabc:	cf 93       	push	r28
    fabe:	82 e6       	ldi	r24, 0x62	; 98
    fac0:	95 e0       	ldi	r25, 0x05	; 5
    fac2:	9f 93       	push	r25
    fac4:	8f 93       	push	r24
    fac6:	81 e9       	ldi	r24, 0x91	; 145
    fac8:	9d e0       	ldi	r25, 0x0D	; 13
    faca:	9f 93       	push	r25
    facc:	8f 93       	push	r24
    face:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sPublish_Topic.Ruble_Data, "SICCA/CONTROLLER/DATA/%s",_sRuble_Parameters.Ruble_ID);        // done
    fad2:	df 93       	push	r29
    fad4:	cf 93       	push	r28
    fad6:	81 e7       	ldi	r24, 0x71	; 113
    fad8:	95 e0       	ldi	r25, 0x05	; 5
    fada:	9f 93       	push	r25
    fadc:	8f 93       	push	r24
    fade:	84 ea       	ldi	r24, 0xA4	; 164
    fae0:	9d e0       	ldi	r25, 0x0D	; 13
    fae2:	9f 93       	push	r25
    fae4:	8f 93       	push	r24
    fae6:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sPublish_Topic.Timer_FeedBack, "SICCA/TIMER/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);     // done
    faea:	df 93       	push	r29
    faec:	cf 93       	push	r28
    faee:	8a e8       	ldi	r24, 0x8A	; 138
    faf0:	95 e0       	ldi	r25, 0x05	; 5
    faf2:	9f 93       	push	r25
    faf4:	8f 93       	push	r24
    faf6:	81 ec       	ldi	r24, 0xC1	; 193
    faf8:	9d e0       	ldi	r25, 0x0D	; 13
    fafa:	9f 93       	push	r25
    fafc:	8f 93       	push	r24
    fafe:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sPublish_Topic.Ruble_Restart, "SICCA/CONTROLLER/RESTART/%s",_sRuble_Parameters.Ruble_ID);  // done
    fb02:	df 93       	push	r29
    fb04:	cf 93       	push	r28
    fb06:	82 ea       	ldi	r24, 0xA2	; 162
    fb08:	95 e0       	ldi	r25, 0x05	; 5
    fb0a:	9f 93       	push	r25
    fb0c:	8f 93       	push	r24
    fb0e:	8d ed       	ldi	r24, 0xDD	; 221
    fb10:	9d e0       	ldi	r25, 0x0D	; 13
    fb12:	9f 93       	push	r25
    fb14:	8f 93       	push	r24
    fb16:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>

	sprintf(_sPublish_Topic.General_Feedback, "SICCA/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);         // done
    fb1a:	df 93       	push	r29
    fb1c:	cf 93       	push	r28
    fb1e:	8e eb       	ldi	r24, 0xBE	; 190
    fb20:	95 e0       	ldi	r25, 0x05	; 5
    fb22:	9f 93       	push	r25
    fb24:	8f 93       	push	r24
    fb26:	8d e3       	ldi	r24, 0x3D	; 61
    fb28:	9e e0       	ldi	r25, 0x0E	; 14
    fb2a:	9f 93       	push	r25
    fb2c:	8f 93       	push	r24
    fb2e:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
    
	strcpy(_sPublish_Topic.Lira_Node_Data,"SICCA/SENSOR/DATA");                                         // done
    fb32:	8d b7       	in	r24, 0x3d	; 61
    fb34:	9e b7       	in	r25, 0x3e	; 62
    fb36:	84 96       	adiw	r24, 0x24	; 36
    fb38:	0f b6       	in	r0, 0x3f	; 63
    fb3a:	f8 94       	cli
    fb3c:	9e bf       	out	0x3e, r25	; 62
    fb3e:	0f be       	out	0x3f, r0	; 63
    fb40:	8d bf       	out	0x3d, r24	; 61
    fb42:	60 ed       	ldi	r22, 0xD0	; 208
    fb44:	75 e0       	ldi	r23, 0x05	; 5
    fb46:	8d ef       	ldi	r24, 0xFD	; 253
    fb48:	9d e0       	ldi	r25, 0x0D	; 13
    fb4a:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
	
	sprintf(_sPublish_Topic.Euro_Valve_Data, "%s","SICCA/VALVE/DATA");
    fb4e:	62 ee       	ldi	r22, 0xE2	; 226
    fb50:	75 e0       	ldi	r23, 0x05	; 5
    fb52:	8f e0       	ldi	r24, 0x0F	; 15
    fb54:	9e e0       	ldi	r25, 0x0E	; 14
    fb56:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
	
	sprintf(_sPublish_Topic.Hardware_Faults, "SICCA/HARDWARE/FAULTS/%s",_sRuble_Parameters.Ruble_ID);
    fb5a:	df 93       	push	r29
    fb5c:	cf 93       	push	r28
    fb5e:	83 ef       	ldi	r24, 0xF3	; 243
    fb60:	95 e0       	ldi	r25, 0x05	; 5
    fb62:	9f 93       	push	r25
    fb64:	8f 93       	push	r24
    fb66:	80 e2       	ldi	r24, 0x20	; 32
    fb68:	9e e0       	ldi	r25, 0x0E	; 14
    fb6a:	9f 93       	push	r25
    fb6c:	8f 93       	push	r24
    fb6e:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	//sprintf(_sPublish_Topic.Electricity_Status_Topic, "SICCA/Elect_Stat/%s",_sRuble_Parameters.Ruble_ID);        // done
	
	//sprintf(_sPublish_Topic.Wired_Valve_Fail, "SICCA/Wired_Fail/%s",_sRuble_Parameters.Ruble_ID);                // done
	
	sprintf(_sPublish_Topic.Calibration_FeedBack, "SICCA/CALIBRATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    fb72:	df 93       	push	r29
    fb74:	cf 93       	push	r28
    fb76:	8c e0       	ldi	r24, 0x0C	; 12
    fb78:	96 e0       	ldi	r25, 0x06	; 6
    fb7a:	9f 93       	push	r25
    fb7c:	8f 93       	push	r24
    fb7e:	83 e5       	ldi	r24, 0x53	; 83
    fb80:	9e e0       	ldi	r25, 0x0E	; 14
    fb82:	9f 93       	push	r25
    fb84:	8f 93       	push	r24
    fb86:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	//sprintf(_sPublish_Topic.Extra_Plot_Feedback, "SICCA/EX_Timer/FB/%s",_sRuble_Parameters.Ruble_ID);
	
	sprintf(_sPublish_Topic.One_Touch_Monitor,"SICCA/DEVICE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID);
    fb8a:	df 93       	push	r29
    fb8c:	cf 93       	push	r28
    fb8e:	88 e2       	ldi	r24, 0x28	; 40
    fb90:	96 e0       	ldi	r25, 0x06	; 6
    fb92:	9f 93       	push	r25
    fb94:	8f 93       	push	r24
    fb96:	83 e7       	ldi	r24, 0x73	; 115
    fb98:	9e e0       	ldi	r25, 0x0E	; 14
    fb9a:	9f 93       	push	r25
    fb9c:	8f 93       	push	r24
    fb9e:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
		
}
    fba2:	8d b7       	in	r24, 0x3d	; 61
    fba4:	9e b7       	in	r25, 0x3e	; 62
    fba6:	42 96       	adiw	r24, 0x12	; 18
    fba8:	0f b6       	in	r0, 0x3f	; 63
    fbaa:	f8 94       	cli
    fbac:	9e bf       	out	0x3e, r25	; 62
    fbae:	0f be       	out	0x3f, r0	; 63
    fbb0:	8d bf       	out	0x3d, r24	; 61
    fbb2:	df 91       	pop	r29
    fbb4:	cf 91       	pop	r28
    fbb6:	08 95       	ret

0000fbb8 <_Z21Store_MQTT_Sub_Topicsv>:


void Store_MQTT_Sub_Topics(void)
{	
    fbb8:	cf 93       	push	r28
    fbba:	df 93       	push	r29
	sprintf(_sSubscribe_Topic.Ruble_Register_Feedback, "SICCA/STATE/FEEDBACK/%s",_sRuble_Parameters.Ruble_ID); // done
    fbbc:	c5 e8       	ldi	r28, 0x85	; 133
    fbbe:	d5 e1       	ldi	r29, 0x15	; 21
    fbc0:	df 93       	push	r29
    fbc2:	cf 93       	push	r28
    fbc4:	81 e4       	ldi	r24, 0x41	; 65
    fbc6:	96 e0       	ldi	r25, 0x06	; 6
    fbc8:	9f 93       	push	r25
    fbca:	8f 93       	push	r24
    fbcc:	80 e9       	ldi	r24, 0x90	; 144
    fbce:	9e e0       	ldi	r25, 0x0E	; 14
    fbd0:	9f 93       	push	r25
    fbd2:	8f 93       	push	r24
    fbd4:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Ruble_Plot_Setup, "SICCA/CONFIG/SETUP/PLOT/%s",_sRuble_Parameters.Ruble_ID);     // done
    fbd8:	df 93       	push	r29
    fbda:	cf 93       	push	r28
    fbdc:	89 e5       	ldi	r24, 0x59	; 89
    fbde:	96 e0       	ldi	r25, 0x06	; 6
    fbe0:	9f 93       	push	r25
    fbe2:	8f 93       	push	r24
    fbe4:	8c ea       	ldi	r24, 0xAC	; 172
    fbe6:	9e e0       	ldi	r25, 0x0E	; 14
    fbe8:	9f 93       	push	r25
    fbea:	8f 93       	push	r24
    fbec:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Ruble_Set_Timer, "SICCA/TIMER/%s",_sRuble_Parameters.Ruble_ID);                  // done
    fbf0:	df 93       	push	r29
    fbf2:	cf 93       	push	r28
    fbf4:	84 e7       	ldi	r24, 0x74	; 116
    fbf6:	96 e0       	ldi	r25, 0x06	; 6
    fbf8:	9f 93       	push	r25
    fbfa:	8f 93       	push	r24
    fbfc:	8b ec       	ldi	r24, 0xCB	; 203
    fbfe:	9e e0       	ldi	r25, 0x0E	; 14
    fc00:	9f 93       	push	r25
    fc02:	8f 93       	push	r24
    fc04:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Ruble_Soil_Coff, "SICCA/SOIL/COEFF/%s",_sRuble_Parameters.Ruble_ID);             // done 
    fc08:	df 93       	push	r29
    fc0a:	cf 93       	push	r28
    fc0c:	83 e8       	ldi	r24, 0x83	; 131
    fc0e:	96 e0       	ldi	r25, 0x06	; 6
    fc10:	9f 93       	push	r25
    fc12:	8f 93       	push	r24
    fc14:	8e ed       	ldi	r24, 0xDE	; 222
    fc16:	9e e0       	ldi	r25, 0x0E	; 14
    fc18:	9f 93       	push	r25
    fc1a:	8f 93       	push	r24
    fc1c:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Ruble_Controller_Setup, "SICCA/CONFIG/SETUP/%s",_sRuble_Parameters.Ruble_ID);    // done
    fc20:	df 93       	push	r29
    fc22:	cf 93       	push	r28
    fc24:	87 e9       	ldi	r24, 0x97	; 151
    fc26:	96 e0       	ldi	r25, 0x06	; 6
    fc28:	9f 93       	push	r25
    fc2a:	8f 93       	push	r24
    fc2c:	80 e1       	ldi	r24, 0x10	; 16
    fc2e:	9f e0       	ldi	r25, 0x0F	; 15
    fc30:	9f 93       	push	r25
    fc32:	8f 93       	push	r24
    fc34:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Ruble_Euro_Valve_Set, "SICCA/DELETE/VALVE/%s",_sRuble_Parameters.Ruble_ID);       // done
    fc38:	df 93       	push	r29
    fc3a:	cf 93       	push	r28
    fc3c:	8d ea       	ldi	r24, 0xAD	; 173
    fc3e:	96 e0       	ldi	r25, 0x06	; 6
    fc40:	9f 93       	push	r25
    fc42:	8f 93       	push	r24
    fc44:	86 ef       	ldi	r24, 0xF6	; 246
    fc46:	9e e0       	ldi	r25, 0x0E	; 14
    fc48:	9f 93       	push	r25
    fc4a:	8f 93       	push	r24
    fc4c:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	//sprintf(_sSubscribe_Topic.Mode_Change, "SICCA/Mode_Change/%s",_sRuble_Parameters.Ruble_ID);                // done
	
	sprintf(_sSubscribe_Topic.Calibration, "SICCA/CALIBRATE/%s",_sRuble_Parameters.Ruble_ID);                // done	
    fc50:	8d b7       	in	r24, 0x3d	; 61
    fc52:	9e b7       	in	r25, 0x3e	; 62
    fc54:	84 96       	adiw	r24, 0x24	; 36
    fc56:	0f b6       	in	r0, 0x3f	; 63
    fc58:	f8 94       	cli
    fc5a:	9e bf       	out	0x3e, r25	; 62
    fc5c:	0f be       	out	0x3f, r0	; 63
    fc5e:	8d bf       	out	0x3d, r24	; 61
    fc60:	df 93       	push	r29
    fc62:	cf 93       	push	r28
    fc64:	83 ec       	ldi	r24, 0xC3	; 195
    fc66:	96 e0       	ldi	r25, 0x06	; 6
    fc68:	9f 93       	push	r25
    fc6a:	8f 93       	push	r24
    fc6c:	8a e2       	ldi	r24, 0x2A	; 42
    fc6e:	9f e0       	ldi	r25, 0x0F	; 15
    fc70:	9f 93       	push	r25
    fc72:	8f 93       	push	r24
    fc74:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	//sprintf(_sSubscribe_Topic.SMS_Alert_ON,"SICCA/SMS_ON/%s",_sRuble_Parameters.Ruble_ID);
	
	sprintf(_sSubscribe_Topic.Schedule_Topic,"SICCA/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    fc78:	df 93       	push	r29
    fc7a:	cf 93       	push	r28
    fc7c:	86 ed       	ldi	r24, 0xD6	; 214
    fc7e:	96 e0       	ldi	r25, 0x06	; 6
    fc80:	9f 93       	push	r25
    fc82:	8f 93       	push	r24
    fc84:	81 e4       	ldi	r24, 0x41	; 65
    fc86:	9f e0       	ldi	r25, 0x0F	; 15
    fc88:	9f 93       	push	r25
    fc8a:	8f 93       	push	r24
    fc8c:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.One_Touch_Feedback, "SICCA/DEVICE/%s",_sRuble_Parameters.Ruble_ID);
    fc90:	df 93       	push	r29
    fc92:	cf 93       	push	r28
    fc94:	88 ee       	ldi	r24, 0xE8	; 232
    fc96:	96 e0       	ldi	r25, 0x06	; 6
    fc98:	9f 93       	push	r25
    fc9a:	8f 93       	push	r24
    fc9c:	87 e5       	ldi	r24, 0x57	; 87
    fc9e:	9f e0       	ldi	r25, 0x0F	; 15
    fca0:	9f 93       	push	r25
    fca2:	8f 93       	push	r24
    fca4:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	sprintf(_sSubscribe_Topic.Tank_Schedule, "SICCA/TANK/SCHEDULE/%s",_sRuble_Parameters.Ruble_ID);
    fca8:	df 93       	push	r29
    fcaa:	cf 93       	push	r28
    fcac:	88 ef       	ldi	r24, 0xF8	; 248
    fcae:	96 e0       	ldi	r25, 0x06	; 6
    fcb0:	9f 93       	push	r25
    fcb2:	8f 93       	push	r24
    fcb4:	8b e6       	ldi	r24, 0x6B	; 107
    fcb6:	9f e0       	ldi	r25, 0x0F	; 15
    fcb8:	9f 93       	push	r25
    fcba:	8f 93       	push	r24
    fcbc:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
	
	//sprintf(_sSubscribe_Topic.Delete_Plot_Devices,"SICCA/PLT_DEL/%s", _sRuble_Parameters.Ruble_ID);
	
	//sprintf(_sSubscribe_Topic.Kill_Switch_Topic, "SICCA/KILL/%s",_sRuble_Parameters.Ruble_ID);
	
}
    fcc0:	8d b7       	in	r24, 0x3d	; 61
    fcc2:	9e b7       	in	r25, 0x3e	; 62
    fcc4:	48 96       	adiw	r24, 0x18	; 24
    fcc6:	0f b6       	in	r0, 0x3f	; 63
    fcc8:	f8 94       	cli
    fcca:	9e bf       	out	0x3e, r25	; 62
    fccc:	0f be       	out	0x3f, r0	; 63
    fcce:	8d bf       	out	0x3d, r24	; 61
    fcd0:	df 91       	pop	r29
    fcd2:	cf 91       	pop	r28
    fcd4:	08 95       	ret

0000fcd6 <_Z21Subscribe_MQTT_Topicsv>:
	}
}


bool Subscribe_MQTT_Topics(void)
{
    fcd6:	cf 93       	push	r28
	char temp_flag = _kRESET;
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Euro_Valve_Set))
    fcd8:	86 ef       	ldi	r24, 0xF6	; 246
    fcda:	9e e0       	ldi	r25, 0x0E	; 14
    fcdc:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fce0:	81 11       	cpse	r24, r1
    fce2:	0f c0       	rjmp	.+30     	; 0xfd02 <_Z21Subscribe_MQTT_Topicsv+0x2c>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fce4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    fce8:	81 30       	cpi	r24, 0x01	; 1
    fcea:	69 f4       	brne	.+26     	; 0xfd06 <_Z21Subscribe_MQTT_Topicsv+0x30>
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
    fcec:	6c e2       	ldi	r22, 0x2C	; 44
    fcee:	77 e2       	ldi	r23, 0x27	; 39
    fcf0:	8f e6       	ldi	r24, 0x6F	; 111
    fcf2:	96 e1       	ldi	r25, 0x16	; 22
    fcf4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fcf8:	8f e6       	ldi	r24, 0x6F	; 111
    fcfa:	96 e1       	ldi	r25, 0x16	; 22
    fcfc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    fd00:	02 c0       	rjmp	.+4      	; 0xfd06 <_Z21Subscribe_MQTT_Topicsv+0x30>
}


bool Subscribe_MQTT_Topics(void)
{
	char temp_flag = _kRESET;
    fd02:	c0 e0       	ldi	r28, 0x00	; 0
    fd04:	01 c0       	rjmp	.+2      	; 0xfd08 <_Z21Subscribe_MQTT_Topicsv+0x32>
		if(_sRuble_Parameters.Debug_Mode == _kSET)
		{
			_kSERAIL_MON_WRITE("_sSubscribe_Topic.Ruble_Euro_Valve_Set fail");                /* for debugging purpose */
			_kSERIAL_MON_CLEAR();
		}
		temp_flag = _kSET;
    fd06:	c1 e0       	ldi	r28, 0x01	; 1
	}
		
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Plot_Setup))
    fd08:	8c ea       	ldi	r24, 0xAC	; 172
    fd0a:	9e e0       	ldi	r25, 0x0E	; 14
    fd0c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd10:	81 11       	cpse	r24, r1
    fd12:	01 c0       	rjmp	.+2      	; 0xfd16 <_Z21Subscribe_MQTT_Topicsv+0x40>
	{
		temp_flag = _kSET;
    fd14:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Register_Feedback))
    fd16:	80 e9       	ldi	r24, 0x90	; 144
    fd18:	9e e0       	ldi	r25, 0x0E	; 14
    fd1a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd1e:	81 11       	cpse	r24, r1
    fd20:	01 c0       	rjmp	.+2      	; 0xfd24 <_Z21Subscribe_MQTT_Topicsv+0x4e>
	{
		temp_flag = _kSET;
    fd22:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Set_Timer))
    fd24:	8b ec       	ldi	r24, 0xCB	; 203
    fd26:	9e e0       	ldi	r25, 0x0E	; 14
    fd28:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd2c:	81 11       	cpse	r24, r1
    fd2e:	01 c0       	rjmp	.+2      	; 0xfd32 <_Z21Subscribe_MQTT_Topicsv+0x5c>
	{
		temp_flag = _kSET;
    fd30:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Soil_Coff))
    fd32:	8e ed       	ldi	r24, 0xDE	; 222
    fd34:	9e e0       	ldi	r25, 0x0E	; 14
    fd36:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd3a:	81 11       	cpse	r24, r1
    fd3c:	01 c0       	rjmp	.+2      	; 0xfd40 <_Z21Subscribe_MQTT_Topicsv+0x6a>
	{
		temp_flag = _kSET;
    fd3e:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Ruble_Controller_Setup))
    fd40:	80 e1       	ldi	r24, 0x10	; 16
    fd42:	9f e0       	ldi	r25, 0x0F	; 15
    fd44:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd48:	81 11       	cpse	r24, r1
    fd4a:	01 c0       	rjmp	.+2      	; 0xfd4e <_Z21Subscribe_MQTT_Topicsv+0x78>
	{
		temp_flag = _kSET;
    fd4c:	c1 e0       	ldi	r28, 0x01	; 1
// 	if(!_kMQTT_SUB(_sSubscribe_Topic.Mode_Change))
// 	{
// 		temp_flag = _kSET;
// 	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Calibration))
    fd4e:	8a e2       	ldi	r24, 0x2A	; 42
    fd50:	9f e0       	ldi	r25, 0x0F	; 15
    fd52:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd56:	81 11       	cpse	r24, r1
    fd58:	01 c0       	rjmp	.+2      	; 0xfd5c <_Z21Subscribe_MQTT_Topicsv+0x86>
	{
		temp_flag = _kSET;
    fd5a:	c1 e0       	ldi	r28, 0x01	; 1
// 	if(!_kMQTT_SUB(_sSubscribe_Topic.SMS_Alert_ON))
// 	{
// 		temp_flag = _kSET;
// 	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Schedule_Topic))
    fd5c:	81 e4       	ldi	r24, 0x41	; 65
    fd5e:	9f e0       	ldi	r25, 0x0F	; 15
    fd60:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd64:	81 11       	cpse	r24, r1
    fd66:	01 c0       	rjmp	.+2      	; 0xfd6a <_Z21Subscribe_MQTT_Topicsv+0x94>
	{
		temp_flag = _kSET;
    fd68:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.One_Touch_Feedback))
    fd6a:	87 e5       	ldi	r24, 0x57	; 87
    fd6c:	9f e0       	ldi	r25, 0x0F	; 15
    fd6e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd72:	81 11       	cpse	r24, r1
    fd74:	01 c0       	rjmp	.+2      	; 0xfd78 <_Z21Subscribe_MQTT_Topicsv+0xa2>
	{
		temp_flag = _kSET;
    fd76:	c1 e0       	ldi	r28, 0x01	; 1
	}
	
	if(!_kMQTT_SUB(_sSubscribe_Topic.Tank_Schedule))
    fd78:	8b e6       	ldi	r24, 0x6B	; 107
    fd7a:	9f e0       	ldi	r25, 0x0F	; 15
    fd7c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <_Z14MQTT_SUBSCRIBEPc>
    fd80:	88 23       	and	r24, r24
    fd82:	11 f0       	breq	.+4      	; 0xfd88 <_Z21Subscribe_MQTT_Topicsv+0xb2>
// 	{
// 		temp_flag = _kSET;
// 	}
	
	
	if(temp_flag)
    fd84:	cc 23       	and	r28, r28
    fd86:	29 f0       	breq	.+10     	; 0xfd92 <_Z21Subscribe_MQTT_Topicsv+0xbc>
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_NOT_SUBCRIBED;
    fd88:	82 e0       	ldi	r24, 0x02	; 2
    fd8a:	80 93 d7 15 	sts	0x15D7, r24	; 0x8015d7 <_sRuble_Parameters+0x72>
    fd8e:	c1 e0       	ldi	r28, 0x01	; 1
    fd90:	03 c0       	rjmp	.+6      	; 0xfd98 <_Z21Subscribe_MQTT_Topicsv+0xc2>
	}
	else
	{
		_sRuble_Parameters.Subscribe_Topic_Status = _eALL_TOPIC_SUBSCRIBED;
    fd92:	81 e0       	ldi	r24, 0x01	; 1
    fd94:	80 93 d7 15 	sts	0x15D7, r24	; 0x8015d7 <_sRuble_Parameters+0x72>
	}
	
	return !temp_flag;
}
    fd98:	81 e0       	ldi	r24, 0x01	; 1
    fd9a:	8c 27       	eor	r24, r28
    fd9c:	cf 91       	pop	r28
    fd9e:	08 95       	ret

0000fda0 <_Z14Ping_to_Serverv>:
	
}


bool Ping_to_Server(void)
{
    fda0:	0f 93       	push	r16
    fda2:	cf 93       	push	r28
	if(_sRuble_Parameters.Update_Local_Date[2] == 70)
    fda4:	80 91 ab 15 	lds	r24, 0x15AB	; 0x8015ab <_sRuble_Parameters+0x46>
    fda8:	86 34       	cpi	r24, 0x46	; 70
    fdaa:	91 f5       	brne	.+100    	; 0xfe10 <_Z14Ping_to_Serverv+0x70>
	{
		_kSERIAL_AT.println(F("AT+CFUN=1,1"));
    fdac:	6d e3       	ldi	r22, 0x3D	; 61
    fdae:	78 e2       	ldi	r23, 0x28	; 40
    fdb0:	8c e2       	ldi	r24, 0x2C	; 44
    fdb2:	98 e1       	ldi	r25, 0x18	; 24
    fdb4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,10000,1);
    fdb8:	01 e0       	ldi	r16, 0x01	; 1
    fdba:	20 e1       	ldi	r18, 0x10	; 16
    fdbc:	37 e2       	ldi	r19, 0x27	; 39
    fdbe:	40 e0       	ldi	r20, 0x00	; 0
    fdc0:	50 e0       	ldi	r21, 0x00	; 0
    fdc2:	6e e1       	ldi	r22, 0x1E	; 30
    fdc4:	73 e0       	ldi	r23, 0x03	; 3
    fdc6:	80 e0       	ldi	r24, 0x00	; 0
    fdc8:	90 e0       	ldi	r25, 0x00	; 0
    fdca:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
		_kDELAY_MS(10000);
    fdce:	60 e1       	ldi	r22, 0x10	; 16
    fdd0:	77 e2       	ldi	r23, 0x27	; 39
    fdd2:	80 e0       	ldi	r24, 0x00	; 0
    fdd4:	90 e0       	ldi	r25, 0x00	; 0
    fdd6:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
		if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fdda:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
    fdde:	81 30       	cpi	r24, 0x01	; 1
    fde0:	31 f0       	breq	.+12     	; 0xfdee <_Z14Ping_to_Serverv+0x4e>
		{
			_kDELAY_MS(120000);
    fde2:	60 ec       	ldi	r22, 0xC0	; 192
    fde4:	74 ed       	ldi	r23, 0xD4	; 212
    fde6:	81 e0       	ldi	r24, 0x01	; 1
    fde8:	90 e0       	ldi	r25, 0x00	; 0
    fdea:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
		}
		_kSERIAL_AT.println(F("ATE0"));
    fdee:	68 e3       	ldi	r22, 0x38	; 56
    fdf0:	78 e2       	ldi	r23, 0x28	; 40
    fdf2:	8c e2       	ldi	r24, 0x2C	; 44
    fdf4:	98 e1       	ldi	r25, 0x18	; 24
    fdf6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		Send_AT_Command(NULL, "OK",  NULL,3000,2);
    fdfa:	02 e0       	ldi	r16, 0x02	; 2
    fdfc:	28 eb       	ldi	r18, 0xB8	; 184
    fdfe:	3b e0       	ldi	r19, 0x0B	; 11
    fe00:	40 e0       	ldi	r20, 0x00	; 0
    fe02:	50 e0       	ldi	r21, 0x00	; 0
    fe04:	6e e1       	ldi	r22, 0x1E	; 30
    fe06:	73 e0       	ldi	r23, 0x03	; 3
    fe08:	80 e0       	ldi	r24, 0x00	; 0
    fe0a:	90 e0       	ldi	r25, 0x00	; 0
    fe0c:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
		//return 0;
	}
	
	
   _kSERIAL_AT.println(F("ATE0"));
    fe10:	63 e3       	ldi	r22, 0x33	; 51
    fe12:	78 e2       	ldi	r23, 0x28	; 40
    fe14:	8c e2       	ldi	r24, 0x2C	; 44
    fe16:	98 e1       	ldi	r25, 0x18	; 24
    fe18:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   Send_AT_Command(NULL, "OK",  NULL,3000,2);
    fe1c:	02 e0       	ldi	r16, 0x02	; 2
    fe1e:	28 eb       	ldi	r18, 0xB8	; 184
    fe20:	3b e0       	ldi	r19, 0x0B	; 11
    fe22:	40 e0       	ldi	r20, 0x00	; 0
    fe24:	50 e0       	ldi	r21, 0x00	; 0
    fe26:	6e e1       	ldi	r22, 0x1E	; 30
    fe28:	73 e0       	ldi	r23, 0x03	; 3
    fe2a:	80 e0       	ldi	r24, 0x00	; 0
    fe2c:	90 e0       	ldi	r25, 0x00	; 0
    fe2e:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
	
	if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    fe32:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
    fe36:	81 30       	cpi	r24, 0x01	; 1
    fe38:	71 f0       	breq	.+28     	; 0xfe56 <_Z14Ping_to_Serverv+0xb6>
	{
		if (!Check_Sim(_eDIRESCT_CHECK))
    fe3a:	83 e0       	ldi	r24, 0x03	; 3
    fe3c:	4f dd       	rcall	.-1378   	; 0xf8dc <_Z9Check_Simc>
    fe3e:	c8 2f       	mov	r28, r24
    fe40:	81 11       	cpse	r24, r1
    fe42:	1d c0       	rjmp	.+58     	; 0xfe7e <_Z14Ping_to_Serverv+0xde>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe44:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    fe48:	81 30       	cpi	r24, 0x01	; 1
    fe4a:	11 f0       	breq	.+4      	; 0xfe50 <_Z14Ping_to_Serverv+0xb0>
			{
				_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
				_kSERIAL_MON_CLEAR();
			}
			return 0;
    fe4c:	c0 e0       	ldi	r28, 0x00	; 0
    fe4e:	3b c1       	rjmp	.+630    	; 0x100c6 <_Z14Ping_to_Serverv+0x326>
	{
		if (!Check_Sim(_eDIRESCT_CHECK))
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
    fe50:	62 e2       	ldi	r22, 0x22	; 34
    fe52:	78 e2       	ldi	r23, 0x28	; 40
    fe54:	0b c0       	rjmp	.+22     	; 0xfe6c <_Z14Ping_to_Serverv+0xcc>
			return 0;
		}
	}
	else
	{
		if (!Check_Sim(_eDIRESCT_CHECK))
    fe56:	83 e0       	ldi	r24, 0x03	; 3
    fe58:	41 dd       	rcall	.-1406   	; 0xf8dc <_Z9Check_Simc>
    fe5a:	c8 2f       	mov	r28, r24
    fe5c:	81 11       	cpse	r24, r1
    fe5e:	0f c0       	rjmp	.+30     	; 0xfe7e <_Z14Ping_to_Serverv+0xde>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    fe60:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    fe64:	81 30       	cpi	r24, 0x01	; 1
    fe66:	91 f7       	brne	.-28     	; 0xfe4c <_Z14Ping_to_Serverv+0xac>
			{
				_kSERAIL_MON_WRITE("Sim is not there");                /* for debugging purpose */
    fe68:	61 e1       	ldi	r22, 0x11	; 17
    fe6a:	78 e2       	ldi	r23, 0x28	; 40
    fe6c:	8f e6       	ldi	r24, 0x6F	; 111
    fe6e:	96 e1       	ldi	r25, 0x16	; 22
    fe70:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    fe74:	8f e6       	ldi	r24, 0x6F	; 111
    fe76:	96 e1       	ldi	r25, 0x16	; 22
    fe78:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
    fe7c:	24 c1       	rjmp	.+584    	; 0x100c6 <_Z14Ping_to_Serverv+0x326>
			}
			return 0;
		}
	}
	
	 _kSERIAL_AT.println(F("AT+QMTCLOSE=0"));
    fe7e:	63 e0       	ldi	r22, 0x03	; 3
    fe80:	78 e2       	ldi	r23, 0x28	; 40
    fe82:	8c e2       	ldi	r24, 0x2C	; 44
    fe84:	98 e1       	ldi	r25, 0x18	; 24
    fe86:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
	if(_kSEND_AT_COMMAND(NULL,"OK",NULL,3000,1))
    fe8a:	01 e0       	ldi	r16, 0x01	; 1
    fe8c:	28 eb       	ldi	r18, 0xB8	; 184
    fe8e:	3b e0       	ldi	r19, 0x0B	; 11
    fe90:	40 e0       	ldi	r20, 0x00	; 0
    fe92:	50 e0       	ldi	r21, 0x00	; 0
    fe94:	6e e1       	ldi	r22, 0x1E	; 30
    fe96:	73 e0       	ldi	r23, 0x03	; 3
    fe98:	80 e0       	ldi	r24, 0x00	; 0
    fe9a:	90 e0       	ldi	r25, 0x00	; 0
    fe9c:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
    fea0:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    fea4:	88 23       	and	r24, r24
    fea6:	29 f0       	breq	.+10     	; 0xfeb2 <_Z14Ping_to_Serverv+0x112>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    fea8:	91 30       	cpi	r25, 0x01	; 1
    feaa:	79 f4       	brne	.+30     	; 0xfeca <_Z14Ping_to_Serverv+0x12a>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE");                /* for debugging purpose */
    feac:	67 ef       	ldi	r22, 0xF7	; 247
    feae:	77 e2       	ldi	r23, 0x27	; 39
    feb0:	04 c0       	rjmp	.+8      	; 0xfeba <_Z14Ping_to_Serverv+0x11a>
			_kSERIAL_MON_CLEAR();
		}
	}
	else
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    feb2:	91 30       	cpi	r25, 0x01	; 1
    feb4:	51 f4       	brne	.+20     	; 0xfeca <_Z14Ping_to_Serverv+0x12a>
		{
			_kSERAIL_MON_WRITE("AT+QMTCLOSE NOT CLOSE ");                /* for debugging purpose */
    feb6:	60 ee       	ldi	r22, 0xE0	; 224
    feb8:	77 e2       	ldi	r23, 0x27	; 39
    feba:	8f e6       	ldi	r24, 0x6F	; 111
    febc:	96 e1       	ldi	r25, 0x16	; 22
    febe:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    fec2:	8f e6       	ldi	r24, 0x6F	; 111
    fec4:	96 e1       	ldi	r25, 0x16	; 22
    fec6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
	}
	
	if(!Gsm_Gprs_Network())
    feca:	0e 94 99 60 	call	0xc132	; 0xc132 <_Z16Gsm_Gprs_Networkv>
    fece:	c8 2f       	mov	r28, r24
    fed0:	81 11       	cpse	r24, r1
    fed2:	06 c0       	rjmp	.+12     	; 0xfee0 <_Z14Ping_to_Serverv+0x140>
	{
		_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
    fed4:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    fed8:	8b 7f       	andi	r24, 0xFB	; 251
    feda:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
		return 0;
    fede:	f3 c0       	rjmp	.+486    	; 0x100c6 <_Z14Ping_to_Serverv+0x326>
		
	}
	
	_sRuble_Parameters.Display_Update |= _eNETWORK_SELECTED;
    fee0:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    fee4:	80 64       	ori	r24, 0x40	; 64
    fee6:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
	 Display_Update_1();  // 20/1/2022
    feea:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
	
	
	if(!_kIS_MQTT_CONNECTED() ||  _sRuble_Parameters.Subscribe_Topic_Status == _eALL_TOPIC_NOT_SUBCRIBED)      /* check weather already connected to server */
    feee:	0e 94 3e 6f 	call	0xde7c	; 0xde7c <_Z17Is_MQTT_Connectedv>
    fef2:	c8 2f       	mov	r28, r24
    fef4:	88 23       	and	r24, r24
    fef6:	29 f0       	breq	.+10     	; 0xff02 <_Z14Ping_to_Serverv+0x162>
    fef8:	80 91 d7 15 	lds	r24, 0x15D7	; 0x8015d7 <_sRuble_Parameters+0x72>
    fefc:	82 30       	cpi	r24, 0x02	; 2
    fefe:	09 f0       	breq	.+2      	; 0xff02 <_Z14Ping_to_Serverv+0x162>
    ff00:	e2 c0       	rjmp	.+452    	; 0x100c6 <_Z14Ping_to_Serverv+0x326>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff02:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ff06:	81 30       	cpi	r24, 0x01	; 1
    ff08:	51 f4       	brne	.+20     	; 0xff1e <_Z14Ping_to_Serverv+0x17e>
		{
			_kSERAIL_MON_WRITE("Try to connect the server");                /* for debugging purpose */
    ff0a:	66 ec       	ldi	r22, 0xC6	; 198
    ff0c:	77 e2       	ldi	r23, 0x27	; 39
    ff0e:	8f e6       	ldi	r24, 0x6F	; 111
    ff10:	96 e1       	ldi	r25, 0x16	; 22
    ff12:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
    ff16:	8f e6       	ldi	r24, 0x6F	; 111
    ff18:	96 e1       	ldi	r25, 0x16	; 22
    ff1a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		
		_sRuble_Parameters.Display_Update =  _eCONNECTING_TO_SERVER;
    ff1e:	10 92 65 15 	sts	0x1565, r1	; 0x801565 <_sRuble_Parameters>
    ff22:	84 e0       	ldi	r24, 0x04	; 4
    ff24:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
    ff28:	10 92 67 15 	sts	0x1567, r1	; 0x801567 <_sRuble_Parameters+0x2>
    ff2c:	10 92 68 15 	sts	0x1568, r1	; 0x801568 <_sRuble_Parameters+0x3>
    ff30:	10 92 69 15 	sts	0x1569, r1	; 0x801569 <_sRuble_Parameters+0x4>
    ff34:	10 92 6a 15 	sts	0x156A, r1	; 0x80156a <_sRuble_Parameters+0x5>
    ff38:	10 92 6b 15 	sts	0x156B, r1	; 0x80156b <_sRuble_Parameters+0x6>
    ff3c:	10 92 6c 15 	sts	0x156C, r1	; 0x80156c <_sRuble_Parameters+0x7>
		Display_Update_1();    // 20/1/2022
    ff40:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
		
		
		if(_kMQTT_CONNCET(_kMQTT_CLIENT_ID,_kMQTT_USER,_kMQTT_PASSWORD))
    ff44:	4f e0       	ldi	r20, 0x0F	; 15
    ff46:	57 e0       	ldi	r21, 0x07	; 7
    ff48:	60 e2       	ldi	r22, 0x20	; 32
    ff4a:	77 e0       	ldi	r23, 0x07	; 7
    ff4c:	cb 01       	movw	r24, r22
    ff4e:	0e 94 72 6f 	call	0xdee4	; 0xdee4 <_Z12MQTT_ConnectPKcS0_S0_>
    ff52:	c8 2f       	mov	r28, r24
    ff54:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ff58:	88 23       	and	r24, r24
    ff5a:	09 f4       	brne	.+2      	; 0xff5e <_Z14Ping_to_Serverv+0x1be>
    ff5c:	6c c0       	rjmp	.+216    	; 0x10036 <_Z14Ping_to_Serverv+0x296>
		{
			if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff5e:	91 30       	cpi	r25, 0x01	; 1
    ff60:	51 f4       	brne	.+20     	; 0xff76 <_Z14Ping_to_Serverv+0x1d6>
			{
				_kSERAIL_MON_WRITE("Connected To server");                /* for debugging purpose */
    ff62:	62 eb       	ldi	r22, 0xB2	; 178
    ff64:	77 e2       	ldi	r23, 0x27	; 39
    ff66:	8f e6       	ldi	r24, 0x6F	; 111
    ff68:	96 e1       	ldi	r25, 0x16	; 22
    ff6a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
    ff6e:	8f e6       	ldi	r24, 0x6F	; 111
    ff70:	96 e1       	ldi	r25, 0x16	; 22
    ff72:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			_sRuble_Parameters.Display_Update |= _kDISP_RANGE_3;
			
			_sRuble_Parameters.Display_Update |=  _eCONNECTED_TO_SERVER;
    ff76:	90 91 65 15 	lds	r25, 0x1565	; 0x801565 <_sRuble_Parameters>
    ff7a:	98 60       	ori	r25, 0x08	; 8
    ff7c:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    ff80:	80 68       	ori	r24, 0x80	; 128
    ff82:	90 93 65 15 	sts	0x1565, r25	; 0x801565 <_sRuble_Parameters>
    ff86:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
			Display_Update_1();   // 20/1/2022
    ff8a:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
			
			 if(Subscribe_MQTT_Topics())
    ff8e:	a3 de       	rcall	.-698    	; 0xfcd6 <_Z21Subscribe_MQTT_Topicsv>
    ff90:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
    ff94:	88 23       	and	r24, r24
    ff96:	91 f0       	breq	.+36     	; 0xffbc <_Z14Ping_to_Serverv+0x21c>
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    ff98:	91 30       	cpi	r25, 0x01	; 1
    ff9a:	51 f4       	brne	.+20     	; 0xffb0 <_Z14Ping_to_Serverv+0x210>
				 {
					 _kSERAIL_MON_WRITE("all topic subscribed");                /* for debugging purpose */
    ff9c:	6d e9       	ldi	r22, 0x9D	; 157
    ff9e:	77 e2       	ldi	r23, 0x27	; 39
    ffa0:	8f e6       	ldi	r24, 0x6F	; 111
    ffa2:	96 e1       	ldi	r25, 0x16	; 22
    ffa4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
    ffa8:	8f e6       	ldi	r24, 0x6F	; 111
    ffaa:	96 e1       	ldi	r25, 0x16	; 22
    ffac:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
				 }
				  _sRuble_Parameters.lndications   |= _eRUBL_INDI_SERVER_CONN;
    ffb0:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
    ffb4:	84 60       	ori	r24, 0x04	; 4
    ffb6:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
    ffba:	08 c0       	rjmp	.+16     	; 0xffcc <_Z14Ping_to_Serverv+0x22c>
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
    ffbc:	91 30       	cpi	r25, 0x01	; 1
    ffbe:	31 f4       	brne	.+12     	; 0xffcc <_Z14Ping_to_Serverv+0x22c>
				 {
					 _kSERAIL_MON_WRITE("all topic not subscribed");                /* for debugging purpose */
    ffc0:	64 e8       	ldi	r22, 0x84	; 132
    ffc2:	77 e2       	ldi	r23, 0x27	; 39
    ffc4:	8f e6       	ldi	r24, 0x6F	; 111
    ffc6:	96 e1       	ldi	r25, 0x16	; 22
    ffc8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 }
			 }
			 
			
			 _sRuble_Parameters.Publish_Topic |=  _ePUB_RUBLE_DATA;
    ffcc:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
    ffd0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
    ffd4:	84 60       	ori	r24, 0x04	; 4
    ffd6:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
    ffda:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
			 
			 if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
    ffde:	e0 91 d6 15 	lds	r30, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
    ffe2:	70 91 65 15 	lds	r23, 0x1565	; 0x801565 <_sRuble_Parameters>
    ffe6:	90 91 66 15 	lds	r25, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
    ffea:	80 91 67 15 	lds	r24, 0x1567	; 0x801567 <_sRuble_Parameters+0x2>
    ffee:	60 91 68 15 	lds	r22, 0x1568	; 0x801568 <_sRuble_Parameters+0x3>
    fff2:	50 91 69 15 	lds	r21, 0x1569	; 0x801569 <_sRuble_Parameters+0x4>
    fff6:	40 91 6a 15 	lds	r20, 0x156A	; 0x80156a <_sRuble_Parameters+0x5>
    fffa:	30 91 6b 15 	lds	r19, 0x156B	; 0x80156b <_sRuble_Parameters+0x6>
    fffe:	20 91 6c 15 	lds	r18, 0x156C	; 0x80156c <_sRuble_Parameters+0x7>
   10002:	e1 30       	cpi	r30, 0x01	; 1
   10004:	21 f0       	breq	.+8      	; 0x1000e <_Z14Ping_to_Serverv+0x26e>
			 {
				  _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   10006:	98 60       	ori	r25, 0x08	; 8
   10008:	90 93 66 15 	sts	0x1566, r25	; 0x801566 <_sRuble_Parameters+0x1>
   1000c:	11 c0       	rjmp	.+34     	; 0x10030 <_Z14Ping_to_Serverv+0x290>
				  Display_Update_1();   // 20/1/2022
			 }
			 else
			 {
				  _sRuble_Parameters.Display_Update |= _eTHANK_YOU_FOR_WAITING;
   1000e:	81 60       	ori	r24, 0x01	; 1
   10010:	70 93 65 15 	sts	0x1565, r23	; 0x801565 <_sRuble_Parameters>
   10014:	90 93 66 15 	sts	0x1566, r25	; 0x801566 <_sRuble_Parameters+0x1>
   10018:	80 93 67 15 	sts	0x1567, r24	; 0x801567 <_sRuble_Parameters+0x2>
   1001c:	60 93 68 15 	sts	0x1568, r22	; 0x801568 <_sRuble_Parameters+0x3>
   10020:	50 93 69 15 	sts	0x1569, r21	; 0x801569 <_sRuble_Parameters+0x4>
   10024:	40 93 6a 15 	sts	0x156A, r20	; 0x80156a <_sRuble_Parameters+0x5>
   10028:	30 93 6b 15 	sts	0x156B, r19	; 0x80156b <_sRuble_Parameters+0x6>
   1002c:	20 93 6c 15 	sts	0x156C, r18	; 0x80156c <_sRuble_Parameters+0x7>
				  Display_Update_1();   // 20/1/2022
   10030:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   10034:	48 c0       	rjmp	.+144    	; 0x100c6 <_Z14Ping_to_Serverv+0x326>
			 
			 return 1;
		}
		else
		{
			_sRuble_Parameters.lndications &= ~_eRUBL_INDI_SERVER_CONN;
   10036:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   1003a:	8b 7f       	andi	r24, 0xFB	; 251
   1003c:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
			_sRuble_Parameters.Display_Update |= _kDISP_NO_RANGE;
   10040:	80 91 65 15 	lds	r24, 0x1565	; 0x801565 <_sRuble_Parameters>
   10044:	81 60       	ori	r24, 0x01	; 1
   10046:	80 93 65 15 	sts	0x1565, r24	; 0x801565 <_sRuble_Parameters>
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   1004a:	91 30       	cpi	r25, 0x01	; 1
   1004c:	51 f4       	brne	.+20     	; 0x10062 <_Z14Ping_to_Serverv+0x2c2>
			{
				_kSERAIL_MON_WRITE("Fail To connect the server");                /* for debugging purpose */
   1004e:	69 e6       	ldi	r22, 0x69	; 105
   10050:	77 e2       	ldi	r23, 0x27	; 39
   10052:	8f e6       	ldi	r24, 0x6F	; 111
   10054:	96 e1       	ldi	r25, 0x16	; 22
   10056:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				_kSERIAL_MON_CLEAR();
   1005a:	8f e6       	ldi	r24, 0x6F	; 111
   1005c:	96 e1       	ldi	r25, 0x16	; 22
   1005e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
			}
			
			 _kSERIAL_AT.println(F("AT+CFUN=1,1"));
   10062:	6d e5       	ldi	r22, 0x5D	; 93
   10064:	77 e2       	ldi	r23, 0x27	; 39
   10066:	8c e2       	ldi	r24, 0x2C	; 44
   10068:	98 e1       	ldi	r25, 0x18	; 24
   1006a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL,"OK",  NULL,10000,1);     // 22/3/2022
   1006e:	01 e0       	ldi	r16, 0x01	; 1
   10070:	20 e1       	ldi	r18, 0x10	; 16
   10072:	37 e2       	ldi	r19, 0x27	; 39
   10074:	40 e0       	ldi	r20, 0x00	; 0
   10076:	50 e0       	ldi	r21, 0x00	; 0
   10078:	6e e1       	ldi	r22, 0x1E	; 30
   1007a:	73 e0       	ldi	r23, 0x03	; 3
   1007c:	80 e0       	ldi	r24, 0x00	; 0
   1007e:	90 e0       	ldi	r25, 0x00	; 0
   10080:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
			_kDELAY_MS(10000);
   10084:	60 e1       	ldi	r22, 0x10	; 16
   10086:	77 e2       	ldi	r23, 0x27	; 39
   10088:	80 e0       	ldi	r24, 0x00	; 0
   1008a:	90 e0       	ldi	r25, 0x00	; 0
   1008c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
			if(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10090:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   10094:	81 30       	cpi	r24, 0x01	; 1
   10096:	31 f0       	breq	.+12     	; 0x100a4 <_Z14Ping_to_Serverv+0x304>
			{
				_kDELAY_MS(120000);
   10098:	60 ec       	ldi	r22, 0xC0	; 192
   1009a:	74 ed       	ldi	r23, 0xD4	; 212
   1009c:	81 e0       	ldi	r24, 0x01	; 1
   1009e:	90 e0       	ldi	r25, 0x00	; 0
   100a0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
			}
			 _kSERIAL_AT.println(F("ATE0"));
   100a4:	68 e5       	ldi	r22, 0x58	; 88
   100a6:	77 e2       	ldi	r23, 0x27	; 39
   100a8:	8c e2       	ldi	r24, 0x2C	; 44
   100aa:	98 e1       	ldi	r25, 0x18	; 24
   100ac:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			Send_AT_Command(NULL, "OK",  NULL,3000,2);
   100b0:	02 e0       	ldi	r16, 0x02	; 2
   100b2:	28 eb       	ldi	r18, 0xB8	; 184
   100b4:	3b e0       	ldi	r19, 0x0B	; 11
   100b6:	40 e0       	ldi	r20, 0x00	; 0
   100b8:	50 e0       	ldi	r21, 0x00	; 0
   100ba:	6e e1       	ldi	r22, 0x1E	; 30
   100bc:	73 e0       	ldi	r23, 0x03	; 3
   100be:	80 e0       	ldi	r24, 0x00	; 0
   100c0:	90 e0       	ldi	r25, 0x00	; 0
   100c2:	0e 94 3a 6a 	call	0xd474	; 0xd474 <_Z15Send_AT_CommandPcS_S_jh>
	}
	else
	{
		return 1;
	}
}
   100c6:	8c 2f       	mov	r24, r28
   100c8:	cf 91       	pop	r28
   100ca:	0f 91       	pop	r16
   100cc:	08 95       	ret

000100ce <_Z11Init_Brokerv>:
	
}


bool Init_Broker(void)
{
   100ce:	cf 92       	push	r12
   100d0:	df 92       	push	r13
   100d2:	ef 92       	push	r14
   100d4:	ff 92       	push	r15
   100d6:	0f 93       	push	r16
   100d8:	1f 93       	push	r17
   100da:	cf 93       	push	r28
   100dc:	df 93       	push	r29
	static unsigned char connect_count;
	static unsigned int loop_count;
	unsigned long previous;
	
	if(_sRuble_Parameters.Ruble_Registration_Status == _eRUBLE_REGISTERED)
   100de:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   100e2:	81 30       	cpi	r24, 0x01	; 1
   100e4:	89 f4       	brne	.+34     	; 0x10108 <_Z11Init_Brokerv+0x3a>
	{
		 if(Ping_to_Server())
   100e6:	5c de       	rcall	.-840    	; 0xfda0 <_Z14Ping_to_Serverv>
   100e8:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   100ec:	88 23       	and	r24, r24
   100ee:	89 f0       	breq	.+34     	; 0x10112 <_Z11Init_Brokerv+0x44>
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   100f0:	91 30       	cpi	r25, 0x01	; 1
   100f2:	51 f4       	brne	.+20     	; 0x10108 <_Z11Init_Brokerv+0x3a>
			 {
				 _kSERAIL_MON_WRITE("Ping to server 0");                /* for debugging purpose */
   100f4:	6c eb       	ldi	r22, 0xBC	; 188
   100f6:	78 e2       	ldi	r23, 0x28	; 40
   100f8:	8f e6       	ldi	r24, 0x6F	; 111
   100fa:	96 e1       	ldi	r25, 0x16	; 22
   100fc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
				 _kSERIAL_MON_CLEAR();
   10100:	8f e6       	ldi	r24, 0x6F	; 111
   10102:	96 e1       	ldi	r25, 0x16	; 22
   10104:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));                                        /* clear the publish buff */
   10108:	c7 e8       	ldi	r28, 0x87	; 135
   1010a:	d1 e1       	ldi	r29, 0x11	; 17
   1010c:	04 ed       	ldi	r16, 0xD4	; 212
   1010e:	13 e0       	ldi	r17, 0x03	; 3
   10110:	18 c0       	rjmp	.+48     	; 0x10142 <_Z11Init_Brokerv+0x74>
				 _kSERIAL_MON_CLEAR();
			 }
		 }
		 else
		 {
			 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10112:	91 30       	cpi	r25, 0x01	; 1
   10114:	c9 f7       	brne	.-14     	; 0x10108 <_Z11Init_Brokerv+0x3a>
			 {
				 _kSERAIL_MON_WRITE("Fail to Ping server 0");                /* for debugging purpose */
   10116:	66 ea       	ldi	r22, 0xA6	; 166
   10118:	78 e2       	ldi	r23, 0x28	; 40
   1011a:	ee cf       	rjmp	.-36     	; 0x100f8 <_Z11Init_Brokerv+0x2a>
					 _kSERIAL_MON_CLEAR();
				 }
			 }
			 else
			 {
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   1011c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   10120:	81 30       	cpi	r24, 0x01	; 1
   10122:	51 f4       	brne	.+20     	; 0x10138 <_Z11Init_Brokerv+0x6a>
				 {
					_kSERAIL_MON_WRITE("Fail to Ping server");                /* for debugging purpose */
   10124:	63 e8       	ldi	r22, 0x83	; 131
   10126:	78 e2       	ldi	r23, 0x28	; 40
   10128:	8f e6       	ldi	r24, 0x6F	; 111
   1012a:	96 e1       	ldi	r25, 0x16	; 22
   1012c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					_kSERIAL_MON_CLEAR();
   10130:	8f e6       	ldi	r24, 0x6F	; 111
   10132:	96 e1       	ldi	r25, 0x16	; 22
   10134:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   10138:	80 91 53 0d 	lds	r24, 0x0D53	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
   1013c:	83 30       	cpi	r24, 0x03	; 3
   1013e:	08 f4       	brcc	.+2      	; 0x10142 <_Z11Init_Brokerv+0x74>
   10140:	41 c0       	rjmp	.+130    	; 0x101c4 <_Z11Init_Brokerv+0xf6>
	}

	
	//_kLCD_CLEAR();
	
	while(_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED )  /* wait till Ruble controller connect to server */ // now
   10142:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   10146:	81 30       	cpi	r24, 0x01	; 1
   10148:	51 f1       	breq	.+84     	; 0x1019e <_Z11Init_Brokerv+0xd0>
	{
 		//_sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
 		Display_Update_1();   // 20/1/2022
   1014a:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
		
		memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));                                        /* clear the publish buff */
   1014e:	de 01       	movw	r26, r28
   10150:	f8 01       	movw	r30, r16
   10152:	1d 92       	st	X+, r1
   10154:	31 97       	sbiw	r30, 0x01	; 1
   10156:	e9 f7       	brne	.-6      	; 0x10152 <_Z11Init_Brokerv+0x84>
		sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
   10158:	6b e2       	ldi	r22, 0x2B	; 43
   1015a:	77 e0       	ldi	r23, 0x07	; 7
   1015c:	87 e8       	ldi	r24, 0x87	; 135
   1015e:	91 e1       	ldi	r25, 0x11	; 17
   10160:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
		MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Register,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
   10164:	67 e8       	ldi	r22, 0x87	; 135
   10166:	71 e1       	ldi	r23, 0x11	; 17
   10168:	8e e7       	ldi	r24, 0x7E	; 126
   1016a:	9d e0       	ldi	r25, 0x0D	; 13
   1016c:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
		
		previous = millis();
   10170:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   10174:	6b 01       	movw	r12, r22
   10176:	7c 01       	movw	r14, r24
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10178:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   1017c:	dc 01       	movw	r26, r24
   1017e:	cb 01       	movw	r24, r22
   10180:	8c 19       	sub	r24, r12
   10182:	9d 09       	sbc	r25, r13
   10184:	ae 09       	sbc	r26, r14
   10186:	bf 09       	sbc	r27, r15
   10188:	88 39       	cpi	r24, 0x98	; 152
   1018a:	9a 43       	sbci	r25, 0x3A	; 58
   1018c:	a1 05       	cpc	r26, r1
   1018e:	b1 05       	cpc	r27, r1
   10190:	b0 f4       	brcc	.+44     	; 0x101be <_Z11Init_Brokerv+0xf0>
   10192:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   10196:	81 30       	cpi	r24, 0x01	; 1
   10198:	09 f0       	breq	.+2      	; 0x1019c <_Z11Init_Brokerv+0xce>
   1019a:	4f c0       	rjmp	.+158    	; 0x1023a <_Z11Init_Brokerv+0x16c>
   1019c:	10 c0       	rjmp	.+32     	; 0x101be <_Z11Init_Brokerv+0xf0>
				}
			}
			loop_count =0;
		}
	}
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   1019e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   101a2:	81 30       	cpi	r24, 0x01	; 1
   101a4:	09 f0       	breq	.+2      	; 0x101a8 <_Z11Init_Brokerv+0xda>
   101a6:	02 c1       	rjmp	.+516    	; 0x103ac <_Z11Init_Brokerv+0x2de>
	{
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
   101a8:	69 e4       	ldi	r22, 0x49	; 73
   101aa:	78 e2       	ldi	r23, 0x28	; 40
   101ac:	8f e6       	ldi	r24, 0x6F	; 111
   101ae:	96 e1       	ldi	r25, 0x16	; 22
   101b0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
 		_kSERIAL_MON_CLEAR();
   101b4:	8f e6       	ldi	r24, 0x6F	; 111
   101b6:	96 e1       	ldi	r25, 0x16	; 22
   101b8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   101bc:	f7 c0       	rjmp	.+494    	; 0x103ac <_Z11Init_Brokerv+0x2de>
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
				}
			}
		}
		
		connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   101be:	10 92 53 0d 	sts	0x0D53, r1	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
   101c2:	ba cf       	rjmp	.-140    	; 0x10138 <_Z11Init_Brokerv+0x6a>
		
		
		while(connect_count < 3 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))  // now
   101c4:	90 91 d6 15 	lds	r25, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   101c8:	91 30       	cpi	r25, 0x01	; 1
   101ca:	09 f4       	brne	.+2      	; 0x101ce <_Z11Init_Brokerv+0x100>
   101cc:	ba cf       	rjmp	.-140    	; 0x10142 <_Z11Init_Brokerv+0x74>
		{
			connect_count++;                               /* increase each time to maintain the 30 count */                                
   101ce:	8f 5f       	subi	r24, 0xFF	; 255
   101d0:	80 93 53 0d 	sts	0x0D53, r24	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
			 if(Ping_to_Server())
   101d4:	e5 dd       	rcall	.-1078   	; 0xfda0 <_Z14Ping_to_Serverv>
   101d6:	88 23       	and	r24, r24
   101d8:	09 f4       	brne	.+2      	; 0x101dc <_Z11Init_Brokerv+0x10e>
   101da:	a0 cf       	rjmp	.-192    	; 0x1011c <_Z11Init_Brokerv+0x4e>
			 {
				 _sRuble_Parameters.Display_Update |= _eREGISTERING_TO_SERVER;
   101dc:	80 91 66 15 	lds	r24, 0x1566	; 0x801566 <_sRuble_Parameters+0x1>
   101e0:	88 60       	ori	r24, 0x08	; 8
   101e2:	80 93 66 15 	sts	0x1566, r24	; 0x801566 <_sRuble_Parameters+0x1>
				 Display_Update_1();   // 20/1/2022
   101e6:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
				 
				 memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));                                        /* clear the publish buff */
   101ea:	de 01       	movw	r26, r28
   101ec:	f8 01       	movw	r30, r16
   101ee:	1d 92       	st	X+, r1
   101f0:	31 97       	sbiw	r30, 0x01	; 1
   101f2:	e9 f7       	brne	.-6      	; 0x101ee <_Z11Init_Brokerv+0x120>
				 sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
   101f4:	6b e2       	ldi	r22, 0x2B	; 43
   101f6:	77 e0       	ldi	r23, 0x07	; 7
   101f8:	87 e8       	ldi	r24, 0x87	; 135
   101fa:	91 e1       	ldi	r25, 0x11	; 17
   101fc:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
				 MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Register,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
   10200:	67 e8       	ldi	r22, 0x87	; 135
   10202:	71 e1       	ldi	r23, 0x11	; 17
   10204:	8e e7       	ldi	r24, 0x7E	; 126
   10206:	9d e0       	ldi	r25, 0x0D	; 13
   10208:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
				
				previous = millis();
   1020c:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   10210:	6b 01       	movw	r12, r22
   10212:	7c 01       	movw	r14, r24
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   10214:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   10218:	dc 01       	movw	r26, r24
   1021a:	cb 01       	movw	r24, r22
   1021c:	8c 19       	sub	r24, r12
   1021e:	9d 09       	sbc	r25, r13
   10220:	ae 09       	sbc	r26, r14
   10222:	bf 09       	sbc	r27, r15
   10224:	88 39       	cpi	r24, 0x98	; 152
   10226:	9a 43       	sbci	r25, 0x3A	; 58
   10228:	a1 05       	cpc	r26, r1
   1022a:	b1 05       	cpc	r27, r1
   1022c:	00 f5       	brcc	.+64     	; 0x1026e <_Z11Init_Brokerv+0x1a0>
   1022e:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   10232:	81 30       	cpi	r24, 0x01	; 1
   10234:	09 f0       	breq	.+2      	; 0x10238 <_Z11Init_Brokerv+0x16a>
   10236:	6e c0       	rjmp	.+220    	; 0x10314 <_Z11Init_Brokerv+0x246>
   10238:	1a c0       	rjmp	.+52     	; 0x1026e <_Z11Init_Brokerv+0x1a0>
		MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Register,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
		
		previous = millis();
		while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
		{
			if(Subscribed_data_check())
   1023a:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   1023e:	88 23       	and	r24, r24
   10240:	09 f4       	brne	.+2      	; 0x10244 <_Z11Init_Brokerv+0x176>
   10242:	9a cf       	rjmp	.-204    	; 0x10178 <_Z11Init_Brokerv+0xaa>
			{
				if(Seperate_Out_Sub_Data())
   10244:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   10248:	88 23       	and	r24, r24
   1024a:	09 f4       	brne	.+2      	; 0x1024e <_Z11Init_Brokerv+0x180>
   1024c:	95 cf       	rjmp	.-214    	; 0x10178 <_Z11Init_Brokerv+0xaa>
				{
					//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
					Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   1024e:	fe 01       	movw	r30, r28
   10250:	01 90       	ld	r0, Z+
   10252:	00 20       	and	r0, r0
   10254:	e9 f7       	brne	.-6      	; 0x10250 <_Z11Init_Brokerv+0x182>
   10256:	31 97       	sbiw	r30, 0x01	; 1
   10258:	af 01       	movw	r20, r30
   1025a:	47 58       	subi	r20, 0x87	; 135
   1025c:	51 41       	sbci	r21, 0x11	; 17
   1025e:	21 e0       	ldi	r18, 0x01	; 1
   10260:	67 e8       	ldi	r22, 0x87	; 135
   10262:	71 e1       	ldi	r23, 0x11	; 17
   10264:	89 e1       	ldi	r24, 0x19	; 25
   10266:	91 e1       	ldi	r25, 0x11	; 17
   10268:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   1026c:	85 cf       	rjmp	.-246    	; 0x10178 <_Z11Init_Brokerv+0xaa>
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
						 }
					 }
				}
				 
				 connect_count = _kRESET;   /* connect cont should reset after sending the published request to server */
   1026e:	10 92 53 0d 	sts	0x0D53, r1	; 0x800d53 <_ZZ11Init_BrokervE13connect_count>
				 if(_sRuble_Parameters.Debug_Mode == _kSET)
   10272:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   10276:	81 30       	cpi	r24, 0x01	; 1
   10278:	51 f4       	brne	.+20     	; 0x1028e <_Z11Init_Brokerv+0x1c0>
				 {
					 _kSERAIL_MON_WRITE("Ping to server");                /* for debugging purpose */
   1027a:	67 e9       	ldi	r22, 0x97	; 151
   1027c:	78 e2       	ldi	r23, 0x28	; 40
   1027e:	8f e6       	ldi	r24, 0x6F	; 111
   10280:	96 e1       	ldi	r25, 0x16	; 22
   10282:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
					 _kSERIAL_MON_CLEAR();
   10286:	8f e6       	ldi	r24, 0x6F	; 111
   10288:	96 e1       	ldi	r25, 0x16	; 22
   1028a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
					_kSERIAL_MON_CLEAR();
				 }
				 continue;
			 }
			 
			loop_count = 0;
   1028e:	10 92 52 0d 	sts	0x0D52, r1	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   10292:	10 92 51 0d 	sts	0x0D51, r1	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
			
			while(loop_count < 10 && (_sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED))
   10296:	80 91 51 0d 	lds	r24, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   1029a:	90 91 52 0d 	lds	r25, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   1029e:	0a 97       	sbiw	r24, 0x0a	; 10
   102a0:	a0 f5       	brcc	.+104    	; 0x1030a <_Z11Init_Brokerv+0x23c>
   102a2:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   102a6:	81 30       	cpi	r24, 0x01	; 1
   102a8:	81 f1       	breq	.+96     	; 0x1030a <_Z11Init_Brokerv+0x23c>
			{	
				 memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));                                        /* clear the publish buff */
   102aa:	de 01       	movw	r26, r28
   102ac:	f8 01       	movw	r30, r16
   102ae:	1d 92       	st	X+, r1
   102b0:	31 97       	sbiw	r30, 0x01	; 1
   102b2:	e9 f7       	brne	.-6      	; 0x102ae <_Z11Init_Brokerv+0x1e0>
				 sprintf((char *)_gPub_Buff,"{\"status\": \"true\"}");                    /* store the payload */
   102b4:	6b e2       	ldi	r22, 0x2B	; 43
   102b6:	77 e0       	ldi	r23, 0x07	; 7
   102b8:	87 e8       	ldi	r24, 0x87	; 135
   102ba:	91 e1       	ldi	r25, 0x11	; 17
   102bc:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
				 MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Register,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
   102c0:	67 e8       	ldi	r22, 0x87	; 135
   102c2:	71 e1       	ldi	r23, 0x11	; 17
   102c4:	8e e7       	ldi	r24, 0x7E	; 126
   102c6:	9d e0       	ldi	r25, 0x0D	; 13
   102c8:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
				 
				loop_count++;
   102cc:	80 91 51 0d 	lds	r24, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   102d0:	90 91 52 0d 	lds	r25, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   102d4:	01 96       	adiw	r24, 0x01	; 1
   102d6:	90 93 52 0d 	sts	0x0D52, r25	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   102da:	80 93 51 0d 	sts	0x0D51, r24	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
				
				previous = millis();
   102de:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   102e2:	6b 01       	movw	r12, r22
   102e4:	7c 01       	movw	r14, r24
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
   102e6:	0e 94 3f d3 	call	0x1a67e	; 0x1a67e <millis>
   102ea:	dc 01       	movw	r26, r24
   102ec:	cb 01       	movw	r24, r22
   102ee:	8c 19       	sub	r24, r12
   102f0:	9d 09       	sbc	r25, r13
   102f2:	ae 09       	sbc	r26, r14
   102f4:	bf 09       	sbc	r27, r15
   102f6:	88 3a       	cpi	r24, 0xA8	; 168
   102f8:	91 46       	sbci	r25, 0x61	; 97
   102fa:	a1 05       	cpc	r26, r1
   102fc:	b1 05       	cpc	r27, r1
   102fe:	e0 f5       	brcc	.+120    	; 0x10378 <_Z11Init_Brokerv+0x2aa>
   10300:	80 91 d6 15 	lds	r24, 0x15D6	; 0x8015d6 <_sRuble_Parameters+0x71>
   10304:	81 30       	cpi	r24, 0x01	; 1
   10306:	01 f5       	brne	.+64     	; 0x10348 <_Z11Init_Brokerv+0x27a>
   10308:	37 c0       	rjmp	.+110    	; 0x10378 <_Z11Init_Brokerv+0x2aa>
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
					_kSERIAL_MON_CLEAR();
				}
			}
			loop_count =0;
   1030a:	10 92 52 0d 	sts	0x0D52, r1	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   1030e:	10 92 51 0d 	sts	0x0D51, r1	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   10312:	12 cf       	rjmp	.-476    	; 0x10138 <_Z11Init_Brokerv+0x6a>
				 MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Register,(unsigned char *)_gPub_Buff);   /* published to data to monitor registration */
				
				previous = millis();
				while(((millis() - previous) < 15000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{ 
					 if(Subscribed_data_check())
   10314:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   10318:	88 23       	and	r24, r24
   1031a:	09 f4       	brne	.+2      	; 0x1031e <_Z11Init_Brokerv+0x250>
   1031c:	7b cf       	rjmp	.-266    	; 0x10214 <_Z11Init_Brokerv+0x146>
					 {
						 if(Seperate_Out_Sub_Data())
   1031e:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   10322:	88 23       	and	r24, r24
   10324:	09 f4       	brne	.+2      	; 0x10328 <_Z11Init_Brokerv+0x25a>
   10326:	76 cf       	rjmp	.-276    	; 0x10214 <_Z11Init_Brokerv+0x146>
						 {
							 //mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10328:	fe 01       	movw	r30, r28
   1032a:	01 90       	ld	r0, Z+
   1032c:	00 20       	and	r0, r0
   1032e:	e9 f7       	brne	.-6      	; 0x1032a <_Z11Init_Brokerv+0x25c>
   10330:	31 97       	sbiw	r30, 0x01	; 1
   10332:	af 01       	movw	r20, r30
   10334:	47 58       	subi	r20, 0x87	; 135
   10336:	51 41       	sbci	r21, 0x11	; 17
   10338:	21 e0       	ldi	r18, 0x01	; 1
   1033a:	67 e8       	ldi	r22, 0x87	; 135
   1033c:	71 e1       	ldi	r23, 0x11	; 17
   1033e:	89 e1       	ldi	r24, 0x19	; 25
   10340:	91 e1       	ldi	r25, 0x11	; 17
   10342:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   10346:	66 cf       	rjmp	.-308    	; 0x10214 <_Z11Init_Brokerv+0x146>
				loop_count++;
				
				previous = millis();
				while(((millis() - previous) < 25000) && _sRuble_Parameters.Ruble_Registration_Status != _eRUBLE_REGISTERED)
				{
					if(Subscribed_data_check())
   10348:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   1034c:	88 23       	and	r24, r24
   1034e:	59 f2       	breq	.-106    	; 0x102e6 <_Z11Init_Brokerv+0x218>
					{
						if(Seperate_Out_Sub_Data())
   10350:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   10354:	88 23       	and	r24, r24
   10356:	39 f2       	breq	.-114    	; 0x102e6 <_Z11Init_Brokerv+0x218>
						{
							//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
							Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10358:	fe 01       	movw	r30, r28
   1035a:	01 90       	ld	r0, Z+
   1035c:	00 20       	and	r0, r0
   1035e:	e9 f7       	brne	.-6      	; 0x1035a <_Z11Init_Brokerv+0x28c>
   10360:	31 97       	sbiw	r30, 0x01	; 1
   10362:	af 01       	movw	r20, r30
   10364:	47 58       	subi	r20, 0x87	; 135
   10366:	51 41       	sbci	r21, 0x11	; 17
   10368:	21 e0       	ldi	r18, 0x01	; 1
   1036a:	67 e8       	ldi	r22, 0x87	; 135
   1036c:	71 e1       	ldi	r23, 0x11	; 17
   1036e:	89 e1       	ldi	r24, 0x19	; 25
   10370:	91 e1       	ldi	r25, 0x11	; 17
   10372:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   10376:	b7 cf       	rjmp	.-146    	; 0x102e6 <_Z11Init_Brokerv+0x218>
						}
					}
				}
				if(_sRuble_Parameters.Debug_Mode == _kSET)
   10378:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1037c:	81 30       	cpi	r24, 0x01	; 1
   1037e:	09 f0       	breq	.+2      	; 0x10382 <_Z11Init_Brokerv+0x2b4>
   10380:	8a cf       	rjmp	.-236    	; 0x10296 <_Z11Init_Brokerv+0x1c8>
				{
					_kSERAIL_MON_WRITE_NO_LN("wait registering status : ");
   10382:	68 e6       	ldi	r22, 0x68	; 104
   10384:	78 e2       	ldi	r23, 0x28	; 40
   10386:	8f e6       	ldi	r24, 0x6F	; 111
   10388:	96 e1       	ldi	r25, 0x16	; 22
   1038a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
					_kSERIAL_MON_PRINT_NUM_NO_NEW_LINE(loop_count);
   1038e:	60 91 51 0d 	lds	r22, 0x0D51	; 0x800d51 <_ZZ11Init_BrokervE10loop_count>
   10392:	70 91 52 0d 	lds	r23, 0x0D52	; 0x800d52 <_ZZ11Init_BrokervE10loop_count+0x1>
   10396:	4a e0       	ldi	r20, 0x0A	; 10
   10398:	50 e0       	ldi	r21, 0x00	; 0
   1039a:	8f e6       	ldi	r24, 0x6F	; 111
   1039c:	96 e1       	ldi	r25, 0x16	; 22
   1039e:	0e 94 49 d1 	call	0x1a292	; 0x1a292 <_ZN5Print5printEji>
					_kSERIAL_MON_CLEAR();
   103a2:	8f e6       	ldi	r24, 0x6F	; 111
   103a4:	96 e1       	ldi	r25, 0x16	; 22
   103a6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   103aa:	75 cf       	rjmp	.-278    	; 0x10296 <_Z11Init_Brokerv+0x1c8>
		_kSERAIL_MON_WRITE("Ruble controller is registered");                /* for debugging purpose */
 		_kSERIAL_MON_CLEAR();
	}

	/******************* published the topic that Ruble is Restarted ********************/
	memset((char *)_gPub_Buff,0,sizeof(_gPub_Buff));
   103ac:	84 ed       	ldi	r24, 0xD4	; 212
   103ae:	93 e0       	ldi	r25, 0x03	; 3
   103b0:	e7 e8       	ldi	r30, 0x87	; 135
   103b2:	f1 e1       	ldi	r31, 0x11	; 17
   103b4:	df 01       	movw	r26, r30
   103b6:	9c 01       	movw	r18, r24
   103b8:	1d 92       	st	X+, r1
   103ba:	21 50       	subi	r18, 0x01	; 1
   103bc:	30 40       	sbci	r19, 0x00	; 0
   103be:	e1 f7       	brne	.-8      	; 0x103b8 <_Z11Init_Brokerv+0x2ea>
	sprintf((char *)_gPub_Buff,"{\"sicca_start\": \"true\"}");
   103c0:	6e e3       	ldi	r22, 0x3E	; 62
   103c2:	77 e0       	ldi	r23, 0x07	; 7
   103c4:	cf 01       	movw	r24, r30
   103c6:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
	MQTT_Publish((unsigned char *)_sPublish_Topic.Ruble_Restart,(unsigned char *)_gPub_Buff);
   103ca:	67 e8       	ldi	r22, 0x87	; 135
   103cc:	71 e1       	ldi	r23, 0x11	; 17
   103ce:	8d ed       	ldi	r24, 0xDD	; 221
   103d0:	9d e0       	ldi	r25, 0x0D	; 13
   103d2:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
	
	_sRuble_Parameters.Publish_Topic |= _ePUB_RUBLE_DATA;
   103d6:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   103da:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   103de:	84 60       	ori	r24, 0x04	; 4
   103e0:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   103e4:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
	
}
   103e8:	80 e0       	ldi	r24, 0x00	; 0
   103ea:	df 91       	pop	r29
   103ec:	cf 91       	pop	r28
   103ee:	1f 91       	pop	r17
   103f0:	0f 91       	pop	r16
   103f2:	ff 90       	pop	r15
   103f4:	ef 90       	pop	r14
   103f6:	df 90       	pop	r13
   103f8:	cf 90       	pop	r12
   103fa:	08 95       	ret

000103fc <initVariant>:
   103fc:	08 95       	ret

000103fe <main>:
void setupUSB() __attribute__((weak));
void setupUSB() { }

int main(void)
{
	init();
   103fe:	0e 94 b5 d3 	call	0x1a76a	; 0x1a76a <init>

	initVariant();
   10402:	fc df       	rcall	.-8      	; 0x103fc <initVariant>
 
	static uint32_t tickcount;
	static unsigned char timer_count,i;
	i = 0;
	
	Initialise_Hardware();
   10404:	0e 94 72 6b 	call	0xd6e4	; 0xd6e4 <_Z19Initialise_Hardwarev>
	
	Param_Initialization();
   10408:	59 d9       	rcall	.-3406   	; 0xf6bc <_Z20Param_Initializationv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   1040a:	8c e2       	ldi	r24, 0x2C	; 44
   1040c:	98 e1       	ldi	r25, 0x18	; 24
   1040e:	0e 94 ff cd 	call	0x19bfe	; 0x19bfe <_ZN14HardwareSerial9availableEv>
   10412:	89 2b       	or	r24, r25
   10414:	29 f0       	breq	.+10     	; 0x10420 <main+0x22>
	{
		_kSERIAL_AT_READ();
   10416:	8c e2       	ldi	r24, 0x2C	; 44
   10418:	98 e1       	ldi	r25, 0x18	; 24
   1041a:	0e 94 20 ce 	call	0x19c40	; 0x19c40 <_ZN14HardwareSerial4readEv>
	if(_sRuble_Parameters.SMS_Alert_Start == 0x08)
	{
		//_kSEND_SMS(_sNetwork_and_Usr_Info.User_Sim_No,"RUBLE RESTART");
	}
	
	while (_kSERAIL_AT_CHECK())
   1041e:	f5 cf       	rjmp	.-22     	; 0x1040a <main+0xc>
	{
		_kSERIAL_AT_READ();
	}
	
	Get_Local_Time();
   10420:	0e 94 51 5f 	call	0xbea2	; 0xbea2 <_Z14Get_Local_Timev>
	Check_GSM_Signal();
   10424:	0e 94 08 5f 	call	0xbe10	; 0xbe10 <_Z16Check_GSM_Signalv>
	
	Start_Display_In_Interrupt = 1;
   10428:	81 e0       	ldi	r24, 0x01	; 1
   1042a:	80 93 76 0c 	sts	0x0C76, r24	; 0x800c76 <Start_Display_In_Interrupt>
   _sRuble_Parameters.Display_Refresh = _kSET;
   1042e:	80 93 16 16 	sts	0x1616, r24	; 0x801616 <_sRuble_Parameters+0xb1>
   
	//Display_Update_1();    
	tickcount = g_uTick;
   10432:	80 91 87 0c 	lds	r24, 0x0C87	; 0x800c87 <g_uTick>
   10436:	90 91 88 0c 	lds	r25, 0x0C88	; 0x800c88 <g_uTick+0x1>
   1043a:	a0 91 89 0c 	lds	r26, 0x0C89	; 0x800c89 <g_uTick+0x2>
   1043e:	b0 91 8a 0c 	lds	r27, 0x0C8A	; 0x800c8a <g_uTick+0x3>
	_sRuble_Parameters.Line_Fault_Flag = _kRESET;
   10442:	10 92 19 16 	sts	0x1619, r1	; 0x801619 <_sRuble_Parameters+0xb4>
	_sRuble_Parameters.Pump_On_Flag =_ePUMP_OFF;
   10446:	84 e0       	ldi	r24, 0x04	; 4
   10448:	80 93 6d 15 	sts	0x156D, r24	; 0x80156d <_sRuble_Parameters+0x8>
   1044c:	10 92 6e 15 	sts	0x156E, r1	; 0x80156e <_sRuble_Parameters+0x9>
   10450:	10 92 6f 15 	sts	0x156F, r1	; 0x80156f <_sRuble_Parameters+0xa>
   10454:	10 92 70 15 	sts	0x1570, r1	; 0x801570 <_sRuble_Parameters+0xb>
   10458:	10 92 71 15 	sts	0x1571, r1	; 0x801571 <_sRuble_Parameters+0xc>
   1045c:	10 92 72 15 	sts	0x1572, r1	; 0x801572 <_sRuble_Parameters+0xd>
   10460:	10 92 73 15 	sts	0x1573, r1	; 0x801573 <_sRuble_Parameters+0xe>
   10464:	10 92 74 15 	sts	0x1574, r1	; 0x801574 <_sRuble_Parameters+0xf>
	
	Valve_Grouping_Handler(_kFORCEFULYY_OFF);
   10468:	83 e0       	ldi	r24, 0x03	; 3
   1046a:	0e 94 1a ab 	call	0x15634	; 0x15634 <_Z22Valve_Grouping_Handlerh>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   1046e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   10472:	81 30       	cpi	r24, 0x01	; 1
   10474:	c1 f4       	brne	.+48     	; 0x104a6 <main+0xa8>
	{
		_kSERAIL_MON_WRITE("NOMINAL CURRENT : ");
   10476:	60 ee       	ldi	r22, 0xE0	; 224
   10478:	78 e2       	ldi	r23, 0x28	; 40
   1047a:	8f e6       	ldi	r24, 0x6F	; 111
   1047c:	96 e1       	ldi	r25, 0x16	; 22
   1047e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sPump_Parameter.Pump_Nominal_Current);
   10482:	40 91 5b 15 	lds	r20, 0x155B	; 0x80155b <_sPump_Parameter>
   10486:	50 91 5c 15 	lds	r21, 0x155C	; 0x80155c <_sPump_Parameter+0x1>
   1048a:	60 91 5d 15 	lds	r22, 0x155D	; 0x80155d <_sPump_Parameter+0x2>
   1048e:	70 91 5e 15 	lds	r23, 0x155E	; 0x80155e <_sPump_Parameter+0x3>
   10492:	22 e0       	ldi	r18, 0x02	; 2
   10494:	30 e0       	ldi	r19, 0x00	; 0
   10496:	8f e6       	ldi	r24, 0x6F	; 111
   10498:	96 e1       	ldi	r25, 0x16	; 22
   1049a:	0e 94 93 d2 	call	0x1a526	; 0x1a526 <_ZN5Print7printlnEdi>
		_kSERIAL_MON_CLEAR();
   1049e:	8f e6       	ldi	r24, 0x6F	; 111
   104a0:	96 e1       	ldi	r25, 0x16	; 22
   104a2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	
	_sSchedules.Scheduler_Retry_Timer = _kRESET;
   104a6:	10 92 f5 08 	sts	0x08F5, r1	; 0x8008f5 <_sSchedules+0x5>
   104aa:	10 92 f4 08 	sts	0x08F4, r1	; 0x8008f4 <_sSchedules+0x4>
	_sRuble_Parameters.Wireless_Pump_Operate_Timer = _kMAX_TIME_TO_MONITOR_WIRELESS_PUMP;
   104ae:	86 e9       	ldi	r24, 0x96	; 150
   104b0:	90 e0       	ldi	r25, 0x00	; 0
   104b2:	90 93 27 16 	sts	0x1627, r25	; 0x801627 <_sRuble_Parameters+0xc2>
   104b6:	80 93 26 16 	sts	0x1626, r24	; 0x801626 <_sRuble_Parameters+0xc1>
	
	if(_sRuble_Parameters.Debug_Mode == _kSET)
   104ba:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   104be:	81 30       	cpi	r24, 0x01	; 1
   104c0:	91 f4       	brne	.+36     	; 0x104e6 <main+0xe8>
	{
		_kSERAIL_MON_WRITE("Days in between : ");
   104c2:	6d ec       	ldi	r22, 0xCD	; 205
   104c4:	78 e2       	ldi	r23, 0x28	; 40
   104c6:	8f e6       	ldi	r24, 0x6F	; 111
   104c8:	96 e1       	ldi	r25, 0x16	; 22
   104ca:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
		_kSERIAL_MON_PRINT_NUM(_sSchedules.Days_In_Between_Schedules);
   104ce:	60 91 0c 09 	lds	r22, 0x090C	; 0x80090c <_sSchedules+0x1c>
   104d2:	4a e0       	ldi	r20, 0x0A	; 10
   104d4:	50 e0       	ldi	r21, 0x00	; 0
   104d6:	8f e6       	ldi	r24, 0x6F	; 111
   104d8:	96 e1       	ldi	r25, 0x16	; 22
   104da:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
		_kSERIAL_MON_CLEAR();
   104de:	8f e6       	ldi	r24, 0x6F	; 111
   104e0:	96 e1       	ldi	r25, 0x16	; 22
   104e2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
	}
	//Turn_Off_All_Pump_For_Safety();
	
	_sSchedules.Shedule_Run_Status_Is_Triggered  = _kRESET;
   104e6:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
	_sRuble_Parameters.Immediately_Turn_Off_Pump = _kRESET;
   104ea:	10 92 43 16 	sts	0x1643, r1	; 0x801643 <_sRuble_Parameters+0xde>
	_sRuble_Parameters.Wireless_Pump_Command     = _kRESET;
   104ee:	10 92 24 16 	sts	0x1624, r1	; 0x801624 <_sRuble_Parameters+0xbf>
	_sRuble_Parameters.Electricity_Status        = _kON;
   104f2:	c1 e0       	ldi	r28, 0x01	; 1
   104f4:	c0 93 13 16 	sts	0x1613, r28	; 0x801613 <_sRuble_Parameters+0xae>
	
	Select_Operation_Mode();
   104f8:	0e 94 9f bd 	call	0x17b3e	; 0x17b3e <_Z21Select_Operation_Modev>
	
	//_sRuble_Parameters.By_Pass_CT = _kRESET;
	//_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status         = _kRESET;
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   104fc:	10 92 24 10 	sts	0x1024, r1	; 0x801024 <_sExtra_Plot+0x85>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status  = _kRESET;
   10500:	10 92 0b 10 	sts	0x100B, r1	; 0x80100b <_sExtra_Plot+0x6c>
	_sExtra_Plot[(_kFLUSH_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _eSTOP_EXTRA_PLOT_OPERATION;
   10504:	c0 93 0d 10 	sts	0x100D, r28	; 0x80100d <_sExtra_Plot+0x6e>
	
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10508:	10 92 ba 0f 	sts	0x0FBA, r1	; 0x800fba <_sExtra_Plot+0x1b>
	_sExtra_Plot[(_kBLOWER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kSCHEDULER_OFF;
   1050c:	85 e0       	ldi	r24, 0x05	; 5
   1050e:	80 93 bc 0f 	sts	0x0FBC, r24	; 0x800fbc <_sExtra_Plot+0x1d>
	
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].On_Off_Status = _kRESET;
   10512:	10 92 f0 0f 	sts	0x0FF0, r1	; 0x800ff0 <_sExtra_Plot+0x51>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Auto_Operation = _kRESET;
   10516:	10 92 09 10 	sts	0x1009, r1	; 0x801009 <_sExtra_Plot+0x6a>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Status = _kRESET;
   1051a:	10 92 f2 0f 	sts	0x0FF2, r1	; 0x800ff2 <_sExtra_Plot+0x53>
	_sExtra_Plot[(_kFOOGER_PLOT_NUMBER-_kEXTRA_PLOT_START_FROM)].Publish_status = _kRESET;
   1051e:	10 92 0a 10 	sts	0x100A, r1	; 0x80100a <_sExtra_Plot+0x6b>
	
	
	
	delay(5000);
   10522:	68 e8       	ldi	r22, 0x88	; 136
   10524:	73 e1       	ldi	r23, 0x13	; 19
   10526:	80 e0       	ldi	r24, 0x00	; 0
   10528:	90 e0       	ldi	r25, 0x00	; 0
   1052a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
	Get_Local_Time();
   1052e:	0e 94 51 5f 	call	0xbea2	; 0xbea2 <_Z14Get_Local_Timev>
// 	delay(3000);  /* Done so that the Arduino doesn't keep resetting infinitely in case of wrong configuration */
// 	wdt_enable(WDTO_8S);
	//wdt_reset();
	
	unsigned int temp;
	if(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0] !=0 &&
   10532:	80 91 17 10 	lds	r24, 0x1017	; 0x801017 <_sExtra_Plot+0x78>
   10536:	90 91 18 10 	lds	r25, 0x1018	; 0x801018 <_sExtra_Plot+0x79>
   1053a:	00 97       	sbiw	r24, 0x00	; 0
   1053c:	01 f1       	breq	.+64     	; 0x1057e <main+0x180>
   1053e:	20 91 0c 10 	lds	r18, 0x100C	; 0x80100c <_sExtra_Plot+0x6d>
   10542:	29 36       	cpi	r18, 0x69	; 105
   10544:	e1 f4       	brne	.+56     	; 0x1057e <main+0x180>
	(_sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Extra_Plot_Number == _kFLUSH_PLOT_NUMBER))
	{
		//_sRuble_Parameters.Pump_Run_Timer_for_flush = _kRESET;
		temp =  _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Max_Value[0];
		_sSchedules.Flush_Schedule_In_Every = temp *3600;
   10546:	60 91 1d 10 	lds	r22, 0x101D	; 0x80101d <_sExtra_Plot+0x7e>
   1054a:	70 91 1e 10 	lds	r23, 0x101E	; 0x80101e <_sExtra_Plot+0x7f>
   1054e:	40 e1       	ldi	r20, 0x10	; 16
   10550:	5e e0       	ldi	r21, 0x0E	; 14
   10552:	64 9f       	mul	r22, r20
   10554:	90 01       	movw	r18, r0
   10556:	65 9f       	mul	r22, r21
   10558:	30 0d       	add	r19, r0
   1055a:	74 9f       	mul	r23, r20
   1055c:	30 0d       	add	r19, r0
   1055e:	11 24       	eor	r1, r1
   10560:	30 93 bb 0b 	sts	0x0BBB, r19	; 0x800bbb <_sSchedules+0x2cb>
   10564:	20 93 ba 0b 	sts	0x0BBA, r18	; 0x800bba <_sSchedules+0x2ca>
		temp = _sExtra_Plot[_kFLUSH_PLOT_NUMBER - _kEXTRA_PLOT_START_FROM].Min_Valve[0];
		_sSchedules.Flush_Schedule_For = temp * 60;
   10568:	4c e3       	ldi	r20, 0x3C	; 60
   1056a:	48 9f       	mul	r20, r24
   1056c:	90 01       	movw	r18, r0
   1056e:	49 9f       	mul	r20, r25
   10570:	30 0d       	add	r19, r0
   10572:	11 24       	eor	r1, r1
   10574:	30 93 bd 0b 	sts	0x0BBD, r19	; 0x800bbd <_sSchedules+0x2cd>
   10578:	20 93 bc 0b 	sts	0x0BBC, r18	; 0x800bbc <_sSchedules+0x2cc>
   1057c:	08 c0       	rjmp	.+16     	; 0x1058e <main+0x190>
	}
	else
	{
		_sSchedules.Flush_Schedule_In_Every = 0;
   1057e:	10 92 bb 0b 	sts	0x0BBB, r1	; 0x800bbb <_sSchedules+0x2cb>
   10582:	10 92 ba 0b 	sts	0x0BBA, r1	; 0x800bba <_sSchedules+0x2ca>
		_sSchedules.Flush_Schedule_For = 0;
   10586:	10 92 bd 0b 	sts	0x0BBD, r1	; 0x800bbd <_sSchedules+0x2cd>
   1058a:	10 92 bc 0b 	sts	0x0BBC, r1	; 0x800bbc <_sSchedules+0x2cc>
	}
	
	_gStart_Wdt = _kSET;
   1058e:	81 e0       	ldi	r24, 0x01	; 1
   10590:	80 93 97 0c 	sts	0x0C97, r24	; 0x800c97 <_gStart_Wdt>
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
   10594:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
		
		if(Subscribed_data_check())
		{
			if(Seperate_Out_Sub_Data())
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10598:	c7 e8       	ldi	r28, 0x87	; 135
   1059a:	d1 e1       	ldi	r29, 0x11	; 17
	_gStart_Wdt = _kSET;
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
	
	while (1)
	{
		if(_g_1Sec_Time)
   1059c:	80 91 83 0c 	lds	r24, 0x0C83	; 0x800c83 <_g_1Sec_Time>
   105a0:	90 91 84 0c 	lds	r25, 0x0C84	; 0x800c84 <_g_1Sec_Time+0x1>
   105a4:	a0 91 85 0c 	lds	r26, 0x0C85	; 0x800c85 <_g_1Sec_Time+0x2>
   105a8:	b0 91 86 0c 	lds	r27, 0x0C86	; 0x800c86 <_g_1Sec_Time+0x3>
   105ac:	89 2b       	or	r24, r25
   105ae:	8a 2b       	or	r24, r26
   105b0:	8b 2b       	or	r24, r27
   105b2:	f1 f1       	breq	.+124    	; 0x10630 <main+0x232>
		{
			_g_1Sec_Time = _kRESET;
   105b4:	10 92 83 0c 	sts	0x0C83, r1	; 0x800c83 <_g_1Sec_Time>
   105b8:	10 92 84 0c 	sts	0x0C84, r1	; 0x800c84 <_g_1Sec_Time+0x1>
   105bc:	10 92 85 0c 	sts	0x0C85, r1	; 0x800c85 <_g_1Sec_Time+0x2>
   105c0:	10 92 86 0c 	sts	0x0C86, r1	; 0x800c86 <_g_1Sec_Time+0x3>
			tickcount = g_uTick;
   105c4:	80 91 87 0c 	lds	r24, 0x0C87	; 0x800c87 <g_uTick>
   105c8:	90 91 88 0c 	lds	r25, 0x0C88	; 0x800c88 <g_uTick+0x1>
   105cc:	a0 91 89 0c 	lds	r26, 0x0C89	; 0x800c89 <g_uTick+0x2>
   105d0:	b0 91 8a 0c 	lds	r27, 0x0C8A	; 0x800c8a <g_uTick+0x3>
			timer_count++;
   105d4:	80 91 86 0f 	lds	r24, 0x0F86	; 0x800f86 <_ZZ4mainE11timer_count>
   105d8:	8f 5f       	subi	r24, 0xFF	; 255
   105da:	80 93 86 0f 	sts	0x0F86, r24	; 0x800f86 <_ZZ4mainE11timer_count>
			
			_gWdt_Counter = 0;
   105de:	10 92 99 0c 	sts	0x0C99, r1	; 0x800c99 <_gWdt_Counter+0x1>
   105e2:	10 92 98 0c 	sts	0x0C98, r1	; 0x800c98 <_gWdt_Counter>
			
			Publish_Data();
   105e6:	0e 94 9e a1 	call	0x1433c	; 0x1433c <_Z12Publish_Datav>
			//Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_ePUBLSIH_DATA);
			
			Lora_Operation();
   105ea:	0e 94 8c cb 	call	0x19718	; 0x19718 <_Z14Lora_Operationv>
			
			Run_Extra_Plot_Operation();	
   105ee:	0e 94 60 c6 	call	0x18cc0	; 0x18cc0 <_Z24Run_Extra_Plot_Operationv>
			
			Run_Operation();             /* Run the operation as per the selected mode */
   105f2:	0e 94 5a c1 	call	0x182b4	; 0x182b4 <_Z13Run_Operationv>
			
		   /* read strength of GSM signal and update the display update variable */
			
			Display_Update_1();
   105f6:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
			
			Keeps_Monitor_Server_Connection();	
   105fa:	0e 94 58 72 	call	0xe4b0	; 0xe4b0 <_Z31Keeps_Monitor_Server_Connectionv>
			
			if(timer_count > 60)           /* update in every 1 minute */
   105fe:	80 91 86 0f 	lds	r24, 0x0F86	; 0x800f86 <_ZZ4mainE11timer_count>
   10602:	8d 33       	cpi	r24, 0x3D	; 61
   10604:	38 f0       	brcs	.+14     	; 0x10614 <main+0x216>
			{
				timer_count = 0;
   10606:	10 92 86 0f 	sts	0x0F86, r1	; 0x800f86 <_ZZ4mainE11timer_count>
				Get_Local_Time();
   1060a:	0e 94 51 5f 	call	0xbea2	; 0xbea2 <_Z14Get_Local_Timev>
				Hard_Coded_Flush_Valve(_kON);	
   1060e:	81 e0       	ldi	r24, 0x01	; 1
   10610:	0e 94 3d 24 	call	0x487a	; 0x487a <_Z22Hard_Coded_Flush_Valveh>
			}
			
			Wireless_Motor_Enable_Disable_Check();  /* changed */
   10614:	0e 94 3f 24 	call	0x487e	; 0x487e <_Z35Wireless_Motor_Enable_Disable_Checkv>
			
			Handle_Wireless_Pump();
   10618:	0e 94 19 c7 	call	0x18e32	; 0x18e32 <_Z20Handle_Wireless_Pumpv>
			
			Plot_Status_List_Monitor();
   1061c:	0e 94 f9 c7 	call	0x18ff2	; 0x18ff2 <_Z24Plot_Status_List_Monitorv>
			
			Pump_Status_List_Monitor();
   10620:	0e 94 9c c7 	call	0x18f38	; 0x18f38 <_Z24Pump_Status_List_Monitorv>
			
			Pump_Run_Monitoring();
   10624:	0e 94 bb 72 	call	0xe576	; 0xe576 <_Z19Pump_Run_Monitoringv>
			
			Flush_Controlling();
   10628:	0e 94 09 25 	call	0x4a12	; 0x4a12 <_Z17Flush_Controllingv>
			
			Debug_Check();
   1062c:	0e 94 31 73 	call	0xe662	; 0xe662 <_Z11Debug_Checkv>
			
		}	
		
		if(Subscribed_data_check())
   10630:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   10634:	88 23       	and	r24, r24
   10636:	99 f0       	breq	.+38     	; 0x1065e <main+0x260>
		{
			if(Seperate_Out_Sub_Data())
   10638:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   1063c:	88 23       	and	r24, r24
   1063e:	79 f0       	breq	.+30     	; 0x1065e <main+0x260>
			{
				Pub_Sub_Data((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff),_eSUBSCRIBE_DATA);
   10640:	fe 01       	movw	r30, r28
   10642:	01 90       	ld	r0, Z+
   10644:	00 20       	and	r0, r0
   10646:	e9 f7       	brne	.-6      	; 0x10642 <main+0x244>
   10648:	31 97       	sbiw	r30, 0x01	; 1
   1064a:	af 01       	movw	r20, r30
   1064c:	47 58       	subi	r20, 0x87	; 135
   1064e:	51 41       	sbci	r21, 0x11	; 17
   10650:	21 e0       	ldi	r18, 0x01	; 1
   10652:	67 e8       	ldi	r22, 0x87	; 135
   10654:	71 e1       	ldi	r23, 0x11	; 17
   10656:	89 e1       	ldi	r24, 0x19	; 25
   10658:	91 e1       	ldi	r25, 0x11	; 17
   1065a:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
				//mqttCallback((char *)_gRecvd_Data, (unsigned char *)_gPub_Buff, strlen((const char*)_gPub_Buff));
			}
		}
		
		Calibration_Of_Pump();
   1065e:	0e 94 3f 73 	call	0xe67e	; 0xe67e <_Z19Calibration_Of_Pumpv>
		
		Select_Operation_Mode();
   10662:	0e 94 9f bd 	call	0x17b3e	; 0x17b3e <_Z21Select_Operation_Modev>
		
		Update_Indication();
   10666:	8e d1       	rcall	.+796    	; 0x10984 <_Z17Update_Indicationv>
		
		Faults_Handler();
   10668:	0e 94 c5 74 	call	0xe98a	; 0xe98a <_Z14Faults_Handlerv>
	}
	
	_gStart_Wdt = _kSET;
	_sSchedules.Pump_On_In_Scheduler = _kRESET;
	
	while (1)
   1066c:	97 cf       	rjmp	.-210    	; 0x1059c <main+0x19e>

0001066e <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj>:
				/* if all valve gets on */
			
			}
		}
	}
}
   1066e:	fc 01       	movw	r30, r24
   10670:	26 81       	ldd	r18, Z+6	; 0x06
   10672:	37 81       	ldd	r19, Z+7	; 0x07
   10674:	62 0f       	add	r22, r18
   10676:	73 1f       	adc	r23, r19
   10678:	84 81       	ldd	r24, Z+4	; 0x04
   1067a:	95 81       	ldd	r25, Z+5	; 0x05
   1067c:	86 17       	cp	r24, r22
   1067e:	97 07       	cpc	r25, r23
   10680:	38 f0       	brcs	.+14     	; 0x10690 <_ZN11ArduinoJson9Internals20StaticJsonBufferBase5allocEj+0x22>
   10682:	82 81       	ldd	r24, Z+2	; 0x02
   10684:	93 81       	ldd	r25, Z+3	; 0x03
   10686:	77 83       	std	Z+7, r23	; 0x07
   10688:	66 83       	std	Z+6, r22	; 0x06
   1068a:	82 0f       	add	r24, r18
   1068c:	93 1f       	adc	r25, r19
   1068e:	08 95       	ret
   10690:	80 e0       	ldi	r24, 0x00	; 0
   10692:	90 e0       	ldi	r25, 0x00	; 0
   10694:	08 95       	ret

00010696 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>:
   10696:	77 fd       	sbrc	r23, 7
   10698:	06 c0       	rjmp	.+12     	; 0x106a6 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x10>
   1069a:	ab 01       	movw	r20, r22
   1069c:	77 0f       	add	r23, r23
   1069e:	66 0b       	sbc	r22, r22
   106a0:	77 0b       	sbc	r23, r23
   106a2:	24 e0       	ldi	r18, 0x04	; 4
   106a4:	09 c0       	rjmp	.+18     	; 0x106b8 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26+0x22>
   106a6:	44 27       	eor	r20, r20
   106a8:	55 27       	eor	r21, r21
   106aa:	46 1b       	sub	r20, r22
   106ac:	57 0b       	sbc	r21, r23
   106ae:	05 2e       	mov	r0, r21
   106b0:	00 0c       	add	r0, r0
   106b2:	66 0b       	sbc	r22, r22
   106b4:	77 0b       	sbc	r23, r23
   106b6:	25 e0       	ldi	r18, 0x05	; 5
   106b8:	fc 01       	movw	r30, r24
   106ba:	20 83       	st	Z, r18
   106bc:	41 83       	std	Z+1, r20	; 0x01
   106be:	52 83       	std	Z+2, r21	; 0x02
   106c0:	63 83       	std	Z+3, r22	; 0x03
   106c2:	74 83       	std	Z+4, r23	; 0x04
   106c4:	81 e0       	ldi	r24, 0x01	; 1
   106c6:	08 95       	ret

000106c8 <_ZN5Print5writeEPKc>:
   106c8:	61 15       	cp	r22, r1
   106ca:	71 05       	cpc	r23, r1
   106cc:	79 f0       	breq	.+30     	; 0x106ec <_ZN5Print5writeEPKc+0x24>
   106ce:	fb 01       	movw	r30, r22
   106d0:	01 90       	ld	r0, Z+
   106d2:	00 20       	and	r0, r0
   106d4:	e9 f7       	brne	.-6      	; 0x106d0 <_ZN5Print5writeEPKc+0x8>
   106d6:	31 97       	sbiw	r30, 0x01	; 1
   106d8:	af 01       	movw	r20, r30
   106da:	46 1b       	sub	r20, r22
   106dc:	57 0b       	sbc	r21, r23
   106de:	dc 01       	movw	r26, r24
   106e0:	ed 91       	ld	r30, X+
   106e2:	fc 91       	ld	r31, X
   106e4:	02 80       	ldd	r0, Z+2	; 0x02
   106e6:	f3 81       	ldd	r31, Z+3	; 0x03
   106e8:	e0 2d       	mov	r30, r0
   106ea:	19 94       	eijmp
   106ec:	80 e0       	ldi	r24, 0x00	; 0
   106ee:	90 e0       	ldi	r25, 0x00	; 0
   106f0:	08 95       	ret

000106f2 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>:
   106f2:	db 01       	movw	r26, r22
   106f4:	10 97       	sbiw	r26, 0x00	; 0
   106f6:	49 f0       	breq	.+18     	; 0x1070a <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE+0x18>
   106f8:	ed 91       	ld	r30, X+
   106fa:	fc 91       	ld	r31, X
   106fc:	11 97       	sbiw	r26, 0x01	; 1
   106fe:	01 90       	ld	r0, Z+
   10700:	f0 81       	ld	r31, Z
   10702:	e0 2d       	mov	r30, r0
   10704:	bc 01       	movw	r22, r24
   10706:	cd 01       	movw	r24, r26
   10708:	19 94       	eijmp
   1070a:	80 e0       	ldi	r24, 0x00	; 0
   1070c:	90 e0       	ldi	r25, 0x00	; 0
   1070e:	08 95       	ret

00010710 <_ZN11ArduinoJson9JsonArray7invalidEv>:
   10710:	80 91 63 16 	lds	r24, 0x1663	; 0x801663 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10714:	81 11       	cpse	r24, r1
   10716:	0b c0       	rjmp	.+22     	; 0x1072e <_ZN11ArduinoJson9JsonArray7invalidEv+0x1e>
   10718:	10 92 6c 16 	sts	0x166C, r1	; 0x80166c <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x1>
   1071c:	10 92 6b 16 	sts	0x166B, r1	; 0x80166b <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance>
   10720:	10 92 6e 16 	sts	0x166E, r1	; 0x80166e <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x3>
   10724:	10 92 6d 16 	sts	0x166D, r1	; 0x80166d <_ZZN11ArduinoJson9JsonArray7invalidEvE8instance+0x2>
   10728:	81 e0       	ldi	r24, 0x01	; 1
   1072a:	80 93 63 16 	sts	0x1663, r24	; 0x801663 <_ZGVZN11ArduinoJson9JsonArray7invalidEvE8instance>
   1072e:	8b e6       	ldi	r24, 0x6B	; 107
   10730:	96 e1       	ldi	r25, 0x16	; 22
   10732:	08 95       	ret

00010734 <_ZN11ArduinoJson10JsonObject7invalidEv>:
   10734:	80 91 57 16 	lds	r24, 0x1657	; 0x801657 <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10738:	81 11       	cpse	r24, r1
   1073a:	0b c0       	rjmp	.+22     	; 0x10752 <_ZN11ArduinoJson10JsonObject7invalidEv+0x1e>
   1073c:	10 92 60 16 	sts	0x1660, r1	; 0x801660 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x1>
   10740:	10 92 5f 16 	sts	0x165F, r1	; 0x80165f <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10744:	10 92 62 16 	sts	0x1662, r1	; 0x801662 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x3>
   10748:	10 92 61 16 	sts	0x1661, r1	; 0x801661 <_ZZN11ArduinoJson10JsonObject7invalidEvE8instance+0x2>
   1074c:	81 e0       	ldi	r24, 0x01	; 1
   1074e:	80 93 57 16 	sts	0x1657, r24	; 0x801657 <_ZGVZN11ArduinoJson10JsonObject7invalidEvE8instance>
   10752:	8f e5       	ldi	r24, 0x5F	; 95
   10754:	96 e1       	ldi	r25, 0x16	; 22
   10756:	08 95       	ret

00010758 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>:
   10758:	cf 93       	push	r28
   1075a:	df 93       	push	r29
   1075c:	ec 01       	movw	r28, r24
   1075e:	bc 01       	movw	r22, r24
   10760:	84 e0       	ldi	r24, 0x04	; 4
   10762:	90 e0       	ldi	r25, 0x00	; 0
   10764:	c6 df       	rcall	.-116    	; 0x106f2 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   10766:	00 97       	sbiw	r24, 0x00	; 0
   10768:	41 f0       	breq	.+16     	; 0x1077a <_ZN11ArduinoJson10JsonBuffer12createObjectEv+0x22>
   1076a:	fc 01       	movw	r30, r24
   1076c:	d1 83       	std	Z+1, r29	; 0x01
   1076e:	c0 83       	st	Z, r28
   10770:	13 82       	std	Z+3, r1	; 0x03
   10772:	12 82       	std	Z+2, r1	; 0x02
   10774:	df 91       	pop	r29
   10776:	cf 91       	pop	r28
   10778:	08 95       	ret
   1077a:	df 91       	pop	r29
   1077c:	cf 91       	pop	r28
   1077e:	da cf       	rjmp	.-76     	; 0x10734 <_ZN11ArduinoJson10JsonObject7invalidEv>

00010780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>:
   10780:	0f 93       	push	r16
   10782:	1f 93       	push	r17
   10784:	cf 93       	push	r28
   10786:	df 93       	push	r29
   10788:	1f 92       	push	r1
   1078a:	1f 92       	push	r1
   1078c:	cd b7       	in	r28, 0x3d	; 61
   1078e:	de b7       	in	r29, 0x3e	; 62
   10790:	8b 01       	movw	r16, r22
   10792:	fb 01       	movw	r30, r22
   10794:	60 81       	ld	r22, Z
   10796:	9a 83       	std	Y+2, r25	; 0x02
   10798:	89 83       	std	Y+1, r24	; 0x01
   1079a:	ce 01       	movw	r24, r28
   1079c:	01 96       	adiw	r24, 0x01	; 1
   1079e:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   107a2:	c8 01       	movw	r24, r16
   107a4:	0f 90       	pop	r0
   107a6:	0f 90       	pop	r0
   107a8:	df 91       	pop	r29
   107aa:	cf 91       	pop	r28
   107ac:	1f 91       	pop	r17
   107ae:	0f 91       	pop	r16
   107b0:	08 95       	ret

000107b2 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>:
   107b2:	af 92       	push	r10
   107b4:	bf 92       	push	r11
   107b6:	cf 92       	push	r12
   107b8:	df 92       	push	r13
   107ba:	ef 92       	push	r14
   107bc:	ff 92       	push	r15
   107be:	0f 93       	push	r16
   107c0:	1f 93       	push	r17
   107c2:	cf 93       	push	r28
   107c4:	df 93       	push	r29
   107c6:	1f 92       	push	r1
   107c8:	1f 92       	push	r1
   107ca:	cd b7       	in	r28, 0x3d	; 61
   107cc:	de b7       	in	r29, 0x3e	; 62
   107ce:	8b 01       	movw	r16, r22
   107d0:	6b 01       	movw	r12, r22
   107d2:	2b e0       	ldi	r18, 0x0B	; 11
   107d4:	c2 0e       	add	r12, r18
   107d6:	d1 1c       	adc	r13, r1
   107d8:	7b 01       	movw	r14, r22
   107da:	5c 01       	movw	r10, r24
   107dc:	a6 1a       	sub	r10, r22
   107de:	b7 0a       	sbc	r11, r23
   107e0:	c5 01       	movw	r24, r10
   107e2:	8e 0d       	add	r24, r14
   107e4:	9f 1d       	adc	r25, r15
   107e6:	f7 01       	movw	r30, r14
   107e8:	61 91       	ld	r22, Z+
   107ea:	7f 01       	movw	r14, r30
   107ec:	9a 83       	std	Y+2, r25	; 0x02
   107ee:	89 83       	std	Y+1, r24	; 0x01
   107f0:	ce 01       	movw	r24, r28
   107f2:	01 96       	adiw	r24, 0x01	; 1
   107f4:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   107f8:	ec 14       	cp	r14, r12
   107fa:	fd 04       	cpc	r15, r13
   107fc:	89 f7       	brne	.-30     	; 0x107e0 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8+0x2e>
   107fe:	c8 01       	movw	r24, r16
   10800:	0f 90       	pop	r0
   10802:	0f 90       	pop	r0
   10804:	df 91       	pop	r29
   10806:	cf 91       	pop	r28
   10808:	1f 91       	pop	r17
   1080a:	0f 91       	pop	r16
   1080c:	ff 90       	pop	r15
   1080e:	ef 90       	pop	r14
   10810:	df 90       	pop	r13
   10812:	cf 90       	pop	r12
   10814:	bf 90       	pop	r11
   10816:	af 90       	pop	r10
   10818:	08 95       	ret

0001081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>:
   1081a:	ef 92       	push	r14
   1081c:	ff 92       	push	r15
   1081e:	0f 93       	push	r16
   10820:	1f 93       	push	r17
   10822:	cf 93       	push	r28
   10824:	df 93       	push	r29
   10826:	1f 92       	push	r1
   10828:	1f 92       	push	r1
   1082a:	cd b7       	in	r28, 0x3d	; 61
   1082c:	de b7       	in	r29, 0x3e	; 62
   1082e:	8c 01       	movw	r16, r24
   10830:	85 e6       	ldi	r24, 0x65	; 101
   10832:	e8 2e       	mov	r14, r24
   10834:	85 e1       	ldi	r24, 0x15	; 21
   10836:	f8 2e       	mov	r15, r24
   10838:	f7 01       	movw	r30, r14
   1083a:	66 89       	ldd	r22, Z+22	; 0x16
   1083c:	1a 83       	std	Y+2, r17	; 0x02
   1083e:	09 83       	std	Y+1, r16	; 0x01
   10840:	ce 01       	movw	r24, r28
   10842:	01 96       	adiw	r24, 0x01	; 1
   10844:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   10848:	f7 01       	movw	r30, r14
   1084a:	67 89       	ldd	r22, Z+23	; 0x17
   1084c:	0f 5f       	subi	r16, 0xFF	; 255
   1084e:	1f 4f       	sbci	r17, 0xFF	; 255
   10850:	1a 83       	std	Y+2, r17	; 0x02
   10852:	09 83       	std	Y+1, r16	; 0x01
   10854:	ce 01       	movw	r24, r28
   10856:	01 96       	adiw	r24, 0x01	; 1
   10858:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   1085c:	8b e7       	ldi	r24, 0x7B	; 123
   1085e:	95 e1       	ldi	r25, 0x15	; 21
   10860:	0f 90       	pop	r0
   10862:	0f 90       	pop	r0
   10864:	df 91       	pop	r29
   10866:	cf 91       	pop	r28
   10868:	1f 91       	pop	r17
   1086a:	0f 91       	pop	r16
   1086c:	ff 90       	pop	r15
   1086e:	ef 90       	pop	r14
   10870:	08 95       	ret

00010872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>:
   10872:	ef 92       	push	r14
   10874:	ff 92       	push	r15
   10876:	0f 93       	push	r16
   10878:	1f 93       	push	r17
   1087a:	cf 93       	push	r28
   1087c:	df 93       	push	r29
   1087e:	1f 92       	push	r1
   10880:	1f 92       	push	r1
   10882:	cd b7       	in	r28, 0x3d	; 61
   10884:	de b7       	in	r29, 0x3e	; 62
   10886:	8c e3       	ldi	r24, 0x3C	; 60
   10888:	e8 2e       	mov	r14, r24
   1088a:	86 e1       	ldi	r24, 0x16	; 22
   1088c:	f8 2e       	mov	r15, r24
   1088e:	00 e1       	ldi	r16, 0x10	; 16
   10890:	1e e0       	ldi	r17, 0x0E	; 14
   10892:	f7 01       	movw	r30, r14
   10894:	61 91       	ld	r22, Z+
   10896:	7f 01       	movw	r14, r30
   10898:	1a 83       	std	Y+2, r17	; 0x02
   1089a:	09 83       	std	Y+1, r16	; 0x01
   1089c:	ce 01       	movw	r24, r28
   1089e:	01 96       	adiw	r24, 0x01	; 1
   108a0:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   108a4:	0f 5f       	subi	r16, 0xFF	; 255
   108a6:	1f 4f       	sbci	r17, 0xFF	; 255
   108a8:	05 31       	cpi	r16, 0x15	; 21
   108aa:	fe e0       	ldi	r31, 0x0E	; 14
   108ac:	1f 07       	cpc	r17, r31
   108ae:	89 f7       	brne	.-30     	; 0x10892 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41+0x20>
   108b0:	8c e3       	ldi	r24, 0x3C	; 60
   108b2:	96 e1       	ldi	r25, 0x16	; 22
   108b4:	0f 90       	pop	r0
   108b6:	0f 90       	pop	r0
   108b8:	df 91       	pop	r29
   108ba:	cf 91       	pop	r28
   108bc:	1f 91       	pop	r17
   108be:	0f 91       	pop	r16
   108c0:	ff 90       	pop	r15
   108c2:	ef 90       	pop	r14
   108c4:	08 95       	ret

000108c6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43>:
   108c6:	ef 92       	push	r14
   108c8:	ff 92       	push	r15
   108ca:	0f 93       	push	r16
   108cc:	1f 93       	push	r17
   108ce:	cf 93       	push	r28
   108d0:	df 93       	push	r29
   108d2:	1f 92       	push	r1
   108d4:	1f 92       	push	r1
   108d6:	cd b7       	in	r28, 0x3d	; 61
   108d8:	de b7       	in	r29, 0x3e	; 62
   108da:	80 ef       	ldi	r24, 0xF0	; 240
   108dc:	e8 2e       	mov	r14, r24
   108de:	88 e0       	ldi	r24, 0x08	; 8
   108e0:	f8 2e       	mov	r15, r24
   108e2:	02 ea       	ldi	r16, 0xA2	; 162
   108e4:	14 e0       	ldi	r17, 0x04	; 4
   108e6:	f7 01       	movw	r30, r14
   108e8:	61 91       	ld	r22, Z+
   108ea:	7f 01       	movw	r14, r30
   108ec:	1a 83       	std	Y+2, r17	; 0x02
   108ee:	09 83       	std	Y+1, r16	; 0x01
   108f0:	ce 01       	movw	r24, r28
   108f2:	01 96       	adiw	r24, 0x01	; 1
   108f4:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   108f8:	0f 5f       	subi	r16, 0xFF	; 255
   108fa:	1f 4f       	sbci	r17, 0xFF	; 255
   108fc:	08 37       	cpi	r16, 0x78	; 120
   108fe:	f7 e0       	ldi	r31, 0x07	; 7
   10900:	1f 07       	cpc	r17, r31
   10902:	89 f7       	brne	.-30     	; 0x108e6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43+0x20>
   10904:	80 ef       	ldi	r24, 0xF0	; 240
   10906:	98 e0       	ldi	r25, 0x08	; 8
   10908:	0f 90       	pop	r0
   1090a:	0f 90       	pop	r0
   1090c:	df 91       	pop	r29
   1090e:	cf 91       	pop	r28
   10910:	1f 91       	pop	r17
   10912:	0f 91       	pop	r16
   10914:	ff 90       	pop	r15
   10916:	ef 90       	pop	r14
   10918:	08 95       	ret

0001091a <_Z18Read_Switch_Statusv>:
   1091a:	61 e0       	ldi	r22, 0x01	; 1
   1091c:	84 e2       	ldi	r24, 0x24	; 36
   1091e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   10922:	86 e2       	ldi	r24, 0x26	; 38
   10924:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   10928:	30 91 9e 0f 	lds	r19, 0x0F9E	; 0x800f9e <_ZZ18Read_Switch_StatusvE9key_press>
   1092c:	33 23       	and	r19, r19
   1092e:	b9 f0       	breq	.+46     	; 0x1095e <_Z18Read_Switch_Statusv+0x44>
   10930:	90 91 9d 0f 	lds	r25, 0x0F9D	; 0x800f9d <_ZZ18Read_Switch_StatusvE10time_count>
   10934:	93 33       	cpi	r25, 0x33	; 51
   10936:	30 f0       	brcs	.+12     	; 0x10944 <_Z18Read_Switch_Statusv+0x2a>
   10938:	31 30       	cpi	r19, 0x01	; 1
   1093a:	61 f4       	brne	.+24     	; 0x10954 <_Z18Read_Switch_Statusv+0x3a>
   1093c:	82 e0       	ldi	r24, 0x02	; 2
   1093e:	80 93 8f 15 	sts	0x158F, r24	; 0x80158f <_sRuble_Parameters+0x2a>
   10942:	08 c0       	rjmp	.+16     	; 0x10954 <_Z18Read_Switch_Statusv+0x3a>
   10944:	21 e0       	ldi	r18, 0x01	; 1
   10946:	82 27       	eor	r24, r18
   10948:	38 13       	cpse	r19, r24
   1094a:	04 c0       	rjmp	.+8      	; 0x10954 <_Z18Read_Switch_Statusv+0x3a>
   1094c:	9f 5f       	subi	r25, 0xFF	; 255
   1094e:	90 93 9d 0f 	sts	0x0F9D, r25	; 0x800f9d <_ZZ18Read_Switch_StatusvE10time_count>
   10952:	08 95       	ret
   10954:	10 92 9d 0f 	sts	0x0F9D, r1	; 0x800f9d <_ZZ18Read_Switch_StatusvE10time_count>
   10958:	10 92 9e 0f 	sts	0x0F9E, r1	; 0x800f9e <_ZZ18Read_Switch_StatusvE9key_press>
   1095c:	08 95       	ret
   1095e:	91 e0       	ldi	r25, 0x01	; 1
   10960:	89 27       	eor	r24, r25
   10962:	80 93 9e 0f 	sts	0x0F9E, r24	; 0x800f9e <_ZZ18Read_Switch_StatusvE9key_press>
   10966:	81 11       	cpse	r24, r1
   10968:	0c c0       	rjmp	.+24     	; 0x10982 <_Z18Read_Switch_Statusv+0x68>
   1096a:	80 91 9c 0f 	lds	r24, 0x0F9C	; 0x800f9c <_ZZ18Read_Switch_StatusvE11time_count2>
   1096e:	83 33       	cpi	r24, 0x33	; 51
   10970:	28 f0       	brcs	.+10     	; 0x1097c <_Z18Read_Switch_Statusv+0x62>
   10972:	10 92 9c 0f 	sts	0x0F9C, r1	; 0x800f9c <_ZZ18Read_Switch_StatusvE11time_count2>
   10976:	90 93 8f 15 	sts	0x158F, r25	; 0x80158f <_sRuble_Parameters+0x2a>
   1097a:	08 95       	ret
   1097c:	8f 5f       	subi	r24, 0xFF	; 255
   1097e:	80 93 9c 0f 	sts	0x0F9C, r24	; 0x800f9c <_ZZ18Read_Switch_StatusvE11time_count2>
   10982:	08 95       	ret

00010984 <_Z17Update_Indicationv>:
   10984:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   10988:	80 ff       	sbrs	r24, 0
   1098a:	07 c0       	rjmp	.+14     	; 0x1099a <_Z17Update_Indicationv+0x16>
   1098c:	8c e0       	ldi	r24, 0x0C	; 12
   1098e:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   10992:	89 2b       	or	r24, r25
   10994:	59 f4       	brne	.+22     	; 0x109ac <_Z17Update_Indicationv+0x28>
   10996:	61 e0       	ldi	r22, 0x01	; 1
   10998:	06 c0       	rjmp	.+12     	; 0x109a6 <_Z17Update_Indicationv+0x22>
   1099a:	8c e0       	ldi	r24, 0x0C	; 12
   1099c:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   109a0:	89 2b       	or	r24, r25
   109a2:	21 f0       	breq	.+8      	; 0x109ac <_Z17Update_Indicationv+0x28>
   109a4:	60 e0       	ldi	r22, 0x00	; 0
   109a6:	8c e0       	ldi	r24, 0x0C	; 12
   109a8:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   109ac:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   109b0:	81 ff       	sbrs	r24, 1
   109b2:	07 c0       	rjmp	.+14     	; 0x109c2 <_Z17Update_Indicationv+0x3e>
   109b4:	81 e0       	ldi	r24, 0x01	; 1
   109b6:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   109ba:	89 2b       	or	r24, r25
   109bc:	59 f4       	brne	.+22     	; 0x109d4 <_Z17Update_Indicationv+0x50>
   109be:	61 e0       	ldi	r22, 0x01	; 1
   109c0:	06 c0       	rjmp	.+12     	; 0x109ce <_Z17Update_Indicationv+0x4a>
   109c2:	81 e0       	ldi	r24, 0x01	; 1
   109c4:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   109c8:	89 2b       	or	r24, r25
   109ca:	21 f0       	breq	.+8      	; 0x109d4 <_Z17Update_Indicationv+0x50>
   109cc:	60 e0       	ldi	r22, 0x00	; 0
   109ce:	81 e0       	ldi	r24, 0x01	; 1
   109d0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   109d4:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   109d8:	82 ff       	sbrs	r24, 2
   109da:	07 c0       	rjmp	.+14     	; 0x109ea <_Z17Update_Indicationv+0x66>
   109dc:	87 e2       	ldi	r24, 0x27	; 39
   109de:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   109e2:	89 2b       	or	r24, r25
   109e4:	59 f4       	brne	.+22     	; 0x109fc <_Z17Update_Indicationv+0x78>
   109e6:	61 e0       	ldi	r22, 0x01	; 1
   109e8:	06 c0       	rjmp	.+12     	; 0x109f6 <_Z17Update_Indicationv+0x72>
   109ea:	87 e2       	ldi	r24, 0x27	; 39
   109ec:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   109f0:	89 2b       	or	r24, r25
   109f2:	21 f0       	breq	.+8      	; 0x109fc <_Z17Update_Indicationv+0x78>
   109f4:	60 e0       	ldi	r22, 0x00	; 0
   109f6:	87 e2       	ldi	r24, 0x27	; 39
   109f8:	0c 94 a9 d4 	jmp	0x1a952	; 0x1a952 <digitalWrite>
   109fc:	08 95       	ret

000109fe <_Z16Dummy_Data_Storev>:
   109fe:	8f 92       	push	r8
   10a00:	9f 92       	push	r9
   10a02:	af 92       	push	r10
   10a04:	bf 92       	push	r11
   10a06:	cf 92       	push	r12
   10a08:	df 92       	push	r13
   10a0a:	ef 92       	push	r14
   10a0c:	ff 92       	push	r15
   10a0e:	0f 93       	push	r16
   10a10:	1f 93       	push	r17
   10a12:	cf 93       	push	r28
   10a14:	df 93       	push	r29
   10a16:	1f 92       	push	r1
   10a18:	1f 92       	push	r1
   10a1a:	cd b7       	in	r28, 0x3d	; 61
   10a1c:	de b7       	in	r29, 0x3e	; 62
   10a1e:	fd ef       	ldi	r31, 0xFD	; 253
   10a20:	ef 2e       	mov	r14, r31
   10a22:	fc e0       	ldi	r31, 0x0C	; 12
   10a24:	ff 2e       	mov	r15, r31
   10a26:	10 e0       	ldi	r17, 0x00	; 0
   10a28:	f7 01       	movw	r30, r14
   10a2a:	10 82       	st	Z, r1
   10a2c:	81 2f       	mov	r24, r17
   10a2e:	0e 94 15 7d 	call	0xfa2a	; 0xfa2a <_Z16Lira_Data_EEPROMh>
   10a32:	f6 e0       	ldi	r31, 0x06	; 6
   10a34:	ef 0e       	add	r14, r31
   10a36:	f1 1c       	adc	r15, r1
   10a38:	1f 5f       	subi	r17, 0xFF	; 255
   10a3a:	1e 30       	cpi	r17, 0x0E	; 14
   10a3c:	a9 f7       	brne	.-22     	; 0x10a28 <_Z16Dummy_Data_Storev+0x2a>
   10a3e:	e7 ee       	ldi	r30, 0xE7	; 231
   10a40:	ee 2e       	mov	r14, r30
   10a42:	eb e0       	ldi	r30, 0x0B	; 11
   10a44:	fe 2e       	mov	r15, r30
   10a46:	10 e0       	ldi	r17, 0x00	; 0
   10a48:	f7 01       	movw	r30, r14
   10a4a:	10 82       	st	Z, r1
   10a4c:	81 2f       	mov	r24, r17
   10a4e:	0e 94 12 5b 	call	0xb624	; 0xb624 <_Z16Euro_Data_EEPROMh>
   10a52:	fd e0       	ldi	r31, 0x0D	; 13
   10a54:	ef 0e       	add	r14, r31
   10a56:	f1 1c       	adc	r15, r1
   10a58:	1f 5f       	subi	r17, 0xFF	; 255
   10a5a:	14 30       	cpi	r17, 0x04	; 4
   10a5c:	a9 f7       	brne	.-22     	; 0x10a48 <_Z16Dummy_Data_Storev+0x4a>
   10a5e:	68 e6       	ldi	r22, 0x68	; 104
   10a60:	7d e0       	ldi	r23, 0x0D	; 13
   10a62:	82 e6       	ldi	r24, 0x62	; 98
   10a64:	94 e0       	ldi	r25, 0x04	; 4
   10a66:	a5 de       	rcall	.-694    	; 0x107b2 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10a68:	63 e7       	ldi	r22, 0x73	; 115
   10a6a:	7d e0       	ldi	r23, 0x0D	; 13
   10a6c:	8f e6       	ldi	r24, 0x6F	; 111
   10a6e:	94 e0       	ldi	r25, 0x04	; 4
   10a70:	a0 de       	rcall	.-704    	; 0x107b2 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   10a72:	89 e0       	ldi	r24, 0x09	; 9
   10a74:	80 93 12 16 	sts	0x1612, r24	; 0x801612 <_sRuble_Parameters+0xad>
   10a78:	62 e1       	ldi	r22, 0x12	; 18
   10a7a:	76 e1       	ldi	r23, 0x16	; 22
   10a7c:	80 ea       	ldi	r24, 0xA0	; 160
   10a7e:	94 e0       	ldi	r25, 0x04	; 4
   10a80:	7f de       	rcall	.-770    	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10a82:	82 e0       	ldi	r24, 0x02	; 2
   10a84:	80 93 1a 16 	sts	0x161A, r24	; 0x80161a <_sRuble_Parameters+0xb5>
   10a88:	6a e1       	ldi	r22, 0x1A	; 26
   10a8a:	76 e1       	ldi	r23, 0x16	; 22
   10a8c:	81 ea       	ldi	r24, 0xA1	; 161
   10a8e:	94 e0       	ldi	r25, 0x04	; 4
   10a90:	77 de       	rcall	.-786    	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10a92:	10 92 f0 08 	sts	0x08F0, r1	; 0x8008f0 <_sSchedules>
   10a96:	10 92 f1 08 	sts	0x08F1, r1	; 0x8008f1 <_sSchedules+0x1>
   10a9a:	10 92 f2 08 	sts	0x08F2, r1	; 0x8008f2 <_sSchedules+0x2>
   10a9e:	10 92 f5 08 	sts	0x08F5, r1	; 0x8008f5 <_sSchedules+0x5>
   10aa2:	10 92 f4 08 	sts	0x08F4, r1	; 0x8008f4 <_sSchedules+0x4>
   10aa6:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
   10aaa:	10 92 f7 08 	sts	0x08F7, r1	; 0x8008f7 <_sSchedules+0x7>
   10aae:	10 92 f9 08 	sts	0x08F9, r1	; 0x8008f9 <_sSchedules+0x9>
   10ab2:	10 92 f8 08 	sts	0x08F8, r1	; 0x8008f8 <_sSchedules+0x8>
   10ab6:	81 e0       	ldi	r24, 0x01	; 1
   10ab8:	80 93 fa 08 	sts	0x08FA, r24	; 0x8008fa <_sSchedules+0xa>
   10abc:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <_sSchedules+0xb>
   10ac0:	80 93 fc 08 	sts	0x08FC, r24	; 0x8008fc <_sSchedules+0xc>
   10ac4:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <_sSchedules+0xd>
   10ac8:	80 93 fe 08 	sts	0x08FE, r24	; 0x8008fe <_sSchedules+0xe>
   10acc:	41 e0       	ldi	r20, 0x01	; 1
   10ace:	50 e0       	ldi	r21, 0x00	; 0
   10ad0:	60 e0       	ldi	r22, 0x00	; 0
   10ad2:	70 e0       	ldi	r23, 0x00	; 0
   10ad4:	40 93 03 09 	sts	0x0903, r20	; 0x800903 <_sSchedules+0x13>
   10ad8:	50 93 04 09 	sts	0x0904, r21	; 0x800904 <_sSchedules+0x14>
   10adc:	60 93 05 09 	sts	0x0905, r22	; 0x800905 <_sSchedules+0x15>
   10ae0:	70 93 06 09 	sts	0x0906, r23	; 0x800906 <_sSchedules+0x16>
   10ae4:	10 92 07 09 	sts	0x0907, r1	; 0x800907 <_sSchedules+0x17>
   10ae8:	10 92 08 09 	sts	0x0908, r1	; 0x800908 <_sSchedules+0x18>
   10aec:	10 92 09 09 	sts	0x0909, r1	; 0x800909 <_sSchedules+0x19>
   10af0:	10 92 0a 09 	sts	0x090A, r1	; 0x80090a <_sSchedules+0x1a>
   10af4:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <_sSchedules+0x1b>
   10af8:	10 92 0c 09 	sts	0x090C, r1	; 0x80090c <_sSchedules+0x1c>
   10afc:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <_sSchedules+0x1d>
   10b00:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <_sSchedules+0x1e>
   10b04:	80 e0       	ldi	r24, 0x00	; 0
   10b06:	90 e0       	ldi	r25, 0x00	; 0
   10b08:	fc 01       	movw	r30, r24
   10b0a:	ee 0f       	add	r30, r30
   10b0c:	ff 1f       	adc	r31, r31
   10b0e:	e0 51       	subi	r30, 0x10	; 16
   10b10:	f7 4f       	sbci	r31, 0xF7	; 247
   10b12:	10 a2       	std	Z+32, r1	; 0x20
   10b14:	17 8e       	std	Z+31, r1	; 0x1f
   10b16:	01 96       	adiw	r24, 0x01	; 1
   10b18:	8f 30       	cpi	r24, 0x0F	; 15
   10b1a:	91 05       	cpc	r25, r1
   10b1c:	a9 f7       	brne	.-22     	; 0x10b08 <_Z16Dummy_Data_Storev+0x10a>
   10b1e:	80 e0       	ldi	r24, 0x00	; 0
   10b20:	90 e0       	ldi	r25, 0x00	; 0
   10b22:	fc 01       	movw	r30, r24
   10b24:	e0 51       	subi	r30, 0x10	; 16
   10b26:	f7 4f       	sbci	r31, 0xF7	; 247
   10b28:	15 ae       	std	Z+61, r1	; 0x3d
   10b2a:	01 96       	adiw	r24, 0x01	; 1
   10b2c:	8f 30       	cpi	r24, 0x0F	; 15
   10b2e:	91 05       	cpc	r25, r1
   10b30:	c1 f7       	brne	.-16     	; 0x10b22 <_Z16Dummy_Data_Storev+0x124>
   10b32:	80 e0       	ldi	r24, 0x00	; 0
   10b34:	90 e0       	ldi	r25, 0x00	; 0
   10b36:	fc 01       	movw	r30, r24
   10b38:	e4 5c       	subi	r30, 0xC4	; 196
   10b3a:	f6 4f       	sbci	r31, 0xF6	; 246
   10b3c:	10 82       	st	Z, r1
   10b3e:	01 96       	adiw	r24, 0x01	; 1
   10b40:	8f 30       	cpi	r24, 0x0F	; 15
   10b42:	91 05       	cpc	r25, r1
   10b44:	c1 f7       	brne	.-16     	; 0x10b36 <_Z16Dummy_Data_Storev+0x138>
   10b46:	80 e0       	ldi	r24, 0x00	; 0
   10b48:	90 e0       	ldi	r25, 0x00	; 0
   10b4a:	9c 01       	movw	r18, r24
   10b4c:	20 51       	subi	r18, 0x10	; 16
   10b4e:	37 4f       	sbci	r19, 0xF7	; 247
   10b50:	f9 01       	movw	r30, r18
   10b52:	e5 5a       	subi	r30, 0xA5	; 165
   10b54:	ff 4f       	sbci	r31, 0xFF	; 255
   10b56:	10 82       	st	Z, r1
   10b58:	3f 96       	adiw	r30, 0x0f	; 15
   10b5a:	10 82       	st	Z, r1
   10b5c:	01 96       	adiw	r24, 0x01	; 1
   10b5e:	8f 30       	cpi	r24, 0x0F	; 15
   10b60:	91 05       	cpc	r25, r1
   10b62:	99 f7       	brne	.-26     	; 0x10b4a <_Z16Dummy_Data_Storev+0x14c>
   10b64:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
   10b68:	80 e0       	ldi	r24, 0x00	; 0
   10b6a:	90 e0       	ldi	r25, 0x00	; 0
   10b6c:	fc 01       	movw	r30, r24
   10b6e:	e6 59       	subi	r30, 0x96	; 150
   10b70:	f6 4f       	sbci	r31, 0xF6	; 246
   10b72:	10 82       	st	Z, r1
   10b74:	01 96       	adiw	r24, 0x01	; 1
   10b76:	8b 32       	cpi	r24, 0x2B	; 43
   10b78:	91 05       	cpc	r25, r1
   10b7a:	c1 f7       	brne	.-16     	; 0x10b6c <_Z16Dummy_Data_Storev+0x16e>
   10b7c:	80 e0       	ldi	r24, 0x00	; 0
   10b7e:	90 e0       	ldi	r25, 0x00	; 0
   10b80:	fc 01       	movw	r30, r24
   10b82:	e6 59       	subi	r30, 0x96	; 150
   10b84:	f6 4f       	sbci	r31, 0xF6	; 246
   10b86:	10 82       	st	Z, r1
   10b88:	01 96       	adiw	r24, 0x01	; 1
   10b8a:	8b 32       	cpi	r24, 0x2B	; 43
   10b8c:	91 05       	cpc	r25, r1
   10b8e:	c1 f7       	brne	.-16     	; 0x10b80 <_Z16Dummy_Data_Storev+0x182>
   10b90:	80 e0       	ldi	r24, 0x00	; 0
   10b92:	90 e0       	ldi	r25, 0x00	; 0
   10b94:	fc 01       	movw	r30, r24
   10b96:	ee 0f       	add	r30, r30
   10b98:	ff 1f       	adc	r31, r31
   10b9a:	eb 56       	subi	r30, 0x6B	; 107
   10b9c:	f6 4f       	sbci	r31, 0xF6	; 246
   10b9e:	11 82       	std	Z+1, r1	; 0x01
   10ba0:	10 82       	st	Z, r1
   10ba2:	01 96       	adiw	r24, 0x01	; 1
   10ba4:	8b 32       	cpi	r24, 0x2B	; 43
   10ba6:	91 05       	cpc	r25, r1
   10ba8:	a9 f7       	brne	.-22     	; 0x10b94 <_Z16Dummy_Data_Storev+0x196>
   10baa:	80 e0       	ldi	r24, 0x00	; 0
   10bac:	90 e0       	ldi	r25, 0x00	; 0
   10bae:	fc 01       	movw	r30, r24
   10bb0:	ee 0f       	add	r30, r30
   10bb2:	ff 1f       	adc	r31, r31
   10bb4:	e5 51       	subi	r30, 0x15	; 21
   10bb6:	f6 4f       	sbci	r31, 0xF6	; 246
   10bb8:	11 82       	std	Z+1, r1	; 0x01
   10bba:	10 82       	st	Z, r1
   10bbc:	01 96       	adiw	r24, 0x01	; 1
   10bbe:	8b 32       	cpi	r24, 0x2B	; 43
   10bc0:	91 05       	cpc	r25, r1
   10bc2:	a9 f7       	brne	.-22     	; 0x10bae <_Z16Dummy_Data_Storev+0x1b0>
   10bc4:	80 e0       	ldi	r24, 0x00	; 0
   10bc6:	90 e0       	ldi	r25, 0x00	; 0
   10bc8:	fc 01       	movw	r30, r24
   10bca:	ef 5b       	subi	r30, 0xBF	; 191
   10bcc:	f5 4f       	sbci	r31, 0xF5	; 245
   10bce:	10 82       	st	Z, r1
   10bd0:	01 96       	adiw	r24, 0x01	; 1
   10bd2:	8b 32       	cpi	r24, 0x2B	; 43
   10bd4:	91 05       	cpc	r25, r1
   10bd6:	c1 f7       	brne	.-16     	; 0x10bc8 <_Z16Dummy_Data_Storev+0x1ca>
   10bd8:	80 e0       	ldi	r24, 0x00	; 0
   10bda:	90 e0       	ldi	r25, 0x00	; 0
   10bdc:	fc 01       	movw	r30, r24
   10bde:	ee 0f       	add	r30, r30
   10be0:	ff 1f       	adc	r31, r31
   10be2:	e9 56       	subi	r30, 0x69	; 105
   10be4:	f5 4f       	sbci	r31, 0xF5	; 245
   10be6:	11 82       	std	Z+1, r1	; 0x01
   10be8:	10 82       	st	Z, r1
   10bea:	01 96       	adiw	r24, 0x01	; 1
   10bec:	8b 32       	cpi	r24, 0x2B	; 43
   10bee:	91 05       	cpc	r25, r1
   10bf0:	a9 f7       	brne	.-22     	; 0x10bdc <_Z16Dummy_Data_Storev+0x1de>
   10bf2:	80 e0       	ldi	r24, 0x00	; 0
   10bf4:	90 e0       	ldi	r25, 0x00	; 0
   10bf6:	fc 01       	movw	r30, r24
   10bf8:	ee 0f       	add	r30, r30
   10bfa:	ff 1f       	adc	r31, r31
   10bfc:	e3 51       	subi	r30, 0x13	; 19
   10bfe:	f5 4f       	sbci	r31, 0xF5	; 245
   10c00:	11 82       	std	Z+1, r1	; 0x01
   10c02:	10 82       	st	Z, r1
   10c04:	01 96       	adiw	r24, 0x01	; 1
   10c06:	8b 32       	cpi	r24, 0x2B	; 43
   10c08:	91 05       	cpc	r25, r1
   10c0a:	a9 f7       	brne	.-22     	; 0x10bf6 <_Z16Dummy_Data_Storev+0x1f8>
   10c0c:	10 92 43 0b 	sts	0x0B43, r1	; 0x800b43 <_sSchedules+0x253>
   10c10:	10 92 44 0b 	sts	0x0B44, r1	; 0x800b44 <_sSchedules+0x254>
   10c14:	10 92 45 0b 	sts	0x0B45, r1	; 0x800b45 <_sSchedules+0x255>
   10c18:	10 92 46 0b 	sts	0x0B46, r1	; 0x800b46 <_sSchedules+0x256>
   10c1c:	10 92 47 0b 	sts	0x0B47, r1	; 0x800b47 <_sSchedules+0x257>
   10c20:	10 92 49 0b 	sts	0x0B49, r1	; 0x800b49 <_sSchedules+0x259>
   10c24:	10 92 48 0b 	sts	0x0B48, r1	; 0x800b48 <_sSchedules+0x258>
   10c28:	10 92 4b 0b 	sts	0x0B4B, r1	; 0x800b4b <_sSchedules+0x25b>
   10c2c:	10 92 4a 0b 	sts	0x0B4A, r1	; 0x800b4a <_sSchedules+0x25a>
   10c30:	10 92 4d 0b 	sts	0x0B4D, r1	; 0x800b4d <_sSchedules+0x25d>
   10c34:	10 92 4c 0b 	sts	0x0B4C, r1	; 0x800b4c <_sSchedules+0x25c>
   10c38:	10 92 4f 0b 	sts	0x0B4F, r1	; 0x800b4f <_sSchedules+0x25f>
   10c3c:	10 92 4e 0b 	sts	0x0B4E, r1	; 0x800b4e <_sSchedules+0x25e>
   10c40:	10 92 50 0b 	sts	0x0B50, r1	; 0x800b50 <_sSchedules+0x260>
   10c44:	10 92 51 0b 	sts	0x0B51, r1	; 0x800b51 <_sSchedules+0x261>
   10c48:	10 92 52 0b 	sts	0x0B52, r1	; 0x800b52 <_sSchedules+0x262>
   10c4c:	10 92 53 0b 	sts	0x0B53, r1	; 0x800b53 <_sSchedules+0x263>
   10c50:	10 92 55 0b 	sts	0x0B55, r1	; 0x800b55 <_sSchedules+0x265>
   10c54:	10 92 54 0b 	sts	0x0B54, r1	; 0x800b54 <_sSchedules+0x264>
   10c58:	10 92 57 0b 	sts	0x0B57, r1	; 0x800b57 <_sSchedules+0x267>
   10c5c:	10 92 56 0b 	sts	0x0B56, r1	; 0x800b56 <_sSchedules+0x266>
   10c60:	10 92 59 0b 	sts	0x0B59, r1	; 0x800b59 <_sSchedules+0x269>
   10c64:	10 92 58 0b 	sts	0x0B58, r1	; 0x800b58 <_sSchedules+0x268>
   10c68:	10 92 5b 0b 	sts	0x0B5B, r1	; 0x800b5b <_sSchedules+0x26b>
   10c6c:	10 92 5a 0b 	sts	0x0B5A, r1	; 0x800b5a <_sSchedules+0x26a>
   10c70:	10 92 5c 0b 	sts	0x0B5C, r1	; 0x800b5c <_sSchedules+0x26c>
   10c74:	10 92 5d 0b 	sts	0x0B5D, r1	; 0x800b5d <_sSchedules+0x26d>
   10c78:	10 92 5e 0b 	sts	0x0B5E, r1	; 0x800b5e <_sSchedules+0x26e>
   10c7c:	10 92 63 0b 	sts	0x0B63, r1	; 0x800b63 <_sSchedules+0x273>
   10c80:	10 92 64 0b 	sts	0x0B64, r1	; 0x800b64 <_sSchedules+0x274>
   10c84:	10 92 65 0b 	sts	0x0B65, r1	; 0x800b65 <_sSchedules+0x275>
   10c88:	10 92 66 0b 	sts	0x0B66, r1	; 0x800b66 <_sSchedules+0x276>
   10c8c:	10 92 67 0b 	sts	0x0B67, r1	; 0x800b67 <_sSchedules+0x277>
   10c90:	10 92 68 0b 	sts	0x0B68, r1	; 0x800b68 <_sSchedules+0x278>
   10c94:	10 92 69 0b 	sts	0x0B69, r1	; 0x800b69 <_sSchedules+0x279>
   10c98:	10 92 6a 0b 	sts	0x0B6A, r1	; 0x800b6a <_sSchedules+0x27a>
   10c9c:	10 92 6b 0b 	sts	0x0B6B, r1	; 0x800b6b <_sSchedules+0x27b>
   10ca0:	80 e0       	ldi	r24, 0x00	; 0
   10ca2:	90 e0       	ldi	r25, 0x00	; 0
   10ca4:	fc 01       	movw	r30, r24
   10ca6:	ee 0f       	add	r30, r30
   10ca8:	ff 1f       	adc	r31, r31
   10caa:	e4 59       	subi	r30, 0x94	; 148
   10cac:	f4 4f       	sbci	r31, 0xF4	; 244
   10cae:	11 82       	std	Z+1, r1	; 0x01
   10cb0:	10 82       	st	Z, r1
   10cb2:	01 96       	adiw	r24, 0x01	; 1
   10cb4:	8f 30       	cpi	r24, 0x0F	; 15
   10cb6:	91 05       	cpc	r25, r1
   10cb8:	a9 f7       	brne	.-22     	; 0x10ca4 <_Z16Dummy_Data_Storev+0x2a6>
   10cba:	80 e0       	ldi	r24, 0x00	; 0
   10cbc:	90 e0       	ldi	r25, 0x00	; 0
   10cbe:	fc 01       	movw	r30, r24
   10cc0:	e6 57       	subi	r30, 0x76	; 118
   10cc2:	f4 4f       	sbci	r31, 0xF4	; 244
   10cc4:	10 82       	st	Z, r1
   10cc6:	01 96       	adiw	r24, 0x01	; 1
   10cc8:	8f 30       	cpi	r24, 0x0F	; 15
   10cca:	91 05       	cpc	r25, r1
   10ccc:	c1 f7       	brne	.-16     	; 0x10cbe <_Z16Dummy_Data_Storev+0x2c0>
   10cce:	80 e0       	ldi	r24, 0x00	; 0
   10cd0:	90 e0       	ldi	r25, 0x00	; 0
   10cd2:	fc 01       	movw	r30, r24
   10cd4:	e7 56       	subi	r30, 0x67	; 103
   10cd6:	f4 4f       	sbci	r31, 0xF4	; 244
   10cd8:	10 82       	st	Z, r1
   10cda:	01 96       	adiw	r24, 0x01	; 1
   10cdc:	8f 30       	cpi	r24, 0x0F	; 15
   10cde:	91 05       	cpc	r25, r1
   10ce0:	c1 f7       	brne	.-16     	; 0x10cd2 <_Z16Dummy_Data_Storev+0x2d4>
   10ce2:	80 e0       	ldi	r24, 0x00	; 0
   10ce4:	90 e0       	ldi	r25, 0x00	; 0
   10ce6:	fc 01       	movw	r30, r24
   10ce8:	e7 56       	subi	r30, 0x67	; 103
   10cea:	f4 4f       	sbci	r31, 0xF4	; 244
   10cec:	10 82       	st	Z, r1
   10cee:	01 96       	adiw	r24, 0x01	; 1
   10cf0:	8b 32       	cpi	r24, 0x2B	; 43
   10cf2:	91 05       	cpc	r25, r1
   10cf4:	c1 f7       	brne	.-16     	; 0x10ce6 <_Z16Dummy_Data_Storev+0x2e8>
   10cf6:	10 92 a8 0b 	sts	0x0BA8, r1	; 0x800ba8 <_sSchedules+0x2b8>
   10cfa:	10 92 5f 0b 	sts	0x0B5F, r1	; 0x800b5f <_sSchedules+0x26f>
   10cfe:	10 92 60 0b 	sts	0x0B60, r1	; 0x800b60 <_sSchedules+0x270>
   10d02:	10 92 61 0b 	sts	0x0B61, r1	; 0x800b61 <_sSchedules+0x271>
   10d06:	10 92 62 0b 	sts	0x0B62, r1	; 0x800b62 <_sSchedules+0x272>
   10d0a:	dd dd       	rcall	.-1094   	; 0x108c6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43>
   10d0c:	9f e9       	ldi	r25, 0x9F	; 159
   10d0e:	e9 2e       	mov	r14, r25
   10d10:	9f e0       	ldi	r25, 0x0F	; 15
   10d12:	f9 2e       	mov	r15, r25
   10d14:	08 e7       	ldi	r16, 0x78	; 120
   10d16:	19 e0       	ldi	r17, 0x09	; 9
   10d18:	f7 01       	movw	r30, r14
   10d1a:	11 82       	std	Z+1, r1	; 0x01
   10d1c:	10 92 a4 0f 	sts	0x0FA4, r1	; 0x800fa4 <_sExtra_Plot+0x5>
   10d20:	10 92 c0 0f 	sts	0x0FC0, r1	; 0x800fc0 <_sExtra_Plot+0x21>
   10d24:	10 92 dc 0f 	sts	0x0FDC, r1	; 0x800fdc <_sExtra_Plot+0x3d>
   10d28:	10 92 f8 0f 	sts	0x0FF8, r1	; 0x800ff8 <_sExtra_Plot+0x59>
   10d2c:	10 92 14 10 	sts	0x1014, r1	; 0x801014 <_sExtra_Plot+0x75>
   10d30:	48 01       	movw	r8, r16
   10d32:	fb e1       	ldi	r31, 0x1B	; 27
   10d34:	8f 0e       	add	r8, r31
   10d36:	91 1c       	adc	r9, r1
   10d38:	57 01       	movw	r10, r14
   10d3a:	68 01       	movw	r12, r16
   10d3c:	f5 01       	movw	r30, r10
   10d3e:	61 91       	ld	r22, Z+
   10d40:	5f 01       	movw	r10, r30
   10d42:	da 82       	std	Y+2, r13	; 0x02
   10d44:	c9 82       	std	Y+1, r12	; 0x01
   10d46:	ce 01       	movw	r24, r28
   10d48:	01 96       	adiw	r24, 0x01	; 1
   10d4a:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   10d4e:	ff ef       	ldi	r31, 0xFF	; 255
   10d50:	cf 1a       	sub	r12, r31
   10d52:	df 0a       	sbc	r13, r31
   10d54:	8c 14       	cp	r8, r12
   10d56:	9d 04       	cpc	r9, r13
   10d58:	89 f7       	brne	.-30     	; 0x10d3c <_Z16Dummy_Data_Storev+0x33e>
   10d5a:	8b e1       	ldi	r24, 0x1B	; 27
   10d5c:	e8 0e       	add	r14, r24
   10d5e:	f1 1c       	adc	r15, r1
   10d60:	02 5e       	subi	r16, 0xE2	; 226
   10d62:	1f 4f       	sbci	r17, 0xFF	; 255
   10d64:	0c 31       	cpi	r16, 0x1C	; 28
   10d66:	eb e0       	ldi	r30, 0x0B	; 11
   10d68:	1e 07       	cpc	r17, r30
   10d6a:	b1 f6       	brne	.-84     	; 0x10d18 <_Z16Dummy_Data_Storev+0x31a>
   10d6c:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   10d70:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   10d74:	8e e1       	ldi	r24, 0x1E	; 30
   10d76:	9c e0       	ldi	r25, 0x0C	; 12
   10d78:	50 dd       	rcall	.-1376   	; 0x1081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>
   10d7a:	10 92 0e 16 	sts	0x160E, r1	; 0x80160e <_sRuble_Parameters+0xa9>
   10d7e:	6e e0       	ldi	r22, 0x0E	; 14
   10d80:	76 e1       	ldi	r23, 0x16	; 22
   10d82:	8e e1       	ldi	r24, 0x1E	; 30
   10d84:	9c e0       	ldi	r25, 0x0C	; 12
   10d86:	fc dc       	rcall	.-1544   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10d88:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   10d8c:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   10d90:	85 e0       	ldi	r24, 0x05	; 5
   10d92:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   10d96:	6c e8       	ldi	r22, 0x8C	; 140
   10d98:	75 e1       	ldi	r23, 0x15	; 21
   10d9a:	80 e6       	ldi	r24, 0x60	; 96
   10d9c:	94 e0       	ldi	r25, 0x04	; 4
   10d9e:	f0 dc       	rcall	.-1568   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10da0:	10 92 22 16 	sts	0x1622, r1	; 0x801622 <_sRuble_Parameters+0xbd>
   10da4:	62 e2       	ldi	r22, 0x22	; 34
   10da6:	76 e1       	ldi	r23, 0x16	; 22
   10da8:	89 e2       	ldi	r24, 0x29	; 41
   10daa:	9c e0       	ldi	r25, 0x0C	; 12
   10dac:	e9 dc       	rcall	.-1582   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10dae:	10 92 24 16 	sts	0x1624, r1	; 0x801624 <_sRuble_Parameters+0xbf>
   10db2:	64 e2       	ldi	r22, 0x24	; 36
   10db4:	76 e1       	ldi	r23, 0x16	; 22
   10db6:	80 e3       	ldi	r24, 0x30	; 48
   10db8:	9c e0       	ldi	r25, 0x0C	; 12
   10dba:	e2 dc       	rcall	.-1596   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10dbc:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   10dc0:	65 e2       	ldi	r22, 0x25	; 37
   10dc2:	76 e1       	ldi	r23, 0x16	; 22
   10dc4:	85 e3       	ldi	r24, 0x35	; 53
   10dc6:	9c e0       	ldi	r25, 0x0C	; 12
   10dc8:	db dc       	rcall	.-1610   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10dca:	0c e3       	ldi	r16, 0x3C	; 60
   10dcc:	16 e1       	ldi	r17, 0x16	; 22
   10dce:	f8 01       	movw	r30, r16
   10dd0:	11 92       	st	Z+, r1
   10dd2:	8f 01       	movw	r16, r30
   10dd4:	4e dd       	rcall	.-1380   	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   10dd6:	f6 e1       	ldi	r31, 0x16	; 22
   10dd8:	01 34       	cpi	r16, 0x41	; 65
   10dda:	1f 07       	cpc	r17, r31
   10ddc:	c1 f7       	brne	.-16     	; 0x10dce <_Z16Dummy_Data_Storev+0x3d0>
   10dde:	81 e0       	ldi	r24, 0x01	; 1
   10de0:	80 93 41 16 	sts	0x1641, r24	; 0x801641 <_sRuble_Parameters+0xdc>
   10de4:	61 e4       	ldi	r22, 0x41	; 65
   10de6:	76 e1       	ldi	r23, 0x16	; 22
   10de8:	83 e3       	ldi	r24, 0x33	; 51
   10dea:	9e e0       	ldi	r25, 0x0E	; 14
   10dec:	c9 dc       	rcall	.-1646   	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   10dee:	10 92 44 16 	sts	0x1644, r1	; 0x801644 <_sRuble_Parameters+0xdf>
   10df2:	10 92 45 16 	sts	0x1645, r1	; 0x801645 <_sRuble_Parameters+0xe0>
   10df6:	10 92 46 16 	sts	0x1646, r1	; 0x801646 <_sRuble_Parameters+0xe1>
   10dfa:	10 92 47 16 	sts	0x1647, r1	; 0x801647 <_sRuble_Parameters+0xe2>
   10dfe:	84 e4       	ldi	r24, 0x44	; 68
   10e00:	e8 2e       	mov	r14, r24
   10e02:	86 e1       	ldi	r24, 0x16	; 22
   10e04:	f8 2e       	mov	r15, r24
   10e06:	05 e3       	ldi	r16, 0x35	; 53
   10e08:	1e e0       	ldi	r17, 0x0E	; 14
   10e0a:	f7 01       	movw	r30, r14
   10e0c:	61 91       	ld	r22, Z+
   10e0e:	7f 01       	movw	r14, r30
   10e10:	1a 83       	std	Y+2, r17	; 0x02
   10e12:	09 83       	std	Y+1, r16	; 0x01
   10e14:	ce 01       	movw	r24, r28
   10e16:	01 96       	adiw	r24, 0x01	; 1
   10e18:	0e 94 e3 23 	call	0x47c6	; 0x47c6 <_ZN5EERef6updateEh>
   10e1c:	0f 5f       	subi	r16, 0xFF	; 255
   10e1e:	1f 4f       	sbci	r17, 0xFF	; 255
   10e20:	09 33       	cpi	r16, 0x39	; 57
   10e22:	fe e0       	ldi	r31, 0x0E	; 14
   10e24:	1f 07       	cpc	r17, r31
   10e26:	89 f7       	brne	.-30     	; 0x10e0a <_Z16Dummy_Data_Storev+0x40c>
   10e28:	06 ec       	ldi	r16, 0xC6	; 198
   10e2a:	1b e0       	ldi	r17, 0x0B	; 11
   10e2c:	f1 2c       	mov	r15, r1
   10e2e:	f8 01       	movw	r30, r16
   10e30:	11 86       	std	Z+9, r1	; 0x09
   10e32:	10 86       	std	Z+8, r1	; 0x08
   10e34:	10 82       	st	Z, r1
   10e36:	12 86       	std	Z+10, r1	; 0x0a
   10e38:	8f 2d       	mov	r24, r15
   10e3a:	0e 94 54 5b 	call	0xb6a8	; 0xb6a8 <_Z20Wireless_Pump_EEPROMh>
   10e3e:	f3 94       	inc	r15
   10e40:	05 5f       	subi	r16, 0xF5	; 245
   10e42:	1f 4f       	sbci	r17, 0xFF	; 255
   10e44:	f3 e0       	ldi	r31, 0x03	; 3
   10e46:	ff 12       	cpse	r15, r31
   10e48:	f2 cf       	rjmp	.-28     	; 0x10e2e <_Z16Dummy_Data_Storev+0x430>
   10e4a:	0f 90       	pop	r0
   10e4c:	0f 90       	pop	r0
   10e4e:	df 91       	pop	r29
   10e50:	cf 91       	pop	r28
   10e52:	1f 91       	pop	r17
   10e54:	0f 91       	pop	r16
   10e56:	ff 90       	pop	r15
   10e58:	ef 90       	pop	r14
   10e5a:	df 90       	pop	r13
   10e5c:	cf 90       	pop	r12
   10e5e:	bf 90       	pop	r11
   10e60:	af 90       	pop	r10
   10e62:	9f 90       	pop	r9
   10e64:	8f 90       	pop	r8
   10e66:	08 95       	ret

00010e68 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   10e68:	0f 93       	push	r16
   10e6a:	1f 93       	push	r17
   10e6c:	cf 93       	push	r28
   10e6e:	df 93       	push	r29
   10e70:	dc 01       	movw	r26, r24
   10e72:	12 96       	adiw	r26, 0x02	; 2
   10e74:	ed 91       	ld	r30, X+
   10e76:	fc 91       	ld	r31, X
   10e78:	13 97       	sbiw	r26, 0x03	; 3
   10e7a:	30 97       	sbiw	r30, 0x00	; 0
   10e7c:	a1 f0       	breq	.+40     	; 0x10ea6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10e7e:	61 15       	cp	r22, r1
   10e80:	71 05       	cpc	r23, r1
   10e82:	31 f0       	breq	.+12     	; 0x10e90 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x28>
   10e84:	01 90       	ld	r0, Z+
   10e86:	f0 81       	ld	r31, Z
   10e88:	e0 2d       	mov	r30, r0
   10e8a:	61 50       	subi	r22, 0x01	; 1
   10e8c:	71 09       	sbc	r23, r1
   10e8e:	f5 cf       	rjmp	.-22     	; 0x10e7a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x12>
   10e90:	82 81       	ldd	r24, Z+2	; 0x02
   10e92:	83 30       	cpi	r24, 0x03	; 3
   10e94:	08 f0       	brcs	.+2      	; 0x10e98 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x30>
   10e96:	44 c0       	rjmp	.+136    	; 0x10f20 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb8>
   10e98:	81 30       	cpi	r24, 0x01	; 1
   10e9a:	28 f0       	brcs	.+10     	; 0x10ea6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x3e>
   10e9c:	03 80       	ldd	r0, Z+3	; 0x03
   10e9e:	f4 81       	ldd	r31, Z+4	; 0x04
   10ea0:	e0 2d       	mov	r30, r0
   10ea2:	30 97       	sbiw	r30, 0x00	; 0
   10ea4:	21 f4       	brne	.+8      	; 0x10eae <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x46>
   10ea6:	60 e0       	ldi	r22, 0x00	; 0
   10ea8:	70 e0       	ldi	r23, 0x00	; 0
   10eaa:	cb 01       	movw	r24, r22
   10eac:	4f c0       	rjmp	.+158    	; 0x10f4c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10eae:	80 81       	ld	r24, Z
   10eb0:	84 37       	cpi	r24, 0x74	; 116
   10eb2:	71 f1       	breq	.+92     	; 0x10f10 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xa8>
   10eb4:	8b 32       	cpi	r24, 0x2B	; 43
   10eb6:	29 f0       	breq	.+10     	; 0x10ec2 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5a>
   10eb8:	8d 32       	cpi	r24, 0x2D	; 45
   10eba:	21 f4       	brne	.+8      	; 0x10ec4 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5c>
   10ebc:	31 96       	adiw	r30, 0x01	; 1
   10ebe:	d1 e0       	ldi	r29, 0x01	; 1
   10ec0:	02 c0       	rjmp	.+4      	; 0x10ec6 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x5e>
   10ec2:	31 96       	adiw	r30, 0x01	; 1
   10ec4:	d0 e0       	ldi	r29, 0x00	; 0
   10ec6:	20 e0       	ldi	r18, 0x00	; 0
   10ec8:	30 e0       	ldi	r19, 0x00	; 0
   10eca:	a9 01       	movw	r20, r18
   10ecc:	c1 91       	ld	r28, Z+
   10ece:	80 ed       	ldi	r24, 0xD0	; 208
   10ed0:	8c 0f       	add	r24, r28
   10ed2:	8a 30       	cpi	r24, 0x0A	; 10
   10ed4:	98 f4       	brcc	.+38     	; 0x10efc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x94>
   10ed6:	aa e0       	ldi	r26, 0x0A	; 10
   10ed8:	b0 e0       	ldi	r27, 0x00	; 0
   10eda:	0e 94 9a e7 	call	0x1cf34	; 0x1cf34 <__muluhisi3>
   10ede:	2c 2f       	mov	r18, r28
   10ee0:	30 e0       	ldi	r19, 0x00	; 0
   10ee2:	20 53       	subi	r18, 0x30	; 48
   10ee4:	31 09       	sbc	r19, r1
   10ee6:	89 01       	movw	r16, r18
   10ee8:	33 0f       	add	r19, r19
   10eea:	22 0b       	sbc	r18, r18
   10eec:	33 0b       	sbc	r19, r19
   10eee:	a9 01       	movw	r20, r18
   10ef0:	98 01       	movw	r18, r16
   10ef2:	26 0f       	add	r18, r22
   10ef4:	37 1f       	adc	r19, r23
   10ef6:	48 1f       	adc	r20, r24
   10ef8:	59 1f       	adc	r21, r25
   10efa:	e8 cf       	rjmp	.-48     	; 0x10ecc <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x64>
   10efc:	dd 23       	and	r29, r29
   10efe:	69 f0       	breq	.+26     	; 0x10f1a <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xb2>
   10f00:	66 27       	eor	r22, r22
   10f02:	77 27       	eor	r23, r23
   10f04:	cb 01       	movw	r24, r22
   10f06:	62 1b       	sub	r22, r18
   10f08:	73 0b       	sbc	r23, r19
   10f0a:	84 0b       	sbc	r24, r20
   10f0c:	95 0b       	sbc	r25, r21
   10f0e:	1e c0       	rjmp	.+60     	; 0x10f4c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f10:	61 e0       	ldi	r22, 0x01	; 1
   10f12:	70 e0       	ldi	r23, 0x00	; 0
   10f14:	80 e0       	ldi	r24, 0x00	; 0
   10f16:	90 e0       	ldi	r25, 0x00	; 0
   10f18:	19 c0       	rjmp	.+50     	; 0x10f4c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f1a:	ca 01       	movw	r24, r20
   10f1c:	b9 01       	movw	r22, r18
   10f1e:	16 c0       	rjmp	.+44     	; 0x10f4c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f20:	85 30       	cpi	r24, 0x05	; 5
   10f22:	28 f4       	brcc	.+10     	; 0x10f2e <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xc6>
   10f24:	63 81       	ldd	r22, Z+3	; 0x03
   10f26:	74 81       	ldd	r23, Z+4	; 0x04
   10f28:	85 81       	ldd	r24, Z+5	; 0x05
   10f2a:	96 81       	ldd	r25, Z+6	; 0x06
   10f2c:	0f c0       	rjmp	.+30     	; 0x10f4c <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xe4>
   10f2e:	85 30       	cpi	r24, 0x05	; 5
   10f30:	39 f4       	brne	.+14     	; 0x10f40 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0xd8>
   10f32:	83 81       	ldd	r24, Z+3	; 0x03
   10f34:	94 81       	ldd	r25, Z+4	; 0x04
   10f36:	a5 81       	ldd	r26, Z+5	; 0x05
   10f38:	b6 81       	ldd	r27, Z+6	; 0x06
   10f3a:	9c 01       	movw	r18, r24
   10f3c:	ad 01       	movw	r20, r26
   10f3e:	e0 cf       	rjmp	.-64     	; 0x10f00 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj+0x98>
   10f40:	63 81       	ldd	r22, Z+3	; 0x03
   10f42:	74 81       	ldd	r23, Z+4	; 0x04
   10f44:	85 81       	ldd	r24, Z+5	; 0x05
   10f46:	96 81       	ldd	r25, Z+6	; 0x06
   10f48:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   10f4c:	df 91       	pop	r29
   10f4e:	cf 91       	pop	r28
   10f50:	1f 91       	pop	r17
   10f52:	0f 91       	pop	r16
   10f54:	08 95       	ret

00010f56 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>:
   10f56:	fc 01       	movw	r30, r24
   10f58:	a0 81       	ld	r26, Z
   10f5a:	b1 81       	ldd	r27, Z+1	; 0x01
   10f5c:	8c 91       	ld	r24, X
   10f5e:	8d 30       	cpi	r24, 0x0D	; 13
   10f60:	51 f0       	breq	.+20     	; 0x10f76 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10f62:	20 f4       	brcc	.+8      	; 0x10f6c <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x16>
   10f64:	89 50       	subi	r24, 0x09	; 9
   10f66:	82 30       	cpi	r24, 0x02	; 2
   10f68:	b8 f5       	brcc	.+110    	; 0x10fd8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   10f6a:	05 c0       	rjmp	.+10     	; 0x10f76 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10f6c:	80 32       	cpi	r24, 0x20	; 32
   10f6e:	19 f0       	breq	.+6      	; 0x10f76 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x20>
   10f70:	8f 32       	cpi	r24, 0x2F	; 47
   10f72:	19 f0       	breq	.+6      	; 0x10f7a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x24>
   10f74:	08 95       	ret
   10f76:	11 96       	adiw	r26, 0x01	; 1
   10f78:	2c c0       	rjmp	.+88     	; 0x10fd2 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   10f7a:	11 96       	adiw	r26, 0x01	; 1
   10f7c:	8c 91       	ld	r24, X
   10f7e:	11 97       	sbiw	r26, 0x01	; 1
   10f80:	8a 32       	cpi	r24, 0x2A	; 42
   10f82:	19 f0       	breq	.+6      	; 0x10f8a <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x34>
   10f84:	8f 32       	cpi	r24, 0x2F	; 47
   10f86:	d1 f0       	breq	.+52     	; 0x10fbc <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x66>
   10f88:	08 95       	ret
   10f8a:	11 96       	adiw	r26, 0x01	; 1
   10f8c:	b1 83       	std	Z+1, r27	; 0x01
   10f8e:	a0 83       	st	Z, r26
   10f90:	a0 81       	ld	r26, Z
   10f92:	b1 81       	ldd	r27, Z+1	; 0x01
   10f94:	cd 01       	movw	r24, r26
   10f96:	01 96       	adiw	r24, 0x01	; 1
   10f98:	91 83       	std	Z+1, r25	; 0x01
   10f9a:	80 83       	st	Z, r24
   10f9c:	11 96       	adiw	r26, 0x01	; 1
   10f9e:	8c 91       	ld	r24, X
   10fa0:	11 97       	sbiw	r26, 0x01	; 1
   10fa2:	88 23       	and	r24, r24
   10fa4:	c9 f0       	breq	.+50     	; 0x10fd8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   10fa6:	8a 32       	cpi	r24, 0x2A	; 42
   10fa8:	99 f7       	brne	.-26     	; 0x10f90 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   10faa:	12 96       	adiw	r26, 0x02	; 2
   10fac:	8c 91       	ld	r24, X
   10fae:	12 97       	sbiw	r26, 0x02	; 2
   10fb0:	8f 32       	cpi	r24, 0x2F	; 47
   10fb2:	71 f7       	brne	.-36     	; 0x10f90 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x3a>
   10fb4:	13 96       	adiw	r26, 0x03	; 3
   10fb6:	0d c0       	rjmp	.+26     	; 0x10fd2 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x7c>
   10fb8:	8a 30       	cpi	r24, 0x0A	; 10
   10fba:	71 f2       	breq	.-100    	; 0x10f58 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   10fbc:	a0 81       	ld	r26, Z
   10fbe:	b1 81       	ldd	r27, Z+1	; 0x01
   10fc0:	cd 01       	movw	r24, r26
   10fc2:	01 96       	adiw	r24, 0x01	; 1
   10fc4:	91 83       	std	Z+1, r25	; 0x01
   10fc6:	80 83       	st	Z, r24
   10fc8:	11 96       	adiw	r26, 0x01	; 1
   10fca:	8c 91       	ld	r24, X
   10fcc:	81 11       	cpse	r24, r1
   10fce:	f4 cf       	rjmp	.-24     	; 0x10fb8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x62>
   10fd0:	03 c0       	rjmp	.+6      	; 0x10fd8 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x82>
   10fd2:	b1 83       	std	Z+1, r27	; 0x01
   10fd4:	a0 83       	st	Z, r26
   10fd6:	c0 cf       	rjmp	.-128    	; 0x10f58 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_+0x2>
   10fd8:	08 95       	ret

00010fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>:
   10fda:	1f 93       	push	r17
   10fdc:	cf 93       	push	r28
   10fde:	df 93       	push	r29
   10fe0:	ec 01       	movw	r28, r24
   10fe2:	16 2f       	mov	r17, r22
   10fe4:	b8 df       	rcall	.-144    	; 0x10f56 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   10fe6:	e8 81       	ld	r30, Y
   10fe8:	f9 81       	ldd	r31, Y+1	; 0x01
   10fea:	80 81       	ld	r24, Z
   10fec:	18 13       	cpse	r17, r24
   10fee:	05 c0       	rjmp	.+10     	; 0x10ffa <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x20>
   10ff0:	31 96       	adiw	r30, 0x01	; 1
   10ff2:	f9 83       	std	Y+1, r31	; 0x01
   10ff4:	e8 83       	st	Y, r30
   10ff6:	81 e0       	ldi	r24, 0x01	; 1
   10ff8:	01 c0       	rjmp	.+2      	; 0x10ffc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c+0x22>
   10ffa:	80 e0       	ldi	r24, 0x00	; 0
   10ffc:	df 91       	pop	r29
   10ffe:	cf 91       	pop	r28
   11000:	1f 91       	pop	r17
   11002:	08 95       	ret

00011004 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>:
   11004:	0f 93       	push	r16
   11006:	1f 93       	push	r17
   11008:	cf 93       	push	r28
   1100a:	df 93       	push	r29
   1100c:	ec 01       	movw	r28, r24
   1100e:	0c 81       	ldd	r16, Y+4	; 0x04
   11010:	1d 81       	ldd	r17, Y+5	; 0x05
   11012:	02 96       	adiw	r24, 0x02	; 2
   11014:	a0 df       	rcall	.-192    	; 0x10f56 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   11016:	ea 81       	ldd	r30, Y+2	; 0x02
   11018:	fb 81       	ldd	r31, Y+3	; 0x03
   1101a:	80 81       	ld	r24, Z
   1101c:	87 32       	cpi	r24, 0x27	; 39
   1101e:	31 f1       	breq	.+76     	; 0x1106c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11020:	82 32       	cpi	r24, 0x22	; 34
   11022:	21 f1       	breq	.+72     	; 0x1106c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x68>
   11024:	90 ed       	ldi	r25, 0xD0	; 208
   11026:	98 0f       	add	r25, r24
   11028:	9a 30       	cpi	r25, 0x0A	; 10
   1102a:	70 f0       	brcs	.+28     	; 0x11048 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1102c:	91 ea       	ldi	r25, 0xA1	; 161
   1102e:	98 0f       	add	r25, r24
   11030:	9c 31       	cpi	r25, 0x1C	; 28
   11032:	50 f0       	brcs	.+20     	; 0x11048 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11034:	9f eb       	ldi	r25, 0xBF	; 191
   11036:	98 0f       	add	r25, r24
   11038:	9a 31       	cpi	r25, 0x1A	; 26
   1103a:	30 f0       	brcs	.+12     	; 0x11048 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   1103c:	8b 32       	cpi	r24, 0x2B	; 43
   1103e:	21 f0       	breq	.+8      	; 0x11048 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x44>
   11040:	93 ed       	ldi	r25, 0xD3	; 211
   11042:	98 0f       	add	r25, r24
   11044:	92 30       	cpi	r25, 0x02	; 2
   11046:	f0 f5       	brcc	.+124    	; 0x110c4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   11048:	2a 81       	ldd	r18, Y+2	; 0x02
   1104a:	3b 81       	ldd	r19, Y+3	; 0x03
   1104c:	2f 5f       	subi	r18, 0xFF	; 255
   1104e:	3f 4f       	sbci	r19, 0xFF	; 255
   11050:	3b 83       	std	Y+3, r19	; 0x03
   11052:	2a 83       	std	Y+2, r18	; 0x02
   11054:	ec 81       	ldd	r30, Y+4	; 0x04
   11056:	fd 81       	ldd	r31, Y+5	; 0x05
   11058:	9f 01       	movw	r18, r30
   1105a:	2f 5f       	subi	r18, 0xFF	; 255
   1105c:	3f 4f       	sbci	r19, 0xFF	; 255
   1105e:	3d 83       	std	Y+5, r19	; 0x05
   11060:	2c 83       	std	Y+4, r18	; 0x04
   11062:	80 83       	st	Z, r24
   11064:	ea 81       	ldd	r30, Y+2	; 0x02
   11066:	fb 81       	ldd	r31, Y+3	; 0x03
   11068:	80 81       	ld	r24, Z
   1106a:	dc cf       	rjmp	.-72     	; 0x11024 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x20>
   1106c:	31 96       	adiw	r30, 0x01	; 1
   1106e:	fb 83       	std	Y+3, r31	; 0x03
   11070:	ea 83       	std	Y+2, r30	; 0x02
   11072:	ea 81       	ldd	r30, Y+2	; 0x02
   11074:	fb 81       	ldd	r31, Y+3	; 0x03
   11076:	90 81       	ld	r25, Z
   11078:	99 23       	and	r25, r25
   1107a:	21 f1       	breq	.+72     	; 0x110c4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1107c:	9f 01       	movw	r18, r30
   1107e:	2f 5f       	subi	r18, 0xFF	; 255
   11080:	3f 4f       	sbci	r19, 0xFF	; 255
   11082:	3b 83       	std	Y+3, r19	; 0x03
   11084:	2a 83       	std	Y+2, r18	; 0x02
   11086:	98 17       	cp	r25, r24
   11088:	e9 f0       	breq	.+58     	; 0x110c4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   1108a:	9c 35       	cpi	r25, 0x5C	; 92
   1108c:	91 f4       	brne	.+36     	; 0x110b2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xae>
   1108e:	91 81       	ldd	r25, Z+1	; 0x01
   11090:	aa e5       	ldi	r26, 0x5A	; 90
   11092:	b7 e0       	ldi	r27, 0x07	; 7
   11094:	2c 91       	ld	r18, X
   11096:	22 23       	and	r18, r18
   11098:	39 f0       	breq	.+14     	; 0x110a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   1109a:	92 13       	cpse	r25, r18
   1109c:	03 c0       	rjmp	.+6      	; 0x110a4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa0>
   1109e:	11 96       	adiw	r26, 0x01	; 1
   110a0:	9c 91       	ld	r25, X
   110a2:	02 c0       	rjmp	.+4      	; 0x110a8 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xa4>
   110a4:	12 96       	adiw	r26, 0x02	; 2
   110a6:	f6 cf       	rjmp	.-20     	; 0x11094 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x90>
   110a8:	99 23       	and	r25, r25
   110aa:	61 f0       	breq	.+24     	; 0x110c4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0xc0>
   110ac:	32 96       	adiw	r30, 0x02	; 2
   110ae:	fb 83       	std	Y+3, r31	; 0x03
   110b0:	ea 83       	std	Y+2, r30	; 0x02
   110b2:	ec 81       	ldd	r30, Y+4	; 0x04
   110b4:	fd 81       	ldd	r31, Y+5	; 0x05
   110b6:	9f 01       	movw	r18, r30
   110b8:	2f 5f       	subi	r18, 0xFF	; 255
   110ba:	3f 4f       	sbci	r19, 0xFF	; 255
   110bc:	3d 83       	std	Y+5, r19	; 0x05
   110be:	2c 83       	std	Y+4, r18	; 0x04
   110c0:	90 83       	st	Z, r25
   110c2:	d7 cf       	rjmp	.-82     	; 0x11072 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv+0x6e>
   110c4:	ec 81       	ldd	r30, Y+4	; 0x04
   110c6:	fd 81       	ldd	r31, Y+5	; 0x05
   110c8:	cf 01       	movw	r24, r30
   110ca:	01 96       	adiw	r24, 0x01	; 1
   110cc:	9d 83       	std	Y+5, r25	; 0x05
   110ce:	8c 83       	std	Y+4, r24	; 0x04
   110d0:	10 82       	st	Z, r1
   110d2:	c8 01       	movw	r24, r16
   110d4:	df 91       	pop	r29
   110d6:	cf 91       	pop	r28
   110d8:	1f 91       	pop	r17
   110da:	0f 91       	pop	r16
   110dc:	08 95       	ret

000110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   110de:	0f 93       	push	r16
   110e0:	1f 93       	push	r17
   110e2:	cf 93       	push	r28
   110e4:	df 93       	push	r29
   110e6:	8b 01       	movw	r16, r22
   110e8:	fc 01       	movw	r30, r24
   110ea:	c2 81       	ldd	r28, Z+2	; 0x02
   110ec:	d3 81       	ldd	r29, Z+3	; 0x03
   110ee:	20 97       	sbiw	r28, 0x00	; 0
   110f0:	a1 f0       	breq	.+40     	; 0x1111a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   110f2:	8a 81       	ldd	r24, Y+2	; 0x02
   110f4:	9b 81       	ldd	r25, Y+3	; 0x03
   110f6:	01 15       	cp	r16, r1
   110f8:	11 05       	cpc	r17, r1
   110fa:	11 f0       	breq	.+4      	; 0x11100 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x22>
   110fc:	00 97       	sbiw	r24, 0x00	; 0
   110fe:	21 f4       	brne	.+8      	; 0x11108 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2a>
   11100:	80 17       	cp	r24, r16
   11102:	91 07       	cpc	r25, r17
   11104:	31 f4       	brne	.+12     	; 0x11112 <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x34>
   11106:	09 c0       	rjmp	.+18     	; 0x1111a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11108:	b8 01       	movw	r22, r16
   1110a:	0e 94 7a e9 	call	0x1d2f4	; 0x1d2f4 <strcmp_P>
   1110e:	89 2b       	or	r24, r25
   11110:	21 f0       	breq	.+8      	; 0x1111a <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3c>
   11112:	09 90       	ld	r0, Y+
   11114:	d8 81       	ld	r29, Y
   11116:	c0 2d       	mov	r28, r0
   11118:	ea cf       	rjmp	.-44     	; 0x110ee <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   1111a:	ce 01       	movw	r24, r28
   1111c:	df 91       	pop	r29
   1111e:	cf 91       	pop	r28
   11120:	1f 91       	pop	r17
   11122:	0f 91       	pop	r16
   11124:	08 95       	ret

00011126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>:
   11126:	cf 93       	push	r28
   11128:	df 93       	push	r29
   1112a:	ec 01       	movw	r28, r24
   1112c:	68 81       	ld	r22, Y
   1112e:	79 81       	ldd	r23, Y+1	; 0x01
   11130:	89 e0       	ldi	r24, 0x09	; 9
   11132:	90 e0       	ldi	r25, 0x00	; 0
   11134:	de da       	rcall	.-2628   	; 0x106f2 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   11136:	00 97       	sbiw	r24, 0x00	; 0
   11138:	21 f0       	breq	.+8      	; 0x11142 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x1c>
   1113a:	fc 01       	movw	r30, r24
   1113c:	11 82       	std	Z+1, r1	; 0x01
   1113e:	10 82       	st	Z, r1
   11140:	14 82       	std	Z+4, r1	; 0x04
   11142:	ea 81       	ldd	r30, Y+2	; 0x02
   11144:	fb 81       	ldd	r31, Y+3	; 0x03
   11146:	30 97       	sbiw	r30, 0x00	; 0
   11148:	51 f0       	breq	.+20     	; 0x1115e <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x38>
   1114a:	20 81       	ld	r18, Z
   1114c:	31 81       	ldd	r19, Z+1	; 0x01
   1114e:	21 15       	cp	r18, r1
   11150:	31 05       	cpc	r19, r1
   11152:	11 f0       	breq	.+4      	; 0x11158 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x32>
   11154:	f9 01       	movw	r30, r18
   11156:	f9 cf       	rjmp	.-14     	; 0x1114a <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x24>
   11158:	91 83       	std	Z+1, r25	; 0x01
   1115a:	80 83       	st	Z, r24
   1115c:	02 c0       	rjmp	.+4      	; 0x11162 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv+0x3c>
   1115e:	9b 83       	std	Y+3, r25	; 0x03
   11160:	8a 83       	std	Y+2, r24	; 0x02
   11162:	df 91       	pop	r29
   11164:	cf 91       	pop	r28
   11166:	08 95       	ret

00011168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>:
   11168:	cf 92       	push	r12
   1116a:	df 92       	push	r13
   1116c:	ef 92       	push	r14
   1116e:	ff 92       	push	r15
   11170:	0f 93       	push	r16
   11172:	1f 93       	push	r17
   11174:	cf 93       	push	r28
   11176:	df 93       	push	r29
   11178:	41 15       	cp	r20, r1
   1117a:	51 05       	cpc	r21, r1
   1117c:	e1 f0       	breq	.+56     	; 0x111b6 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x4e>
   1117e:	ea 01       	movw	r28, r20
   11180:	8b 01       	movw	r16, r22
   11182:	7c 01       	movw	r14, r24
   11184:	ca 01       	movw	r24, r20
   11186:	0e 94 83 e9 	call	0x1d306	; 0x1d306 <__strlen_P>
   1118a:	01 96       	adiw	r24, 0x01	; 1
   1118c:	6c 01       	movw	r12, r24
   1118e:	d7 01       	movw	r26, r14
   11190:	ed 91       	ld	r30, X+
   11192:	fc 91       	ld	r31, X
   11194:	01 90       	ld	r0, Z+
   11196:	f0 81       	ld	r31, Z
   11198:	e0 2d       	mov	r30, r0
   1119a:	bc 01       	movw	r22, r24
   1119c:	c7 01       	movw	r24, r14
   1119e:	19 95       	eicall
   111a0:	7c 01       	movw	r14, r24
   111a2:	00 97       	sbiw	r24, 0x00	; 0
   111a4:	69 f0       	breq	.+26     	; 0x111c0 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x58>
   111a6:	a6 01       	movw	r20, r12
   111a8:	be 01       	movw	r22, r28
   111aa:	0e 94 71 e9 	call	0x1d2e2	; 0x1d2e2 <memcpy_P>
   111ae:	f8 01       	movw	r30, r16
   111b0:	f1 82       	std	Z+1, r15	; 0x01
   111b2:	e0 82       	st	Z, r14
   111b4:	03 c0       	rjmp	.+6      	; 0x111bc <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x54>
   111b6:	db 01       	movw	r26, r22
   111b8:	1d 92       	st	X+, r1
   111ba:	1c 92       	st	X, r1
   111bc:	81 e0       	ldi	r24, 0x01	; 1
   111be:	01 c0       	rjmp	.+2      	; 0x111c2 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_+0x5a>
   111c0:	80 e0       	ldi	r24, 0x00	; 0
   111c2:	df 91       	pop	r29
   111c4:	cf 91       	pop	r28
   111c6:	1f 91       	pop	r17
   111c8:	0f 91       	pop	r16
   111ca:	ff 90       	pop	r15
   111cc:	ef 90       	pop	r14
   111ce:	df 90       	pop	r13
   111d0:	cf 90       	pop	r12
   111d2:	08 95       	ret

000111d4 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>:
   111d4:	cf 92       	push	r12
   111d6:	df 92       	push	r13
   111d8:	ef 92       	push	r14
   111da:	ff 92       	push	r15
   111dc:	0f 93       	push	r16
   111de:	1f 93       	push	r17
   111e0:	cf 93       	push	r28
   111e2:	df 93       	push	r29
   111e4:	61 15       	cp	r22, r1
   111e6:	71 05       	cpc	r23, r1
   111e8:	11 f4       	brne	.+4      	; 0x111ee <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   111ea:	80 e0       	ldi	r24, 0x00	; 0
   111ec:	22 c0       	rjmp	.+68     	; 0x11232 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   111ee:	6a 01       	movw	r12, r20
   111f0:	7b 01       	movw	r14, r22
   111f2:	8c 01       	movw	r16, r24
   111f4:	74 df       	rcall	.-280    	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   111f6:	ec 01       	movw	r28, r24
   111f8:	89 2b       	or	r24, r25
   111fa:	79 f4       	brne	.+30     	; 0x1121a <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x46>
   111fc:	c8 01       	movw	r24, r16
   111fe:	93 df       	rcall	.-218    	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11200:	ec 01       	movw	r28, r24
   11202:	00 97       	sbiw	r24, 0x00	; 0
   11204:	91 f3       	breq	.-28     	; 0x111ea <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11206:	a7 01       	movw	r20, r14
   11208:	bc 01       	movw	r22, r24
   1120a:	6e 5f       	subi	r22, 0xFE	; 254
   1120c:	7f 4f       	sbci	r23, 0xFF	; 255
   1120e:	f8 01       	movw	r30, r16
   11210:	80 81       	ld	r24, Z
   11212:	91 81       	ldd	r25, Z+1	; 0x01
   11214:	a9 df       	rcall	.-174    	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11216:	88 23       	and	r24, r24
   11218:	41 f3       	breq	.-48     	; 0x111ea <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1121a:	f6 01       	movw	r30, r12
   1121c:	80 81       	ld	r24, Z
   1121e:	90 e0       	ldi	r25, 0x00	; 0
   11220:	a0 e0       	ldi	r26, 0x00	; 0
   11222:	b0 e0       	ldi	r27, 0x00	; 0
   11224:	23 e0       	ldi	r18, 0x03	; 3
   11226:	2c 83       	std	Y+4, r18	; 0x04
   11228:	8d 83       	std	Y+5, r24	; 0x05
   1122a:	9e 83       	std	Y+6, r25	; 0x06
   1122c:	af 83       	std	Y+7, r26	; 0x07
   1122e:	b8 87       	std	Y+8, r27	; 0x08
   11230:	81 e0       	ldi	r24, 0x01	; 1
   11232:	df 91       	pop	r29
   11234:	cf 91       	pop	r28
   11236:	1f 91       	pop	r17
   11238:	0f 91       	pop	r16
   1123a:	ff 90       	pop	r15
   1123c:	ef 90       	pop	r14
   1123e:	df 90       	pop	r13
   11240:	cf 90       	pop	r12
   11242:	08 95       	ret

00011244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>:
   11244:	cf 92       	push	r12
   11246:	df 92       	push	r13
   11248:	ef 92       	push	r14
   1124a:	ff 92       	push	r15
   1124c:	0f 93       	push	r16
   1124e:	1f 93       	push	r17
   11250:	cf 93       	push	r28
   11252:	df 93       	push	r29
   11254:	61 15       	cp	r22, r1
   11256:	71 05       	cpc	r23, r1
   11258:	11 f4       	brne	.+4      	; 0x1125e <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1125a:	80 e0       	ldi	r24, 0x00	; 0
   1125c:	22 c0       	rjmp	.+68     	; 0x112a2 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   1125e:	6a 01       	movw	r12, r20
   11260:	7b 01       	movw	r14, r22
   11262:	8c 01       	movw	r16, r24
   11264:	3c df       	rcall	.-392    	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11266:	ec 01       	movw	r28, r24
   11268:	89 2b       	or	r24, r25
   1126a:	79 f4       	brne	.+30     	; 0x1128a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1126c:	c8 01       	movw	r24, r16
   1126e:	5b df       	rcall	.-330    	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11270:	ec 01       	movw	r28, r24
   11272:	00 97       	sbiw	r24, 0x00	; 0
   11274:	91 f3       	breq	.-28     	; 0x1125a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11276:	a7 01       	movw	r20, r14
   11278:	bc 01       	movw	r22, r24
   1127a:	6e 5f       	subi	r22, 0xFE	; 254
   1127c:	7f 4f       	sbci	r23, 0xFF	; 255
   1127e:	f8 01       	movw	r30, r16
   11280:	80 81       	ld	r24, Z
   11282:	91 81       	ldd	r25, Z+1	; 0x01
   11284:	71 df       	rcall	.-286    	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11286:	88 23       	and	r24, r24
   11288:	41 f3       	breq	.-48     	; 0x1125a <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1128a:	f6 01       	movw	r30, r12
   1128c:	80 81       	ld	r24, Z
   1128e:	91 81       	ldd	r25, Z+1	; 0x01
   11290:	a0 e0       	ldi	r26, 0x00	; 0
   11292:	b0 e0       	ldi	r27, 0x00	; 0
   11294:	24 e0       	ldi	r18, 0x04	; 4
   11296:	2c 83       	std	Y+4, r18	; 0x04
   11298:	8d 83       	std	Y+5, r24	; 0x05
   1129a:	9e 83       	std	Y+6, r25	; 0x06
   1129c:	af 83       	std	Y+7, r26	; 0x07
   1129e:	b8 87       	std	Y+8, r27	; 0x08
   112a0:	81 e0       	ldi	r24, 0x01	; 1
   112a2:	df 91       	pop	r29
   112a4:	cf 91       	pop	r28
   112a6:	1f 91       	pop	r17
   112a8:	0f 91       	pop	r16
   112aa:	ff 90       	pop	r15
   112ac:	ef 90       	pop	r14
   112ae:	df 90       	pop	r13
   112b0:	cf 90       	pop	r12
   112b2:	08 95       	ret

000112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>:
   112b4:	cf 92       	push	r12
   112b6:	df 92       	push	r13
   112b8:	ef 92       	push	r14
   112ba:	ff 92       	push	r15
   112bc:	0f 93       	push	r16
   112be:	1f 93       	push	r17
   112c0:	cf 93       	push	r28
   112c2:	df 93       	push	r29
   112c4:	61 15       	cp	r22, r1
   112c6:	71 05       	cpc	r23, r1
   112c8:	21 f1       	breq	.+72     	; 0x11312 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   112ca:	6a 01       	movw	r12, r20
   112cc:	7b 01       	movw	r14, r22
   112ce:	8c 01       	movw	r16, r24
   112d0:	06 df       	rcall	.-500    	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   112d2:	ec 01       	movw	r28, r24
   112d4:	89 2b       	or	r24, r25
   112d6:	79 f4       	brne	.+30     	; 0x112f6 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x42>
   112d8:	c8 01       	movw	r24, r16
   112da:	25 df       	rcall	.-438    	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   112dc:	ec 01       	movw	r28, r24
   112de:	00 97       	sbiw	r24, 0x00	; 0
   112e0:	c1 f0       	breq	.+48     	; 0x11312 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   112e2:	a7 01       	movw	r20, r14
   112e4:	bc 01       	movw	r22, r24
   112e6:	6e 5f       	subi	r22, 0xFE	; 254
   112e8:	7f 4f       	sbci	r23, 0xFF	; 255
   112ea:	f8 01       	movw	r30, r16
   112ec:	80 81       	ld	r24, Z
   112ee:	91 81       	ldd	r25, Z+1	; 0x01
   112f0:	3b df       	rcall	.-394    	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   112f2:	88 23       	and	r24, r24
   112f4:	71 f0       	breq	.+28     	; 0x11312 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   112f6:	f6 01       	movw	r30, r12
   112f8:	60 81       	ld	r22, Z
   112fa:	71 81       	ldd	r23, Z+1	; 0x01
   112fc:	ce 01       	movw	r24, r28
   112fe:	04 96       	adiw	r24, 0x04	; 4
   11300:	df 91       	pop	r29
   11302:	cf 91       	pop	r28
   11304:	1f 91       	pop	r17
   11306:	0f 91       	pop	r16
   11308:	ff 90       	pop	r15
   1130a:	ef 90       	pop	r14
   1130c:	df 90       	pop	r13
   1130e:	cf 90       	pop	r12
   11310:	c2 c9       	rjmp	.-3196   	; 0x10696 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   11312:	80 e0       	ldi	r24, 0x00	; 0
   11314:	df 91       	pop	r29
   11316:	cf 91       	pop	r28
   11318:	1f 91       	pop	r17
   1131a:	0f 91       	pop	r16
   1131c:	ff 90       	pop	r15
   1131e:	ef 90       	pop	r14
   11320:	df 90       	pop	r13
   11322:	cf 90       	pop	r12
   11324:	08 95       	ret

00011326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>:
   11326:	cf 92       	push	r12
   11328:	df 92       	push	r13
   1132a:	ef 92       	push	r14
   1132c:	ff 92       	push	r15
   1132e:	0f 93       	push	r16
   11330:	1f 93       	push	r17
   11332:	cf 93       	push	r28
   11334:	df 93       	push	r29
   11336:	61 15       	cp	r22, r1
   11338:	71 05       	cpc	r23, r1
   1133a:	11 f4       	brne	.+4      	; 0x11340 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x1a>
   1133c:	80 e0       	ldi	r24, 0x00	; 0
   1133e:	22 c0       	rjmp	.+68     	; 0x11384 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x5e>
   11340:	6a 01       	movw	r12, r20
   11342:	7b 01       	movw	r14, r22
   11344:	8c 01       	movw	r16, r24
   11346:	cb de       	rcall	.-618    	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11348:	ec 01       	movw	r28, r24
   1134a:	89 2b       	or	r24, r25
   1134c:	79 f4       	brne	.+30     	; 0x1136c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x46>
   1134e:	c8 01       	movw	r24, r16
   11350:	ea de       	rcall	.-556    	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11352:	ec 01       	movw	r28, r24
   11354:	00 97       	sbiw	r24, 0x00	; 0
   11356:	91 f3       	breq	.-28     	; 0x1133c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   11358:	a7 01       	movw	r20, r14
   1135a:	bc 01       	movw	r22, r24
   1135c:	6e 5f       	subi	r22, 0xFE	; 254
   1135e:	7f 4f       	sbci	r23, 0xFF	; 255
   11360:	f8 01       	movw	r30, r16
   11362:	80 81       	ld	r24, Z
   11364:	91 81       	ldd	r25, Z+1	; 0x01
   11366:	00 df       	rcall	.-512    	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   11368:	88 23       	and	r24, r24
   1136a:	41 f3       	breq	.-48     	; 0x1133c <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_+0x16>
   1136c:	f6 01       	movw	r30, r12
   1136e:	80 81       	ld	r24, Z
   11370:	90 e0       	ldi	r25, 0x00	; 0
   11372:	a0 e0       	ldi	r26, 0x00	; 0
   11374:	b0 e0       	ldi	r27, 0x00	; 0
   11376:	24 e0       	ldi	r18, 0x04	; 4
   11378:	2c 83       	std	Y+4, r18	; 0x04
   1137a:	8d 83       	std	Y+5, r24	; 0x05
   1137c:	9e 83       	std	Y+6, r25	; 0x06
   1137e:	af 83       	std	Y+7, r26	; 0x07
   11380:	b8 87       	std	Y+8, r27	; 0x08
   11382:	81 e0       	ldi	r24, 0x01	; 1
   11384:	df 91       	pop	r29
   11386:	cf 91       	pop	r28
   11388:	1f 91       	pop	r17
   1138a:	0f 91       	pop	r16
   1138c:	ff 90       	pop	r15
   1138e:	ef 90       	pop	r14
   11390:	df 90       	pop	r13
   11392:	cf 90       	pop	r12
   11394:	08 95       	ret

00011396 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>:
   11396:	0f 93       	push	r16
   11398:	1f 93       	push	r17
   1139a:	cf 93       	push	r28
   1139c:	df 93       	push	r29
   1139e:	8b 01       	movw	r16, r22
   113a0:	fc 01       	movw	r30, r24
   113a2:	c2 81       	ldd	r28, Z+2	; 0x02
   113a4:	d3 81       	ldd	r29, Z+3	; 0x03
   113a6:	20 97       	sbiw	r28, 0x00	; 0
   113a8:	a9 f0       	breq	.+42     	; 0x113d4 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   113aa:	6a 81       	ldd	r22, Y+2	; 0x02
   113ac:	7b 81       	ldd	r23, Y+3	; 0x03
   113ae:	01 15       	cp	r16, r1
   113b0:	11 05       	cpc	r17, r1
   113b2:	19 f0       	breq	.+6      	; 0x113ba <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x24>
   113b4:	61 15       	cp	r22, r1
   113b6:	71 05       	cpc	r23, r1
   113b8:	21 f4       	brne	.+8      	; 0x113c2 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x2c>
   113ba:	60 17       	cp	r22, r16
   113bc:	71 07       	cpc	r23, r17
   113be:	31 f4       	brne	.+12     	; 0x113cc <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x36>
   113c0:	09 c0       	rjmp	.+18     	; 0x113d4 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   113c2:	c8 01       	movw	r24, r16
   113c4:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   113c8:	89 2b       	or	r24, r25
   113ca:	21 f0       	breq	.+8      	; 0x113d4 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x3e>
   113cc:	09 90       	ld	r0, Y+
   113ce:	d8 81       	ld	r29, Y
   113d0:	c0 2d       	mov	r28, r0
   113d2:	e9 cf       	rjmp	.-46     	; 0x113a6 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_+0x10>
   113d4:	ce 01       	movw	r24, r28
   113d6:	df 91       	pop	r29
   113d8:	cf 91       	pop	r28
   113da:	1f 91       	pop	r17
   113dc:	0f 91       	pop	r16
   113de:	08 95       	ret

000113e0 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>:
   113e0:	ef 92       	push	r14
   113e2:	ff 92       	push	r15
   113e4:	0f 93       	push	r16
   113e6:	1f 93       	push	r17
   113e8:	cf 93       	push	r28
   113ea:	df 93       	push	r29
   113ec:	61 15       	cp	r22, r1
   113ee:	71 05       	cpc	r23, r1
   113f0:	c1 f0       	breq	.+48     	; 0x11422 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   113f2:	7a 01       	movw	r14, r20
   113f4:	eb 01       	movw	r28, r22
   113f6:	8c 01       	movw	r16, r24
   113f8:	ce df       	rcall	.-100    	; 0x11396 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   113fa:	00 97       	sbiw	r24, 0x00	; 0
   113fc:	39 f4       	brne	.+14     	; 0x1140c <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x2c>
   113fe:	c8 01       	movw	r24, r16
   11400:	92 de       	rcall	.-732    	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   11402:	00 97       	sbiw	r24, 0x00	; 0
   11404:	71 f0       	breq	.+28     	; 0x11422 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_+0x42>
   11406:	fc 01       	movw	r30, r24
   11408:	d3 83       	std	Z+3, r29	; 0x03
   1140a:	c2 83       	std	Z+2, r28	; 0x02
   1140c:	f7 01       	movw	r30, r14
   1140e:	60 81       	ld	r22, Z
   11410:	71 81       	ldd	r23, Z+1	; 0x01
   11412:	04 96       	adiw	r24, 0x04	; 4
   11414:	df 91       	pop	r29
   11416:	cf 91       	pop	r28
   11418:	1f 91       	pop	r17
   1141a:	0f 91       	pop	r16
   1141c:	ff 90       	pop	r15
   1141e:	ef 90       	pop	r14
   11420:	3a c9       	rjmp	.-3468   	; 0x10696 <_ZN11ArduinoJson9Internals10ValueSaverIRKivE4saveINS_11JsonVariantEEEbPNS_10JsonBufferERT_S3_.isra.26>
   11422:	80 e0       	ldi	r24, 0x00	; 0
   11424:	df 91       	pop	r29
   11426:	cf 91       	pop	r28
   11428:	1f 91       	pop	r17
   1142a:	0f 91       	pop	r16
   1142c:	ff 90       	pop	r15
   1142e:	ef 90       	pop	r14
   11430:	08 95       	ret

00011432 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>:
   11432:	cf 92       	push	r12
   11434:	df 92       	push	r13
   11436:	ef 92       	push	r14
   11438:	ff 92       	push	r15
   1143a:	0f 93       	push	r16
   1143c:	1f 93       	push	r17
   1143e:	cf 93       	push	r28
   11440:	df 93       	push	r29
   11442:	00 d0       	rcall	.+0      	; 0x11444 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x12>
   11444:	1f 92       	push	r1
   11446:	1f 92       	push	r1
   11448:	cd b7       	in	r28, 0x3d	; 61
   1144a:	de b7       	in	r29, 0x3e	; 62
   1144c:	7c 01       	movw	r14, r24
   1144e:	fc 01       	movw	r30, r24
   11450:	86 81       	ldd	r24, Z+6	; 0x06
   11452:	88 23       	and	r24, r24
   11454:	09 f4       	brne	.+2      	; 0x11458 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x26>
   11456:	67 c0       	rjmp	.+206    	; 0x11526 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11458:	81 50       	subi	r24, 0x01	; 1
   1145a:	f7 01       	movw	r30, r14
   1145c:	86 83       	std	Z+6, r24	; 0x06
   1145e:	00 81       	ld	r16, Z
   11460:	11 81       	ldd	r17, Z+1	; 0x01
   11462:	b8 01       	movw	r22, r16
   11464:	84 e0       	ldi	r24, 0x04	; 4
   11466:	90 e0       	ldi	r25, 0x00	; 0
   11468:	44 d9       	rcall	.-3448   	; 0x106f2 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   1146a:	00 97       	sbiw	r24, 0x00	; 0
   1146c:	09 f4       	brne	.+2      	; 0x11470 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x3e>
   1146e:	5d c0       	rjmp	.+186    	; 0x1152a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf8>
   11470:	fc 01       	movw	r30, r24
   11472:	11 83       	std	Z+1, r17	; 0x01
   11474:	00 83       	st	Z, r16
   11476:	13 82       	std	Z+3, r1	; 0x03
   11478:	12 82       	std	Z+2, r1	; 0x02
   1147a:	8c 01       	movw	r16, r24
   1147c:	67 01       	movw	r12, r14
   1147e:	f2 e0       	ldi	r31, 0x02	; 2
   11480:	cf 0e       	add	r12, r31
   11482:	d1 1c       	adc	r13, r1
   11484:	6b e5       	ldi	r22, 0x5B	; 91
   11486:	c6 01       	movw	r24, r12
   11488:	a8 dd       	rcall	.-1200   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1148a:	88 23       	and	r24, r24
   1148c:	09 f4       	brne	.+2      	; 0x11490 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x5e>
   1148e:	4b c0       	rjmp	.+150    	; 0x11526 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   11490:	6d e5       	ldi	r22, 0x5D	; 93
   11492:	c6 01       	movw	r24, r12
   11494:	a2 dd       	rcall	.-1212   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11496:	81 11       	cpse	r24, r1
   11498:	40 c0       	rjmp	.+128    	; 0x1151a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   1149a:	19 82       	std	Y+1, r1	; 0x01
   1149c:	be 01       	movw	r22, r28
   1149e:	6f 5f       	subi	r22, 0xFF	; 255
   114a0:	7f 4f       	sbci	r23, 0xFF	; 255
   114a2:	c7 01       	movw	r24, r14
   114a4:	52 d0       	rcall	.+164    	; 0x1154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   114a6:	88 23       	and	r24, r24
   114a8:	09 f4       	brne	.+2      	; 0x114ac <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x7a>
   114aa:	3d c0       	rjmp	.+122    	; 0x11526 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   114ac:	f8 01       	movw	r30, r16
   114ae:	60 81       	ld	r22, Z
   114b0:	71 81       	ldd	r23, Z+1	; 0x01
   114b2:	87 e0       	ldi	r24, 0x07	; 7
   114b4:	90 e0       	ldi	r25, 0x00	; 0
   114b6:	1d d9       	rcall	.-3526   	; 0x106f2 <_ZN11ArduinoJson9Internals19JsonBufferAllocatednwEjPNS_10JsonBufferE>
   114b8:	dc 01       	movw	r26, r24
   114ba:	89 2b       	or	r24, r25
   114bc:	31 f0       	breq	.+12     	; 0x114ca <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x98>
   114be:	11 96       	adiw	r26, 0x01	; 1
   114c0:	1c 92       	st	X, r1
   114c2:	1e 92       	st	-X, r1
   114c4:	12 96       	adiw	r26, 0x02	; 2
   114c6:	1c 92       	st	X, r1
   114c8:	12 97       	sbiw	r26, 0x02	; 2
   114ca:	f8 01       	movw	r30, r16
   114cc:	22 81       	ldd	r18, Z+2	; 0x02
   114ce:	33 81       	ldd	r19, Z+3	; 0x03
   114d0:	21 15       	cp	r18, r1
   114d2:	31 05       	cpc	r19, r1
   114d4:	51 f0       	breq	.+20     	; 0x114ea <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb8>
   114d6:	f9 01       	movw	r30, r18
   114d8:	80 81       	ld	r24, Z
   114da:	91 81       	ldd	r25, Z+1	; 0x01
   114dc:	00 97       	sbiw	r24, 0x00	; 0
   114de:	11 f0       	breq	.+4      	; 0x114e4 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xb2>
   114e0:	9c 01       	movw	r18, r24
   114e2:	f9 cf       	rjmp	.-14     	; 0x114d6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xa4>
   114e4:	b1 83       	std	Z+1, r27	; 0x01
   114e6:	a0 83       	st	Z, r26
   114e8:	03 c0       	rjmp	.+6      	; 0x114f0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xbe>
   114ea:	f8 01       	movw	r30, r16
   114ec:	b3 83       	std	Z+3, r27	; 0x03
   114ee:	a2 83       	std	Z+2, r26	; 0x02
   114f0:	10 97       	sbiw	r26, 0x00	; 0
   114f2:	c9 f0       	breq	.+50     	; 0x11526 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   114f4:	85 e0       	ldi	r24, 0x05	; 5
   114f6:	fe 01       	movw	r30, r28
   114f8:	31 96       	adiw	r30, 0x01	; 1
   114fa:	12 96       	adiw	r26, 0x02	; 2
   114fc:	01 90       	ld	r0, Z+
   114fe:	0d 92       	st	X+, r0
   11500:	8a 95       	dec	r24
   11502:	e1 f7       	brne	.-8      	; 0x114fc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xca>
   11504:	6d e5       	ldi	r22, 0x5D	; 93
   11506:	c6 01       	movw	r24, r12
   11508:	68 dd       	rcall	.-1328   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1150a:	81 11       	cpse	r24, r1
   1150c:	06 c0       	rjmp	.+12     	; 0x1151a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xe8>
   1150e:	6c e2       	ldi	r22, 0x2C	; 44
   11510:	c6 01       	movw	r24, r12
   11512:	63 dd       	rcall	.-1338   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11514:	81 11       	cpse	r24, r1
   11516:	c1 cf       	rjmp	.-126    	; 0x1149a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x68>
   11518:	06 c0       	rjmp	.+12     	; 0x11526 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xf4>
   1151a:	f7 01       	movw	r30, r14
   1151c:	86 81       	ldd	r24, Z+6	; 0x06
   1151e:	8f 5f       	subi	r24, 0xFF	; 255
   11520:	86 83       	std	Z+6, r24	; 0x06
   11522:	c8 01       	movw	r24, r16
   11524:	04 c0       	rjmp	.+8      	; 0x1152e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   11526:	f4 d8       	rcall	.-3608   	; 0x10710 <_ZN11ArduinoJson9JsonArray7invalidEv>
   11528:	02 c0       	rjmp	.+4      	; 0x1152e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0xfc>
   1152a:	f2 d8       	rcall	.-3612   	; 0x10710 <_ZN11ArduinoJson9JsonArray7invalidEv>
   1152c:	a6 cf       	rjmp	.-180    	; 0x1147a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv+0x48>
   1152e:	0f 90       	pop	r0
   11530:	0f 90       	pop	r0
   11532:	0f 90       	pop	r0
   11534:	0f 90       	pop	r0
   11536:	0f 90       	pop	r0
   11538:	df 91       	pop	r29
   1153a:	cf 91       	pop	r28
   1153c:	1f 91       	pop	r17
   1153e:	0f 91       	pop	r16
   11540:	ff 90       	pop	r15
   11542:	ef 90       	pop	r14
   11544:	df 90       	pop	r13
   11546:	cf 90       	pop	r12
   11548:	08 95       	ret

0001154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>:
   1154a:	ef 92       	push	r14
   1154c:	ff 92       	push	r15
   1154e:	0f 93       	push	r16
   11550:	1f 93       	push	r17
   11552:	cf 93       	push	r28
   11554:	7c 01       	movw	r14, r24
   11556:	8b 01       	movw	r16, r22
   11558:	02 96       	adiw	r24, 0x02	; 2
   1155a:	fd dc       	rcall	.-1542   	; 0x10f56 <_ZN11ArduinoJson9Internals21skipSpacesAndCommentsINS0_17CharPointerTraitsIhE6ReaderEEEvRT_>
   1155c:	d7 01       	movw	r26, r14
   1155e:	12 96       	adiw	r26, 0x02	; 2
   11560:	ed 91       	ld	r30, X+
   11562:	fc 91       	ld	r31, X
   11564:	13 97       	sbiw	r26, 0x03	; 3
   11566:	80 81       	ld	r24, Z
   11568:	8b 35       	cpi	r24, 0x5B	; 91
   1156a:	19 f0       	breq	.+6      	; 0x11572 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x28>
   1156c:	8b 37       	cpi	r24, 0x7B	; 123
   1156e:	61 f0       	breq	.+24     	; 0x11588 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3e>
   11570:	14 c0       	rjmp	.+40     	; 0x1159a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x50>
   11572:	c7 01       	movw	r24, r14
   11574:	5e df       	rcall	.-324    	; 0x11432 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE10parseArrayEv>
   11576:	fc 01       	movw	r30, r24
   11578:	20 81       	ld	r18, Z
   1157a:	31 81       	ldd	r19, Z+1	; 0x01
   1157c:	23 2b       	or	r18, r19
   1157e:	11 f4       	brne	.+4      	; 0x11584 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x3a>
   11580:	c0 e0       	ldi	r28, 0x00	; 0
   11582:	25 c0       	rjmp	.+74     	; 0x115ce <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   11584:	26 e0       	ldi	r18, 0x06	; 6
   11586:	1c c0       	rjmp	.+56     	; 0x115c0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   11588:	c7 01       	movw	r24, r14
   1158a:	28 d0       	rcall	.+80     	; 0x115dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   1158c:	fc 01       	movw	r30, r24
   1158e:	20 81       	ld	r18, Z
   11590:	31 81       	ldd	r19, Z+1	; 0x01
   11592:	23 2b       	or	r18, r19
   11594:	a9 f3       	breq	.-22     	; 0x11580 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   11596:	27 e0       	ldi	r18, 0x07	; 7
   11598:	13 c0       	rjmp	.+38     	; 0x115c0 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x76>
   1159a:	c1 e0       	ldi	r28, 0x01	; 1
   1159c:	87 32       	cpi	r24, 0x27	; 39
   1159e:	19 f0       	breq	.+6      	; 0x115a6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   115a0:	82 32       	cpi	r24, 0x22	; 34
   115a2:	09 f0       	breq	.+2      	; 0x115a6 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x5c>
   115a4:	c0 e0       	ldi	r28, 0x00	; 0
   115a6:	c7 01       	movw	r24, r14
   115a8:	2d dd       	rcall	.-1446   	; 0x11004 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   115aa:	00 97       	sbiw	r24, 0x00	; 0
   115ac:	49 f3       	breq	.-46     	; 0x11580 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x36>
   115ae:	cc 23       	and	r28, r28
   115b0:	31 f0       	breq	.+12     	; 0x115be <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x74>
   115b2:	22 e0       	ldi	r18, 0x02	; 2
   115b4:	f8 01       	movw	r30, r16
   115b6:	20 83       	st	Z, r18
   115b8:	92 83       	std	Z+2, r25	; 0x02
   115ba:	81 83       	std	Z+1, r24	; 0x01
   115bc:	08 c0       	rjmp	.+16     	; 0x115ce <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE+0x84>
   115be:	21 e0       	ldi	r18, 0x01	; 1
   115c0:	d8 01       	movw	r26, r16
   115c2:	2c 93       	st	X, r18
   115c4:	12 96       	adiw	r26, 0x02	; 2
   115c6:	9c 93       	st	X, r25
   115c8:	8e 93       	st	-X, r24
   115ca:	11 97       	sbiw	r26, 0x01	; 1
   115cc:	c1 e0       	ldi	r28, 0x01	; 1
   115ce:	8c 2f       	mov	r24, r28
   115d0:	cf 91       	pop	r28
   115d2:	1f 91       	pop	r17
   115d4:	0f 91       	pop	r16
   115d6:	ff 90       	pop	r15
   115d8:	ef 90       	pop	r14
   115da:	08 95       	ret

000115dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>:
   115dc:	af 92       	push	r10
   115de:	bf 92       	push	r11
   115e0:	cf 92       	push	r12
   115e2:	df 92       	push	r13
   115e4:	ef 92       	push	r14
   115e6:	ff 92       	push	r15
   115e8:	0f 93       	push	r16
   115ea:	1f 93       	push	r17
   115ec:	cf 93       	push	r28
   115ee:	df 93       	push	r29
   115f0:	00 d0       	rcall	.+0      	; 0x115f2 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x16>
   115f2:	1f 92       	push	r1
   115f4:	1f 92       	push	r1
   115f6:	cd b7       	in	r28, 0x3d	; 61
   115f8:	de b7       	in	r29, 0x3e	; 62
   115fa:	7c 01       	movw	r14, r24
   115fc:	fc 01       	movw	r30, r24
   115fe:	86 81       	ldd	r24, Z+6	; 0x06
   11600:	88 23       	and	r24, r24
   11602:	09 f4       	brne	.+2      	; 0x11606 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x2a>
   11604:	4b c0       	rjmp	.+150    	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11606:	81 50       	subi	r24, 0x01	; 1
   11608:	f7 01       	movw	r30, r14
   1160a:	86 83       	std	Z+6, r24	; 0x06
   1160c:	81 91       	ld	r24, Z+
   1160e:	91 91       	ld	r25, Z+
   11610:	6f 01       	movw	r12, r30
   11612:	a2 d8       	rcall	.-3772   	; 0x10758 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   11614:	8c 01       	movw	r16, r24
   11616:	6b e7       	ldi	r22, 0x7B	; 123
   11618:	c6 01       	movw	r24, r12
   1161a:	df dc       	rcall	.-1602   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1161c:	88 23       	and	r24, r24
   1161e:	09 f4       	brne	.+2      	; 0x11622 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x46>
   11620:	3d c0       	rjmp	.+122    	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11622:	6d e7       	ldi	r22, 0x7D	; 125
   11624:	c6 01       	movw	r24, r12
   11626:	d9 dc       	rcall	.-1614   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11628:	81 11       	cpse	r24, r1
   1162a:	32 c0       	rjmp	.+100    	; 0x11690 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   1162c:	c7 01       	movw	r24, r14
   1162e:	ea dc       	rcall	.-1580   	; 0x11004 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseStringEv>
   11630:	5c 01       	movw	r10, r24
   11632:	89 2b       	or	r24, r25
   11634:	99 f1       	breq	.+102    	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11636:	6a e3       	ldi	r22, 0x3A	; 58
   11638:	c6 01       	movw	r24, r12
   1163a:	cf dc       	rcall	.-1634   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1163c:	88 23       	and	r24, r24
   1163e:	71 f1       	breq	.+92     	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11640:	19 82       	std	Y+1, r1	; 0x01
   11642:	be 01       	movw	r22, r28
   11644:	6f 5f       	subi	r22, 0xFF	; 255
   11646:	7f 4f       	sbci	r23, 0xFF	; 255
   11648:	c7 01       	movw	r24, r14
   1164a:	7f df       	rcall	.-258    	; 0x1154a <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE15parseAnythingToEPNS_11JsonVariantE>
   1164c:	88 23       	and	r24, r24
   1164e:	31 f1       	breq	.+76     	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11650:	b5 01       	movw	r22, r10
   11652:	c8 01       	movw	r24, r16
   11654:	a0 de       	rcall	.-704    	; 0x11396 <_ZN11ArduinoJson10JsonObject7findKeyIPKcEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   11656:	00 97       	sbiw	r24, 0x00	; 0
   11658:	39 f4       	brne	.+14     	; 0x11668 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x8c>
   1165a:	c8 01       	movw	r24, r16
   1165c:	64 dd       	rcall	.-1336   	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   1165e:	00 97       	sbiw	r24, 0x00	; 0
   11660:	e9 f0       	breq	.+58     	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11662:	fc 01       	movw	r30, r24
   11664:	b3 82       	std	Z+3, r11	; 0x03
   11666:	a2 82       	std	Z+2, r10	; 0x02
   11668:	25 e0       	ldi	r18, 0x05	; 5
   1166a:	fe 01       	movw	r30, r28
   1166c:	31 96       	adiw	r30, 0x01	; 1
   1166e:	dc 01       	movw	r26, r24
   11670:	14 96       	adiw	r26, 0x04	; 4
   11672:	01 90       	ld	r0, Z+
   11674:	0d 92       	st	X+, r0
   11676:	2a 95       	dec	r18
   11678:	e1 f7       	brne	.-8      	; 0x11672 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x96>
   1167a:	6d e7       	ldi	r22, 0x7D	; 125
   1167c:	c6 01       	movw	r24, r12
   1167e:	ad dc       	rcall	.-1702   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   11680:	81 11       	cpse	r24, r1
   11682:	06 c0       	rjmp	.+12     	; 0x11690 <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xb4>
   11684:	6c e2       	ldi	r22, 0x2C	; 44
   11686:	c6 01       	movw	r24, r12
   11688:	a8 dc       	rcall	.-1712   	; 0x10fda <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE3eatERS4_c>
   1168a:	81 11       	cpse	r24, r1
   1168c:	cf cf       	rjmp	.-98     	; 0x1162c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0x50>
   1168e:	06 c0       	rjmp	.+12     	; 0x1169c <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc0>
   11690:	f7 01       	movw	r30, r14
   11692:	86 81       	ldd	r24, Z+6	; 0x06
   11694:	8f 5f       	subi	r24, 0xFF	; 255
   11696:	86 83       	std	Z+6, r24	; 0x06
   11698:	c8 01       	movw	r24, r16
   1169a:	01 c0       	rjmp	.+2      	; 0x1169e <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv+0xc2>
   1169c:	4b d8       	rcall	.-3946   	; 0x10734 <_ZN11ArduinoJson10JsonObject7invalidEv>
   1169e:	0f 90       	pop	r0
   116a0:	0f 90       	pop	r0
   116a2:	0f 90       	pop	r0
   116a4:	0f 90       	pop	r0
   116a6:	0f 90       	pop	r0
   116a8:	df 91       	pop	r29
   116aa:	cf 91       	pop	r28
   116ac:	1f 91       	pop	r17
   116ae:	0f 91       	pop	r16
   116b0:	ff 90       	pop	r15
   116b2:	ef 90       	pop	r14
   116b4:	df 90       	pop	r13
   116b6:	cf 90       	pop	r12
   116b8:	bf 90       	pop	r11
   116ba:	af 90       	pop	r10
   116bc:	08 95       	ret

000116be <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>:
   116be:	0f cd       	rjmp	.-1506   	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   116c0:	08 95       	ret

000116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   116c2:	1f 93       	push	r17
   116c4:	cf 93       	push	r28
   116c6:	df 93       	push	r29
   116c8:	fa df       	rcall	.-12     	; 0x116be <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   116ca:	ec 01       	movw	r28, r24
   116cc:	89 2b       	or	r24, r25
   116ce:	a1 f0       	breq	.+40     	; 0x116f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   116d0:	1c 81       	ldd	r17, Y+4	; 0x04
   116d2:	11 30       	cpi	r17, 0x01	; 1
   116d4:	59 f4       	brne	.+22     	; 0x116ec <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   116d6:	6d 81       	ldd	r22, Y+5	; 0x05
   116d8:	7e 81       	ldd	r23, Y+6	; 0x06
   116da:	61 15       	cp	r22, r1
   116dc:	71 05       	cpc	r23, r1
   116de:	31 f0       	breq	.+12     	; 0x116ec <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x2a>
   116e0:	85 e6       	ldi	r24, 0x65	; 101
   116e2:	97 e0       	ldi	r25, 0x07	; 7
   116e4:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   116e8:	89 2b       	or	r24, r25
   116ea:	31 f0       	breq	.+12     	; 0x116f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   116ec:	11 50       	subi	r17, 0x01	; 1
   116ee:	12 30       	cpi	r17, 0x02	; 2
   116f0:	18 f4       	brcc	.+6      	; 0x116f8 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x36>
   116f2:	8d 81       	ldd	r24, Y+5	; 0x05
   116f4:	9e 81       	ldd	r25, Y+6	; 0x06
   116f6:	02 c0       	rjmp	.+4      	; 0x116fc <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x3a>
   116f8:	80 e0       	ldi	r24, 0x00	; 0
   116fa:	90 e0       	ldi	r25, 0x00	; 0
   116fc:	df 91       	pop	r29
   116fe:	cf 91       	pop	r28
   11700:	1f 91       	pop	r17
   11702:	08 95       	ret

00011704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11704:	dc df       	rcall	.-72     	; 0x116be <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   11706:	00 97       	sbiw	r24, 0x00	; 0
   11708:	39 f0       	breq	.+14     	; 0x11718 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   1170a:	fc 01       	movw	r30, r24
   1170c:	24 81       	ldd	r18, Z+4	; 0x04
   1170e:	26 30       	cpi	r18, 0x06	; 6
   11710:	19 f4       	brne	.+6      	; 0x11718 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_+0x14>
   11712:	85 81       	ldd	r24, Z+5	; 0x05
   11714:	96 81       	ldd	r25, Z+6	; 0x06
   11716:	08 95       	ret
   11718:	0c 94 88 83 	jmp	0x10710	; 0x10710 <_ZN11ArduinoJson9JsonArray7invalidEv>

0001171c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>:
   1171c:	fc 01       	movw	r30, r24
   1171e:	80 81       	ld	r24, Z
   11720:	83 30       	cpi	r24, 0x03	; 3
   11722:	18 f4       	brcc	.+6      	; 0x1172a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0xe>
   11724:	81 30       	cpi	r24, 0x01	; 1
   11726:	e8 f1       	brcs	.+122    	; 0x117a2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11728:	0a c0       	rjmp	.+20     	; 0x1173e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x22>
   1172a:	85 30       	cpi	r24, 0x05	; 5
   1172c:	28 f0       	brcs	.+10     	; 0x11738 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x1c>
   1172e:	85 30       	cpi	r24, 0x05	; 5
   11730:	89 f5       	brne	.+98     	; 0x11794 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x78>
   11732:	61 81       	ldd	r22, Z+1	; 0x01
   11734:	72 81       	ldd	r23, Z+2	; 0x02
   11736:	29 c0       	rjmp	.+82     	; 0x1178a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6e>
   11738:	81 81       	ldd	r24, Z+1	; 0x01
   1173a:	92 81       	ldd	r25, Z+2	; 0x02
   1173c:	08 95       	ret
   1173e:	01 80       	ldd	r0, Z+1	; 0x01
   11740:	f2 81       	ldd	r31, Z+2	; 0x02
   11742:	e0 2d       	mov	r30, r0
   11744:	30 97       	sbiw	r30, 0x00	; 0
   11746:	69 f1       	breq	.+90     	; 0x117a2 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x86>
   11748:	80 81       	ld	r24, Z
   1174a:	84 37       	cpi	r24, 0x74	; 116
   1174c:	69 f1       	breq	.+90     	; 0x117a8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x8c>
   1174e:	8b 32       	cpi	r24, 0x2B	; 43
   11750:	29 f0       	breq	.+10     	; 0x1175c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x40>
   11752:	8d 32       	cpi	r24, 0x2D	; 45
   11754:	21 f4       	brne	.+8      	; 0x1175e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x42>
   11756:	31 96       	adiw	r30, 0x01	; 1
   11758:	91 e0       	ldi	r25, 0x01	; 1
   1175a:	02 c0       	rjmp	.+4      	; 0x11760 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x44>
   1175c:	31 96       	adiw	r30, 0x01	; 1
   1175e:	90 e0       	ldi	r25, 0x00	; 0
   11760:	60 e0       	ldi	r22, 0x00	; 0
   11762:	70 e0       	ldi	r23, 0x00	; 0
   11764:	4a e0       	ldi	r20, 0x0A	; 10
   11766:	81 91       	ld	r24, Z+
   11768:	20 ed       	ldi	r18, 0xD0	; 208
   1176a:	28 0f       	add	r18, r24
   1176c:	2a 30       	cpi	r18, 0x0A	; 10
   1176e:	58 f4       	brcc	.+22     	; 0x11786 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x6a>
   11770:	46 9f       	mul	r20, r22
   11772:	90 01       	movw	r18, r0
   11774:	47 9f       	mul	r20, r23
   11776:	30 0d       	add	r19, r0
   11778:	11 24       	eor	r1, r1
   1177a:	b9 01       	movw	r22, r18
   1177c:	60 53       	subi	r22, 0x30	; 48
   1177e:	71 09       	sbc	r23, r1
   11780:	68 0f       	add	r22, r24
   11782:	71 1d       	adc	r23, r1
   11784:	f0 cf       	rjmp	.-32     	; 0x11766 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x4a>
   11786:	99 23       	and	r25, r25
   11788:	91 f0       	breq	.+36     	; 0x117ae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   1178a:	88 27       	eor	r24, r24
   1178c:	99 27       	eor	r25, r25
   1178e:	86 1b       	sub	r24, r22
   11790:	97 0b       	sbc	r25, r23
   11792:	08 95       	ret
   11794:	61 81       	ldd	r22, Z+1	; 0x01
   11796:	72 81       	ldd	r23, Z+2	; 0x02
   11798:	83 81       	ldd	r24, Z+3	; 0x03
   1179a:	94 81       	ldd	r25, Z+4	; 0x04
   1179c:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   117a0:	06 c0       	rjmp	.+12     	; 0x117ae <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v+0x92>
   117a2:	80 e0       	ldi	r24, 0x00	; 0
   117a4:	90 e0       	ldi	r25, 0x00	; 0
   117a6:	08 95       	ret
   117a8:	81 e0       	ldi	r24, 0x01	; 1
   117aa:	90 e0       	ldi	r25, 0x00	; 0
   117ac:	08 95       	ret
   117ae:	cb 01       	movw	r24, r22
   117b0:	08 95       	ret

000117b2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   117b2:	85 df       	rcall	.-246    	; 0x116be <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   117b4:	00 97       	sbiw	r24, 0x00	; 0
   117b6:	11 f0       	breq	.+4      	; 0x117bc <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   117b8:	04 96       	adiw	r24, 0x04	; 4
   117ba:	b0 cf       	rjmp	.-160    	; 0x1171c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   117bc:	80 e0       	ldi	r24, 0x00	; 0
   117be:	90 e0       	ldi	r25, 0x00	; 0
   117c0:	08 95       	ret

000117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   117c2:	fc 01       	movw	r30, r24
   117c4:	82 81       	ldd	r24, Z+2	; 0x02
   117c6:	93 81       	ldd	r25, Z+3	; 0x03
   117c8:	00 97       	sbiw	r24, 0x00	; 0
   117ca:	59 f0       	breq	.+22     	; 0x117e2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   117cc:	61 15       	cp	r22, r1
   117ce:	71 05       	cpc	r23, r1
   117d0:	31 f0       	breq	.+12     	; 0x117de <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   117d2:	fc 01       	movw	r30, r24
   117d4:	80 81       	ld	r24, Z
   117d6:	91 81       	ldd	r25, Z+1	; 0x01
   117d8:	61 50       	subi	r22, 0x01	; 1
   117da:	71 09       	sbc	r23, r1
   117dc:	f5 cf       	rjmp	.-22     	; 0x117c8 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   117de:	02 96       	adiw	r24, 0x02	; 2
   117e0:	9d cf       	rjmp	.-198    	; 0x1171c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIjEET_v>
   117e2:	80 e0       	ldi	r24, 0x00	; 0
   117e4:	90 e0       	ldi	r25, 0x00	; 0
   117e6:	08 95       	ret

000117e8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>:
   117e8:	fc 01       	movw	r30, r24
   117ea:	80 81       	ld	r24, Z
   117ec:	83 30       	cpi	r24, 0x03	; 3
   117ee:	18 f4       	brcc	.+6      	; 0x117f6 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0xe>
   117f0:	81 30       	cpi	r24, 0x01	; 1
   117f2:	98 f1       	brcs	.+102    	; 0x1185a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   117f4:	08 c0       	rjmp	.+16     	; 0x11806 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1e>
   117f6:	85 30       	cpi	r24, 0x05	; 5
   117f8:	20 f0       	brcs	.+8      	; 0x11802 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x1a>
   117fa:	85 30       	cpi	r24, 0x05	; 5
   117fc:	39 f5       	brne	.+78     	; 0x1184c <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x64>
   117fe:	61 81       	ldd	r22, Z+1	; 0x01
   11800:	23 c0       	rjmp	.+70     	; 0x11848 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x60>
   11802:	61 81       	ldd	r22, Z+1	; 0x01
   11804:	2d c0       	rjmp	.+90     	; 0x11860 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11806:	01 80       	ldd	r0, Z+1	; 0x01
   11808:	f2 81       	ldd	r31, Z+2	; 0x02
   1180a:	e0 2d       	mov	r30, r0
   1180c:	30 97       	sbiw	r30, 0x00	; 0
   1180e:	29 f1       	breq	.+74     	; 0x1185a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x72>
   11810:	80 81       	ld	r24, Z
   11812:	84 37       	cpi	r24, 0x74	; 116
   11814:	21 f1       	breq	.+72     	; 0x1185e <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x76>
   11816:	8b 32       	cpi	r24, 0x2B	; 43
   11818:	29 f0       	breq	.+10     	; 0x11824 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3c>
   1181a:	8d 32       	cpi	r24, 0x2D	; 45
   1181c:	21 f4       	brne	.+8      	; 0x11826 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x3e>
   1181e:	31 96       	adiw	r30, 0x01	; 1
   11820:	91 e0       	ldi	r25, 0x01	; 1
   11822:	02 c0       	rjmp	.+4      	; 0x11828 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x40>
   11824:	31 96       	adiw	r30, 0x01	; 1
   11826:	90 e0       	ldi	r25, 0x00	; 0
   11828:	60 e0       	ldi	r22, 0x00	; 0
   1182a:	21 91       	ld	r18, Z+
   1182c:	80 ed       	ldi	r24, 0xD0	; 208
   1182e:	82 0f       	add	r24, r18
   11830:	8a 30       	cpi	r24, 0x0A	; 10
   11832:	40 f4       	brcc	.+16     	; 0x11844 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x5c>
   11834:	66 0f       	add	r22, r22
   11836:	86 2f       	mov	r24, r22
   11838:	88 0f       	add	r24, r24
   1183a:	88 0f       	add	r24, r24
   1183c:	68 0f       	add	r22, r24
   1183e:	60 53       	subi	r22, 0x30	; 48
   11840:	62 0f       	add	r22, r18
   11842:	f3 cf       	rjmp	.-26     	; 0x1182a <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x42>
   11844:	99 23       	and	r25, r25
   11846:	61 f0       	breq	.+24     	; 0x11860 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   11848:	61 95       	neg	r22
   1184a:	0a c0       	rjmp	.+20     	; 0x11860 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   1184c:	61 81       	ldd	r22, Z+1	; 0x01
   1184e:	72 81       	ldd	r23, Z+2	; 0x02
   11850:	83 81       	ldd	r24, Z+3	; 0x03
   11852:	94 81       	ldd	r25, Z+4	; 0x04
   11854:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   11858:	03 c0       	rjmp	.+6      	; 0x11860 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   1185a:	60 e0       	ldi	r22, 0x00	; 0
   1185c:	01 c0       	rjmp	.+2      	; 0x11860 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v+0x78>
   1185e:	61 e0       	ldi	r22, 0x01	; 1
   11860:	86 2f       	mov	r24, r22
   11862:	08 95       	ret

00011864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>:
   11864:	fc 01       	movw	r30, r24
   11866:	82 81       	ldd	r24, Z+2	; 0x02
   11868:	93 81       	ldd	r25, Z+3	; 0x03
   1186a:	00 97       	sbiw	r24, 0x00	; 0
   1186c:	59 f0       	breq	.+22     	; 0x11884 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x20>
   1186e:	61 15       	cp	r22, r1
   11870:	71 05       	cpc	r23, r1
   11872:	31 f0       	breq	.+12     	; 0x11880 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x1c>
   11874:	fc 01       	movw	r30, r24
   11876:	80 81       	ld	r24, Z
   11878:	91 81       	ldd	r25, Z+1	; 0x01
   1187a:	61 50       	subi	r22, 0x01	; 1
   1187c:	71 09       	sbc	r23, r1
   1187e:	f5 cf       	rjmp	.-22     	; 0x1186a <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj+0x6>
   11880:	02 96       	adiw	r24, 0x02	; 2
   11882:	b2 cf       	rjmp	.-156    	; 0x117e8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11884:	80 e0       	ldi	r24, 0x00	; 0
   11886:	08 95       	ret

00011888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>:
   11888:	1a df       	rcall	.-460    	; 0x116be <_ZNK11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals17ListConstIteratorINS_8JsonPairEEET_>
   1188a:	00 97       	sbiw	r24, 0x00	; 0
   1188c:	11 f0       	breq	.+4      	; 0x11892 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_+0xa>
   1188e:	04 96       	adiw	r24, 0x04	; 4
   11890:	ab cf       	rjmp	.-170    	; 0x117e8 <_ZNK11ArduinoJson11JsonVariant16variantAsIntegerIhEET_v>
   11892:	80 e0       	ldi	r24, 0x00	; 0
   11894:	08 95       	ret

00011896 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>:
   11896:	2f 92       	push	r2
   11898:	3f 92       	push	r3
   1189a:	4f 92       	push	r4
   1189c:	5f 92       	push	r5
   1189e:	6f 92       	push	r6
   118a0:	7f 92       	push	r7
   118a2:	8f 92       	push	r8
   118a4:	9f 92       	push	r9
   118a6:	af 92       	push	r10
   118a8:	bf 92       	push	r11
   118aa:	cf 92       	push	r12
   118ac:	df 92       	push	r13
   118ae:	ef 92       	push	r14
   118b0:	ff 92       	push	r15
   118b2:	0f 93       	push	r16
   118b4:	1f 93       	push	r17
   118b6:	cf 93       	push	r28
   118b8:	df 93       	push	r29
   118ba:	00 d0       	rcall	.+0      	; 0x118bc <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x26>
   118bc:	1f 92       	push	r1
   118be:	cd b7       	in	r28, 0x3d	; 61
   118c0:	de b7       	in	r29, 0x3e	; 62
   118c2:	1c 01       	movw	r2, r24
   118c4:	6a 01       	movw	r12, r20
   118c6:	7b 01       	movw	r14, r22
   118c8:	86 e0       	ldi	r24, 0x06	; 6
   118ca:	d1 01       	movw	r26, r2
   118cc:	1a 96       	adiw	r26, 0x0a	; 10
   118ce:	8c 93       	st	X, r24
   118d0:	20 e8       	ldi	r18, 0x80	; 128
   118d2:	36 e9       	ldi	r19, 0x96	; 150
   118d4:	48 e1       	ldi	r20, 0x18	; 24
   118d6:	5b e4       	ldi	r21, 0x4B	; 75
   118d8:	c7 01       	movw	r24, r14
   118da:	b6 01       	movw	r22, r12
   118dc:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
   118e0:	87 fd       	sbrc	r24, 7
   118e2:	3a c0       	rjmp	.+116    	; 0x11958 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xc2>
   118e4:	52 e5       	ldi	r21, 0x52	; 82
   118e6:	85 2e       	mov	r8, r21
   118e8:	52 e0       	ldi	r21, 0x02	; 2
   118ea:	95 2e       	mov	r9, r21
   118ec:	62 e2       	ldi	r22, 0x22	; 34
   118ee:	a6 2e       	mov	r10, r22
   118f0:	62 e0       	ldi	r22, 0x02	; 2
   118f2:	b6 2e       	mov	r11, r22
   118f4:	e0 e2       	ldi	r30, 0x20	; 32
   118f6:	f0 e0       	ldi	r31, 0x00	; 0
   118f8:	fa 83       	std	Y+2, r31	; 0x02
   118fa:	e9 83       	std	Y+1, r30	; 0x01
   118fc:	00 e0       	ldi	r16, 0x00	; 0
   118fe:	10 e0       	ldi	r17, 0x00	; 0
   11900:	a7 01       	movw	r20, r14
   11902:	96 01       	movw	r18, r12
   11904:	d4 01       	movw	r26, r8
   11906:	9e 91       	ld	r25, -X
   11908:	8e 91       	ld	r24, -X
   1190a:	7e 91       	ld	r23, -X
   1190c:	6e 91       	ld	r22, -X
   1190e:	4d 01       	movw	r8, r26
   11910:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   11914:	18 16       	cp	r1, r24
   11916:	7c f0       	brlt	.+30     	; 0x11936 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xa0>
   11918:	f5 01       	movw	r30, r10
   1191a:	24 89       	ldd	r18, Z+20	; 0x14
   1191c:	35 89       	ldd	r19, Z+21	; 0x15
   1191e:	46 89       	ldd	r20, Z+22	; 0x16
   11920:	57 89       	ldd	r21, Z+23	; 0x17
   11922:	c7 01       	movw	r24, r14
   11924:	b6 01       	movw	r22, r12
   11926:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1192a:	6b 01       	movw	r12, r22
   1192c:	7c 01       	movw	r14, r24
   1192e:	89 81       	ldd	r24, Y+1	; 0x01
   11930:	9a 81       	ldd	r25, Y+2	; 0x02
   11932:	08 0f       	add	r16, r24
   11934:	19 1f       	adc	r17, r25
   11936:	a9 81       	ldd	r26, Y+1	; 0x01
   11938:	ba 81       	ldd	r27, Y+2	; 0x02
   1193a:	b5 95       	asr	r27
   1193c:	a7 95       	ror	r26
   1193e:	ba 83       	std	Y+2, r27	; 0x02
   11940:	a9 83       	std	Y+1, r26	; 0x01
   11942:	b4 e0       	ldi	r27, 0x04	; 4
   11944:	ab 1a       	sub	r10, r27
   11946:	b1 08       	sbc	r11, r1
   11948:	ea e3       	ldi	r30, 0x3A	; 58
   1194a:	8e 16       	cp	r8, r30
   1194c:	e2 e0       	ldi	r30, 0x02	; 2
   1194e:	9e 06       	cpc	r9, r30
   11950:	b9 f6       	brne	.-82     	; 0x11900 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x6a>
   11952:	bb 24       	eor	r11, r11
   11954:	ba 94       	dec	r11
   11956:	08 c0       	rjmp	.+16     	; 0x11968 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xd2>
   11958:	80 e2       	ldi	r24, 0x20	; 32
   1195a:	90 e0       	ldi	r25, 0x00	; 0
   1195c:	9a 83       	std	Y+2, r25	; 0x02
   1195e:	89 83       	std	Y+1, r24	; 0x01
   11960:	35 e0       	ldi	r19, 0x05	; 5
   11962:	b3 2e       	mov	r11, r19
   11964:	00 e0       	ldi	r16, 0x00	; 0
   11966:	10 e0       	ldi	r17, 0x00	; 0
   11968:	20 e0       	ldi	r18, 0x00	; 0
   1196a:	30 e0       	ldi	r19, 0x00	; 0
   1196c:	a9 01       	movw	r20, r18
   1196e:	c7 01       	movw	r24, r14
   11970:	b6 01       	movw	r22, r12
   11972:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
   11976:	18 16       	cp	r1, r24
   11978:	c4 f5       	brge	.+112    	; 0x119ea <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   1197a:	2c ea       	ldi	r18, 0xAC	; 172
   1197c:	35 ec       	ldi	r19, 0xC5	; 197
   1197e:	47 e2       	ldi	r20, 0x27	; 39
   11980:	57 e3       	ldi	r21, 0x37	; 55
   11982:	c7 01       	movw	r24, r14
   11984:	b6 01       	movw	r22, r12
   11986:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   1198a:	18 16       	cp	r1, r24
   1198c:	74 f1       	brlt	.+92     	; 0x119ea <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   1198e:	9f ef       	ldi	r25, 0xFF	; 255
   11990:	b9 16       	cp	r11, r25
   11992:	59 f1       	breq	.+86     	; 0x119ea <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x154>
   11994:	ab 2d       	mov	r26, r11
   11996:	b4 e0       	ldi	r27, 0x04	; 4
   11998:	ab 02       	muls	r26, r27
   1199a:	40 01       	movw	r8, r0
   1199c:	11 24       	eor	r1, r1
   1199e:	f4 01       	movw	r30, r8
   119a0:	e6 5f       	subi	r30, 0xF6	; 246
   119a2:	fd 4f       	sbci	r31, 0xFD	; 253
   119a4:	a7 01       	movw	r20, r14
   119a6:	96 01       	movw	r18, r12
   119a8:	60 81       	ld	r22, Z
   119aa:	71 81       	ldd	r23, Z+1	; 0x01
   119ac:	82 81       	ldd	r24, Z+2	; 0x02
   119ae:	93 81       	ldd	r25, Z+3	; 0x03
   119b0:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
   119b4:	18 16       	cp	r1, r24
   119b6:	8c f4       	brge	.+34     	; 0x119da <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x144>
   119b8:	f4 01       	movw	r30, r8
   119ba:	e6 5c       	subi	r30, 0xC6	; 198
   119bc:	fd 4f       	sbci	r31, 0xFD	; 253
   119be:	20 81       	ld	r18, Z
   119c0:	31 81       	ldd	r19, Z+1	; 0x01
   119c2:	42 81       	ldd	r20, Z+2	; 0x02
   119c4:	53 81       	ldd	r21, Z+3	; 0x03
   119c6:	c7 01       	movw	r24, r14
   119c8:	b6 01       	movw	r22, r12
   119ca:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   119ce:	6b 01       	movw	r12, r22
   119d0:	7c 01       	movw	r14, r24
   119d2:	e9 81       	ldd	r30, Y+1	; 0x01
   119d4:	fa 81       	ldd	r31, Y+2	; 0x02
   119d6:	0e 1b       	sub	r16, r30
   119d8:	1f 0b       	sbc	r17, r31
   119da:	89 81       	ldd	r24, Y+1	; 0x01
   119dc:	9a 81       	ldd	r25, Y+2	; 0x02
   119de:	95 95       	asr	r25
   119e0:	87 95       	ror	r24
   119e2:	9a 83       	std	Y+2, r25	; 0x02
   119e4:	89 83       	std	Y+1, r24	; 0x01
   119e6:	ba 94       	dec	r11
   119e8:	d2 cf       	rjmp	.-92     	; 0x1198e <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0xf8>
   119ea:	d1 01       	movw	r26, r2
   119ec:	19 96       	adiw	r26, 0x09	; 9
   119ee:	1c 93       	st	X, r17
   119f0:	0e 93       	st	-X, r16
   119f2:	18 97       	sbiw	r26, 0x08	; 8
   119f4:	c7 01       	movw	r24, r14
   119f6:	b6 01       	movw	r22, r12
   119f8:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   119fc:	69 83       	std	Y+1, r22	; 0x01
   119fe:	7a 83       	std	Y+2, r23	; 0x02
   11a00:	8b 83       	std	Y+3, r24	; 0x03
   11a02:	9c 83       	std	Y+4, r25	; 0x04
   11a04:	f1 01       	movw	r30, r2
   11a06:	60 83       	st	Z, r22
   11a08:	71 83       	std	Z+1, r23	; 0x01
   11a0a:	82 83       	std	Z+2, r24	; 0x02
   11a0c:	93 83       	std	Z+3, r25	; 0x03
   11a0e:	2b 01       	movw	r4, r22
   11a10:	3c 01       	movw	r6, r24
   11a12:	90 e4       	ldi	r25, 0x40	; 64
   11a14:	89 2e       	mov	r8, r25
   11a16:	92 e4       	ldi	r25, 0x42	; 66
   11a18:	99 2e       	mov	r9, r25
   11a1a:	9f e0       	ldi	r25, 0x0F	; 15
   11a1c:	a9 2e       	mov	r10, r25
   11a1e:	b1 2c       	mov	r11, r1
   11a20:	fa e0       	ldi	r31, 0x0A	; 10
   11a22:	4f 16       	cp	r4, r31
   11a24:	51 04       	cpc	r5, r1
   11a26:	61 04       	cpc	r6, r1
   11a28:	71 04       	cpc	r7, r1
   11a2a:	e0 f0       	brcs	.+56     	; 0x11a64 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x1ce>
   11a2c:	c5 01       	movw	r24, r10
   11a2e:	b4 01       	movw	r22, r8
   11a30:	2a e0       	ldi	r18, 0x0A	; 10
   11a32:	30 e0       	ldi	r19, 0x00	; 0
   11a34:	40 e0       	ldi	r20, 0x00	; 0
   11a36:	50 e0       	ldi	r21, 0x00	; 0
   11a38:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   11a3c:	49 01       	movw	r8, r18
   11a3e:	5a 01       	movw	r10, r20
   11a40:	d1 01       	movw	r26, r2
   11a42:	1a 96       	adiw	r26, 0x0a	; 10
   11a44:	8c 91       	ld	r24, X
   11a46:	1a 97       	sbiw	r26, 0x0a	; 10
   11a48:	81 50       	subi	r24, 0x01	; 1
   11a4a:	1a 96       	adiw	r26, 0x0a	; 10
   11a4c:	8c 93       	st	X, r24
   11a4e:	c3 01       	movw	r24, r6
   11a50:	b2 01       	movw	r22, r4
   11a52:	2a e0       	ldi	r18, 0x0A	; 10
   11a54:	30 e0       	ldi	r19, 0x00	; 0
   11a56:	40 e0       	ldi	r20, 0x00	; 0
   11a58:	50 e0       	ldi	r21, 0x00	; 0
   11a5a:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   11a5e:	29 01       	movw	r4, r18
   11a60:	3a 01       	movw	r6, r20
   11a62:	de cf       	rjmp	.-68     	; 0x11a20 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x18a>
   11a64:	69 81       	ldd	r22, Y+1	; 0x01
   11a66:	7a 81       	ldd	r23, Y+2	; 0x02
   11a68:	8b 81       	ldd	r24, Y+3	; 0x03
   11a6a:	9c 81       	ldd	r25, Y+4	; 0x04
   11a6c:	0e 94 e6 cc 	call	0x199cc	; 0x199cc <__floatunsisf>
   11a70:	9b 01       	movw	r18, r22
   11a72:	ac 01       	movw	r20, r24
   11a74:	c7 01       	movw	r24, r14
   11a76:	b6 01       	movw	r22, r12
   11a78:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <__subsf3>
   11a7c:	6b 01       	movw	r12, r22
   11a7e:	7c 01       	movw	r14, r24
   11a80:	c5 01       	movw	r24, r10
   11a82:	b4 01       	movw	r22, r8
   11a84:	0e 94 e6 cc 	call	0x199cc	; 0x199cc <__floatunsisf>
   11a88:	9b 01       	movw	r18, r22
   11a8a:	ac 01       	movw	r20, r24
   11a8c:	c7 01       	movw	r24, r14
   11a8e:	b6 01       	movw	r22, r12
   11a90:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   11a94:	2b 01       	movw	r4, r22
   11a96:	3c 01       	movw	r6, r24
   11a98:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   11a9c:	6b 01       	movw	r12, r22
   11a9e:	7c 01       	movw	r14, r24
   11aa0:	0e 94 e6 cc 	call	0x199cc	; 0x199cc <__floatunsisf>
   11aa4:	9b 01       	movw	r18, r22
   11aa6:	ac 01       	movw	r20, r24
   11aa8:	c3 01       	movw	r24, r6
   11aaa:	b2 01       	movw	r22, r4
   11aac:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <__subsf3>
   11ab0:	9b 01       	movw	r18, r22
   11ab2:	ac 01       	movw	r20, r24
   11ab4:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   11ab8:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   11abc:	c6 0e       	add	r12, r22
   11abe:	d7 1e       	adc	r13, r23
   11ac0:	e8 1e       	adc	r14, r24
   11ac2:	f9 1e       	adc	r15, r25
   11ac4:	c8 14       	cp	r12, r8
   11ac6:	d9 04       	cpc	r13, r9
   11ac8:	ea 04       	cpc	r14, r10
   11aca:	fb 04       	cpc	r15, r11
   11acc:	30 f4       	brcc	.+12     	; 0x11ada <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x244>
   11ace:	f1 01       	movw	r30, r2
   11ad0:	c4 82       	std	Z+4, r12	; 0x04
   11ad2:	d5 82       	std	Z+5, r13	; 0x05
   11ad4:	e6 82       	std	Z+6, r14	; 0x06
   11ad6:	f7 82       	std	Z+7, r15	; 0x07
   11ad8:	26 c0       	rjmp	.+76     	; 0x11b26 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11ada:	d1 01       	movw	r26, r2
   11adc:	14 96       	adiw	r26, 0x04	; 4
   11ade:	1d 92       	st	X+, r1
   11ae0:	1d 92       	st	X+, r1
   11ae2:	1d 92       	st	X+, r1
   11ae4:	1c 92       	st	X, r1
   11ae6:	17 97       	sbiw	r26, 0x07	; 7
   11ae8:	89 81       	ldd	r24, Y+1	; 0x01
   11aea:	9a 81       	ldd	r25, Y+2	; 0x02
   11aec:	ab 81       	ldd	r26, Y+3	; 0x03
   11aee:	bc 81       	ldd	r27, Y+4	; 0x04
   11af0:	01 96       	adiw	r24, 0x01	; 1
   11af2:	a1 1d       	adc	r26, r1
   11af4:	b1 1d       	adc	r27, r1
   11af6:	f1 01       	movw	r30, r2
   11af8:	80 83       	st	Z, r24
   11afa:	91 83       	std	Z+1, r25	; 0x01
   11afc:	a2 83       	std	Z+2, r26	; 0x02
   11afe:	b3 83       	std	Z+3, r27	; 0x03
   11b00:	01 15       	cp	r16, r1
   11b02:	11 05       	cpc	r17, r1
   11b04:	81 f0       	breq	.+32     	; 0x11b26 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11b06:	0a 97       	sbiw	r24, 0x0a	; 10
   11b08:	a1 05       	cpc	r26, r1
   11b0a:	b1 05       	cpc	r27, r1
   11b0c:	60 f0       	brcs	.+24     	; 0x11b26 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x290>
   11b0e:	c8 01       	movw	r24, r16
   11b10:	01 96       	adiw	r24, 0x01	; 1
   11b12:	91 87       	std	Z+9, r25	; 0x09
   11b14:	80 87       	std	Z+8, r24	; 0x08
   11b16:	81 e0       	ldi	r24, 0x01	; 1
   11b18:	90 e0       	ldi	r25, 0x00	; 0
   11b1a:	a0 e0       	ldi	r26, 0x00	; 0
   11b1c:	b0 e0       	ldi	r27, 0x00	; 0
   11b1e:	80 83       	st	Z, r24
   11b20:	91 83       	std	Z+1, r25	; 0x01
   11b22:	a2 83       	std	Z+2, r26	; 0x02
   11b24:	b3 83       	std	Z+3, r27	; 0x03
   11b26:	8a e0       	ldi	r24, 0x0A	; 10
   11b28:	c8 2e       	mov	r12, r24
   11b2a:	d1 2c       	mov	r13, r1
   11b2c:	e1 2c       	mov	r14, r1
   11b2e:	f1 2c       	mov	r15, r1
   11b30:	d1 01       	movw	r26, r2
   11b32:	14 96       	adiw	r26, 0x04	; 4
   11b34:	6d 91       	ld	r22, X+
   11b36:	7d 91       	ld	r23, X+
   11b38:	8d 91       	ld	r24, X+
   11b3a:	9c 91       	ld	r25, X
   11b3c:	17 97       	sbiw	r26, 0x07	; 7
   11b3e:	a7 01       	movw	r20, r14
   11b40:	96 01       	movw	r18, r12
   11b42:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   11b46:	67 2b       	or	r22, r23
   11b48:	68 2b       	or	r22, r24
   11b4a:	69 2b       	or	r22, r25
   11b4c:	59 f4       	brne	.+22     	; 0x11b64 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11b4e:	f1 01       	movw	r30, r2
   11b50:	82 85       	ldd	r24, Z+10	; 0x0a
   11b52:	18 16       	cp	r1, r24
   11b54:	3c f4       	brge	.+14     	; 0x11b64 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x2ce>
   11b56:	24 83       	std	Z+4, r18	; 0x04
   11b58:	35 83       	std	Z+5, r19	; 0x05
   11b5a:	46 83       	std	Z+6, r20	; 0x06
   11b5c:	57 83       	std	Z+7, r21	; 0x07
   11b5e:	81 50       	subi	r24, 0x01	; 1
   11b60:	82 87       	std	Z+10, r24	; 0x0a
   11b62:	e6 cf       	rjmp	.-52     	; 0x11b30 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef+0x29a>
   11b64:	0f 90       	pop	r0
   11b66:	0f 90       	pop	r0
   11b68:	0f 90       	pop	r0
   11b6a:	0f 90       	pop	r0
   11b6c:	df 91       	pop	r29
   11b6e:	cf 91       	pop	r28
   11b70:	1f 91       	pop	r17
   11b72:	0f 91       	pop	r16
   11b74:	ff 90       	pop	r15
   11b76:	ef 90       	pop	r14
   11b78:	df 90       	pop	r13
   11b7a:	cf 90       	pop	r12
   11b7c:	bf 90       	pop	r11
   11b7e:	af 90       	pop	r10
   11b80:	9f 90       	pop	r9
   11b82:	8f 90       	pop	r8
   11b84:	7f 90       	pop	r7
   11b86:	6f 90       	pop	r6
   11b88:	5f 90       	pop	r5
   11b8a:	4f 90       	pop	r4
   11b8c:	3f 90       	pop	r3
   11b8e:	2f 90       	pop	r2
   11b90:	08 95       	ret

00011b92 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>:
   11b92:	cf 93       	push	r28
   11b94:	df 93       	push	r29
   11b96:	fc 01       	movw	r30, r24
   11b98:	82 81       	ldd	r24, Z+2	; 0x02
   11b9a:	87 ff       	sbrs	r24, 7
   11b9c:	32 c0       	rjmp	.+100    	; 0x11c02 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x70>
   11b9e:	40 e0       	ldi	r20, 0x00	; 0
   11ba0:	50 e0       	ldi	r21, 0x00	; 0
   11ba2:	20 e0       	ldi	r18, 0x00	; 0
   11ba4:	30 e0       	ldi	r19, 0x00	; 0
   11ba6:	70 e2       	ldi	r23, 0x20	; 32
   11ba8:	92 81       	ldd	r25, Z+2	; 0x02
   11baa:	89 2f       	mov	r24, r25
   11bac:	8f 70       	andi	r24, 0x0F	; 15
   11bae:	92 95       	swap	r25
   11bb0:	97 70       	andi	r25, 0x07	; 7
   11bb2:	89 9f       	mul	r24, r25
   11bb4:	c0 01       	movw	r24, r0
   11bb6:	11 24       	eor	r1, r1
   11bb8:	48 17       	cp	r20, r24
   11bba:	59 07       	cpc	r21, r25
   11bbc:	24 f5       	brge	.+72     	; 0x11c06 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x74>
   11bbe:	a0 81       	ld	r26, Z
   11bc0:	b1 81       	ldd	r27, Z+1	; 0x01
   11bc2:	12 96       	adiw	r26, 0x02	; 2
   11bc4:	cd 91       	ld	r28, X+
   11bc6:	dc 91       	ld	r29, X
   11bc8:	13 97       	sbiw	r26, 0x03	; 3
   11bca:	8d 91       	ld	r24, X+
   11bcc:	9c 91       	ld	r25, X
   11bce:	11 97       	sbiw	r26, 0x01	; 1
   11bd0:	c8 17       	cp	r28, r24
   11bd2:	d9 07       	cpc	r29, r25
   11bd4:	78 f4       	brcc	.+30     	; 0x11bf4 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x62>
   11bd6:	ce 01       	movw	r24, r28
   11bd8:	01 96       	adiw	r24, 0x01	; 1
   11bda:	13 96       	adiw	r26, 0x03	; 3
   11bdc:	9c 93       	st	X, r25
   11bde:	8e 93       	st	-X, r24
   11be0:	12 97       	sbiw	r26, 0x02	; 2
   11be2:	78 83       	st	Y, r23
   11be4:	12 96       	adiw	r26, 0x02	; 2
   11be6:	0d 90       	ld	r0, X+
   11be8:	bc 91       	ld	r27, X
   11bea:	a0 2d       	mov	r26, r0
   11bec:	1c 92       	st	X, r1
   11bee:	81 e0       	ldi	r24, 0x01	; 1
   11bf0:	90 e0       	ldi	r25, 0x00	; 0
   11bf2:	02 c0       	rjmp	.+4      	; 0x11bf8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x66>
   11bf4:	80 e0       	ldi	r24, 0x00	; 0
   11bf6:	90 e0       	ldi	r25, 0x00	; 0
   11bf8:	28 0f       	add	r18, r24
   11bfa:	39 1f       	adc	r19, r25
   11bfc:	4f 5f       	subi	r20, 0xFF	; 255
   11bfe:	5f 4f       	sbci	r21, 0xFF	; 255
   11c00:	d3 cf       	rjmp	.-90     	; 0x11ba8 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0x16>
   11c02:	20 e0       	ldi	r18, 0x00	; 0
   11c04:	30 e0       	ldi	r19, 0x00	; 0
   11c06:	a0 81       	ld	r26, Z
   11c08:	b1 81       	ldd	r27, Z+1	; 0x01
   11c0a:	12 96       	adiw	r26, 0x02	; 2
   11c0c:	cd 91       	ld	r28, X+
   11c0e:	dc 91       	ld	r29, X
   11c10:	13 97       	sbiw	r26, 0x03	; 3
   11c12:	8d 91       	ld	r24, X+
   11c14:	9c 91       	ld	r25, X
   11c16:	11 97       	sbiw	r26, 0x01	; 1
   11c18:	c8 17       	cp	r28, r24
   11c1a:	d9 07       	cpc	r29, r25
   11c1c:	78 f4       	brcc	.+30     	; 0x11c3c <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xaa>
   11c1e:	ce 01       	movw	r24, r28
   11c20:	01 96       	adiw	r24, 0x01	; 1
   11c22:	13 96       	adiw	r26, 0x03	; 3
   11c24:	9c 93       	st	X, r25
   11c26:	8e 93       	st	-X, r24
   11c28:	12 97       	sbiw	r26, 0x02	; 2
   11c2a:	68 83       	st	Y, r22
   11c2c:	12 96       	adiw	r26, 0x02	; 2
   11c2e:	0d 90       	ld	r0, X+
   11c30:	bc 91       	ld	r27, X
   11c32:	a0 2d       	mov	r26, r0
   11c34:	1c 92       	st	X, r1
   11c36:	81 e0       	ldi	r24, 0x01	; 1
   11c38:	90 e0       	ldi	r25, 0x00	; 0
   11c3a:	02 c0       	rjmp	.+4      	; 0x11c40 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xae>
   11c3c:	80 e0       	ldi	r24, 0x00	; 0
   11c3e:	90 e0       	ldi	r25, 0x00	; 0
   11c40:	51 e0       	ldi	r21, 0x01	; 1
   11c42:	6a 30       	cpi	r22, 0x0A	; 10
   11c44:	09 f0       	breq	.+2      	; 0x11c48 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc+0xb6>
   11c46:	50 e0       	ldi	r21, 0x00	; 0
   11c48:	42 81       	ldd	r20, Z+2	; 0x02
   11c4a:	50 fb       	bst	r21, 0
   11c4c:	47 f9       	bld	r20, 7
   11c4e:	42 83       	std	Z+2, r20	; 0x02
   11c50:	82 0f       	add	r24, r18
   11c52:	93 1f       	adc	r25, r19
   11c54:	df 91       	pop	r29
   11c56:	cf 91       	pop	r28
   11c58:	08 95       	ret

00011c5a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>:
   11c5a:	ef 92       	push	r14
   11c5c:	ff 92       	push	r15
   11c5e:	0f 93       	push	r16
   11c60:	1f 93       	push	r17
   11c62:	cf 93       	push	r28
   11c64:	df 93       	push	r29
   11c66:	7c 01       	movw	r14, r24
   11c68:	8b 01       	movw	r16, r22
   11c6a:	c0 e0       	ldi	r28, 0x00	; 0
   11c6c:	d0 e0       	ldi	r29, 0x00	; 0
   11c6e:	f8 01       	movw	r30, r16
   11c70:	61 91       	ld	r22, Z+
   11c72:	8f 01       	movw	r16, r30
   11c74:	66 23       	and	r22, r22
   11c76:	29 f0       	breq	.+10     	; 0x11c82 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x28>
   11c78:	c7 01       	movw	r24, r14
   11c7a:	8b df       	rcall	.-234    	; 0x11b92 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11c7c:	c8 0f       	add	r28, r24
   11c7e:	d9 1f       	adc	r29, r25
   11c80:	f6 cf       	rjmp	.-20     	; 0x11c6e <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc+0x14>
   11c82:	ce 01       	movw	r24, r28
   11c84:	df 91       	pop	r29
   11c86:	cf 91       	pop	r28
   11c88:	1f 91       	pop	r17
   11c8a:	0f 91       	pop	r16
   11c8c:	ff 90       	pop	r15
   11c8e:	ef 90       	pop	r14
   11c90:	08 95       	ret

00011c92 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>:
   11c92:	fc 01       	movw	r30, r24
   11c94:	90 81       	ld	r25, Z
   11c96:	9f 7d       	andi	r25, 0xDF	; 223
   11c98:	9b 35       	cpi	r25, 0x5B	; 91
   11c9a:	99 f4       	brne	.+38     	; 0x11cc2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x30>
   11c9c:	01 80       	ldd	r0, Z+1	; 0x01
   11c9e:	f2 81       	ldd	r31, Z+2	; 0x02
   11ca0:	e0 2d       	mov	r30, r0
   11ca2:	32 81       	ldd	r19, Z+2	; 0x02
   11ca4:	93 2f       	mov	r25, r19
   11ca6:	9f 70       	andi	r25, 0x0F	; 15
   11ca8:	9f 30       	cpi	r25, 0x0F	; 15
   11caa:	39 f0       	breq	.+14     	; 0x11cba <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv+0x28>
   11cac:	9f 5f       	subi	r25, 0xFF	; 255
   11cae:	29 2f       	mov	r18, r25
   11cb0:	2f 70       	andi	r18, 0x0F	; 15
   11cb2:	93 2f       	mov	r25, r19
   11cb4:	90 7f       	andi	r25, 0xF0	; 240
   11cb6:	92 2b       	or	r25, r18
   11cb8:	92 83       	std	Z+2, r25	; 0x02
   11cba:	6e e6       	ldi	r22, 0x6E	; 110
   11cbc:	77 e0       	ldi	r23, 0x07	; 7
   11cbe:	cf 01       	movw	r24, r30
   11cc0:	cc cf       	rjmp	.-104    	; 0x11c5a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11cc2:	80 e0       	ldi	r24, 0x00	; 0
   11cc4:	90 e0       	ldi	r25, 0x00	; 0
   11cc6:	08 95       	ret

00011cc8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>:
   11cc8:	ff 92       	push	r15
   11cca:	0f 93       	push	r16
   11ccc:	1f 93       	push	r17
   11cce:	cf 93       	push	r28
   11cd0:	df 93       	push	r29
   11cd2:	8c 01       	movw	r16, r24
   11cd4:	f6 2e       	mov	r15, r22
   11cd6:	8b e5       	ldi	r24, 0x5B	; 91
   11cd8:	68 17       	cp	r22, r24
   11cda:	f9 f0       	breq	.+62     	; 0x11d1a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11cdc:	86 17       	cp	r24, r22
   11cde:	98 f0       	brcs	.+38     	; 0x11d06 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x3e>
   11ce0:	ac e2       	ldi	r26, 0x2C	; 44
   11ce2:	6a 17       	cp	r22, r26
   11ce4:	09 f4       	brne	.+2      	; 0x11ce8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x20>
   11ce6:	43 c0       	rjmp	.+134    	; 0x11d6e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xa6>
   11ce8:	ba e3       	ldi	r27, 0x3A	; 58
   11cea:	6b 17       	cp	r22, r27
   11cec:	c1 f1       	breq	.+112    	; 0x11d5e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x96>
   11cee:	e2 e2       	ldi	r30, 0x22	; 34
   11cf0:	6e 13       	cpse	r22, r30
   11cf2:	4c c0       	rjmp	.+152    	; 0x11d8c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11cf4:	81 e0       	ldi	r24, 0x01	; 1
   11cf6:	d8 01       	movw	r26, r16
   11cf8:	13 96       	adiw	r26, 0x03	; 3
   11cfa:	8c 93       	st	X, r24
   11cfc:	c8 01       	movw	r24, r16
   11cfe:	c9 df       	rcall	.-110    	; 0x11c92 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11d00:	ec 01       	movw	r28, r24
   11d02:	62 e2       	ldi	r22, 0x22	; 34
   11d04:	3f c0       	rjmp	.+126    	; 0x11d84 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11d06:	fb e7       	ldi	r31, 0x7B	; 123
   11d08:	6f 17       	cp	r22, r31
   11d0a:	39 f0       	breq	.+14     	; 0x11d1a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x52>
   11d0c:	8d e7       	ldi	r24, 0x7D	; 125
   11d0e:	68 17       	cp	r22, r24
   11d10:	39 f0       	breq	.+14     	; 0x11d20 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11d12:	ad e5       	ldi	r26, 0x5D	; 93
   11d14:	6a 13       	cpse	r22, r26
   11d16:	3a c0       	rjmp	.+116    	; 0x11d8c <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xc4>
   11d18:	03 c0       	rjmp	.+6      	; 0x11d20 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x58>
   11d1a:	c8 01       	movw	r24, r16
   11d1c:	ba df       	rcall	.-140    	; 0x11c92 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11d1e:	1c c0       	rjmp	.+56     	; 0x11d58 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x90>
   11d20:	d8 01       	movw	r26, r16
   11d22:	8c 91       	ld	r24, X
   11d24:	8f 7d       	andi	r24, 0xDF	; 223
   11d26:	8b 35       	cpi	r24, 0x5B	; 91
   11d28:	19 f4       	brne	.+6      	; 0x11d30 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x68>
   11d2a:	c0 e0       	ldi	r28, 0x00	; 0
   11d2c:	d0 e0       	ldi	r29, 0x00	; 0
   11d2e:	15 c0       	rjmp	.+42     	; 0x11d5a <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x92>
   11d30:	d8 01       	movw	r26, r16
   11d32:	11 96       	adiw	r26, 0x01	; 1
   11d34:	ed 91       	ld	r30, X+
   11d36:	fc 91       	ld	r31, X
   11d38:	12 97       	sbiw	r26, 0x02	; 2
   11d3a:	32 81       	ldd	r19, Z+2	; 0x02
   11d3c:	93 2f       	mov	r25, r19
   11d3e:	9f 70       	andi	r25, 0x0F	; 15
   11d40:	39 f0       	breq	.+14     	; 0x11d50 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0x88>
   11d42:	91 5f       	subi	r25, 0xF1	; 241
   11d44:	29 2f       	mov	r18, r25
   11d46:	2f 70       	andi	r18, 0x0F	; 15
   11d48:	93 2f       	mov	r25, r19
   11d4a:	90 7f       	andi	r25, 0xF0	; 240
   11d4c:	92 2b       	or	r25, r18
   11d4e:	92 83       	std	Z+2, r25	; 0x02
   11d50:	6e e6       	ldi	r22, 0x6E	; 110
   11d52:	77 e0       	ldi	r23, 0x07	; 7
   11d54:	cf 01       	movw	r24, r30
   11d56:	81 df       	rcall	.-254    	; 0x11c5a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11d58:	ec 01       	movw	r28, r24
   11d5a:	6f 2d       	mov	r22, r15
   11d5c:	13 c0       	rjmp	.+38     	; 0x11d84 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xbc>
   11d5e:	6a e6       	ldi	r22, 0x6A	; 106
   11d60:	77 e0       	ldi	r23, 0x07	; 7
   11d62:	d8 01       	movw	r26, r16
   11d64:	11 96       	adiw	r26, 0x01	; 1
   11d66:	8d 91       	ld	r24, X+
   11d68:	9c 91       	ld	r25, X
   11d6a:	12 97       	sbiw	r26, 0x02	; 2
   11d6c:	05 c0       	rjmp	.+10     	; 0x11d78 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xb0>
   11d6e:	6d e6       	ldi	r22, 0x6D	; 109
   11d70:	77 e0       	ldi	r23, 0x07	; 7
   11d72:	f8 01       	movw	r30, r16
   11d74:	81 81       	ldd	r24, Z+1	; 0x01
   11d76:	92 81       	ldd	r25, Z+2	; 0x02
   11d78:	df 91       	pop	r29
   11d7a:	cf 91       	pop	r28
   11d7c:	1f 91       	pop	r17
   11d7e:	0f 91       	pop	r16
   11d80:	ff 90       	pop	r15
   11d82:	6b cf       	rjmp	.-298    	; 0x11c5a <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEPKc>
   11d84:	f8 01       	movw	r30, r16
   11d86:	81 81       	ldd	r24, Z+1	; 0x01
   11d88:	92 81       	ldd	r25, Z+2	; 0x02
   11d8a:	09 c0       	rjmp	.+18     	; 0x11d9e <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc+0xd6>
   11d8c:	c8 01       	movw	r24, r16
   11d8e:	81 df       	rcall	.-254    	; 0x11c92 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE14indentIfNeededEv>
   11d90:	ec 01       	movw	r28, r24
   11d92:	6f 2d       	mov	r22, r15
   11d94:	d8 01       	movw	r26, r16
   11d96:	11 96       	adiw	r26, 0x01	; 1
   11d98:	8d 91       	ld	r24, X+
   11d9a:	9c 91       	ld	r25, X
   11d9c:	12 97       	sbiw	r26, 0x02	; 2
   11d9e:	f9 de       	rcall	.-526    	; 0x11b92 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11da0:	8c 0f       	add	r24, r28
   11da2:	9d 1f       	adc	r25, r29
   11da4:	df 91       	pop	r29
   11da6:	cf 91       	pop	r28
   11da8:	1f 91       	pop	r17
   11daa:	0f 91       	pop	r16
   11dac:	ff 90       	pop	r15
   11dae:	08 95       	ret

00011db0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>:
   11db0:	1f 93       	push	r17
   11db2:	cf 93       	push	r28
   11db4:	df 93       	push	r29
   11db6:	ec 01       	movw	r28, r24
   11db8:	16 2f       	mov	r17, r22
   11dba:	8b 81       	ldd	r24, Y+3	; 0x03
   11dbc:	88 23       	and	r24, r24
   11dbe:	51 f0       	breq	.+20     	; 0x11dd4 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x24>
   11dc0:	62 32       	cpi	r22, 0x22	; 34
   11dc2:	19 f4       	brne	.+6      	; 0x11dca <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>
   11dc4:	88 81       	ld	r24, Y
   11dc6:	8c 35       	cpi	r24, 0x5C	; 92
   11dc8:	61 f4       	brne	.+24     	; 0x11de2 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x32>
   11dca:	61 2f       	mov	r22, r17
   11dcc:	89 81       	ldd	r24, Y+1	; 0x01
   11dce:	9a 81       	ldd	r25, Y+2	; 0x02
   11dd0:	e0 de       	rcall	.-576    	; 0x11b92 <_ZN11ArduinoJson9Internals13IndentedPrintINS0_19StaticStringBuilderEE5printEc>
   11dd2:	02 c0       	rjmp	.+4      	; 0x11dd8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x28>
   11dd4:	ce 01       	movw	r24, r28
   11dd6:	78 df       	rcall	.-272    	; 0x11cc8 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE16handleMarkupCharEc>
   11dd8:	18 83       	st	Y, r17
   11dda:	df 91       	pop	r29
   11ddc:	cf 91       	pop	r28
   11dde:	1f 91       	pop	r17
   11de0:	08 95       	ret
   11de2:	1b 82       	std	Y+3, r1	; 0x03
   11de4:	f2 cf       	rjmp	.-28     	; 0x11dca <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc+0x1a>

00011de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>:
   11de6:	cf 93       	push	r28
   11de8:	df 93       	push	r29
   11dea:	ec 01       	movw	r28, r24
   11dec:	88 81       	ld	r24, Y
   11dee:	99 81       	ldd	r25, Y+1	; 0x01
   11df0:	df df       	rcall	.-66     	; 0x11db0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11df2:	2a 81       	ldd	r18, Y+2	; 0x02
   11df4:	3b 81       	ldd	r19, Y+3	; 0x03
   11df6:	82 0f       	add	r24, r18
   11df8:	93 1f       	adc	r25, r19
   11dfa:	9b 83       	std	Y+3, r25	; 0x03
   11dfc:	8a 83       	std	Y+2, r24	; 0x02
   11dfe:	df 91       	pop	r29
   11e00:	cf 91       	pop	r28
   11e02:	08 95       	ret

00011e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>:
   11e04:	cf 92       	push	r12
   11e06:	df 92       	push	r13
   11e08:	ef 92       	push	r14
   11e0a:	ff 92       	push	r15
   11e0c:	0f 93       	push	r16
   11e0e:	1f 93       	push	r17
   11e10:	cf 93       	push	r28
   11e12:	df 93       	push	r29
   11e14:	7c 01       	movw	r14, r24
   11e16:	fc 01       	movw	r30, r24
   11e18:	c0 80       	ld	r12, Z
   11e1a:	d1 80       	ldd	r13, Z+1	; 0x01
   11e1c:	8b 01       	movw	r16, r22
   11e1e:	c0 e0       	ldi	r28, 0x00	; 0
   11e20:	d0 e0       	ldi	r29, 0x00	; 0
   11e22:	f8 01       	movw	r30, r16
   11e24:	61 91       	ld	r22, Z+
   11e26:	8f 01       	movw	r16, r30
   11e28:	66 23       	and	r22, r22
   11e2a:	29 f0       	breq	.+10     	; 0x11e36 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x32>
   11e2c:	c6 01       	movw	r24, r12
   11e2e:	c0 df       	rcall	.-128    	; 0x11db0 <_ZN11ArduinoJson9Internals10PrettyfierINS0_19StaticStringBuilderEE5printEc>
   11e30:	c8 0f       	add	r28, r24
   11e32:	d9 1f       	adc	r29, r25
   11e34:	f6 cf       	rjmp	.-20     	; 0x11e22 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc+0x1e>
   11e36:	f7 01       	movw	r30, r14
   11e38:	82 81       	ldd	r24, Z+2	; 0x02
   11e3a:	93 81       	ldd	r25, Z+3	; 0x03
   11e3c:	c8 0f       	add	r28, r24
   11e3e:	d9 1f       	adc	r29, r25
   11e40:	d3 83       	std	Z+3, r29	; 0x03
   11e42:	c2 83       	std	Z+2, r28	; 0x02
   11e44:	df 91       	pop	r29
   11e46:	cf 91       	pop	r28
   11e48:	1f 91       	pop	r17
   11e4a:	0f 91       	pop	r16
   11e4c:	ff 90       	pop	r15
   11e4e:	ef 90       	pop	r14
   11e50:	df 90       	pop	r13
   11e52:	cf 90       	pop	r12
   11e54:	08 95       	ret

00011e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>:
   11e56:	ff 92       	push	r15
   11e58:	0f 93       	push	r16
   11e5a:	1f 93       	push	r17
   11e5c:	cf 93       	push	r28
   11e5e:	df 93       	push	r29
   11e60:	61 15       	cp	r22, r1
   11e62:	71 05       	cpc	r23, r1
   11e64:	41 f4       	brne	.+16     	; 0x11e76 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x20>
   11e66:	65 e6       	ldi	r22, 0x65	; 101
   11e68:	77 e0       	ldi	r23, 0x07	; 7
   11e6a:	df 91       	pop	r29
   11e6c:	cf 91       	pop	r28
   11e6e:	1f 91       	pop	r17
   11e70:	0f 91       	pop	r16
   11e72:	ff 90       	pop	r15
   11e74:	c7 cf       	rjmp	.-114    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11e76:	8b 01       	movw	r16, r22
   11e78:	ec 01       	movw	r28, r24
   11e7a:	62 e2       	ldi	r22, 0x22	; 34
   11e7c:	ce 01       	movw	r24, r28
   11e7e:	b3 df       	rcall	.-154    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11e80:	f8 01       	movw	r30, r16
   11e82:	61 91       	ld	r22, Z+
   11e84:	8f 01       	movw	r16, r30
   11e86:	66 23       	and	r22, r22
   11e88:	51 f0       	breq	.+20     	; 0x11e9e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x48>
   11e8a:	e6 e5       	ldi	r30, 0x56	; 86
   11e8c:	f7 e0       	ldi	r31, 0x07	; 7
   11e8e:	f0 80       	ld	r15, Z
   11e90:	ff 20       	and	r15, r15
   11e92:	a1 f3       	breq	.-24     	; 0x11e7c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>
   11e94:	81 81       	ldd	r24, Z+1	; 0x01
   11e96:	68 17       	cp	r22, r24
   11e98:	51 f0       	breq	.+20     	; 0x11eae <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x58>
   11e9a:	32 96       	adiw	r30, 0x02	; 2
   11e9c:	f8 cf       	rjmp	.-16     	; 0x11e8e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x38>
   11e9e:	62 e2       	ldi	r22, 0x22	; 34
   11ea0:	ce 01       	movw	r24, r28
   11ea2:	df 91       	pop	r29
   11ea4:	cf 91       	pop	r28
   11ea6:	1f 91       	pop	r17
   11ea8:	0f 91       	pop	r16
   11eaa:	ff 90       	pop	r15
   11eac:	9c cf       	rjmp	.-200    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11eae:	6c e5       	ldi	r22, 0x5C	; 92
   11eb0:	ce 01       	movw	r24, r28
   11eb2:	99 df       	rcall	.-206    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11eb4:	6f 2d       	mov	r22, r15
   11eb6:	e2 cf       	rjmp	.-60     	; 0x11e7c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc+0x26>

00011eb8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>:
   11eb8:	0f 93       	push	r16
   11eba:	1f 93       	push	r17
   11ebc:	cf 93       	push	r28
   11ebe:	df 93       	push	r29
   11ec0:	cd b7       	in	r28, 0x3d	; 61
   11ec2:	de b7       	in	r29, 0x3e	; 62
   11ec4:	66 97       	sbiw	r28, 0x16	; 22
   11ec6:	0f b6       	in	r0, 0x3f	; 63
   11ec8:	f8 94       	cli
   11eca:	de bf       	out	0x3e, r29	; 62
   11ecc:	0f be       	out	0x3f, r0	; 63
   11ece:	cd bf       	out	0x3d, r28	; 61
   11ed0:	9c 01       	movw	r18, r24
   11ed2:	cb 01       	movw	r24, r22
   11ed4:	1e 8a       	std	Y+22, r1	; 0x16
   11ed6:	fe 01       	movw	r30, r28
   11ed8:	76 96       	adiw	r30, 0x16	; 22
   11eda:	0a e0       	ldi	r16, 0x0A	; 10
   11edc:	10 e0       	ldi	r17, 0x00	; 0
   11ede:	b8 01       	movw	r22, r16
   11ee0:	0e 94 32 e7 	call	0x1ce64	; 0x1ce64 <__divmodhi4>
   11ee4:	80 5d       	subi	r24, 0xD0	; 208
   11ee6:	82 93       	st	-Z, r24
   11ee8:	cb 01       	movw	r24, r22
   11eea:	00 97       	sbiw	r24, 0x00	; 0
   11eec:	c1 f7       	brne	.-16     	; 0x11ede <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_+0x26>
   11eee:	bf 01       	movw	r22, r30
   11ef0:	c9 01       	movw	r24, r18
   11ef2:	88 df       	rcall	.-240    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11ef4:	66 96       	adiw	r28, 0x16	; 22
   11ef6:	0f b6       	in	r0, 0x3f	; 63
   11ef8:	f8 94       	cli
   11efa:	de bf       	out	0x3e, r29	; 62
   11efc:	0f be       	out	0x3f, r0	; 63
   11efe:	cd bf       	out	0x3d, r28	; 61
   11f00:	df 91       	pop	r29
   11f02:	cf 91       	pop	r28
   11f04:	1f 91       	pop	r17
   11f06:	0f 91       	pop	r16
   11f08:	08 95       	ret

00011f0a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>:
   11f0a:	8f 92       	push	r8
   11f0c:	9f 92       	push	r9
   11f0e:	af 92       	push	r10
   11f10:	bf 92       	push	r11
   11f12:	ef 92       	push	r14
   11f14:	ff 92       	push	r15
   11f16:	0f 93       	push	r16
   11f18:	1f 93       	push	r17
   11f1a:	cf 93       	push	r28
   11f1c:	df 93       	push	r29
   11f1e:	cd b7       	in	r28, 0x3d	; 61
   11f20:	de b7       	in	r29, 0x3e	; 62
   11f22:	66 97       	sbiw	r28, 0x16	; 22
   11f24:	0f b6       	in	r0, 0x3f	; 63
   11f26:	f8 94       	cli
   11f28:	de bf       	out	0x3e, r29	; 62
   11f2a:	0f be       	out	0x3f, r0	; 63
   11f2c:	cd bf       	out	0x3d, r28	; 61
   11f2e:	7c 01       	movw	r14, r24
   11f30:	1e 8a       	std	Y+22, r1	; 0x16
   11f32:	8e 01       	movw	r16, r28
   11f34:	0a 5e       	subi	r16, 0xEA	; 234
   11f36:	1f 4f       	sbci	r17, 0xFF	; 255
   11f38:	8a e0       	ldi	r24, 0x0A	; 10
   11f3a:	88 2e       	mov	r8, r24
   11f3c:	91 2c       	mov	r9, r1
   11f3e:	a1 2c       	mov	r10, r1
   11f40:	b1 2c       	mov	r11, r1
   11f42:	cb 01       	movw	r24, r22
   11f44:	ba 01       	movw	r22, r20
   11f46:	a5 01       	movw	r20, r10
   11f48:	94 01       	movw	r18, r8
   11f4a:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   11f4e:	94 2f       	mov	r25, r20
   11f50:	85 2f       	mov	r24, r21
   11f52:	60 5d       	subi	r22, 0xD0	; 208
   11f54:	f8 01       	movw	r30, r16
   11f56:	62 93       	st	-Z, r22
   11f58:	8f 01       	movw	r16, r30
   11f5a:	a9 01       	movw	r20, r18
   11f5c:	69 2f       	mov	r22, r25
   11f5e:	78 2f       	mov	r23, r24
   11f60:	41 15       	cp	r20, r1
   11f62:	51 05       	cpc	r21, r1
   11f64:	61 05       	cpc	r22, r1
   11f66:	71 05       	cpc	r23, r1
   11f68:	61 f7       	brne	.-40     	; 0x11f42 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_+0x38>
   11f6a:	bf 01       	movw	r22, r30
   11f6c:	c7 01       	movw	r24, r14
   11f6e:	4a df       	rcall	.-364    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   11f70:	66 96       	adiw	r28, 0x16	; 22
   11f72:	0f b6       	in	r0, 0x3f	; 63
   11f74:	f8 94       	cli
   11f76:	de bf       	out	0x3e, r29	; 62
   11f78:	0f be       	out	0x3f, r0	; 63
   11f7a:	cd bf       	out	0x3d, r28	; 61
   11f7c:	df 91       	pop	r29
   11f7e:	cf 91       	pop	r28
   11f80:	1f 91       	pop	r17
   11f82:	0f 91       	pop	r16
   11f84:	ff 90       	pop	r15
   11f86:	ef 90       	pop	r14
   11f88:	bf 90       	pop	r11
   11f8a:	af 90       	pop	r10
   11f8c:	9f 90       	pop	r9
   11f8e:	8f 90       	pop	r8
   11f90:	08 95       	ret

00011f92 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>:
   11f92:	4f 92       	push	r4
   11f94:	5f 92       	push	r5
   11f96:	6f 92       	push	r6
   11f98:	7f 92       	push	r7
   11f9a:	af 92       	push	r10
   11f9c:	bf 92       	push	r11
   11f9e:	cf 92       	push	r12
   11fa0:	df 92       	push	r13
   11fa2:	ef 92       	push	r14
   11fa4:	ff 92       	push	r15
   11fa6:	0f 93       	push	r16
   11fa8:	1f 93       	push	r17
   11faa:	cf 93       	push	r28
   11fac:	df 93       	push	r29
   11fae:	cd b7       	in	r28, 0x3d	; 61
   11fb0:	de b7       	in	r29, 0x3e	; 62
   11fb2:	6b 97       	sbiw	r28, 0x1b	; 27
   11fb4:	0f b6       	in	r0, 0x3f	; 63
   11fb6:	f8 94       	cli
   11fb8:	de bf       	out	0x3e, r29	; 62
   11fba:	0f be       	out	0x3f, r0	; 63
   11fbc:	cd bf       	out	0x3d, r28	; 61
   11fbe:	8c 01       	movw	r16, r24
   11fc0:	6a 01       	movw	r12, r20
   11fc2:	7b 01       	movw	r14, r22
   11fc4:	9a 01       	movw	r18, r20
   11fc6:	ab 01       	movw	r20, r22
   11fc8:	c7 01       	movw	r24, r14
   11fca:	b6 01       	movw	r22, r12
   11fcc:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   11fd0:	88 23       	and	r24, r24
   11fd2:	19 f0       	breq	.+6      	; 0x11fda <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x48>
   11fd4:	61 e7       	ldi	r22, 0x71	; 113
   11fd6:	77 e0       	ldi	r23, 0x07	; 7
   11fd8:	29 c0       	rjmp	.+82     	; 0x1202c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x9a>
   11fda:	20 e0       	ldi	r18, 0x00	; 0
   11fdc:	30 e0       	ldi	r19, 0x00	; 0
   11fde:	a9 01       	movw	r20, r18
   11fe0:	c7 01       	movw	r24, r14
   11fe2:	b6 01       	movw	r22, r12
   11fe4:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   11fe8:	87 ff       	sbrs	r24, 7
   11fea:	07 c0       	rjmp	.+14     	; 0x11ffa <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x68>
   11fec:	6d e2       	ldi	r22, 0x2D	; 45
   11fee:	c8 01       	movw	r24, r16
   11ff0:	fa de       	rcall	.-524    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   11ff2:	f7 fa       	bst	r15, 7
   11ff4:	f0 94       	com	r15
   11ff6:	f7 f8       	bld	r15, 7
   11ff8:	f0 94       	com	r15
   11ffa:	20 e0       	ldi	r18, 0x00	; 0
   11ffc:	30 e0       	ldi	r19, 0x00	; 0
   11ffe:	a9 01       	movw	r20, r18
   12000:	c7 01       	movw	r24, r14
   12002:	b6 01       	movw	r22, r12
   12004:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   12008:	88 23       	and	r24, r24
   1200a:	99 f0       	breq	.+38     	; 0x12032 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   1200c:	a7 01       	movw	r20, r14
   1200e:	96 01       	movw	r18, r12
   12010:	c7 01       	movw	r24, r14
   12012:	b6 01       	movw	r22, r12
   12014:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   12018:	9b 01       	movw	r18, r22
   1201a:	ac 01       	movw	r20, r24
   1201c:	c7 01       	movw	r24, r14
   1201e:	b6 01       	movw	r22, r12
   12020:	0e 94 4e cc 	call	0x1989c	; 0x1989c <__cmpsf2>
   12024:	81 11       	cpse	r24, r1
   12026:	05 c0       	rjmp	.+10     	; 0x12032 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xa0>
   12028:	68 e7       	ldi	r22, 0x78	; 120
   1202a:	77 e0       	ldi	r23, 0x07	; 7
   1202c:	c8 01       	movw	r24, r16
   1202e:	ea de       	rcall	.-556    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   12030:	51 c0       	rjmp	.+162    	; 0x120d4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   12032:	b7 01       	movw	r22, r14
   12034:	a6 01       	movw	r20, r12
   12036:	ce 01       	movw	r24, r28
   12038:	41 96       	adiw	r24, 0x11	; 17
   1203a:	2d dc       	rcall	.-1958   	; 0x11896 <_ZN11ArduinoJson9Internals10FloatPartsIfEC1Ef>
   1203c:	49 89       	ldd	r20, Y+17	; 0x11
   1203e:	5a 89       	ldd	r21, Y+18	; 0x12
   12040:	6b 89       	ldd	r22, Y+19	; 0x13
   12042:	7c 89       	ldd	r23, Y+20	; 0x14
   12044:	c8 01       	movw	r24, r16
   12046:	61 df       	rcall	.-318    	; 0x11f0a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   12048:	bb 8c       	ldd	r11, Y+27	; 0x1b
   1204a:	bb 20       	and	r11, r11
   1204c:	41 f1       	breq	.+80     	; 0x1209e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x10c>
   1204e:	6d 89       	ldd	r22, Y+21	; 0x15
   12050:	7e 89       	ldd	r23, Y+22	; 0x16
   12052:	8f 89       	ldd	r24, Y+23	; 0x17
   12054:	98 8d       	ldd	r25, Y+24	; 0x18
   12056:	18 8a       	std	Y+16, r1	; 0x10
   12058:	ab 2c       	mov	r10, r11
   1205a:	6e 01       	movw	r12, r28
   1205c:	20 e1       	ldi	r18, 0x10	; 16
   1205e:	c2 0e       	add	r12, r18
   12060:	d1 1c       	adc	r13, r1
   12062:	76 01       	movw	r14, r12
   12064:	2a e0       	ldi	r18, 0x0A	; 10
   12066:	42 2e       	mov	r4, r18
   12068:	51 2c       	mov	r5, r1
   1206a:	61 2c       	mov	r6, r1
   1206c:	71 2c       	mov	r7, r1
   1206e:	aa 94       	dec	r10
   12070:	ef ef       	ldi	r30, 0xFF	; 255
   12072:	ae 16       	cp	r10, r30
   12074:	59 f0       	breq	.+22     	; 0x1208c <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xfa>
   12076:	a3 01       	movw	r20, r6
   12078:	92 01       	movw	r18, r4
   1207a:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   1207e:	60 5d       	subi	r22, 0xD0	; 208
   12080:	f6 01       	movw	r30, r12
   12082:	62 93       	st	-Z, r22
   12084:	6f 01       	movw	r12, r30
   12086:	b9 01       	movw	r22, r18
   12088:	ca 01       	movw	r24, r20
   1208a:	f1 cf       	rjmp	.-30     	; 0x1206e <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0xdc>
   1208c:	b7 01       	movw	r22, r14
   1208e:	6b 19       	sub	r22, r11
   12090:	71 09       	sbc	r23, r1
   12092:	8e e2       	ldi	r24, 0x2E	; 46
   12094:	fb 01       	movw	r30, r22
   12096:	82 93       	st	-Z, r24
   12098:	bf 01       	movw	r22, r30
   1209a:	c8 01       	movw	r24, r16
   1209c:	b3 de       	rcall	.-666    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   1209e:	89 8d       	ldd	r24, Y+25	; 0x19
   120a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
   120a2:	97 ff       	sbrs	r25, 7
   120a4:	0b c0       	rjmp	.+22     	; 0x120bc <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x12a>
   120a6:	65 e7       	ldi	r22, 0x75	; 117
   120a8:	77 e0       	ldi	r23, 0x07	; 7
   120aa:	c8 01       	movw	r24, r16
   120ac:	ab de       	rcall	.-682    	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   120ae:	69 8d       	ldd	r22, Y+25	; 0x19
   120b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
   120b2:	71 95       	neg	r23
   120b4:	61 95       	neg	r22
   120b6:	71 09       	sbc	r23, r1
   120b8:	c8 01       	movw	r24, r16
   120ba:	fe de       	rcall	.-516    	; 0x11eb8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   120bc:	89 8d       	ldd	r24, Y+25	; 0x19
   120be:	9a 8d       	ldd	r25, Y+26	; 0x1a
   120c0:	18 16       	cp	r1, r24
   120c2:	19 06       	cpc	r1, r25
   120c4:	3c f4       	brge	.+14     	; 0x120d4 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_+0x142>
   120c6:	65 e6       	ldi	r22, 0x65	; 101
   120c8:	c8 01       	movw	r24, r16
   120ca:	8d de       	rcall	.-742    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   120cc:	69 8d       	ldd	r22, Y+25	; 0x19
   120ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
   120d0:	c8 01       	movw	r24, r16
   120d2:	f2 de       	rcall	.-540    	; 0x11eb8 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerIiEEvT_>
   120d4:	6b 96       	adiw	r28, 0x1b	; 27
   120d6:	0f b6       	in	r0, 0x3f	; 63
   120d8:	f8 94       	cli
   120da:	de bf       	out	0x3e, r29	; 62
   120dc:	0f be       	out	0x3f, r0	; 63
   120de:	cd bf       	out	0x3d, r28	; 61
   120e0:	df 91       	pop	r29
   120e2:	cf 91       	pop	r28
   120e4:	1f 91       	pop	r17
   120e6:	0f 91       	pop	r16
   120e8:	ff 90       	pop	r15
   120ea:	ef 90       	pop	r14
   120ec:	df 90       	pop	r13
   120ee:	cf 90       	pop	r12
   120f0:	bf 90       	pop	r11
   120f2:	af 90       	pop	r10
   120f4:	7f 90       	pop	r7
   120f6:	6f 90       	pop	r6
   120f8:	5f 90       	pop	r5
   120fa:	4f 90       	pop	r4
   120fc:	08 95       	ret

000120fe <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>:
   120fe:	0f 93       	push	r16
   12100:	1f 93       	push	r17
   12102:	cf 93       	push	r28
   12104:	df 93       	push	r29
   12106:	eb 01       	movw	r28, r22
   12108:	dc 01       	movw	r26, r24
   1210a:	ec 91       	ld	r30, X
   1210c:	4e 2f       	mov	r20, r30
   1210e:	50 e0       	ldi	r21, 0x00	; 0
   12110:	fa 01       	movw	r30, r20
   12112:	31 97       	sbiw	r30, 0x01	; 1
   12114:	e8 30       	cpi	r30, 0x08	; 8
   12116:	f1 05       	cpc	r31, r1
   12118:	08 f0       	brcs	.+2      	; 0x1211c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x1e>
   1211a:	6e c0       	rjmp	.+220    	; 0x121f8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xfa>
   1211c:	8c 01       	movw	r16, r24
   1211e:	88 27       	eor	r24, r24
   12120:	e9 51       	subi	r30, 0x19	; 25
   12122:	ff 4f       	sbci	r31, 0xFF	; 255
   12124:	8f 4f       	sbci	r24, 0xFF	; 255
   12126:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
   1212a:	fd 01       	movw	r30, r26
   1212c:	41 81       	ldd	r20, Z+1	; 0x01
   1212e:	52 81       	ldd	r21, Z+2	; 0x02
   12130:	63 81       	ldd	r22, Z+3	; 0x03
   12132:	74 81       	ldd	r23, Z+4	; 0x04
   12134:	ce 01       	movw	r24, r28
   12136:	df 91       	pop	r29
   12138:	cf 91       	pop	r28
   1213a:	1f 91       	pop	r17
   1213c:	0f 91       	pop	r16
   1213e:	29 cf       	rjmp	.-430    	; 0x11f92 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE10writeFloatIfEEvT_>
   12140:	11 96       	adiw	r26, 0x01	; 1
   12142:	0d 91       	ld	r16, X+
   12144:	1c 91       	ld	r17, X
   12146:	12 97       	sbiw	r26, 0x02	; 2
   12148:	6b e5       	ldi	r22, 0x5B	; 91
   1214a:	ce 01       	movw	r24, r28
   1214c:	4c de       	rcall	.-872    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1214e:	f8 01       	movw	r30, r16
   12150:	02 81       	ldd	r16, Z+2	; 0x02
   12152:	13 81       	ldd	r17, Z+3	; 0x03
   12154:	01 15       	cp	r16, r1
   12156:	11 05       	cpc	r17, r1
   12158:	71 f0       	breq	.+28     	; 0x12176 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   1215a:	be 01       	movw	r22, r28
   1215c:	c8 01       	movw	r24, r16
   1215e:	02 96       	adiw	r24, 0x02	; 2
   12160:	ce df       	rcall	.-100    	; 0x120fe <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12162:	d8 01       	movw	r26, r16
   12164:	0d 91       	ld	r16, X+
   12166:	1c 91       	ld	r17, X
   12168:	01 15       	cp	r16, r1
   1216a:	11 05       	cpc	r17, r1
   1216c:	21 f0       	breq	.+8      	; 0x12176 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x78>
   1216e:	6c e2       	ldi	r22, 0x2C	; 44
   12170:	ce 01       	movw	r24, r28
   12172:	39 de       	rcall	.-910    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12174:	ef cf       	rjmp	.-34     	; 0x12154 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0x56>
   12176:	6d e5       	ldi	r22, 0x5D	; 93
   12178:	ce 01       	movw	r24, r28
   1217a:	df 91       	pop	r29
   1217c:	cf 91       	pop	r28
   1217e:	1f 91       	pop	r17
   12180:	0f 91       	pop	r16
   12182:	31 ce       	rjmp	.-926    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12184:	fd 01       	movw	r30, r26
   12186:	81 81       	ldd	r24, Z+1	; 0x01
   12188:	92 81       	ldd	r25, Z+2	; 0x02
   1218a:	df 91       	pop	r29
   1218c:	cf 91       	pop	r28
   1218e:	1f 91       	pop	r17
   12190:	0f 91       	pop	r16
   12192:	37 c0       	rjmp	.+110    	; 0x12202 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   12194:	11 96       	adiw	r26, 0x01	; 1
   12196:	6d 91       	ld	r22, X+
   12198:	7c 91       	ld	r23, X
   1219a:	12 97       	sbiw	r26, 0x02	; 2
   1219c:	ce 01       	movw	r24, r28
   1219e:	df 91       	pop	r29
   121a0:	cf 91       	pop	r28
   121a2:	1f 91       	pop	r17
   121a4:	0f 91       	pop	r16
   121a6:	57 ce       	rjmp	.-850    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   121a8:	fd 01       	movw	r30, r26
   121aa:	61 81       	ldd	r22, Z+1	; 0x01
   121ac:	72 81       	ldd	r23, Z+2	; 0x02
   121ae:	1e c0       	rjmp	.+60     	; 0x121ec <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   121b0:	6d e2       	ldi	r22, 0x2D	; 45
   121b2:	ce 01       	movw	r24, r28
   121b4:	18 de       	rcall	.-976    	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   121b6:	d8 01       	movw	r26, r16
   121b8:	11 96       	adiw	r26, 0x01	; 1
   121ba:	4d 91       	ld	r20, X+
   121bc:	5d 91       	ld	r21, X+
   121be:	6d 91       	ld	r22, X+
   121c0:	7c 91       	ld	r23, X
   121c2:	14 97       	sbiw	r26, 0x04	; 4
   121c4:	ce 01       	movw	r24, r28
   121c6:	df 91       	pop	r29
   121c8:	cf 91       	pop	r28
   121ca:	1f 91       	pop	r17
   121cc:	0f 91       	pop	r16
   121ce:	9d ce       	rjmp	.-710    	; 0x11f0a <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE12writeIntegerImEEvT_>
   121d0:	fd 01       	movw	r30, r26
   121d2:	81 81       	ldd	r24, Z+1	; 0x01
   121d4:	92 81       	ldd	r25, Z+2	; 0x02
   121d6:	a3 81       	ldd	r26, Z+3	; 0x03
   121d8:	b4 81       	ldd	r27, Z+4	; 0x04
   121da:	89 2b       	or	r24, r25
   121dc:	8a 2b       	or	r24, r26
   121de:	8b 2b       	or	r24, r27
   121e0:	19 f4       	brne	.+6      	; 0x121e8 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xea>
   121e2:	66 e8       	ldi	r22, 0x86	; 134
   121e4:	77 e0       	ldi	r23, 0x07	; 7
   121e6:	02 c0       	rjmp	.+4      	; 0x121ec <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_+0xee>
   121e8:	61 e8       	ldi	r22, 0x81	; 129
   121ea:	77 e0       	ldi	r23, 0x07	; 7
   121ec:	ce 01       	movw	r24, r28
   121ee:	df 91       	pop	r29
   121f0:	cf 91       	pop	r28
   121f2:	1f 91       	pop	r17
   121f4:	0f 91       	pop	r16
   121f6:	06 ce       	rjmp	.-1012   	; 0x11e04 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEPKc>
   121f8:	df 91       	pop	r29
   121fa:	cf 91       	pop	r28
   121fc:	1f 91       	pop	r17
   121fe:	0f 91       	pop	r16
   12200:	08 95       	ret

00012202 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>:
   12202:	0f 93       	push	r16
   12204:	1f 93       	push	r17
   12206:	cf 93       	push	r28
   12208:	df 93       	push	r29
   1220a:	8c 01       	movw	r16, r24
   1220c:	eb 01       	movw	r28, r22
   1220e:	6b e7       	ldi	r22, 0x7B	; 123
   12210:	ce 01       	movw	r24, r28
   12212:	e9 dd       	rcall	.-1070   	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12214:	f8 01       	movw	r30, r16
   12216:	02 81       	ldd	r16, Z+2	; 0x02
   12218:	13 81       	ldd	r17, Z+3	; 0x03
   1221a:	01 15       	cp	r16, r1
   1221c:	11 05       	cpc	r17, r1
   1221e:	b1 f0       	breq	.+44     	; 0x1224c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   12220:	f8 01       	movw	r30, r16
   12222:	62 81       	ldd	r22, Z+2	; 0x02
   12224:	73 81       	ldd	r23, Z+3	; 0x03
   12226:	ce 01       	movw	r24, r28
   12228:	16 de       	rcall	.-980    	; 0x11e56 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE11writeStringEPKc>
   1222a:	6a e3       	ldi	r22, 0x3A	; 58
   1222c:	ce 01       	movw	r24, r28
   1222e:	db dd       	rcall	.-1098   	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   12230:	be 01       	movw	r22, r28
   12232:	c8 01       	movw	r24, r16
   12234:	04 96       	adiw	r24, 0x04	; 4
   12236:	63 df       	rcall	.-314    	; 0x120fe <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_11JsonVariantERS6_>
   12238:	f8 01       	movw	r30, r16
   1223a:	00 81       	ld	r16, Z
   1223c:	11 81       	ldd	r17, Z+1	; 0x01
   1223e:	01 15       	cp	r16, r1
   12240:	11 05       	cpc	r17, r1
   12242:	21 f0       	breq	.+8      	; 0x1224c <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x4a>
   12244:	6c e2       	ldi	r22, 0x2C	; 44
   12246:	ce 01       	movw	r24, r28
   12248:	ce dd       	rcall	.-1124   	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>
   1224a:	e7 cf       	rjmp	.-50     	; 0x1221a <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_+0x18>
   1224c:	6d e7       	ldi	r22, 0x7D	; 125
   1224e:	ce 01       	movw	r24, r28
   12250:	df 91       	pop	r29
   12252:	cf 91       	pop	r28
   12254:	1f 91       	pop	r17
   12256:	0f 91       	pop	r16
   12258:	c6 cd       	rjmp	.-1140   	; 0x11de6 <_ZN11ArduinoJson9Internals10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEE8writeRawEc>

0001225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>:
   1225a:	cf 93       	push	r28
   1225c:	df 93       	push	r29
   1225e:	cd b7       	in	r28, 0x3d	; 61
   12260:	de b7       	in	r29, 0x3e	; 62
   12262:	2f 97       	sbiw	r28, 0x0f	; 15
   12264:	0f b6       	in	r0, 0x3f	; 63
   12266:	f8 94       	cli
   12268:	de bf       	out	0x3e, r29	; 62
   1226a:	0f be       	out	0x3f, r0	; 63
   1226c:	cd bf       	out	0x3d, r28	; 61
   1226e:	41 50       	subi	r20, 0x01	; 1
   12270:	51 09       	sbc	r21, r1
   12272:	46 0f       	add	r20, r22
   12274:	57 1f       	adc	r21, r23
   12276:	5a 87       	std	Y+10, r21	; 0x0a
   12278:	49 87       	std	Y+9, r20	; 0x09
   1227a:	7c 87       	std	Y+12, r23	; 0x0c
   1227c:	6b 87       	std	Y+11, r22	; 0x0b
   1227e:	fb 01       	movw	r30, r22
   12280:	10 82       	st	Z, r1
   12282:	9e 01       	movw	r18, r28
   12284:	27 5f       	subi	r18, 0xF7	; 247
   12286:	3f 4f       	sbci	r19, 0xFF	; 255
   12288:	3e 87       	std	Y+14, r19	; 0x0e
   1228a:	2d 87       	std	Y+13, r18	; 0x0d
   1228c:	2f 85       	ldd	r18, Y+15	; 0x0f
   1228e:	20 78       	andi	r18, 0x80	; 128
   12290:	20 62       	ori	r18, 0x20	; 32
   12292:	20 68       	ori	r18, 0x80	; 128
   12294:	2f 87       	std	Y+15, r18	; 0x0f
   12296:	9e 01       	movw	r18, r28
   12298:	23 5f       	subi	r18, 0xF3	; 243
   1229a:	3f 4f       	sbci	r19, 0xFF	; 255
   1229c:	3f 83       	std	Y+7, r19	; 0x07
   1229e:	2e 83       	std	Y+6, r18	; 0x06
   122a0:	1d 82       	std	Y+5, r1	; 0x05
   122a2:	18 86       	std	Y+8, r1	; 0x08
   122a4:	28 50       	subi	r18, 0x08	; 8
   122a6:	31 09       	sbc	r19, r1
   122a8:	3a 83       	std	Y+2, r19	; 0x02
   122aa:	29 83       	std	Y+1, r18	; 0x01
   122ac:	1c 82       	std	Y+4, r1	; 0x04
   122ae:	1b 82       	std	Y+3, r1	; 0x03
   122b0:	be 01       	movw	r22, r28
   122b2:	6f 5f       	subi	r22, 0xFF	; 255
   122b4:	7f 4f       	sbci	r23, 0xFF	; 255
   122b6:	a5 df       	rcall	.-182    	; 0x12202 <_ZN11ArduinoJson9Internals14JsonSerializerINS0_10JsonWriterINS0_10PrettyfierINS0_19StaticStringBuilderEEEEEE9serializeERKNS_10JsonObjectERS6_>
   122b8:	8b 81       	ldd	r24, Y+3	; 0x03
   122ba:	9c 81       	ldd	r25, Y+4	; 0x04
   122bc:	2f 96       	adiw	r28, 0x0f	; 15
   122be:	0f b6       	in	r0, 0x3f	; 63
   122c0:	f8 94       	cli
   122c2:	de bf       	out	0x3e, r29	; 62
   122c4:	0f be       	out	0x3f, r0	; 63
   122c6:	cd bf       	out	0x3d, r28	; 61
   122c8:	df 91       	pop	r29
   122ca:	cf 91       	pop	r28
   122cc:	08 95       	ret

000122ce <_Z12Pub_Sub_DataPcPhjh>:
   122ce:	2f 92       	push	r2
   122d0:	3f 92       	push	r3
   122d2:	4f 92       	push	r4
   122d4:	5f 92       	push	r5
   122d6:	6f 92       	push	r6
   122d8:	7f 92       	push	r7
   122da:	8f 92       	push	r8
   122dc:	9f 92       	push	r9
   122de:	af 92       	push	r10
   122e0:	bf 92       	push	r11
   122e2:	cf 92       	push	r12
   122e4:	df 92       	push	r13
   122e6:	ef 92       	push	r14
   122e8:	ff 92       	push	r15
   122ea:	0f 93       	push	r16
   122ec:	1f 93       	push	r17
   122ee:	cf 93       	push	r28
   122f0:	df 93       	push	r29
   122f2:	cd b7       	in	r28, 0x3d	; 61
   122f4:	de b7       	in	r29, 0x3e	; 62
   122f6:	cb 56       	subi	r28, 0x6B	; 107
   122f8:	d6 40       	sbci	r29, 0x06	; 6
   122fa:	0f b6       	in	r0, 0x3f	; 63
   122fc:	f8 94       	cli
   122fe:	de bf       	out	0x3e, r29	; 62
   12300:	0f be       	out	0x3f, r0	; 63
   12302:	cd bf       	out	0x3d, r28	; 61
   12304:	ae 01       	movw	r20, r28
   12306:	47 5f       	subi	r20, 0xF7	; 247
   12308:	5f 4f       	sbci	r21, 0xFF	; 255
   1230a:	5c 83       	std	Y+4, r21	; 0x04
   1230c:	4b 83       	std	Y+3, r20	; 0x03
   1230e:	4c e2       	ldi	r20, 0x2C	; 44
   12310:	56 e0       	ldi	r21, 0x06	; 6
   12312:	5e 83       	std	Y+6, r21	; 0x06
   12314:	4d 83       	std	Y+5, r20	; 0x05
   12316:	18 86       	std	Y+8, r1	; 0x08
   12318:	1f 82       	std	Y+7, r1	; 0x07
   1231a:	45 ea       	ldi	r20, 0xA5	; 165
   1231c:	57 e0       	ldi	r21, 0x07	; 7
   1231e:	5a 83       	std	Y+2, r21	; 0x02
   12320:	49 83       	std	Y+1, r20	; 0x01
   12322:	21 30       	cpi	r18, 0x01	; 1
   12324:	11 f0       	breq	.+4      	; 0x1232a <_Z12Pub_Sub_DataPcPhjh+0x5c>
   12326:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   1232a:	61 15       	cp	r22, r1
   1232c:	71 05       	cpc	r23, r1
   1232e:	19 f4       	brne	.+6      	; 0x12336 <_Z12Pub_Sub_DataPcPhjh+0x68>
   12330:	24 e6       	ldi	r18, 0x64	; 100
   12332:	37 e0       	ldi	r19, 0x07	; 7
   12334:	01 c0       	rjmp	.+2      	; 0x12338 <_Z12Pub_Sub_DataPcPhjh+0x6a>
   12336:	9b 01       	movw	r18, r22
   12338:	1c 01       	movw	r2, r24
   1233a:	2e 01       	movw	r4, r28
   1233c:	4b ec       	ldi	r20, 0xCB	; 203
   1233e:	44 1a       	sub	r4, r20
   12340:	49 ef       	ldi	r20, 0xF9	; 249
   12342:	54 0a       	sbc	r5, r20
   12344:	ce 01       	movw	r24, r28
   12346:	01 96       	adiw	r24, 0x01	; 1
   12348:	d2 01       	movw	r26, r4
   1234a:	11 96       	adiw	r26, 0x01	; 1
   1234c:	9c 93       	st	X, r25
   1234e:	8e 93       	st	-X, r24
   12350:	13 96       	adiw	r26, 0x03	; 3
   12352:	3c 93       	st	X, r19
   12354:	2e 93       	st	-X, r18
   12356:	12 97       	sbiw	r26, 0x02	; 2
   12358:	15 96       	adiw	r26, 0x05	; 5
   1235a:	7c 93       	st	X, r23
   1235c:	6e 93       	st	-X, r22
   1235e:	14 97       	sbiw	r26, 0x04	; 4
   12360:	8a e0       	ldi	r24, 0x0A	; 10
   12362:	16 96       	adiw	r26, 0x06	; 6
   12364:	8c 93       	st	X, r24
   12366:	c2 01       	movw	r24, r4
   12368:	39 d9       	rcall	.-3470   	; 0x115dc <_ZN11ArduinoJson9Internals10JsonParserINS0_17CharPointerTraitsIhE6ReaderENS0_12StringWriterIhEEE11parseObjectEv>
   1236a:	3c 01       	movw	r6, r24
   1236c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12370:	81 30       	cpi	r24, 0x01	; 1
   12372:	31 f4       	brne	.+12     	; 0x12380 <_Z12Pub_Sub_DataPcPhjh+0xb2>
   12374:	69 e2       	ldi	r22, 0x29	; 41
   12376:	7b e3       	ldi	r23, 0x3B	; 59
   12378:	8f e6       	ldi	r24, 0x6F	; 111
   1237a:	96 e1       	ldi	r25, 0x16	; 22
   1237c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   12380:	f3 01       	movw	r30, r6
   12382:	80 81       	ld	r24, Z
   12384:	91 81       	ldd	r25, Z+1	; 0x01
   12386:	89 2b       	or	r24, r25
   12388:	11 f4       	brne	.+4      	; 0x1238e <_Z12Pub_Sub_DataPcPhjh+0xc0>
   1238a:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   1238e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12392:	81 30       	cpi	r24, 0x01	; 1
   12394:	31 f4       	brne	.+12     	; 0x123a2 <_Z12Pub_Sub_DataPcPhjh+0xd4>
   12396:	60 e1       	ldi	r22, 0x10	; 16
   12398:	7b e3       	ldi	r23, 0x3B	; 59
   1239a:	8f e6       	ldi	r24, 0x6F	; 111
   1239c:	96 e1       	ldi	r25, 0x16	; 22
   1239e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   123a2:	b1 01       	movw	r22, r2
   123a4:	80 e9       	ldi	r24, 0x90	; 144
   123a6:	9e e0       	ldi	r25, 0x0E	; 14
   123a8:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   123ac:	89 2b       	or	r24, r25
   123ae:	39 f5       	brne	.+78     	; 0x123fe <_Z12Pub_Sub_DataPcPhjh+0x130>
   123b0:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   123b4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   123b8:	81 30       	cpi	r24, 0x01	; 1
   123ba:	51 f4       	brne	.+20     	; 0x123d0 <_Z12Pub_Sub_DataPcPhjh+0x102>
   123bc:	64 ee       	ldi	r22, 0xE4	; 228
   123be:	7a e3       	ldi	r23, 0x3A	; 58
   123c0:	8f e6       	ldi	r24, 0x6F	; 111
   123c2:	96 e1       	ldi	r25, 0x16	; 22
   123c4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   123c8:	8f e6       	ldi	r24, 0x6F	; 111
   123ca:	96 e1       	ldi	r25, 0x16	; 22
   123cc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   123d0:	81 e0       	ldi	r24, 0x01	; 1
   123d2:	80 93 d6 15 	sts	0x15D6, r24	; 0x8015d6 <_sRuble_Parameters+0x71>
   123d6:	88 e0       	ldi	r24, 0x08	; 8
   123d8:	c3 5a       	subi	r28, 0xA3	; 163
   123da:	d9 4f       	sbci	r29, 0xF9	; 249
   123dc:	88 83       	st	Y, r24
   123de:	cd 55       	subi	r28, 0x5D	; 93
   123e0:	d6 40       	sbci	r29, 0x06	; 6
   123e2:	be 01       	movw	r22, r28
   123e4:	63 5a       	subi	r22, 0xA3	; 163
   123e6:	79 4f       	sbci	r23, 0xF9	; 249
   123e8:	8c e7       	ldi	r24, 0x7C	; 124
   123ea:	94 e0       	ldi	r25, 0x04	; 4
   123ec:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   123f0:	f1 e0       	ldi	r31, 0x01	; 1
   123f2:	ce 59       	subi	r28, 0x9E	; 158
   123f4:	d9 4f       	sbci	r29, 0xF9	; 249
   123f6:	f8 83       	st	Y, r31
   123f8:	c2 56       	subi	r28, 0x62	; 98
   123fa:	d6 40       	sbci	r29, 0x06	; 6
   123fc:	05 c0       	rjmp	.+10     	; 0x12408 <_Z12Pub_Sub_DataPcPhjh+0x13a>
   123fe:	ce 59       	subi	r28, 0x9E	; 158
   12400:	d9 4f       	sbci	r29, 0xF9	; 249
   12402:	18 82       	st	Y, r1
   12404:	c2 56       	subi	r28, 0x62	; 98
   12406:	d6 40       	sbci	r29, 0x06	; 6
   12408:	b1 01       	movw	r22, r2
   1240a:	8b ec       	ldi	r24, 0xCB	; 203
   1240c:	9e e0       	ldi	r25, 0x0E	; 14
   1240e:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   12412:	89 2b       	or	r24, r25
   12414:	09 f0       	breq	.+2      	; 0x12418 <_Z12Pub_Sub_DataPcPhjh+0x14a>
   12416:	b1 c0       	rjmp	.+354    	; 0x1257a <_Z12Pub_Sub_DataPcPhjh+0x2ac>
   12418:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1241c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12420:	81 30       	cpi	r24, 0x01	; 1
   12422:	51 f4       	brne	.+20     	; 0x12438 <_Z12Pub_Sub_DataPcPhjh+0x16a>
   12424:	6e ec       	ldi	r22, 0xCE	; 206
   12426:	7a e3       	ldi	r23, 0x3A	; 58
   12428:	8f e6       	ldi	r24, 0x6F	; 111
   1242a:	96 e1       	ldi	r25, 0x16	; 22
   1242c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   12430:	8f e6       	ldi	r24, 0x6F	; 111
   12432:	96 e1       	ldi	r25, 0x16	; 22
   12434:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12438:	80 91 1a 16 	lds	r24, 0x161A	; 0x80161a <_sRuble_Parameters+0xb5>
   1243c:	81 30       	cpi	r24, 0x01	; 1
   1243e:	09 f4       	brne	.+2      	; 0x12442 <_Z12Pub_Sub_DataPcPhjh+0x174>
   12440:	88 c0       	rjmp	.+272    	; 0x12552 <_Z12Pub_Sub_DataPcPhjh+0x284>
   12442:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   12446:	82 30       	cpi	r24, 0x02	; 2
   12448:	09 f4       	brne	.+2      	; 0x1244c <_Z12Pub_Sub_DataPcPhjh+0x17e>
   1244a:	8a c0       	rjmp	.+276    	; 0x12560 <_Z12Pub_Sub_DataPcPhjh+0x292>
   1244c:	84 30       	cpi	r24, 0x04	; 4
   1244e:	09 f4       	brne	.+2      	; 0x12452 <_Z12Pub_Sub_DataPcPhjh+0x184>
   12450:	8e c0       	rjmp	.+284    	; 0x1256e <_Z12Pub_Sub_DataPcPhjh+0x2a0>
   12452:	6a ec       	ldi	r22, 0xCA	; 202
   12454:	7a e3       	ldi	r23, 0x3A	; 58
   12456:	c3 01       	movw	r24, r6
   12458:	17 da       	rcall	.-3026   	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1245a:	88 23       	and	r24, r24
   1245c:	09 f4       	brne	.+2      	; 0x12460 <_Z12Pub_Sub_DataPcPhjh+0x192>
   1245e:	70 c0       	rjmp	.+224    	; 0x12540 <_Z12Pub_Sub_DataPcPhjh+0x272>
   12460:	8f 30       	cpi	r24, 0x0F	; 15
   12462:	10 f0       	brcs	.+4      	; 0x12468 <_Z12Pub_Sub_DataPcPhjh+0x19a>
   12464:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   12468:	28 2f       	mov	r18, r24
   1246a:	30 e0       	ldi	r19, 0x00	; 0
   1246c:	21 50       	subi	r18, 0x01	; 1
   1246e:	31 09       	sbc	r19, r1
   12470:	96 e0       	ldi	r25, 0x06	; 6
   12472:	92 9f       	mul	r25, r18
   12474:	f0 01       	movw	r30, r0
   12476:	93 9f       	mul	r25, r19
   12478:	f0 0d       	add	r31, r0
   1247a:	11 24       	eor	r1, r1
   1247c:	e3 50       	subi	r30, 0x03	; 3
   1247e:	f3 4f       	sbci	r31, 0xF3	; 243
   12480:	90 81       	ld	r25, Z
   12482:	99 23       	and	r25, r25
   12484:	11 f4       	brne	.+4      	; 0x1248a <_Z12Pub_Sub_DataPcPhjh+0x1bc>
   12486:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   1248a:	80 93 0e 16 	sts	0x160E, r24	; 0x80160e <_sRuble_Parameters+0xa9>
   1248e:	81 30       	cpi	r24, 0x01	; 1
   12490:	11 f4       	brne	.+4      	; 0x12496 <_Z12Pub_Sub_DataPcPhjh+0x1c8>
   12492:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   12496:	68 ec       	ldi	r22, 0xC8	; 200
   12498:	7a e3       	ldi	r23, 0x3A	; 58
   1249a:	c3 01       	movw	r24, r6
   1249c:	8a d9       	rcall	.-3308   	; 0x117b2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1249e:	2c e3       	ldi	r18, 0x3C	; 60
   124a0:	ac 01       	movw	r20, r24
   124a2:	24 9f       	mul	r18, r20
   124a4:	c0 01       	movw	r24, r0
   124a6:	25 9f       	mul	r18, r21
   124a8:	90 0d       	add	r25, r0
   124aa:	11 24       	eor	r1, r1
   124ac:	90 93 7c 15 	sts	0x157C, r25	; 0x80157c <_sRuble_Parameters+0x17>
   124b0:	80 93 7b 15 	sts	0x157B, r24	; 0x80157b <_sRuble_Parameters+0x16>
   124b4:	83 e0       	ldi	r24, 0x03	; 3
   124b6:	80 93 8e 15 	sts	0x158E, r24	; 0x80158e <_sRuble_Parameters+0x29>
   124ba:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   124be:	81 30       	cpi	r24, 0x01	; 1
   124c0:	31 f5       	brne	.+76     	; 0x1250e <_Z12Pub_Sub_DataPcPhjh+0x240>
   124c2:	69 eb       	ldi	r22, 0xB9	; 185
   124c4:	7a e3       	ldi	r23, 0x3A	; 58
   124c6:	8f e6       	ldi	r24, 0x6F	; 111
   124c8:	96 e1       	ldi	r25, 0x16	; 22
   124ca:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   124ce:	8f e6       	ldi	r24, 0x6F	; 111
   124d0:	96 e1       	ldi	r25, 0x16	; 22
   124d2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   124d6:	60 91 7b 15 	lds	r22, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   124da:	70 91 7c 15 	lds	r23, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
   124de:	4a e0       	ldi	r20, 0x0A	; 10
   124e0:	50 e0       	ldi	r21, 0x00	; 0
   124e2:	8f e6       	ldi	r24, 0x6F	; 111
   124e4:	96 e1       	ldi	r25, 0x16	; 22
   124e6:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   124ea:	69 ea       	ldi	r22, 0xA9	; 169
   124ec:	7a e3       	ldi	r23, 0x3A	; 58
   124ee:	8f e6       	ldi	r24, 0x6F	; 111
   124f0:	96 e1       	ldi	r25, 0x16	; 22
   124f2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   124f6:	8f e6       	ldi	r24, 0x6F	; 111
   124f8:	96 e1       	ldi	r25, 0x16	; 22
   124fa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   124fe:	4a e0       	ldi	r20, 0x0A	; 10
   12500:	50 e0       	ldi	r21, 0x00	; 0
   12502:	60 91 0e 16 	lds	r22, 0x160E	; 0x80160e <_sRuble_Parameters+0xa9>
   12506:	8f e6       	ldi	r24, 0x6F	; 111
   12508:	96 e1       	ldi	r25, 0x16	; 22
   1250a:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   1250e:	10 92 84 15 	sts	0x1584, r1	; 0x801584 <_sRuble_Parameters+0x1f>
   12512:	10 92 83 15 	sts	0x1583, r1	; 0x801583 <_sRuble_Parameters+0x1e>
   12516:	10 92 1b 16 	sts	0x161B, r1	; 0x80161b <_sRuble_Parameters+0xb6>
   1251a:	10 92 43 16 	sts	0x1643, r1	; 0x801643 <_sRuble_Parameters+0xde>
   1251e:	80 e2       	ldi	r24, 0x20	; 32
   12520:	9c e0       	ldi	r25, 0x0C	; 12
   12522:	0e 94 0d 84 	call	0x1081a	; 0x1081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>
   12526:	61 e4       	ldi	r22, 0x41	; 65
   12528:	76 e1       	ldi	r23, 0x16	; 22
   1252a:	83 e3       	ldi	r24, 0x33	; 51
   1252c:	9e e0       	ldi	r25, 0x0E	; 14
   1252e:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   12532:	51 e0       	ldi	r21, 0x01	; 1
   12534:	ce 59       	subi	r28, 0x9E	; 158
   12536:	d9 4f       	sbci	r29, 0xF9	; 249
   12538:	58 83       	st	Y, r21
   1253a:	c2 56       	subi	r28, 0x62	; 98
   1253c:	d6 40       	sbci	r29, 0x06	; 6
   1253e:	1d c0       	rjmp	.+58     	; 0x1257a <_Z12Pub_Sub_DataPcPhjh+0x2ac>
   12540:	10 92 0e 16 	sts	0x160E, r1	; 0x80160e <_sRuble_Parameters+0xa9>
   12544:	81 e0       	ldi	r24, 0x01	; 1
   12546:	ce 59       	subi	r28, 0x9E	; 158
   12548:	d9 4f       	sbci	r29, 0xF9	; 249
   1254a:	88 83       	st	Y, r24
   1254c:	c2 56       	subi	r28, 0x62	; 98
   1254e:	d6 40       	sbci	r29, 0x06	; 6
   12550:	14 c0       	rjmp	.+40     	; 0x1257a <_Z12Pub_Sub_DataPcPhjh+0x2ac>
   12552:	91 e0       	ldi	r25, 0x01	; 1
   12554:	ce 59       	subi	r28, 0x9E	; 158
   12556:	d9 4f       	sbci	r29, 0xF9	; 249
   12558:	98 83       	st	Y, r25
   1255a:	c2 56       	subi	r28, 0x62	; 98
   1255c:	d6 40       	sbci	r29, 0x06	; 6
   1255e:	0d c0       	rjmp	.+26     	; 0x1257a <_Z12Pub_Sub_DataPcPhjh+0x2ac>
   12560:	a1 e0       	ldi	r26, 0x01	; 1
   12562:	ce 59       	subi	r28, 0x9E	; 158
   12564:	d9 4f       	sbci	r29, 0xF9	; 249
   12566:	a8 83       	st	Y, r26
   12568:	c2 56       	subi	r28, 0x62	; 98
   1256a:	d6 40       	sbci	r29, 0x06	; 6
   1256c:	06 c0       	rjmp	.+12     	; 0x1257a <_Z12Pub_Sub_DataPcPhjh+0x2ac>
   1256e:	b1 e0       	ldi	r27, 0x01	; 1
   12570:	ce 59       	subi	r28, 0x9E	; 158
   12572:	d9 4f       	sbci	r29, 0xF9	; 249
   12574:	b8 83       	st	Y, r27
   12576:	c2 56       	subi	r28, 0x62	; 98
   12578:	d6 40       	sbci	r29, 0x06	; 6
   1257a:	b1 01       	movw	r22, r2
   1257c:	8e ed       	ldi	r24, 0xDE	; 222
   1257e:	9e e0       	ldi	r25, 0x0E	; 14
   12580:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   12584:	89 2b       	or	r24, r25
   12586:	e9 f4       	brne	.+58     	; 0x125c2 <_Z12Pub_Sub_DataPcPhjh+0x2f4>
   12588:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1258c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12590:	81 30       	cpi	r24, 0x01	; 1
   12592:	89 f4       	brne	.+34     	; 0x125b6 <_Z12Pub_Sub_DataPcPhjh+0x2e8>
   12594:	67 e8       	ldi	r22, 0x87	; 135
   12596:	7a e3       	ldi	r23, 0x3A	; 58
   12598:	8f e6       	ldi	r24, 0x6F	; 111
   1259a:	96 e1       	ldi	r25, 0x16	; 22
   1259c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   125a0:	8f e6       	ldi	r24, 0x6F	; 111
   125a2:	96 e1       	ldi	r25, 0x16	; 22
   125a4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   125a8:	e1 e0       	ldi	r30, 0x01	; 1
   125aa:	ce 59       	subi	r28, 0x9E	; 158
   125ac:	d9 4f       	sbci	r29, 0xF9	; 249
   125ae:	e8 83       	st	Y, r30
   125b0:	c2 56       	subi	r28, 0x62	; 98
   125b2:	d6 40       	sbci	r29, 0x06	; 6
   125b4:	06 c0       	rjmp	.+12     	; 0x125c2 <_Z12Pub_Sub_DataPcPhjh+0x2f4>
   125b6:	f1 e0       	ldi	r31, 0x01	; 1
   125b8:	ce 59       	subi	r28, 0x9E	; 158
   125ba:	d9 4f       	sbci	r29, 0xF9	; 249
   125bc:	f8 83       	st	Y, r31
   125be:	c2 56       	subi	r28, 0x62	; 98
   125c0:	d6 40       	sbci	r29, 0x06	; 6
   125c2:	b1 01       	movw	r22, r2
   125c4:	8c ea       	ldi	r24, 0xAC	; 172
   125c6:	9e e0       	ldi	r25, 0x0E	; 14
   125c8:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   125cc:	89 2b       	or	r24, r25
   125ce:	09 f0       	breq	.+2      	; 0x125d2 <_Z12Pub_Sub_DataPcPhjh+0x304>
   125d0:	3f c7       	rjmp	.+3710   	; 0x13450 <_Z12Pub_Sub_DataPcPhjh+0x1182>
   125d2:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   125d6:	63 e8       	ldi	r22, 0x83	; 131
   125d8:	7a e3       	ldi	r23, 0x3A	; 58
   125da:	c3 01       	movw	r24, r6
   125dc:	55 d9       	rcall	.-3414   	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   125de:	c2 5a       	subi	r28, 0xA2	; 162
   125e0:	d9 4f       	sbci	r29, 0xF9	; 249
   125e2:	88 83       	st	Y, r24
   125e4:	ce 55       	subi	r28, 0x5E	; 94
   125e6:	d6 40       	sbci	r29, 0x06	; 6
   125e8:	88 36       	cpi	r24, 0x68	; 104
   125ea:	11 f4       	brne	.+4      	; 0x125f0 <_Z12Pub_Sub_DataPcPhjh+0x322>
   125ec:	0c 94 84 a1 	jmp	0x14308	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   125f0:	81 50       	subi	r24, 0x01	; 1
   125f2:	c9 59       	subi	r28, 0x99	; 153
   125f4:	d9 4f       	sbci	r29, 0xF9	; 249
   125f6:	88 83       	st	Y, r24
   125f8:	c7 56       	subi	r28, 0x67	; 103
   125fa:	d6 40       	sbci	r29, 0x06	; 6
   125fc:	82 37       	cpi	r24, 0x72	; 114
   125fe:	08 f0       	brcs	.+2      	; 0x12602 <_Z12Pub_Sub_DataPcPhjh+0x334>
   12600:	27 c7       	rjmp	.+3662   	; 0x13450 <_Z12Pub_Sub_DataPcPhjh+0x1182>
   12602:	c2 5a       	subi	r28, 0xA2	; 162
   12604:	d9 4f       	sbci	r29, 0xF9	; 249
   12606:	28 81       	ld	r18, Y
   12608:	ce 55       	subi	r28, 0x5E	; 94
   1260a:	d6 40       	sbci	r29, 0x06	; 6
   1260c:	2f 30       	cpi	r18, 0x0F	; 15
   1260e:	90 f4       	brcc	.+36     	; 0x12634 <_Z12Pub_Sub_DataPcPhjh+0x366>
   12610:	82 2f       	mov	r24, r18
   12612:	90 e0       	ldi	r25, 0x00	; 0
   12614:	01 97       	sbiw	r24, 0x01	; 1
   12616:	26 e0       	ldi	r18, 0x06	; 6
   12618:	28 9f       	mul	r18, r24
   1261a:	f0 01       	movw	r30, r0
   1261c:	29 9f       	mul	r18, r25
   1261e:	f0 0d       	add	r31, r0
   12620:	11 24       	eor	r1, r1
   12622:	e3 50       	subi	r30, 0x03	; 3
   12624:	f3 4f       	sbci	r31, 0xF3	; 243
   12626:	c2 5a       	subi	r28, 0xA2	; 162
   12628:	d9 4f       	sbci	r29, 0xF9	; 249
   1262a:	38 81       	ld	r19, Y
   1262c:	ce 55       	subi	r28, 0x5E	; 94
   1262e:	d6 40       	sbci	r29, 0x06	; 6
   12630:	30 83       	st	Z, r19
   12632:	14 c0       	rjmp	.+40     	; 0x1265c <_Z12Pub_Sub_DataPcPhjh+0x38e>
   12634:	c2 5a       	subi	r28, 0xA2	; 162
   12636:	d9 4f       	sbci	r29, 0xF9	; 249
   12638:	48 81       	ld	r20, Y
   1263a:	ce 55       	subi	r28, 0x5E	; 94
   1263c:	d6 40       	sbci	r29, 0x06	; 6
   1263e:	45 36       	cpi	r20, 0x65	; 101
   12640:	68 f0       	brcs	.+26     	; 0x1265c <_Z12Pub_Sub_DataPcPhjh+0x38e>
   12642:	84 2f       	mov	r24, r20
   12644:	90 e0       	ldi	r25, 0x00	; 0
   12646:	85 56       	subi	r24, 0x65	; 101
   12648:	91 09       	sbc	r25, r1
   1264a:	2b e1       	ldi	r18, 0x1B	; 27
   1264c:	28 9f       	mul	r18, r24
   1264e:	f0 01       	movw	r30, r0
   12650:	29 9f       	mul	r18, r25
   12652:	f0 0d       	add	r31, r0
   12654:	11 24       	eor	r1, r1
   12656:	e1 56       	subi	r30, 0x61	; 97
   12658:	f0 4f       	sbci	r31, 0xF0	; 240
   1265a:	41 83       	std	Z+1, r20	; 0x01
   1265c:	88 e0       	ldi	r24, 0x08	; 8
   1265e:	d2 01       	movw	r26, r4
   12660:	e8 2f       	mov	r30, r24
   12662:	1d 92       	st	X+, r1
   12664:	ea 95       	dec	r30
   12666:	e9 f7       	brne	.-6      	; 0x12662 <_Z12Pub_Sub_DataPcPhjh+0x394>
   12668:	52 01       	movw	r10, r4
   1266a:	f8 e0       	ldi	r31, 0x08	; 8
   1266c:	af 0e       	add	r10, r31
   1266e:	b1 1c       	adc	r11, r1
   12670:	d5 01       	movw	r26, r10
   12672:	e8 2f       	mov	r30, r24
   12674:	1d 92       	st	X+, r1
   12676:	ea 95       	dec	r30
   12678:	e9 f7       	brne	.-6      	; 0x12674 <_Z12Pub_Sub_DataPcPhjh+0x3a6>
   1267a:	62 01       	movw	r12, r4
   1267c:	f0 e1       	ldi	r31, 0x10	; 16
   1267e:	cf 0e       	add	r12, r31
   12680:	d1 1c       	adc	r13, r1
   12682:	d6 01       	movw	r26, r12
   12684:	e8 2f       	mov	r30, r24
   12686:	1d 92       	st	X+, r1
   12688:	ea 95       	dec	r30
   1268a:	e9 f7       	brne	.-6      	; 0x12686 <_Z12Pub_Sub_DataPcPhjh+0x3b8>
   1268c:	72 01       	movw	r14, r4
   1268e:	f8 e1       	ldi	r31, 0x18	; 24
   12690:	ef 0e       	add	r14, r31
   12692:	f1 1c       	adc	r15, r1
   12694:	d7 01       	movw	r26, r14
   12696:	e8 2f       	mov	r30, r24
   12698:	1d 92       	st	X+, r1
   1269a:	ea 95       	dec	r30
   1269c:	e9 f7       	brne	.-6      	; 0x12698 <_Z12Pub_Sub_DataPcPhjh+0x3ca>
   1269e:	82 01       	movw	r16, r4
   126a0:	00 5e       	subi	r16, 0xE0	; 224
   126a2:	1f 4f       	sbci	r17, 0xFF	; 255
   126a4:	d8 01       	movw	r26, r16
   126a6:	1d 92       	st	X+, r1
   126a8:	8a 95       	dec	r24
   126aa:	e9 f7       	brne	.-6      	; 0x126a6 <_Z12Pub_Sub_DataPcPhjh+0x3d8>
   126ac:	6c e7       	ldi	r22, 0x7C	; 124
   126ae:	7a e3       	ldi	r23, 0x3A	; 58
   126b0:	c3 01       	movw	r24, r6
   126b2:	07 d8       	rcall	.-4082   	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   126b4:	bc 01       	movw	r22, r24
   126b6:	c2 01       	movw	r24, r4
   126b8:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   126bc:	65 e7       	ldi	r22, 0x75	; 117
   126be:	7a e3       	ldi	r23, 0x3A	; 58
   126c0:	c3 01       	movw	r24, r6
   126c2:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   126c6:	bc 01       	movw	r22, r24
   126c8:	c5 01       	movw	r24, r10
   126ca:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   126ce:	6e e6       	ldi	r22, 0x6E	; 110
   126d0:	7a e3       	ldi	r23, 0x3A	; 58
   126d2:	c3 01       	movw	r24, r6
   126d4:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   126d8:	bc 01       	movw	r22, r24
   126da:	c6 01       	movw	r24, r12
   126dc:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   126e0:	67 e6       	ldi	r22, 0x67	; 103
   126e2:	7a e3       	ldi	r23, 0x3A	; 58
   126e4:	c3 01       	movw	r24, r6
   126e6:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   126ea:	bc 01       	movw	r22, r24
   126ec:	c7 01       	movw	r24, r14
   126ee:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   126f2:	60 e6       	ldi	r22, 0x60	; 96
   126f4:	7a e3       	ldi	r23, 0x3A	; 58
   126f6:	c3 01       	movw	r24, r6
   126f8:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   126fc:	bc 01       	movw	r22, r24
   126fe:	c8 01       	movw	r24, r16
   12700:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   12704:	c2 5a       	subi	r28, 0xA2	; 162
   12706:	d9 4f       	sbci	r29, 0xF9	; 249
   12708:	b8 81       	ld	r27, Y
   1270a:	ce 55       	subi	r28, 0x5E	; 94
   1270c:	d6 40       	sbci	r29, 0x06	; 6
   1270e:	bf 30       	cpi	r27, 0x0F	; 15
   12710:	d8 f5       	brcc	.+118    	; 0x12788 <_Z12Pub_Sub_DataPcPhjh+0x4ba>
   12712:	8b 2f       	mov	r24, r27
   12714:	90 e0       	ldi	r25, 0x00	; 0
   12716:	01 97       	sbiw	r24, 0x01	; 1
   12718:	26 e0       	ldi	r18, 0x06	; 6
   1271a:	28 9f       	mul	r18, r24
   1271c:	f0 01       	movw	r30, r0
   1271e:	29 9f       	mul	r18, r25
   12720:	f0 0d       	add	r31, r0
   12722:	11 24       	eor	r1, r1
   12724:	e2 50       	subi	r30, 0x02	; 2
   12726:	f3 4f       	sbci	r31, 0xF3	; 243
   12728:	85 e0       	ldi	r24, 0x05	; 5
   1272a:	df 01       	movw	r26, r30
   1272c:	1d 92       	st	X+, r1
   1272e:	8a 95       	dec	r24
   12730:	e9 f7       	brne	.-6      	; 0x1272c <_Z12Pub_Sub_DataPcPhjh+0x45e>
   12732:	62 01       	movw	r12, r4
   12734:	c2 5a       	subi	r28, 0xA2	; 162
   12736:	d9 4f       	sbci	r29, 0xF9	; 249
   12738:	e8 81       	ld	r30, Y
   1273a:	ce 55       	subi	r28, 0x5E	; 94
   1273c:	d6 40       	sbci	r29, 0x06	; 6
   1273e:	26 e0       	ldi	r18, 0x06	; 6
   12740:	e2 9f       	mul	r30, r18
   12742:	f0 01       	movw	r30, r0
   12744:	11 24       	eor	r1, r1
   12746:	cb 59       	subi	r28, 0x9B	; 155
   12748:	d9 4f       	sbci	r29, 0xF9	; 249
   1274a:	f9 83       	std	Y+1, r31	; 0x01
   1274c:	e8 83       	st	Y, r30
   1274e:	c5 56       	subi	r28, 0x65	; 101
   12750:	d6 40       	sbci	r29, 0x06	; 6
   12752:	e8 50       	subi	r30, 0x08	; 8
   12754:	f3 4f       	sbci	r31, 0xF3	; 243
   12756:	4f 01       	movw	r8, r30
   12758:	c2 5a       	subi	r28, 0xA2	; 162
   1275a:	d9 4f       	sbci	r29, 0xF9	; 249
   1275c:	28 81       	ld	r18, Y
   1275e:	ce 55       	subi	r28, 0x5E	; 94
   12760:	d6 40       	sbci	r29, 0x06	; 6
   12762:	fb e1       	ldi	r31, 0x1B	; 27
   12764:	2f 9f       	mul	r18, r31
   12766:	c0 01       	movw	r24, r0
   12768:	11 24       	eor	r1, r1
   1276a:	ac 01       	movw	r20, r24
   1276c:	43 50       	subi	r20, 0x03	; 3
   1276e:	5b 4f       	sbci	r21, 0xFB	; 251
   12770:	7a 01       	movw	r14, r20
   12772:	c2 01       	movw	r24, r4
   12774:	88 96       	adiw	r24, 0x28	; 40
   12776:	c6 59       	subi	r28, 0x96	; 150
   12778:	d9 4f       	sbci	r29, 0xF9	; 249
   1277a:	99 83       	std	Y+1, r25	; 0x01
   1277c:	88 83       	st	Y, r24
   1277e:	ca 56       	subi	r28, 0x6A	; 106
   12780:	d6 40       	sbci	r29, 0x06	; 6
   12782:	e5 e6       	ldi	r30, 0x65	; 101
   12784:	ae 2e       	mov	r10, r30
   12786:	48 c0       	rjmp	.+144    	; 0x12818 <_Z12Pub_Sub_DataPcPhjh+0x54a>
   12788:	c2 5a       	subi	r28, 0xA2	; 162
   1278a:	d9 4f       	sbci	r29, 0xF9	; 249
   1278c:	98 81       	ld	r25, Y
   1278e:	ce 55       	subi	r28, 0x5E	; 94
   12790:	d6 40       	sbci	r29, 0x06	; 6
   12792:	95 36       	cpi	r25, 0x65	; 101
   12794:	70 f2       	brcs	.-100    	; 0x12732 <_Z12Pub_Sub_DataPcPhjh+0x464>
   12796:	89 2f       	mov	r24, r25
   12798:	90 e0       	ldi	r25, 0x00	; 0
   1279a:	85 56       	subi	r24, 0x65	; 101
   1279c:	91 09       	sbc	r25, r1
   1279e:	2b e1       	ldi	r18, 0x1B	; 27
   127a0:	28 9f       	mul	r18, r24
   127a2:	f0 01       	movw	r30, r0
   127a4:	29 9f       	mul	r18, r25
   127a6:	f0 0d       	add	r31, r0
   127a8:	11 24       	eor	r1, r1
   127aa:	ec 55       	subi	r30, 0x5C	; 92
   127ac:	f0 4f       	sbci	r31, 0xF0	; 240
   127ae:	bc cf       	rjmp	.-136    	; 0x12728 <_Z12Pub_Sub_DataPcPhjh+0x45a>
   127b0:	90 35       	cpi	r25, 0x50	; 80
   127b2:	09 f4       	brne	.+2      	; 0x127b6 <_Z12Pub_Sub_DataPcPhjh+0x4e8>
   127b4:	79 c2       	rjmp	.+1266   	; 0x12ca8 <_Z12Pub_Sub_DataPcPhjh+0x9da>
   127b6:	80 33       	cpi	r24, 0x30	; 48
   127b8:	09 f4       	brne	.+2      	; 0x127bc <_Z12Pub_Sub_DataPcPhjh+0x4ee>
   127ba:	42 c0       	rjmp	.+132    	; 0x12840 <_Z12Pub_Sub_DataPcPhjh+0x572>
   127bc:	88 23       	and	r24, r24
   127be:	09 f4       	brne	.+2      	; 0x127c2 <_Z12Pub_Sub_DataPcPhjh+0x4f4>
   127c0:	3f c0       	rjmp	.+126    	; 0x12840 <_Z12Pub_Sub_DataPcPhjh+0x572>
   127c2:	80 53       	subi	r24, 0x30	; 48
   127c4:	91 81       	ldd	r25, Z+1	; 0x01
   127c6:	99 23       	and	r25, r25
   127c8:	31 f0       	breq	.+12     	; 0x127d6 <_Z12Pub_Sub_DataPcPhjh+0x508>
   127ca:	90 53       	subi	r25, 0x30	; 48
   127cc:	fa e0       	ldi	r31, 0x0A	; 10
   127ce:	8f 9f       	mul	r24, r31
   127d0:	90 0d       	add	r25, r0
   127d2:	11 24       	eor	r1, r1
   127d4:	89 2f       	mov	r24, r25
   127d6:	c2 5a       	subi	r28, 0xA2	; 162
   127d8:	d9 4f       	sbci	r29, 0xF9	; 249
   127da:	28 81       	ld	r18, Y
   127dc:	ce 55       	subi	r28, 0x5E	; 94
   127de:	d6 40       	sbci	r29, 0x06	; 6
   127e0:	2f 30       	cpi	r18, 0x0F	; 15
   127e2:	08 f1       	brcs	.+66     	; 0x12826 <_Z12Pub_Sub_DataPcPhjh+0x558>
   127e4:	c2 5a       	subi	r28, 0xA2	; 162
   127e6:	d9 4f       	sbci	r29, 0xF9	; 249
   127e8:	f8 81       	ld	r31, Y
   127ea:	ce 55       	subi	r28, 0x5E	; 94
   127ec:	d6 40       	sbci	r29, 0x06	; 6
   127ee:	f5 36       	cpi	r31, 0x65	; 101
   127f0:	08 f5       	brcc	.+66     	; 0x12834 <_Z12Pub_Sub_DataPcPhjh+0x566>
   127f2:	f8 e0       	ldi	r31, 0x08	; 8
   127f4:	cf 0e       	add	r12, r31
   127f6:	d1 1c       	adc	r13, r1
   127f8:	2f ef       	ldi	r18, 0xFF	; 255
   127fa:	82 1a       	sub	r8, r18
   127fc:	92 0a       	sbc	r9, r18
   127fe:	3f ef       	ldi	r19, 0xFF	; 255
   12800:	e3 1a       	sub	r14, r19
   12802:	f3 0a       	sbc	r15, r19
   12804:	c6 59       	subi	r28, 0x96	; 150
   12806:	d9 4f       	sbci	r29, 0xF9	; 249
   12808:	48 81       	ld	r20, Y
   1280a:	59 81       	ldd	r21, Y+1	; 0x01
   1280c:	ca 56       	subi	r28, 0x6A	; 106
   1280e:	d6 40       	sbci	r29, 0x06	; 6
   12810:	c4 16       	cp	r12, r20
   12812:	d5 06       	cpc	r13, r21
   12814:	09 f4       	brne	.+2      	; 0x12818 <_Z12Pub_Sub_DataPcPhjh+0x54a>
   12816:	cb c3       	rjmp	.+1942   	; 0x12fae <_Z12Pub_Sub_DataPcPhjh+0xce0>
   12818:	f6 01       	movw	r30, r12
   1281a:	80 81       	ld	r24, Z
   1281c:	98 2f       	mov	r25, r24
   1281e:	9f 7d       	andi	r25, 0xDF	; 223
   12820:	96 35       	cpi	r25, 0x56	; 86
   12822:	31 f6       	brne	.-116    	; 0x127b0 <_Z12Pub_Sub_DataPcPhjh+0x4e2>
   12824:	21 c0       	rjmp	.+66     	; 0x12868 <_Z12Pub_Sub_DataPcPhjh+0x59a>
   12826:	84 5f       	subi	r24, 0xF4	; 244
   12828:	85 32       	cpi	r24, 0x25	; 37
   1282a:	10 f4       	brcc	.+4      	; 0x12830 <_Z12Pub_Sub_DataPcPhjh+0x562>
   1282c:	d4 01       	movw	r26, r8
   1282e:	06 c0       	rjmp	.+12     	; 0x1283c <_Z12Pub_Sub_DataPcPhjh+0x56e>
   12830:	f4 01       	movw	r30, r8
   12832:	18 c0       	rjmp	.+48     	; 0x12864 <_Z12Pub_Sub_DataPcPhjh+0x596>
   12834:	84 5f       	subi	r24, 0xF4	; 244
   12836:	85 32       	cpi	r24, 0x25	; 37
   12838:	a0 f4       	brcc	.+40     	; 0x12862 <_Z12Pub_Sub_DataPcPhjh+0x594>
   1283a:	d7 01       	movw	r26, r14
   1283c:	8c 93       	st	X, r24
   1283e:	d9 cf       	rjmp	.-78     	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12840:	c2 5a       	subi	r28, 0xA2	; 162
   12842:	d9 4f       	sbci	r29, 0xF9	; 249
   12844:	f8 81       	ld	r31, Y
   12846:	ce 55       	subi	r28, 0x5E	; 94
   12848:	d6 40       	sbci	r29, 0x06	; 6
   1284a:	ff 30       	cpi	r31, 0x0F	; 15
   1284c:	18 f4       	brcc	.+6      	; 0x12854 <_Z12Pub_Sub_DataPcPhjh+0x586>
   1284e:	d4 01       	movw	r26, r8
   12850:	1c 92       	st	X, r1
   12852:	cf cf       	rjmp	.-98     	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12854:	c2 5a       	subi	r28, 0xA2	; 162
   12856:	d9 4f       	sbci	r29, 0xF9	; 249
   12858:	b8 81       	ld	r27, Y
   1285a:	ce 55       	subi	r28, 0x5E	; 94
   1285c:	d6 40       	sbci	r29, 0x06	; 6
   1285e:	b5 36       	cpi	r27, 0x65	; 101
   12860:	40 f2       	brcs	.-112    	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12862:	f7 01       	movw	r30, r14
   12864:	10 82       	st	Z, r1
   12866:	c5 cf       	rjmp	.-118    	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12868:	45 e6       	ldi	r20, 0x65	; 101
   1286a:	55 e1       	ldi	r21, 0x15	; 21
   1286c:	80 e0       	ldi	r24, 0x00	; 0
   1286e:	90 e0       	ldi	r25, 0x00	; 0
   12870:	68 2f       	mov	r22, r24
   12872:	20 e0       	ldi	r18, 0x00	; 0
   12874:	30 e0       	ldi	r19, 0x00	; 0
   12876:	70 e0       	ldi	r23, 0x00	; 0
   12878:	f9 01       	movw	r30, r18
   1287a:	ec 58       	subi	r30, 0x8C	; 140
   1287c:	ff 4f       	sbci	r31, 0xFF	; 255
   1287e:	e4 0f       	add	r30, r20
   12880:	f5 1f       	adc	r31, r21
   12882:	a0 81       	ld	r26, Z
   12884:	f6 01       	movw	r30, r12
   12886:	e2 0f       	add	r30, r18
   12888:	f3 1f       	adc	r31, r19
   1288a:	e0 81       	ld	r30, Z
   1288c:	ae 13       	cpse	r26, r30
   1288e:	01 c0       	rjmp	.+2      	; 0x12892 <_Z12Pub_Sub_DataPcPhjh+0x5c4>
   12890:	7f 5f       	subi	r23, 0xFF	; 255
   12892:	2f 5f       	subi	r18, 0xFF	; 255
   12894:	3f 4f       	sbci	r19, 0xFF	; 255
   12896:	26 30       	cpi	r18, 0x06	; 6
   12898:	31 05       	cpc	r19, r1
   1289a:	71 f7       	brne	.-36     	; 0x12878 <_Z12Pub_Sub_DataPcPhjh+0x5aa>
   1289c:	76 30       	cpi	r23, 0x06	; 6
   1289e:	09 f0       	breq	.+2      	; 0x128a2 <_Z12Pub_Sub_DataPcPhjh+0x5d4>
   128a0:	82 c0       	rjmp	.+260    	; 0x129a6 <_Z12Pub_Sub_DataPcPhjh+0x6d8>
   128a2:	20 91 55 16 	lds	r18, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   128a6:	c2 5a       	subi	r28, 0xA2	; 162
   128a8:	d9 4f       	sbci	r29, 0xF9	; 249
   128aa:	f8 81       	ld	r31, Y
   128ac:	ce 55       	subi	r28, 0x5E	; 94
   128ae:	d6 40       	sbci	r29, 0x06	; 6
   128b0:	ff 30       	cpi	r31, 0x0F	; 15
   128b2:	70 f5       	brcc	.+92     	; 0x12910 <_Z12Pub_Sub_DataPcPhjh+0x642>
   128b4:	d6 01       	movw	r26, r12
   128b6:	17 96       	adiw	r26, 0x07	; 7
   128b8:	3c 91       	ld	r19, X
   128ba:	32 33       	cpi	r19, 0x32	; 50
   128bc:	89 f0       	breq	.+34     	; 0x128e0 <_Z12Pub_Sub_DataPcPhjh+0x612>
   128be:	33 33       	cpi	r19, 0x33	; 51
   128c0:	d9 f0       	breq	.+54     	; 0x128f8 <_Z12Pub_Sub_DataPcPhjh+0x62a>
   128c2:	31 33       	cpi	r19, 0x31	; 49
   128c4:	09 f0       	breq	.+2      	; 0x128c8 <_Z12Pub_Sub_DataPcPhjh+0x5fa>
   128c6:	60 c0       	rjmp	.+192    	; 0x12988 <_Z12Pub_Sub_DataPcPhjh+0x6ba>
   128c8:	86 2f       	mov	r24, r22
   128ca:	88 0f       	add	r24, r24
   128cc:	68 0f       	add	r22, r24
   128ce:	6f 5f       	subi	r22, 0xFF	; 255
   128d0:	f4 01       	movw	r30, r8
   128d2:	60 83       	st	Z, r22
   128d4:	21 30       	cpi	r18, 0x01	; 1
   128d6:	09 f0       	breq	.+2      	; 0x128da <_Z12Pub_Sub_DataPcPhjh+0x60c>
   128d8:	6d c0       	rjmp	.+218    	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   128da:	65 e4       	ldi	r22, 0x45	; 69
   128dc:	7a e3       	ldi	r23, 0x3A	; 58
   128de:	48 c0       	rjmp	.+144    	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x6a2>
   128e0:	86 2f       	mov	r24, r22
   128e2:	88 0f       	add	r24, r24
   128e4:	68 0f       	add	r22, r24
   128e6:	6e 5f       	subi	r22, 0xFE	; 254
   128e8:	d4 01       	movw	r26, r8
   128ea:	6c 93       	st	X, r22
   128ec:	21 30       	cpi	r18, 0x01	; 1
   128ee:	09 f0       	breq	.+2      	; 0x128f2 <_Z12Pub_Sub_DataPcPhjh+0x624>
   128f0:	61 c0       	rjmp	.+194    	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   128f2:	6a e2       	ldi	r22, 0x2A	; 42
   128f4:	7a e3       	ldi	r23, 0x3A	; 58
   128f6:	3c c0       	rjmp	.+120    	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x6a2>
   128f8:	01 96       	adiw	r24, 0x01	; 1
   128fa:	98 2f       	mov	r25, r24
   128fc:	99 0f       	add	r25, r25
   128fe:	89 0f       	add	r24, r25
   12900:	f4 01       	movw	r30, r8
   12902:	80 83       	st	Z, r24
   12904:	21 30       	cpi	r18, 0x01	; 1
   12906:	09 f0       	breq	.+2      	; 0x1290a <_Z12Pub_Sub_DataPcPhjh+0x63c>
   12908:	55 c0       	rjmp	.+170    	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   1290a:	6f e0       	ldi	r22, 0x0F	; 15
   1290c:	7a e3       	ldi	r23, 0x3A	; 58
   1290e:	30 c0       	rjmp	.+96     	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x6a2>
   12910:	c2 5a       	subi	r28, 0xA2	; 162
   12912:	d9 4f       	sbci	r29, 0xF9	; 249
   12914:	f8 81       	ld	r31, Y
   12916:	ce 55       	subi	r28, 0x5E	; 94
   12918:	d6 40       	sbci	r29, 0x06	; 6
   1291a:	f5 36       	cpi	r31, 0x65	; 101
   1291c:	a8 f1       	brcs	.+106    	; 0x12988 <_Z12Pub_Sub_DataPcPhjh+0x6ba>
   1291e:	d6 01       	movw	r26, r12
   12920:	17 96       	adiw	r26, 0x07	; 7
   12922:	3c 91       	ld	r19, X
   12924:	32 33       	cpi	r19, 0x32	; 50
   12926:	79 f0       	breq	.+30     	; 0x12946 <_Z12Pub_Sub_DataPcPhjh+0x678>
   12928:	33 33       	cpi	r19, 0x33	; 51
   1292a:	c1 f0       	breq	.+48     	; 0x1295c <_Z12Pub_Sub_DataPcPhjh+0x68e>
   1292c:	31 33       	cpi	r19, 0x31	; 49
   1292e:	61 f5       	brne	.+88     	; 0x12988 <_Z12Pub_Sub_DataPcPhjh+0x6ba>
   12930:	86 2f       	mov	r24, r22
   12932:	88 0f       	add	r24, r24
   12934:	68 0f       	add	r22, r24
   12936:	6f 5f       	subi	r22, 0xFF	; 255
   12938:	f7 01       	movw	r30, r14
   1293a:	60 83       	st	Z, r22
   1293c:	21 30       	cpi	r18, 0x01	; 1
   1293e:	d1 f5       	brne	.+116    	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   12940:	64 ef       	ldi	r22, 0xF4	; 244
   12942:	79 e3       	ldi	r23, 0x39	; 57
   12944:	15 c0       	rjmp	.+42     	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x6a2>
   12946:	86 2f       	mov	r24, r22
   12948:	88 0f       	add	r24, r24
   1294a:	68 0f       	add	r22, r24
   1294c:	6e 5f       	subi	r22, 0xFE	; 254
   1294e:	d7 01       	movw	r26, r14
   12950:	6c 93       	st	X, r22
   12952:	21 30       	cpi	r18, 0x01	; 1
   12954:	79 f5       	brne	.+94     	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   12956:	69 ed       	ldi	r22, 0xD9	; 217
   12958:	79 e3       	ldi	r23, 0x39	; 57
   1295a:	0a c0       	rjmp	.+20     	; 0x12970 <_Z12Pub_Sub_DataPcPhjh+0x6a2>
   1295c:	01 96       	adiw	r24, 0x01	; 1
   1295e:	98 2f       	mov	r25, r24
   12960:	99 0f       	add	r25, r25
   12962:	89 0f       	add	r24, r25
   12964:	f7 01       	movw	r30, r14
   12966:	80 83       	st	Z, r24
   12968:	21 30       	cpi	r18, 0x01	; 1
   1296a:	21 f5       	brne	.+72     	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   1296c:	6e eb       	ldi	r22, 0xBE	; 190
   1296e:	79 e3       	ldi	r23, 0x39	; 57
   12970:	8f e6       	ldi	r24, 0x6F	; 111
   12972:	96 e1       	ldi	r25, 0x16	; 22
   12974:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12978:	8f e6       	ldi	r24, 0x6F	; 111
   1297a:	96 e1       	ldi	r25, 0x16	; 22
   1297c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12980:	8f e6       	ldi	r24, 0x6F	; 111
   12982:	96 e1       	ldi	r25, 0x16	; 22
   12984:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12988:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1298c:	81 30       	cpi	r24, 0x01	; 1
   1298e:	91 f4       	brne	.+36     	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   12990:	6d ea       	ldi	r22, 0xAD	; 173
   12992:	79 e3       	ldi	r23, 0x39	; 57
   12994:	8f e6       	ldi	r24, 0x6F	; 111
   12996:	96 e1       	ldi	r25, 0x16	; 22
   12998:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1299c:	8f e6       	ldi	r24, 0x6F	; 111
   1299e:	96 e1       	ldi	r25, 0x16	; 22
   129a0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   129a4:	07 c0       	rjmp	.+14     	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   129a6:	01 96       	adiw	r24, 0x01	; 1
   129a8:	49 5f       	subi	r20, 0xF9	; 249
   129aa:	5f 4f       	sbci	r21, 0xFF	; 255
   129ac:	83 30       	cpi	r24, 0x03	; 3
   129ae:	91 05       	cpc	r25, r1
   129b0:	09 f0       	breq	.+2      	; 0x129b4 <_Z12Pub_Sub_DataPcPhjh+0x6e6>
   129b2:	5e cf       	rjmp	.-324    	; 0x12870 <_Z12Pub_Sub_DataPcPhjh+0x5a2>
   129b4:	d4 01       	movw	r26, r8
   129b6:	8c 91       	ld	r24, X
   129b8:	81 11       	cpse	r24, r1
   129ba:	07 c0       	rjmp	.+14     	; 0x129ca <_Z12Pub_Sub_DataPcPhjh+0x6fc>
   129bc:	c2 5a       	subi	r28, 0xA2	; 162
   129be:	d9 4f       	sbci	r29, 0xF9	; 249
   129c0:	b8 81       	ld	r27, Y
   129c2:	ce 55       	subi	r28, 0x5E	; 94
   129c4:	d6 40       	sbci	r29, 0x06	; 6
   129c6:	bf 30       	cpi	r27, 0x0F	; 15
   129c8:	60 f0       	brcs	.+24     	; 0x129e2 <_Z12Pub_Sub_DataPcPhjh+0x714>
   129ca:	f7 01       	movw	r30, r14
   129cc:	80 81       	ld	r24, Z
   129ce:	81 11       	cpse	r24, r1
   129d0:	10 cf       	rjmp	.-480    	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   129d2:	c2 5a       	subi	r28, 0xA2	; 162
   129d4:	d9 4f       	sbci	r29, 0xF9	; 249
   129d6:	f8 81       	ld	r31, Y
   129d8:	ce 55       	subi	r28, 0x5E	; 94
   129da:	d6 40       	sbci	r29, 0x06	; 6
   129dc:	ff 30       	cpi	r31, 0x0F	; 15
   129de:	08 f4       	brcc	.+2      	; 0x129e2 <_Z12Pub_Sub_DataPcPhjh+0x714>
   129e0:	08 cf       	rjmp	.-496    	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   129e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   129e6:	81 30       	cpi	r24, 0x01	; 1
   129e8:	51 f4       	brne	.+20     	; 0x129fe <_Z12Pub_Sub_DataPcPhjh+0x730>
   129ea:	64 e9       	ldi	r22, 0x94	; 148
   129ec:	79 e3       	ldi	r23, 0x39	; 57
   129ee:	8f e6       	ldi	r24, 0x6F	; 111
   129f0:	96 e1       	ldi	r25, 0x16	; 22
   129f2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   129f6:	8f e6       	ldi	r24, 0x6F	; 111
   129f8:	96 e1       	ldi	r25, 0x16	; 22
   129fa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   129fe:	80 91 e7 0b 	lds	r24, 0x0BE7	; 0x800be7 <_sEuro_Valve_Param>
   12a02:	88 23       	and	r24, r24
   12a04:	59 f0       	breq	.+22     	; 0x12a1c <_Z12Pub_Sub_DataPcPhjh+0x74e>
   12a06:	80 91 f4 0b 	lds	r24, 0x0BF4	; 0x800bf4 <_sEuro_Valve_Param+0xd>
   12a0a:	88 23       	and	r24, r24
   12a0c:	49 f0       	breq	.+18     	; 0x12a20 <_Z12Pub_Sub_DataPcPhjh+0x752>
   12a0e:	80 91 01 0c 	lds	r24, 0x0C01	; 0x800c01 <_sEuro_Valve_Param+0x1a>
   12a12:	81 11       	cpse	r24, r1
   12a14:	08 c0       	rjmp	.+16     	; 0x12a26 <_Z12Pub_Sub_DataPcPhjh+0x758>
   12a16:	72 e0       	ldi	r23, 0x02	; 2
   12a18:	b7 2e       	mov	r11, r23
   12a1a:	07 c0       	rjmp	.+14     	; 0x12a2a <_Z12Pub_Sub_DataPcPhjh+0x75c>
   12a1c:	b1 2c       	mov	r11, r1
   12a1e:	05 c0       	rjmp	.+10     	; 0x12a2a <_Z12Pub_Sub_DataPcPhjh+0x75c>
   12a20:	bb 24       	eor	r11, r11
   12a22:	b3 94       	inc	r11
   12a24:	02 c0       	rjmp	.+4      	; 0x12a2a <_Z12Pub_Sub_DataPcPhjh+0x75c>
   12a26:	63 e0       	ldi	r22, 0x03	; 3
   12a28:	b6 2e       	mov	r11, r22
   12a2a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12a2e:	81 30       	cpi	r24, 0x01	; 1
   12a30:	c9 f4       	brne	.+50     	; 0x12a64 <_Z12Pub_Sub_DataPcPhjh+0x796>
   12a32:	8f e6       	ldi	r24, 0x6F	; 111
   12a34:	96 e1       	ldi	r25, 0x16	; 22
   12a36:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12a3a:	60 e8       	ldi	r22, 0x80	; 128
   12a3c:	79 e3       	ldi	r23, 0x39	; 57
   12a3e:	8f e6       	ldi	r24, 0x6F	; 111
   12a40:	96 e1       	ldi	r25, 0x16	; 22
   12a42:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12a46:	8f e6       	ldi	r24, 0x6F	; 111
   12a48:	96 e1       	ldi	r25, 0x16	; 22
   12a4a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12a4e:	4a e0       	ldi	r20, 0x0A	; 10
   12a50:	50 e0       	ldi	r21, 0x00	; 0
   12a52:	6b 2d       	mov	r22, r11
   12a54:	8f e6       	ldi	r24, 0x6F	; 111
   12a56:	96 e1       	ldi	r25, 0x16	; 22
   12a58:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   12a5c:	8f e6       	ldi	r24, 0x6F	; 111
   12a5e:	96 e1       	ldi	r25, 0x16	; 22
   12a60:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12a64:	2d e0       	ldi	r18, 0x0D	; 13
   12a66:	b2 9e       	mul	r11, r18
   12a68:	a0 01       	movw	r20, r0
   12a6a:	11 24       	eor	r1, r1
   12a6c:	80 e0       	ldi	r24, 0x00	; 0
   12a6e:	90 e0       	ldi	r25, 0x00	; 0
   12a70:	0b 2d       	mov	r16, r11
   12a72:	10 e0       	ldi	r17, 0x00	; 0
   12a74:	fc 01       	movw	r30, r24
   12a76:	e4 0f       	add	r30, r20
   12a78:	f5 1f       	adc	r31, r21
   12a7a:	e9 51       	subi	r30, 0x19	; 25
   12a7c:	f4 4f       	sbci	r31, 0xF4	; 244
   12a7e:	d6 01       	movw	r26, r12
   12a80:	a8 0f       	add	r26, r24
   12a82:	b9 1f       	adc	r27, r25
   12a84:	2c 91       	ld	r18, X
   12a86:	21 83       	std	Z+1, r18	; 0x01
   12a88:	01 96       	adiw	r24, 0x01	; 1
   12a8a:	86 30       	cpi	r24, 0x06	; 6
   12a8c:	91 05       	cpc	r25, r1
   12a8e:	91 f7       	brne	.-28     	; 0x12a74 <_Z12Pub_Sub_DataPcPhjh+0x7a6>
   12a90:	8d e0       	ldi	r24, 0x0D	; 13
   12a92:	80 9f       	mul	r24, r16
   12a94:	a0 01       	movw	r20, r0
   12a96:	81 9f       	mul	r24, r17
   12a98:	50 0d       	add	r21, r0
   12a9a:	11 24       	eor	r1, r1
   12a9c:	cd 59       	subi	r28, 0x9D	; 157
   12a9e:	d9 4f       	sbci	r29, 0xF9	; 249
   12aa0:	59 83       	std	Y+1, r21	; 0x01
   12aa2:	48 83       	st	Y, r20
   12aa4:	c3 56       	subi	r28, 0x63	; 99
   12aa6:	d6 40       	sbci	r29, 0x06	; 6
   12aa8:	48 51       	subi	r20, 0x18	; 24
   12aaa:	54 4f       	sbci	r21, 0xF4	; 244
   12aac:	c8 59       	subi	r28, 0x98	; 152
   12aae:	d9 4f       	sbci	r29, 0xF9	; 249
   12ab0:	59 83       	std	Y+1, r21	; 0x01
   12ab2:	48 83       	st	Y, r20
   12ab4:	c8 56       	subi	r28, 0x68	; 104
   12ab6:	d6 40       	sbci	r29, 0x06	; 6
   12ab8:	a7 e0       	ldi	r26, 0x07	; 7
   12aba:	a0 9f       	mul	r26, r16
   12abc:	c0 01       	movw	r24, r0
   12abe:	a1 9f       	mul	r26, r17
   12ac0:	90 0d       	add	r25, r0
   12ac2:	11 24       	eor	r1, r1
   12ac4:	ba 01       	movw	r22, r20
   12ac6:	87 52       	subi	r24, 0x27	; 39
   12ac8:	9a 4e       	sbci	r25, 0xEA	; 234
   12aca:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   12ace:	cd 59       	subi	r28, 0x9D	; 157
   12ad0:	d9 4f       	sbci	r29, 0xF9	; 249
   12ad2:	e8 81       	ld	r30, Y
   12ad4:	f9 81       	ldd	r31, Y+1	; 0x01
   12ad6:	c3 56       	subi	r28, 0x63	; 99
   12ad8:	d6 40       	sbci	r29, 0x06	; 6
   12ada:	e9 51       	subi	r30, 0x19	; 25
   12adc:	f4 4f       	sbci	r31, 0xF4	; 244
   12ade:	cd 59       	subi	r28, 0x9D	; 157
   12ae0:	d9 4f       	sbci	r29, 0xF9	; 249
   12ae2:	f9 83       	std	Y+1, r31	; 0x01
   12ae4:	e8 83       	st	Y, r30
   12ae6:	c3 56       	subi	r28, 0x63	; 99
   12ae8:	d6 40       	sbci	r29, 0x06	; 6
   12aea:	81 e0       	ldi	r24, 0x01	; 1
   12aec:	8b 0d       	add	r24, r11
   12aee:	80 83       	st	Z, r24
   12af0:	2f ef       	ldi	r18, 0xFF	; 255
   12af2:	30 e0       	ldi	r19, 0x00	; 0
   12af4:	31 87       	std	Z+9, r19	; 0x09
   12af6:	20 87       	std	Z+8, r18	; 0x08
   12af8:	31 e0       	ldi	r19, 0x01	; 1
   12afa:	33 87       	std	Z+11, r19	; 0x0b
   12afc:	12 86       	std	Z+10, r1	; 0x0a
   12afe:	14 86       	std	Z+12, r1	; 0x0c
   12b00:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12b04:	81 30       	cpi	r24, 0x01	; 1
   12b06:	09 f0       	breq	.+2      	; 0x12b0a <_Z12Pub_Sub_DataPcPhjh+0x83c>
   12b08:	45 c0       	rjmp	.+138    	; 0x12b94 <_Z12Pub_Sub_DataPcPhjh+0x8c6>
   12b0a:	8f e6       	ldi	r24, 0x6F	; 111
   12b0c:	96 e1       	ldi	r25, 0x16	; 22
   12b0e:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12b12:	65 e6       	ldi	r22, 0x65	; 101
   12b14:	79 e3       	ldi	r23, 0x39	; 57
   12b16:	8f e6       	ldi	r24, 0x6F	; 111
   12b18:	96 e1       	ldi	r25, 0x16	; 22
   12b1a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12b1e:	8f e6       	ldi	r24, 0x6F	; 111
   12b20:	96 e1       	ldi	r25, 0x16	; 22
   12b22:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12b26:	8f e6       	ldi	r24, 0x6F	; 111
   12b28:	96 e1       	ldi	r25, 0x16	; 22
   12b2a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12b2e:	6a e5       	ldi	r22, 0x5A	; 90
   12b30:	79 e3       	ldi	r23, 0x39	; 57
   12b32:	8f e6       	ldi	r24, 0x6F	; 111
   12b34:	96 e1       	ldi	r25, 0x16	; 22
   12b36:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12b3a:	4a e0       	ldi	r20, 0x0A	; 10
   12b3c:	50 e0       	ldi	r21, 0x00	; 0
   12b3e:	cd 59       	subi	r28, 0x9D	; 157
   12b40:	d9 4f       	sbci	r29, 0xF9	; 249
   12b42:	a8 81       	ld	r26, Y
   12b44:	b9 81       	ldd	r27, Y+1	; 0x01
   12b46:	c3 56       	subi	r28, 0x63	; 99
   12b48:	d6 40       	sbci	r29, 0x06	; 6
   12b4a:	6c 91       	ld	r22, X
   12b4c:	8f e6       	ldi	r24, 0x6F	; 111
   12b4e:	96 e1       	ldi	r25, 0x16	; 22
   12b50:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   12b54:	8f e6       	ldi	r24, 0x6F	; 111
   12b56:	96 e1       	ldi	r25, 0x16	; 22
   12b58:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12b5c:	8f e6       	ldi	r24, 0x6F	; 111
   12b5e:	96 e1       	ldi	r25, 0x16	; 22
   12b60:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12b64:	6f e4       	ldi	r22, 0x4F	; 79
   12b66:	79 e3       	ldi	r23, 0x39	; 57
   12b68:	8f e6       	ldi	r24, 0x6F	; 111
   12b6a:	96 e1       	ldi	r25, 0x16	; 22
   12b6c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12b70:	c8 59       	subi	r28, 0x98	; 152
   12b72:	d9 4f       	sbci	r29, 0xF9	; 249
   12b74:	68 81       	ld	r22, Y
   12b76:	79 81       	ldd	r23, Y+1	; 0x01
   12b78:	c8 56       	subi	r28, 0x68	; 104
   12b7a:	d6 40       	sbci	r29, 0x06	; 6
   12b7c:	8f e6       	ldi	r24, 0x6F	; 111
   12b7e:	96 e1       	ldi	r25, 0x16	; 22
   12b80:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   12b84:	8f e6       	ldi	r24, 0x6F	; 111
   12b86:	96 e1       	ldi	r25, 0x16	; 22
   12b88:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12b8c:	8f e6       	ldi	r24, 0x6F	; 111
   12b8e:	96 e1       	ldi	r25, 0x16	; 22
   12b90:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12b94:	c2 5a       	subi	r28, 0xA2	; 162
   12b96:	d9 4f       	sbci	r29, 0xF9	; 249
   12b98:	b8 81       	ld	r27, Y
   12b9a:	ce 55       	subi	r28, 0x5E	; 94
   12b9c:	d6 40       	sbci	r29, 0x06	; 6
   12b9e:	bf 30       	cpi	r27, 0x0F	; 15
   12ba0:	a0 f5       	brcc	.+104    	; 0x12c0a <_Z12Pub_Sub_DataPcPhjh+0x93c>
   12ba2:	f6 01       	movw	r30, r12
   12ba4:	87 81       	ldd	r24, Z+7	; 0x07
   12ba6:	82 33       	cpi	r24, 0x32	; 50
   12ba8:	99 f0       	breq	.+38     	; 0x12bd0 <_Z12Pub_Sub_DataPcPhjh+0x902>
   12baa:	83 33       	cpi	r24, 0x33	; 51
   12bac:	f9 f0       	breq	.+62     	; 0x12bec <_Z12Pub_Sub_DataPcPhjh+0x91e>
   12bae:	81 33       	cpi	r24, 0x31	; 49
   12bb0:	09 f0       	breq	.+2      	; 0x12bb4 <_Z12Pub_Sub_DataPcPhjh+0x8e6>
   12bb2:	76 c0       	rjmp	.+236    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12bb4:	8b 2d       	mov	r24, r11
   12bb6:	88 0f       	add	r24, r24
   12bb8:	8b 0d       	add	r24, r11
   12bba:	8f 5f       	subi	r24, 0xFF	; 255
   12bbc:	d4 01       	movw	r26, r8
   12bbe:	8c 93       	st	X, r24
   12bc0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12bc4:	81 30       	cpi	r24, 0x01	; 1
   12bc6:	09 f0       	breq	.+2      	; 0x12bca <_Z12Pub_Sub_DataPcPhjh+0x8fc>
   12bc8:	6b c0       	rjmp	.+214    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12bca:	60 e3       	ldi	r22, 0x30	; 48
   12bcc:	79 e3       	ldi	r23, 0x39	; 57
   12bce:	5c c0       	rjmp	.+184    	; 0x12c88 <_Z12Pub_Sub_DataPcPhjh+0x9ba>
   12bd0:	8b 2d       	mov	r24, r11
   12bd2:	88 0f       	add	r24, r24
   12bd4:	8b 0d       	add	r24, r11
   12bd6:	8e 5f       	subi	r24, 0xFE	; 254
   12bd8:	f4 01       	movw	r30, r8
   12bda:	80 83       	st	Z, r24
   12bdc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12be0:	81 30       	cpi	r24, 0x01	; 1
   12be2:	09 f0       	breq	.+2      	; 0x12be6 <_Z12Pub_Sub_DataPcPhjh+0x918>
   12be4:	5d c0       	rjmp	.+186    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12be6:	61 e1       	ldi	r22, 0x11	; 17
   12be8:	79 e3       	ldi	r23, 0x39	; 57
   12bea:	4e c0       	rjmp	.+156    	; 0x12c88 <_Z12Pub_Sub_DataPcPhjh+0x9ba>
   12bec:	0f 5f       	subi	r16, 0xFF	; 255
   12bee:	1f 4f       	sbci	r17, 0xFF	; 255
   12bf0:	80 2f       	mov	r24, r16
   12bf2:	88 0f       	add	r24, r24
   12bf4:	08 0f       	add	r16, r24
   12bf6:	d4 01       	movw	r26, r8
   12bf8:	0c 93       	st	X, r16
   12bfa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12bfe:	81 30       	cpi	r24, 0x01	; 1
   12c00:	09 f0       	breq	.+2      	; 0x12c04 <_Z12Pub_Sub_DataPcPhjh+0x936>
   12c02:	4e c0       	rjmp	.+156    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c04:	62 ef       	ldi	r22, 0xF2	; 242
   12c06:	78 e3       	ldi	r23, 0x38	; 56
   12c08:	3f c0       	rjmp	.+126    	; 0x12c88 <_Z12Pub_Sub_DataPcPhjh+0x9ba>
   12c0a:	c2 5a       	subi	r28, 0xA2	; 162
   12c0c:	d9 4f       	sbci	r29, 0xF9	; 249
   12c0e:	b8 81       	ld	r27, Y
   12c10:	ce 55       	subi	r28, 0x5E	; 94
   12c12:	d6 40       	sbci	r29, 0x06	; 6
   12c14:	b5 36       	cpi	r27, 0x65	; 101
   12c16:	08 f4       	brcc	.+2      	; 0x12c1a <_Z12Pub_Sub_DataPcPhjh+0x94c>
   12c18:	43 c0       	rjmp	.+134    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c1a:	f6 01       	movw	r30, r12
   12c1c:	87 81       	ldd	r24, Z+7	; 0x07
   12c1e:	82 33       	cpi	r24, 0x32	; 50
   12c20:	c9 f0       	breq	.+50     	; 0x12c54 <_Z12Pub_Sub_DataPcPhjh+0x986>
   12c22:	83 33       	cpi	r24, 0x33	; 51
   12c24:	21 f1       	breq	.+72     	; 0x12c6e <_Z12Pub_Sub_DataPcPhjh+0x9a0>
   12c26:	81 33       	cpi	r24, 0x31	; 49
   12c28:	d9 f5       	brne	.+118    	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c2a:	8b 2d       	mov	r24, r11
   12c2c:	88 0f       	add	r24, r24
   12c2e:	8b 0d       	add	r24, r11
   12c30:	8f 5f       	subi	r24, 0xFF	; 255
   12c32:	d7 01       	movw	r26, r14
   12c34:	8c 93       	st	X, r24
   12c36:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12c3a:	81 30       	cpi	r24, 0x01	; 1
   12c3c:	89 f5       	brne	.+98     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c3e:	67 ed       	ldi	r22, 0xD7	; 215
   12c40:	78 e3       	ldi	r23, 0x38	; 56
   12c42:	8f e6       	ldi	r24, 0x6F	; 111
   12c44:	96 e1       	ldi	r25, 0x16	; 22
   12c46:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12c4a:	8f e6       	ldi	r24, 0x6F	; 111
   12c4c:	96 e1       	ldi	r25, 0x16	; 22
   12c4e:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12c52:	26 c0       	rjmp	.+76     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c54:	8b 2d       	mov	r24, r11
   12c56:	88 0f       	add	r24, r24
   12c58:	8b 0d       	add	r24, r11
   12c5a:	8e 5f       	subi	r24, 0xFE	; 254
   12c5c:	f7 01       	movw	r30, r14
   12c5e:	80 83       	st	Z, r24
   12c60:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12c64:	81 30       	cpi	r24, 0x01	; 1
   12c66:	e1 f4       	brne	.+56     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c68:	6c eb       	ldi	r22, 0xBC	; 188
   12c6a:	78 e3       	ldi	r23, 0x38	; 56
   12c6c:	0d c0       	rjmp	.+26     	; 0x12c88 <_Z12Pub_Sub_DataPcPhjh+0x9ba>
   12c6e:	0f 5f       	subi	r16, 0xFF	; 255
   12c70:	1f 4f       	sbci	r17, 0xFF	; 255
   12c72:	80 2f       	mov	r24, r16
   12c74:	88 0f       	add	r24, r24
   12c76:	08 0f       	add	r16, r24
   12c78:	d7 01       	movw	r26, r14
   12c7a:	0c 93       	st	X, r16
   12c7c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12c80:	81 30       	cpi	r24, 0x01	; 1
   12c82:	71 f4       	brne	.+28     	; 0x12ca0 <_Z12Pub_Sub_DataPcPhjh+0x9d2>
   12c84:	61 ea       	ldi	r22, 0xA1	; 161
   12c86:	78 e3       	ldi	r23, 0x38	; 56
   12c88:	8f e6       	ldi	r24, 0x6F	; 111
   12c8a:	96 e1       	ldi	r25, 0x16	; 22
   12c8c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12c90:	8f e6       	ldi	r24, 0x6F	; 111
   12c92:	96 e1       	ldi	r25, 0x16	; 22
   12c94:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12c98:	8f e6       	ldi	r24, 0x6F	; 111
   12c9a:	96 e1       	ldi	r25, 0x16	; 22
   12c9c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12ca0:	8b 2d       	mov	r24, r11
   12ca2:	0e 94 12 5b 	call	0xb624	; 0xb624 <_Z16Euro_Data_EEPROMh>
   12ca6:	a5 cd       	rjmp	.-1206   	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12ca8:	45 e6       	ldi	r20, 0x65	; 101
   12caa:	55 e1       	ldi	r21, 0x15	; 21
   12cac:	24 e0       	ldi	r18, 0x04	; 4
   12cae:	80 e0       	ldi	r24, 0x00	; 0
   12cb0:	90 e0       	ldi	r25, 0x00	; 0
   12cb2:	30 e0       	ldi	r19, 0x00	; 0
   12cb4:	fc 01       	movw	r30, r24
   12cb6:	ec 58       	subi	r30, 0x8C	; 140
   12cb8:	ff 4f       	sbci	r31, 0xFF	; 255
   12cba:	e4 0f       	add	r30, r20
   12cbc:	f5 1f       	adc	r31, r21
   12cbe:	70 81       	ld	r23, Z
   12cc0:	f6 01       	movw	r30, r12
   12cc2:	e8 0f       	add	r30, r24
   12cc4:	f9 1f       	adc	r31, r25
   12cc6:	60 81       	ld	r22, Z
   12cc8:	76 13       	cpse	r23, r22
   12cca:	01 c0       	rjmp	.+2      	; 0x12cce <_Z12Pub_Sub_DataPcPhjh+0xa00>
   12ccc:	3f 5f       	subi	r19, 0xFF	; 255
   12cce:	01 96       	adiw	r24, 0x01	; 1
   12cd0:	86 30       	cpi	r24, 0x06	; 6
   12cd2:	91 05       	cpc	r25, r1
   12cd4:	79 f7       	brne	.-34     	; 0x12cb4 <_Z12Pub_Sub_DataPcPhjh+0x9e6>
   12cd6:	36 30       	cpi	r19, 0x06	; 6
   12cd8:	09 f0       	breq	.+2      	; 0x12cdc <_Z12Pub_Sub_DataPcPhjh+0xa0e>
   12cda:	6d c0       	rjmp	.+218    	; 0x12db6 <_Z12Pub_Sub_DataPcPhjh+0xae8>
   12cdc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12ce0:	c2 5a       	subi	r28, 0xA2	; 162
   12ce2:	d9 4f       	sbci	r29, 0xF9	; 249
   12ce4:	b8 81       	ld	r27, Y
   12ce6:	ce 55       	subi	r28, 0x5E	; 94
   12ce8:	d6 40       	sbci	r29, 0x06	; 6
   12cea:	bf 30       	cpi	r27, 0x0F	; 15
   12cec:	18 f5       	brcc	.+70     	; 0x12d34 <_Z12Pub_Sub_DataPcPhjh+0xa66>
   12cee:	f6 01       	movw	r30, r12
   12cf0:	97 81       	ldd	r25, Z+7	; 0x07
   12cf2:	92 33       	cpi	r25, 0x32	; 50
   12cf4:	69 f0       	breq	.+26     	; 0x12d10 <_Z12Pub_Sub_DataPcPhjh+0xa42>
   12cf6:	93 33       	cpi	r25, 0x33	; 51
   12cf8:	a1 f0       	breq	.+40     	; 0x12d22 <_Z12Pub_Sub_DataPcPhjh+0xa54>
   12cfa:	91 33       	cpi	r25, 0x31	; 49
   12cfc:	09 f0       	breq	.+2      	; 0x12d00 <_Z12Pub_Sub_DataPcPhjh+0xa32>
   12cfe:	4c c0       	rjmp	.+152    	; 0x12d98 <_Z12Pub_Sub_DataPcPhjh+0xaca>
   12d00:	d4 01       	movw	r26, r8
   12d02:	ac 92       	st	X, r10
   12d04:	81 30       	cpi	r24, 0x01	; 1
   12d06:	09 f0       	breq	.+2      	; 0x12d0a <_Z12Pub_Sub_DataPcPhjh+0xa3c>
   12d08:	5b c0       	rjmp	.+182    	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d0a:	66 e8       	ldi	r22, 0x86	; 134
   12d0c:	78 e3       	ldi	r23, 0x38	; 56
   12d0e:	38 c0       	rjmp	.+112    	; 0x12d80 <_Z12Pub_Sub_DataPcPhjh+0xab2>
   12d10:	26 e6       	ldi	r18, 0x66	; 102
   12d12:	f4 01       	movw	r30, r8
   12d14:	20 83       	st	Z, r18
   12d16:	81 30       	cpi	r24, 0x01	; 1
   12d18:	09 f0       	breq	.+2      	; 0x12d1c <_Z12Pub_Sub_DataPcPhjh+0xa4e>
   12d1a:	52 c0       	rjmp	.+164    	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d1c:	6b e6       	ldi	r22, 0x6B	; 107
   12d1e:	78 e3       	ldi	r23, 0x38	; 56
   12d20:	2f c0       	rjmp	.+94     	; 0x12d80 <_Z12Pub_Sub_DataPcPhjh+0xab2>
   12d22:	e7 e6       	ldi	r30, 0x67	; 103
   12d24:	d4 01       	movw	r26, r8
   12d26:	ec 93       	st	X, r30
   12d28:	81 30       	cpi	r24, 0x01	; 1
   12d2a:	09 f0       	breq	.+2      	; 0x12d2e <_Z12Pub_Sub_DataPcPhjh+0xa60>
   12d2c:	49 c0       	rjmp	.+146    	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d2e:	60 e5       	ldi	r22, 0x50	; 80
   12d30:	78 e3       	ldi	r23, 0x38	; 56
   12d32:	26 c0       	rjmp	.+76     	; 0x12d80 <_Z12Pub_Sub_DataPcPhjh+0xab2>
   12d34:	c2 5a       	subi	r28, 0xA2	; 162
   12d36:	d9 4f       	sbci	r29, 0xF9	; 249
   12d38:	f8 81       	ld	r31, Y
   12d3a:	ce 55       	subi	r28, 0x5E	; 94
   12d3c:	d6 40       	sbci	r29, 0x06	; 6
   12d3e:	f5 36       	cpi	r31, 0x65	; 101
   12d40:	58 f1       	brcs	.+86     	; 0x12d98 <_Z12Pub_Sub_DataPcPhjh+0xaca>
   12d42:	d6 01       	movw	r26, r12
   12d44:	17 96       	adiw	r26, 0x07	; 7
   12d46:	9c 91       	ld	r25, X
   12d48:	92 33       	cpi	r25, 0x32	; 50
   12d4a:	59 f0       	breq	.+22     	; 0x12d62 <_Z12Pub_Sub_DataPcPhjh+0xa94>
   12d4c:	93 33       	cpi	r25, 0x33	; 51
   12d4e:	89 f0       	breq	.+34     	; 0x12d72 <_Z12Pub_Sub_DataPcPhjh+0xaa4>
   12d50:	91 33       	cpi	r25, 0x31	; 49
   12d52:	11 f5       	brne	.+68     	; 0x12d98 <_Z12Pub_Sub_DataPcPhjh+0xaca>
   12d54:	f7 01       	movw	r30, r14
   12d56:	a0 82       	st	Z, r10
   12d58:	81 30       	cpi	r24, 0x01	; 1
   12d5a:	91 f5       	brne	.+100    	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d5c:	65 e3       	ldi	r22, 0x35	; 53
   12d5e:	78 e3       	ldi	r23, 0x38	; 56
   12d60:	0f c0       	rjmp	.+30     	; 0x12d80 <_Z12Pub_Sub_DataPcPhjh+0xab2>
   12d62:	e6 e6       	ldi	r30, 0x66	; 102
   12d64:	d7 01       	movw	r26, r14
   12d66:	ec 93       	st	X, r30
   12d68:	81 30       	cpi	r24, 0x01	; 1
   12d6a:	51 f5       	brne	.+84     	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d6c:	6a e1       	ldi	r22, 0x1A	; 26
   12d6e:	78 e3       	ldi	r23, 0x38	; 56
   12d70:	07 c0       	rjmp	.+14     	; 0x12d80 <_Z12Pub_Sub_DataPcPhjh+0xab2>
   12d72:	e7 e6       	ldi	r30, 0x67	; 103
   12d74:	d7 01       	movw	r26, r14
   12d76:	ec 93       	st	X, r30
   12d78:	81 30       	cpi	r24, 0x01	; 1
   12d7a:	11 f5       	brne	.+68     	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12d7c:	6f ef       	ldi	r22, 0xFF	; 255
   12d7e:	77 e3       	ldi	r23, 0x37	; 55
   12d80:	8f e6       	ldi	r24, 0x6F	; 111
   12d82:	96 e1       	ldi	r25, 0x16	; 22
   12d84:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12d88:	8f e6       	ldi	r24, 0x6F	; 111
   12d8a:	96 e1       	ldi	r25, 0x16	; 22
   12d8c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12d90:	8f e6       	ldi	r24, 0x6F	; 111
   12d92:	96 e1       	ldi	r25, 0x16	; 22
   12d94:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12d98:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12d9c:	81 30       	cpi	r24, 0x01	; 1
   12d9e:	81 f4       	brne	.+32     	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12da0:	6e ee       	ldi	r22, 0xEE	; 238
   12da2:	77 e3       	ldi	r23, 0x37	; 55
   12da4:	8f e6       	ldi	r24, 0x6F	; 111
   12da6:	96 e1       	ldi	r25, 0x16	; 22
   12da8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12dac:	8f e6       	ldi	r24, 0x6F	; 111
   12dae:	96 e1       	ldi	r25, 0x16	; 22
   12db0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12db4:	05 c0       	rjmp	.+10     	; 0x12dc0 <_Z12Pub_Sub_DataPcPhjh+0xaf2>
   12db6:	21 50       	subi	r18, 0x01	; 1
   12db8:	49 5f       	subi	r20, 0xF9	; 249
   12dba:	5f 4f       	sbci	r21, 0xFF	; 255
   12dbc:	21 11       	cpse	r18, r1
   12dbe:	77 cf       	rjmp	.-274    	; 0x12cae <_Z12Pub_Sub_DataPcPhjh+0x9e0>
   12dc0:	d4 01       	movw	r26, r8
   12dc2:	8c 91       	ld	r24, X
   12dc4:	81 11       	cpse	r24, r1
   12dc6:	07 c0       	rjmp	.+14     	; 0x12dd6 <_Z12Pub_Sub_DataPcPhjh+0xb08>
   12dc8:	c2 5a       	subi	r28, 0xA2	; 162
   12dca:	d9 4f       	sbci	r29, 0xF9	; 249
   12dcc:	b8 81       	ld	r27, Y
   12dce:	ce 55       	subi	r28, 0x5E	; 94
   12dd0:	d6 40       	sbci	r29, 0x06	; 6
   12dd2:	bf 30       	cpi	r27, 0x0F	; 15
   12dd4:	60 f0       	brcs	.+24     	; 0x12dee <_Z12Pub_Sub_DataPcPhjh+0xb20>
   12dd6:	f7 01       	movw	r30, r14
   12dd8:	80 81       	ld	r24, Z
   12dda:	81 11       	cpse	r24, r1
   12ddc:	0a cd       	rjmp	.-1516   	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12dde:	c2 5a       	subi	r28, 0xA2	; 162
   12de0:	d9 4f       	sbci	r29, 0xF9	; 249
   12de2:	f8 81       	ld	r31, Y
   12de4:	ce 55       	subi	r28, 0x5E	; 94
   12de6:	d6 40       	sbci	r29, 0x06	; 6
   12de8:	ff 30       	cpi	r31, 0x0F	; 15
   12dea:	08 f4       	brcc	.+2      	; 0x12dee <_Z12Pub_Sub_DataPcPhjh+0xb20>
   12dec:	02 cd       	rjmp	.-1532   	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12dee:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12df2:	81 30       	cpi	r24, 0x01	; 1
   12df4:	51 f4       	brne	.+20     	; 0x12e0a <_Z12Pub_Sub_DataPcPhjh+0xb3c>
   12df6:	65 ed       	ldi	r22, 0xD5	; 213
   12df8:	77 e3       	ldi	r23, 0x37	; 55
   12dfa:	8f e6       	ldi	r24, 0x6F	; 111
   12dfc:	96 e1       	ldi	r25, 0x16	; 22
   12dfe:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12e02:	8f e6       	ldi	r24, 0x6F	; 111
   12e04:	96 e1       	ldi	r25, 0x16	; 22
   12e06:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12e0a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12e0e:	81 30       	cpi	r24, 0x01	; 1
   12e10:	c9 f4       	brne	.+50     	; 0x12e44 <_Z12Pub_Sub_DataPcPhjh+0xb76>
   12e12:	8f e6       	ldi	r24, 0x6F	; 111
   12e14:	96 e1       	ldi	r25, 0x16	; 22
   12e16:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12e1a:	61 ec       	ldi	r22, 0xC1	; 193
   12e1c:	77 e3       	ldi	r23, 0x37	; 55
   12e1e:	8f e6       	ldi	r24, 0x6F	; 111
   12e20:	96 e1       	ldi	r25, 0x16	; 22
   12e22:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12e26:	8f e6       	ldi	r24, 0x6F	; 111
   12e28:	96 e1       	ldi	r25, 0x16	; 22
   12e2a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12e2e:	4a e0       	ldi	r20, 0x0A	; 10
   12e30:	50 e0       	ldi	r21, 0x00	; 0
   12e32:	63 e0       	ldi	r22, 0x03	; 3
   12e34:	8f e6       	ldi	r24, 0x6F	; 111
   12e36:	96 e1       	ldi	r25, 0x16	; 22
   12e38:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   12e3c:	8f e6       	ldi	r24, 0x6F	; 111
   12e3e:	96 e1       	ldi	r25, 0x16	; 22
   12e40:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12e44:	e7 ec       	ldi	r30, 0xC7	; 199
   12e46:	fb e0       	ldi	r31, 0x0B	; 11
   12e48:	80 e0       	ldi	r24, 0x00	; 0
   12e4a:	90 e0       	ldi	r25, 0x00	; 0
   12e4c:	d6 01       	movw	r26, r12
   12e4e:	a8 0f       	add	r26, r24
   12e50:	b9 1f       	adc	r27, r25
   12e52:	2c 91       	ld	r18, X
   12e54:	21 93       	st	Z+, r18
   12e56:	22 87       	std	Z+10, r18	; 0x0a
   12e58:	25 8b       	std	Z+21, r18	; 0x15
   12e5a:	01 96       	adiw	r24, 0x01	; 1
   12e5c:	86 30       	cpi	r24, 0x06	; 6
   12e5e:	91 05       	cpc	r25, r1
   12e60:	a9 f7       	brne	.-22     	; 0x12e4c <_Z12Pub_Sub_DataPcPhjh+0xb7e>
   12e62:	21 e0       	ldi	r18, 0x01	; 1
   12e64:	20 93 c6 0b 	sts	0x0BC6, r18	; 0x800bc6 <_sWireless_Pump_Param>
   12e68:	32 e0       	ldi	r19, 0x02	; 2
   12e6a:	30 93 d1 0b 	sts	0x0BD1, r19	; 0x800bd1 <_sWireless_Pump_Param+0xb>
   12e6e:	43 e0       	ldi	r20, 0x03	; 3
   12e70:	40 93 dc 0b 	sts	0x0BDC, r20	; 0x800bdc <_sWireless_Pump_Param+0x16>
   12e74:	10 92 d0 0b 	sts	0x0BD0, r1	; 0x800bd0 <_sWireless_Pump_Param+0xa>
   12e78:	10 92 db 0b 	sts	0x0BDB, r1	; 0x800bdb <_sWireless_Pump_Param+0x15>
   12e7c:	10 92 e6 0b 	sts	0x0BE6, r1	; 0x800be6 <_sWireless_Pump_Param+0x20>
   12e80:	10 92 cf 0b 	sts	0x0BCF, r1	; 0x800bcf <_sWireless_Pump_Param+0x9>
   12e84:	10 92 ce 0b 	sts	0x0BCE, r1	; 0x800bce <_sWireless_Pump_Param+0x8>
   12e88:	10 92 da 0b 	sts	0x0BDA, r1	; 0x800bda <_sWireless_Pump_Param+0x14>
   12e8c:	10 92 d9 0b 	sts	0x0BD9, r1	; 0x800bd9 <_sWireless_Pump_Param+0x13>
   12e90:	10 92 e5 0b 	sts	0x0BE5, r1	; 0x800be5 <_sWireless_Pump_Param+0x1f>
   12e94:	10 92 e4 0b 	sts	0x0BE4, r1	; 0x800be4 <_sWireless_Pump_Param+0x1e>
   12e98:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12e9c:	81 30       	cpi	r24, 0x01	; 1
   12e9e:	91 f4       	brne	.+36     	; 0x12ec4 <_Z12Pub_Sub_DataPcPhjh+0xbf6>
   12ea0:	8f e6       	ldi	r24, 0x6F	; 111
   12ea2:	96 e1       	ldi	r25, 0x16	; 22
   12ea4:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12ea8:	6e e9       	ldi	r22, 0x9E	; 158
   12eaa:	77 e3       	ldi	r23, 0x37	; 55
   12eac:	8f e6       	ldi	r24, 0x6F	; 111
   12eae:	96 e1       	ldi	r25, 0x16	; 22
   12eb0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12eb4:	8f e6       	ldi	r24, 0x6F	; 111
   12eb6:	96 e1       	ldi	r25, 0x16	; 22
   12eb8:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12ebc:	8f e6       	ldi	r24, 0x6F	; 111
   12ebe:	96 e1       	ldi	r25, 0x16	; 22
   12ec0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12ec4:	c2 5a       	subi	r28, 0xA2	; 162
   12ec6:	d9 4f       	sbci	r29, 0xF9	; 249
   12ec8:	58 81       	ld	r21, Y
   12eca:	ce 55       	subi	r28, 0x5E	; 94
   12ecc:	d6 40       	sbci	r29, 0x06	; 6
   12ece:	5f 30       	cpi	r21, 0x0F	; 15
   12ed0:	98 f5       	brcc	.+102    	; 0x12f38 <_Z12Pub_Sub_DataPcPhjh+0xc6a>
   12ed2:	d6 01       	movw	r26, r12
   12ed4:	17 96       	adiw	r26, 0x07	; 7
   12ed6:	8c 91       	ld	r24, X
   12ed8:	82 33       	cpi	r24, 0x32	; 50
   12eda:	d1 f0       	breq	.+52     	; 0x12f10 <_Z12Pub_Sub_DataPcPhjh+0xc42>
   12edc:	83 33       	cpi	r24, 0x33	; 51
   12ede:	11 f1       	breq	.+68     	; 0x12f24 <_Z12Pub_Sub_DataPcPhjh+0xc56>
   12ee0:	81 33       	cpi	r24, 0x31	; 49
   12ee2:	a1 f4       	brne	.+40     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12ee4:	f4 01       	movw	r30, r8
   12ee6:	a0 82       	st	Z, r10
   12ee8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12eec:	81 30       	cpi	r24, 0x01	; 1
   12eee:	71 f4       	brne	.+28     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12ef0:	6f e7       	ldi	r22, 0x7F	; 127
   12ef2:	77 e3       	ldi	r23, 0x37	; 55
   12ef4:	8f e6       	ldi	r24, 0x6F	; 111
   12ef6:	96 e1       	ldi	r25, 0x16	; 22
   12ef8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12efc:	8f e6       	ldi	r24, 0x6F	; 111
   12efe:	96 e1       	ldi	r25, 0x16	; 22
   12f00:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   12f04:	8f e6       	ldi	r24, 0x6F	; 111
   12f06:	96 e1       	ldi	r25, 0x16	; 22
   12f08:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12f0c:	10 e0       	ldi	r17, 0x00	; 0
   12f0e:	42 c0       	rjmp	.+132    	; 0x12f94 <_Z12Pub_Sub_DataPcPhjh+0xcc6>
   12f10:	e6 e6       	ldi	r30, 0x66	; 102
   12f12:	d4 01       	movw	r26, r8
   12f14:	ec 93       	st	X, r30
   12f16:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12f1a:	81 30       	cpi	r24, 0x01	; 1
   12f1c:	b9 f7       	brne	.-18     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f1e:	60 e6       	ldi	r22, 0x60	; 96
   12f20:	77 e3       	ldi	r23, 0x37	; 55
   12f22:	e8 cf       	rjmp	.-48     	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0xc26>
   12f24:	e7 e6       	ldi	r30, 0x67	; 103
   12f26:	d4 01       	movw	r26, r8
   12f28:	ec 93       	st	X, r30
   12f2a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12f2e:	81 30       	cpi	r24, 0x01	; 1
   12f30:	69 f7       	brne	.-38     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f32:	61 e4       	ldi	r22, 0x41	; 65
   12f34:	77 e3       	ldi	r23, 0x37	; 55
   12f36:	de cf       	rjmp	.-68     	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0xc26>
   12f38:	c2 5a       	subi	r28, 0xA2	; 162
   12f3a:	d9 4f       	sbci	r29, 0xF9	; 249
   12f3c:	f8 81       	ld	r31, Y
   12f3e:	ce 55       	subi	r28, 0x5E	; 94
   12f40:	d6 40       	sbci	r29, 0x06	; 6
   12f42:	f5 36       	cpi	r31, 0x65	; 101
   12f44:	18 f3       	brcs	.-58     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f46:	d6 01       	movw	r26, r12
   12f48:	17 96       	adiw	r26, 0x07	; 7
   12f4a:	8c 91       	ld	r24, X
   12f4c:	82 33       	cpi	r24, 0x32	; 50
   12f4e:	69 f0       	breq	.+26     	; 0x12f6a <_Z12Pub_Sub_DataPcPhjh+0xc9c>
   12f50:	83 33       	cpi	r24, 0x33	; 51
   12f52:	a9 f0       	breq	.+42     	; 0x12f7e <_Z12Pub_Sub_DataPcPhjh+0xcb0>
   12f54:	81 33       	cpi	r24, 0x31	; 49
   12f56:	d1 f6       	brne	.-76     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f58:	f7 01       	movw	r30, r14
   12f5a:	a0 82       	st	Z, r10
   12f5c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12f60:	81 30       	cpi	r24, 0x01	; 1
   12f62:	a1 f6       	brne	.-88     	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f64:	66 e2       	ldi	r22, 0x26	; 38
   12f66:	77 e3       	ldi	r23, 0x37	; 55
   12f68:	c5 cf       	rjmp	.-118    	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0xc26>
   12f6a:	e6 e6       	ldi	r30, 0x66	; 102
   12f6c:	d7 01       	movw	r26, r14
   12f6e:	ec 93       	st	X, r30
   12f70:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12f74:	81 30       	cpi	r24, 0x01	; 1
   12f76:	51 f6       	brne	.-108    	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f78:	6b e0       	ldi	r22, 0x0B	; 11
   12f7a:	77 e3       	ldi	r23, 0x37	; 55
   12f7c:	bb cf       	rjmp	.-138    	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0xc26>
   12f7e:	e7 e6       	ldi	r30, 0x67	; 103
   12f80:	d7 01       	movw	r26, r14
   12f82:	ec 93       	st	X, r30
   12f84:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12f88:	81 30       	cpi	r24, 0x01	; 1
   12f8a:	09 f0       	breq	.+2      	; 0x12f8e <_Z12Pub_Sub_DataPcPhjh+0xcc0>
   12f8c:	bf cf       	rjmp	.-130    	; 0x12f0c <_Z12Pub_Sub_DataPcPhjh+0xc3e>
   12f8e:	60 ef       	ldi	r22, 0xF0	; 240
   12f90:	76 e3       	ldi	r23, 0x36	; 54
   12f92:	b0 cf       	rjmp	.-160    	; 0x12ef4 <_Z12Pub_Sub_DataPcPhjh+0xc26>
   12f94:	81 2f       	mov	r24, r17
   12f96:	0e 94 54 5b 	call	0xb6a8	; 0xb6a8 <_Z20Wireless_Pump_EEPROMh>
   12f9a:	64 e6       	ldi	r22, 0x64	; 100
   12f9c:	70 e0       	ldi	r23, 0x00	; 0
   12f9e:	80 e0       	ldi	r24, 0x00	; 0
   12fa0:	90 e0       	ldi	r25, 0x00	; 0
   12fa2:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   12fa6:	1f 5f       	subi	r17, 0xFF	; 255
   12fa8:	13 30       	cpi	r17, 0x03	; 3
   12faa:	a1 f7       	brne	.-24     	; 0x12f94 <_Z12Pub_Sub_DataPcPhjh+0xcc6>
   12fac:	22 cc       	rjmp	.-1980   	; 0x127f2 <_Z12Pub_Sub_DataPcPhjh+0x524>
   12fae:	c2 5a       	subi	r28, 0xA2	; 162
   12fb0:	d9 4f       	sbci	r29, 0xF9	; 249
   12fb2:	58 81       	ld	r21, Y
   12fb4:	ce 55       	subi	r28, 0x5E	; 94
   12fb6:	d6 40       	sbci	r29, 0x06	; 6
   12fb8:	5f 30       	cpi	r21, 0x0F	; 15
   12fba:	08 f0       	brcs	.+2      	; 0x12fbe <_Z12Pub_Sub_DataPcPhjh+0xcf0>
   12fbc:	fa c0       	rjmp	.+500    	; 0x131b2 <_Z12Pub_Sub_DataPcPhjh+0xee4>
   12fbe:	69 ee       	ldi	r22, 0xE9	; 233
   12fc0:	76 e3       	ldi	r23, 0x36	; 54
   12fc2:	c3 01       	movw	r24, r6
   12fc4:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   12fc8:	c3 5a       	subi	r28, 0xA3	; 163
   12fca:	d9 4f       	sbci	r29, 0xF9	; 249
   12fcc:	88 83       	st	Y, r24
   12fce:	cd 55       	subi	r28, 0x5D	; 93
   12fd0:	d6 40       	sbci	r29, 0x06	; 6
   12fd2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   12fd6:	81 30       	cpi	r24, 0x01	; 1
   12fd8:	09 f0       	breq	.+2      	; 0x12fdc <_Z12Pub_Sub_DataPcPhjh+0xd0e>
   12fda:	96 c0       	rjmp	.+300    	; 0x13108 <_Z12Pub_Sub_DataPcPhjh+0xe3a>
   12fdc:	6d ec       	ldi	r22, 0xCD	; 205
   12fde:	76 e3       	ldi	r23, 0x36	; 54
   12fe0:	8f e6       	ldi	r24, 0x6F	; 111
   12fe2:	96 e1       	ldi	r25, 0x16	; 22
   12fe4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   12fe8:	60 ec       	ldi	r22, 0xC0	; 192
   12fea:	76 e3       	ldi	r23, 0x36	; 54
   12fec:	8f e6       	ldi	r24, 0x6F	; 111
   12fee:	96 e1       	ldi	r25, 0x16	; 22
   12ff0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   12ff4:	8f e6       	ldi	r24, 0x6F	; 111
   12ff6:	96 e1       	ldi	r25, 0x16	; 22
   12ff8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   12ffc:	c2 5a       	subi	r28, 0xA2	; 162
   12ffe:	d9 4f       	sbci	r29, 0xF9	; 249
   13000:	a8 81       	ld	r26, Y
   13002:	ce 55       	subi	r28, 0x5E	; 94
   13004:	d6 40       	sbci	r29, 0x06	; 6
   13006:	8a 2f       	mov	r24, r26
   13008:	90 e0       	ldi	r25, 0x00	; 0
   1300a:	01 97       	sbiw	r24, 0x01	; 1
   1300c:	26 e0       	ldi	r18, 0x06	; 6
   1300e:	28 9f       	mul	r18, r24
   13010:	f0 01       	movw	r30, r0
   13012:	29 9f       	mul	r18, r25
   13014:	f0 0d       	add	r31, r0
   13016:	11 24       	eor	r1, r1
   13018:	e3 50       	subi	r30, 0x03	; 3
   1301a:	f3 4f       	sbci	r31, 0xF3	; 243
   1301c:	4a e0       	ldi	r20, 0x0A	; 10
   1301e:	50 e0       	ldi	r21, 0x00	; 0
   13020:	60 81       	ld	r22, Z
   13022:	8f e6       	ldi	r24, 0x6F	; 111
   13024:	96 e1       	ldi	r25, 0x16	; 22
   13026:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   1302a:	8f e6       	ldi	r24, 0x6F	; 111
   1302c:	96 e1       	ldi	r25, 0x16	; 22
   1302e:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13032:	8f e6       	ldi	r24, 0x6F	; 111
   13034:	96 e1       	ldi	r25, 0x16	; 22
   13036:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1303a:	66 eb       	ldi	r22, 0xB6	; 182
   1303c:	76 e3       	ldi	r23, 0x36	; 54
   1303e:	8f e6       	ldi	r24, 0x6F	; 111
   13040:	96 e1       	ldi	r25, 0x16	; 22
   13042:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13046:	b2 01       	movw	r22, r4
   13048:	8f e6       	ldi	r24, 0x6F	; 111
   1304a:	96 e1       	ldi	r25, 0x16	; 22
   1304c:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   13050:	8f e6       	ldi	r24, 0x6F	; 111
   13052:	96 e1       	ldi	r25, 0x16	; 22
   13054:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13058:	8f e6       	ldi	r24, 0x6F	; 111
   1305a:	96 e1       	ldi	r25, 0x16	; 22
   1305c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13060:	6c ea       	ldi	r22, 0xAC	; 172
   13062:	76 e3       	ldi	r23, 0x36	; 54
   13064:	8f e6       	ldi	r24, 0x6F	; 111
   13066:	96 e1       	ldi	r25, 0x16	; 22
   13068:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1306c:	b2 01       	movw	r22, r4
   1306e:	68 5f       	subi	r22, 0xF8	; 248
   13070:	7f 4f       	sbci	r23, 0xFF	; 255
   13072:	8f e6       	ldi	r24, 0x6F	; 111
   13074:	96 e1       	ldi	r25, 0x16	; 22
   13076:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1307a:	8f e6       	ldi	r24, 0x6F	; 111
   1307c:	96 e1       	ldi	r25, 0x16	; 22
   1307e:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13082:	8f e6       	ldi	r24, 0x6F	; 111
   13084:	96 e1       	ldi	r25, 0x16	; 22
   13086:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1308a:	62 ea       	ldi	r22, 0xA2	; 162
   1308c:	76 e3       	ldi	r23, 0x36	; 54
   1308e:	8f e6       	ldi	r24, 0x6F	; 111
   13090:	96 e1       	ldi	r25, 0x16	; 22
   13092:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13096:	b2 01       	movw	r22, r4
   13098:	60 5f       	subi	r22, 0xF0	; 240
   1309a:	7f 4f       	sbci	r23, 0xFF	; 255
   1309c:	8f e6       	ldi	r24, 0x6F	; 111
   1309e:	96 e1       	ldi	r25, 0x16	; 22
   130a0:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   130a4:	8f e6       	ldi	r24, 0x6F	; 111
   130a6:	96 e1       	ldi	r25, 0x16	; 22
   130a8:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   130ac:	8f e6       	ldi	r24, 0x6F	; 111
   130ae:	96 e1       	ldi	r25, 0x16	; 22
   130b0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   130b4:	68 e9       	ldi	r22, 0x98	; 152
   130b6:	76 e3       	ldi	r23, 0x36	; 54
   130b8:	8f e6       	ldi	r24, 0x6F	; 111
   130ba:	96 e1       	ldi	r25, 0x16	; 22
   130bc:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   130c0:	b2 01       	movw	r22, r4
   130c2:	68 5e       	subi	r22, 0xE8	; 232
   130c4:	7f 4f       	sbci	r23, 0xFF	; 255
   130c6:	8f e6       	ldi	r24, 0x6F	; 111
   130c8:	96 e1       	ldi	r25, 0x16	; 22
   130ca:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   130ce:	8f e6       	ldi	r24, 0x6F	; 111
   130d0:	96 e1       	ldi	r25, 0x16	; 22
   130d2:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   130d6:	8f e6       	ldi	r24, 0x6F	; 111
   130d8:	96 e1       	ldi	r25, 0x16	; 22
   130da:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   130de:	6e e8       	ldi	r22, 0x8E	; 142
   130e0:	76 e3       	ldi	r23, 0x36	; 54
   130e2:	8f e6       	ldi	r24, 0x6F	; 111
   130e4:	96 e1       	ldi	r25, 0x16	; 22
   130e6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   130ea:	b2 01       	movw	r22, r4
   130ec:	60 5e       	subi	r22, 0xE0	; 224
   130ee:	7f 4f       	sbci	r23, 0xFF	; 255
   130f0:	8f e6       	ldi	r24, 0x6F	; 111
   130f2:	96 e1       	ldi	r25, 0x16	; 22
   130f4:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   130f8:	8f e6       	ldi	r24, 0x6F	; 111
   130fa:	96 e1       	ldi	r25, 0x16	; 22
   130fc:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13100:	8f e6       	ldi	r24, 0x6F	; 111
   13102:	96 e1       	ldi	r25, 0x16	; 22
   13104:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13108:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1310c:	81 30       	cpi	r24, 0x01	; 1
   1310e:	71 f0       	breq	.+28     	; 0x1312c <_Z12Pub_Sub_DataPcPhjh+0xe5e>
   13110:	c9 59       	subi	r28, 0x99	; 153
   13112:	d9 4f       	sbci	r29, 0xF9	; 249
   13114:	88 81       	ld	r24, Y
   13116:	c7 56       	subi	r28, 0x67	; 103
   13118:	d6 40       	sbci	r29, 0x06	; 6
   1311a:	0e 94 15 7d 	call	0xfa2a	; 0xfa2a <_Z16Lira_Data_EEPROMh>
   1311e:	b1 e0       	ldi	r27, 0x01	; 1
   13120:	ce 59       	subi	r28, 0x9E	; 158
   13122:	d9 4f       	sbci	r29, 0xF9	; 249
   13124:	b8 83       	st	Y, r27
   13126:	c2 56       	subi	r28, 0x62	; 98
   13128:	d6 40       	sbci	r29, 0x06	; 6
   1312a:	92 c1       	rjmp	.+804    	; 0x13450 <_Z12Pub_Sub_DataPcPhjh+0x1182>
   1312c:	00 e0       	ldi	r16, 0x00	; 0
   1312e:	10 e0       	ldi	r17, 0x00	; 0
   13130:	8f e6       	ldi	r24, 0x6F	; 111
   13132:	96 e1       	ldi	r25, 0x16	; 22
   13134:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13138:	62 e8       	ldi	r22, 0x82	; 130
   1313a:	76 e3       	ldi	r23, 0x36	; 54
   1313c:	8f e6       	ldi	r24, 0x6F	; 111
   1313e:	96 e1       	ldi	r25, 0x16	; 22
   13140:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13144:	cb 59       	subi	r28, 0x9B	; 155
   13146:	d9 4f       	sbci	r29, 0xF9	; 249
   13148:	e8 81       	ld	r30, Y
   1314a:	f9 81       	ldd	r31, Y+1	; 0x01
   1314c:	c5 56       	subi	r28, 0x65	; 101
   1314e:	d6 40       	sbci	r29, 0x06	; 6
   13150:	e0 0f       	add	r30, r16
   13152:	f1 1f       	adc	r31, r17
   13154:	e8 50       	subi	r30, 0x08	; 8
   13156:	f3 4f       	sbci	r31, 0xF3	; 243
   13158:	4a e0       	ldi	r20, 0x0A	; 10
   1315a:	50 e0       	ldi	r21, 0x00	; 0
   1315c:	60 81       	ld	r22, Z
   1315e:	8f e6       	ldi	r24, 0x6F	; 111
   13160:	96 e1       	ldi	r25, 0x16	; 22
   13162:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   13166:	8f e6       	ldi	r24, 0x6F	; 111
   13168:	96 e1       	ldi	r25, 0x16	; 22
   1316a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1316e:	0f 5f       	subi	r16, 0xFF	; 255
   13170:	1f 4f       	sbci	r17, 0xFF	; 255
   13172:	05 30       	cpi	r16, 0x05	; 5
   13174:	11 05       	cpc	r17, r1
   13176:	e1 f6       	brne	.-72     	; 0x13130 <_Z12Pub_Sub_DataPcPhjh+0xe62>
   13178:	00 e0       	ldi	r16, 0x00	; 0
   1317a:	10 e0       	ldi	r17, 0x00	; 0
   1317c:	8f e6       	ldi	r24, 0x6F	; 111
   1317e:	96 e1       	ldi	r25, 0x16	; 22
   13180:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13184:	67 e7       	ldi	r22, 0x77	; 119
   13186:	76 e3       	ldi	r23, 0x36	; 54
   13188:	8f e6       	ldi	r24, 0x6F	; 111
   1318a:	96 e1       	ldi	r25, 0x16	; 22
   1318c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13190:	b8 01       	movw	r22, r16
   13192:	68 51       	subi	r22, 0x18	; 24
   13194:	74 4f       	sbci	r23, 0xF4	; 244
   13196:	8f e6       	ldi	r24, 0x6F	; 111
   13198:	96 e1       	ldi	r25, 0x16	; 22
   1319a:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1319e:	8f e6       	ldi	r24, 0x6F	; 111
   131a0:	96 e1       	ldi	r25, 0x16	; 22
   131a2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   131a6:	03 5f       	subi	r16, 0xF3	; 243
   131a8:	1f 4f       	sbci	r17, 0xFF	; 255
   131aa:	04 33       	cpi	r16, 0x34	; 52
   131ac:	11 05       	cpc	r17, r1
   131ae:	31 f7       	brne	.-52     	; 0x1317c <_Z12Pub_Sub_DataPcPhjh+0xeae>
   131b0:	af cf       	rjmp	.-162    	; 0x13110 <_Z12Pub_Sub_DataPcPhjh+0xe42>
   131b2:	c2 5a       	subi	r28, 0xA2	; 162
   131b4:	d9 4f       	sbci	r29, 0xF9	; 249
   131b6:	e8 81       	ld	r30, Y
   131b8:	ce 55       	subi	r28, 0x5E	; 94
   131ba:	d6 40       	sbci	r29, 0x06	; 6
   131bc:	e5 36       	cpi	r30, 0x65	; 101
   131be:	08 f4       	brcc	.+2      	; 0x131c2 <_Z12Pub_Sub_DataPcPhjh+0xef4>
   131c0:	47 c1       	rjmp	.+654    	; 0x13450 <_Z12Pub_Sub_DataPcPhjh+0x1182>
   131c2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   131c6:	0e 2f       	mov	r16, r30
   131c8:	10 e0       	ldi	r17, 0x00	; 0
   131ca:	81 30       	cpi	r24, 0x01	; 1
   131cc:	09 f4       	brne	.+2      	; 0x131d0 <_Z12Pub_Sub_DataPcPhjh+0xf02>
   131ce:	5c c0       	rjmp	.+184    	; 0x13288 <_Z12Pub_Sub_DataPcPhjh+0xfba>
   131d0:	78 01       	movw	r14, r16
   131d2:	f5 e6       	ldi	r31, 0x65	; 101
   131d4:	ef 1a       	sub	r14, r31
   131d6:	f1 08       	sbc	r15, r1
   131d8:	66 e3       	ldi	r22, 0x36	; 54
   131da:	76 e3       	ldi	r23, 0x36	; 54
   131dc:	c3 01       	movw	r24, r6
   131de:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   131e2:	60 e0       	ldi	r22, 0x00	; 0
   131e4:	70 e0       	ldi	r23, 0x00	; 0
   131e6:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   131ea:	2b e1       	ldi	r18, 0x1B	; 27
   131ec:	2e 9d       	mul	r18, r14
   131ee:	80 01       	movw	r16, r0
   131f0:	2f 9d       	mul	r18, r15
   131f2:	10 0d       	add	r17, r0
   131f4:	11 24       	eor	r1, r1
   131f6:	01 56       	subi	r16, 0x61	; 97
   131f8:	10 4f       	sbci	r17, 0xF0	; 240
   131fa:	d8 01       	movw	r26, r16
   131fc:	1d 96       	adiw	r26, 0x0d	; 13
   131fe:	9c 93       	st	X, r25
   13200:	8e 93       	st	-X, r24
   13202:	1c 97       	sbiw	r26, 0x0c	; 12
   13204:	62 e3       	ldi	r22, 0x32	; 50
   13206:	76 e3       	ldi	r23, 0x36	; 54
   13208:	c3 01       	movw	r24, r6
   1320a:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1320e:	61 e0       	ldi	r22, 0x01	; 1
   13210:	70 e0       	ldi	r23, 0x00	; 0
   13212:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13216:	f8 01       	movw	r30, r16
   13218:	97 87       	std	Z+15, r25	; 0x0f
   1321a:	86 87       	std	Z+14, r24	; 0x0e
   1321c:	6e e2       	ldi	r22, 0x2E	; 46
   1321e:	76 e3       	ldi	r23, 0x36	; 54
   13220:	c3 01       	movw	r24, r6
   13222:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13226:	60 e0       	ldi	r22, 0x00	; 0
   13228:	70 e0       	ldi	r23, 0x00	; 0
   1322a:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1322e:	d8 01       	movw	r26, r16
   13230:	53 96       	adiw	r26, 0x13	; 19
   13232:	9c 93       	st	X, r25
   13234:	8e 93       	st	-X, r24
   13236:	52 97       	sbiw	r26, 0x12	; 18
   13238:	6a e2       	ldi	r22, 0x2A	; 42
   1323a:	76 e3       	ldi	r23, 0x36	; 54
   1323c:	c3 01       	movw	r24, r6
   1323e:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13242:	61 e0       	ldi	r22, 0x01	; 1
   13244:	70 e0       	ldi	r23, 0x00	; 0
   13246:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   1324a:	f8 01       	movw	r30, r16
   1324c:	95 8b       	std	Z+21, r25	; 0x15
   1324e:	84 8b       	std	Z+20, r24	; 0x14
   13250:	61 e2       	ldi	r22, 0x21	; 33
   13252:	76 e3       	ldi	r23, 0x36	; 54
   13254:	c3 01       	movw	r24, r6
   13256:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1325a:	d8 01       	movw	r26, r16
   1325c:	58 96       	adiw	r26, 0x18	; 24
   1325e:	8c 93       	st	X, r24
   13260:	58 97       	sbiw	r26, 0x18	; 24
   13262:	1a 96       	adiw	r26, 0x0a	; 10
   13264:	1c 92       	st	X, r1
   13266:	1a 97       	sbiw	r26, 0x0a	; 10
   13268:	1b 96       	adiw	r26, 0x0b	; 11
   1326a:	1c 92       	st	X, r1
   1326c:	1b 97       	sbiw	r26, 0x0b	; 11
   1326e:	14 96       	adiw	r26, 0x04	; 4
   13270:	1c 92       	st	X, r1
   13272:	1e 92       	st	-X, r1
   13274:	13 97       	sbiw	r26, 0x03	; 3
   13276:	c2 5a       	subi	r28, 0xA2	; 162
   13278:	d9 4f       	sbci	r29, 0xF9	; 249
   1327a:	b8 81       	ld	r27, Y
   1327c:	ce 55       	subi	r28, 0x5E	; 94
   1327e:	d6 40       	sbci	r29, 0x06	; 6
   13280:	b9 36       	cpi	r27, 0x69	; 105
   13282:	09 f0       	breq	.+2      	; 0x13286 <_Z12Pub_Sub_DataPcPhjh+0xfb8>
   13284:	7b c0       	rjmp	.+246    	; 0x1337c <_Z12Pub_Sub_DataPcPhjh+0x10ae>
   13286:	47 c0       	rjmp	.+142    	; 0x13316 <_Z12Pub_Sub_DataPcPhjh+0x1048>
   13288:	6b e5       	ldi	r22, 0x5B	; 91
   1328a:	76 e3       	ldi	r23, 0x36	; 54
   1328c:	8f e6       	ldi	r24, 0x6F	; 111
   1328e:	96 e1       	ldi	r25, 0x16	; 22
   13290:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   13294:	66 e4       	ldi	r22, 0x46	; 70
   13296:	76 e3       	ldi	r23, 0x36	; 54
   13298:	8f e6       	ldi	r24, 0x6F	; 111
   1329a:	96 e1       	ldi	r25, 0x16	; 22
   1329c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   132a0:	c8 01       	movw	r24, r16
   132a2:	85 56       	subi	r24, 0x65	; 101
   132a4:	91 09       	sbc	r25, r1
   132a6:	2b e1       	ldi	r18, 0x1B	; 27
   132a8:	28 9f       	mul	r18, r24
   132aa:	60 01       	movw	r12, r0
   132ac:	29 9f       	mul	r18, r25
   132ae:	d0 0c       	add	r13, r0
   132b0:	11 24       	eor	r1, r1
   132b2:	f6 01       	movw	r30, r12
   132b4:	e1 56       	subi	r30, 0x61	; 97
   132b6:	f0 4f       	sbci	r31, 0xF0	; 240
   132b8:	4a e0       	ldi	r20, 0x0A	; 10
   132ba:	50 e0       	ldi	r21, 0x00	; 0
   132bc:	61 81       	ldd	r22, Z+1	; 0x01
   132be:	8f e6       	ldi	r24, 0x6F	; 111
   132c0:	96 e1       	ldi	r25, 0x16	; 22
   132c2:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   132c6:	8f e6       	ldi	r24, 0x6F	; 111
   132c8:	96 e1       	ldi	r25, 0x16	; 22
   132ca:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   132ce:	e1 2c       	mov	r14, r1
   132d0:	f1 2c       	mov	r15, r1
   132d2:	8f e6       	ldi	r24, 0x6F	; 111
   132d4:	96 e1       	ldi	r25, 0x16	; 22
   132d6:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   132da:	6a e3       	ldi	r22, 0x3A	; 58
   132dc:	76 e3       	ldi	r23, 0x36	; 54
   132de:	8f e6       	ldi	r24, 0x6F	; 111
   132e0:	96 e1       	ldi	r25, 0x16	; 22
   132e2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   132e6:	f6 01       	movw	r30, r12
   132e8:	ee 0d       	add	r30, r14
   132ea:	ff 1d       	adc	r31, r15
   132ec:	e1 56       	subi	r30, 0x61	; 97
   132ee:	f0 4f       	sbci	r31, 0xF0	; 240
   132f0:	4a e0       	ldi	r20, 0x0A	; 10
   132f2:	50 e0       	ldi	r21, 0x00	; 0
   132f4:	65 81       	ldd	r22, Z+5	; 0x05
   132f6:	8f e6       	ldi	r24, 0x6F	; 111
   132f8:	96 e1       	ldi	r25, 0x16	; 22
   132fa:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   132fe:	8f e6       	ldi	r24, 0x6F	; 111
   13300:	96 e1       	ldi	r25, 0x16	; 22
   13302:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13306:	ef ef       	ldi	r30, 0xFF	; 255
   13308:	ee 1a       	sub	r14, r30
   1330a:	fe 0a       	sbc	r15, r30
   1330c:	f5 e0       	ldi	r31, 0x05	; 5
   1330e:	ef 16       	cp	r14, r31
   13310:	f1 04       	cpc	r15, r1
   13312:	f9 f6       	brne	.-66     	; 0x132d2 <_Z12Pub_Sub_DataPcPhjh+0x1004>
   13314:	5d cf       	rjmp	.-326    	; 0x131d0 <_Z12Pub_Sub_DataPcPhjh+0xf02>
   13316:	10 92 44 16 	sts	0x1644, r1	; 0x801644 <_sRuble_Parameters+0xdf>
   1331a:	10 92 45 16 	sts	0x1645, r1	; 0x801645 <_sRuble_Parameters+0xe0>
   1331e:	10 92 46 16 	sts	0x1646, r1	; 0x801646 <_sRuble_Parameters+0xe1>
   13322:	10 92 47 16 	sts	0x1647, r1	; 0x801647 <_sRuble_Parameters+0xe2>
   13326:	d8 01       	movw	r26, r16
   13328:	1c 96       	adiw	r26, 0x0c	; 12
   1332a:	8d 91       	ld	r24, X+
   1332c:	9c 91       	ld	r25, X
   1332e:	1d 97       	sbiw	r26, 0x0d	; 13
   13330:	00 97       	sbiw	r24, 0x00	; 0
   13332:	e1 f0       	breq	.+56     	; 0x1336c <_Z12Pub_Sub_DataPcPhjh+0x109e>
   13334:	52 96       	adiw	r26, 0x12	; 18
   13336:	6d 91       	ld	r22, X+
   13338:	7c 91       	ld	r23, X
   1333a:	53 97       	sbiw	r26, 0x13	; 19
   1333c:	40 e1       	ldi	r20, 0x10	; 16
   1333e:	5e e0       	ldi	r21, 0x0E	; 14
   13340:	64 9f       	mul	r22, r20
   13342:	90 01       	movw	r18, r0
   13344:	65 9f       	mul	r22, r21
   13346:	30 0d       	add	r19, r0
   13348:	74 9f       	mul	r23, r20
   1334a:	30 0d       	add	r19, r0
   1334c:	11 24       	eor	r1, r1
   1334e:	30 93 bb 0b 	sts	0x0BBB, r19	; 0x800bbb <_sSchedules+0x2cb>
   13352:	20 93 ba 0b 	sts	0x0BBA, r18	; 0x800bba <_sSchedules+0x2ca>
   13356:	4c e3       	ldi	r20, 0x3C	; 60
   13358:	48 9f       	mul	r20, r24
   1335a:	90 01       	movw	r18, r0
   1335c:	49 9f       	mul	r20, r25
   1335e:	30 0d       	add	r19, r0
   13360:	11 24       	eor	r1, r1
   13362:	30 93 bd 0b 	sts	0x0BBD, r19	; 0x800bbd <_sSchedules+0x2cd>
   13366:	20 93 bc 0b 	sts	0x0BBC, r18	; 0x800bbc <_sSchedules+0x2cc>
   1336a:	08 c0       	rjmp	.+16     	; 0x1337c <_Z12Pub_Sub_DataPcPhjh+0x10ae>
   1336c:	10 92 bd 0b 	sts	0x0BBD, r1	; 0x800bbd <_sSchedules+0x2cd>
   13370:	10 92 bc 0b 	sts	0x0BBC, r1	; 0x800bbc <_sSchedules+0x2cc>
   13374:	10 92 bb 0b 	sts	0x0BBB, r1	; 0x800bbb <_sSchedules+0x2cb>
   13378:	10 92 ba 0b 	sts	0x0BBA, r1	; 0x800bba <_sSchedules+0x2ca>
   1337c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13380:	81 30       	cpi	r24, 0x01	; 1
   13382:	09 f0       	breq	.+2      	; 0x13386 <_Z12Pub_Sub_DataPcPhjh+0x10b8>
   13384:	57 c0       	rjmp	.+174    	; 0x13434 <_Z12Pub_Sub_DataPcPhjh+0x1166>
   13386:	8b e1       	ldi	r24, 0x1B	; 27
   13388:	8e 9d       	mul	r24, r14
   1338a:	80 01       	movw	r16, r0
   1338c:	8f 9d       	mul	r24, r15
   1338e:	10 0d       	add	r17, r0
   13390:	11 24       	eor	r1, r1
   13392:	05 55       	subi	r16, 0x55	; 85
   13394:	10 4f       	sbci	r17, 0xF0	; 240
   13396:	d1 2c       	mov	r13, r1
   13398:	8f e6       	ldi	r24, 0x6F	; 111
   1339a:	96 e1       	ldi	r25, 0x16	; 22
   1339c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   133a0:	6a e1       	ldi	r22, 0x1A	; 26
   133a2:	76 e3       	ldi	r23, 0x36	; 54
   133a4:	8f e6       	ldi	r24, 0x6F	; 111
   133a6:	96 e1       	ldi	r25, 0x16	; 22
   133a8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   133ac:	f8 01       	movw	r30, r16
   133ae:	61 91       	ld	r22, Z+
   133b0:	71 91       	ld	r23, Z+
   133b2:	8f 01       	movw	r16, r30
   133b4:	4a e0       	ldi	r20, 0x0A	; 10
   133b6:	50 e0       	ldi	r21, 0x00	; 0
   133b8:	8f e6       	ldi	r24, 0x6F	; 111
   133ba:	96 e1       	ldi	r25, 0x16	; 22
   133bc:	0e 94 49 d1 	call	0x1a292	; 0x1a292 <_ZN5Print5printEji>
   133c0:	8f e6       	ldi	r24, 0x6F	; 111
   133c2:	96 e1       	ldi	r25, 0x16	; 22
   133c4:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   133c8:	63 e1       	ldi	r22, 0x13	; 19
   133ca:	76 e3       	ldi	r23, 0x36	; 54
   133cc:	8f e6       	ldi	r24, 0x6F	; 111
   133ce:	96 e1       	ldi	r25, 0x16	; 22
   133d0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   133d4:	d8 01       	movw	r26, r16
   133d6:	14 96       	adiw	r26, 0x04	; 4
   133d8:	6d 91       	ld	r22, X+
   133da:	7c 91       	ld	r23, X
   133dc:	15 97       	sbiw	r26, 0x05	; 5
   133de:	4a e0       	ldi	r20, 0x0A	; 10
   133e0:	50 e0       	ldi	r21, 0x00	; 0
   133e2:	8f e6       	ldi	r24, 0x6F	; 111
   133e4:	96 e1       	ldi	r25, 0x16	; 22
   133e6:	0e 94 49 d1 	call	0x1a292	; 0x1a292 <_ZN5Print5printEji>
   133ea:	8f e6       	ldi	r24, 0x6F	; 111
   133ec:	96 e1       	ldi	r25, 0x16	; 22
   133ee:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   133f2:	d3 94       	inc	r13
   133f4:	b2 e0       	ldi	r27, 0x02	; 2
   133f6:	db 12       	cpse	r13, r27
   133f8:	cf cf       	rjmp	.-98     	; 0x13398 <_Z12Pub_Sub_DataPcPhjh+0x10ca>
   133fa:	8f e6       	ldi	r24, 0x6F	; 111
   133fc:	96 e1       	ldi	r25, 0x16	; 22
   133fe:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13402:	67 e0       	ldi	r22, 0x07	; 7
   13404:	76 e3       	ldi	r23, 0x36	; 54
   13406:	8f e6       	ldi	r24, 0x6F	; 111
   13408:	96 e1       	ldi	r25, 0x16	; 22
   1340a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1340e:	8b e1       	ldi	r24, 0x1B	; 27
   13410:	8e 9d       	mul	r24, r14
   13412:	f0 01       	movw	r30, r0
   13414:	8f 9d       	mul	r24, r15
   13416:	f0 0d       	add	r31, r0
   13418:	11 24       	eor	r1, r1
   1341a:	e1 56       	subi	r30, 0x61	; 97
   1341c:	f0 4f       	sbci	r31, 0xF0	; 240
   1341e:	4a e0       	ldi	r20, 0x0A	; 10
   13420:	50 e0       	ldi	r21, 0x00	; 0
   13422:	60 8d       	ldd	r22, Z+24	; 0x18
   13424:	8f e6       	ldi	r24, 0x6F	; 111
   13426:	96 e1       	ldi	r25, 0x16	; 22
   13428:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   1342c:	8f e6       	ldi	r24, 0x6F	; 111
   1342e:	96 e1       	ldi	r25, 0x16	; 22
   13430:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13434:	c2 5a       	subi	r28, 0xA2	; 162
   13436:	d9 4f       	sbci	r29, 0xF9	; 249
   13438:	88 81       	ld	r24, Y
   1343a:	ce 55       	subi	r28, 0x5E	; 94
   1343c:	d6 40       	sbci	r29, 0x06	; 6
   1343e:	84 56       	subi	r24, 0x64	; 100
   13440:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   13444:	e1 e0       	ldi	r30, 0x01	; 1
   13446:	ce 59       	subi	r28, 0x9E	; 158
   13448:	d9 4f       	sbci	r29, 0xF9	; 249
   1344a:	e8 83       	st	Y, r30
   1344c:	c2 56       	subi	r28, 0x62	; 98
   1344e:	d6 40       	sbci	r29, 0x06	; 6
   13450:	b1 01       	movw	r22, r2
   13452:	86 ef       	ldi	r24, 0xF6	; 246
   13454:	9e e0       	ldi	r25, 0x0E	; 14
   13456:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   1345a:	89 2b       	or	r24, r25
   1345c:	09 f0       	breq	.+2      	; 0x13460 <_Z12Pub_Sub_DataPcPhjh+0x1192>
   1345e:	e7 c1       	rjmp	.+974    	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   13460:	62 e0       	ldi	r22, 0x02	; 2
   13462:	76 e3       	ldi	r23, 0x36	; 54
   13464:	c3 01       	movw	r24, r6
   13466:	0e 94 d9 8b 	call	0x117b2	; 0x117b2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperjEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1346a:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1346e:	fc 01       	movw	r30, r24
   13470:	31 97       	sbiw	r30, 0x01	; 1
   13472:	e8 30       	cpi	r30, 0x08	; 8
   13474:	f1 05       	cpc	r31, r1
   13476:	08 f0       	brcs	.+2      	; 0x1347a <_Z12Pub_Sub_DataPcPhjh+0x11ac>
   13478:	d4 c1       	rjmp	.+936    	; 0x13822 <_Z12Pub_Sub_DataPcPhjh+0x1554>
   1347a:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1347e:	88 27       	eor	r24, r24
   13480:	e1 51       	subi	r30, 0x11	; 17
   13482:	ff 4f       	sbci	r31, 0xFF	; 255
   13484:	8f 4f       	sbci	r24, 0xFF	; 255
   13486:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
   1348a:	91 30       	cpi	r25, 0x01	; 1
   1348c:	51 f4       	brne	.+20     	; 0x134a2 <_Z12Pub_Sub_DataPcPhjh+0x11d4>
   1348e:	6c ee       	ldi	r22, 0xEC	; 236
   13490:	75 e3       	ldi	r23, 0x35	; 53
   13492:	8f e6       	ldi	r24, 0x6F	; 111
   13494:	96 e1       	ldi	r25, 0x16	; 22
   13496:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1349a:	8f e6       	ldi	r24, 0x6F	; 111
   1349c:	96 e1       	ldi	r25, 0x16	; 22
   1349e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   134a2:	68 ee       	ldi	r22, 0xE8	; 232
   134a4:	75 e3       	ldi	r23, 0x35	; 53
   134a6:	c3 01       	movw	r24, r6
   134a8:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   134ac:	bc 01       	movw	r22, r24
   134ae:	c2 01       	movw	r24, r4
   134b0:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   134b4:	27 ee       	ldi	r18, 0xE7	; 231
   134b6:	3b e0       	ldi	r19, 0x0B	; 11
   134b8:	c1 2c       	mov	r12, r1
   134ba:	d1 2c       	mov	r13, r1
   134bc:	9c 2c       	mov	r9, r12
   134be:	f2 01       	movw	r30, r4
   134c0:	80 e0       	ldi	r24, 0x00	; 0
   134c2:	90 e0       	ldi	r25, 0x00	; 0
   134c4:	40 e0       	ldi	r20, 0x00	; 0
   134c6:	51 91       	ld	r21, Z+
   134c8:	d9 01       	movw	r26, r18
   134ca:	a8 0f       	add	r26, r24
   134cc:	b9 1f       	adc	r27, r25
   134ce:	11 96       	adiw	r26, 0x01	; 1
   134d0:	6c 91       	ld	r22, X
   134d2:	65 13       	cpse	r22, r21
   134d4:	01 c0       	rjmp	.+2      	; 0x134d8 <_Z12Pub_Sub_DataPcPhjh+0x120a>
   134d6:	4f 5f       	subi	r20, 0xFF	; 255
   134d8:	01 96       	adiw	r24, 0x01	; 1
   134da:	86 30       	cpi	r24, 0x06	; 6
   134dc:	91 05       	cpc	r25, r1
   134de:	99 f7       	brne	.-26     	; 0x134c6 <_Z12Pub_Sub_DataPcPhjh+0x11f8>
   134e0:	c6 01       	movw	r24, r12
   134e2:	01 96       	adiw	r24, 0x01	; 1
   134e4:	7c 01       	movw	r14, r24
   134e6:	46 30       	cpi	r20, 0x06	; 6
   134e8:	09 f0       	breq	.+2      	; 0x134ec <_Z12Pub_Sub_DataPcPhjh+0x121e>
   134ea:	b0 c0       	rjmp	.+352    	; 0x1364c <_Z12Pub_Sub_DataPcPhjh+0x137e>
   134ec:	8d e0       	ldi	r24, 0x0D	; 13
   134ee:	8c 9d       	mul	r24, r12
   134f0:	80 01       	movw	r16, r0
   134f2:	8d 9d       	mul	r24, r13
   134f4:	10 0d       	add	r17, r0
   134f6:	11 24       	eor	r1, r1
   134f8:	d8 01       	movw	r26, r16
   134fa:	a8 51       	subi	r26, 0x18	; 24
   134fc:	b4 4f       	sbci	r27, 0xF4	; 244
   134fe:	5d 01       	movw	r10, r26
   13500:	6c e8       	ldi	r22, 0x8C	; 140
   13502:	77 e0       	ldi	r23, 0x07	; 7
   13504:	cd 01       	movw	r24, r26
   13506:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   1350a:	27 e0       	ldi	r18, 0x07	; 7
   1350c:	2c 9d       	mul	r18, r12
   1350e:	c0 01       	movw	r24, r0
   13510:	2d 9d       	mul	r18, r13
   13512:	90 0d       	add	r25, r0
   13514:	11 24       	eor	r1, r1
   13516:	b5 01       	movw	r22, r10
   13518:	87 52       	subi	r24, 0x27	; 39
   1351a:	9a 4e       	sbci	r25, 0xEA	; 234
   1351c:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   13520:	09 51       	subi	r16, 0x19	; 25
   13522:	14 4f       	sbci	r17, 0xF4	; 244
   13524:	f8 01       	movw	r30, r16
   13526:	10 82       	st	Z, r1
   13528:	8f ef       	ldi	r24, 0xFF	; 255
   1352a:	90 e0       	ldi	r25, 0x00	; 0
   1352c:	91 87       	std	Z+9, r25	; 0x09
   1352e:	80 87       	std	Z+8, r24	; 0x08
   13530:	81 e0       	ldi	r24, 0x01	; 1
   13532:	83 87       	std	Z+11, r24	; 0x0b
   13534:	12 86       	std	Z+10, r1	; 0x0a
   13536:	14 86       	std	Z+12, r1	; 0x0c
   13538:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1353c:	81 30       	cpi	r24, 0x01	; 1
   1353e:	79 f5       	brne	.+94     	; 0x1359e <_Z12Pub_Sub_DataPcPhjh+0x12d0>
   13540:	6d ec       	ldi	r22, 0xCD	; 205
   13542:	75 e3       	ldi	r23, 0x35	; 53
   13544:	8f e6       	ldi	r24, 0x6F	; 111
   13546:	96 e1       	ldi	r25, 0x16	; 22
   13548:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1354c:	8f e6       	ldi	r24, 0x6F	; 111
   1354e:	96 e1       	ldi	r25, 0x16	; 22
   13550:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13554:	62 ec       	ldi	r22, 0xC2	; 194
   13556:	75 e3       	ldi	r23, 0x35	; 53
   13558:	8f e6       	ldi	r24, 0x6F	; 111
   1355a:	96 e1       	ldi	r25, 0x16	; 22
   1355c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13560:	8f e6       	ldi	r24, 0x6F	; 111
   13562:	96 e1       	ldi	r25, 0x16	; 22
   13564:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13568:	4a e0       	ldi	r20, 0x0A	; 10
   1356a:	50 e0       	ldi	r21, 0x00	; 0
   1356c:	d8 01       	movw	r26, r16
   1356e:	6c 91       	ld	r22, X
   13570:	8f e6       	ldi	r24, 0x6F	; 111
   13572:	96 e1       	ldi	r25, 0x16	; 22
   13574:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13578:	67 eb       	ldi	r22, 0xB7	; 183
   1357a:	75 e3       	ldi	r23, 0x35	; 53
   1357c:	8f e6       	ldi	r24, 0x6F	; 111
   1357e:	96 e1       	ldi	r25, 0x16	; 22
   13580:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13584:	8f e6       	ldi	r24, 0x6F	; 111
   13586:	96 e1       	ldi	r25, 0x16	; 22
   13588:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1358c:	b5 01       	movw	r22, r10
   1358e:	8f e6       	ldi	r24, 0x6F	; 111
   13590:	96 e1       	ldi	r25, 0x16	; 22
   13592:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   13596:	8f e6       	ldi	r24, 0x6F	; 111
   13598:	96 e1       	ldi	r25, 0x16	; 22
   1359a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1359e:	89 2d       	mov	r24, r9
   135a0:	0e 94 12 5b 	call	0xb624	; 0xb624 <_Z16Euro_Data_EEPROMh>
   135a4:	86 01       	movw	r16, r12
   135a6:	0b 5f       	subi	r16, 0xFB	; 251
   135a8:	1f 4f       	sbci	r17, 0xFF	; 255
   135aa:	4d ef       	ldi	r20, 0xFD	; 253
   135ac:	84 2e       	mov	r8, r20
   135ae:	4c e0       	ldi	r20, 0x0C	; 12
   135b0:	94 2e       	mov	r9, r20
   135b2:	cc 24       	eor	r12, r12
   135b4:	c3 94       	inc	r12
   135b6:	d1 2c       	mov	r13, r1
   135b8:	44 24       	eor	r4, r4
   135ba:	4a 94       	dec	r4
   135bc:	4c 0c       	add	r4, r12
   135be:	54 01       	movw	r10, r8
   135c0:	35 e0       	ldi	r19, 0x05	; 5
   135c2:	53 2e       	mov	r5, r19
   135c4:	f5 01       	movw	r30, r10
   135c6:	81 81       	ldd	r24, Z+1	; 0x01
   135c8:	88 23       	and	r24, r24
   135ca:	09 f1       	breq	.+66     	; 0x1360e <_Z12Pub_Sub_DataPcPhjh+0x1340>
   135cc:	90 e0       	ldi	r25, 0x00	; 0
   135ce:	8e 15       	cp	r24, r14
   135d0:	9f 05       	cpc	r25, r15
   135d2:	e9 f4       	brne	.+58     	; 0x1360e <_Z12Pub_Sub_DataPcPhjh+0x1340>
   135d4:	11 82       	std	Z+1, r1	; 0x01
   135d6:	84 2d       	mov	r24, r4
   135d8:	0e 94 15 7d 	call	0xfa2a	; 0xfa2a <_Z16Lira_Data_EEPROMh>
   135dc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   135e0:	81 30       	cpi	r24, 0x01	; 1
   135e2:	a9 f4       	brne	.+42     	; 0x1360e <_Z12Pub_Sub_DataPcPhjh+0x1340>
   135e4:	6a e9       	ldi	r22, 0x9A	; 154
   135e6:	75 e3       	ldi	r23, 0x35	; 53
   135e8:	8f e6       	ldi	r24, 0x6F	; 111
   135ea:	96 e1       	ldi	r25, 0x16	; 22
   135ec:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   135f0:	8f e6       	ldi	r24, 0x6F	; 111
   135f2:	96 e1       	ldi	r25, 0x16	; 22
   135f4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   135f8:	4a e0       	ldi	r20, 0x0A	; 10
   135fa:	50 e0       	ldi	r21, 0x00	; 0
   135fc:	b6 01       	movw	r22, r12
   135fe:	8f e6       	ldi	r24, 0x6F	; 111
   13600:	96 e1       	ldi	r25, 0x16	; 22
   13602:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
   13606:	8f e6       	ldi	r24, 0x6F	; 111
   13608:	96 e1       	ldi	r25, 0x16	; 22
   1360a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1360e:	5a 94       	dec	r5
   13610:	ff ef       	ldi	r31, 0xFF	; 255
   13612:	af 1a       	sub	r10, r31
   13614:	bf 0a       	sbc	r11, r31
   13616:	51 10       	cpse	r5, r1
   13618:	d5 cf       	rjmp	.-86     	; 0x135c4 <_Z12Pub_Sub_DataPcPhjh+0x12f6>
   1361a:	2f ef       	ldi	r18, 0xFF	; 255
   1361c:	c2 1a       	sub	r12, r18
   1361e:	d2 0a       	sbc	r13, r18
   13620:	36 e0       	ldi	r19, 0x06	; 6
   13622:	83 0e       	add	r8, r19
   13624:	91 1c       	adc	r9, r1
   13626:	4f e0       	ldi	r20, 0x0F	; 15
   13628:	c4 16       	cp	r12, r20
   1362a:	d1 04       	cpc	r13, r1
   1362c:	29 f6       	brne	.-118    	; 0x135b8 <_Z12Pub_Sub_DataPcPhjh+0x12ea>
   1362e:	5f ef       	ldi	r21, 0xFF	; 255
   13630:	e5 1a       	sub	r14, r21
   13632:	f5 0a       	sbc	r15, r21
   13634:	0e 15       	cp	r16, r14
   13636:	1f 05       	cpc	r17, r15
   13638:	09 f0       	breq	.+2      	; 0x1363c <_Z12Pub_Sub_DataPcPhjh+0x136e>
   1363a:	b7 cf       	rjmp	.-146    	; 0x135aa <_Z12Pub_Sub_DataPcPhjh+0x12dc>
   1363c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13640:	81 30       	cpi	r24, 0x01	; 1
   13642:	09 f0       	breq	.+2      	; 0x13646 <_Z12Pub_Sub_DataPcPhjh+0x1378>
   13644:	e7 c0       	rjmp	.+462    	; 0x13814 <_Z12Pub_Sub_DataPcPhjh+0x1546>
   13646:	00 e0       	ldi	r16, 0x00	; 0
   13648:	10 e0       	ldi	r17, 0x00	; 0
   1364a:	09 c0       	rjmp	.+18     	; 0x1365e <_Z12Pub_Sub_DataPcPhjh+0x1390>
   1364c:	6c 01       	movw	r12, r24
   1364e:	23 5f       	subi	r18, 0xF3	; 243
   13650:	3f 4f       	sbci	r19, 0xFF	; 255
   13652:	84 e0       	ldi	r24, 0x04	; 4
   13654:	e8 16       	cp	r14, r24
   13656:	f1 04       	cpc	r15, r1
   13658:	09 f0       	breq	.+2      	; 0x1365c <_Z12Pub_Sub_DataPcPhjh+0x138e>
   1365a:	30 cf       	rjmp	.-416    	; 0x134bc <_Z12Pub_Sub_DataPcPhjh+0x11ee>
   1365c:	ef cf       	rjmp	.-34     	; 0x1363c <_Z12Pub_Sub_DataPcPhjh+0x136e>
   1365e:	8f e6       	ldi	r24, 0x6F	; 111
   13660:	96 e1       	ldi	r25, 0x16	; 22
   13662:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   13666:	6f e8       	ldi	r22, 0x8F	; 143
   13668:	75 e3       	ldi	r23, 0x35	; 53
   1366a:	8f e6       	ldi	r24, 0x6F	; 111
   1366c:	96 e1       	ldi	r25, 0x16	; 22
   1366e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13672:	8f e6       	ldi	r24, 0x6F	; 111
   13674:	96 e1       	ldi	r25, 0x16	; 22
   13676:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1367a:	b8 01       	movw	r22, r16
   1367c:	68 51       	subi	r22, 0x18	; 24
   1367e:	74 4f       	sbci	r23, 0xF4	; 244
   13680:	8f e6       	ldi	r24, 0x6F	; 111
   13682:	96 e1       	ldi	r25, 0x16	; 22
   13684:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   13688:	8f e6       	ldi	r24, 0x6F	; 111
   1368a:	96 e1       	ldi	r25, 0x16	; 22
   1368c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13690:	03 5f       	subi	r16, 0xF3	; 243
   13692:	1f 4f       	sbci	r17, 0xFF	; 255
   13694:	04 33       	cpi	r16, 0x34	; 52
   13696:	11 05       	cpc	r17, r1
   13698:	11 f7       	brne	.-60     	; 0x1365e <_Z12Pub_Sub_DataPcPhjh+0x1390>
   1369a:	bc c0       	rjmp	.+376    	; 0x13814 <_Z12Pub_Sub_DataPcPhjh+0x1546>
   1369c:	91 30       	cpi	r25, 0x01	; 1
   1369e:	51 f4       	brne	.+20     	; 0x136b4 <_Z12Pub_Sub_DataPcPhjh+0x13e6>
   136a0:	6a e7       	ldi	r22, 0x7A	; 122
   136a2:	75 e3       	ldi	r23, 0x35	; 53
   136a4:	8f e6       	ldi	r24, 0x6F	; 111
   136a6:	96 e1       	ldi	r25, 0x16	; 22
   136a8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   136ac:	8f e6       	ldi	r24, 0x6F	; 111
   136ae:	96 e1       	ldi	r25, 0x16	; 22
   136b0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   136b4:	61 e7       	ldi	r22, 0x71	; 113
   136b6:	75 e3       	ldi	r23, 0x35	; 53
   136b8:	c3 01       	movw	r24, r6
   136ba:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   136be:	90 e0       	ldi	r25, 0x00	; 0
   136c0:	01 97       	sbiw	r24, 0x01	; 1
   136c2:	26 e0       	ldi	r18, 0x06	; 6
   136c4:	28 9f       	mul	r18, r24
   136c6:	f0 01       	movw	r30, r0
   136c8:	29 9f       	mul	r18, r25
   136ca:	f0 0d       	add	r31, r0
   136cc:	11 24       	eor	r1, r1
   136ce:	e3 50       	subi	r30, 0x03	; 3
   136d0:	f3 4f       	sbci	r31, 0xF3	; 243
   136d2:	10 82       	st	Z, r1
   136d4:	a6 c0       	rjmp	.+332    	; 0x13822 <_Z12Pub_Sub_DataPcPhjh+0x1554>
   136d6:	91 30       	cpi	r25, 0x01	; 1
   136d8:	51 f4       	brne	.+20     	; 0x136ee <_Z12Pub_Sub_DataPcPhjh+0x1420>
   136da:	63 e5       	ldi	r22, 0x53	; 83
   136dc:	75 e3       	ldi	r23, 0x35	; 53
   136de:	8f e6       	ldi	r24, 0x6F	; 111
   136e0:	96 e1       	ldi	r25, 0x16	; 22
   136e2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   136e6:	8f e6       	ldi	r24, 0x6F	; 111
   136e8:	96 e1       	ldi	r25, 0x16	; 22
   136ea:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   136ee:	69 e4       	ldi	r22, 0x49	; 73
   136f0:	75 e3       	ldi	r23, 0x35	; 53
   136f2:	c3 01       	movw	r24, r6
   136f4:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   136f8:	0e 94 7e 32 	call	0x64fc	; 0x64fc <_Z15Delete_Scheduleh>
   136fc:	b1 e0       	ldi	r27, 0x01	; 1
   136fe:	ce 59       	subi	r28, 0x9E	; 158
   13700:	d9 4f       	sbci	r29, 0xF9	; 249
   13702:	b8 83       	st	Y, r27
   13704:	c2 56       	subi	r28, 0x62	; 98
   13706:	d6 40       	sbci	r29, 0x06	; 6
   13708:	92 c0       	rjmp	.+292    	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   1370a:	91 30       	cpi	r25, 0x01	; 1
   1370c:	51 f4       	brne	.+20     	; 0x13722 <_Z12Pub_Sub_DataPcPhjh+0x1454>
   1370e:	6e e2       	ldi	r22, 0x2E	; 46
   13710:	75 e3       	ldi	r23, 0x35	; 53
   13712:	8f e6       	ldi	r24, 0x6F	; 111
   13714:	96 e1       	ldi	r25, 0x16	; 22
   13716:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1371a:	8f e6       	ldi	r24, 0x6F	; 111
   1371c:	96 e1       	ldi	r25, 0x16	; 22
   1371e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13722:	65 e2       	ldi	r22, 0x25	; 37
   13724:	75 e3       	ldi	r23, 0x35	; 53
   13726:	c3 01       	movw	r24, r6
   13728:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1372c:	85 56       	subi	r24, 0x65	; 101
   1372e:	2b e1       	ldi	r18, 0x1B	; 27
   13730:	82 9f       	mul	r24, r18
   13732:	f0 01       	movw	r30, r0
   13734:	11 24       	eor	r1, r1
   13736:	e1 56       	subi	r30, 0x61	; 97
   13738:	f0 4f       	sbci	r31, 0xF0	; 240
   1373a:	11 8e       	std	Z+25, r1	; 0x19
   1373c:	11 82       	std	Z+1, r1	; 0x01
   1373e:	13 8a       	std	Z+19, r1	; 0x13
   13740:	12 8a       	std	Z+18, r1	; 0x12
   13742:	15 8a       	std	Z+21, r1	; 0x15
   13744:	14 8a       	std	Z+20, r1	; 0x14
   13746:	17 8a       	std	Z+23, r1	; 0x17
   13748:	16 8a       	std	Z+22, r1	; 0x16
   1374a:	15 86       	std	Z+13, r1	; 0x0d
   1374c:	14 86       	std	Z+12, r1	; 0x0c
   1374e:	17 86       	std	Z+15, r1	; 0x0f
   13750:	16 86       	std	Z+14, r1	; 0x0e
   13752:	10 82       	st	Z, r1
   13754:	12 86       	std	Z+10, r1	; 0x0a
   13756:	12 8e       	std	Z+26, r1	; 0x1a
   13758:	14 82       	std	Z+4, r1	; 0x04
   1375a:	13 82       	std	Z+3, r1	; 0x03
   1375c:	10 8e       	std	Z+24, r1	; 0x18
   1375e:	13 86       	std	Z+11, r1	; 0x0b
   13760:	12 82       	std	Z+2, r1	; 0x02
   13762:	31 e0       	ldi	r19, 0x01	; 1
   13764:	ce 59       	subi	r28, 0x9E	; 158
   13766:	d9 4f       	sbci	r29, 0xF9	; 249
   13768:	38 83       	st	Y, r19
   1376a:	c2 56       	subi	r28, 0x62	; 98
   1376c:	d6 40       	sbci	r29, 0x06	; 6
   1376e:	5f c0       	rjmp	.+190    	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   13770:	91 30       	cpi	r25, 0x01	; 1
   13772:	51 f4       	brne	.+20     	; 0x13788 <_Z12Pub_Sub_DataPcPhjh+0x14ba>
   13774:	6d e0       	ldi	r22, 0x0D	; 13
   13776:	75 e3       	ldi	r23, 0x35	; 53
   13778:	8f e6       	ldi	r24, 0x6F	; 111
   1377a:	96 e1       	ldi	r25, 0x16	; 22
   1377c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13780:	8f e6       	ldi	r24, 0x6F	; 111
   13782:	96 e1       	ldi	r25, 0x16	; 22
   13784:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13788:	81 e0       	ldi	r24, 0x01	; 1
   1378a:	80 93 b7 0b 	sts	0x0BB7, r24	; 0x800bb7 <_sSchedules+0x2c7>
   1378e:	0e 94 63 84 	call	0x108c6	; 0x108c6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43>
   13792:	41 e0       	ldi	r20, 0x01	; 1
   13794:	ce 59       	subi	r28, 0x9E	; 158
   13796:	d9 4f       	sbci	r29, 0xF9	; 249
   13798:	48 83       	st	Y, r20
   1379a:	c2 56       	subi	r28, 0x62	; 98
   1379c:	d6 40       	sbci	r29, 0x06	; 6
   1379e:	47 c0       	rjmp	.+142    	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   137a0:	91 30       	cpi	r25, 0x01	; 1
   137a2:	51 f4       	brne	.+20     	; 0x137b8 <_Z12Pub_Sub_DataPcPhjh+0x14ea>
   137a4:	64 ef       	ldi	r22, 0xF4	; 244
   137a6:	74 e3       	ldi	r23, 0x34	; 52
   137a8:	8f e6       	ldi	r24, 0x6F	; 111
   137aa:	96 e1       	ldi	r25, 0x16	; 22
   137ac:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   137b0:	8f e6       	ldi	r24, 0x6F	; 111
   137b2:	96 e1       	ldi	r25, 0x16	; 22
   137b4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   137b8:	10 92 b7 0b 	sts	0x0BB7, r1	; 0x800bb7 <_sSchedules+0x2c7>
   137bc:	0e 94 63 84 	call	0x108c6	; 0x108c6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43>
   137c0:	51 e0       	ldi	r21, 0x01	; 1
   137c2:	ce 59       	subi	r28, 0x9E	; 158
   137c4:	d9 4f       	sbci	r29, 0xF9	; 249
   137c6:	58 83       	st	Y, r21
   137c8:	c2 56       	subi	r28, 0x62	; 98
   137ca:	d6 40       	sbci	r29, 0x06	; 6
   137cc:	30 c0       	rjmp	.+96     	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   137ce:	91 30       	cpi	r25, 0x01	; 1
   137d0:	51 f4       	brne	.+20     	; 0x137e6 <_Z12Pub_Sub_DataPcPhjh+0x1518>
   137d2:	60 ee       	ldi	r22, 0xE0	; 224
   137d4:	74 e3       	ldi	r23, 0x34	; 52
   137d6:	8f e6       	ldi	r24, 0x6F	; 111
   137d8:	96 e1       	ldi	r25, 0x16	; 22
   137da:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   137de:	8f e6       	ldi	r24, 0x6F	; 111
   137e0:	96 e1       	ldi	r25, 0x16	; 22
   137e2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   137e6:	81 e0       	ldi	r24, 0x01	; 1
   137e8:	80 93 4b 16 	sts	0x164B, r24	; 0x80164b <_sRuble_Parameters+0xe6>
   137ec:	ce 59       	subi	r28, 0x9E	; 158
   137ee:	d9 4f       	sbci	r29, 0xF9	; 249
   137f0:	88 83       	st	Y, r24
   137f2:	c2 56       	subi	r28, 0x62	; 98
   137f4:	d6 40       	sbci	r29, 0x06	; 6
   137f6:	1b c0       	rjmp	.+54     	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   137f8:	91 30       	cpi	r25, 0x01	; 1
   137fa:	51 f4       	brne	.+20     	; 0x13810 <_Z12Pub_Sub_DataPcPhjh+0x1542>
   137fc:	65 ec       	ldi	r22, 0xC5	; 197
   137fe:	74 e3       	ldi	r23, 0x34	; 52
   13800:	8f e6       	ldi	r24, 0x6F	; 111
   13802:	96 e1       	ldi	r25, 0x16	; 22
   13804:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13808:	8f e6       	ldi	r24, 0x6F	; 111
   1380a:	96 e1       	ldi	r25, 0x16	; 22
   1380c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13810:	10 92 4b 16 	sts	0x164B, r1	; 0x80164b <_sRuble_Parameters+0xe6>
   13814:	91 e0       	ldi	r25, 0x01	; 1
   13816:	ce 59       	subi	r28, 0x9E	; 158
   13818:	d9 4f       	sbci	r29, 0xF9	; 249
   1381a:	98 83       	st	Y, r25
   1381c:	c2 56       	subi	r28, 0x62	; 98
   1381e:	d6 40       	sbci	r29, 0x06	; 6
   13820:	06 c0       	rjmp	.+12     	; 0x1382e <_Z12Pub_Sub_DataPcPhjh+0x1560>
   13822:	a1 e0       	ldi	r26, 0x01	; 1
   13824:	ce 59       	subi	r28, 0x9E	; 158
   13826:	d9 4f       	sbci	r29, 0xF9	; 249
   13828:	a8 83       	st	Y, r26
   1382a:	c2 56       	subi	r28, 0x62	; 98
   1382c:	d6 40       	sbci	r29, 0x06	; 6
   1382e:	b1 01       	movw	r22, r2
   13830:	80 e1       	ldi	r24, 0x10	; 16
   13832:	9f e0       	ldi	r25, 0x0F	; 15
   13834:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   13838:	89 2b       	or	r24, r25
   1383a:	09 f0       	breq	.+2      	; 0x1383e <_Z12Pub_Sub_DataPcPhjh+0x1570>
   1383c:	73 c0       	rjmp	.+230    	; 0x13924 <_Z12Pub_Sub_DataPcPhjh+0x1656>
   1383e:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   13842:	8b e0       	ldi	r24, 0x0B	; 11
   13844:	e3 e7       	ldi	r30, 0x73	; 115
   13846:	fd e0       	ldi	r31, 0x0D	; 13
   13848:	df 01       	movw	r26, r30
   1384a:	28 2f       	mov	r18, r24
   1384c:	1d 92       	st	X+, r1
   1384e:	2a 95       	dec	r18
   13850:	e9 f7       	brne	.-6      	; 0x1384c <_Z12Pub_Sub_DataPcPhjh+0x157e>
   13852:	e8 e6       	ldi	r30, 0x68	; 104
   13854:	fd e0       	ldi	r31, 0x0D	; 13
   13856:	df 01       	movw	r26, r30
   13858:	1d 92       	st	X+, r1
   1385a:	8a 95       	dec	r24
   1385c:	e9 f7       	brne	.-6      	; 0x13858 <_Z12Pub_Sub_DataPcPhjh+0x158a>
   1385e:	68 eb       	ldi	r22, 0xB8	; 184
   13860:	74 e3       	ldi	r23, 0x34	; 52
   13862:	c3 01       	movw	r24, r6
   13864:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13868:	bc 01       	movw	r22, r24
   1386a:	83 e7       	ldi	r24, 0x73	; 115
   1386c:	9d e0       	ldi	r25, 0x0D	; 13
   1386e:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   13872:	6b ea       	ldi	r22, 0xAB	; 171
   13874:	74 e3       	ldi	r23, 0x34	; 52
   13876:	c3 01       	movw	r24, r6
   13878:	0e 94 61 8b 	call	0x116c2	; 0x116c2 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperPKcEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1387c:	bc 01       	movw	r22, r24
   1387e:	88 e6       	ldi	r24, 0x68	; 104
   13880:	9d e0       	ldi	r25, 0x0D	; 13
   13882:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   13886:	67 ea       	ldi	r22, 0xA7	; 167
   13888:	74 e3       	ldi	r23, 0x34	; 52
   1388a:	c3 01       	movw	r24, r6
   1388c:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13890:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13894:	81 30       	cpi	r24, 0x01	; 1
   13896:	f9 f4       	brne	.+62     	; 0x138d6 <_Z12Pub_Sub_DataPcPhjh+0x1608>
   13898:	91 30       	cpi	r25, 0x01	; 1
   1389a:	51 f4       	brne	.+20     	; 0x138b0 <_Z12Pub_Sub_DataPcPhjh+0x15e2>
   1389c:	6a e9       	ldi	r22, 0x9A	; 154
   1389e:	74 e3       	ldi	r23, 0x34	; 52
   138a0:	8f e6       	ldi	r24, 0x6F	; 111
   138a2:	96 e1       	ldi	r25, 0x16	; 22
   138a4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   138a8:	8f e6       	ldi	r24, 0x6F	; 111
   138aa:	96 e1       	ldi	r25, 0x16	; 22
   138ac:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   138b0:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   138b4:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   138b8:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   138bc:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   138c0:	a0 68       	ori	r26, 0x80	; 128
   138c2:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   138c6:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   138ca:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   138ce:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   138d2:	88 e0       	ldi	r24, 0x08	; 8
   138d4:	0d c0       	rjmp	.+26     	; 0x138f0 <_Z12Pub_Sub_DataPcPhjh+0x1622>
   138d6:	91 30       	cpi	r25, 0x01	; 1
   138d8:	51 f4       	brne	.+20     	; 0x138ee <_Z12Pub_Sub_DataPcPhjh+0x1620>
   138da:	6c e8       	ldi	r22, 0x8C	; 140
   138dc:	74 e3       	ldi	r23, 0x34	; 52
   138de:	8f e6       	ldi	r24, 0x6F	; 111
   138e0:	96 e1       	ldi	r25, 0x16	; 22
   138e2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   138e6:	8f e6       	ldi	r24, 0x6F	; 111
   138e8:	96 e1       	ldi	r25, 0x16	; 22
   138ea:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   138ee:	89 e0       	ldi	r24, 0x09	; 9
   138f0:	80 93 12 16 	sts	0x1612, r24	; 0x801612 <_sRuble_Parameters+0xad>
   138f4:	62 e1       	ldi	r22, 0x12	; 18
   138f6:	76 e1       	ldi	r23, 0x16	; 22
   138f8:	80 ea       	ldi	r24, 0xA0	; 160
   138fa:	94 e0       	ldi	r25, 0x04	; 4
   138fc:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   13900:	68 e6       	ldi	r22, 0x68	; 104
   13902:	7d e0       	ldi	r23, 0x0D	; 13
   13904:	82 e6       	ldi	r24, 0x62	; 98
   13906:	94 e0       	ldi	r25, 0x04	; 4
   13908:	0e 94 d9 83 	call	0x107b2	; 0x107b2 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   1390c:	63 e7       	ldi	r22, 0x73	; 115
   1390e:	7d e0       	ldi	r23, 0x0D	; 13
   13910:	8f e6       	ldi	r24, 0x6F	; 111
   13912:	94 e0       	ldi	r25, 0x04	; 4
   13914:	0e 94 d9 83 	call	0x107b2	; 0x107b2 <_ZN11EEPROMClass3putIA11_cEERKT_iS4_.isra.8>
   13918:	b1 e0       	ldi	r27, 0x01	; 1
   1391a:	ce 59       	subi	r28, 0x9E	; 158
   1391c:	d9 4f       	sbci	r29, 0xF9	; 249
   1391e:	b8 83       	st	Y, r27
   13920:	c2 56       	subi	r28, 0x62	; 98
   13922:	d6 40       	sbci	r29, 0x06	; 6
   13924:	b1 01       	movw	r22, r2
   13926:	81 e4       	ldi	r24, 0x41	; 65
   13928:	9f e0       	ldi	r25, 0x0F	; 15
   1392a:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   1392e:	89 2b       	or	r24, r25
   13930:	09 f0       	breq	.+2      	; 0x13934 <_Z12Pub_Sub_DataPcPhjh+0x1666>
   13932:	46 c1       	rjmp	.+652    	; 0x13bc0 <_Z12Pub_Sub_DataPcPhjh+0x18f2>
   13934:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13938:	81 30       	cpi	r24, 0x01	; 1
   1393a:	51 f4       	brne	.+20     	; 0x13950 <_Z12Pub_Sub_DataPcPhjh+0x1682>
   1393c:	6a e6       	ldi	r22, 0x6A	; 106
   1393e:	74 e3       	ldi	r23, 0x34	; 52
   13940:	8f e6       	ldi	r24, 0x6F	; 111
   13942:	96 e1       	ldi	r25, 0x16	; 22
   13944:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13948:	8f e6       	ldi	r24, 0x6F	; 111
   1394a:	96 e1       	ldi	r25, 0x16	; 22
   1394c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13950:	66 e6       	ldi	r22, 0x66	; 102
   13952:	74 e3       	ldi	r23, 0x34	; 52
   13954:	c3 01       	movw	r24, r6
   13956:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1395a:	80 93 63 0b 	sts	0x0B63, r24	; 0x800b63 <_sSchedules+0x273>
   1395e:	81 e0       	ldi	r24, 0x01	; 1
   13960:	80 93 6b 0b 	sts	0x0B6B, r24	; 0x800b6b <_sSchedules+0x27b>
   13964:	10 92 64 0b 	sts	0x0B64, r1	; 0x800b64 <_sSchedules+0x274>
   13968:	80 93 66 0b 	sts	0x0B66, r24	; 0x800b66 <_sSchedules+0x276>
   1396c:	10 92 b9 0b 	sts	0x0BB9, r1	; 0x800bb9 <_sSchedules+0x2c9>
   13970:	61 e6       	ldi	r22, 0x61	; 97
   13972:	74 e3       	ldi	r23, 0x34	; 52
   13974:	c3 01       	movw	r24, r6
   13976:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   1397a:	60 e0       	ldi	r22, 0x00	; 0
   1397c:	70 e0       	ldi	r23, 0x00	; 0
   1397e:	0e 94 34 87 	call	0x10e68	; 0x10e68 <_ZNK11ArduinoJson9JsonArray3getImEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13982:	60 93 67 0b 	sts	0x0B67, r22	; 0x800b67 <_sSchedules+0x277>
   13986:	70 93 68 0b 	sts	0x0B68, r23	; 0x800b68 <_sSchedules+0x278>
   1398a:	80 93 69 0b 	sts	0x0B69, r24	; 0x800b69 <_sSchedules+0x279>
   1398e:	90 93 6a 0b 	sts	0x0B6A, r25	; 0x800b6a <_sSchedules+0x27a>
   13992:	60 91 67 0b 	lds	r22, 0x0B67	; 0x800b67 <_sSchedules+0x277>
   13996:	70 91 68 0b 	lds	r23, 0x0B68	; 0x800b68 <_sSchedules+0x278>
   1399a:	80 91 69 0b 	lds	r24, 0x0B69	; 0x800b69 <_sSchedules+0x279>
   1399e:	90 91 6a 0b 	lds	r25, 0x0B6A	; 0x800b6a <_sSchedules+0x27a>
   139a2:	20 91 67 0b 	lds	r18, 0x0B67	; 0x800b67 <_sSchedules+0x277>
   139a6:	30 91 68 0b 	lds	r19, 0x0B68	; 0x800b68 <_sSchedules+0x278>
   139aa:	40 91 69 0b 	lds	r20, 0x0B69	; 0x800b69 <_sSchedules+0x279>
   139ae:	50 91 6a 0b 	lds	r21, 0x0B6A	; 0x800b6a <_sSchedules+0x27a>
   139b2:	c2 5a       	subi	r28, 0xA2	; 162
   139b4:	d9 4f       	sbci	r29, 0xF9	; 249
   139b6:	28 83       	st	Y, r18
   139b8:	39 83       	std	Y+1, r19	; 0x01
   139ba:	4a 83       	std	Y+2, r20	; 0x02
   139bc:	5b 83       	std	Y+3, r21	; 0x03
   139be:	ce 55       	subi	r28, 0x5E	; 94
   139c0:	d6 40       	sbci	r29, 0x06	; 6
   139c2:	24 e6       	ldi	r18, 0x64	; 100
   139c4:	c2 2e       	mov	r12, r18
   139c6:	d1 2c       	mov	r13, r1
   139c8:	e1 2c       	mov	r14, r1
   139ca:	f1 2c       	mov	r15, r1
   139cc:	a7 01       	movw	r20, r14
   139ce:	96 01       	movw	r18, r12
   139d0:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   139d4:	a0 e1       	ldi	r26, 0x10	; 16
   139d6:	be e0       	ldi	r27, 0x0E	; 14
   139d8:	0e 94 9a e7 	call	0x1cf34	; 0x1cf34 <__muluhisi3>
   139dc:	4b 01       	movw	r8, r22
   139de:	5c 01       	movw	r10, r24
   139e0:	c2 5a       	subi	r28, 0xA2	; 162
   139e2:	d9 4f       	sbci	r29, 0xF9	; 249
   139e4:	68 81       	ld	r22, Y
   139e6:	79 81       	ldd	r23, Y+1	; 0x01
   139e8:	8a 81       	ldd	r24, Y+2	; 0x02
   139ea:	9b 81       	ldd	r25, Y+3	; 0x03
   139ec:	ce 55       	subi	r28, 0x5E	; 94
   139ee:	d6 40       	sbci	r29, 0x06	; 6
   139f0:	a7 01       	movw	r20, r14
   139f2:	96 01       	movw	r18, r12
   139f4:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   139f8:	9b 01       	movw	r18, r22
   139fa:	ac 01       	movw	r20, r24
   139fc:	ac e3       	ldi	r26, 0x3C	; 60
   139fe:	b0 e0       	ldi	r27, 0x00	; 0
   13a00:	0e 94 9a e7 	call	0x1cf34	; 0x1cf34 <__muluhisi3>
   13a04:	dc 01       	movw	r26, r24
   13a06:	cb 01       	movw	r24, r22
   13a08:	88 0d       	add	r24, r8
   13a0a:	99 1d       	adc	r25, r9
   13a0c:	aa 1d       	adc	r26, r10
   13a0e:	bb 1d       	adc	r27, r11
   13a10:	80 93 67 0b 	sts	0x0B67, r24	; 0x800b67 <_sSchedules+0x277>
   13a14:	90 93 68 0b 	sts	0x0B68, r25	; 0x800b68 <_sSchedules+0x278>
   13a18:	a0 93 69 0b 	sts	0x0B69, r26	; 0x800b69 <_sSchedules+0x279>
   13a1c:	b0 93 6a 0b 	sts	0x0B6A, r27	; 0x800b6a <_sSchedules+0x27a>
   13a20:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   13a24:	80 93 c3 0b 	sts	0x0BC3, r24	; 0x800bc3 <_sSchedules+0x2d3>
   13a28:	6b e5       	ldi	r22, 0x5B	; 91
   13a2a:	74 e3       	ldi	r23, 0x34	; 52
   13a2c:	c3 01       	movw	r24, r6
   13a2e:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13a32:	60 e0       	ldi	r22, 0x00	; 0
   13a34:	70 e0       	ldi	r23, 0x00	; 0
   13a36:	0e 94 32 8c 	call	0x11864	; 0x11864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13a3a:	80 93 c5 0b 	sts	0x0BC5, r24	; 0x800bc5 <_sSchedules+0x2d5>
   13a3e:	00 e0       	ldi	r16, 0x00	; 0
   13a40:	10 e0       	ldi	r17, 0x00	; 0
   13a42:	78 01       	movw	r14, r16
   13a44:	3f ef       	ldi	r19, 0xFF	; 255
   13a46:	e3 1a       	sub	r14, r19
   13a48:	f3 0a       	sbc	r15, r19
   13a4a:	65 e5       	ldi	r22, 0x55	; 85
   13a4c:	74 e3       	ldi	r23, 0x34	; 52
   13a4e:	c3 01       	movw	r24, r6
   13a50:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13a54:	b7 01       	movw	r22, r14
   13a56:	0e 94 32 8c 	call	0x11864	; 0x11864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13a5a:	07 56       	subi	r16, 0x67	; 103
   13a5c:	14 4f       	sbci	r17, 0xF4	; 244
   13a5e:	d8 01       	movw	r26, r16
   13a60:	8c 93       	st	X, r24
   13a62:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13a66:	81 30       	cpi	r24, 0x01	; 1
   13a68:	81 f0       	breq	.+32     	; 0x13a8a <_Z12Pub_Sub_DataPcPhjh+0x17bc>
   13a6a:	87 01       	movw	r16, r14
   13a6c:	0d 30       	cpi	r16, 0x0D	; 13
   13a6e:	11 05       	cpc	r17, r1
   13a70:	41 f7       	brne	.-48     	; 0x13a42 <_Z12Pub_Sub_DataPcPhjh+0x1774>
   13a72:	00 e0       	ldi	r16, 0x00	; 0
   13a74:	10 e0       	ldi	r17, 0x00	; 0
   13a76:	b4 e6       	ldi	r27, 0x64	; 100
   13a78:	cb 2e       	mov	r12, r27
   13a7a:	d1 2c       	mov	r13, r1
   13a7c:	80 e1       	ldi	r24, 0x10	; 16
   13a7e:	a8 2e       	mov	r10, r24
   13a80:	8e e0       	ldi	r24, 0x0E	; 14
   13a82:	b8 2e       	mov	r11, r24
   13a84:	9c e3       	ldi	r25, 0x3C	; 60
   13a86:	99 2e       	mov	r9, r25
   13a88:	13 c0       	rjmp	.+38     	; 0x13ab0 <_Z12Pub_Sub_DataPcPhjh+0x17e2>
   13a8a:	6b e4       	ldi	r22, 0x4B	; 75
   13a8c:	74 e3       	ldi	r23, 0x34	; 52
   13a8e:	8f e6       	ldi	r24, 0x6F	; 111
   13a90:	96 e1       	ldi	r25, 0x16	; 22
   13a92:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13a96:	f8 01       	movw	r30, r16
   13a98:	60 81       	ld	r22, Z
   13a9a:	4a e0       	ldi	r20, 0x0A	; 10
   13a9c:	50 e0       	ldi	r21, 0x00	; 0
   13a9e:	8f e6       	ldi	r24, 0x6F	; 111
   13aa0:	96 e1       	ldi	r25, 0x16	; 22
   13aa2:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13aa6:	8f e6       	ldi	r24, 0x6F	; 111
   13aa8:	96 e1       	ldi	r25, 0x16	; 22
   13aaa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13aae:	dd cf       	rjmp	.-70     	; 0x13a6a <_Z12Pub_Sub_DataPcPhjh+0x179c>
   13ab0:	78 01       	movw	r14, r16
   13ab2:	ff ef       	ldi	r31, 0xFF	; 255
   13ab4:	ef 1a       	sub	r14, r31
   13ab6:	ff 0a       	sbc	r15, r31
   13ab8:	66 e4       	ldi	r22, 0x46	; 70
   13aba:	74 e3       	ldi	r23, 0x34	; 52
   13abc:	c3 01       	movw	r24, r6
   13abe:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13ac2:	b7 01       	movw	r22, r14
   13ac4:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13ac8:	00 0f       	add	r16, r16
   13aca:	11 1f       	adc	r17, r17
   13acc:	04 59       	subi	r16, 0x94	; 148
   13ace:	14 4f       	sbci	r17, 0xF4	; 244
   13ad0:	d8 01       	movw	r26, r16
   13ad2:	11 96       	adiw	r26, 0x01	; 1
   13ad4:	9c 93       	st	X, r25
   13ad6:	8e 93       	st	-X, r24
   13ad8:	8d 91       	ld	r24, X+
   13ada:	9c 91       	ld	r25, X
   13adc:	11 97       	sbiw	r26, 0x01	; 1
   13ade:	2d 91       	ld	r18, X+
   13ae0:	3c 91       	ld	r19, X
   13ae2:	b6 01       	movw	r22, r12
   13ae4:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13ae8:	6a 9d       	mul	r22, r10
   13aea:	f0 01       	movw	r30, r0
   13aec:	6b 9d       	mul	r22, r11
   13aee:	f0 0d       	add	r31, r0
   13af0:	7a 9d       	mul	r23, r10
   13af2:	f0 0d       	add	r31, r0
   13af4:	11 24       	eor	r1, r1
   13af6:	c9 01       	movw	r24, r18
   13af8:	b6 01       	movw	r22, r12
   13afa:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13afe:	98 9e       	mul	r9, r24
   13b00:	90 01       	movw	r18, r0
   13b02:	99 9e       	mul	r9, r25
   13b04:	30 0d       	add	r19, r0
   13b06:	11 24       	eor	r1, r1
   13b08:	cf 01       	movw	r24, r30
   13b0a:	82 0f       	add	r24, r18
   13b0c:	93 1f       	adc	r25, r19
   13b0e:	f8 01       	movw	r30, r16
   13b10:	91 83       	std	Z+1, r25	; 0x01
   13b12:	80 83       	st	Z, r24
   13b14:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13b18:	81 30       	cpi	r24, 0x01	; 1
   13b1a:	39 f0       	breq	.+14     	; 0x13b2a <_Z12Pub_Sub_DataPcPhjh+0x185c>
   13b1c:	87 01       	movw	r16, r14
   13b1e:	0d 30       	cpi	r16, 0x0D	; 13
   13b20:	11 05       	cpc	r17, r1
   13b22:	31 f6       	brne	.-116    	; 0x13ab0 <_Z12Pub_Sub_DataPcPhjh+0x17e2>
   13b24:	00 e0       	ldi	r16, 0x00	; 0
   13b26:	10 e0       	ldi	r17, 0x00	; 0
   13b28:	14 c0       	rjmp	.+40     	; 0x13b52 <_Z12Pub_Sub_DataPcPhjh+0x1884>
   13b2a:	64 e3       	ldi	r22, 0x34	; 52
   13b2c:	74 e3       	ldi	r23, 0x34	; 52
   13b2e:	8f e6       	ldi	r24, 0x6F	; 111
   13b30:	96 e1       	ldi	r25, 0x16	; 22
   13b32:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13b36:	d8 01       	movw	r26, r16
   13b38:	6d 91       	ld	r22, X+
   13b3a:	7c 91       	ld	r23, X
   13b3c:	4a e0       	ldi	r20, 0x0A	; 10
   13b3e:	50 e0       	ldi	r21, 0x00	; 0
   13b40:	8f e6       	ldi	r24, 0x6F	; 111
   13b42:	96 e1       	ldi	r25, 0x16	; 22
   13b44:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   13b48:	8f e6       	ldi	r24, 0x6F	; 111
   13b4a:	96 e1       	ldi	r25, 0x16	; 22
   13b4c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13b50:	e5 cf       	rjmp	.-54     	; 0x13b1c <_Z12Pub_Sub_DataPcPhjh+0x184e>
   13b52:	78 01       	movw	r14, r16
   13b54:	bf ef       	ldi	r27, 0xFF	; 255
   13b56:	eb 1a       	sub	r14, r27
   13b58:	fb 0a       	sbc	r15, r27
   13b5a:	6d e2       	ldi	r22, 0x2D	; 45
   13b5c:	74 e3       	ldi	r23, 0x34	; 52
   13b5e:	c3 01       	movw	r24, r6
   13b60:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13b64:	b7 01       	movw	r22, r14
   13b66:	0e 94 32 8c 	call	0x11864	; 0x11864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13b6a:	06 57       	subi	r16, 0x76	; 118
   13b6c:	14 4f       	sbci	r17, 0xF4	; 244
   13b6e:	f8 01       	movw	r30, r16
   13b70:	80 83       	st	Z, r24
   13b72:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13b76:	81 30       	cpi	r24, 0x01	; 1
   13b78:	81 f0       	breq	.+32     	; 0x13b9a <_Z12Pub_Sub_DataPcPhjh+0x18cc>
   13b7a:	87 01       	movw	r16, r14
   13b7c:	0d 30       	cpi	r16, 0x0D	; 13
   13b7e:	11 05       	cpc	r17, r1
   13b80:	41 f7       	brne	.-48     	; 0x13b52 <_Z12Pub_Sub_DataPcPhjh+0x1884>
   13b82:	81 e0       	ldi	r24, 0x01	; 1
   13b84:	80 93 95 0c 	sts	0x0C95, r24	; 0x800c95 <plot_schedule_topic>
   13b88:	10 92 96 0c 	sts	0x0C96, r1	; 0x800c96 <_gTank_Topic_check>
   13b8c:	b1 e0       	ldi	r27, 0x01	; 1
   13b8e:	ce 59       	subi	r28, 0x9E	; 158
   13b90:	d9 4f       	sbci	r29, 0xF9	; 249
   13b92:	b8 83       	st	Y, r27
   13b94:	c2 56       	subi	r28, 0x62	; 98
   13b96:	d6 40       	sbci	r29, 0x06	; 6
   13b98:	13 c0       	rjmp	.+38     	; 0x13bc0 <_Z12Pub_Sub_DataPcPhjh+0x18f2>
   13b9a:	62 e2       	ldi	r22, 0x22	; 34
   13b9c:	74 e3       	ldi	r23, 0x34	; 52
   13b9e:	8f e6       	ldi	r24, 0x6F	; 111
   13ba0:	96 e1       	ldi	r25, 0x16	; 22
   13ba2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13ba6:	d8 01       	movw	r26, r16
   13ba8:	6c 91       	ld	r22, X
   13baa:	4a e0       	ldi	r20, 0x0A	; 10
   13bac:	50 e0       	ldi	r21, 0x00	; 0
   13bae:	8f e6       	ldi	r24, 0x6F	; 111
   13bb0:	96 e1       	ldi	r25, 0x16	; 22
   13bb2:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13bb6:	8f e6       	ldi	r24, 0x6F	; 111
   13bb8:	96 e1       	ldi	r25, 0x16	; 22
   13bba:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13bbe:	dd cf       	rjmp	.-70     	; 0x13b7a <_Z12Pub_Sub_DataPcPhjh+0x18ac>
   13bc0:	b1 01       	movw	r22, r2
   13bc2:	8b e6       	ldi	r24, 0x6B	; 107
   13bc4:	9f e0       	ldi	r25, 0x0F	; 15
   13bc6:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   13bca:	89 2b       	or	r24, r25
   13bcc:	09 f0       	breq	.+2      	; 0x13bd0 <_Z12Pub_Sub_DataPcPhjh+0x1902>
   13bce:	ab c2       	rjmp	.+1366   	; 0x14126 <_Z12Pub_Sub_DataPcPhjh+0x1e58>
   13bd0:	80 91 95 0c 	lds	r24, 0x0C95	; 0x800c95 <plot_schedule_topic>
   13bd4:	88 23       	and	r24, r24
   13bd6:	09 f4       	brne	.+2      	; 0x13bda <_Z12Pub_Sub_DataPcPhjh+0x190c>
   13bd8:	97 c3       	rjmp	.+1838   	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   13bda:	80 91 96 0c 	lds	r24, 0x0C96	; 0x800c96 <_gTank_Topic_check>
   13bde:	83 33       	cpi	r24, 0x33	; 51
   13be0:	08 f0       	brcs	.+2      	; 0x13be4 <_Z12Pub_Sub_DataPcPhjh+0x1916>
   13be2:	92 c3       	rjmp	.+1828   	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   13be4:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   13be8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13bec:	81 30       	cpi	r24, 0x01	; 1
   13bee:	51 f4       	brne	.+20     	; 0x13c04 <_Z12Pub_Sub_DataPcPhjh+0x1936>
   13bf0:	64 e0       	ldi	r22, 0x04	; 4
   13bf2:	74 e3       	ldi	r23, 0x34	; 52
   13bf4:	8f e6       	ldi	r24, 0x6F	; 111
   13bf6:	96 e1       	ldi	r25, 0x16	; 22
   13bf8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   13bfc:	8f e6       	ldi	r24, 0x6F	; 111
   13bfe:	96 e1       	ldi	r25, 0x16	; 22
   13c00:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13c04:	81 e0       	ldi	r24, 0x01	; 1
   13c06:	80 93 f1 08 	sts	0x08F1, r24	; 0x8008f1 <_sSchedules+0x1>
   13c0a:	80 91 63 0b 	lds	r24, 0x0B63	; 0x800b63 <_sSchedules+0x273>
   13c0e:	80 93 f0 08 	sts	0x08F0, r24	; 0x8008f0 <_sSchedules>
   13c12:	00 e0       	ldi	r16, 0x00	; 0
   13c14:	10 e0       	ldi	r17, 0x00	; 0
   13c16:	6f ef       	ldi	r22, 0xFF	; 255
   13c18:	73 e3       	ldi	r23, 0x33	; 51
   13c1a:	c3 01       	movw	r24, r6
   13c1c:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c20:	b8 01       	movw	r22, r16
   13c22:	6d 5f       	subi	r22, 0xFD	; 253
   13c24:	7f 4f       	sbci	r23, 0xFF	; 255
   13c26:	0e 94 32 8c 	call	0x11864	; 0x11864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13c2a:	f8 01       	movw	r30, r16
   13c2c:	ef 5b       	subi	r30, 0xBF	; 191
   13c2e:	f5 4f       	sbci	r31, 0xF5	; 245
   13c30:	80 83       	st	Z, r24
   13c32:	0f 5f       	subi	r16, 0xFF	; 255
   13c34:	1f 4f       	sbci	r17, 0xFF	; 255
   13c36:	07 32       	cpi	r16, 0x27	; 39
   13c38:	11 05       	cpc	r17, r1
   13c3a:	69 f7       	brne	.-38     	; 0x13c16 <_Z12Pub_Sub_DataPcPhjh+0x1948>
   13c3c:	00 e0       	ldi	r16, 0x00	; 0
   13c3e:	10 e0       	ldi	r17, 0x00	; 0
   13c40:	6a ef       	ldi	r22, 0xFA	; 250
   13c42:	73 e3       	ldi	r23, 0x33	; 51
   13c44:	c3 01       	movw	r24, r6
   13c46:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c4a:	b8 01       	movw	r22, r16
   13c4c:	6d 5f       	subi	r22, 0xFD	; 253
   13c4e:	7f 4f       	sbci	r23, 0xFF	; 255
   13c50:	0e 94 32 8c 	call	0x11864	; 0x11864 <_ZNK11ArduinoJson9JsonArray3getIhEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13c54:	f8 01       	movw	r30, r16
   13c56:	e6 59       	subi	r30, 0x96	; 150
   13c58:	f6 4f       	sbci	r31, 0xF6	; 246
   13c5a:	80 83       	st	Z, r24
   13c5c:	0f 5f       	subi	r16, 0xFF	; 255
   13c5e:	1f 4f       	sbci	r17, 0xFF	; 255
   13c60:	07 32       	cpi	r16, 0x27	; 39
   13c62:	11 05       	cpc	r17, r1
   13c64:	69 f7       	brne	.-38     	; 0x13c40 <_Z12Pub_Sub_DataPcPhjh+0x1972>
   13c66:	00 e0       	ldi	r16, 0x00	; 0
   13c68:	10 e0       	ldi	r17, 0x00	; 0
   13c6a:	74 e6       	ldi	r23, 0x64	; 100
   13c6c:	e7 2e       	mov	r14, r23
   13c6e:	f1 2c       	mov	r15, r1
   13c70:	e0 e1       	ldi	r30, 0x10	; 16
   13c72:	ce 2e       	mov	r12, r30
   13c74:	ee e0       	ldi	r30, 0x0E	; 14
   13c76:	de 2e       	mov	r13, r30
   13c78:	fc e3       	ldi	r31, 0x3C	; 60
   13c7a:	9f 2e       	mov	r9, r31
   13c7c:	65 ef       	ldi	r22, 0xF5	; 245
   13c7e:	73 e3       	ldi	r23, 0x33	; 51
   13c80:	c3 01       	movw	r24, r6
   13c82:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13c86:	b8 01       	movw	r22, r16
   13c88:	6d 5f       	subi	r22, 0xFD	; 253
   13c8a:	7f 4f       	sbci	r23, 0xFF	; 255
   13c8c:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13c90:	f8 01       	movw	r30, r16
   13c92:	ee 0f       	add	r30, r30
   13c94:	ff 1f       	adc	r31, r31
   13c96:	eb 56       	subi	r30, 0x6B	; 107
   13c98:	f6 4f       	sbci	r31, 0xF6	; 246
   13c9a:	91 83       	std	Z+1, r25	; 0x01
   13c9c:	80 83       	st	Z, r24
   13c9e:	80 81       	ld	r24, Z
   13ca0:	91 81       	ldd	r25, Z+1	; 0x01
   13ca2:	a0 80       	ld	r10, Z
   13ca4:	b1 80       	ldd	r11, Z+1	; 0x01
   13ca6:	b7 01       	movw	r22, r14
   13ca8:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13cac:	6c 9d       	mul	r22, r12
   13cae:	90 01       	movw	r18, r0
   13cb0:	6d 9d       	mul	r22, r13
   13cb2:	30 0d       	add	r19, r0
   13cb4:	7c 9d       	mul	r23, r12
   13cb6:	30 0d       	add	r19, r0
   13cb8:	11 24       	eor	r1, r1
   13cba:	c5 01       	movw	r24, r10
   13cbc:	b7 01       	movw	r22, r14
   13cbe:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13cc2:	98 9e       	mul	r9, r24
   13cc4:	a0 01       	movw	r20, r0
   13cc6:	99 9e       	mul	r9, r25
   13cc8:	50 0d       	add	r21, r0
   13cca:	11 24       	eor	r1, r1
   13ccc:	24 0f       	add	r18, r20
   13cce:	35 1f       	adc	r19, r21
   13cd0:	31 83       	std	Z+1, r19	; 0x01
   13cd2:	20 83       	st	Z, r18
   13cd4:	0f 5f       	subi	r16, 0xFF	; 255
   13cd6:	1f 4f       	sbci	r17, 0xFF	; 255
   13cd8:	07 32       	cpi	r16, 0x27	; 39
   13cda:	11 05       	cpc	r17, r1
   13cdc:	79 f6       	brne	.-98     	; 0x13c7c <_Z12Pub_Sub_DataPcPhjh+0x19ae>
   13cde:	00 e0       	ldi	r16, 0x00	; 0
   13ce0:	10 e0       	ldi	r17, 0x00	; 0
   13ce2:	34 e6       	ldi	r19, 0x64	; 100
   13ce4:	e3 2e       	mov	r14, r19
   13ce6:	f1 2c       	mov	r15, r1
   13ce8:	40 e1       	ldi	r20, 0x10	; 16
   13cea:	c4 2e       	mov	r12, r20
   13cec:	4e e0       	ldi	r20, 0x0E	; 14
   13cee:	d4 2e       	mov	r13, r20
   13cf0:	5c e3       	ldi	r21, 0x3C	; 60
   13cf2:	95 2e       	mov	r9, r21
   13cf4:	60 ef       	ldi	r22, 0xF0	; 240
   13cf6:	73 e3       	ldi	r23, 0x33	; 51
   13cf8:	c3 01       	movw	r24, r6
   13cfa:	0e 94 82 8b 	call	0x11704	; 0x11704 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperNS_9JsonArrayEEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   13cfe:	b8 01       	movw	r22, r16
   13d00:	6d 5f       	subi	r22, 0xFD	; 253
   13d02:	7f 4f       	sbci	r23, 0xFF	; 255
   13d04:	0e 94 e1 8b 	call	0x117c2	; 0x117c2 <_ZNK11ArduinoJson9JsonArray3getIjEENS_9Internals13JsonVariantAsIT_E4typeEj>
   13d08:	f8 01       	movw	r30, r16
   13d0a:	ee 0f       	add	r30, r30
   13d0c:	ff 1f       	adc	r31, r31
   13d0e:	e5 51       	subi	r30, 0x15	; 21
   13d10:	f6 4f       	sbci	r31, 0xF6	; 246
   13d12:	91 83       	std	Z+1, r25	; 0x01
   13d14:	80 83       	st	Z, r24
   13d16:	80 81       	ld	r24, Z
   13d18:	91 81       	ldd	r25, Z+1	; 0x01
   13d1a:	a0 80       	ld	r10, Z
   13d1c:	b1 80       	ldd	r11, Z+1	; 0x01
   13d1e:	b7 01       	movw	r22, r14
   13d20:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13d24:	6c 9d       	mul	r22, r12
   13d26:	90 01       	movw	r18, r0
   13d28:	6d 9d       	mul	r22, r13
   13d2a:	30 0d       	add	r19, r0
   13d2c:	7c 9d       	mul	r23, r12
   13d2e:	30 0d       	add	r19, r0
   13d30:	11 24       	eor	r1, r1
   13d32:	c5 01       	movw	r24, r10
   13d34:	b7 01       	movw	r22, r14
   13d36:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   13d3a:	98 9e       	mul	r9, r24
   13d3c:	a0 01       	movw	r20, r0
   13d3e:	99 9e       	mul	r9, r25
   13d40:	50 0d       	add	r21, r0
   13d42:	11 24       	eor	r1, r1
   13d44:	24 0f       	add	r18, r20
   13d46:	35 1f       	adc	r19, r21
   13d48:	31 83       	std	Z+1, r19	; 0x01
   13d4a:	20 83       	st	Z, r18
   13d4c:	0f 5f       	subi	r16, 0xFF	; 255
   13d4e:	1f 4f       	sbci	r17, 0xFF	; 255
   13d50:	07 32       	cpi	r16, 0x27	; 39
   13d52:	11 05       	cpc	r17, r1
   13d54:	79 f6       	brne	.-98     	; 0x13cf4 <_Z12Pub_Sub_DataPcPhjh+0x1a26>
   13d56:	80 e0       	ldi	r24, 0x00	; 0
   13d58:	90 e0       	ldi	r25, 0x00	; 0
   13d5a:	fc 01       	movw	r30, r24
   13d5c:	e0 51       	subi	r30, 0x10	; 16
   13d5e:	f7 4f       	sbci	r31, 0xF7	; 247
   13d60:	df 01       	movw	r26, r30
   13d62:	a6 56       	subi	r26, 0x66	; 102
   13d64:	bd 4f       	sbci	r27, 0xFD	; 253
   13d66:	2c 91       	ld	r18, X
   13d68:	25 af       	std	Z+61, r18	; 0x3d
   13d6a:	01 96       	adiw	r24, 0x01	; 1
   13d6c:	8e 30       	cpi	r24, 0x0E	; 14
   13d6e:	91 05       	cpc	r25, r1
   13d70:	a1 f7       	brne	.-24     	; 0x13d5a <_Z12Pub_Sub_DataPcPhjh+0x1a8c>
   13d72:	80 e0       	ldi	r24, 0x00	; 0
   13d74:	90 e0       	ldi	r25, 0x00	; 0
   13d76:	fc 01       	movw	r30, r24
   13d78:	ee 0f       	add	r30, r30
   13d7a:	ff 1f       	adc	r31, r31
   13d7c:	e4 59       	subi	r30, 0x94	; 148
   13d7e:	f4 4f       	sbci	r31, 0xF4	; 244
   13d80:	20 81       	ld	r18, Z
   13d82:	31 81       	ldd	r19, Z+1	; 0x01
   13d84:	fc 01       	movw	r30, r24
   13d86:	ee 0f       	add	r30, r30
   13d88:	ff 1f       	adc	r31, r31
   13d8a:	e0 51       	subi	r30, 0x10	; 16
   13d8c:	f7 4f       	sbci	r31, 0xF7	; 247
   13d8e:	30 a3       	std	Z+32, r19	; 0x20
   13d90:	27 8f       	std	Z+31, r18	; 0x1f
   13d92:	01 96       	adiw	r24, 0x01	; 1
   13d94:	8e 30       	cpi	r24, 0x0E	; 14
   13d96:	91 05       	cpc	r25, r1
   13d98:	71 f7       	brne	.-36     	; 0x13d76 <_Z12Pub_Sub_DataPcPhjh+0x1aa8>
   13d9a:	80 e0       	ldi	r24, 0x00	; 0
   13d9c:	90 e0       	ldi	r25, 0x00	; 0
   13d9e:	9c 01       	movw	r18, r24
   13da0:	20 51       	subi	r18, 0x10	; 16
   13da2:	37 4f       	sbci	r19, 0xF7	; 247
   13da4:	f9 01       	movw	r30, r18
   13da6:	e7 55       	subi	r30, 0x57	; 87
   13da8:	fd 4f       	sbci	r31, 0xFD	; 253
   13daa:	40 81       	ld	r20, Z
   13dac:	ed 55       	subi	r30, 0x5D	; 93
   13dae:	f2 40       	sbci	r31, 0x02	; 2
   13db0:	40 83       	st	Z, r20
   13db2:	01 96       	adiw	r24, 0x01	; 1
   13db4:	8e 30       	cpi	r24, 0x0E	; 14
   13db6:	91 05       	cpc	r25, r1
   13db8:	91 f7       	brne	.-28     	; 0x13d9e <_Z12Pub_Sub_DataPcPhjh+0x1ad0>
   13dba:	00 e0       	ldi	r16, 0x00	; 0
   13dbc:	10 e0       	ldi	r17, 0x00	; 0
   13dbe:	40 e0       	ldi	r20, 0x00	; 0
   13dc0:	50 e0       	ldi	r21, 0x00	; 0
   13dc2:	b1 2c       	mov	r11, r1
   13dc4:	da 01       	movw	r26, r20
   13dc6:	a0 51       	subi	r26, 0x10	; 16
   13dc8:	b7 4f       	sbci	r27, 0xF7	; 247
   13dca:	dd 96       	adiw	r26, 0x3d	; 61
   13dcc:	8c 91       	ld	r24, X
   13dce:	dd 97       	sbiw	r26, 0x3d	; 61
   13dd0:	81 30       	cpi	r24, 0x01	; 1
   13dd2:	09 f0       	breq	.+2      	; 0x13dd6 <_Z12Pub_Sub_DataPcPhjh+0x1b08>
   13dd4:	68 c0       	rjmp	.+208    	; 0x13ea6 <_Z12Pub_Sub_DataPcPhjh+0x1bd8>
   13dd6:	8b 2d       	mov	r24, r11
   13dd8:	90 e0       	ldi	r25, 0x00	; 0
   13dda:	dd 96       	adiw	r26, 0x3d	; 61
   13ddc:	6c 91       	ld	r22, X
   13dde:	dd 97       	sbiw	r26, 0x3d	; 61
   13de0:	9c 01       	movw	r18, r24
   13de2:	20 51       	subi	r18, 0x10	; 16
   13de4:	37 4f       	sbci	r19, 0xF7	; 247
   13de6:	f9 01       	movw	r30, r18
   13de8:	65 af       	std	Z+61, r22	; 0x3d
   13dea:	fa 01       	movw	r30, r20
   13dec:	ee 0f       	add	r30, r30
   13dee:	ff 1f       	adc	r31, r31
   13df0:	e0 51       	subi	r30, 0x10	; 16
   13df2:	f7 4f       	sbci	r31, 0xF7	; 247
   13df4:	67 8d       	ldd	r22, Z+31	; 0x1f
   13df6:	70 a1       	ldd	r23, Z+32	; 0x20
   13df8:	88 0f       	add	r24, r24
   13dfa:	99 1f       	adc	r25, r25
   13dfc:	fc 01       	movw	r30, r24
   13dfe:	e0 51       	subi	r30, 0x10	; 16
   13e00:	f7 4f       	sbci	r31, 0xF7	; 247
   13e02:	70 a3       	std	Z+32, r23	; 0x20
   13e04:	67 8f       	std	Z+31, r22	; 0x1f
   13e06:	a4 5b       	subi	r26, 0xB4	; 180
   13e08:	bf 4f       	sbci	r27, 0xFF	; 255
   13e0a:	8c 91       	ld	r24, X
   13e0c:	f9 01       	movw	r30, r18
   13e0e:	e4 5b       	subi	r30, 0xB4	; 180
   13e10:	ff 4f       	sbci	r31, 0xFF	; 255
   13e12:	80 83       	st	Z, r24
   13e14:	f3 e0       	ldi	r31, 0x03	; 3
   13e16:	bf 9e       	mul	r11, r31
   13e18:	60 01       	movw	r12, r0
   13e1a:	11 24       	eor	r1, r1
   13e1c:	60 e0       	ldi	r22, 0x00	; 0
   13e1e:	70 e0       	ldi	r23, 0x00	; 0
   13e20:	46 01       	movw	r8, r12
   13e22:	86 0e       	add	r8, r22
   13e24:	97 1e       	adc	r9, r23
   13e26:	9b 01       	movw	r18, r22
   13e28:	20 0f       	add	r18, r16
   13e2a:	31 1f       	adc	r19, r17
   13e2c:	d9 01       	movw	r26, r18
   13e2e:	a0 51       	subi	r26, 0x10	; 16
   13e30:	b7 4f       	sbci	r27, 0xF7	; 247
   13e32:	fd 01       	movw	r30, r26
   13e34:	ef 5a       	subi	r30, 0xAF	; 175
   13e36:	fe 4f       	sbci	r31, 0xFE	; 254
   13e38:	a0 80       	ld	r10, Z
   13e3a:	c4 01       	movw	r24, r8
   13e3c:	80 51       	subi	r24, 0x10	; 16
   13e3e:	97 4f       	sbci	r25, 0xF7	; 247
   13e40:	7c 01       	movw	r14, r24
   13e42:	9f ea       	ldi	r25, 0xAF	; 175
   13e44:	e9 1a       	sub	r14, r25
   13e46:	9e ef       	ldi	r25, 0xFE	; 254
   13e48:	f9 0a       	sbc	r15, r25
   13e4a:	f7 01       	movw	r30, r14
   13e4c:	a0 82       	st	Z, r10
   13e4e:	a6 58       	subi	r26, 0x86	; 134
   13e50:	bf 4f       	sbci	r27, 0xFF	; 255
   13e52:	ac 91       	ld	r26, X
   13e54:	e7 5d       	subi	r30, 0xD7	; 215
   13e56:	f1 09       	sbc	r31, r1
   13e58:	a0 83       	st	Z, r26
   13e5a:	22 0f       	add	r18, r18
   13e5c:	33 1f       	adc	r19, r19
   13e5e:	20 51       	subi	r18, 0x10	; 16
   13e60:	37 4f       	sbci	r19, 0xF7	; 247
   13e62:	f9 01       	movw	r30, r18
   13e64:	eb 55       	subi	r30, 0x5B	; 91
   13e66:	ff 4f       	sbci	r31, 0xFF	; 255
   13e68:	01 90       	ld	r0, Z+
   13e6a:	f0 81       	ld	r31, Z
   13e6c:	e0 2d       	mov	r30, r0
   13e6e:	c4 01       	movw	r24, r8
   13e70:	88 0f       	add	r24, r24
   13e72:	99 1f       	adc	r25, r25
   13e74:	80 51       	subi	r24, 0x10	; 16
   13e76:	97 4f       	sbci	r25, 0xF7	; 247
   13e78:	dc 01       	movw	r26, r24
   13e7a:	ab 55       	subi	r26, 0x5B	; 91
   13e7c:	bf 4f       	sbci	r27, 0xFF	; 255
   13e7e:	11 96       	adiw	r26, 0x01	; 1
   13e80:	fc 93       	st	X, r31
   13e82:	ee 93       	st	-X, r30
   13e84:	f9 01       	movw	r30, r18
   13e86:	e5 50       	subi	r30, 0x05	; 5
   13e88:	ff 4f       	sbci	r31, 0xFF	; 255
   13e8a:	20 81       	ld	r18, Z
   13e8c:	31 81       	ldd	r19, Z+1	; 0x01
   13e8e:	fc 01       	movw	r30, r24
   13e90:	e5 50       	subi	r30, 0x05	; 5
   13e92:	ff 4f       	sbci	r31, 0xFF	; 255
   13e94:	31 83       	std	Z+1, r19	; 0x01
   13e96:	20 83       	st	Z, r18
   13e98:	6f 5f       	subi	r22, 0xFF	; 255
   13e9a:	7f 4f       	sbci	r23, 0xFF	; 255
   13e9c:	63 30       	cpi	r22, 0x03	; 3
   13e9e:	71 05       	cpc	r23, r1
   13ea0:	09 f0       	breq	.+2      	; 0x13ea4 <_Z12Pub_Sub_DataPcPhjh+0x1bd6>
   13ea2:	be cf       	rjmp	.-132    	; 0x13e20 <_Z12Pub_Sub_DataPcPhjh+0x1b52>
   13ea4:	b3 94       	inc	r11
   13ea6:	4f 5f       	subi	r20, 0xFF	; 255
   13ea8:	5f 4f       	sbci	r21, 0xFF	; 255
   13eaa:	0d 5f       	subi	r16, 0xFD	; 253
   13eac:	1f 4f       	sbci	r17, 0xFF	; 255
   13eae:	4e 30       	cpi	r20, 0x0E	; 14
   13eb0:	51 05       	cpc	r21, r1
   13eb2:	09 f0       	breq	.+2      	; 0x13eb6 <_Z12Pub_Sub_DataPcPhjh+0x1be8>
   13eb4:	87 cf       	rjmp	.-242    	; 0x13dc4 <_Z12Pub_Sub_DataPcPhjh+0x1af6>
   13eb6:	fd e0       	ldi	r31, 0x0D	; 13
   13eb8:	fb 15       	cp	r31, r11
   13eba:	08 f0       	brcs	.+2      	; 0x13ebe <_Z12Pub_Sub_DataPcPhjh+0x1bf0>
   13ebc:	14 c2       	rjmp	.+1064   	; 0x142e6 <_Z12Pub_Sub_DataPcPhjh+0x2018>
   13ebe:	00 e0       	ldi	r16, 0x00	; 0
   13ec0:	10 e0       	ldi	r17, 0x00	; 0
   13ec2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13ec6:	81 30       	cpi	r24, 0x01	; 1
   13ec8:	a1 f4       	brne	.+40     	; 0x13ef2 <_Z12Pub_Sub_DataPcPhjh+0x1c24>
   13eca:	65 ee       	ldi	r22, 0xE5	; 229
   13ecc:	73 e3       	ldi	r23, 0x33	; 51
   13ece:	8f e6       	ldi	r24, 0x6F	; 111
   13ed0:	96 e1       	ldi	r25, 0x16	; 22
   13ed2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13ed6:	f8 01       	movw	r30, r16
   13ed8:	e0 51       	subi	r30, 0x10	; 16
   13eda:	f7 4f       	sbci	r31, 0xF7	; 247
   13edc:	65 ad       	ldd	r22, Z+61	; 0x3d
   13ede:	4a e0       	ldi	r20, 0x0A	; 10
   13ee0:	50 e0       	ldi	r21, 0x00	; 0
   13ee2:	8f e6       	ldi	r24, 0x6F	; 111
   13ee4:	96 e1       	ldi	r25, 0x16	; 22
   13ee6:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13eea:	8f e6       	ldi	r24, 0x6F	; 111
   13eec:	96 e1       	ldi	r25, 0x16	; 22
   13eee:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13ef2:	0f 5f       	subi	r16, 0xFF	; 255
   13ef4:	1f 4f       	sbci	r17, 0xFF	; 255
   13ef6:	0e 30       	cpi	r16, 0x0E	; 14
   13ef8:	11 05       	cpc	r17, r1
   13efa:	19 f7       	brne	.-58     	; 0x13ec2 <_Z12Pub_Sub_DataPcPhjh+0x1bf4>
   13efc:	00 e0       	ldi	r16, 0x00	; 0
   13efe:	10 e0       	ldi	r17, 0x00	; 0
   13f00:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13f04:	81 30       	cpi	r24, 0x01	; 1
   13f06:	b9 f4       	brne	.+46     	; 0x13f36 <_Z12Pub_Sub_DataPcPhjh+0x1c68>
   13f08:	63 ed       	ldi	r22, 0xD3	; 211
   13f0a:	73 e3       	ldi	r23, 0x33	; 51
   13f0c:	8f e6       	ldi	r24, 0x6F	; 111
   13f0e:	96 e1       	ldi	r25, 0x16	; 22
   13f10:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13f14:	f8 01       	movw	r30, r16
   13f16:	ee 0f       	add	r30, r30
   13f18:	ff 1f       	adc	r31, r31
   13f1a:	e0 51       	subi	r30, 0x10	; 16
   13f1c:	f7 4f       	sbci	r31, 0xF7	; 247
   13f1e:	67 8d       	ldd	r22, Z+31	; 0x1f
   13f20:	70 a1       	ldd	r23, Z+32	; 0x20
   13f22:	4a e0       	ldi	r20, 0x0A	; 10
   13f24:	50 e0       	ldi	r21, 0x00	; 0
   13f26:	8f e6       	ldi	r24, 0x6F	; 111
   13f28:	96 e1       	ldi	r25, 0x16	; 22
   13f2a:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   13f2e:	8f e6       	ldi	r24, 0x6F	; 111
   13f30:	96 e1       	ldi	r25, 0x16	; 22
   13f32:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13f36:	0f 5f       	subi	r16, 0xFF	; 255
   13f38:	1f 4f       	sbci	r17, 0xFF	; 255
   13f3a:	0e 30       	cpi	r16, 0x0E	; 14
   13f3c:	11 05       	cpc	r17, r1
   13f3e:	01 f7       	brne	.-64     	; 0x13f00 <_Z12Pub_Sub_DataPcPhjh+0x1c32>
   13f40:	00 e0       	ldi	r16, 0x00	; 0
   13f42:	10 e0       	ldi	r17, 0x00	; 0
   13f44:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13f48:	81 30       	cpi	r24, 0x01	; 1
   13f4a:	a1 f4       	brne	.+40     	; 0x13f74 <_Z12Pub_Sub_DataPcPhjh+0x1ca6>
   13f4c:	69 ec       	ldi	r22, 0xC9	; 201
   13f4e:	73 e3       	ldi	r23, 0x33	; 51
   13f50:	8f e6       	ldi	r24, 0x6F	; 111
   13f52:	96 e1       	ldi	r25, 0x16	; 22
   13f54:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13f58:	f8 01       	movw	r30, r16
   13f5a:	e4 5c       	subi	r30, 0xC4	; 196
   13f5c:	f6 4f       	sbci	r31, 0xF6	; 246
   13f5e:	60 81       	ld	r22, Z
   13f60:	4a e0       	ldi	r20, 0x0A	; 10
   13f62:	50 e0       	ldi	r21, 0x00	; 0
   13f64:	8f e6       	ldi	r24, 0x6F	; 111
   13f66:	96 e1       	ldi	r25, 0x16	; 22
   13f68:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13f6c:	8f e6       	ldi	r24, 0x6F	; 111
   13f6e:	96 e1       	ldi	r25, 0x16	; 22
   13f70:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13f74:	0f 5f       	subi	r16, 0xFF	; 255
   13f76:	1f 4f       	sbci	r17, 0xFF	; 255
   13f78:	0e 30       	cpi	r16, 0x0E	; 14
   13f7a:	11 05       	cpc	r17, r1
   13f7c:	19 f7       	brne	.-58     	; 0x13f44 <_Z12Pub_Sub_DataPcPhjh+0x1c76>
   13f7e:	00 e0       	ldi	r16, 0x00	; 0
   13f80:	10 e0       	ldi	r17, 0x00	; 0
   13f82:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13f86:	81 30       	cpi	r24, 0x01	; 1
   13f88:	a1 f4       	brne	.+40     	; 0x13fb2 <_Z12Pub_Sub_DataPcPhjh+0x1ce4>
   13f8a:	6d eb       	ldi	r22, 0xBD	; 189
   13f8c:	73 e3       	ldi	r23, 0x33	; 51
   13f8e:	8f e6       	ldi	r24, 0x6F	; 111
   13f90:	96 e1       	ldi	r25, 0x16	; 22
   13f92:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13f96:	f8 01       	movw	r30, r16
   13f98:	ef 5b       	subi	r30, 0xBF	; 191
   13f9a:	f5 4f       	sbci	r31, 0xF5	; 245
   13f9c:	60 81       	ld	r22, Z
   13f9e:	4a e0       	ldi	r20, 0x0A	; 10
   13fa0:	50 e0       	ldi	r21, 0x00	; 0
   13fa2:	8f e6       	ldi	r24, 0x6F	; 111
   13fa4:	96 e1       	ldi	r25, 0x16	; 22
   13fa6:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13faa:	8f e6       	ldi	r24, 0x6F	; 111
   13fac:	96 e1       	ldi	r25, 0x16	; 22
   13fae:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13fb2:	0f 5f       	subi	r16, 0xFF	; 255
   13fb4:	1f 4f       	sbci	r17, 0xFF	; 255
   13fb6:	07 32       	cpi	r16, 0x27	; 39
   13fb8:	11 05       	cpc	r17, r1
   13fba:	19 f7       	brne	.-58     	; 0x13f82 <_Z12Pub_Sub_DataPcPhjh+0x1cb4>
   13fbc:	00 e0       	ldi	r16, 0x00	; 0
   13fbe:	10 e0       	ldi	r17, 0x00	; 0
   13fc0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   13fc4:	81 30       	cpi	r24, 0x01	; 1
   13fc6:	a1 f4       	brne	.+40     	; 0x13ff0 <_Z12Pub_Sub_DataPcPhjh+0x1d22>
   13fc8:	63 eb       	ldi	r22, 0xB3	; 179
   13fca:	73 e3       	ldi	r23, 0x33	; 51
   13fcc:	8f e6       	ldi	r24, 0x6F	; 111
   13fce:	96 e1       	ldi	r25, 0x16	; 22
   13fd0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   13fd4:	f8 01       	movw	r30, r16
   13fd6:	e6 59       	subi	r30, 0x96	; 150
   13fd8:	f6 4f       	sbci	r31, 0xF6	; 246
   13fda:	60 81       	ld	r22, Z
   13fdc:	4a e0       	ldi	r20, 0x0A	; 10
   13fde:	50 e0       	ldi	r21, 0x00	; 0
   13fe0:	8f e6       	ldi	r24, 0x6F	; 111
   13fe2:	96 e1       	ldi	r25, 0x16	; 22
   13fe4:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   13fe8:	8f e6       	ldi	r24, 0x6F	; 111
   13fea:	96 e1       	ldi	r25, 0x16	; 22
   13fec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   13ff0:	0f 5f       	subi	r16, 0xFF	; 255
   13ff2:	1f 4f       	sbci	r17, 0xFF	; 255
   13ff4:	07 32       	cpi	r16, 0x27	; 39
   13ff6:	11 05       	cpc	r17, r1
   13ff8:	19 f7       	brne	.-58     	; 0x13fc0 <_Z12Pub_Sub_DataPcPhjh+0x1cf2>
   13ffa:	00 e0       	ldi	r16, 0x00	; 0
   13ffc:	10 e0       	ldi	r17, 0x00	; 0
   13ffe:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14002:	81 30       	cpi	r24, 0x01	; 1
   14004:	b9 f4       	brne	.+46     	; 0x14034 <_Z12Pub_Sub_DataPcPhjh+0x1d66>
   14006:	63 ea       	ldi	r22, 0xA3	; 163
   14008:	73 e3       	ldi	r23, 0x33	; 51
   1400a:	8f e6       	ldi	r24, 0x6F	; 111
   1400c:	96 e1       	ldi	r25, 0x16	; 22
   1400e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   14012:	f8 01       	movw	r30, r16
   14014:	ee 0f       	add	r30, r30
   14016:	ff 1f       	adc	r31, r31
   14018:	eb 56       	subi	r30, 0x6B	; 107
   1401a:	f6 4f       	sbci	r31, 0xF6	; 246
   1401c:	60 81       	ld	r22, Z
   1401e:	71 81       	ldd	r23, Z+1	; 0x01
   14020:	4a e0       	ldi	r20, 0x0A	; 10
   14022:	50 e0       	ldi	r21, 0x00	; 0
   14024:	8f e6       	ldi	r24, 0x6F	; 111
   14026:	96 e1       	ldi	r25, 0x16	; 22
   14028:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   1402c:	8f e6       	ldi	r24, 0x6F	; 111
   1402e:	96 e1       	ldi	r25, 0x16	; 22
   14030:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14034:	0f 5f       	subi	r16, 0xFF	; 255
   14036:	1f 4f       	sbci	r17, 0xFF	; 255
   14038:	07 32       	cpi	r16, 0x27	; 39
   1403a:	11 05       	cpc	r17, r1
   1403c:	01 f7       	brne	.-64     	; 0x13ffe <_Z12Pub_Sub_DataPcPhjh+0x1d30>
   1403e:	00 e0       	ldi	r16, 0x00	; 0
   14040:	10 e0       	ldi	r17, 0x00	; 0
   14042:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14046:	81 30       	cpi	r24, 0x01	; 1
   14048:	b9 f4       	brne	.+46     	; 0x14078 <_Z12Pub_Sub_DataPcPhjh+0x1daa>
   1404a:	63 e9       	ldi	r22, 0x93	; 147
   1404c:	73 e3       	ldi	r23, 0x33	; 51
   1404e:	8f e6       	ldi	r24, 0x6F	; 111
   14050:	96 e1       	ldi	r25, 0x16	; 22
   14052:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   14056:	f8 01       	movw	r30, r16
   14058:	ee 0f       	add	r30, r30
   1405a:	ff 1f       	adc	r31, r31
   1405c:	e5 51       	subi	r30, 0x15	; 21
   1405e:	f6 4f       	sbci	r31, 0xF6	; 246
   14060:	60 81       	ld	r22, Z
   14062:	71 81       	ldd	r23, Z+1	; 0x01
   14064:	4a e0       	ldi	r20, 0x0A	; 10
   14066:	50 e0       	ldi	r21, 0x00	; 0
   14068:	8f e6       	ldi	r24, 0x6F	; 111
   1406a:	96 e1       	ldi	r25, 0x16	; 22
   1406c:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   14070:	8f e6       	ldi	r24, 0x6F	; 111
   14072:	96 e1       	ldi	r25, 0x16	; 22
   14074:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14078:	0f 5f       	subi	r16, 0xFF	; 255
   1407a:	1f 4f       	sbci	r17, 0xFF	; 255
   1407c:	07 32       	cpi	r16, 0x27	; 39
   1407e:	11 05       	cpc	r17, r1
   14080:	01 f7       	brne	.-64     	; 0x14042 <_Z12Pub_Sub_DataPcPhjh+0x1d74>
   14082:	80 91 6b 0b 	lds	r24, 0x0B6B	; 0x800b6b <_sSchedules+0x27b>
   14086:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <_sSchedules+0x1b>
   1408a:	80 91 64 0b 	lds	r24, 0x0B64	; 0x800b64 <_sSchedules+0x274>
   1408e:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <_sSchedules+0x1d>
   14092:	80 91 66 0b 	lds	r24, 0x0B66	; 0x800b66 <_sSchedules+0x276>
   14096:	80 93 0c 09 	sts	0x090C, r24	; 0x80090c <_sSchedules+0x1c>
   1409a:	80 91 67 0b 	lds	r24, 0x0B67	; 0x800b67 <_sSchedules+0x277>
   1409e:	90 91 68 0b 	lds	r25, 0x0B68	; 0x800b68 <_sSchedules+0x278>
   140a2:	a0 91 69 0b 	lds	r26, 0x0B69	; 0x800b69 <_sSchedules+0x279>
   140a6:	b0 91 6a 0b 	lds	r27, 0x0B6A	; 0x800b6a <_sSchedules+0x27a>
   140aa:	80 93 03 09 	sts	0x0903, r24	; 0x800903 <_sSchedules+0x13>
   140ae:	90 93 04 09 	sts	0x0904, r25	; 0x800904 <_sSchedules+0x14>
   140b2:	a0 93 05 09 	sts	0x0905, r26	; 0x800905 <_sSchedules+0x15>
   140b6:	b0 93 06 09 	sts	0x0906, r27	; 0x800906 <_sSchedules+0x16>
   140ba:	80 91 0b 09 	lds	r24, 0x090B	; 0x80090b <_sSchedules+0x1b>
   140be:	88 e6       	ldi	r24, 0x68	; 104
   140c0:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <_sSchedules+0x1b>
   140c4:	80 91 a9 15 	lds	r24, 0x15A9	; 0x8015a9 <_sRuble_Parameters+0x44>
   140c8:	80 93 a9 0b 	sts	0x0BA9, r24	; 0x800ba9 <_sSchedules+0x2b9>
   140cc:	10 92 f6 08 	sts	0x08F6, r1	; 0x8008f6 <_sSchedules+0x6>
   140d0:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <_sSchedules+0x79>
   140d4:	10 92 a8 0b 	sts	0x0BA8, r1	; 0x800ba8 <_sSchedules+0x2b8>
   140d8:	80 91 b9 0b 	lds	r24, 0x0BB9	; 0x800bb9 <_sSchedules+0x2c9>
   140dc:	80 93 b8 0b 	sts	0x0BB8, r24	; 0x800bb8 <_sSchedules+0x2c8>
   140e0:	80 91 c3 0b 	lds	r24, 0x0BC3	; 0x800bc3 <_sSchedules+0x2d3>
   140e4:	80 93 c2 0b 	sts	0x0BC2, r24	; 0x800bc2 <_sSchedules+0x2d2>
   140e8:	80 91 c5 0b 	lds	r24, 0x0BC5	; 0x800bc5 <_sSchedules+0x2d5>
   140ec:	80 93 c4 0b 	sts	0x0BC4, r24	; 0x800bc4 <_sSchedules+0x2d4>
   140f0:	0e 94 63 84 	call	0x108c6	; 0x108c6 <_ZN11EEPROMClass3putIV9SchedulesEERKT_iS5_.isra.7.constprop.43>
   140f4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   140f8:	81 30       	cpi	r24, 0x01	; 1
   140fa:	09 f0       	breq	.+2      	; 0x140fe <_Z12Pub_Sub_DataPcPhjh+0x1e30>
   140fc:	fe c0       	rjmp	.+508    	; 0x142fa <_Z12Pub_Sub_DataPcPhjh+0x202c>
   140fe:	62 e8       	ldi	r22, 0x82	; 130
   14100:	73 e3       	ldi	r23, 0x33	; 51
   14102:	8f e6       	ldi	r24, 0x6F	; 111
   14104:	96 e1       	ldi	r25, 0x16	; 22
   14106:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1410a:	60 91 c4 0b 	lds	r22, 0x0BC4	; 0x800bc4 <_sSchedules+0x2d4>
   1410e:	4a e0       	ldi	r20, 0x0A	; 10
   14110:	50 e0       	ldi	r21, 0x00	; 0
   14112:	8f e6       	ldi	r24, 0x6F	; 111
   14114:	96 e1       	ldi	r25, 0x16	; 22
   14116:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   1411a:	31 e0       	ldi	r19, 0x01	; 1
   1411c:	ce 59       	subi	r28, 0x9E	; 158
   1411e:	d9 4f       	sbci	r29, 0xF9	; 249
   14120:	38 83       	st	Y, r19
   14122:	c2 56       	subi	r28, 0x62	; 98
   14124:	d6 40       	sbci	r29, 0x06	; 6
   14126:	b1 01       	movw	r22, r2
   14128:	8a e2       	ldi	r24, 0x2A	; 42
   1412a:	9f e0       	ldi	r25, 0x0F	; 15
   1412c:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   14130:	89 2b       	or	r24, r25
   14132:	09 f0       	breq	.+2      	; 0x14136 <_Z12Pub_Sub_DataPcPhjh+0x1e68>
   14134:	42 c0       	rjmp	.+132    	; 0x141ba <_Z12Pub_Sub_DataPcPhjh+0x1eec>
   14136:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1413a:	10 92 56 16 	sts	0x1656, r1	; 0x801656 <_sRuble_Parameters+0xf1>
   1413e:	66 e7       	ldi	r22, 0x76	; 118
   14140:	73 e3       	ldi	r23, 0x33	; 51
   14142:	c3 01       	movw	r24, r6
   14144:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   14148:	88 23       	and	r24, r24
   1414a:	e1 f0       	breq	.+56     	; 0x14184 <_Z12Pub_Sub_DataPcPhjh+0x1eb6>
   1414c:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   14150:	82 30       	cpi	r24, 0x02	; 2
   14152:	99 f5       	brne	.+102    	; 0x141ba <_Z12Pub_Sub_DataPcPhjh+0x1eec>
   14154:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14158:	81 30       	cpi	r24, 0x01	; 1
   1415a:	51 f4       	brne	.+20     	; 0x14170 <_Z12Pub_Sub_DataPcPhjh+0x1ea2>
   1415c:	64 e5       	ldi	r22, 0x54	; 84
   1415e:	73 e3       	ldi	r23, 0x33	; 51
   14160:	8f e6       	ldi	r24, 0x6F	; 111
   14162:	96 e1       	ldi	r25, 0x16	; 22
   14164:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14168:	8f e6       	ldi	r24, 0x6F	; 111
   1416a:	96 e1       	ldi	r25, 0x16	; 22
   1416c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14170:	81 e0       	ldi	r24, 0x01	; 1
   14172:	80 93 10 16 	sts	0x1610, r24	; 0x801610 <_sRuble_Parameters+0xab>
   14176:	51 e0       	ldi	r21, 0x01	; 1
   14178:	ce 59       	subi	r28, 0x9E	; 158
   1417a:	d9 4f       	sbci	r29, 0xF9	; 249
   1417c:	58 83       	st	Y, r21
   1417e:	c2 56       	subi	r28, 0x62	; 98
   14180:	d6 40       	sbci	r29, 0x06	; 6
   14182:	1b c0       	rjmp	.+54     	; 0x141ba <_Z12Pub_Sub_DataPcPhjh+0x1eec>
   14184:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   14188:	82 30       	cpi	r24, 0x02	; 2
   1418a:	60 f0       	brcs	.+24     	; 0x141a4 <_Z12Pub_Sub_DataPcPhjh+0x1ed6>
   1418c:	6d e3       	ldi	r22, 0x3D	; 61
   1418e:	73 e3       	ldi	r23, 0x33	; 51
   14190:	8f e6       	ldi	r24, 0x6F	; 111
   14192:	96 e1       	ldi	r25, 0x16	; 22
   14194:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14198:	81 e0       	ldi	r24, 0x01	; 1
   1419a:	80 93 10 16 	sts	0x1610, r24	; 0x801610 <_sRuble_Parameters+0xab>
   1419e:	80 93 56 16 	sts	0x1656, r24	; 0x801656 <_sRuble_Parameters+0xf1>
   141a2:	0b c0       	rjmp	.+22     	; 0x141ba <_Z12Pub_Sub_DataPcPhjh+0x1eec>
   141a4:	82 e0       	ldi	r24, 0x02	; 2
   141a6:	80 93 56 16 	sts	0x1656, r24	; 0x801656 <_sRuble_Parameters+0xf1>
   141aa:	10 92 22 16 	sts	0x1622, r1	; 0x801622 <_sRuble_Parameters+0xbd>
   141ae:	62 e2       	ldi	r22, 0x22	; 34
   141b0:	76 e1       	ldi	r23, 0x16	; 22
   141b2:	89 e2       	ldi	r24, 0x29	; 41
   141b4:	9c e0       	ldi	r25, 0x0C	; 12
   141b6:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   141ba:	b1 01       	movw	r22, r2
   141bc:	87 e5       	ldi	r24, 0x57	; 87
   141be:	9f e0       	ldi	r25, 0x0F	; 15
   141c0:	0e 94 95 e9 	call	0x1d32a	; 0x1d32a <strcmp>
   141c4:	89 2b       	or	r24, r25
   141c6:	09 f0       	breq	.+2      	; 0x141ca <_Z12Pub_Sub_DataPcPhjh+0x1efc>
   141c8:	71 c0       	rjmp	.+226    	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   141ca:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   141ce:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   141d2:	82 30       	cpi	r24, 0x02	; 2
   141d4:	09 f4       	brne	.+2      	; 0x141d8 <_Z12Pub_Sub_DataPcPhjh+0x1f0a>
   141d6:	6a c0       	rjmp	.+212    	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   141d8:	69 e3       	ldi	r22, 0x39	; 57
   141da:	73 e3       	ldi	r23, 0x33	; 51
   141dc:	c3 01       	movw	r24, r6
   141de:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   141e2:	18 2f       	mov	r17, r24
   141e4:	62 e3       	ldi	r22, 0x32	; 50
   141e6:	73 e3       	ldi	r23, 0x33	; 51
   141e8:	c3 01       	movw	r24, r6
   141ea:	0e 94 44 8c 	call	0x11888	; 0x11888 <_ZNK11ArduinoJson10JsonObject8get_implIPK19__FlashStringHelperhEENS_9Internals13JsonVariantAsIT0_E4typeET_>
   141ee:	08 2f       	mov	r16, r24
   141f0:	17 36       	cpi	r17, 0x67	; 103
   141f2:	19 f0       	breq	.+6      	; 0x141fa <_Z12Pub_Sub_DataPcPhjh+0x1f2c>
   141f4:	1d 36       	cpi	r17, 0x6D	; 109
   141f6:	09 f0       	breq	.+2      	; 0x141fa <_Z12Pub_Sub_DataPcPhjh+0x1f2c>
   141f8:	87 c0       	rjmp	.+270    	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   141fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   141fe:	81 30       	cpi	r24, 0x01	; 1
   14200:	51 f4       	brne	.+20     	; 0x14216 <_Z12Pub_Sub_DataPcPhjh+0x1f48>
   14202:	61 ef       	ldi	r22, 0xF1	; 241
   14204:	72 e3       	ldi	r23, 0x32	; 50
   14206:	8f e6       	ldi	r24, 0x6F	; 111
   14208:	96 e1       	ldi	r25, 0x16	; 22
   1420a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1420e:	8f e6       	ldi	r24, 0x6F	; 111
   14210:	96 e1       	ldi	r25, 0x16	; 22
   14212:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14216:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   1421a:	88 23       	and	r24, r24
   1421c:	19 f0       	breq	.+6      	; 0x14224 <_Z12Pub_Sub_DataPcPhjh+0x1f56>
   1421e:	1d 36       	cpi	r17, 0x6D	; 109
   14220:	09 f4       	brne	.+2      	; 0x14224 <_Z12Pub_Sub_DataPcPhjh+0x1f56>
   14222:	72 c0       	rjmp	.+228    	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   14224:	15 36       	cpi	r17, 0x65	; 101
   14226:	08 f4       	brcc	.+2      	; 0x1422a <_Z12Pub_Sub_DataPcPhjh+0x1f5c>
   14228:	41 c0       	rjmp	.+130    	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   1422a:	81 2f       	mov	r24, r17
   1422c:	90 e0       	ldi	r25, 0x00	; 0
   1422e:	85 56       	subi	r24, 0x65	; 101
   14230:	91 09       	sbc	r25, r1
   14232:	4b e1       	ldi	r20, 0x1B	; 27
   14234:	48 9f       	mul	r20, r24
   14236:	f0 01       	movw	r30, r0
   14238:	49 9f       	mul	r20, r25
   1423a:	f0 0d       	add	r31, r0
   1423c:	11 24       	eor	r1, r1
   1423e:	e1 56       	subi	r30, 0x61	; 97
   14240:	f0 4f       	sbci	r31, 0xF0	; 240
   14242:	81 81       	ldd	r24, Z+1	; 0x01
   14244:	88 23       	and	r24, r24
   14246:	91 f1       	breq	.+100    	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   14248:	9b e9       	ldi	r25, 0x9B	; 155
   1424a:	91 0f       	add	r25, r17
   1424c:	29 2f       	mov	r18, r25
   1424e:	30 e0       	ldi	r19, 0x00	; 0
   14250:	42 9f       	mul	r20, r18
   14252:	f0 01       	movw	r30, r0
   14254:	43 9f       	mul	r20, r19
   14256:	f0 0d       	add	r31, r0
   14258:	11 24       	eor	r1, r1
   1425a:	e1 56       	subi	r30, 0x61	; 97
   1425c:	f0 4f       	sbci	r31, 0xF0	; 240
   1425e:	82 81       	ldd	r24, Z+2	; 0x02
   14260:	84 30       	cpi	r24, 0x04	; 4
   14262:	21 f1       	breq	.+72     	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   14264:	94 30       	cpi	r25, 0x04	; 4
   14266:	11 f1       	breq	.+68     	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   14268:	43 81       	ldd	r20, Z+3	; 0x03
   1426a:	54 81       	ldd	r21, Z+4	; 0x04
   1426c:	45 2b       	or	r20, r21
   1426e:	f1 f4       	brne	.+60     	; 0x142ac <_Z12Pub_Sub_DataPcPhjh+0x1fde>
   14270:	00 23       	and	r16, r16
   14272:	31 f0       	breq	.+12     	; 0x14280 <_Z12Pub_Sub_DataPcPhjh+0x1fb2>
   14274:	81 e0       	ldi	r24, 0x01	; 1
   14276:	82 87       	std	Z+10, r24	; 0x0a
   14278:	82 e0       	ldi	r24, 0x02	; 2
   1427a:	82 83       	std	Z+2, r24	; 0x02
   1427c:	83 87       	std	Z+11, r24	; 0x0b
   1427e:	11 c0       	rjmp	.+34     	; 0x142a2 <_Z12Pub_Sub_DataPcPhjh+0x1fd4>
   14280:	82 30       	cpi	r24, 0x02	; 2
   14282:	19 f4       	brne	.+6      	; 0x1428a <_Z12Pub_Sub_DataPcPhjh+0x1fbc>
   14284:	93 e0       	ldi	r25, 0x03	; 3
   14286:	92 83       	std	Z+2, r25	; 0x02
   14288:	02 c0       	rjmp	.+4      	; 0x1428e <_Z12Pub_Sub_DataPcPhjh+0x1fc0>
   1428a:	82 e0       	ldi	r24, 0x02	; 2
   1428c:	82 83       	std	Z+2, r24	; 0x02
   1428e:	83 87       	std	Z+11, r24	; 0x0b
   14290:	8b e1       	ldi	r24, 0x1B	; 27
   14292:	82 9f       	mul	r24, r18
   14294:	f0 01       	movw	r30, r0
   14296:	83 9f       	mul	r24, r19
   14298:	f0 0d       	add	r31, r0
   1429a:	11 24       	eor	r1, r1
   1429c:	e1 56       	subi	r30, 0x61	; 97
   1429e:	f0 4f       	sbci	r31, 0xF0	; 240
   142a0:	12 86       	std	Z+10, r1	; 0x0a
   142a2:	8c e9       	ldi	r24, 0x9C	; 156
   142a4:	81 0f       	add	r24, r17
   142a6:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   142aa:	07 c0       	rjmp	.+14     	; 0x142ba <_Z12Pub_Sub_DataPcPhjh+0x1fec>
   142ac:	ce 59       	subi	r28, 0x9E	; 158
   142ae:	d9 4f       	sbci	r29, 0xF9	; 249
   142b0:	88 81       	ld	r24, Y
   142b2:	c2 56       	subi	r28, 0x62	; 98
   142b4:	d6 40       	sbci	r29, 0x06	; 6
   142b6:	81 30       	cpi	r24, 0x01	; 1
   142b8:	39 f5       	brne	.+78     	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   142ba:	84 ed       	ldi	r24, 0xD4	; 212
   142bc:	93 e0       	ldi	r25, 0x03	; 3
   142be:	e7 e8       	ldi	r30, 0x87	; 135
   142c0:	f1 e1       	ldi	r31, 0x11	; 17
   142c2:	df 01       	movw	r26, r30
   142c4:	9c 01       	movw	r18, r24
   142c6:	1d 92       	st	X+, r1
   142c8:	21 50       	subi	r18, 0x01	; 1
   142ca:	30 40       	sbci	r19, 0x00	; 0
   142cc:	e1 f7       	brne	.-8      	; 0x142c6 <_Z12Pub_Sub_DataPcPhjh+0x1ff8>
   142ce:	64 e1       	ldi	r22, 0x14	; 20
   142d0:	75 e0       	ldi	r23, 0x05	; 5
   142d2:	cf 01       	movw	r24, r30
   142d4:	0e 94 9e e9 	call	0x1d33c	; 0x1d33c <strcpy>
   142d8:	67 e8       	ldi	r22, 0x87	; 135
   142da:	71 e1       	ldi	r23, 0x11	; 17
   142dc:	8d e3       	ldi	r24, 0x3D	; 61
   142de:	9e e0       	ldi	r25, 0x0E	; 14
   142e0:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   142e4:	11 c0       	rjmp	.+34     	; 0x14308 <_Z12Pub_Sub_DataPcPhjh+0x203a>
   142e6:	eb 2d       	mov	r30, r11
   142e8:	f0 e0       	ldi	r31, 0x00	; 0
   142ea:	e0 51       	subi	r30, 0x10	; 16
   142ec:	f7 4f       	sbci	r31, 0xF7	; 247
   142ee:	15 ae       	std	Z+61, r1	; 0x3d
   142f0:	b3 94       	inc	r11
   142f2:	2e e0       	ldi	r18, 0x0E	; 14
   142f4:	b2 12       	cpse	r11, r18
   142f6:	f7 cf       	rjmp	.-18     	; 0x142e6 <_Z12Pub_Sub_DataPcPhjh+0x2018>
   142f8:	e2 cd       	rjmp	.-1084   	; 0x13ebe <_Z12Pub_Sub_DataPcPhjh+0x1bf0>
   142fa:	41 e0       	ldi	r20, 0x01	; 1
   142fc:	ce 59       	subi	r28, 0x9E	; 158
   142fe:	d9 4f       	sbci	r29, 0xF9	; 249
   14300:	48 83       	st	Y, r20
   14302:	c2 56       	subi	r28, 0x62	; 98
   14304:	d6 40       	sbci	r29, 0x06	; 6
   14306:	0f cf       	rjmp	.-482    	; 0x14126 <_Z12Pub_Sub_DataPcPhjh+0x1e58>
   14308:	c5 59       	subi	r28, 0x95	; 149
   1430a:	d9 4f       	sbci	r29, 0xF9	; 249
   1430c:	0f b6       	in	r0, 0x3f	; 63
   1430e:	f8 94       	cli
   14310:	de bf       	out	0x3e, r29	; 62
   14312:	0f be       	out	0x3f, r0	; 63
   14314:	cd bf       	out	0x3d, r28	; 61
   14316:	df 91       	pop	r29
   14318:	cf 91       	pop	r28
   1431a:	1f 91       	pop	r17
   1431c:	0f 91       	pop	r16
   1431e:	ff 90       	pop	r15
   14320:	ef 90       	pop	r14
   14322:	df 90       	pop	r13
   14324:	cf 90       	pop	r12
   14326:	bf 90       	pop	r11
   14328:	af 90       	pop	r10
   1432a:	9f 90       	pop	r9
   1432c:	8f 90       	pop	r8
   1432e:	7f 90       	pop	r7
   14330:	6f 90       	pop	r6
   14332:	5f 90       	pop	r5
   14334:	4f 90       	pop	r4
   14336:	3f 90       	pop	r3
   14338:	2f 90       	pop	r2
   1433a:	08 95       	ret

0001433c <_Z12Publish_Datav>:
   1433c:	8f 92       	push	r8
   1433e:	9f 92       	push	r9
   14340:	af 92       	push	r10
   14342:	bf 92       	push	r11
   14344:	cf 92       	push	r12
   14346:	df 92       	push	r13
   14348:	ef 92       	push	r14
   1434a:	ff 92       	push	r15
   1434c:	0f 93       	push	r16
   1434e:	1f 93       	push	r17
   14350:	cf 93       	push	r28
   14352:	df 93       	push	r29
   14354:	cd b7       	in	r28, 0x3d	; 61
   14356:	de b7       	in	r29, 0x3e	; 62
   14358:	ce 53       	subi	r28, 0x3E	; 62
   1435a:	d1 40       	sbci	r29, 0x01	; 1
   1435c:	0f b6       	in	r0, 0x3f	; 63
   1435e:	f8 94       	cli
   14360:	de bf       	out	0x3e, r29	; 62
   14362:	0f be       	out	0x3f, r0	; 63
   14364:	cd bf       	out	0x3d, r28	; 61
   14366:	82 e0       	ldi	r24, 0x02	; 2
   14368:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1436c:	ce 01       	movw	r24, r28
   1436e:	09 96       	adiw	r24, 0x09	; 9
   14370:	9c 83       	std	Y+4, r25	; 0x04
   14372:	8b 83       	std	Y+3, r24	; 0x03
   14374:	8e e0       	ldi	r24, 0x0E	; 14
   14376:	91 e0       	ldi	r25, 0x01	; 1
   14378:	9e 83       	std	Y+6, r25	; 0x06
   1437a:	8d 83       	std	Y+5, r24	; 0x05
   1437c:	18 86       	std	Y+8, r1	; 0x08
   1437e:	1f 82       	std	Y+7, r1	; 0x07
   14380:	8b ea       	ldi	r24, 0xAB	; 171
   14382:	97 e0       	ldi	r25, 0x07	; 7
   14384:	9a 83       	std	Y+2, r25	; 0x02
   14386:	89 83       	std	Y+1, r24	; 0x01
   14388:	ce 01       	movw	r24, r28
   1438a:	01 96       	adiw	r24, 0x01	; 1
   1438c:	0e 94 ac 83 	call	0x10758	; 0x10758 <_ZN11ArduinoJson10JsonBuffer12createObjectEv>
   14390:	8c 01       	movw	r16, r24
   14392:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   14396:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   1439a:	81 ff       	sbrs	r24, 1
   1439c:	54 c0       	rjmp	.+168    	; 0x14446 <_Z12Publish_Datav+0x10a>
   1439e:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   143a2:	84 ed       	ldi	r24, 0xD4	; 212
   143a4:	93 e0       	ldi	r25, 0x03	; 3
   143a6:	e7 e8       	ldi	r30, 0x87	; 135
   143a8:	f1 e1       	ldi	r31, 0x11	; 17
   143aa:	df 01       	movw	r26, r30
   143ac:	9c 01       	movw	r18, r24
   143ae:	1d 92       	st	X+, r1
   143b0:	21 50       	subi	r18, 0x01	; 1
   143b2:	30 40       	sbci	r19, 0x00	; 0
   143b4:	e1 f7       	brne	.-8      	; 0x143ae <_Z12Publish_Datav+0x72>
   143b6:	43 e6       	ldi	r20, 0x63	; 99
   143b8:	55 e1       	ldi	r21, 0x15	; 21
   143ba:	6b ee       	ldi	r22, 0xEB	; 235
   143bc:	72 e3       	ldi	r23, 0x32	; 50
   143be:	c8 01       	movw	r24, r16
   143c0:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   143c4:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   143c8:	82 30       	cpi	r24, 0x02	; 2
   143ca:	80 f0       	brcs	.+32     	; 0x143ec <_Z12Publish_Datav+0xb0>
   143cc:	90 e0       	ldi	r25, 0x00	; 0
   143ce:	02 97       	sbiw	r24, 0x02	; 2
   143d0:	2b e0       	ldi	r18, 0x0B	; 11
   143d2:	28 9f       	mul	r18, r24
   143d4:	a0 01       	movw	r20, r0
   143d6:	29 9f       	mul	r18, r25
   143d8:	50 0d       	add	r21, r0
   143da:	11 24       	eor	r1, r1
   143dc:	42 53       	subi	r20, 0x32	; 50
   143de:	54 4f       	sbci	r21, 0xF4	; 244
   143e0:	66 ee       	ldi	r22, 0xE6	; 230
   143e2:	72 e3       	ldi	r23, 0x32	; 50
   143e4:	c8 01       	movw	r24, r16
   143e6:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   143ea:	0e c0       	rjmp	.+28     	; 0x14408 <_Z12Publish_Datav+0xcc>
   143ec:	c9 5e       	subi	r28, 0xE9	; 233
   143ee:	de 4f       	sbci	r29, 0xFE	; 254
   143f0:	19 82       	std	Y+1, r1	; 0x01
   143f2:	18 82       	st	Y, r1
   143f4:	c7 51       	subi	r28, 0x17	; 23
   143f6:	d1 40       	sbci	r29, 0x01	; 1
   143f8:	ae 01       	movw	r20, r28
   143fa:	49 5e       	subi	r20, 0xE9	; 233
   143fc:	5e 4f       	sbci	r21, 0xFE	; 254
   143fe:	61 ee       	ldi	r22, 0xE1	; 225
   14400:	72 e3       	ldi	r23, 0x32	; 50
   14402:	c8 01       	movw	r24, r16
   14404:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14408:	44 ed       	ldi	r20, 0xD4	; 212
   1440a:	53 e0       	ldi	r21, 0x03	; 3
   1440c:	67 e8       	ldi	r22, 0x87	; 135
   1440e:	71 e1       	ldi	r23, 0x11	; 17
   14410:	c8 01       	movw	r24, r16
   14412:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14416:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1441a:	88 23       	and	r24, r24
   1441c:	71 f0       	breq	.+28     	; 0x1443a <_Z12Publish_Datav+0xfe>
   1441e:	67 e8       	ldi	r22, 0x87	; 135
   14420:	71 e1       	ldi	r23, 0x11	; 17
   14422:	81 e9       	ldi	r24, 0x91	; 145
   14424:	9d e0       	ldi	r25, 0x0D	; 13
   14426:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   1442a:	81 11       	cpse	r24, r1
   1442c:	06 c0       	rjmp	.+12     	; 0x1443a <_Z12Publish_Datav+0xfe>
   1442e:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14432:	81 50       	subi	r24, 0x01	; 1
   14434:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14438:	ee cf       	rjmp	.-36     	; 0x14416 <_Z12Publish_Datav+0xda>
   1443a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1443e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14442:	8d 7f       	andi	r24, 0xFD	; 253
   14444:	90 c0       	rjmp	.+288    	; 0x14566 <_Z12Publish_Datav+0x22a>
   14446:	83 ff       	sbrs	r24, 3
   14448:	94 c0       	rjmp	.+296    	; 0x14572 <_Z12Publish_Datav+0x236>
   1444a:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1444e:	84 ed       	ldi	r24, 0xD4	; 212
   14450:	93 e0       	ldi	r25, 0x03	; 3
   14452:	e7 e8       	ldi	r30, 0x87	; 135
   14454:	f1 e1       	ldi	r31, 0x11	; 17
   14456:	df 01       	movw	r26, r30
   14458:	9c 01       	movw	r18, r24
   1445a:	1d 92       	st	X+, r1
   1445c:	21 50       	subi	r18, 0x01	; 1
   1445e:	30 40       	sbci	r19, 0x00	; 0
   14460:	e1 f7       	brne	.-8      	; 0x1445a <_Z12Publish_Datav+0x11e>
   14462:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14466:	81 30       	cpi	r24, 0x01	; 1
   14468:	51 f4       	brne	.+20     	; 0x1447e <_Z12Publish_Datav+0x142>
   1446a:	6c ec       	ldi	r22, 0xCC	; 204
   1446c:	72 e3       	ldi	r23, 0x32	; 50
   1446e:	8f e6       	ldi	r24, 0x6F	; 111
   14470:	96 e1       	ldi	r25, 0x16	; 22
   14472:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14476:	8f e6       	ldi	r24, 0x6F	; 111
   14478:	96 e1       	ldi	r25, 0x16	; 22
   1447a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1447e:	8a e0       	ldi	r24, 0x0A	; 10
   14480:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   14484:	21 e0       	ldi	r18, 0x01	; 1
   14486:	89 2b       	or	r24, r25
   14488:	09 f0       	breq	.+2      	; 0x1448c <_Z12Publish_Datav+0x150>
   1448a:	20 e0       	ldi	r18, 0x00	; 0
   1448c:	c9 5e       	subi	r28, 0xE9	; 233
   1448e:	de 4f       	sbci	r29, 0xFE	; 254
   14490:	28 83       	st	Y, r18
   14492:	c7 51       	subi	r28, 0x17	; 23
   14494:	d1 40       	sbci	r29, 0x01	; 1
   14496:	ae 01       	movw	r20, r28
   14498:	49 5e       	subi	r20, 0xE9	; 233
   1449a:	5e 4f       	sbci	r21, 0xFE	; 254
   1449c:	64 ec       	ldi	r22, 0xC4	; 196
   1449e:	72 e3       	ldi	r23, 0x32	; 50
   144a0:	c8 01       	movw	r24, r16
   144a2:	0e 94 ea 88 	call	0x111d4	; 0x111d4 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   144a6:	c9 5e       	subi	r28, 0xE9	; 233
   144a8:	de 4f       	sbci	r29, 0xFE	; 254
   144aa:	19 82       	std	Y+1, r1	; 0x01
   144ac:	18 82       	st	Y, r1
   144ae:	c7 51       	subi	r28, 0x17	; 23
   144b0:	d1 40       	sbci	r29, 0x01	; 1
   144b2:	ae 01       	movw	r20, r28
   144b4:	49 5e       	subi	r20, 0xE9	; 233
   144b6:	5e 4f       	sbci	r21, 0xFE	; 254
   144b8:	6d eb       	ldi	r22, 0xBD	; 189
   144ba:	72 e3       	ldi	r23, 0x32	; 50
   144bc:	c8 01       	movw	r24, r16
   144be:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   144c2:	80 91 7b 15 	lds	r24, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   144c6:	90 91 7c 15 	lds	r25, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
   144ca:	00 97       	sbiw	r24, 0x00	; 0
   144cc:	91 f0       	breq	.+36     	; 0x144f2 <_Z12Publish_Datav+0x1b6>
   144ce:	6c e3       	ldi	r22, 0x3C	; 60
   144d0:	70 e0       	ldi	r23, 0x00	; 0
   144d2:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   144d6:	6f 5f       	subi	r22, 0xFF	; 255
   144d8:	7f 4f       	sbci	r23, 0xFF	; 255
   144da:	c9 5e       	subi	r28, 0xE9	; 233
   144dc:	de 4f       	sbci	r29, 0xFE	; 254
   144de:	79 83       	std	Y+1, r23	; 0x01
   144e0:	68 83       	st	Y, r22
   144e2:	c7 51       	subi	r28, 0x17	; 23
   144e4:	d1 40       	sbci	r29, 0x01	; 1
   144e6:	ae 01       	movw	r20, r28
   144e8:	49 5e       	subi	r20, 0xE9	; 233
   144ea:	5e 4f       	sbci	r21, 0xFE	; 254
   144ec:	68 eb       	ldi	r22, 0xB8	; 184
   144ee:	72 e3       	ldi	r23, 0x32	; 50
   144f0:	04 c0       	rjmp	.+8      	; 0x144fa <_Z12Publish_Datav+0x1be>
   144f2:	4b e7       	ldi	r20, 0x7B	; 123
   144f4:	55 e1       	ldi	r21, 0x15	; 21
   144f6:	63 eb       	ldi	r22, 0xB3	; 179
   144f8:	72 e3       	ldi	r23, 0x32	; 50
   144fa:	c8 01       	movw	r24, r16
   144fc:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14500:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   14504:	83 30       	cpi	r24, 0x03	; 3
   14506:	41 f4       	brne	.+16     	; 0x14518 <_Z12Publish_Datav+0x1dc>
   14508:	4e e0       	ldi	r20, 0x0E	; 14
   1450a:	56 e1       	ldi	r21, 0x16	; 22
   1450c:	6e ea       	ldi	r22, 0xAE	; 174
   1450e:	72 e3       	ldi	r23, 0x32	; 50
   14510:	c8 01       	movw	r24, r16
   14512:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14516:	09 c0       	rjmp	.+18     	; 0x1452a <_Z12Publish_Datav+0x1ee>
   14518:	40 e2       	ldi	r20, 0x20	; 32
   1451a:	56 e1       	ldi	r21, 0x16	; 22
   1451c:	69 ea       	ldi	r22, 0xA9	; 169
   1451e:	72 e3       	ldi	r23, 0x32	; 50
   14520:	c8 01       	movw	r24, r16
   14522:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14526:	10 92 20 16 	sts	0x1620, r1	; 0x801620 <_sRuble_Parameters+0xbb>
   1452a:	44 ed       	ldi	r20, 0xD4	; 212
   1452c:	53 e0       	ldi	r21, 0x03	; 3
   1452e:	67 e8       	ldi	r22, 0x87	; 135
   14530:	71 e1       	ldi	r23, 0x11	; 17
   14532:	c8 01       	movw	r24, r16
   14534:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14538:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1453c:	88 23       	and	r24, r24
   1453e:	71 f0       	breq	.+28     	; 0x1455c <_Z12Publish_Datav+0x220>
   14540:	67 e8       	ldi	r22, 0x87	; 135
   14542:	71 e1       	ldi	r23, 0x11	; 17
   14544:	81 ec       	ldi	r24, 0xC1	; 193
   14546:	9d e0       	ldi	r25, 0x0D	; 13
   14548:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   1454c:	81 11       	cpse	r24, r1
   1454e:	06 c0       	rjmp	.+12     	; 0x1455c <_Z12Publish_Datav+0x220>
   14550:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14554:	81 50       	subi	r24, 0x01	; 1
   14556:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1455a:	ee cf       	rjmp	.-36     	; 0x14538 <_Z12Publish_Datav+0x1fc>
   1455c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   14560:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14564:	87 7f       	andi	r24, 0xF7	; 247
   14566:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1456a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1456e:	0c 94 06 ab 	jmp	0x1560c	; 0x1560c <_Z12Publish_Datav+0x12d0>
   14572:	97 ff       	sbrs	r25, 7
   14574:	3b c0       	rjmp	.+118    	; 0x145ec <_Z12Publish_Datav+0x2b0>
   14576:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1457a:	84 ed       	ldi	r24, 0xD4	; 212
   1457c:	93 e0       	ldi	r25, 0x03	; 3
   1457e:	e7 e8       	ldi	r30, 0x87	; 135
   14580:	f1 e1       	ldi	r31, 0x11	; 17
   14582:	df 01       	movw	r26, r30
   14584:	9c 01       	movw	r18, r24
   14586:	1d 92       	st	X+, r1
   14588:	21 50       	subi	r18, 0x01	; 1
   1458a:	30 40       	sbci	r19, 0x00	; 0
   1458c:	e1 f7       	brne	.-8      	; 0x14586 <_Z12Publish_Datav+0x24a>
   1458e:	86 e0       	ldi	r24, 0x06	; 6
   14590:	90 e0       	ldi	r25, 0x00	; 0
   14592:	c9 5e       	subi	r28, 0xE9	; 233
   14594:	de 4f       	sbci	r29, 0xFE	; 254
   14596:	99 83       	std	Y+1, r25	; 0x01
   14598:	88 83       	st	Y, r24
   1459a:	c7 51       	subi	r28, 0x17	; 23
   1459c:	d1 40       	sbci	r29, 0x01	; 1
   1459e:	ae 01       	movw	r20, r28
   145a0:	49 5e       	subi	r20, 0xE9	; 233
   145a2:	5e 4f       	sbci	r21, 0xFE	; 254
   145a4:	63 ea       	ldi	r22, 0xA3	; 163
   145a6:	72 e3       	ldi	r23, 0x32	; 50
   145a8:	c8 01       	movw	r24, r16
   145aa:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   145ae:	44 ed       	ldi	r20, 0xD4	; 212
   145b0:	53 e0       	ldi	r21, 0x03	; 3
   145b2:	67 e8       	ldi	r22, 0x87	; 135
   145b4:	71 e1       	ldi	r23, 0x11	; 17
   145b6:	c8 01       	movw	r24, r16
   145b8:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   145bc:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   145c0:	88 23       	and	r24, r24
   145c2:	71 f0       	breq	.+28     	; 0x145e0 <_Z12Publish_Datav+0x2a4>
   145c4:	67 e8       	ldi	r22, 0x87	; 135
   145c6:	71 e1       	ldi	r23, 0x11	; 17
   145c8:	81 e9       	ldi	r24, 0x91	; 145
   145ca:	9d e0       	ldi	r25, 0x0D	; 13
   145cc:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   145d0:	81 11       	cpse	r24, r1
   145d2:	06 c0       	rjmp	.+12     	; 0x145e0 <_Z12Publish_Datav+0x2a4>
   145d4:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   145d8:	81 50       	subi	r24, 0x01	; 1
   145da:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   145de:	ee cf       	rjmp	.-36     	; 0x145bc <_Z12Publish_Datav+0x280>
   145e0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   145e4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   145e8:	9f 77       	andi	r25, 0x7F	; 127
   145ea:	bd cf       	rjmp	.-134    	; 0x14566 <_Z12Publish_Datav+0x22a>
   145ec:	86 ff       	sbrs	r24, 6
   145ee:	bb c0       	rjmp	.+374    	; 0x14766 <_Z12Publish_Datav+0x42a>
   145f0:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   145f4:	84 ed       	ldi	r24, 0xD4	; 212
   145f6:	93 e0       	ldi	r25, 0x03	; 3
   145f8:	e7 e8       	ldi	r30, 0x87	; 135
   145fa:	f1 e1       	ldi	r31, 0x11	; 17
   145fc:	df 01       	movw	r26, r30
   145fe:	9c 01       	movw	r18, r24
   14600:	1d 92       	st	X+, r1
   14602:	21 50       	subi	r18, 0x01	; 1
   14604:	30 40       	sbci	r19, 0x00	; 0
   14606:	e1 f7       	brne	.-8      	; 0x14600 <_Z12Publish_Datav+0x2c4>
   14608:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1460c:	81 30       	cpi	r24, 0x01	; 1
   1460e:	51 f4       	brne	.+20     	; 0x14624 <_Z12Publish_Datav+0x2e8>
   14610:	6e e8       	ldi	r22, 0x8E	; 142
   14612:	72 e3       	ldi	r23, 0x32	; 50
   14614:	8f e6       	ldi	r24, 0x6F	; 111
   14616:	96 e1       	ldi	r25, 0x16	; 22
   14618:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1461c:	8f e6       	ldi	r24, 0x6F	; 111
   1461e:	96 e1       	ldi	r25, 0x16	; 22
   14620:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14624:	7e 01       	movw	r14, r28
   14626:	39 ee       	ldi	r19, 0xE9	; 233
   14628:	e3 1a       	sub	r14, r19
   1462a:	3e ef       	ldi	r19, 0xFE	; 254
   1462c:	f3 0a       	sbc	r15, r19
   1462e:	d7 01       	movw	r26, r14
   14630:	1d 92       	st	X+, r1
   14632:	1c 92       	st	X, r1
   14634:	a7 01       	movw	r20, r14
   14636:	64 e8       	ldi	r22, 0x84	; 132
   14638:	72 e3       	ldi	r23, 0x32	; 50
   1463a:	c8 01       	movw	r24, r16
   1463c:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14640:	f7 01       	movw	r30, r14
   14642:	11 82       	std	Z+1, r1	; 0x01
   14644:	10 82       	st	Z, r1
   14646:	a7 01       	movw	r20, r14
   14648:	60 e8       	ldi	r22, 0x80	; 128
   1464a:	72 e3       	ldi	r23, 0x32	; 50
   1464c:	c8 01       	movw	r24, r16
   1464e:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14652:	d7 01       	movw	r26, r14
   14654:	1d 92       	st	X+, r1
   14656:	1c 92       	st	X, r1
   14658:	a7 01       	movw	r20, r14
   1465a:	6c e7       	ldi	r22, 0x7C	; 124
   1465c:	72 e3       	ldi	r23, 0x32	; 50
   1465e:	c8 01       	movw	r24, r16
   14660:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14664:	f7 01       	movw	r30, r14
   14666:	11 82       	std	Z+1, r1	; 0x01
   14668:	10 82       	st	Z, r1
   1466a:	a7 01       	movw	r20, r14
   1466c:	68 e7       	ldi	r22, 0x78	; 120
   1466e:	72 e3       	ldi	r23, 0x32	; 50
   14670:	c8 01       	movw	r24, r16
   14672:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14676:	d7 01       	movw	r26, r14
   14678:	1d 92       	st	X+, r1
   1467a:	1c 92       	st	X, r1
   1467c:	a7 01       	movw	r20, r14
   1467e:	64 e7       	ldi	r22, 0x74	; 116
   14680:	72 e3       	ldi	r23, 0x32	; 50
   14682:	c8 01       	movw	r24, r16
   14684:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14688:	f7 01       	movw	r30, r14
   1468a:	11 82       	std	Z+1, r1	; 0x01
   1468c:	10 82       	st	Z, r1
   1468e:	a7 01       	movw	r20, r14
   14690:	6a e6       	ldi	r22, 0x6A	; 106
   14692:	72 e3       	ldi	r23, 0x32	; 50
   14694:	c8 01       	movw	r24, r16
   14696:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1469a:	d7 01       	movw	r26, r14
   1469c:	1d 92       	st	X+, r1
   1469e:	1c 92       	st	X, r1
   146a0:	a7 01       	movw	r20, r14
   146a2:	6e e5       	ldi	r22, 0x5E	; 94
   146a4:	72 e3       	ldi	r23, 0x32	; 50
   146a6:	c8 01       	movw	r24, r16
   146a8:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   146ac:	f7 01       	movw	r30, r14
   146ae:	11 82       	std	Z+1, r1	; 0x01
   146b0:	10 82       	st	Z, r1
   146b2:	a7 01       	movw	r20, r14
   146b4:	65 e5       	ldi	r22, 0x55	; 85
   146b6:	72 e3       	ldi	r23, 0x32	; 50
   146b8:	c8 01       	movw	r24, r16
   146ba:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   146be:	d7 01       	movw	r26, r14
   146c0:	1d 92       	st	X+, r1
   146c2:	1c 92       	st	X, r1
   146c4:	a7 01       	movw	r20, r14
   146c6:	6f e4       	ldi	r22, 0x4F	; 79
   146c8:	72 e3       	ldi	r23, 0x32	; 50
   146ca:	c8 01       	movw	r24, r16
   146cc:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   146d0:	f7 01       	movw	r30, r14
   146d2:	11 82       	std	Z+1, r1	; 0x01
   146d4:	10 82       	st	Z, r1
   146d6:	a7 01       	movw	r20, r14
   146d8:	6a e4       	ldi	r22, 0x4A	; 74
   146da:	72 e3       	ldi	r23, 0x32	; 50
   146dc:	c8 01       	movw	r24, r16
   146de:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   146e2:	44 ed       	ldi	r20, 0xD4	; 212
   146e4:	53 e0       	ldi	r21, 0x03	; 3
   146e6:	67 e8       	ldi	r22, 0x87	; 135
   146e8:	71 e1       	ldi	r23, 0x11	; 17
   146ea:	c8 01       	movw	r24, r16
   146ec:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   146f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   146f4:	81 30       	cpi	r24, 0x01	; 1
   146f6:	31 f4       	brne	.+12     	; 0x14704 <_Z12Publish_Datav+0x3c8>
   146f8:	67 e8       	ldi	r22, 0x87	; 135
   146fa:	71 e1       	ldi	r23, 0x11	; 17
   146fc:	8f e6       	ldi	r24, 0x6F	; 111
   146fe:	96 e1       	ldi	r25, 0x16	; 22
   14700:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   14704:	88 e2       	ldi	r24, 0x28	; 40
   14706:	d7 01       	movw	r26, r14
   14708:	1d 92       	st	X+, r1
   1470a:	8a 95       	dec	r24
   1470c:	e9 f7       	brne	.-6      	; 0x14708 <_Z12Publish_Datav+0x3cc>
   1470e:	8c e8       	ldi	r24, 0x8C	; 140
   14710:	97 e0       	ldi	r25, 0x07	; 7
   14712:	9f 93       	push	r25
   14714:	8f 93       	push	r24
   14716:	8d ef       	ldi	r24, 0xFD	; 253
   14718:	9d e0       	ldi	r25, 0x0D	; 13
   1471a:	9f 93       	push	r25
   1471c:	8f 93       	push	r24
   1471e:	83 e9       	ldi	r24, 0x93	; 147
   14720:	97 e0       	ldi	r25, 0x07	; 7
   14722:	9f 93       	push	r25
   14724:	8f 93       	push	r24
   14726:	ff 92       	push	r15
   14728:	ef 92       	push	r14
   1472a:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
   1472e:	0f b6       	in	r0, 0x3f	; 63
   14730:	f8 94       	cli
   14732:	de bf       	out	0x3e, r29	; 62
   14734:	0f be       	out	0x3f, r0	; 63
   14736:	cd bf       	out	0x3d, r28	; 61
   14738:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1473c:	88 23       	and	r24, r24
   1473e:	69 f0       	breq	.+26     	; 0x1475a <_Z12Publish_Datav+0x41e>
   14740:	67 e8       	ldi	r22, 0x87	; 135
   14742:	71 e1       	ldi	r23, 0x11	; 17
   14744:	c7 01       	movw	r24, r14
   14746:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   1474a:	81 11       	cpse	r24, r1
   1474c:	06 c0       	rjmp	.+12     	; 0x1475a <_Z12Publish_Datav+0x41e>
   1474e:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14752:	81 50       	subi	r24, 0x01	; 1
   14754:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14758:	ef cf       	rjmp	.-34     	; 0x14738 <_Z12Publish_Datav+0x3fc>
   1475a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1475e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14762:	8f 7b       	andi	r24, 0xBF	; 191
   14764:	00 cf       	rjmp	.-512    	; 0x14566 <_Z12Publish_Datav+0x22a>
   14766:	87 ff       	sbrs	r24, 7
   14768:	85 c0       	rjmp	.+266    	; 0x14874 <_Z12Publish_Datav+0x538>
   1476a:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1476e:	84 ed       	ldi	r24, 0xD4	; 212
   14770:	93 e0       	ldi	r25, 0x03	; 3
   14772:	e7 e8       	ldi	r30, 0x87	; 135
   14774:	f1 e1       	ldi	r31, 0x11	; 17
   14776:	df 01       	movw	r26, r30
   14778:	9c 01       	movw	r18, r24
   1477a:	1d 92       	st	X+, r1
   1477c:	21 50       	subi	r18, 0x01	; 1
   1477e:	30 40       	sbci	r19, 0x00	; 0
   14780:	e1 f7       	brne	.-8      	; 0x1477a <_Z12Publish_Datav+0x43e>
   14782:	80 91 17 16 	lds	r24, 0x1617	; 0x801617 <_sRuble_Parameters+0xb2>
   14786:	84 30       	cpi	r24, 0x04	; 4
   14788:	08 f0       	brcs	.+2      	; 0x1478c <_Z12Publish_Datav+0x450>
   1478a:	6e c0       	rjmp	.+220    	; 0x14868 <_Z12Publish_Datav+0x52c>
   1478c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14790:	81 30       	cpi	r24, 0x01	; 1
   14792:	51 f4       	brne	.+20     	; 0x147a8 <_Z12Publish_Datav+0x46c>
   14794:	64 e3       	ldi	r22, 0x34	; 52
   14796:	72 e3       	ldi	r23, 0x32	; 50
   14798:	8f e6       	ldi	r24, 0x6F	; 111
   1479a:	96 e1       	ldi	r25, 0x16	; 22
   1479c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   147a0:	8f e6       	ldi	r24, 0x6F	; 111
   147a2:	96 e1       	ldi	r25, 0x16	; 22
   147a4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   147a8:	40 91 17 16 	lds	r20, 0x1617	; 0x801617 <_sRuble_Parameters+0xb2>
   147ac:	5d e0       	ldi	r21, 0x0D	; 13
   147ae:	f5 2e       	mov	r15, r21
   147b0:	f4 9e       	mul	r15, r20
   147b2:	a0 01       	movw	r20, r0
   147b4:	11 24       	eor	r1, r1
   147b6:	4e 50       	subi	r20, 0x0E	; 14
   147b8:	54 4f       	sbci	r21, 0xF4	; 244
   147ba:	68 e2       	ldi	r22, 0x28	; 40
   147bc:	72 e3       	ldi	r23, 0x32	; 50
   147be:	c8 01       	movw	r24, r16
   147c0:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   147c4:	40 91 17 16 	lds	r20, 0x1617	; 0x801617 <_sRuble_Parameters+0xb2>
   147c8:	f4 9e       	mul	r15, r20
   147ca:	a0 01       	movw	r20, r0
   147cc:	11 24       	eor	r1, r1
   147ce:	41 51       	subi	r20, 0x11	; 17
   147d0:	54 4f       	sbci	r21, 0xF4	; 244
   147d2:	63 e2       	ldi	r22, 0x23	; 35
   147d4:	72 e3       	ldi	r23, 0x32	; 50
   147d6:	c8 01       	movw	r24, r16
   147d8:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   147dc:	40 91 17 16 	lds	r20, 0x1617	; 0x801617 <_sRuble_Parameters+0xb2>
   147e0:	f4 9e       	mul	r15, r20
   147e2:	a0 01       	movw	r20, r0
   147e4:	11 24       	eor	r1, r1
   147e6:	4f 50       	subi	r20, 0x0F	; 15
   147e8:	54 4f       	sbci	r21, 0xF4	; 244
   147ea:	69 e1       	ldi	r22, 0x19	; 25
   147ec:	72 e3       	ldi	r23, 0x32	; 50
   147ee:	c8 01       	movw	r24, r16
   147f0:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   147f4:	44 ed       	ldi	r20, 0xD4	; 212
   147f6:	53 e0       	ldi	r21, 0x03	; 3
   147f8:	67 e8       	ldi	r22, 0x87	; 135
   147fa:	71 e1       	ldi	r23, 0x11	; 17
   147fc:	c8 01       	movw	r24, r16
   147fe:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14802:	8e 01       	movw	r16, r28
   14804:	09 5e       	subi	r16, 0xE9	; 233
   14806:	1e 4f       	sbci	r17, 0xFE	; 254
   14808:	88 e2       	ldi	r24, 0x28	; 40
   1480a:	d8 01       	movw	r26, r16
   1480c:	1d 92       	st	X+, r1
   1480e:	8a 95       	dec	r24
   14810:	e9 f7       	brne	.-6      	; 0x1480c <_Z12Publish_Datav+0x4d0>
   14812:	80 91 17 16 	lds	r24, 0x1617	; 0x801617 <_sRuble_Parameters+0xb2>
   14816:	f8 9e       	mul	r15, r24
   14818:	c0 01       	movw	r24, r0
   1481a:	11 24       	eor	r1, r1
   1481c:	88 51       	subi	r24, 0x18	; 24
   1481e:	94 4f       	sbci	r25, 0xF4	; 244
   14820:	9f 93       	push	r25
   14822:	8f 93       	push	r24
   14824:	8f e0       	ldi	r24, 0x0F	; 15
   14826:	9e e0       	ldi	r25, 0x0E	; 14
   14828:	9f 93       	push	r25
   1482a:	8f 93       	push	r24
   1482c:	83 e9       	ldi	r24, 0x93	; 147
   1482e:	97 e0       	ldi	r25, 0x07	; 7
   14830:	9f 93       	push	r25
   14832:	8f 93       	push	r24
   14834:	1f 93       	push	r17
   14836:	0f 93       	push	r16
   14838:	0e 94 bf e9 	call	0x1d37e	; 0x1d37e <sprintf>
   1483c:	0f b6       	in	r0, 0x3f	; 63
   1483e:	f8 94       	cli
   14840:	de bf       	out	0x3e, r29	; 62
   14842:	0f be       	out	0x3f, r0	; 63
   14844:	cd bf       	out	0x3d, r28	; 61
   14846:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   1484a:	88 23       	and	r24, r24
   1484c:	69 f0       	breq	.+26     	; 0x14868 <_Z12Publish_Datav+0x52c>
   1484e:	67 e8       	ldi	r22, 0x87	; 135
   14850:	71 e1       	ldi	r23, 0x11	; 17
   14852:	c8 01       	movw	r24, r16
   14854:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   14858:	81 11       	cpse	r24, r1
   1485a:	06 c0       	rjmp	.+12     	; 0x14868 <_Z12Publish_Datav+0x52c>
   1485c:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14860:	81 50       	subi	r24, 0x01	; 1
   14862:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14866:	ef cf       	rjmp	.-34     	; 0x14846 <_Z12Publish_Datav+0x50a>
   14868:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1486c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14870:	8f 77       	andi	r24, 0x7F	; 127
   14872:	79 ce       	rjmp	.-782    	; 0x14566 <_Z12Publish_Datav+0x22a>
   14874:	90 ff       	sbrs	r25, 0
   14876:	40 c0       	rjmp	.+128    	; 0x148f8 <_Z12Publish_Datav+0x5bc>
   14878:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   1487c:	84 ed       	ldi	r24, 0xD4	; 212
   1487e:	93 e0       	ldi	r25, 0x03	; 3
   14880:	e7 e8       	ldi	r30, 0x87	; 135
   14882:	f1 e1       	ldi	r31, 0x11	; 17
   14884:	df 01       	movw	r26, r30
   14886:	9c 01       	movw	r18, r24
   14888:	1d 92       	st	X+, r1
   1488a:	21 50       	subi	r18, 0x01	; 1
   1488c:	30 40       	sbci	r19, 0x00	; 0
   1488e:	e1 f7       	brne	.-8      	; 0x14888 <_Z12Publish_Datav+0x54c>
   14890:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14894:	81 30       	cpi	r24, 0x01	; 1
   14896:	51 f4       	brne	.+20     	; 0x148ac <_Z12Publish_Datav+0x570>
   14898:	63 e0       	ldi	r22, 0x03	; 3
   1489a:	72 e3       	ldi	r23, 0x32	; 50
   1489c:	8f e6       	ldi	r24, 0x6F	; 111
   1489e:	96 e1       	ldi	r25, 0x16	; 22
   148a0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   148a4:	8f e6       	ldi	r24, 0x6F	; 111
   148a6:	96 e1       	ldi	r25, 0x16	; 22
   148a8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   148ac:	44 ed       	ldi	r20, 0xD4	; 212
   148ae:	55 e1       	ldi	r21, 0x15	; 21
   148b0:	6d ef       	ldi	r22, 0xFD	; 253
   148b2:	71 e3       	ldi	r23, 0x31	; 49
   148b4:	c8 01       	movw	r24, r16
   148b6:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   148ba:	44 ed       	ldi	r20, 0xD4	; 212
   148bc:	53 e0       	ldi	r21, 0x03	; 3
   148be:	67 e8       	ldi	r22, 0x87	; 135
   148c0:	71 e1       	ldi	r23, 0x11	; 17
   148c2:	c8 01       	movw	r24, r16
   148c4:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   148c8:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   148cc:	88 23       	and	r24, r24
   148ce:	71 f0       	breq	.+28     	; 0x148ec <_Z12Publish_Datav+0x5b0>
   148d0:	67 e8       	ldi	r22, 0x87	; 135
   148d2:	71 e1       	ldi	r23, 0x11	; 17
   148d4:	80 e2       	ldi	r24, 0x20	; 32
   148d6:	9e e0       	ldi	r25, 0x0E	; 14
   148d8:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   148dc:	81 11       	cpse	r24, r1
   148de:	06 c0       	rjmp	.+12     	; 0x148ec <_Z12Publish_Datav+0x5b0>
   148e0:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   148e4:	81 50       	subi	r24, 0x01	; 1
   148e6:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   148ea:	ee cf       	rjmp	.-36     	; 0x148c8 <_Z12Publish_Datav+0x58c>
   148ec:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   148f0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   148f4:	9e 7f       	andi	r25, 0xFE	; 254
   148f6:	37 ce       	rjmp	.-914    	; 0x14566 <_Z12Publish_Datav+0x22a>
   148f8:	94 ff       	sbrs	r25, 4
   148fa:	2b c1       	rjmp	.+598    	; 0x14b52 <_Z12Publish_Datav+0x816>
   148fc:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   14900:	84 ed       	ldi	r24, 0xD4	; 212
   14902:	93 e0       	ldi	r25, 0x03	; 3
   14904:	e7 e8       	ldi	r30, 0x87	; 135
   14906:	f1 e1       	ldi	r31, 0x11	; 17
   14908:	df 01       	movw	r26, r30
   1490a:	9c 01       	movw	r18, r24
   1490c:	1d 92       	st	X+, r1
   1490e:	21 50       	subi	r18, 0x01	; 1
   14910:	30 40       	sbci	r19, 0x00	; 0
   14912:	e1 f7       	brne	.-8      	; 0x1490c <_Z12Publish_Datav+0x5d0>
   14914:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14918:	81 30       	cpi	r24, 0x01	; 1
   1491a:	51 f4       	brne	.+20     	; 0x14930 <_Z12Publish_Datav+0x5f4>
   1491c:	69 ee       	ldi	r22, 0xE9	; 233
   1491e:	71 e3       	ldi	r23, 0x31	; 49
   14920:	8f e6       	ldi	r24, 0x6F	; 111
   14922:	96 e1       	ldi	r25, 0x16	; 22
   14924:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14928:	8f e6       	ldi	r24, 0x6F	; 111
   1492a:	96 e1       	ldi	r25, 0x16	; 22
   1492c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14930:	8a e0       	ldi	r24, 0x0A	; 10
   14932:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   14936:	21 e0       	ldi	r18, 0x01	; 1
   14938:	89 2b       	or	r24, r25
   1493a:	09 f0       	breq	.+2      	; 0x1493e <_Z12Publish_Datav+0x602>
   1493c:	20 e0       	ldi	r18, 0x00	; 0
   1493e:	c9 5e       	subi	r28, 0xE9	; 233
   14940:	de 4f       	sbci	r29, 0xFE	; 254
   14942:	28 83       	st	Y, r18
   14944:	c7 51       	subi	r28, 0x17	; 23
   14946:	d1 40       	sbci	r29, 0x01	; 1
   14948:	ae 01       	movw	r20, r28
   1494a:	49 5e       	subi	r20, 0xE9	; 233
   1494c:	5e 4f       	sbci	r21, 0xFE	; 254
   1494e:	61 ee       	ldi	r22, 0xE1	; 225
   14950:	71 e3       	ldi	r23, 0x31	; 49
   14952:	c8 01       	movw	r24, r16
   14954:	0e 94 ea 88 	call	0x111d4	; 0x111d4 <_ZN11ArduinoJson10JsonObject3setIbK19__FlashStringHelperEEbPT0_RKT_>
   14958:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   1495c:	81 11       	cpse	r24, r1
   1495e:	4e c0       	rjmp	.+156    	; 0x149fc <_Z12Publish_Datav+0x6c0>
   14960:	80 91 22 16 	lds	r24, 0x1622	; 0x801622 <_sRuble_Parameters+0xbd>
   14964:	88 23       	and	r24, r24
   14966:	09 f4       	brne	.+2      	; 0x1496a <_Z12Publish_Datav+0x62e>
   14968:	43 c0       	rjmp	.+134    	; 0x149f0 <_Z12Publish_Datav+0x6b4>
   1496a:	b0 90 6d 15 	lds	r11, 0x156D	; 0x80156d <_sRuble_Parameters+0x8>
   1496e:	c0 90 6e 15 	lds	r12, 0x156E	; 0x80156e <_sRuble_Parameters+0x9>
   14972:	d0 90 6f 15 	lds	r13, 0x156F	; 0x80156f <_sRuble_Parameters+0xa>
   14976:	e0 90 70 15 	lds	r14, 0x1570	; 0x801570 <_sRuble_Parameters+0xb>
   1497a:	f0 90 71 15 	lds	r15, 0x1571	; 0x801571 <_sRuble_Parameters+0xc>
   1497e:	b0 91 72 15 	lds	r27, 0x1572	; 0x801572 <_sRuble_Parameters+0xd>
   14982:	f0 91 73 15 	lds	r31, 0x1573	; 0x801573 <_sRuble_Parameters+0xe>
   14986:	e0 91 74 15 	lds	r30, 0x1574	; 0x801574 <_sRuble_Parameters+0xf>
   1498a:	2b 2d       	mov	r18, r11
   1498c:	3c 2d       	mov	r19, r12
   1498e:	4d 2d       	mov	r20, r13
   14990:	5e 2d       	mov	r21, r14
   14992:	6f 2d       	mov	r22, r15
   14994:	7b 2f       	mov	r23, r27
   14996:	8f 2f       	mov	r24, r31
   14998:	9e 2f       	mov	r25, r30
   1499a:	a2 e0       	ldi	r26, 0x02	; 2
   1499c:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   149a0:	81 f0       	breq	.+32     	; 0x149c2 <_Z12Publish_Datav+0x686>
   149a2:	a4 e0       	ldi	r26, 0x04	; 4
   149a4:	c9 5e       	subi	r28, 0xE9	; 233
   149a6:	de 4f       	sbci	r29, 0xFE	; 254
   149a8:	19 82       	std	Y+1, r1	; 0x01
   149aa:	18 82       	st	Y, r1
   149ac:	c7 51       	subi	r28, 0x17	; 23
   149ae:	d1 40       	sbci	r29, 0x01	; 1
   149b0:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   149b4:	a1 f4       	brne	.+40     	; 0x149de <_Z12Publish_Datav+0x6a2>
   149b6:	ae 01       	movw	r20, r28
   149b8:	49 5e       	subi	r20, 0xE9	; 233
   149ba:	5e 4f       	sbci	r21, 0xFE	; 254
   149bc:	69 ed       	ldi	r22, 0xD9	; 217
   149be:	71 e3       	ldi	r23, 0x31	; 49
   149c0:	13 c0       	rjmp	.+38     	; 0x149e8 <_Z12Publish_Datav+0x6ac>
   149c2:	81 e0       	ldi	r24, 0x01	; 1
   149c4:	90 e0       	ldi	r25, 0x00	; 0
   149c6:	c9 5e       	subi	r28, 0xE9	; 233
   149c8:	de 4f       	sbci	r29, 0xFE	; 254
   149ca:	99 83       	std	Y+1, r25	; 0x01
   149cc:	88 83       	st	Y, r24
   149ce:	c7 51       	subi	r28, 0x17	; 23
   149d0:	d1 40       	sbci	r29, 0x01	; 1
   149d2:	ae 01       	movw	r20, r28
   149d4:	49 5e       	subi	r20, 0xE9	; 233
   149d6:	5e 4f       	sbci	r21, 0xFE	; 254
   149d8:	61 ed       	ldi	r22, 0xD1	; 209
   149da:	71 e3       	ldi	r23, 0x31	; 49
   149dc:	05 c0       	rjmp	.+10     	; 0x149e8 <_Z12Publish_Datav+0x6ac>
   149de:	ae 01       	movw	r20, r28
   149e0:	49 5e       	subi	r20, 0xE9	; 233
   149e2:	5e 4f       	sbci	r21, 0xFE	; 254
   149e4:	69 ec       	ldi	r22, 0xC9	; 201
   149e6:	71 e3       	ldi	r23, 0x31	; 49
   149e8:	c8 01       	movw	r24, r16
   149ea:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   149ee:	21 c0       	rjmp	.+66     	; 0x14a32 <_Z12Publish_Datav+0x6f6>
   149f0:	8a e0       	ldi	r24, 0x0A	; 10
   149f2:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   149f6:	89 2b       	or	r24, r25
   149f8:	71 f4       	brne	.+28     	; 0x14a16 <_Z12Publish_Datav+0x6da>
   149fa:	04 c0       	rjmp	.+8      	; 0x14a04 <_Z12Publish_Datav+0x6c8>
   149fc:	80 91 25 16 	lds	r24, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
   14a00:	81 30       	cpi	r24, 0x01	; 1
   14a02:	49 f4       	brne	.+18     	; 0x14a16 <_Z12Publish_Datav+0x6da>
   14a04:	81 e0       	ldi	r24, 0x01	; 1
   14a06:	90 e0       	ldi	r25, 0x00	; 0
   14a08:	c9 5e       	subi	r28, 0xE9	; 233
   14a0a:	de 4f       	sbci	r29, 0xFE	; 254
   14a0c:	99 83       	std	Y+1, r25	; 0x01
   14a0e:	88 83       	st	Y, r24
   14a10:	c7 51       	subi	r28, 0x17	; 23
   14a12:	d1 40       	sbci	r29, 0x01	; 1
   14a14:	06 c0       	rjmp	.+12     	; 0x14a22 <_Z12Publish_Datav+0x6e6>
   14a16:	c9 5e       	subi	r28, 0xE9	; 233
   14a18:	de 4f       	sbci	r29, 0xFE	; 254
   14a1a:	19 82       	std	Y+1, r1	; 0x01
   14a1c:	18 82       	st	Y, r1
   14a1e:	c7 51       	subi	r28, 0x17	; 23
   14a20:	d1 40       	sbci	r29, 0x01	; 1
   14a22:	ae 01       	movw	r20, r28
   14a24:	49 5e       	subi	r20, 0xE9	; 233
   14a26:	5e 4f       	sbci	r21, 0xFE	; 254
   14a28:	69 e9       	ldi	r22, 0x99	; 153
   14a2a:	77 e0       	ldi	r23, 0x07	; 7
   14a2c:	c8 01       	movw	r24, r16
   14a2e:	0e 94 f0 89 	call	0x113e0	; 0x113e0 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   14a32:	c9 5e       	subi	r28, 0xE9	; 233
   14a34:	de 4f       	sbci	r29, 0xFE	; 254
   14a36:	19 82       	std	Y+1, r1	; 0x01
   14a38:	18 82       	st	Y, r1
   14a3a:	c7 51       	subi	r28, 0x17	; 23
   14a3c:	d1 40       	sbci	r29, 0x01	; 1
   14a3e:	ae 01       	movw	r20, r28
   14a40:	49 5e       	subi	r20, 0xE9	; 233
   14a42:	5e 4f       	sbci	r21, 0xFE	; 254
   14a44:	62 ec       	ldi	r22, 0xC2	; 194
   14a46:	71 e3       	ldi	r23, 0x31	; 49
   14a48:	c8 01       	movw	r24, r16
   14a4a:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14a4e:	40 91 1c 16 	lds	r20, 0x161C	; 0x80161c <_sRuble_Parameters+0xb7>
   14a52:	3b e1       	ldi	r19, 0x1B	; 27
   14a54:	43 9f       	mul	r20, r19
   14a56:	a0 01       	movw	r20, r0
   14a58:	11 24       	eor	r1, r1
   14a5a:	fa 01       	movw	r30, r20
   14a5c:	e1 56       	subi	r30, 0x61	; 97
   14a5e:	f0 4f       	sbci	r31, 0xF0	; 240
   14a60:	83 81       	ldd	r24, Z+3	; 0x03
   14a62:	94 81       	ldd	r25, Z+4	; 0x04
   14a64:	00 97       	sbiw	r24, 0x00	; 0
   14a66:	29 f1       	breq	.+74     	; 0x14ab2 <_Z12Publish_Datav+0x776>
   14a68:	6c e3       	ldi	r22, 0x3C	; 60
   14a6a:	70 e0       	ldi	r23, 0x00	; 0
   14a6c:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   14a70:	6f 5f       	subi	r22, 0xFF	; 255
   14a72:	7f 4f       	sbci	r23, 0xFF	; 255
   14a74:	c9 5e       	subi	r28, 0xE9	; 233
   14a76:	de 4f       	sbci	r29, 0xFE	; 254
   14a78:	79 83       	std	Y+1, r23	; 0x01
   14a7a:	68 83       	st	Y, r22
   14a7c:	c7 51       	subi	r28, 0x17	; 23
   14a7e:	d1 40       	sbci	r29, 0x01	; 1
   14a80:	ae 01       	movw	r20, r28
   14a82:	49 5e       	subi	r20, 0xE9	; 233
   14a84:	5e 4f       	sbci	r21, 0xFE	; 254
   14a86:	6d eb       	ldi	r22, 0xBD	; 189
   14a88:	71 e3       	ldi	r23, 0x31	; 49
   14a8a:	c8 01       	movw	r24, r16
   14a8c:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14a90:	80 91 1c 16 	lds	r24, 0x161C	; 0x80161c <_sRuble_Parameters+0xb7>
   14a94:	90 e0       	ldi	r25, 0x00	; 0
   14a96:	8b 59       	subi	r24, 0x9B	; 155
   14a98:	9f 4f       	sbci	r25, 0xFF	; 255
   14a9a:	c9 5e       	subi	r28, 0xE9	; 233
   14a9c:	de 4f       	sbci	r29, 0xFE	; 254
   14a9e:	99 83       	std	Y+1, r25	; 0x01
   14aa0:	88 83       	st	Y, r24
   14aa2:	c7 51       	subi	r28, 0x17	; 23
   14aa4:	d1 40       	sbci	r29, 0x01	; 1
   14aa6:	ae 01       	movw	r20, r28
   14aa8:	49 5e       	subi	r20, 0xE9	; 233
   14aaa:	5e 4f       	sbci	r21, 0xFE	; 254
   14aac:	68 eb       	ldi	r22, 0xB8	; 184
   14aae:	71 e3       	ldi	r23, 0x31	; 49
   14ab0:	17 c0       	rjmp	.+46     	; 0x14ae0 <_Z12Publish_Datav+0x7a4>
   14ab2:	4e 55       	subi	r20, 0x5E	; 94
   14ab4:	50 4f       	sbci	r21, 0xF0	; 240
   14ab6:	63 eb       	ldi	r22, 0xB3	; 179
   14ab8:	71 e3       	ldi	r23, 0x31	; 49
   14aba:	c8 01       	movw	r24, r16
   14abc:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14ac0:	80 91 1c 16 	lds	r24, 0x161C	; 0x80161c <_sRuble_Parameters+0xb7>
   14ac4:	90 e0       	ldi	r25, 0x00	; 0
   14ac6:	8b 59       	subi	r24, 0x9B	; 155
   14ac8:	9f 4f       	sbci	r25, 0xFF	; 255
   14aca:	c9 5e       	subi	r28, 0xE9	; 233
   14acc:	de 4f       	sbci	r29, 0xFE	; 254
   14ace:	99 83       	std	Y+1, r25	; 0x01
   14ad0:	88 83       	st	Y, r24
   14ad2:	c7 51       	subi	r28, 0x17	; 23
   14ad4:	d1 40       	sbci	r29, 0x01	; 1
   14ad6:	ae 01       	movw	r20, r28
   14ad8:	49 5e       	subi	r20, 0xE9	; 233
   14ada:	5e 4f       	sbci	r21, 0xFE	; 254
   14adc:	6e ea       	ldi	r22, 0xAE	; 174
   14ade:	71 e3       	ldi	r23, 0x31	; 49
   14ae0:	c8 01       	movw	r24, r16
   14ae2:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ae6:	44 ed       	ldi	r20, 0xD4	; 212
   14ae8:	53 e0       	ldi	r21, 0x03	; 3
   14aea:	67 e8       	ldi	r22, 0x87	; 135
   14aec:	71 e1       	ldi	r23, 0x11	; 17
   14aee:	c8 01       	movw	r24, r16
   14af0:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14af4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14af8:	81 30       	cpi	r24, 0x01	; 1
   14afa:	31 f4       	brne	.+12     	; 0x14b08 <_Z12Publish_Datav+0x7cc>
   14afc:	67 e8       	ldi	r22, 0x87	; 135
   14afe:	71 e1       	ldi	r23, 0x11	; 17
   14b00:	8f e6       	ldi	r24, 0x6F	; 111
   14b02:	96 e1       	ldi	r25, 0x16	; 22
   14b04:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   14b08:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14b0c:	88 23       	and	r24, r24
   14b0e:	d9 f0       	breq	.+54     	; 0x14b46 <_Z12Publish_Datav+0x80a>
   14b10:	67 e8       	ldi	r22, 0x87	; 135
   14b12:	71 e1       	ldi	r23, 0x11	; 17
   14b14:	81 ec       	ldi	r24, 0xC1	; 193
   14b16:	9d e0       	ldi	r25, 0x0D	; 13
   14b18:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   14b1c:	88 23       	and	r24, r24
   14b1e:	69 f0       	breq	.+26     	; 0x14b3a <_Z12Publish_Datav+0x7fe>
   14b20:	80 91 1c 16 	lds	r24, 0x161C	; 0x80161c <_sRuble_Parameters+0xb7>
   14b24:	9b e1       	ldi	r25, 0x1B	; 27
   14b26:	89 9f       	mul	r24, r25
   14b28:	f0 01       	movw	r30, r0
   14b2a:	11 24       	eor	r1, r1
   14b2c:	e1 56       	subi	r30, 0x61	; 97
   14b2e:	f0 4f       	sbci	r31, 0xF0	; 240
   14b30:	12 8e       	std	Z+26, r1	; 0x1a
   14b32:	8f 5f       	subi	r24, 0xFF	; 255
   14b34:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   14b38:	06 c0       	rjmp	.+12     	; 0x14b46 <_Z12Publish_Datav+0x80a>
   14b3a:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14b3e:	81 50       	subi	r24, 0x01	; 1
   14b40:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14b44:	e1 cf       	rjmp	.-62     	; 0x14b08 <_Z12Publish_Datav+0x7cc>
   14b46:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   14b4a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14b4e:	9f 7e       	andi	r25, 0xEF	; 239
   14b50:	0a cd       	rjmp	.-1516   	; 0x14566 <_Z12Publish_Datav+0x22a>
   14b52:	95 ff       	sbrs	r25, 5
   14b54:	37 c1       	rjmp	.+622    	; 0x14dc4 <_Z12Publish_Datav+0xa88>
   14b56:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   14b5a:	84 ed       	ldi	r24, 0xD4	; 212
   14b5c:	93 e0       	ldi	r25, 0x03	; 3
   14b5e:	e7 e8       	ldi	r30, 0x87	; 135
   14b60:	f1 e1       	ldi	r31, 0x11	; 17
   14b62:	df 01       	movw	r26, r30
   14b64:	9c 01       	movw	r18, r24
   14b66:	1d 92       	st	X+, r1
   14b68:	21 50       	subi	r18, 0x01	; 1
   14b6a:	30 40       	sbci	r19, 0x00	; 0
   14b6c:	e1 f7       	brne	.-8      	; 0x14b66 <_Z12Publish_Datav+0x82a>
   14b6e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14b72:	81 30       	cpi	r24, 0x01	; 1
   14b74:	31 f4       	brne	.+12     	; 0x14b82 <_Z12Publish_Datav+0x846>
   14b76:	6b e9       	ldi	r22, 0x9B	; 155
   14b78:	71 e3       	ldi	r23, 0x31	; 49
   14b7a:	8f e6       	ldi	r24, 0x6F	; 111
   14b7c:	96 e1       	ldi	r25, 0x16	; 22
   14b7e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14b82:	80 91 1b 16 	lds	r24, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14b86:	90 e0       	ldi	r25, 0x00	; 0
   14b88:	8b 59       	subi	r24, 0x9B	; 155
   14b8a:	9f 4f       	sbci	r25, 0xFF	; 255
   14b8c:	c9 5e       	subi	r28, 0xE9	; 233
   14b8e:	de 4f       	sbci	r29, 0xFE	; 254
   14b90:	99 83       	std	Y+1, r25	; 0x01
   14b92:	88 83       	st	Y, r24
   14b94:	c7 51       	subi	r28, 0x17	; 23
   14b96:	d1 40       	sbci	r29, 0x01	; 1
   14b98:	ae 01       	movw	r20, r28
   14b9a:	49 5e       	subi	r20, 0xE9	; 233
   14b9c:	5e 4f       	sbci	r21, 0xFE	; 254
   14b9e:	67 e9       	ldi	r22, 0x97	; 151
   14ba0:	71 e3       	ldi	r23, 0x31	; 49
   14ba2:	c8 01       	movw	r24, r16
   14ba4:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ba8:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14bac:	3b e1       	ldi	r19, 0x1B	; 27
   14bae:	f3 2e       	mov	r15, r19
   14bb0:	fe 9e       	mul	r15, r30
   14bb2:	f0 01       	movw	r30, r0
   14bb4:	11 24       	eor	r1, r1
   14bb6:	e1 56       	subi	r30, 0x61	; 97
   14bb8:	f0 4f       	sbci	r31, 0xF0	; 240
   14bba:	92 81       	ldd	r25, Z+2	; 0x02
   14bbc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   14bc0:	91 30       	cpi	r25, 0x01	; 1
   14bc2:	b9 f5       	brne	.+110    	; 0x14c32 <_Z12Publish_Datav+0x8f6>
   14bc4:	91 8d       	ldd	r25, Z+25	; 0x19
   14bc6:	91 11       	cpse	r25, r1
   14bc8:	34 c0       	rjmp	.+104    	; 0x14c32 <_Z12Publish_Datav+0x8f6>
   14bca:	81 30       	cpi	r24, 0x01	; 1
   14bcc:	31 f5       	brne	.+76     	; 0x14c1a <_Z12Publish_Datav+0x8de>
   14bce:	66 e7       	ldi	r22, 0x76	; 118
   14bd0:	71 e3       	ldi	r23, 0x31	; 49
   14bd2:	8f e6       	ldi	r24, 0x6F	; 111
   14bd4:	96 e1       	ldi	r25, 0x16	; 22
   14bd6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14bda:	8f e6       	ldi	r24, 0x6F	; 111
   14bdc:	96 e1       	ldi	r25, 0x16	; 22
   14bde:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14be2:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14be6:	fe 9e       	mul	r15, r30
   14be8:	f0 01       	movw	r30, r0
   14bea:	11 24       	eor	r1, r1
   14bec:	e1 56       	subi	r30, 0x61	; 97
   14bee:	f0 4f       	sbci	r31, 0xF0	; 240
   14bf0:	4a e0       	ldi	r20, 0x0A	; 10
   14bf2:	50 e0       	ldi	r21, 0x00	; 0
   14bf4:	62 81       	ldd	r22, Z+2	; 0x02
   14bf6:	8f e6       	ldi	r24, 0x6F	; 111
   14bf8:	96 e1       	ldi	r25, 0x16	; 22
   14bfa:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   14bfe:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14c02:	fe 9e       	mul	r15, r30
   14c04:	f0 01       	movw	r30, r0
   14c06:	11 24       	eor	r1, r1
   14c08:	e1 56       	subi	r30, 0x61	; 97
   14c0a:	f0 4f       	sbci	r31, 0xF0	; 240
   14c0c:	4a e0       	ldi	r20, 0x0A	; 10
   14c0e:	50 e0       	ldi	r21, 0x00	; 0
   14c10:	61 8d       	ldd	r22, Z+25	; 0x19
   14c12:	8f e6       	ldi	r24, 0x6F	; 111
   14c14:	96 e1       	ldi	r25, 0x16	; 22
   14c16:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   14c1a:	c9 5e       	subi	r28, 0xE9	; 233
   14c1c:	de 4f       	sbci	r29, 0xFE	; 254
   14c1e:	19 82       	std	Y+1, r1	; 0x01
   14c20:	18 82       	st	Y, r1
   14c22:	c7 51       	subi	r28, 0x17	; 23
   14c24:	d1 40       	sbci	r29, 0x01	; 1
   14c26:	ae 01       	movw	r20, r28
   14c28:	49 5e       	subi	r20, 0xE9	; 233
   14c2a:	5e 4f       	sbci	r21, 0xFE	; 254
   14c2c:	6f e6       	ldi	r22, 0x6F	; 111
   14c2e:	71 e3       	ldi	r23, 0x31	; 49
   14c30:	37 c0       	rjmp	.+110    	; 0x14ca0 <_Z12Publish_Datav+0x964>
   14c32:	81 30       	cpi	r24, 0x01	; 1
   14c34:	41 f5       	brne	.+80     	; 0x14c86 <_Z12Publish_Datav+0x94a>
   14c36:	6d e4       	ldi	r22, 0x4D	; 77
   14c38:	71 e3       	ldi	r23, 0x31	; 49
   14c3a:	8f e6       	ldi	r24, 0x6F	; 111
   14c3c:	96 e1       	ldi	r25, 0x16	; 22
   14c3e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   14c42:	8f e6       	ldi	r24, 0x6F	; 111
   14c44:	96 e1       	ldi	r25, 0x16	; 22
   14c46:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   14c4a:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14c4e:	2b e1       	ldi	r18, 0x1B	; 27
   14c50:	f2 2e       	mov	r15, r18
   14c52:	fe 9e       	mul	r15, r30
   14c54:	f0 01       	movw	r30, r0
   14c56:	11 24       	eor	r1, r1
   14c58:	e1 56       	subi	r30, 0x61	; 97
   14c5a:	f0 4f       	sbci	r31, 0xF0	; 240
   14c5c:	4a e0       	ldi	r20, 0x0A	; 10
   14c5e:	50 e0       	ldi	r21, 0x00	; 0
   14c60:	62 81       	ldd	r22, Z+2	; 0x02
   14c62:	8f e6       	ldi	r24, 0x6F	; 111
   14c64:	96 e1       	ldi	r25, 0x16	; 22
   14c66:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   14c6a:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14c6e:	fe 9e       	mul	r15, r30
   14c70:	f0 01       	movw	r30, r0
   14c72:	11 24       	eor	r1, r1
   14c74:	e1 56       	subi	r30, 0x61	; 97
   14c76:	f0 4f       	sbci	r31, 0xF0	; 240
   14c78:	4a e0       	ldi	r20, 0x0A	; 10
   14c7a:	50 e0       	ldi	r21, 0x00	; 0
   14c7c:	61 8d       	ldd	r22, Z+25	; 0x19
   14c7e:	8f e6       	ldi	r24, 0x6F	; 111
   14c80:	96 e1       	ldi	r25, 0x16	; 22
   14c82:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   14c86:	81 e0       	ldi	r24, 0x01	; 1
   14c88:	90 e0       	ldi	r25, 0x00	; 0
   14c8a:	c9 5e       	subi	r28, 0xE9	; 233
   14c8c:	de 4f       	sbci	r29, 0xFE	; 254
   14c8e:	99 83       	std	Y+1, r25	; 0x01
   14c90:	88 83       	st	Y, r24
   14c92:	c7 51       	subi	r28, 0x17	; 23
   14c94:	d1 40       	sbci	r29, 0x01	; 1
   14c96:	ae 01       	movw	r20, r28
   14c98:	49 5e       	subi	r20, 0xE9	; 233
   14c9a:	5e 4f       	sbci	r21, 0xFE	; 254
   14c9c:	66 e4       	ldi	r22, 0x46	; 70
   14c9e:	71 e3       	ldi	r23, 0x31	; 49
   14ca0:	c8 01       	movw	r24, r16
   14ca2:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ca6:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14caa:	8e ef       	ldi	r24, 0xFE	; 254
   14cac:	8e 0f       	add	r24, r30
   14cae:	88 30       	cpi	r24, 0x08	; 8
   14cb0:	08 f4       	brcc	.+2      	; 0x14cb4 <_Z12Publish_Datav+0x978>
   14cb2:	5c c0       	rjmp	.+184    	; 0x14d6c <_Z12Publish_Datav+0xa30>
   14cb4:	3b e1       	ldi	r19, 0x1B	; 27
   14cb6:	e3 9f       	mul	r30, r19
   14cb8:	f0 01       	movw	r30, r0
   14cba:	11 24       	eor	r1, r1
   14cbc:	e1 56       	subi	r30, 0x61	; 97
   14cbe:	f0 4f       	sbci	r31, 0xF0	; 240
   14cc0:	82 81       	ldd	r24, Z+2	; 0x02
   14cc2:	85 30       	cpi	r24, 0x05	; 5
   14cc4:	71 f4       	brne	.+28     	; 0x14ce2 <_Z12Publish_Datav+0x9a6>
   14cc6:	c9 5e       	subi	r28, 0xE9	; 233
   14cc8:	de 4f       	sbci	r29, 0xFE	; 254
   14cca:	19 82       	std	Y+1, r1	; 0x01
   14ccc:	18 82       	st	Y, r1
   14cce:	c7 51       	subi	r28, 0x17	; 23
   14cd0:	d1 40       	sbci	r29, 0x01	; 1
   14cd2:	ae 01       	movw	r20, r28
   14cd4:	49 5e       	subi	r20, 0xE9	; 233
   14cd6:	5e 4f       	sbci	r21, 0xFE	; 254
   14cd8:	6f e3       	ldi	r22, 0x3F	; 63
   14cda:	71 e3       	ldi	r23, 0x31	; 49
   14cdc:	c8 01       	movw	r24, r16
   14cde:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14ce2:	e0 91 1b 16 	lds	r30, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14ce6:	8b e1       	ldi	r24, 0x1B	; 27
   14ce8:	e8 9f       	mul	r30, r24
   14cea:	f0 01       	movw	r30, r0
   14cec:	11 24       	eor	r1, r1
   14cee:	e1 56       	subi	r30, 0x61	; 97
   14cf0:	f0 4f       	sbci	r31, 0xF0	; 240
   14cf2:	82 81       	ldd	r24, Z+2	; 0x02
   14cf4:	84 30       	cpi	r24, 0x04	; 4
   14cf6:	81 f4       	brne	.+32     	; 0x14d18 <_Z12Publish_Datav+0x9dc>
   14cf8:	81 e0       	ldi	r24, 0x01	; 1
   14cfa:	90 e0       	ldi	r25, 0x00	; 0
   14cfc:	c9 5e       	subi	r28, 0xE9	; 233
   14cfe:	de 4f       	sbci	r29, 0xFE	; 254
   14d00:	99 83       	std	Y+1, r25	; 0x01
   14d02:	88 83       	st	Y, r24
   14d04:	c7 51       	subi	r28, 0x17	; 23
   14d06:	d1 40       	sbci	r29, 0x01	; 1
   14d08:	ae 01       	movw	r20, r28
   14d0a:	49 5e       	subi	r20, 0xE9	; 233
   14d0c:	5e 4f       	sbci	r21, 0xFE	; 254
   14d0e:	68 e3       	ldi	r22, 0x38	; 56
   14d10:	71 e3       	ldi	r23, 0x31	; 49
   14d12:	c8 01       	movw	r24, r16
   14d14:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d18:	80 91 1b 16 	lds	r24, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14d1c:	81 30       	cpi	r24, 0x01	; 1
   14d1e:	31 f5       	brne	.+76     	; 0x14d6c <_Z12Publish_Datav+0xa30>
   14d20:	e0 91 bf 0f 	lds	r30, 0x0FBF	; 0x800fbf <_sExtra_Plot+0x20>
   14d24:	f0 e0       	ldi	r31, 0x00	; 0
   14d26:	e8 51       	subi	r30, 0x18	; 24
   14d28:	fa 4e       	sbci	r31, 0xEA	; 234
   14d2a:	80 81       	ld	r24, Z
   14d2c:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   14d30:	89 2b       	or	r24, r25
   14d32:	61 f0       	breq	.+24     	; 0x14d4c <_Z12Publish_Datav+0xa10>
   14d34:	c9 5e       	subi	r28, 0xE9	; 233
   14d36:	de 4f       	sbci	r29, 0xFE	; 254
   14d38:	19 82       	std	Y+1, r1	; 0x01
   14d3a:	18 82       	st	Y, r1
   14d3c:	c7 51       	subi	r28, 0x17	; 23
   14d3e:	d1 40       	sbci	r29, 0x01	; 1
   14d40:	ae 01       	movw	r20, r28
   14d42:	49 5e       	subi	r20, 0xE9	; 233
   14d44:	5e 4f       	sbci	r21, 0xFE	; 254
   14d46:	61 e3       	ldi	r22, 0x31	; 49
   14d48:	71 e3       	ldi	r23, 0x31	; 49
   14d4a:	0d c0       	rjmp	.+26     	; 0x14d66 <_Z12Publish_Datav+0xa2a>
   14d4c:	81 e0       	ldi	r24, 0x01	; 1
   14d4e:	90 e0       	ldi	r25, 0x00	; 0
   14d50:	c9 5e       	subi	r28, 0xE9	; 233
   14d52:	de 4f       	sbci	r29, 0xFE	; 254
   14d54:	99 83       	std	Y+1, r25	; 0x01
   14d56:	88 83       	st	Y, r24
   14d58:	c7 51       	subi	r28, 0x17	; 23
   14d5a:	d1 40       	sbci	r29, 0x01	; 1
   14d5c:	ae 01       	movw	r20, r28
   14d5e:	49 5e       	subi	r20, 0xE9	; 233
   14d60:	5e 4f       	sbci	r21, 0xFE	; 254
   14d62:	6a e2       	ldi	r22, 0x2A	; 42
   14d64:	71 e3       	ldi	r23, 0x31	; 49
   14d66:	c8 01       	movw	r24, r16
   14d68:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14d6c:	44 ed       	ldi	r20, 0xD4	; 212
   14d6e:	53 e0       	ldi	r21, 0x03	; 3
   14d70:	67 e8       	ldi	r22, 0x87	; 135
   14d72:	71 e1       	ldi	r23, 0x11	; 17
   14d74:	c8 01       	movw	r24, r16
   14d76:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   14d7a:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14d7e:	88 23       	and	r24, r24
   14d80:	d9 f0       	breq	.+54     	; 0x14db8 <_Z12Publish_Datav+0xa7c>
   14d82:	67 e8       	ldi	r22, 0x87	; 135
   14d84:	71 e1       	ldi	r23, 0x11	; 17
   14d86:	83 e7       	ldi	r24, 0x73	; 115
   14d88:	9e e0       	ldi	r25, 0x0E	; 14
   14d8a:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   14d8e:	88 23       	and	r24, r24
   14d90:	69 f0       	breq	.+26     	; 0x14dac <_Z12Publish_Datav+0xa70>
   14d92:	80 91 1b 16 	lds	r24, 0x161B	; 0x80161b <_sRuble_Parameters+0xb6>
   14d96:	9b e1       	ldi	r25, 0x1B	; 27
   14d98:	89 9f       	mul	r24, r25
   14d9a:	f0 01       	movw	r30, r0
   14d9c:	11 24       	eor	r1, r1
   14d9e:	e1 56       	subi	r30, 0x61	; 97
   14da0:	f0 4f       	sbci	r31, 0xF0	; 240
   14da2:	12 8e       	std	Z+26, r1	; 0x1a
   14da4:	8f 5f       	subi	r24, 0xFF	; 255
   14da6:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   14daa:	06 c0       	rjmp	.+12     	; 0x14db8 <_Z12Publish_Datav+0xa7c>
   14dac:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14db0:	81 50       	subi	r24, 0x01	; 1
   14db2:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   14db6:	e1 cf       	rjmp	.-62     	; 0x14d7a <_Z12Publish_Datav+0xa3e>
   14db8:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   14dbc:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   14dc0:	9f 7d       	andi	r25, 0xDF	; 223
   14dc2:	d1 cb       	rjmp	.-2142   	; 0x14566 <_Z12Publish_Datav+0x22a>
   14dc4:	82 ff       	sbrs	r24, 2
   14dc6:	02 c2       	rjmp	.+1028   	; 0x151cc <_Z12Publish_Datav+0xe90>
   14dc8:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   14dcc:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   14dd0:	81 11       	cpse	r24, r1
   14dd2:	4e c0       	rjmp	.+156    	; 0x14e70 <_Z12Publish_Datav+0xb34>
   14dd4:	80 91 22 16 	lds	r24, 0x1622	; 0x801622 <_sRuble_Parameters+0xbd>
   14dd8:	88 23       	and	r24, r24
   14dda:	09 f4       	brne	.+2      	; 0x14dde <_Z12Publish_Datav+0xaa2>
   14ddc:	43 c0       	rjmp	.+134    	; 0x14e64 <_Z12Publish_Datav+0xb28>
   14dde:	b0 90 6d 15 	lds	r11, 0x156D	; 0x80156d <_sRuble_Parameters+0x8>
   14de2:	c0 90 6e 15 	lds	r12, 0x156E	; 0x80156e <_sRuble_Parameters+0x9>
   14de6:	d0 90 6f 15 	lds	r13, 0x156F	; 0x80156f <_sRuble_Parameters+0xa>
   14dea:	e0 90 70 15 	lds	r14, 0x1570	; 0x801570 <_sRuble_Parameters+0xb>
   14dee:	f0 90 71 15 	lds	r15, 0x1571	; 0x801571 <_sRuble_Parameters+0xc>
   14df2:	b0 91 72 15 	lds	r27, 0x1572	; 0x801572 <_sRuble_Parameters+0xd>
   14df6:	f0 91 73 15 	lds	r31, 0x1573	; 0x801573 <_sRuble_Parameters+0xe>
   14dfa:	e0 91 74 15 	lds	r30, 0x1574	; 0x801574 <_sRuble_Parameters+0xf>
   14dfe:	2b 2d       	mov	r18, r11
   14e00:	3c 2d       	mov	r19, r12
   14e02:	4d 2d       	mov	r20, r13
   14e04:	5e 2d       	mov	r21, r14
   14e06:	6f 2d       	mov	r22, r15
   14e08:	7b 2f       	mov	r23, r27
   14e0a:	8f 2f       	mov	r24, r31
   14e0c:	9e 2f       	mov	r25, r30
   14e0e:	a2 e0       	ldi	r26, 0x02	; 2
   14e10:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   14e14:	81 f0       	breq	.+32     	; 0x14e36 <_Z12Publish_Datav+0xafa>
   14e16:	a4 e0       	ldi	r26, 0x04	; 4
   14e18:	c9 5e       	subi	r28, 0xE9	; 233
   14e1a:	de 4f       	sbci	r29, 0xFE	; 254
   14e1c:	19 82       	std	Y+1, r1	; 0x01
   14e1e:	18 82       	st	Y, r1
   14e20:	c7 51       	subi	r28, 0x17	; 23
   14e22:	d1 40       	sbci	r29, 0x01	; 1
   14e24:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   14e28:	a1 f4       	brne	.+40     	; 0x14e52 <_Z12Publish_Datav+0xb16>
   14e2a:	ae 01       	movw	r20, r28
   14e2c:	49 5e       	subi	r20, 0xE9	; 233
   14e2e:	5e 4f       	sbci	r21, 0xFE	; 254
   14e30:	62 e2       	ldi	r22, 0x22	; 34
   14e32:	71 e3       	ldi	r23, 0x31	; 49
   14e34:	13 c0       	rjmp	.+38     	; 0x14e5c <_Z12Publish_Datav+0xb20>
   14e36:	81 e0       	ldi	r24, 0x01	; 1
   14e38:	90 e0       	ldi	r25, 0x00	; 0
   14e3a:	c9 5e       	subi	r28, 0xE9	; 233
   14e3c:	de 4f       	sbci	r29, 0xFE	; 254
   14e3e:	99 83       	std	Y+1, r25	; 0x01
   14e40:	88 83       	st	Y, r24
   14e42:	c7 51       	subi	r28, 0x17	; 23
   14e44:	d1 40       	sbci	r29, 0x01	; 1
   14e46:	ae 01       	movw	r20, r28
   14e48:	49 5e       	subi	r20, 0xE9	; 233
   14e4a:	5e 4f       	sbci	r21, 0xFE	; 254
   14e4c:	6a e1       	ldi	r22, 0x1A	; 26
   14e4e:	71 e3       	ldi	r23, 0x31	; 49
   14e50:	05 c0       	rjmp	.+10     	; 0x14e5c <_Z12Publish_Datav+0xb20>
   14e52:	ae 01       	movw	r20, r28
   14e54:	49 5e       	subi	r20, 0xE9	; 233
   14e56:	5e 4f       	sbci	r21, 0xFE	; 254
   14e58:	62 e1       	ldi	r22, 0x12	; 18
   14e5a:	71 e3       	ldi	r23, 0x31	; 49
   14e5c:	c8 01       	movw	r24, r16
   14e5e:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14e62:	21 c0       	rjmp	.+66     	; 0x14ea6 <_Z12Publish_Datav+0xb6a>
   14e64:	8a e0       	ldi	r24, 0x0A	; 10
   14e66:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   14e6a:	89 2b       	or	r24, r25
   14e6c:	71 f4       	brne	.+28     	; 0x14e8a <_Z12Publish_Datav+0xb4e>
   14e6e:	04 c0       	rjmp	.+8      	; 0x14e78 <_Z12Publish_Datav+0xb3c>
   14e70:	80 91 25 16 	lds	r24, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
   14e74:	81 30       	cpi	r24, 0x01	; 1
   14e76:	49 f4       	brne	.+18     	; 0x14e8a <_Z12Publish_Datav+0xb4e>
   14e78:	81 e0       	ldi	r24, 0x01	; 1
   14e7a:	90 e0       	ldi	r25, 0x00	; 0
   14e7c:	c9 5e       	subi	r28, 0xE9	; 233
   14e7e:	de 4f       	sbci	r29, 0xFE	; 254
   14e80:	99 83       	std	Y+1, r25	; 0x01
   14e82:	88 83       	st	Y, r24
   14e84:	c7 51       	subi	r28, 0x17	; 23
   14e86:	d1 40       	sbci	r29, 0x01	; 1
   14e88:	06 c0       	rjmp	.+12     	; 0x14e96 <_Z12Publish_Datav+0xb5a>
   14e8a:	c9 5e       	subi	r28, 0xE9	; 233
   14e8c:	de 4f       	sbci	r29, 0xFE	; 254
   14e8e:	19 82       	std	Y+1, r1	; 0x01
   14e90:	18 82       	st	Y, r1
   14e92:	c7 51       	subi	r28, 0x17	; 23
   14e94:	d1 40       	sbci	r29, 0x01	; 1
   14e96:	ae 01       	movw	r20, r28
   14e98:	49 5e       	subi	r20, 0xE9	; 233
   14e9a:	5e 4f       	sbci	r21, 0xFE	; 254
   14e9c:	69 e9       	ldi	r22, 0x99	; 153
   14e9e:	77 e0       	ldi	r23, 0x07	; 7
   14ea0:	c8 01       	movw	r24, r16
   14ea2:	0e 94 f0 89 	call	0x113e0	; 0x113e0 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   14ea6:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   14eaa:	c9 5e       	subi	r28, 0xE9	; 233
   14eac:	de 4f       	sbci	r29, 0xFE	; 254
   14eae:	88 83       	st	Y, r24
   14eb0:	c7 51       	subi	r28, 0x17	; 23
   14eb2:	d1 40       	sbci	r29, 0x01	; 1
   14eb4:	ae 01       	movw	r20, r28
   14eb6:	49 5e       	subi	r20, 0xE9	; 233
   14eb8:	5e 4f       	sbci	r21, 0xFE	; 254
   14eba:	6d e0       	ldi	r22, 0x0D	; 13
   14ebc:	71 e3       	ldi	r23, 0x31	; 49
   14ebe:	c8 01       	movw	r24, r16
   14ec0:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14ec4:	6a ef       	ldi	r22, 0xFA	; 250
   14ec6:	70 e3       	ldi	r23, 0x30	; 48
   14ec8:	c8 01       	movw	r24, r16
   14eca:	0e 94 6f 88 	call	0x110de	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   14ece:	7c 01       	movw	r14, r24
   14ed0:	89 2b       	or	r24, r25
   14ed2:	91 f4       	brne	.+36     	; 0x14ef8 <_Z12Publish_Datav+0xbbc>
   14ed4:	c8 01       	movw	r24, r16
   14ed6:	0e 94 93 88 	call	0x11126	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   14eda:	7c 01       	movw	r14, r24
   14edc:	00 97       	sbiw	r24, 0x00	; 0
   14ede:	d9 f0       	breq	.+54     	; 0x14f16 <_Z12Publish_Datav+0xbda>
   14ee0:	4a ef       	ldi	r20, 0xFA	; 250
   14ee2:	50 e3       	ldi	r21, 0x30	; 48
   14ee4:	bc 01       	movw	r22, r24
   14ee6:	6e 5f       	subi	r22, 0xFE	; 254
   14ee8:	7f 4f       	sbci	r23, 0xFF	; 255
   14eea:	d8 01       	movw	r26, r16
   14eec:	8d 91       	ld	r24, X+
   14eee:	9c 91       	ld	r25, X
   14ef0:	0e 94 b4 88 	call	0x11168	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   14ef4:	88 23       	and	r24, r24
   14ef6:	79 f0       	breq	.+30     	; 0x14f16 <_Z12Publish_Datav+0xbda>
   14ef8:	80 91 5f 15 	lds	r24, 0x155F	; 0x80155f <_sPump_Parameter+0x4>
   14efc:	90 91 60 15 	lds	r25, 0x1560	; 0x801560 <_sPump_Parameter+0x5>
   14f00:	a0 91 61 15 	lds	r26, 0x1561	; 0x801561 <_sPump_Parameter+0x6>
   14f04:	b0 91 62 15 	lds	r27, 0x1562	; 0x801562 <_sPump_Parameter+0x7>
   14f08:	28 e0       	ldi	r18, 0x08	; 8
   14f0a:	f7 01       	movw	r30, r14
   14f0c:	24 83       	std	Z+4, r18	; 0x04
   14f0e:	85 83       	std	Z+5, r24	; 0x05
   14f10:	96 83       	std	Z+6, r25	; 0x06
   14f12:	a7 83       	std	Z+7, r26	; 0x07
   14f14:	b0 87       	std	Z+8, r27	; 0x08
   14f16:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   14f1a:	82 30       	cpi	r24, 0x02	; 2
   14f1c:	41 f0       	breq	.+16     	; 0x14f2e <_Z12Publish_Datav+0xbf2>
   14f1e:	45 ed       	ldi	r20, 0xD5	; 213
   14f20:	55 e1       	ldi	r21, 0x15	; 21
   14f22:	65 ef       	ldi	r22, 0xF5	; 245
   14f24:	70 e3       	ldi	r23, 0x30	; 48
   14f26:	c8 01       	movw	r24, r16
   14f28:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   14f2c:	0e c0       	rjmp	.+28     	; 0x14f4a <_Z12Publish_Datav+0xc0e>
   14f2e:	c9 5e       	subi	r28, 0xE9	; 233
   14f30:	de 4f       	sbci	r29, 0xFE	; 254
   14f32:	19 82       	std	Y+1, r1	; 0x01
   14f34:	18 82       	st	Y, r1
   14f36:	c7 51       	subi	r28, 0x17	; 23
   14f38:	d1 40       	sbci	r29, 0x01	; 1
   14f3a:	ae 01       	movw	r20, r28
   14f3c:	49 5e       	subi	r20, 0xE9	; 233
   14f3e:	5e 4f       	sbci	r21, 0xFE	; 254
   14f40:	60 ef       	ldi	r22, 0xF0	; 240
   14f42:	70 e3       	ldi	r23, 0x30	; 48
   14f44:	c8 01       	movw	r24, r16
   14f46:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   14f4a:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   14f4e:	85 30       	cpi	r24, 0x05	; 5
   14f50:	09 f0       	breq	.+2      	; 0x14f54 <_Z12Publish_Datav+0xc18>
   14f52:	67 c0       	rjmp	.+206    	; 0x15022 <_Z12Publish_Datav+0xce6>
   14f54:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
   14f58:	88 23       	and	r24, r24
   14f5a:	09 f4       	brne	.+2      	; 0x14f5e <_Z12Publish_Datav+0xc22>
   14f5c:	48 c0       	rjmp	.+144    	; 0x14fee <_Z12Publish_Datav+0xcb2>
   14f5e:	67 ee       	ldi	r22, 0xE7	; 231
   14f60:	70 e3       	ldi	r23, 0x30	; 48
   14f62:	c8 01       	movw	r24, r16
   14f64:	0e 94 6f 88 	call	0x110de	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   14f68:	7c 01       	movw	r14, r24
   14f6a:	89 2b       	or	r24, r25
   14f6c:	91 f4       	brne	.+36     	; 0x14f92 <_Z12Publish_Datav+0xc56>
   14f6e:	c8 01       	movw	r24, r16
   14f70:	0e 94 93 88 	call	0x11126	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   14f74:	7c 01       	movw	r14, r24
   14f76:	00 97       	sbiw	r24, 0x00	; 0
   14f78:	c1 f0       	breq	.+48     	; 0x14faa <_Z12Publish_Datav+0xc6e>
   14f7a:	47 ee       	ldi	r20, 0xE7	; 231
   14f7c:	50 e3       	ldi	r21, 0x30	; 48
   14f7e:	bc 01       	movw	r22, r24
   14f80:	6e 5f       	subi	r22, 0xFE	; 254
   14f82:	7f 4f       	sbci	r23, 0xFF	; 255
   14f84:	d8 01       	movw	r26, r16
   14f86:	8d 91       	ld	r24, X+
   14f88:	9c 91       	ld	r25, X
   14f8a:	0e 94 b4 88 	call	0x11168	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   14f8e:	88 23       	and	r24, r24
   14f90:	61 f0       	breq	.+24     	; 0x14faa <_Z12Publish_Datav+0xc6e>
   14f92:	80 91 f3 08 	lds	r24, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
   14f96:	94 e0       	ldi	r25, 0x04	; 4
   14f98:	f7 01       	movw	r30, r14
   14f9a:	94 83       	std	Z+4, r25	; 0x04
   14f9c:	90 e0       	ldi	r25, 0x00	; 0
   14f9e:	a0 e0       	ldi	r26, 0x00	; 0
   14fa0:	b0 e0       	ldi	r27, 0x00	; 0
   14fa2:	85 83       	std	Z+5, r24	; 0x05
   14fa4:	96 83       	std	Z+6, r25	; 0x06
   14fa6:	a7 83       	std	Z+7, r26	; 0x07
   14fa8:	b0 87       	std	Z+8, r27	; 0x08
   14faa:	e0 91 f3 08 	lds	r30, 0x08F3	; 0x8008f3 <_sSchedules+0x3>
   14fae:	f0 e0       	ldi	r31, 0x00	; 0
   14fb0:	ee 0f       	add	r30, r30
   14fb2:	ff 1f       	adc	r31, r31
   14fb4:	e2 51       	subi	r30, 0x12	; 18
   14fb6:	f7 4f       	sbci	r31, 0xF7	; 247
   14fb8:	87 8d       	ldd	r24, Z+31	; 0x1f
   14fba:	90 a1       	ldd	r25, Z+32	; 0x20
   14fbc:	20 91 f8 08 	lds	r18, 0x08F8	; 0x8008f8 <_sSchedules+0x8>
   14fc0:	30 91 f9 08 	lds	r19, 0x08F9	; 0x8008f9 <_sSchedules+0x9>
   14fc4:	82 1b       	sub	r24, r18
   14fc6:	93 0b       	sbc	r25, r19
   14fc8:	6c e3       	ldi	r22, 0x3C	; 60
   14fca:	70 e0       	ldi	r23, 0x00	; 0
   14fcc:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   14fd0:	c9 5e       	subi	r28, 0xE9	; 233
   14fd2:	de 4f       	sbci	r29, 0xFE	; 254
   14fd4:	79 83       	std	Y+1, r23	; 0x01
   14fd6:	68 83       	st	Y, r22
   14fd8:	c7 51       	subi	r28, 0x17	; 23
   14fda:	d1 40       	sbci	r29, 0x01	; 1
   14fdc:	ae 01       	movw	r20, r28
   14fde:	49 5e       	subi	r20, 0xE9	; 233
   14fe0:	5e 4f       	sbci	r21, 0xFE	; 254
   14fe2:	68 ed       	ldi	r22, 0xD8	; 216
   14fe4:	70 e3       	ldi	r23, 0x30	; 48
   14fe6:	c8 01       	movw	r24, r16
   14fe8:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   14fec:	36 c0       	rjmp	.+108    	; 0x1505a <_Z12Publish_Datav+0xd1e>
   14fee:	c9 5e       	subi	r28, 0xE9	; 233
   14ff0:	de 4f       	sbci	r29, 0xFE	; 254
   14ff2:	19 82       	std	Y+1, r1	; 0x01
   14ff4:	18 82       	st	Y, r1
   14ff6:	c7 51       	subi	r28, 0x17	; 23
   14ff8:	d1 40       	sbci	r29, 0x01	; 1
   14ffa:	ae 01       	movw	r20, r28
   14ffc:	49 5e       	subi	r20, 0xE9	; 233
   14ffe:	5e 4f       	sbci	r21, 0xFE	; 254
   15000:	6f ec       	ldi	r22, 0xCF	; 207
   15002:	70 e3       	ldi	r23, 0x30	; 48
   15004:	c8 01       	movw	r24, r16
   15006:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1500a:	c9 5e       	subi	r28, 0xE9	; 233
   1500c:	de 4f       	sbci	r29, 0xFE	; 254
   1500e:	19 82       	std	Y+1, r1	; 0x01
   15010:	18 82       	st	Y, r1
   15012:	c7 51       	subi	r28, 0x17	; 23
   15014:	d1 40       	sbci	r29, 0x01	; 1
   15016:	ae 01       	movw	r20, r28
   15018:	49 5e       	subi	r20, 0xE9	; 233
   1501a:	5e 4f       	sbci	r21, 0xFE	; 254
   1501c:	60 ec       	ldi	r22, 0xC0	; 192
   1501e:	70 e3       	ldi	r23, 0x30	; 48
   15020:	19 c0       	rjmp	.+50     	; 0x15054 <_Z12Publish_Datav+0xd18>
   15022:	c9 5e       	subi	r28, 0xE9	; 233
   15024:	de 4f       	sbci	r29, 0xFE	; 254
   15026:	19 82       	std	Y+1, r1	; 0x01
   15028:	18 82       	st	Y, r1
   1502a:	c7 51       	subi	r28, 0x17	; 23
   1502c:	d1 40       	sbci	r29, 0x01	; 1
   1502e:	ae 01       	movw	r20, r28
   15030:	49 5e       	subi	r20, 0xE9	; 233
   15032:	5e 4f       	sbci	r21, 0xFE	; 254
   15034:	67 eb       	ldi	r22, 0xB7	; 183
   15036:	70 e3       	ldi	r23, 0x30	; 48
   15038:	c8 01       	movw	r24, r16
   1503a:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1503e:	c9 5e       	subi	r28, 0xE9	; 233
   15040:	de 4f       	sbci	r29, 0xFE	; 254
   15042:	19 82       	std	Y+1, r1	; 0x01
   15044:	18 82       	st	Y, r1
   15046:	c7 51       	subi	r28, 0x17	; 23
   15048:	d1 40       	sbci	r29, 0x01	; 1
   1504a:	ae 01       	movw	r20, r28
   1504c:	49 5e       	subi	r20, 0xE9	; 233
   1504e:	5e 4f       	sbci	r21, 0xFE	; 254
   15050:	68 ea       	ldi	r22, 0xA8	; 168
   15052:	70 e3       	ldi	r23, 0x30	; 48
   15054:	c8 01       	movw	r24, r16
   15056:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1505a:	41 e4       	ldi	r20, 0x41	; 65
   1505c:	56 e1       	ldi	r21, 0x16	; 22
   1505e:	6f e9       	ldi	r22, 0x9F	; 159
   15060:	70 e3       	ldi	r23, 0x30	; 48
   15062:	c8 01       	movw	r24, r16
   15064:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15068:	49 e1       	ldi	r20, 0x19	; 25
   1506a:	56 e1       	ldi	r21, 0x16	; 22
   1506c:	63 e9       	ldi	r22, 0x93	; 147
   1506e:	70 e3       	ldi	r23, 0x30	; 48
   15070:	c8 01       	movw	r24, r16
   15072:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15076:	49 ea       	ldi	r20, 0xA9	; 169
   15078:	55 e1       	ldi	r21, 0x15	; 21
   1507a:	6e e8       	ldi	r22, 0x8E	; 142
   1507c:	70 e3       	ldi	r23, 0x30	; 48
   1507e:	c8 01       	movw	r24, r16
   15080:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15084:	4a ea       	ldi	r20, 0xAA	; 170
   15086:	55 e1       	ldi	r21, 0x15	; 21
   15088:	68 e8       	ldi	r22, 0x88	; 136
   1508a:	70 e3       	ldi	r23, 0x30	; 48
   1508c:	c8 01       	movw	r24, r16
   1508e:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   15092:	4b ea       	ldi	r20, 0xAB	; 171
   15094:	55 e1       	ldi	r21, 0x15	; 21
   15096:	63 e8       	ldi	r22, 0x83	; 131
   15098:	70 e3       	ldi	r23, 0x30	; 48
   1509a:	c8 01       	movw	r24, r16
   1509c:	0e 94 93 89 	call	0x11326	; 0x11326 <_ZN11ArduinoJson10JsonObject3setIcK19__FlashStringHelperEEbPT0_RKT_>
   150a0:	66 e7       	ldi	r22, 0x76	; 118
   150a2:	70 e3       	ldi	r23, 0x30	; 48
   150a4:	c8 01       	movw	r24, r16
   150a6:	0e 94 6f 88 	call	0x110de	; 0x110de <_ZN11ArduinoJson10JsonObject7findKeyIPK19__FlashStringHelperEENS_9Internals12ListIteratorINS_8JsonPairEEET_>
   150aa:	7c 01       	movw	r14, r24
   150ac:	89 2b       	or	r24, r25
   150ae:	91 f4       	brne	.+36     	; 0x150d4 <_Z12Publish_Datav+0xd98>
   150b0:	c8 01       	movw	r24, r16
   150b2:	0e 94 93 88 	call	0x11126	; 0x11126 <_ZN11ArduinoJson9Internals4ListINS_8JsonPairEE3addEv>
   150b6:	7c 01       	movw	r14, r24
   150b8:	00 97       	sbiw	r24, 0x00	; 0
   150ba:	d9 f0       	breq	.+54     	; 0x150f2 <_Z12Publish_Datav+0xdb6>
   150bc:	46 e7       	ldi	r20, 0x76	; 118
   150be:	50 e3       	ldi	r21, 0x30	; 48
   150c0:	bc 01       	movw	r22, r24
   150c2:	6e 5f       	subi	r22, 0xFE	; 254
   150c4:	7f 4f       	sbci	r23, 0xFF	; 255
   150c6:	d8 01       	movw	r26, r16
   150c8:	8d 91       	ld	r24, X+
   150ca:	9c 91       	ld	r25, X
   150cc:	0e 94 b4 88 	call	0x11168	; 0x11168 <_ZN11ArduinoJson9Internals10ValueSaverIPK19__FlashStringHelpervE4saveIPKcEEbPNS_10JsonBufferERT_S4_>
   150d0:	88 23       	and	r24, r24
   150d2:	79 f0       	breq	.+30     	; 0x150f2 <_Z12Publish_Datav+0xdb6>
   150d4:	80 91 75 15 	lds	r24, 0x1575	; 0x801575 <_sRuble_Parameters+0x10>
   150d8:	90 91 76 15 	lds	r25, 0x1576	; 0x801576 <_sRuble_Parameters+0x11>
   150dc:	a0 91 77 15 	lds	r26, 0x1577	; 0x801577 <_sRuble_Parameters+0x12>
   150e0:	b0 91 78 15 	lds	r27, 0x1578	; 0x801578 <_sRuble_Parameters+0x13>
   150e4:	24 e0       	ldi	r18, 0x04	; 4
   150e6:	f7 01       	movw	r30, r14
   150e8:	24 83       	std	Z+4, r18	; 0x04
   150ea:	85 83       	std	Z+5, r24	; 0x05
   150ec:	96 83       	std	Z+6, r25	; 0x06
   150ee:	a7 83       	std	Z+7, r26	; 0x07
   150f0:	b0 87       	std	Z+8, r27	; 0x08
   150f2:	89 e3       	ldi	r24, 0x39	; 57
   150f4:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   150f8:	c9 5e       	subi	r28, 0xE9	; 233
   150fa:	de 4f       	sbci	r29, 0xFE	; 254
   150fc:	99 83       	std	Y+1, r25	; 0x01
   150fe:	88 83       	st	Y, r24
   15100:	c7 51       	subi	r28, 0x17	; 23
   15102:	d1 40       	sbci	r29, 0x01	; 1
   15104:	ae 01       	movw	r20, r28
   15106:	49 5e       	subi	r20, 0xE9	; 233
   15108:	5e 4f       	sbci	r21, 0xFE	; 254
   1510a:	6e e6       	ldi	r22, 0x6E	; 110
   1510c:	70 e3       	ldi	r23, 0x30	; 48
   1510e:	c8 01       	movw	r24, r16
   15110:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15114:	8a e3       	ldi	r24, 0x3A	; 58
   15116:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   1511a:	c9 5e       	subi	r28, 0xE9	; 233
   1511c:	de 4f       	sbci	r29, 0xFE	; 254
   1511e:	99 83       	std	Y+1, r25	; 0x01
   15120:	88 83       	st	Y, r24
   15122:	c7 51       	subi	r28, 0x17	; 23
   15124:	d1 40       	sbci	r29, 0x01	; 1
   15126:	ae 01       	movw	r20, r28
   15128:	49 5e       	subi	r20, 0xE9	; 233
   1512a:	5e 4f       	sbci	r21, 0xFE	; 254
   1512c:	66 e6       	ldi	r22, 0x66	; 102
   1512e:	70 e3       	ldi	r23, 0x30	; 48
   15130:	c8 01       	movw	r24, r16
   15132:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15136:	8b e3       	ldi	r24, 0x3B	; 59
   15138:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   1513c:	c9 5e       	subi	r28, 0xE9	; 233
   1513e:	de 4f       	sbci	r29, 0xFE	; 254
   15140:	99 83       	std	Y+1, r25	; 0x01
   15142:	88 83       	st	Y, r24
   15144:	c7 51       	subi	r28, 0x17	; 23
   15146:	d1 40       	sbci	r29, 0x01	; 1
   15148:	ae 01       	movw	r20, r28
   1514a:	49 5e       	subi	r20, 0xE9	; 233
   1514c:	5e 4f       	sbci	r21, 0xFE	; 254
   1514e:	6e e5       	ldi	r22, 0x5E	; 94
   15150:	70 e3       	ldi	r23, 0x30	; 48
   15152:	c8 01       	movw	r24, r16
   15154:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15158:	44 ed       	ldi	r20, 0xD4	; 212
   1515a:	53 e0       	ldi	r21, 0x03	; 3
   1515c:	67 e8       	ldi	r22, 0x87	; 135
   1515e:	71 e1       	ldi	r23, 0x11	; 17
   15160:	c8 01       	movw	r24, r16
   15162:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   15166:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1516a:	81 30       	cpi	r24, 0x01	; 1
   1516c:	31 f4       	brne	.+12     	; 0x1517a <_Z12Publish_Datav+0xe3e>
   1516e:	67 e8       	ldi	r22, 0x87	; 135
   15170:	71 e1       	ldi	r23, 0x11	; 17
   15172:	8f e6       	ldi	r24, 0x6F	; 111
   15174:	96 e1       	ldi	r25, 0x16	; 22
   15176:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1517a:	80 91 99 0f 	lds	r24, 0x0F99	; 0x800f99 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   1517e:	8f 5f       	subi	r24, 0xFF	; 255
   15180:	80 93 99 0f 	sts	0x0F99, r24	; 0x800f99 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   15184:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   15188:	88 23       	and	r24, r24
   1518a:	89 f0       	breq	.+34     	; 0x151ae <_Z12Publish_Datav+0xe72>
   1518c:	67 e8       	ldi	r22, 0x87	; 135
   1518e:	71 e1       	ldi	r23, 0x11	; 17
   15190:	84 ea       	ldi	r24, 0xA4	; 164
   15192:	9d e0       	ldi	r25, 0x0D	; 13
   15194:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   15198:	88 23       	and	r24, r24
   1519a:	19 f0       	breq	.+6      	; 0x151a2 <_Z12Publish_Datav+0xe66>
   1519c:	10 92 99 0f 	sts	0x0F99, r1	; 0x800f99 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   151a0:	06 c0       	rjmp	.+12     	; 0x151ae <_Z12Publish_Datav+0xe72>
   151a2:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   151a6:	81 50       	subi	r24, 0x01	; 1
   151a8:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   151ac:	eb cf       	rjmp	.-42     	; 0x15184 <_Z12Publish_Datav+0xe48>
   151ae:	80 91 99 0f 	lds	r24, 0x0F99	; 0x800f99 <_ZZ12Publish_DatavE26ruble_data_success_counter>
   151b2:	84 30       	cpi	r24, 0x04	; 4
   151b4:	28 f0       	brcs	.+10     	; 0x151c0 <_Z12Publish_Datav+0xe84>
   151b6:	82 e0       	ldi	r24, 0x02	; 2
   151b8:	80 93 d7 15 	sts	0x15D7, r24	; 0x8015d7 <_sRuble_Parameters+0x72>
   151bc:	0e 94 d0 7e 	call	0xfda0	; 0xfda0 <_Z14Ping_to_Serverv>
   151c0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   151c4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   151c8:	8b 7f       	andi	r24, 0xFB	; 251
   151ca:	cd c9       	rjmp	.-3174   	; 0x14566 <_Z12Publish_Datav+0x22a>
   151cc:	80 91 97 0f 	lds	r24, 0x0F97	; 0x800f97 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   151d0:	90 91 98 0f 	lds	r25, 0x0F98	; 0x800f98 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   151d4:	00 97       	sbiw	r24, 0x00	; 0
   151d6:	09 f0       	breq	.+2      	; 0x151da <_Z12Publish_Datav+0xe9e>
   151d8:	14 c2       	rjmp	.+1064   	; 0x15602 <_Z12Publish_Datav+0x12c6>
   151da:	8f e9       	ldi	r24, 0x9F	; 159
   151dc:	c8 2e       	mov	r12, r24
   151de:	8f e0       	ldi	r24, 0x0F	; 15
   151e0:	d8 2e       	mov	r13, r24
   151e2:	e1 2c       	mov	r14, r1
   151e4:	f1 2c       	mov	r15, r1
   151e6:	be 2c       	mov	r11, r14
   151e8:	d6 01       	movw	r26, r12
   151ea:	11 96       	adiw	r26, 0x01	; 1
   151ec:	8c 91       	ld	r24, X
   151ee:	11 97       	sbiw	r26, 0x01	; 1
   151f0:	85 36       	cpi	r24, 0x65	; 101
   151f2:	08 f4       	brcc	.+2      	; 0x151f6 <_Z12Publish_Datav+0xeba>
   151f4:	fa c1       	rjmp	.+1012   	; 0x155ea <_Z12Publish_Datav+0x12ae>
   151f6:	5a 96       	adiw	r26, 0x1a	; 26
   151f8:	6c 91       	ld	r22, X
   151fa:	66 23       	and	r22, r22
   151fc:	09 f4       	brne	.+2      	; 0x15200 <_Z12Publish_Datav+0xec4>
   151fe:	f5 c1       	rjmp	.+1002   	; 0x155ea <_Z12Publish_Datav+0x12ae>
   15200:	4a e0       	ldi	r20, 0x0A	; 10
   15202:	50 e0       	ldi	r21, 0x00	; 0
   15204:	8f e6       	ldi	r24, 0x6F	; 111
   15206:	96 e1       	ldi	r25, 0x16	; 22
   15208:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   1520c:	f6 01       	movw	r30, r12
   1520e:	82 8d       	ldd	r24, Z+26	; 0x1a
   15210:	81 30       	cpi	r24, 0x01	; 1
   15212:	09 f4       	brne	.+2      	; 0x15216 <_Z12Publish_Datav+0xeda>
   15214:	dd c0       	rjmp	.+442    	; 0x153d0 <_Z12Publish_Datav+0x1094>
   15216:	82 30       	cpi	r24, 0x02	; 2
   15218:	09 f0       	breq	.+2      	; 0x1521c <_Z12Publish_Datav+0xee0>
   1521a:	e7 c1       	rjmp	.+974    	; 0x155ea <_Z12Publish_Datav+0x12ae>
   1521c:	84 ed       	ldi	r24, 0xD4	; 212
   1521e:	93 e0       	ldi	r25, 0x03	; 3
   15220:	e7 e8       	ldi	r30, 0x87	; 135
   15222:	f1 e1       	ldi	r31, 0x11	; 17
   15224:	df 01       	movw	r26, r30
   15226:	9c 01       	movw	r18, r24
   15228:	1d 92       	st	X+, r1
   1522a:	21 50       	subi	r18, 0x01	; 1
   1522c:	30 40       	sbci	r19, 0x00	; 0
   1522e:	e1 f7       	brne	.-8      	; 0x15228 <_Z12Publish_Datav+0xeec>
   15230:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15234:	81 30       	cpi	r24, 0x01	; 1
   15236:	51 f4       	brne	.+20     	; 0x1524c <_Z12Publish_Datav+0xf10>
   15238:	63 e4       	ldi	r22, 0x43	; 67
   1523a:	70 e3       	ldi	r23, 0x30	; 48
   1523c:	8f e6       	ldi	r24, 0x6F	; 111
   1523e:	96 e1       	ldi	r25, 0x16	; 22
   15240:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15244:	8f e6       	ldi	r24, 0x6F	; 111
   15246:	96 e1       	ldi	r25, 0x16	; 22
   15248:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1524c:	c7 01       	movw	r24, r14
   1524e:	8b 59       	subi	r24, 0x9B	; 155
   15250:	9f 4f       	sbci	r25, 0xFF	; 255
   15252:	c9 5e       	subi	r28, 0xE9	; 233
   15254:	de 4f       	sbci	r29, 0xFE	; 254
   15256:	99 83       	std	Y+1, r25	; 0x01
   15258:	88 83       	st	Y, r24
   1525a:	c7 51       	subi	r28, 0x17	; 23
   1525c:	d1 40       	sbci	r29, 0x01	; 1
   1525e:	ae 01       	movw	r20, r28
   15260:	49 5e       	subi	r20, 0xE9	; 233
   15262:	5e 4f       	sbci	r21, 0xFE	; 254
   15264:	6f e3       	ldi	r22, 0x3F	; 63
   15266:	70 e3       	ldi	r23, 0x30	; 48
   15268:	c8 01       	movw	r24, r16
   1526a:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   1526e:	8b e1       	ldi	r24, 0x1B	; 27
   15270:	8e 9d       	mul	r24, r14
   15272:	f0 01       	movw	r30, r0
   15274:	8f 9d       	mul	r24, r15
   15276:	f0 0d       	add	r31, r0
   15278:	11 24       	eor	r1, r1
   1527a:	e1 56       	subi	r30, 0x61	; 97
   1527c:	f0 4f       	sbci	r31, 0xF0	; 240
   1527e:	82 81       	ldd	r24, Z+2	; 0x02
   15280:	81 30       	cpi	r24, 0x01	; 1
   15282:	79 f4       	brne	.+30     	; 0x152a2 <_Z12Publish_Datav+0xf66>
   15284:	81 8d       	ldd	r24, Z+25	; 0x19
   15286:	81 11       	cpse	r24, r1
   15288:	0c c0       	rjmp	.+24     	; 0x152a2 <_Z12Publish_Datav+0xf66>
   1528a:	c9 5e       	subi	r28, 0xE9	; 233
   1528c:	de 4f       	sbci	r29, 0xFE	; 254
   1528e:	19 82       	std	Y+1, r1	; 0x01
   15290:	18 82       	st	Y, r1
   15292:	c7 51       	subi	r28, 0x17	; 23
   15294:	d1 40       	sbci	r29, 0x01	; 1
   15296:	ae 01       	movw	r20, r28
   15298:	49 5e       	subi	r20, 0xE9	; 233
   1529a:	5e 4f       	sbci	r21, 0xFE	; 254
   1529c:	68 e3       	ldi	r22, 0x38	; 56
   1529e:	70 e3       	ldi	r23, 0x30	; 48
   152a0:	0d c0       	rjmp	.+26     	; 0x152bc <_Z12Publish_Datav+0xf80>
   152a2:	81 e0       	ldi	r24, 0x01	; 1
   152a4:	90 e0       	ldi	r25, 0x00	; 0
   152a6:	c9 5e       	subi	r28, 0xE9	; 233
   152a8:	de 4f       	sbci	r29, 0xFE	; 254
   152aa:	99 83       	std	Y+1, r25	; 0x01
   152ac:	88 83       	st	Y, r24
   152ae:	c7 51       	subi	r28, 0x17	; 23
   152b0:	d1 40       	sbci	r29, 0x01	; 1
   152b2:	ae 01       	movw	r20, r28
   152b4:	49 5e       	subi	r20, 0xE9	; 233
   152b6:	5e 4f       	sbci	r21, 0xFE	; 254
   152b8:	61 e3       	ldi	r22, 0x31	; 49
   152ba:	70 e3       	ldi	r23, 0x30	; 48
   152bc:	c8 01       	movw	r24, r16
   152be:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   152c2:	8e ef       	ldi	r24, 0xFE	; 254
   152c4:	8b 0d       	add	r24, r11
   152c6:	88 30       	cpi	r24, 0x08	; 8
   152c8:	08 f4       	brcc	.+2      	; 0x152cc <_Z12Publish_Datav+0xf90>
   152ca:	64 c0       	rjmp	.+200    	; 0x15394 <_Z12Publish_Datav+0x1058>
   152cc:	8b e1       	ldi	r24, 0x1B	; 27
   152ce:	8e 9d       	mul	r24, r14
   152d0:	f0 01       	movw	r30, r0
   152d2:	8f 9d       	mul	r24, r15
   152d4:	f0 0d       	add	r31, r0
   152d6:	11 24       	eor	r1, r1
   152d8:	e1 56       	subi	r30, 0x61	; 97
   152da:	f0 4f       	sbci	r31, 0xF0	; 240
   152dc:	82 81       	ldd	r24, Z+2	; 0x02
   152de:	85 30       	cpi	r24, 0x05	; 5
   152e0:	71 f4       	brne	.+28     	; 0x152fe <_Z12Publish_Datav+0xfc2>
   152e2:	c9 5e       	subi	r28, 0xE9	; 233
   152e4:	de 4f       	sbci	r29, 0xFE	; 254
   152e6:	19 82       	std	Y+1, r1	; 0x01
   152e8:	18 82       	st	Y, r1
   152ea:	c7 51       	subi	r28, 0x17	; 23
   152ec:	d1 40       	sbci	r29, 0x01	; 1
   152ee:	ae 01       	movw	r20, r28
   152f0:	49 5e       	subi	r20, 0xE9	; 233
   152f2:	5e 4f       	sbci	r21, 0xFE	; 254
   152f4:	6a e2       	ldi	r22, 0x2A	; 42
   152f6:	70 e3       	ldi	r23, 0x30	; 48
   152f8:	c8 01       	movw	r24, r16
   152fa:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   152fe:	8b e1       	ldi	r24, 0x1B	; 27
   15300:	8e 9d       	mul	r24, r14
   15302:	f0 01       	movw	r30, r0
   15304:	8f 9d       	mul	r24, r15
   15306:	f0 0d       	add	r31, r0
   15308:	11 24       	eor	r1, r1
   1530a:	e1 56       	subi	r30, 0x61	; 97
   1530c:	f0 4f       	sbci	r31, 0xF0	; 240
   1530e:	82 81       	ldd	r24, Z+2	; 0x02
   15310:	84 30       	cpi	r24, 0x04	; 4
   15312:	81 f4       	brne	.+32     	; 0x15334 <_Z12Publish_Datav+0xff8>
   15314:	81 e0       	ldi	r24, 0x01	; 1
   15316:	90 e0       	ldi	r25, 0x00	; 0
   15318:	c9 5e       	subi	r28, 0xE9	; 233
   1531a:	de 4f       	sbci	r29, 0xFE	; 254
   1531c:	99 83       	std	Y+1, r25	; 0x01
   1531e:	88 83       	st	Y, r24
   15320:	c7 51       	subi	r28, 0x17	; 23
   15322:	d1 40       	sbci	r29, 0x01	; 1
   15324:	ae 01       	movw	r20, r28
   15326:	49 5e       	subi	r20, 0xE9	; 233
   15328:	5e 4f       	sbci	r21, 0xFE	; 254
   1532a:	63 e2       	ldi	r22, 0x23	; 35
   1532c:	70 e3       	ldi	r23, 0x30	; 48
   1532e:	c8 01       	movw	r24, r16
   15330:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15334:	31 e0       	ldi	r19, 0x01	; 1
   15336:	b3 12       	cpse	r11, r19
   15338:	2d c0       	rjmp	.+90     	; 0x15394 <_Z12Publish_Datav+0x1058>
   1533a:	8b e1       	ldi	r24, 0x1B	; 27
   1533c:	8e 9d       	mul	r24, r14
   1533e:	f0 01       	movw	r30, r0
   15340:	8f 9d       	mul	r24, r15
   15342:	f0 0d       	add	r31, r0
   15344:	11 24       	eor	r1, r1
   15346:	e1 56       	subi	r30, 0x61	; 97
   15348:	f0 4f       	sbci	r31, 0xF0	; 240
   1534a:	e5 81       	ldd	r30, Z+5	; 0x05
   1534c:	f0 e0       	ldi	r31, 0x00	; 0
   1534e:	e8 51       	subi	r30, 0x18	; 24
   15350:	fa 4e       	sbci	r31, 0xEA	; 234
   15352:	80 81       	ld	r24, Z
   15354:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   15358:	89 2b       	or	r24, r25
   1535a:	61 f0       	breq	.+24     	; 0x15374 <_Z12Publish_Datav+0x1038>
   1535c:	c9 5e       	subi	r28, 0xE9	; 233
   1535e:	de 4f       	sbci	r29, 0xFE	; 254
   15360:	19 82       	std	Y+1, r1	; 0x01
   15362:	18 82       	st	Y, r1
   15364:	c7 51       	subi	r28, 0x17	; 23
   15366:	d1 40       	sbci	r29, 0x01	; 1
   15368:	ae 01       	movw	r20, r28
   1536a:	49 5e       	subi	r20, 0xE9	; 233
   1536c:	5e 4f       	sbci	r21, 0xFE	; 254
   1536e:	6c e1       	ldi	r22, 0x1C	; 28
   15370:	70 e3       	ldi	r23, 0x30	; 48
   15372:	0d c0       	rjmp	.+26     	; 0x1538e <_Z12Publish_Datav+0x1052>
   15374:	81 e0       	ldi	r24, 0x01	; 1
   15376:	90 e0       	ldi	r25, 0x00	; 0
   15378:	c9 5e       	subi	r28, 0xE9	; 233
   1537a:	de 4f       	sbci	r29, 0xFE	; 254
   1537c:	99 83       	std	Y+1, r25	; 0x01
   1537e:	88 83       	st	Y, r24
   15380:	c7 51       	subi	r28, 0x17	; 23
   15382:	d1 40       	sbci	r29, 0x01	; 1
   15384:	ae 01       	movw	r20, r28
   15386:	49 5e       	subi	r20, 0xE9	; 233
   15388:	5e 4f       	sbci	r21, 0xFE	; 254
   1538a:	65 e1       	ldi	r22, 0x15	; 21
   1538c:	70 e3       	ldi	r23, 0x30	; 48
   1538e:	c8 01       	movw	r24, r16
   15390:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15394:	44 ed       	ldi	r20, 0xD4	; 212
   15396:	53 e0       	ldi	r21, 0x03	; 3
   15398:	67 e8       	ldi	r22, 0x87	; 135
   1539a:	71 e1       	ldi	r23, 0x11	; 17
   1539c:	c8 01       	movw	r24, r16
   1539e:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   153a2:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   153a6:	88 23       	and	r24, r24
   153a8:	81 f0       	breq	.+32     	; 0x153ca <_Z12Publish_Datav+0x108e>
   153aa:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   153ae:	67 e8       	ldi	r22, 0x87	; 135
   153b0:	71 e1       	ldi	r23, 0x11	; 17
   153b2:	83 e7       	ldi	r24, 0x73	; 115
   153b4:	9e e0       	ldi	r25, 0x0E	; 14
   153b6:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   153ba:	81 11       	cpse	r24, r1
   153bc:	fe c0       	rjmp	.+508    	; 0x155ba <_Z12Publish_Datav+0x127e>
   153be:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   153c2:	81 50       	subi	r24, 0x01	; 1
   153c4:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   153c8:	ec cf       	rjmp	.-40     	; 0x153a2 <_Z12Publish_Datav+0x1066>
   153ca:	8c e3       	ldi	r24, 0x3C	; 60
   153cc:	90 e0       	ldi	r25, 0x00	; 0
   153ce:	1a c1       	rjmp	.+564    	; 0x15604 <_Z12Publish_Datav+0x12c8>
   153d0:	84 ed       	ldi	r24, 0xD4	; 212
   153d2:	93 e0       	ldi	r25, 0x03	; 3
   153d4:	e7 e8       	ldi	r30, 0x87	; 135
   153d6:	f1 e1       	ldi	r31, 0x11	; 17
   153d8:	df 01       	movw	r26, r30
   153da:	9c 01       	movw	r18, r24
   153dc:	1d 92       	st	X+, r1
   153de:	21 50       	subi	r18, 0x01	; 1
   153e0:	30 40       	sbci	r19, 0x00	; 0
   153e2:	e1 f7       	brne	.-8      	; 0x153dc <_Z12Publish_Datav+0x10a0>
   153e4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   153e8:	81 30       	cpi	r24, 0x01	; 1
   153ea:	51 f4       	brne	.+20     	; 0x15400 <_Z12Publish_Datav+0x10c4>
   153ec:	69 ef       	ldi	r22, 0xF9	; 249
   153ee:	7f e2       	ldi	r23, 0x2F	; 47
   153f0:	8f e6       	ldi	r24, 0x6F	; 111
   153f2:	96 e1       	ldi	r25, 0x16	; 22
   153f4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   153f8:	8f e6       	ldi	r24, 0x6F	; 111
   153fa:	96 e1       	ldi	r25, 0x16	; 22
   153fc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15400:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   15404:	81 11       	cpse	r24, r1
   15406:	4d c0       	rjmp	.+154    	; 0x154a2 <_Z12Publish_Datav+0x1166>
   15408:	80 91 22 16 	lds	r24, 0x1622	; 0x801622 <_sRuble_Parameters+0xbd>
   1540c:	88 23       	and	r24, r24
   1540e:	09 f4       	brne	.+2      	; 0x15412 <_Z12Publish_Datav+0x10d6>
   15410:	42 c0       	rjmp	.+132    	; 0x15496 <_Z12Publish_Datav+0x115a>
   15412:	80 90 6d 15 	lds	r8, 0x156D	; 0x80156d <_sRuble_Parameters+0x8>
   15416:	90 90 6e 15 	lds	r9, 0x156E	; 0x80156e <_sRuble_Parameters+0x9>
   1541a:	a0 90 6f 15 	lds	r10, 0x156F	; 0x80156f <_sRuble_Parameters+0xa>
   1541e:	c0 90 70 15 	lds	r12, 0x1570	; 0x801570 <_sRuble_Parameters+0xb>
   15422:	d0 90 71 15 	lds	r13, 0x1571	; 0x801571 <_sRuble_Parameters+0xc>
   15426:	b0 91 72 15 	lds	r27, 0x1572	; 0x801572 <_sRuble_Parameters+0xd>
   1542a:	f0 91 73 15 	lds	r31, 0x1573	; 0x801573 <_sRuble_Parameters+0xe>
   1542e:	e0 91 74 15 	lds	r30, 0x1574	; 0x801574 <_sRuble_Parameters+0xf>
   15432:	94 01       	movw	r18, r8
   15434:	4a 2d       	mov	r20, r10
   15436:	5c 2d       	mov	r21, r12
   15438:	6d 2d       	mov	r22, r13
   1543a:	7b 2f       	mov	r23, r27
   1543c:	8f 2f       	mov	r24, r31
   1543e:	9e 2f       	mov	r25, r30
   15440:	a2 e0       	ldi	r26, 0x02	; 2
   15442:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   15446:	81 f0       	breq	.+32     	; 0x15468 <_Z12Publish_Datav+0x112c>
   15448:	a4 e0       	ldi	r26, 0x04	; 4
   1544a:	c9 5e       	subi	r28, 0xE9	; 233
   1544c:	de 4f       	sbci	r29, 0xFE	; 254
   1544e:	19 82       	std	Y+1, r1	; 0x01
   15450:	18 82       	st	Y, r1
   15452:	c7 51       	subi	r28, 0x17	; 23
   15454:	d1 40       	sbci	r29, 0x01	; 1
   15456:	0e 94 a4 e7 	call	0x1cf48	; 0x1cf48 <__cmpdi2_s8>
   1545a:	a1 f4       	brne	.+40     	; 0x15484 <_Z12Publish_Datav+0x1148>
   1545c:	ae 01       	movw	r20, r28
   1545e:	49 5e       	subi	r20, 0xE9	; 233
   15460:	5e 4f       	sbci	r21, 0xFE	; 254
   15462:	61 ef       	ldi	r22, 0xF1	; 241
   15464:	7f e2       	ldi	r23, 0x2F	; 47
   15466:	13 c0       	rjmp	.+38     	; 0x1548e <_Z12Publish_Datav+0x1152>
   15468:	81 e0       	ldi	r24, 0x01	; 1
   1546a:	90 e0       	ldi	r25, 0x00	; 0
   1546c:	c9 5e       	subi	r28, 0xE9	; 233
   1546e:	de 4f       	sbci	r29, 0xFE	; 254
   15470:	99 83       	std	Y+1, r25	; 0x01
   15472:	88 83       	st	Y, r24
   15474:	c7 51       	subi	r28, 0x17	; 23
   15476:	d1 40       	sbci	r29, 0x01	; 1
   15478:	ae 01       	movw	r20, r28
   1547a:	49 5e       	subi	r20, 0xE9	; 233
   1547c:	5e 4f       	sbci	r21, 0xFE	; 254
   1547e:	69 ee       	ldi	r22, 0xE9	; 233
   15480:	7f e2       	ldi	r23, 0x2F	; 47
   15482:	05 c0       	rjmp	.+10     	; 0x1548e <_Z12Publish_Datav+0x1152>
   15484:	ae 01       	movw	r20, r28
   15486:	49 5e       	subi	r20, 0xE9	; 233
   15488:	5e 4f       	sbci	r21, 0xFE	; 254
   1548a:	61 ee       	ldi	r22, 0xE1	; 225
   1548c:	7f e2       	ldi	r23, 0x2F	; 47
   1548e:	c8 01       	movw	r24, r16
   15490:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15494:	21 c0       	rjmp	.+66     	; 0x154d8 <_Z12Publish_Datav+0x119c>
   15496:	8a e0       	ldi	r24, 0x0A	; 10
   15498:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   1549c:	89 2b       	or	r24, r25
   1549e:	71 f4       	brne	.+28     	; 0x154bc <_Z12Publish_Datav+0x1180>
   154a0:	04 c0       	rjmp	.+8      	; 0x154aa <_Z12Publish_Datav+0x116e>
   154a2:	80 91 25 16 	lds	r24, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
   154a6:	81 30       	cpi	r24, 0x01	; 1
   154a8:	49 f4       	brne	.+18     	; 0x154bc <_Z12Publish_Datav+0x1180>
   154aa:	81 e0       	ldi	r24, 0x01	; 1
   154ac:	90 e0       	ldi	r25, 0x00	; 0
   154ae:	c9 5e       	subi	r28, 0xE9	; 233
   154b0:	de 4f       	sbci	r29, 0xFE	; 254
   154b2:	99 83       	std	Y+1, r25	; 0x01
   154b4:	88 83       	st	Y, r24
   154b6:	c7 51       	subi	r28, 0x17	; 23
   154b8:	d1 40       	sbci	r29, 0x01	; 1
   154ba:	06 c0       	rjmp	.+12     	; 0x154c8 <_Z12Publish_Datav+0x118c>
   154bc:	c9 5e       	subi	r28, 0xE9	; 233
   154be:	de 4f       	sbci	r29, 0xFE	; 254
   154c0:	19 82       	std	Y+1, r1	; 0x01
   154c2:	18 82       	st	Y, r1
   154c4:	c7 51       	subi	r28, 0x17	; 23
   154c6:	d1 40       	sbci	r29, 0x01	; 1
   154c8:	ae 01       	movw	r20, r28
   154ca:	49 5e       	subi	r20, 0xE9	; 233
   154cc:	5e 4f       	sbci	r21, 0xFE	; 254
   154ce:	69 e9       	ldi	r22, 0x99	; 153
   154d0:	77 e0       	ldi	r23, 0x07	; 7
   154d2:	c8 01       	movw	r24, r16
   154d4:	0e 94 f0 89 	call	0x113e0	; 0x113e0 <_ZN11ArduinoJson10JsonObject3setIiKcEEbPT0_RKT_>
   154d8:	c9 5e       	subi	r28, 0xE9	; 233
   154da:	de 4f       	sbci	r29, 0xFE	; 254
   154dc:	19 82       	std	Y+1, r1	; 0x01
   154de:	18 82       	st	Y, r1
   154e0:	c7 51       	subi	r28, 0x17	; 23
   154e2:	d1 40       	sbci	r29, 0x01	; 1
   154e4:	ae 01       	movw	r20, r28
   154e6:	49 5e       	subi	r20, 0xE9	; 233
   154e8:	5e 4f       	sbci	r21, 0xFE	; 254
   154ea:	6a ed       	ldi	r22, 0xDA	; 218
   154ec:	7f e2       	ldi	r23, 0x2F	; 47
   154ee:	c8 01       	movw	r24, r16
   154f0:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   154f4:	8b e1       	ldi	r24, 0x1B	; 27
   154f6:	8e 9d       	mul	r24, r14
   154f8:	a0 01       	movw	r20, r0
   154fa:	8f 9d       	mul	r24, r15
   154fc:	50 0d       	add	r21, r0
   154fe:	11 24       	eor	r1, r1
   15500:	fa 01       	movw	r30, r20
   15502:	e1 56       	subi	r30, 0x61	; 97
   15504:	f0 4f       	sbci	r31, 0xF0	; 240
   15506:	83 81       	ldd	r24, Z+3	; 0x03
   15508:	94 81       	ldd	r25, Z+4	; 0x04
   1550a:	d7 01       	movw	r26, r14
   1550c:	ab 59       	subi	r26, 0x9B	; 155
   1550e:	bf 4f       	sbci	r27, 0xFF	; 255
   15510:	6d 01       	movw	r12, r26
   15512:	00 97       	sbiw	r24, 0x00	; 0
   15514:	01 f1       	breq	.+64     	; 0x15556 <_Z12Publish_Datav+0x121a>
   15516:	6c e3       	ldi	r22, 0x3C	; 60
   15518:	70 e0       	ldi	r23, 0x00	; 0
   1551a:	0e 94 1e e7 	call	0x1ce3c	; 0x1ce3c <__udivmodhi4>
   1551e:	6f 5f       	subi	r22, 0xFF	; 255
   15520:	7f 4f       	sbci	r23, 0xFF	; 255
   15522:	c9 5e       	subi	r28, 0xE9	; 233
   15524:	de 4f       	sbci	r29, 0xFE	; 254
   15526:	79 83       	std	Y+1, r23	; 0x01
   15528:	68 83       	st	Y, r22
   1552a:	c7 51       	subi	r28, 0x17	; 23
   1552c:	d1 40       	sbci	r29, 0x01	; 1
   1552e:	ae 01       	movw	r20, r28
   15530:	49 5e       	subi	r20, 0xE9	; 233
   15532:	5e 4f       	sbci	r21, 0xFE	; 254
   15534:	65 ed       	ldi	r22, 0xD5	; 213
   15536:	7f e2       	ldi	r23, 0x2F	; 47
   15538:	c8 01       	movw	r24, r16
   1553a:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   1553e:	c9 5e       	subi	r28, 0xE9	; 233
   15540:	de 4f       	sbci	r29, 0xFE	; 254
   15542:	d9 82       	std	Y+1, r13	; 0x01
   15544:	c8 82       	st	Y, r12
   15546:	c7 51       	subi	r28, 0x17	; 23
   15548:	d1 40       	sbci	r29, 0x01	; 1
   1554a:	ae 01       	movw	r20, r28
   1554c:	49 5e       	subi	r20, 0xE9	; 233
   1554e:	5e 4f       	sbci	r21, 0xFE	; 254
   15550:	60 ed       	ldi	r22, 0xD0	; 208
   15552:	7f e2       	ldi	r23, 0x2F	; 47
   15554:	12 c0       	rjmp	.+36     	; 0x1557a <_Z12Publish_Datav+0x123e>
   15556:	4e 55       	subi	r20, 0x5E	; 94
   15558:	50 4f       	sbci	r21, 0xF0	; 240
   1555a:	6b ec       	ldi	r22, 0xCB	; 203
   1555c:	7f e2       	ldi	r23, 0x2F	; 47
   1555e:	c8 01       	movw	r24, r16
   15560:	0e 94 22 89 	call	0x11244	; 0x11244 <_ZN11ArduinoJson10JsonObject3setIjK19__FlashStringHelperEEbPT0_RKT_>
   15564:	c9 5e       	subi	r28, 0xE9	; 233
   15566:	de 4f       	sbci	r29, 0xFE	; 254
   15568:	d9 82       	std	Y+1, r13	; 0x01
   1556a:	c8 82       	st	Y, r12
   1556c:	c7 51       	subi	r28, 0x17	; 23
   1556e:	d1 40       	sbci	r29, 0x01	; 1
   15570:	ae 01       	movw	r20, r28
   15572:	49 5e       	subi	r20, 0xE9	; 233
   15574:	5e 4f       	sbci	r21, 0xFE	; 254
   15576:	66 ec       	ldi	r22, 0xC6	; 198
   15578:	7f e2       	ldi	r23, 0x2F	; 47
   1557a:	c8 01       	movw	r24, r16
   1557c:	0e 94 5a 89 	call	0x112b4	; 0x112b4 <_ZN11ArduinoJson10JsonObject3setIiK19__FlashStringHelperEEbPT0_RKT_>
   15580:	44 ed       	ldi	r20, 0xD4	; 212
   15582:	53 e0       	ldi	r21, 0x03	; 3
   15584:	67 e8       	ldi	r22, 0x87	; 135
   15586:	71 e1       	ldi	r23, 0x11	; 17
   15588:	c8 01       	movw	r24, r16
   1558a:	0e 94 2d 91 	call	0x1225a	; 0x1225a <_ZNK11ArduinoJson9Internals13JsonPrintableINS_10JsonObjectEE13prettyPrintToEPcj>
   1558e:	67 e8       	ldi	r22, 0x87	; 135
   15590:	71 e1       	ldi	r23, 0x11	; 17
   15592:	8f e6       	ldi	r24, 0x6F	; 111
   15594:	96 e1       	ldi	r25, 0x16	; 22
   15596:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1559a:	0c e3       	ldi	r16, 0x3C	; 60
   1559c:	10 e0       	ldi	r17, 0x00	; 0
   1559e:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   155a2:	88 23       	and	r24, r24
   155a4:	99 f1       	breq	.+102    	; 0x1560c <_Z12Publish_Datav+0x12d0>
   155a6:	10 92 95 0c 	sts	0x0C95, r1	; 0x800c95 <plot_schedule_topic>
   155aa:	67 e8       	ldi	r22, 0x87	; 135
   155ac:	71 e1       	ldi	r23, 0x11	; 17
   155ae:	81 ec       	ldi	r24, 0xC1	; 193
   155b0:	9d e0       	ldi	r25, 0x0D	; 13
   155b2:	0e 94 8d 6e 	call	0xdd1a	; 0xdd1a <_Z12MQTT_PublishPhS_>
   155b6:	88 23       	and	r24, r24
   155b8:	71 f0       	breq	.+28     	; 0x155d6 <_Z12Publish_Datav+0x129a>
   155ba:	8b e1       	ldi	r24, 0x1B	; 27
   155bc:	8e 9d       	mul	r24, r14
   155be:	f0 01       	movw	r30, r0
   155c0:	8f 9d       	mul	r24, r15
   155c2:	f0 0d       	add	r31, r0
   155c4:	11 24       	eor	r1, r1
   155c6:	e1 56       	subi	r30, 0x61	; 97
   155c8:	f0 4f       	sbci	r31, 0xF0	; 240
   155ca:	12 8e       	std	Z+26, r1	; 0x1a
   155cc:	81 e0       	ldi	r24, 0x01	; 1
   155ce:	8b 0d       	add	r24, r11
   155d0:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   155d4:	1b c0       	rjmp	.+54     	; 0x1560c <_Z12Publish_Datav+0x12d0>
   155d6:	10 93 98 0f 	sts	0x0F98, r17	; 0x800f98 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   155da:	00 93 97 0f 	sts	0x0F97, r16	; 0x800f97 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   155de:	80 91 9a 0f 	lds	r24, 0x0F9A	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   155e2:	81 50       	subi	r24, 0x01	; 1
   155e4:	80 93 9a 0f 	sts	0x0F9A, r24	; 0x800f9a <_ZZ12Publish_DatavE5retry>
   155e8:	da cf       	rjmp	.-76     	; 0x1559e <_Z12Publish_Datav+0x1262>
   155ea:	bf ef       	ldi	r27, 0xFF	; 255
   155ec:	eb 1a       	sub	r14, r27
   155ee:	fb 0a       	sbc	r15, r27
   155f0:	eb e1       	ldi	r30, 0x1B	; 27
   155f2:	ce 0e       	add	r12, r30
   155f4:	d1 1c       	adc	r13, r1
   155f6:	fe e0       	ldi	r31, 0x0E	; 14
   155f8:	ef 16       	cp	r14, r31
   155fa:	f1 04       	cpc	r15, r1
   155fc:	09 f0       	breq	.+2      	; 0x15600 <_Z12Publish_Datav+0x12c4>
   155fe:	f3 cd       	rjmp	.-1050   	; 0x151e6 <_Z12Publish_Datav+0xeaa>
   15600:	05 c0       	rjmp	.+10     	; 0x1560c <_Z12Publish_Datav+0x12d0>
   15602:	01 97       	sbiw	r24, 0x01	; 1
   15604:	90 93 98 0f 	sts	0x0F98, r25	; 0x800f98 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer+0x1>
   15608:	80 93 97 0f 	sts	0x0F97, r24	; 0x800f97 <_ZZ12Publish_DatavE28extra_plot_data_resend_timer>
   1560c:	c2 5c       	subi	r28, 0xC2	; 194
   1560e:	de 4f       	sbci	r29, 0xFE	; 254
   15610:	0f b6       	in	r0, 0x3f	; 63
   15612:	f8 94       	cli
   15614:	de bf       	out	0x3e, r29	; 62
   15616:	0f be       	out	0x3f, r0	; 63
   15618:	cd bf       	out	0x3d, r28	; 61
   1561a:	df 91       	pop	r29
   1561c:	cf 91       	pop	r28
   1561e:	1f 91       	pop	r17
   15620:	0f 91       	pop	r16
   15622:	ff 90       	pop	r15
   15624:	ef 90       	pop	r14
   15626:	df 90       	pop	r13
   15628:	cf 90       	pop	r12
   1562a:	bf 90       	pop	r11
   1562c:	af 90       	pop	r10
   1562e:	9f 90       	pop	r9
   15630:	8f 90       	pop	r8
   15632:	08 95       	ret

00015634 <_Z22Valve_Grouping_Handlerh>:
   15634:	2f 92       	push	r2
   15636:	3f 92       	push	r3
   15638:	4f 92       	push	r4
   1563a:	5f 92       	push	r5
   1563c:	6f 92       	push	r6
   1563e:	7f 92       	push	r7
   15640:	8f 92       	push	r8
   15642:	9f 92       	push	r9
   15644:	af 92       	push	r10
   15646:	bf 92       	push	r11
   15648:	cf 92       	push	r12
   1564a:	df 92       	push	r13
   1564c:	ef 92       	push	r14
   1564e:	ff 92       	push	r15
   15650:	0f 93       	push	r16
   15652:	1f 93       	push	r17
   15654:	cf 93       	push	r28
   15656:	df 93       	push	r29
   15658:	cd b7       	in	r28, 0x3d	; 61
   1565a:	de b7       	in	r29, 0x3e	; 62
   1565c:	e8 97       	sbiw	r28, 0x38	; 56
   1565e:	0f b6       	in	r0, 0x3f	; 63
   15660:	f8 94       	cli
   15662:	de bf       	out	0x3e, r29	; 62
   15664:	0f be       	out	0x3f, r0	; 63
   15666:	cd bf       	out	0x3d, r28	; 61
   15668:	58 2e       	mov	r5, r24
   1566a:	88 e0       	ldi	r24, 0x08	; 8
   1566c:	eb e6       	ldi	r30, 0x6B	; 107
   1566e:	f2 e0       	ldi	r31, 0x02	; 2
   15670:	de 01       	movw	r26, r28
   15672:	9b 96       	adiw	r26, 0x2b	; 43
   15674:	01 90       	ld	r0, Z+
   15676:	0d 92       	st	X+, r0
   15678:	8a 95       	dec	r24
   1567a:	e1 f7       	brne	.-8      	; 0x15674 <_Z22Valve_Grouping_Handlerh+0x40>
   1567c:	9e 01       	movw	r18, r28
   1567e:	2f 5f       	subi	r18, 0xFF	; 255
   15680:	3f 4f       	sbci	r19, 0xFF	; 255
   15682:	19 01       	movw	r2, r18
   15684:	8a e2       	ldi	r24, 0x2A	; 42
   15686:	d9 01       	movw	r26, r18
   15688:	1d 92       	st	X+, r1
   1568a:	8a 95       	dec	r24
   1568c:	e9 f7       	brne	.-6      	; 0x15688 <_Z22Valve_Grouping_Handlerh+0x54>
   1568e:	8d ef       	ldi	r24, 0xFD	; 253
   15690:	a8 2e       	mov	r10, r24
   15692:	8c e0       	ldi	r24, 0x0C	; 12
   15694:	b8 2e       	mov	r11, r24
   15696:	41 e5       	ldi	r20, 0x51	; 81
   15698:	5d e0       	ldi	r21, 0x0D	; 13
   1569a:	75 01       	movw	r14, r10
   1569c:	10 e0       	ldi	r17, 0x00	; 0
   1569e:	f7 01       	movw	r30, r14
   156a0:	80 81       	ld	r24, Z
   156a2:	81 50       	subi	r24, 0x01	; 1
   156a4:	8e 30       	cpi	r24, 0x0E	; 14
   156a6:	d8 f5       	brcc	.+118    	; 0x1571e <_Z22Valve_Grouping_Handlerh+0xea>
   156a8:	d7 01       	movw	r26, r14
   156aa:	25 e0       	ldi	r18, 0x05	; 5
   156ac:	89 81       	ldd	r24, Y+1	; 0x01
   156ae:	88 23       	and	r24, r24
   156b0:	f9 f0       	breq	.+62     	; 0x156f0 <_Z22Valve_Grouping_Handlerh+0xbc>
   156b2:	00 e0       	ldi	r16, 0x00	; 0
   156b4:	30 e0       	ldi	r19, 0x00	; 0
   156b6:	83 2f       	mov	r24, r19
   156b8:	90 e0       	ldi	r25, 0x00	; 0
   156ba:	b1 01       	movw	r22, r2
   156bc:	68 0f       	add	r22, r24
   156be:	79 1f       	adc	r23, r25
   156c0:	fb 01       	movw	r30, r22
   156c2:	70 81       	ld	r23, Z
   156c4:	77 23       	and	r23, r23
   156c6:	d1 f0       	breq	.+52     	; 0x156fc <_Z22Valve_Grouping_Handlerh+0xc8>
   156c8:	11 96       	adiw	r26, 0x01	; 1
   156ca:	6c 91       	ld	r22, X
   156cc:	11 97       	sbiw	r26, 0x01	; 1
   156ce:	66 23       	and	r22, r22
   156d0:	69 f0       	breq	.+26     	; 0x156ec <_Z22Valve_Grouping_Handlerh+0xb8>
   156d2:	76 17       	cp	r23, r22
   156d4:	99 f0       	breq	.+38     	; 0x156fc <_Z22Valve_Grouping_Handlerh+0xc8>
   156d6:	62 e0       	ldi	r22, 0x02	; 2
   156d8:	70 e0       	ldi	r23, 0x00	; 0
   156da:	6c 0f       	add	r22, r28
   156dc:	7d 1f       	adc	r23, r29
   156de:	86 0f       	add	r24, r22
   156e0:	97 1f       	adc	r25, r23
   156e2:	fc 01       	movw	r30, r24
   156e4:	80 81       	ld	r24, Z
   156e6:	81 11       	cpse	r24, r1
   156e8:	01 c0       	rjmp	.+2      	; 0x156ec <_Z22Valve_Grouping_Handlerh+0xb8>
   156ea:	01 e0       	ldi	r16, 0x01	; 1
   156ec:	3f 5f       	subi	r19, 0xFF	; 255
   156ee:	e3 cf       	rjmp	.-58     	; 0x156b6 <_Z22Valve_Grouping_Handlerh+0x82>
   156f0:	11 96       	adiw	r26, 0x01	; 1
   156f2:	8c 91       	ld	r24, X
   156f4:	11 97       	sbiw	r26, 0x01	; 1
   156f6:	81 11       	cpse	r24, r1
   156f8:	03 c0       	rjmp	.+6      	; 0x15700 <_Z22Valve_Grouping_Handlerh+0xcc>
   156fa:	0d c0       	rjmp	.+26     	; 0x15716 <_Z22Valve_Grouping_Handlerh+0xe2>
   156fc:	00 23       	and	r16, r16
   156fe:	59 f0       	breq	.+22     	; 0x15716 <_Z22Valve_Grouping_Handlerh+0xe2>
   15700:	11 96       	adiw	r26, 0x01	; 1
   15702:	8c 91       	ld	r24, X
   15704:	11 97       	sbiw	r26, 0x01	; 1
   15706:	8d 30       	cpi	r24, 0x0D	; 13
   15708:	30 f4       	brcc	.+12     	; 0x15716 <_Z22Valve_Grouping_Handlerh+0xe2>
   1570a:	b1 01       	movw	r22, r2
   1570c:	61 0f       	add	r22, r17
   1570e:	71 1d       	adc	r23, r1
   15710:	fb 01       	movw	r30, r22
   15712:	80 83       	st	Z, r24
   15714:	1f 5f       	subi	r17, 0xFF	; 255
   15716:	21 50       	subi	r18, 0x01	; 1
   15718:	11 96       	adiw	r26, 0x01	; 1
   1571a:	21 11       	cpse	r18, r1
   1571c:	c7 cf       	rjmp	.-114    	; 0x156ac <_Z22Valve_Grouping_Handlerh+0x78>
   1571e:	f6 e0       	ldi	r31, 0x06	; 6
   15720:	ef 0e       	add	r14, r31
   15722:	f1 1c       	adc	r15, r1
   15724:	4e 15       	cp	r20, r14
   15726:	5f 05       	cpc	r21, r15
   15728:	09 f0       	breq	.+2      	; 0x1572c <_Z22Valve_Grouping_Handlerh+0xf8>
   1572a:	b9 cf       	rjmp	.-142    	; 0x1569e <_Z22Valve_Grouping_Handlerh+0x6a>
   1572c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15730:	81 30       	cpi	r24, 0x01	; 1
   15732:	51 f4       	brne	.+20     	; 0x15748 <_Z22Valve_Grouping_Handlerh+0x114>
   15734:	69 e2       	ldi	r22, 0x29	; 41
   15736:	70 e4       	ldi	r23, 0x40	; 64
   15738:	8f e6       	ldi	r24, 0x6F	; 111
   1573a:	96 e1       	ldi	r25, 0x16	; 22
   1573c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15740:	8f e6       	ldi	r24, 0x6F	; 111
   15742:	96 e1       	ldi	r25, 0x16	; 22
   15744:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15748:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1574c:	81 30       	cpi	r24, 0x01	; 1
   1574e:	e9 f4       	brne	.+58     	; 0x1578a <_Z22Valve_Grouping_Handlerh+0x156>
   15750:	00 e0       	ldi	r16, 0x00	; 0
   15752:	71 01       	movw	r14, r2
   15754:	e0 0e       	add	r14, r16
   15756:	f1 1c       	adc	r15, r1
   15758:	d7 01       	movw	r26, r14
   1575a:	8c 91       	ld	r24, X
   1575c:	88 23       	and	r24, r24
   1575e:	a9 f0       	breq	.+42     	; 0x1578a <_Z22Valve_Grouping_Handlerh+0x156>
   15760:	67 e1       	ldi	r22, 0x17	; 23
   15762:	70 e4       	ldi	r23, 0x40	; 64
   15764:	8f e6       	ldi	r24, 0x6F	; 111
   15766:	96 e1       	ldi	r25, 0x16	; 22
   15768:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1576c:	f7 01       	movw	r30, r14
   1576e:	60 81       	ld	r22, Z
   15770:	70 e0       	ldi	r23, 0x00	; 0
   15772:	4a e0       	ldi	r20, 0x0A	; 10
   15774:	50 e0       	ldi	r21, 0x00	; 0
   15776:	8f e6       	ldi	r24, 0x6F	; 111
   15778:	96 e1       	ldi	r25, 0x16	; 22
   1577a:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
   1577e:	8f e6       	ldi	r24, 0x6F	; 111
   15780:	96 e1       	ldi	r25, 0x16	; 22
   15782:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   15786:	0f 5f       	subi	r16, 0xFF	; 255
   15788:	e4 cf       	rjmp	.-56     	; 0x15752 <_Z22Valve_Grouping_Handlerh+0x11e>
   1578a:	f3 e0       	ldi	r31, 0x03	; 3
   1578c:	5f 12       	cpse	r5, r31
   1578e:	81 c0       	rjmp	.+258    	; 0x15892 <_Z22Valve_Grouping_Handlerh+0x25e>
   15790:	0f e9       	ldi	r16, 0x9F	; 159
   15792:	e0 2e       	mov	r14, r16
   15794:	0f e0       	ldi	r16, 0x0F	; 15
   15796:	f0 2e       	mov	r15, r16
   15798:	49 e1       	ldi	r20, 0x19	; 25
   1579a:	51 e1       	ldi	r21, 0x11	; 17
   1579c:	d7 01       	movw	r26, r14
   1579e:	11 96       	adiw	r26, 0x01	; 1
   157a0:	8c 91       	ld	r24, X
   157a2:	11 97       	sbiw	r26, 0x01	; 1
   157a4:	85 56       	subi	r24, 0x65	; 101
   157a6:	8e 30       	cpi	r24, 0x0E	; 14
   157a8:	d0 f5       	brcc	.+116    	; 0x1581e <_Z22Valve_Grouping_Handlerh+0x1ea>
   157aa:	25 e0       	ldi	r18, 0x05	; 5
   157ac:	89 81       	ldd	r24, Y+1	; 0x01
   157ae:	88 23       	and	r24, r24
   157b0:	f9 f0       	breq	.+62     	; 0x157f0 <_Z22Valve_Grouping_Handlerh+0x1bc>
   157b2:	00 e0       	ldi	r16, 0x00	; 0
   157b4:	30 e0       	ldi	r19, 0x00	; 0
   157b6:	83 2f       	mov	r24, r19
   157b8:	90 e0       	ldi	r25, 0x00	; 0
   157ba:	b1 01       	movw	r22, r2
   157bc:	68 0f       	add	r22, r24
   157be:	79 1f       	adc	r23, r25
   157c0:	fb 01       	movw	r30, r22
   157c2:	70 81       	ld	r23, Z
   157c4:	77 23       	and	r23, r23
   157c6:	d1 f0       	breq	.+52     	; 0x157fc <_Z22Valve_Grouping_Handlerh+0x1c8>
   157c8:	15 96       	adiw	r26, 0x05	; 5
   157ca:	6c 91       	ld	r22, X
   157cc:	15 97       	sbiw	r26, 0x05	; 5
   157ce:	66 23       	and	r22, r22
   157d0:	69 f0       	breq	.+26     	; 0x157ec <_Z22Valve_Grouping_Handlerh+0x1b8>
   157d2:	76 17       	cp	r23, r22
   157d4:	99 f0       	breq	.+38     	; 0x157fc <_Z22Valve_Grouping_Handlerh+0x1c8>
   157d6:	62 e0       	ldi	r22, 0x02	; 2
   157d8:	70 e0       	ldi	r23, 0x00	; 0
   157da:	6c 0f       	add	r22, r28
   157dc:	7d 1f       	adc	r23, r29
   157de:	86 0f       	add	r24, r22
   157e0:	97 1f       	adc	r25, r23
   157e2:	fc 01       	movw	r30, r24
   157e4:	80 81       	ld	r24, Z
   157e6:	81 11       	cpse	r24, r1
   157e8:	01 c0       	rjmp	.+2      	; 0x157ec <_Z22Valve_Grouping_Handlerh+0x1b8>
   157ea:	01 e0       	ldi	r16, 0x01	; 1
   157ec:	3f 5f       	subi	r19, 0xFF	; 255
   157ee:	e3 cf       	rjmp	.-58     	; 0x157b6 <_Z22Valve_Grouping_Handlerh+0x182>
   157f0:	15 96       	adiw	r26, 0x05	; 5
   157f2:	8c 91       	ld	r24, X
   157f4:	15 97       	sbiw	r26, 0x05	; 5
   157f6:	81 11       	cpse	r24, r1
   157f8:	03 c0       	rjmp	.+6      	; 0x15800 <_Z22Valve_Grouping_Handlerh+0x1cc>
   157fa:	0d c0       	rjmp	.+26     	; 0x15816 <_Z22Valve_Grouping_Handlerh+0x1e2>
   157fc:	00 23       	and	r16, r16
   157fe:	59 f0       	breq	.+22     	; 0x15816 <_Z22Valve_Grouping_Handlerh+0x1e2>
   15800:	15 96       	adiw	r26, 0x05	; 5
   15802:	8c 91       	ld	r24, X
   15804:	15 97       	sbiw	r26, 0x05	; 5
   15806:	8d 30       	cpi	r24, 0x0D	; 13
   15808:	30 f4       	brcc	.+12     	; 0x15816 <_Z22Valve_Grouping_Handlerh+0x1e2>
   1580a:	b1 01       	movw	r22, r2
   1580c:	61 0f       	add	r22, r17
   1580e:	71 1d       	adc	r23, r1
   15810:	fb 01       	movw	r30, r22
   15812:	80 83       	st	Z, r24
   15814:	1f 5f       	subi	r17, 0xFF	; 255
   15816:	21 50       	subi	r18, 0x01	; 1
   15818:	11 96       	adiw	r26, 0x01	; 1
   1581a:	21 11       	cpse	r18, r1
   1581c:	c7 cf       	rjmp	.-114    	; 0x157ac <_Z22Valve_Grouping_Handlerh+0x178>
   1581e:	fb e1       	ldi	r31, 0x1B	; 27
   15820:	ef 0e       	add	r14, r31
   15822:	f1 1c       	adc	r15, r1
   15824:	4e 15       	cp	r20, r14
   15826:	5f 05       	cpc	r21, r15
   15828:	09 f0       	breq	.+2      	; 0x1582c <_Z22Valve_Grouping_Handlerh+0x1f8>
   1582a:	b8 cf       	rjmp	.-144    	; 0x1579c <_Z22Valve_Grouping_Handlerh+0x168>
   1582c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15830:	81 30       	cpi	r24, 0x01	; 1
   15832:	51 f4       	brne	.+20     	; 0x15848 <_Z22Valve_Grouping_Handlerh+0x214>
   15834:	66 e0       	ldi	r22, 0x06	; 6
   15836:	70 e4       	ldi	r23, 0x40	; 64
   15838:	8f e6       	ldi	r24, 0x6F	; 111
   1583a:	96 e1       	ldi	r25, 0x16	; 22
   1583c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15840:	8f e6       	ldi	r24, 0x6F	; 111
   15842:	96 e1       	ldi	r25, 0x16	; 22
   15844:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15848:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1584c:	81 30       	cpi	r24, 0x01	; 1
   1584e:	91 f5       	brne	.+100    	; 0x158b4 <_Z22Valve_Grouping_Handlerh+0x280>
   15850:	10 e0       	ldi	r17, 0x00	; 0
   15852:	71 01       	movw	r14, r2
   15854:	e1 0e       	add	r14, r17
   15856:	f1 1c       	adc	r15, r1
   15858:	d7 01       	movw	r26, r14
   1585a:	8c 91       	ld	r24, X
   1585c:	88 23       	and	r24, r24
   1585e:	e1 f0       	breq	.+56     	; 0x15898 <_Z22Valve_Grouping_Handlerh+0x264>
   15860:	64 ef       	ldi	r22, 0xF4	; 244
   15862:	7f e3       	ldi	r23, 0x3F	; 63
   15864:	8f e6       	ldi	r24, 0x6F	; 111
   15866:	96 e1       	ldi	r25, 0x16	; 22
   15868:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1586c:	f7 01       	movw	r30, r14
   1586e:	60 81       	ld	r22, Z
   15870:	70 e0       	ldi	r23, 0x00	; 0
   15872:	4a e0       	ldi	r20, 0x0A	; 10
   15874:	50 e0       	ldi	r21, 0x00	; 0
   15876:	8f e6       	ldi	r24, 0x6F	; 111
   15878:	96 e1       	ldi	r25, 0x16	; 22
   1587a:	0e 94 b3 d1 	call	0x1a366	; 0x1a366 <_ZN5Print5printEii>
   1587e:	8f e6       	ldi	r24, 0x6F	; 111
   15880:	96 e1       	ldi	r25, 0x16	; 22
   15882:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15886:	8f e6       	ldi	r24, 0x6F	; 111
   15888:	96 e1       	ldi	r25, 0x16	; 22
   1588a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   1588e:	1f 5f       	subi	r17, 0xFF	; 255
   15890:	e0 cf       	rjmp	.-64     	; 0x15852 <_Z22Valve_Grouping_Handlerh+0x21e>
   15892:	65 e0       	ldi	r22, 0x05	; 5
   15894:	56 12       	cpse	r5, r22
   15896:	6c c1       	rjmp	.+728    	; 0x15b70 <_Z22Valve_Grouping_Handlerh+0x53c>
   15898:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1589c:	81 30       	cpi	r24, 0x01	; 1
   1589e:	51 f4       	brne	.+20     	; 0x158b4 <_Z22Valve_Grouping_Handlerh+0x280>
   158a0:	69 ec       	ldi	r22, 0xC9	; 201
   158a2:	7f e3       	ldi	r23, 0x3F	; 63
   158a4:	8f e6       	ldi	r24, 0x6F	; 111
   158a6:	96 e1       	ldi	r25, 0x16	; 22
   158a8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   158ac:	8f e6       	ldi	r24, 0x6F	; 111
   158ae:	96 e1       	ldi	r25, 0x16	; 22
   158b0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   158b4:	07 ee       	ldi	r16, 0xE7	; 231
   158b6:	1b e0       	ldi	r17, 0x0B	; 11
   158b8:	b4 e0       	ldi	r27, 0x04	; 4
   158ba:	cb 2e       	mov	r12, r27
   158bc:	d1 2c       	mov	r13, r1
   158be:	e1 2c       	mov	r14, r1
   158c0:	f1 2c       	mov	r15, r1
   158c2:	d8 01       	movw	r26, r16
   158c4:	8c 91       	ld	r24, X
   158c6:	88 23       	and	r24, r24
   158c8:	29 f1       	breq	.+74     	; 0x15914 <_Z22Valve_Grouping_Handlerh+0x2e0>
   158ca:	71 2c       	mov	r7, r1
   158cc:	40 e0       	ldi	r20, 0x00	; 0
   158ce:	3a c0       	rjmp	.+116    	; 0x15944 <_Z22Valve_Grouping_Handlerh+0x310>
   158d0:	9e 01       	movw	r18, r28
   158d2:	25 5d       	subi	r18, 0xD5	; 213
   158d4:	3f 4f       	sbci	r19, 0xFF	; 255
   158d6:	3c ab       	std	Y+52, r19	; 0x34
   158d8:	2b ab       	std	Y+51, r18	; 0x33
   158da:	99 24       	eor	r9, r9
   158dc:	93 94       	inc	r9
   158de:	b7 01       	movw	r22, r14
   158e0:	6f 5f       	subi	r22, 0xFF	; 255
   158e2:	7f 4f       	sbci	r23, 0xFF	; 255
   158e4:	7e ab       	std	Y+54, r23	; 0x36
   158e6:	6d ab       	std	Y+53, r22	; 0x35
   158e8:	7d e0       	ldi	r23, 0x0D	; 13
   158ea:	7e 9d       	mul	r23, r14
   158ec:	c0 01       	movw	r24, r0
   158ee:	7f 9d       	mul	r23, r15
   158f0:	90 0d       	add	r25, r0
   158f2:	11 24       	eor	r1, r1
   158f4:	dc 01       	movw	r26, r24
   158f6:	a9 51       	subi	r26, 0x19	; 25
   158f8:	b4 4f       	sbci	r27, 0xF4	; 244
   158fa:	b8 af       	std	Y+56, r27	; 0x38
   158fc:	af ab       	std	Y+55, r26	; 0x37
   158fe:	eb a9       	ldd	r30, Y+51	; 0x33
   15900:	fc a9       	ldd	r31, Y+52	; 0x34
   15902:	81 91       	ld	r24, Z+
   15904:	fc ab       	std	Y+52, r31	; 0x34
   15906:	eb ab       	std	Y+51, r30	; 0x33
   15908:	87 21       	and	r24, r7
   1590a:	49 f5       	brne	.+82     	; 0x1595e <_Z22Valve_Grouping_Handlerh+0x32a>
   1590c:	93 94       	inc	r9
   1590e:	f4 e0       	ldi	r31, 0x04	; 4
   15910:	9f 12       	cpse	r9, r31
   15912:	f5 cf       	rjmp	.-22     	; 0x158fe <_Z22Valve_Grouping_Handlerh+0x2ca>
   15914:	bf ef       	ldi	r27, 0xFF	; 255
   15916:	eb 1a       	sub	r14, r27
   15918:	fb 0a       	sbc	r15, r27
   1591a:	03 5f       	subi	r16, 0xF3	; 243
   1591c:	1f 4f       	sbci	r17, 0xFF	; 255
   1591e:	e3 e0       	ldi	r30, 0x03	; 3
   15920:	ce 0e       	add	r12, r30
   15922:	d1 1c       	adc	r13, r1
   15924:	f3 e0       	ldi	r31, 0x03	; 3
   15926:	ef 16       	cp	r14, r31
   15928:	f1 04       	cpc	r15, r1
   1592a:	59 f6       	brne	.-106    	; 0x158c2 <_Z22Valve_Grouping_Handlerh+0x28e>
   1592c:	d4 c0       	rjmp	.+424    	; 0x15ad6 <_Z22Valve_Grouping_Handlerh+0x4a2>
   1592e:	82 17       	cp	r24, r18
   15930:	93 07       	cpc	r25, r19
   15932:	11 f4       	brne	.+4      	; 0x15938 <_Z22Valve_Grouping_Handlerh+0x304>
   15934:	50 81       	ld	r21, Z
   15936:	75 2a       	or	r7, r21
   15938:	01 96       	adiw	r24, 0x01	; 1
   1593a:	31 96       	adiw	r30, 0x01	; 1
   1593c:	c8 16       	cp	r12, r24
   1593e:	d9 06       	cpc	r13, r25
   15940:	b1 f7       	brne	.-20     	; 0x1592e <_Z22Valve_Grouping_Handlerh+0x2fa>
   15942:	4f 5f       	subi	r20, 0xFF	; 255
   15944:	f1 01       	movw	r30, r2
   15946:	e4 0f       	add	r30, r20
   15948:	f1 1d       	adc	r31, r1
   1594a:	20 81       	ld	r18, Z
   1594c:	22 23       	and	r18, r18
   1594e:	09 f4       	brne	.+2      	; 0x15952 <_Z22Valve_Grouping_Handlerh+0x31e>
   15950:	bf cf       	rjmp	.-130    	; 0x158d0 <_Z22Valve_Grouping_Handlerh+0x29c>
   15952:	c6 01       	movw	r24, r12
   15954:	03 97       	sbiw	r24, 0x03	; 3
   15956:	fe 01       	movw	r30, r28
   15958:	bb 96       	adiw	r30, 0x2b	; 43
   1595a:	30 e0       	ldi	r19, 0x00	; 0
   1595c:	e8 cf       	rjmp	.-48     	; 0x1592e <_Z22Valve_Grouping_Handlerh+0x2fa>
   1595e:	81 2c       	mov	r8, r1
   15960:	66 24       	eor	r6, r6
   15962:	63 94       	inc	r6
   15964:	83 94       	inc	r8
   15966:	ac ea       	ldi	r26, 0xAC	; 172
   15968:	b5 e1       	ldi	r27, 0x15	; 21
   1596a:	e4 e1       	ldi	r30, 0x14	; 20
   1596c:	1d 92       	st	X+, r1
   1596e:	ea 95       	dec	r30
   15970:	e9 f7       	brne	.-6      	; 0x1596c <_Z22Valve_Grouping_Handlerh+0x338>
   15972:	d8 01       	movw	r26, r16
   15974:	11 96       	adiw	r26, 0x01	; 1
   15976:	8c 91       	ld	r24, X
   15978:	11 97       	sbiw	r26, 0x01	; 1
   1597a:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
   1597e:	12 96       	adiw	r26, 0x02	; 2
   15980:	8c 91       	ld	r24, X
   15982:	12 97       	sbiw	r26, 0x02	; 2
   15984:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
   15988:	13 96       	adiw	r26, 0x03	; 3
   1598a:	8c 91       	ld	r24, X
   1598c:	13 97       	sbiw	r26, 0x03	; 3
   1598e:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
   15992:	14 96       	adiw	r26, 0x04	; 4
   15994:	8c 91       	ld	r24, X
   15996:	14 97       	sbiw	r26, 0x04	; 4
   15998:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
   1599c:	15 96       	adiw	r26, 0x05	; 5
   1599e:	8c 91       	ld	r24, X
   159a0:	15 97       	sbiw	r26, 0x05	; 5
   159a2:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
   159a6:	16 96       	adiw	r26, 0x06	; 6
   159a8:	8c 91       	ld	r24, X
   159aa:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
   159ae:	b2 e0       	ldi	r27, 0x02	; 2
   159b0:	b0 93 b2 15 	sts	0x15B2, r27	; 0x8015b2 <_sRuble_Parameters+0x4d>
   159b4:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   159b8:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
   159bc:	90 92 b7 15 	sts	0x15B7, r9	; 0x8015b7 <_sRuble_Parameters+0x52>
   159c0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   159c4:	81 30       	cpi	r24, 0x01	; 1
   159c6:	41 f5       	brne	.+80     	; 0x15a18 <_Z22Valve_Grouping_Handlerh+0x3e4>
   159c8:	66 ea       	ldi	r22, 0xA6	; 166
   159ca:	7f e3       	ldi	r23, 0x3F	; 63
   159cc:	8f e6       	ldi	r24, 0x6F	; 111
   159ce:	96 e1       	ldi	r25, 0x16	; 22
   159d0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   159d4:	4a e0       	ldi	r20, 0x0A	; 10
   159d6:	50 e0       	ldi	r21, 0x00	; 0
   159d8:	6d a9       	ldd	r22, Y+53	; 0x35
   159da:	7e a9       	ldd	r23, Y+54	; 0x36
   159dc:	8f e6       	ldi	r24, 0x6F	; 111
   159de:	96 e1       	ldi	r25, 0x16	; 22
   159e0:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
   159e4:	8f e6       	ldi	r24, 0x6F	; 111
   159e6:	96 e1       	ldi	r25, 0x16	; 22
   159e8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   159ec:	61 e9       	ldi	r22, 0x91	; 145
   159ee:	7f e3       	ldi	r23, 0x3F	; 63
   159f0:	8f e6       	ldi	r24, 0x6F	; 111
   159f2:	96 e1       	ldi	r25, 0x16	; 22
   159f4:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   159f8:	4c e0       	ldi	r20, 0x0C	; 12
   159fa:	50 e0       	ldi	r21, 0x00	; 0
   159fc:	6c ea       	ldi	r22, 0xAC	; 172
   159fe:	75 e1       	ldi	r23, 0x15	; 21
   15a00:	8f e6       	ldi	r24, 0x6F	; 111
   15a02:	96 e1       	ldi	r25, 0x16	; 22
   15a04:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   15a08:	8f e6       	ldi	r24, 0x6F	; 111
   15a0a:	96 e1       	ldi	r25, 0x16	; 22
   15a0c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   15a10:	8f e6       	ldi	r24, 0x6F	; 111
   15a12:	96 e1       	ldi	r25, 0x16	; 22
   15a14:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15a18:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   15a1c:	8c e0       	ldi	r24, 0x0C	; 12
   15a1e:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   15a22:	88 eb       	ldi	r24, 0xB8	; 184
   15a24:	9b e0       	ldi	r25, 0x0B	; 11
   15a26:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   15a2a:	88 23       	and	r24, r24
   15a2c:	09 f4       	brne	.+2      	; 0x15a30 <_Z22Valve_Grouping_Handlerh+0x3fc>
   15a2e:	40 c0       	rjmp	.+128    	; 0x15ab0 <_Z22Valve_Grouping_Handlerh+0x47c>
   15a30:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   15a34:	90 e0       	ldi	r25, 0x00	; 0
   15a36:	80 e0       	ldi	r24, 0x00	; 0
   15a38:	28 2f       	mov	r18, r24
   15a3a:	30 e0       	ldi	r19, 0x00	; 0
   15a3c:	ef a9       	ldd	r30, Y+55	; 0x37
   15a3e:	f8 ad       	ldd	r31, Y+56	; 0x38
   15a40:	e2 0f       	add	r30, r18
   15a42:	f3 1f       	adc	r31, r19
   15a44:	d9 01       	movw	r26, r18
   15a46:	a0 54       	subi	r26, 0x40	; 64
   15a48:	ba 4e       	sbci	r27, 0xEA	; 234
   15a4a:	41 81       	ldd	r20, Z+1	; 0x01
   15a4c:	2c 91       	ld	r18, X
   15a4e:	42 17       	cp	r20, r18
   15a50:	11 f0       	breq	.+4      	; 0x15a56 <_Z22Valve_Grouping_Handlerh+0x422>
   15a52:	90 e0       	ldi	r25, 0x00	; 0
   15a54:	86 e0       	ldi	r24, 0x06	; 6
   15a56:	9f 5f       	subi	r25, 0xFF	; 255
   15a58:	8f 5f       	subi	r24, 0xFF	; 255
   15a5a:	86 30       	cpi	r24, 0x06	; 6
   15a5c:	68 f3       	brcs	.-38     	; 0x15a38 <_Z22Valve_Grouping_Handlerh+0x404>
   15a5e:	96 30       	cpi	r25, 0x06	; 6
   15a60:	c1 f4       	brne	.+48     	; 0x15a92 <_Z22Valve_Grouping_Handlerh+0x45e>
   15a62:	f8 01       	movw	r30, r16
   15a64:	63 86       	std	Z+11, r6	; 0x0b
   15a66:	20 91 c8 15 	lds	r18, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   15a6a:	22 87       	std	Z+10, r18	; 0x0a
   15a6c:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   15a70:	90 e0       	ldi	r25, 0x00	; 0
   15a72:	98 2f       	mov	r25, r24
   15a74:	88 27       	eor	r24, r24
   15a76:	30 91 ca 15 	lds	r19, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   15a7a:	83 2b       	or	r24, r19
   15a7c:	91 87       	std	Z+9, r25	; 0x09
   15a7e:	80 87       	std	Z+8, r24	; 0x08
   15a80:	22 23       	and	r18, r18
   15a82:	e9 f0       	breq	.+58     	; 0x15abe <_Z22Valve_Grouping_Handlerh+0x48a>
   15a84:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15a88:	81 30       	cpi	r24, 0x01	; 1
   15a8a:	d9 f4       	brne	.+54     	; 0x15ac2 <_Z22Valve_Grouping_Handlerh+0x48e>
   15a8c:	6c e6       	ldi	r22, 0x6C	; 108
   15a8e:	7f e3       	ldi	r23, 0x3F	; 63
   15a90:	06 c0       	rjmp	.+12     	; 0x15a9e <_Z22Valve_Grouping_Handlerh+0x46a>
   15a92:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15a96:	81 30       	cpi	r24, 0x01	; 1
   15a98:	a1 f4       	brne	.+40     	; 0x15ac2 <_Z22Valve_Grouping_Handlerh+0x48e>
   15a9a:	6b e4       	ldi	r22, 0x4B	; 75
   15a9c:	7f e3       	ldi	r23, 0x3F	; 63
   15a9e:	8f e6       	ldi	r24, 0x6F	; 111
   15aa0:	96 e1       	ldi	r25, 0x16	; 22
   15aa2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15aa6:	8f e6       	ldi	r24, 0x6F	; 111
   15aa8:	96 e1       	ldi	r25, 0x16	; 22
   15aaa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15aae:	09 c0       	rjmp	.+18     	; 0x15ac2 <_Z22Valve_Grouping_Handlerh+0x48e>
   15ab0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15ab4:	81 30       	cpi	r24, 0x01	; 1
   15ab6:	29 f4       	brne	.+10     	; 0x15ac2 <_Z22Valve_Grouping_Handlerh+0x48e>
   15ab8:	64 e2       	ldi	r22, 0x24	; 36
   15aba:	7f e3       	ldi	r23, 0x3F	; 63
   15abc:	f0 cf       	rjmp	.-32     	; 0x15a9e <_Z22Valve_Grouping_Handlerh+0x46a>
   15abe:	e3 e0       	ldi	r30, 0x03	; 3
   15ac0:	8e 2e       	mov	r8, r30
   15ac2:	68 ee       	ldi	r22, 0xE8	; 232
   15ac4:	73 e0       	ldi	r23, 0x03	; 3
   15ac6:	80 e0       	ldi	r24, 0x00	; 0
   15ac8:	90 e0       	ldi	r25, 0x00	; 0
   15aca:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   15ace:	f3 e0       	ldi	r31, 0x03	; 3
   15ad0:	8f 12       	cpse	r8, r31
   15ad2:	48 cf       	rjmp	.-368    	; 0x15964 <_Z22Valve_Grouping_Handlerh+0x330>
   15ad4:	1b cf       	rjmp	.-458    	; 0x1590c <_Z22Valve_Grouping_Handlerh+0x2d8>
   15ad6:	23 e0       	ldi	r18, 0x03	; 3
   15ad8:	52 16       	cp	r5, r18
   15ada:	11 f4       	brne	.+4      	; 0x15ae0 <_Z22Valve_Grouping_Handlerh+0x4ac>
   15adc:	0c 94 b8 b5 	jmp	0x16b70	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   15ae0:	35 e0       	ldi	r19, 0x05	; 5
   15ae2:	53 12       	cpse	r5, r19
   15ae4:	45 c0       	rjmp	.+138    	; 0x15b70 <_Z22Valve_Grouping_Handlerh+0x53c>
   15ae6:	7e e0       	ldi	r23, 0x0E	; 14
   15ae8:	f7 2e       	mov	r15, r23
   15aea:	00 e0       	ldi	r16, 0x00	; 0
   15aec:	10 e0       	ldi	r17, 0x00	; 0
   15aee:	f5 01       	movw	r30, r10
   15af0:	e0 0f       	add	r30, r16
   15af2:	f1 1f       	adc	r31, r17
   15af4:	e1 81       	ldd	r30, Z+1	; 0x01
   15af6:	ed 30       	cpi	r30, 0x0D	; 13
   15af8:	68 f0       	brcs	.+26     	; 0x15b14 <_Z22Valve_Grouping_Handlerh+0x4e0>
   15afa:	f0 e0       	ldi	r31, 0x00	; 0
   15afc:	e8 51       	subi	r30, 0x18	; 24
   15afe:	fa 4e       	sbci	r31, 0xEA	; 234
   15b00:	61 e0       	ldi	r22, 0x01	; 1
   15b02:	80 81       	ld	r24, Z
   15b04:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   15b08:	68 ec       	ldi	r22, 0xC8	; 200
   15b0a:	70 e0       	ldi	r23, 0x00	; 0
   15b0c:	80 e0       	ldi	r24, 0x00	; 0
   15b0e:	90 e0       	ldi	r25, 0x00	; 0
   15b10:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   15b14:	0f 5f       	subi	r16, 0xFF	; 255
   15b16:	1f 4f       	sbci	r17, 0xFF	; 255
   15b18:	05 30       	cpi	r16, 0x05	; 5
   15b1a:	11 05       	cpc	r17, r1
   15b1c:	41 f7       	brne	.-48     	; 0x15aee <_Z22Valve_Grouping_Handlerh+0x4ba>
   15b1e:	fa 94       	dec	r15
   15b20:	46 e0       	ldi	r20, 0x06	; 6
   15b22:	a4 0e       	add	r10, r20
   15b24:	b1 1c       	adc	r11, r1
   15b26:	f1 10       	cpse	r15, r1
   15b28:	e0 cf       	rjmp	.-64     	; 0x15aea <_Z22Valve_Grouping_Handlerh+0x4b6>
   15b2a:	80 91 f1 0f 	lds	r24, 0x0FF1	; 0x800ff1 <_sExtra_Plot+0x52>
   15b2e:	88 36       	cpi	r24, 0x68	; 104
   15b30:	11 f0       	breq	.+4      	; 0x15b36 <_Z22Valve_Grouping_Handlerh+0x502>
   15b32:	0c 94 b8 b5 	jmp	0x16b70	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   15b36:	05 ef       	ldi	r16, 0xF5	; 245
   15b38:	1f e0       	ldi	r17, 0x0F	; 15
   15b3a:	6a ef       	ldi	r22, 0xFA	; 250
   15b3c:	e6 2e       	mov	r14, r22
   15b3e:	6f e0       	ldi	r22, 0x0F	; 15
   15b40:	f6 2e       	mov	r15, r22
   15b42:	d8 01       	movw	r26, r16
   15b44:	ed 91       	ld	r30, X+
   15b46:	8d 01       	movw	r16, r26
   15b48:	ed 30       	cpi	r30, 0x0D	; 13
   15b4a:	68 f0       	brcs	.+26     	; 0x15b66 <_Z22Valve_Grouping_Handlerh+0x532>
   15b4c:	f0 e0       	ldi	r31, 0x00	; 0
   15b4e:	e8 51       	subi	r30, 0x18	; 24
   15b50:	fa 4e       	sbci	r31, 0xEA	; 234
   15b52:	61 e0       	ldi	r22, 0x01	; 1
   15b54:	80 81       	ld	r24, Z
   15b56:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   15b5a:	68 ec       	ldi	r22, 0xC8	; 200
   15b5c:	70 e0       	ldi	r23, 0x00	; 0
   15b5e:	80 e0       	ldi	r24, 0x00	; 0
   15b60:	90 e0       	ldi	r25, 0x00	; 0
   15b62:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   15b66:	e0 16       	cp	r14, r16
   15b68:	f1 06       	cpc	r15, r17
   15b6a:	59 f7       	brne	.-42     	; 0x15b42 <_Z22Valve_Grouping_Handlerh+0x50e>
   15b6c:	0c 94 b8 b5 	jmp	0x16b70	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   15b70:	b1 e0       	ldi	r27, 0x01	; 1
   15b72:	5b 12       	cpse	r5, r27
   15b74:	1b c1       	rjmp	.+566    	; 0x15dac <_Z22Valve_Grouping_Handlerh+0x778>
   15b76:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15b7a:	81 30       	cpi	r24, 0x01	; 1
   15b7c:	51 f4       	brne	.+20     	; 0x15b92 <_Z22Valve_Grouping_Handlerh+0x55e>
   15b7e:	69 ef       	ldi	r22, 0xF9	; 249
   15b80:	7e e3       	ldi	r23, 0x3E	; 62
   15b82:	8f e6       	ldi	r24, 0x6F	; 111
   15b84:	96 e1       	ldi	r25, 0x16	; 22
   15b86:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15b8a:	8f e6       	ldi	r24, 0x6F	; 111
   15b8c:	96 e1       	ldi	r25, 0x16	; 22
   15b8e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15b92:	07 ee       	ldi	r16, 0xE7	; 231
   15b94:	1b e0       	ldi	r17, 0x0B	; 11
   15b96:	44 e0       	ldi	r20, 0x04	; 4
   15b98:	c4 2e       	mov	r12, r20
   15b9a:	d1 2c       	mov	r13, r1
   15b9c:	e1 2c       	mov	r14, r1
   15b9e:	f1 2c       	mov	r15, r1
   15ba0:	54 e1       	ldi	r21, 0x14	; 20
   15ba2:	85 2e       	mov	r8, r21
   15ba4:	f8 01       	movw	r30, r16
   15ba6:	82 85       	ldd	r24, Z+10	; 0x0a
   15ba8:	88 23       	and	r24, r24
   15baa:	09 f1       	breq	.+66     	; 0x15bee <_Z22Valve_Grouping_Handlerh+0x5ba>
   15bac:	91 2c       	mov	r9, r1
   15bae:	40 e0       	ldi	r20, 0x00	; 0
   15bb0:	36 c0       	rjmp	.+108    	; 0x15c1e <_Z22Valve_Grouping_Handlerh+0x5ea>
   15bb2:	be 01       	movw	r22, r28
   15bb4:	65 5d       	subi	r22, 0xD5	; 213
   15bb6:	7f 4f       	sbci	r23, 0xFF	; 255
   15bb8:	3b 01       	movw	r6, r22
   15bba:	bb 24       	eor	r11, r11
   15bbc:	b3 94       	inc	r11
   15bbe:	c7 01       	movw	r24, r14
   15bc0:	01 96       	adiw	r24, 0x01	; 1
   15bc2:	9c ab       	std	Y+52, r25	; 0x34
   15bc4:	8b ab       	std	Y+51, r24	; 0x33
   15bc6:	ad e0       	ldi	r26, 0x0D	; 13
   15bc8:	ae 9d       	mul	r26, r14
   15bca:	c0 01       	movw	r24, r0
   15bcc:	af 9d       	mul	r26, r15
   15bce:	90 0d       	add	r25, r0
   15bd0:	11 24       	eor	r1, r1
   15bd2:	fc 01       	movw	r30, r24
   15bd4:	e9 51       	subi	r30, 0x19	; 25
   15bd6:	f4 4f       	sbci	r31, 0xF4	; 244
   15bd8:	fe ab       	std	Y+54, r31	; 0x36
   15bda:	ed ab       	std	Y+53, r30	; 0x35
   15bdc:	d3 01       	movw	r26, r6
   15bde:	8d 91       	ld	r24, X+
   15be0:	3d 01       	movw	r6, r26
   15be2:	89 21       	and	r24, r9
   15be4:	41 f5       	brne	.+80     	; 0x15c36 <_Z22Valve_Grouping_Handlerh+0x602>
   15be6:	b3 94       	inc	r11
   15be8:	b4 e0       	ldi	r27, 0x04	; 4
   15bea:	bb 12       	cpse	r11, r27
   15bec:	f7 cf       	rjmp	.-18     	; 0x15bdc <_Z22Valve_Grouping_Handlerh+0x5a8>
   15bee:	ff ef       	ldi	r31, 0xFF	; 255
   15bf0:	ef 1a       	sub	r14, r31
   15bf2:	ff 0a       	sbc	r15, r31
   15bf4:	03 5f       	subi	r16, 0xF3	; 243
   15bf6:	1f 4f       	sbci	r17, 0xFF	; 255
   15bf8:	23 e0       	ldi	r18, 0x03	; 3
   15bfa:	c2 0e       	add	r12, r18
   15bfc:	d1 1c       	adc	r13, r1
   15bfe:	34 e0       	ldi	r19, 0x04	; 4
   15c00:	e3 16       	cp	r14, r19
   15c02:	f1 04       	cpc	r15, r1
   15c04:	79 f6       	brne	.-98     	; 0x15ba4 <_Z22Valve_Grouping_Handlerh+0x570>
   15c06:	d6 c0       	rjmp	.+428    	; 0x15db4 <_Z22Valve_Grouping_Handlerh+0x780>
   15c08:	28 17       	cp	r18, r24
   15c0a:	39 07       	cpc	r19, r25
   15c0c:	11 f4       	brne	.+4      	; 0x15c12 <_Z22Valve_Grouping_Handlerh+0x5de>
   15c0e:	50 81       	ld	r21, Z
   15c10:	95 2a       	or	r9, r21
   15c12:	01 96       	adiw	r24, 0x01	; 1
   15c14:	31 96       	adiw	r30, 0x01	; 1
   15c16:	c8 16       	cp	r12, r24
   15c18:	d9 06       	cpc	r13, r25
   15c1a:	b1 f7       	brne	.-20     	; 0x15c08 <_Z22Valve_Grouping_Handlerh+0x5d4>
   15c1c:	4f 5f       	subi	r20, 0xFF	; 255
   15c1e:	f1 01       	movw	r30, r2
   15c20:	e4 0f       	add	r30, r20
   15c22:	f1 1d       	adc	r31, r1
   15c24:	20 81       	ld	r18, Z
   15c26:	22 23       	and	r18, r18
   15c28:	21 f2       	breq	.-120    	; 0x15bb2 <_Z22Valve_Grouping_Handlerh+0x57e>
   15c2a:	c6 01       	movw	r24, r12
   15c2c:	03 97       	sbiw	r24, 0x03	; 3
   15c2e:	fe 01       	movw	r30, r28
   15c30:	bb 96       	adiw	r30, 0x2b	; 43
   15c32:	30 e0       	ldi	r19, 0x00	; 0
   15c34:	e9 cf       	rjmp	.-46     	; 0x15c08 <_Z22Valve_Grouping_Handlerh+0x5d4>
   15c36:	a1 2c       	mov	r10, r1
   15c38:	a3 94       	inc	r10
   15c3a:	ec ea       	ldi	r30, 0xAC	; 172
   15c3c:	f5 e1       	ldi	r31, 0x15	; 21
   15c3e:	28 2d       	mov	r18, r8
   15c40:	11 92       	st	Z+, r1
   15c42:	2a 95       	dec	r18
   15c44:	e9 f7       	brne	.-6      	; 0x15c40 <_Z22Valve_Grouping_Handlerh+0x60c>
   15c46:	d8 01       	movw	r26, r16
   15c48:	11 96       	adiw	r26, 0x01	; 1
   15c4a:	8c 91       	ld	r24, X
   15c4c:	11 97       	sbiw	r26, 0x01	; 1
   15c4e:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
   15c52:	12 96       	adiw	r26, 0x02	; 2
   15c54:	8c 91       	ld	r24, X
   15c56:	12 97       	sbiw	r26, 0x02	; 2
   15c58:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
   15c5c:	13 96       	adiw	r26, 0x03	; 3
   15c5e:	8c 91       	ld	r24, X
   15c60:	13 97       	sbiw	r26, 0x03	; 3
   15c62:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
   15c66:	14 96       	adiw	r26, 0x04	; 4
   15c68:	8c 91       	ld	r24, X
   15c6a:	14 97       	sbiw	r26, 0x04	; 4
   15c6c:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
   15c70:	15 96       	adiw	r26, 0x05	; 5
   15c72:	8c 91       	ld	r24, X
   15c74:	15 97       	sbiw	r26, 0x05	; 5
   15c76:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
   15c7a:	16 96       	adiw	r26, 0x06	; 6
   15c7c:	8c 91       	ld	r24, X
   15c7e:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
   15c82:	b2 e0       	ldi	r27, 0x02	; 2
   15c84:	b0 93 b2 15 	sts	0x15B2, r27	; 0x8015b2 <_sRuble_Parameters+0x4d>
   15c88:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   15c8c:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
   15c90:	b0 92 b7 15 	sts	0x15B7, r11	; 0x8015b7 <_sRuble_Parameters+0x52>
   15c94:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15c98:	81 30       	cpi	r24, 0x01	; 1
   15c9a:	41 f5       	brne	.+80     	; 0x15cec <_Z22Valve_Grouping_Handlerh+0x6b8>
   15c9c:	65 ed       	ldi	r22, 0xD5	; 213
   15c9e:	7e e3       	ldi	r23, 0x3E	; 62
   15ca0:	8f e6       	ldi	r24, 0x6F	; 111
   15ca2:	96 e1       	ldi	r25, 0x16	; 22
   15ca4:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15ca8:	4a e0       	ldi	r20, 0x0A	; 10
   15caa:	50 e0       	ldi	r21, 0x00	; 0
   15cac:	6b a9       	ldd	r22, Y+51	; 0x33
   15cae:	7c a9       	ldd	r23, Y+52	; 0x34
   15cb0:	8f e6       	ldi	r24, 0x6F	; 111
   15cb2:	96 e1       	ldi	r25, 0x16	; 22
   15cb4:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
   15cb8:	8f e6       	ldi	r24, 0x6F	; 111
   15cba:	96 e1       	ldi	r25, 0x16	; 22
   15cbc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15cc0:	60 ec       	ldi	r22, 0xC0	; 192
   15cc2:	7e e3       	ldi	r23, 0x3E	; 62
   15cc4:	8f e6       	ldi	r24, 0x6F	; 111
   15cc6:	96 e1       	ldi	r25, 0x16	; 22
   15cc8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15ccc:	46 e0       	ldi	r20, 0x06	; 6
   15cce:	50 e0       	ldi	r21, 0x00	; 0
   15cd0:	6c ea       	ldi	r22, 0xAC	; 172
   15cd2:	75 e1       	ldi	r23, 0x15	; 21
   15cd4:	8f e6       	ldi	r24, 0x6F	; 111
   15cd6:	96 e1       	ldi	r25, 0x16	; 22
   15cd8:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   15cdc:	8f e6       	ldi	r24, 0x6F	; 111
   15cde:	96 e1       	ldi	r25, 0x16	; 22
   15ce0:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   15ce4:	8f e6       	ldi	r24, 0x6F	; 111
   15ce6:	96 e1       	ldi	r25, 0x16	; 22
   15ce8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15cec:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   15cf0:	8c e0       	ldi	r24, 0x0C	; 12
   15cf2:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   15cf6:	88 eb       	ldi	r24, 0xB8	; 184
   15cf8:	9b e0       	ldi	r25, 0x0B	; 11
   15cfa:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   15cfe:	88 23       	and	r24, r24
   15d00:	09 f4       	brne	.+2      	; 0x15d04 <_Z22Valve_Grouping_Handlerh+0x6d0>
   15d02:	41 c0       	rjmp	.+130    	; 0x15d86 <_Z22Valve_Grouping_Handlerh+0x752>
   15d04:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   15d08:	90 e0       	ldi	r25, 0x00	; 0
   15d0a:	80 e0       	ldi	r24, 0x00	; 0
   15d0c:	28 2f       	mov	r18, r24
   15d0e:	30 e0       	ldi	r19, 0x00	; 0
   15d10:	ed a9       	ldd	r30, Y+53	; 0x35
   15d12:	fe a9       	ldd	r31, Y+54	; 0x36
   15d14:	e2 0f       	add	r30, r18
   15d16:	f3 1f       	adc	r31, r19
   15d18:	d9 01       	movw	r26, r18
   15d1a:	a0 54       	subi	r26, 0x40	; 64
   15d1c:	ba 4e       	sbci	r27, 0xEA	; 234
   15d1e:	41 81       	ldd	r20, Z+1	; 0x01
   15d20:	2c 91       	ld	r18, X
   15d22:	42 17       	cp	r20, r18
   15d24:	11 f0       	breq	.+4      	; 0x15d2a <_Z22Valve_Grouping_Handlerh+0x6f6>
   15d26:	90 e0       	ldi	r25, 0x00	; 0
   15d28:	86 e0       	ldi	r24, 0x06	; 6
   15d2a:	9f 5f       	subi	r25, 0xFF	; 255
   15d2c:	8f 5f       	subi	r24, 0xFF	; 255
   15d2e:	86 30       	cpi	r24, 0x06	; 6
   15d30:	68 f3       	brcs	.-38     	; 0x15d0c <_Z22Valve_Grouping_Handlerh+0x6d8>
   15d32:	96 30       	cpi	r25, 0x06	; 6
   15d34:	c9 f4       	brne	.+50     	; 0x15d68 <_Z22Valve_Grouping_Handlerh+0x734>
   15d36:	21 e0       	ldi	r18, 0x01	; 1
   15d38:	f8 01       	movw	r30, r16
   15d3a:	23 87       	std	Z+11, r18	; 0x0b
   15d3c:	20 91 c8 15 	lds	r18, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   15d40:	22 87       	std	Z+10, r18	; 0x0a
   15d42:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   15d46:	90 e0       	ldi	r25, 0x00	; 0
   15d48:	98 2f       	mov	r25, r24
   15d4a:	88 27       	eor	r24, r24
   15d4c:	30 91 ca 15 	lds	r19, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   15d50:	83 2b       	or	r24, r19
   15d52:	91 87       	std	Z+9, r25	; 0x09
   15d54:	80 87       	std	Z+8, r24	; 0x08
   15d56:	22 23       	and	r18, r18
   15d58:	e9 f0       	breq	.+58     	; 0x15d94 <_Z22Valve_Grouping_Handlerh+0x760>
   15d5a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15d5e:	81 30       	cpi	r24, 0x01	; 1
   15d60:	d9 f4       	brne	.+54     	; 0x15d98 <_Z22Valve_Grouping_Handlerh+0x764>
   15d62:	6a e9       	ldi	r22, 0x9A	; 154
   15d64:	7e e3       	ldi	r23, 0x3E	; 62
   15d66:	06 c0       	rjmp	.+12     	; 0x15d74 <_Z22Valve_Grouping_Handlerh+0x740>
   15d68:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15d6c:	81 30       	cpi	r24, 0x01	; 1
   15d6e:	a1 f4       	brne	.+40     	; 0x15d98 <_Z22Valve_Grouping_Handlerh+0x764>
   15d70:	68 e7       	ldi	r22, 0x78	; 120
   15d72:	7e e3       	ldi	r23, 0x3E	; 62
   15d74:	8f e6       	ldi	r24, 0x6F	; 111
   15d76:	96 e1       	ldi	r25, 0x16	; 22
   15d78:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15d7c:	8f e6       	ldi	r24, 0x6F	; 111
   15d7e:	96 e1       	ldi	r25, 0x16	; 22
   15d80:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15d84:	09 c0       	rjmp	.+18     	; 0x15d98 <_Z22Valve_Grouping_Handlerh+0x764>
   15d86:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15d8a:	81 30       	cpi	r24, 0x01	; 1
   15d8c:	29 f4       	brne	.+10     	; 0x15d98 <_Z22Valve_Grouping_Handlerh+0x764>
   15d8e:	6a e4       	ldi	r22, 0x4A	; 74
   15d90:	7e e3       	ldi	r23, 0x3E	; 62
   15d92:	f0 cf       	rjmp	.-32     	; 0x15d74 <_Z22Valve_Grouping_Handlerh+0x740>
   15d94:	93 e0       	ldi	r25, 0x03	; 3
   15d96:	a9 2e       	mov	r10, r25
   15d98:	68 ee       	ldi	r22, 0xE8	; 232
   15d9a:	73 e0       	ldi	r23, 0x03	; 3
   15d9c:	80 e0       	ldi	r24, 0x00	; 0
   15d9e:	90 e0       	ldi	r25, 0x00	; 0
   15da0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   15da4:	33 e0       	ldi	r19, 0x03	; 3
   15da6:	a3 12       	cpse	r10, r19
   15da8:	47 cf       	rjmp	.-370    	; 0x15c38 <_Z22Valve_Grouping_Handlerh+0x604>
   15daa:	1d cf       	rjmp	.-454    	; 0x15be6 <_Z22Valve_Grouping_Handlerh+0x5b2>
   15dac:	41 e0       	ldi	r20, 0x01	; 1
   15dae:	45 15       	cp	r20, r5
   15db0:	08 f4       	brcc	.+2      	; 0x15db4 <_Z22Valve_Grouping_Handlerh+0x780>
   15db2:	dd c6       	rjmp	.+3514   	; 0x16b6e <_Z22Valve_Grouping_Handlerh+0x153a>
   15db4:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   15db8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15dbc:	9f 30       	cpi	r25, 0x0F	; 15
   15dbe:	08 f0       	brcs	.+2      	; 0x15dc2 <_Z22Valve_Grouping_Handlerh+0x78e>
   15dc0:	73 c3       	rjmp	.+1766   	; 0x164a8 <_Z22Valve_Grouping_Handlerh+0xe74>
   15dc2:	81 30       	cpi	r24, 0x01	; 1
   15dc4:	51 f4       	brne	.+20     	; 0x15dda <_Z22Valve_Grouping_Handlerh+0x7a6>
   15dc6:	6c e3       	ldi	r22, 0x3C	; 60
   15dc8:	7e e3       	ldi	r23, 0x3E	; 62
   15dca:	8f e6       	ldi	r24, 0x6F	; 111
   15dcc:	96 e1       	ldi	r25, 0x16	; 22
   15dce:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   15dd2:	8f e6       	ldi	r24, 0x6F	; 111
   15dd4:	96 e1       	ldi	r25, 0x16	; 22
   15dd6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15dda:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15dde:	81 30       	cpi	r24, 0x01	; 1
   15de0:	c1 f5       	brne	.+112    	; 0x15e52 <_Z22Valve_Grouping_Handlerh+0x81e>
   15de2:	00 e0       	ldi	r16, 0x00	; 0
   15de4:	10 e0       	ldi	r17, 0x00	; 0
   15de6:	86 e0       	ldi	r24, 0x06	; 6
   15de8:	f8 2e       	mov	r15, r24
   15dea:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   15dee:	90 e0       	ldi	r25, 0x00	; 0
   15df0:	01 97       	sbiw	r24, 0x01	; 1
   15df2:	f8 9e       	mul	r15, r24
   15df4:	f0 01       	movw	r30, r0
   15df6:	f9 9e       	mul	r15, r25
   15df8:	f0 0d       	add	r31, r0
   15dfa:	11 24       	eor	r1, r1
   15dfc:	e3 50       	subi	r30, 0x03	; 3
   15dfe:	f3 4f       	sbci	r31, 0xF3	; 243
   15e00:	e0 0f       	add	r30, r16
   15e02:	f1 1f       	adc	r31, r17
   15e04:	4a e0       	ldi	r20, 0x0A	; 10
   15e06:	50 e0       	ldi	r21, 0x00	; 0
   15e08:	61 81       	ldd	r22, Z+1	; 0x01
   15e0a:	8f e6       	ldi	r24, 0x6F	; 111
   15e0c:	96 e1       	ldi	r25, 0x16	; 22
   15e0e:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   15e12:	6a e3       	ldi	r22, 0x3A	; 58
   15e14:	7e e3       	ldi	r23, 0x3E	; 62
   15e16:	8f e6       	ldi	r24, 0x6F	; 111
   15e18:	96 e1       	ldi	r25, 0x16	; 22
   15e1a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15e1e:	0f 5f       	subi	r16, 0xFF	; 255
   15e20:	1f 4f       	sbci	r17, 0xFF	; 255
   15e22:	05 30       	cpi	r16, 0x05	; 5
   15e24:	11 05       	cpc	r17, r1
   15e26:	09 f7       	brne	.-62     	; 0x15dea <_Z22Valve_Grouping_Handlerh+0x7b6>
   15e28:	64 e2       	ldi	r22, 0x24	; 36
   15e2a:	7e e3       	ldi	r23, 0x3E	; 62
   15e2c:	8f e6       	ldi	r24, 0x6F	; 111
   15e2e:	96 e1       	ldi	r25, 0x16	; 22
   15e30:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15e34:	60 91 d5 15 	lds	r22, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   15e38:	70 e0       	ldi	r23, 0x00	; 0
   15e3a:	61 50       	subi	r22, 0x01	; 1
   15e3c:	71 09       	sbc	r23, r1
   15e3e:	4a e0       	ldi	r20, 0x0A	; 10
   15e40:	50 e0       	ldi	r21, 0x00	; 0
   15e42:	8f e6       	ldi	r24, 0x6F	; 111
   15e44:	96 e1       	ldi	r25, 0x16	; 22
   15e46:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
   15e4a:	8f e6       	ldi	r24, 0x6F	; 111
   15e4c:	96 e1       	ldi	r25, 0x16	; 22
   15e4e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15e52:	00 e0       	ldi	r16, 0x00	; 0
   15e54:	10 e0       	ldi	r17, 0x00	; 0
   15e56:	81 e0       	ldi	r24, 0x01	; 1
   15e58:	85 25       	eor	r24, r5
   15e5a:	81 70       	andi	r24, 0x01	; 1
   15e5c:	8b ab       	std	Y+51, r24	; 0x33
   15e5e:	ad e0       	ldi	r26, 0x0D	; 13
   15e60:	2a 2e       	mov	r2, r26
   15e62:	b7 e8       	ldi	r27, 0x87	; 135
   15e64:	6b 2e       	mov	r6, r27
   15e66:	b1 e1       	ldi	r27, 0x11	; 17
   15e68:	7b 2e       	mov	r7, r27
   15e6a:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   15e6e:	90 e0       	ldi	r25, 0x00	; 0
   15e70:	01 97       	sbiw	r24, 0x01	; 1
   15e72:	66 e0       	ldi	r22, 0x06	; 6
   15e74:	68 9f       	mul	r22, r24
   15e76:	f0 01       	movw	r30, r0
   15e78:	69 9f       	mul	r22, r25
   15e7a:	f0 0d       	add	r31, r0
   15e7c:	11 24       	eor	r1, r1
   15e7e:	e3 50       	subi	r30, 0x03	; 3
   15e80:	f3 4f       	sbci	r31, 0xF3	; 243
   15e82:	e0 0f       	add	r30, r16
   15e84:	f1 1f       	adc	r31, r17
   15e86:	f1 80       	ldd	r15, Z+1	; 0x01
   15e88:	8f ef       	ldi	r24, 0xFF	; 255
   15e8a:	8f 0d       	add	r24, r15
   15e8c:	8c 30       	cpi	r24, 0x0C	; 12
   15e8e:	08 f0       	brcs	.+2      	; 0x15e92 <_Z22Valve_Grouping_Handlerh+0x85e>
   15e90:	d2 c2       	rjmp	.+1444   	; 0x16436 <_Z22Valve_Grouping_Handlerh+0xe02>
   15e92:	73 e0       	ldi	r23, 0x03	; 3
   15e94:	7f 15       	cp	r23, r15
   15e96:	a8 f4       	brcc	.+42     	; 0x15ec2 <_Z22Valve_Grouping_Handlerh+0x88e>
   15e98:	8f 2d       	mov	r24, r15
   15e9a:	63 e0       	ldi	r22, 0x03	; 3
   15e9c:	0e 94 12 e7 	call	0x1ce24	; 0x1ce24 <__udivmodqi4>
   15ea0:	2b ea       	ldi	r18, 0xAB	; 171
   15ea2:	f2 9e       	mul	r15, r18
   15ea4:	21 2d       	mov	r18, r1
   15ea6:	11 24       	eor	r1, r1
   15ea8:	99 23       	and	r25, r25
   15eaa:	31 f0       	breq	.+12     	; 0x15eb8 <_Z22Valve_Grouping_Handlerh+0x884>
   15eac:	26 95       	lsr	r18
   15eae:	ee 24       	eor	r14, r14
   15eb0:	e3 94       	inc	r14
   15eb2:	e2 0e       	add	r14, r18
   15eb4:	f9 2e       	mov	r15, r25
   15eb6:	07 c0       	rjmp	.+14     	; 0x15ec6 <_Z22Valve_Grouping_Handlerh+0x892>
   15eb8:	e2 2e       	mov	r14, r18
   15eba:	e6 94       	lsr	r14
   15ebc:	f3 e0       	ldi	r31, 0x03	; 3
   15ebe:	ff 2e       	mov	r15, r31
   15ec0:	02 c0       	rjmp	.+4      	; 0x15ec6 <_Z22Valve_Grouping_Handlerh+0x892>
   15ec2:	ee 24       	eor	r14, r14
   15ec4:	e3 94       	inc	r14
   15ec6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15eca:	81 30       	cpi	r24, 0x01	; 1
   15ecc:	89 f4       	brne	.+34     	; 0x15ef0 <_Z22Valve_Grouping_Handlerh+0x8bc>
   15ece:	60 e1       	ldi	r22, 0x10	; 16
   15ed0:	7e e3       	ldi	r23, 0x3E	; 62
   15ed2:	8f e6       	ldi	r24, 0x6F	; 111
   15ed4:	96 e1       	ldi	r25, 0x16	; 22
   15ed6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15eda:	4a e0       	ldi	r20, 0x0A	; 10
   15edc:	50 e0       	ldi	r21, 0x00	; 0
   15ede:	6e 2d       	mov	r22, r14
   15ee0:	8f e6       	ldi	r24, 0x6F	; 111
   15ee2:	96 e1       	ldi	r25, 0x16	; 22
   15ee4:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   15ee8:	8f e6       	ldi	r24, 0x6F	; 111
   15eea:	96 e1       	ldi	r25, 0x16	; 22
   15eec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15ef0:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   15ef4:	81 11       	cpse	r24, r1
   15ef6:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   15efa:	84 e1       	ldi	r24, 0x14	; 20
   15efc:	ac ea       	ldi	r26, 0xAC	; 172
   15efe:	b5 e1       	ldi	r27, 0x15	; 21
   15f00:	1d 92       	st	X+, r1
   15f02:	8a 95       	dec	r24
   15f04:	e9 f7       	brne	.-6      	; 0x15f00 <_Z22Valve_Grouping_Handlerh+0x8cc>
   15f06:	2e 2d       	mov	r18, r14
   15f08:	30 e0       	ldi	r19, 0x00	; 0
   15f0a:	21 50       	subi	r18, 0x01	; 1
   15f0c:	31 09       	sbc	r19, r1
   15f0e:	b7 e0       	ldi	r27, 0x07	; 7
   15f10:	b2 9f       	mul	r27, r18
   15f12:	c0 01       	movw	r24, r0
   15f14:	b3 9f       	mul	r27, r19
   15f16:	90 0d       	add	r25, r0
   15f18:	11 24       	eor	r1, r1
   15f1a:	8b 59       	subi	r24, 0x9B	; 155
   15f1c:	9a 4e       	sbci	r25, 0xEA	; 234
   15f1e:	fc 01       	movw	r30, r24
   15f20:	ec 58       	subi	r30, 0x8C	; 140
   15f22:	ff 4f       	sbci	r31, 0xFF	; 255
   15f24:	20 81       	ld	r18, Z
   15f26:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
   15f2a:	31 96       	adiw	r30, 0x01	; 1
   15f2c:	20 81       	ld	r18, Z
   15f2e:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
   15f32:	31 96       	adiw	r30, 0x01	; 1
   15f34:	20 81       	ld	r18, Z
   15f36:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
   15f3a:	31 96       	adiw	r30, 0x01	; 1
   15f3c:	20 81       	ld	r18, Z
   15f3e:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
   15f42:	31 96       	adiw	r30, 0x01	; 1
   15f44:	20 81       	ld	r18, Z
   15f46:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
   15f4a:	31 96       	adiw	r30, 0x01	; 1
   15f4c:	20 81       	ld	r18, Z
   15f4e:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
   15f52:	22 e0       	ldi	r18, 0x02	; 2
   15f54:	20 93 b2 15 	sts	0x15B2, r18	; 0x8015b2 <_sRuble_Parameters+0x4d>
   15f58:	50 92 b3 15 	sts	0x15B3, r5	; 0x8015b3 <_sRuble_Parameters+0x4e>
   15f5c:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   15f60:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
   15f64:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   15f68:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
   15f6c:	f0 92 b7 15 	sts	0x15B7, r15	; 0x8015b7 <_sRuble_Parameters+0x52>
   15f70:	40 e0       	ldi	r20, 0x00	; 0
   15f72:	50 e0       	ldi	r21, 0x00	; 0
   15f74:	d4 2e       	mov	r13, r20
   15f76:	e1 2c       	mov	r14, r1
   15f78:	f1 2c       	mov	r15, r1
   15f7a:	24 9e       	mul	r2, r20
   15f7c:	b0 01       	movw	r22, r0
   15f7e:	25 9e       	mul	r2, r21
   15f80:	70 0d       	add	r23, r0
   15f82:	11 24       	eor	r1, r1
   15f84:	69 51       	subi	r22, 0x19	; 25
   15f86:	74 4f       	sbci	r23, 0xF4	; 244
   15f88:	2f 2d       	mov	r18, r15
   15f8a:	30 e0       	ldi	r19, 0x00	; 0
   15f8c:	fb 01       	movw	r30, r22
   15f8e:	e2 0f       	add	r30, r18
   15f90:	f3 1f       	adc	r31, r19
   15f92:	28 0f       	add	r18, r24
   15f94:	39 1f       	adc	r19, r25
   15f96:	d9 01       	movw	r26, r18
   15f98:	ac 58       	subi	r26, 0x8C	; 140
   15f9a:	bf 4f       	sbci	r27, 0xFF	; 255
   15f9c:	31 81       	ldd	r19, Z+1	; 0x01
   15f9e:	2c 91       	ld	r18, X
   15fa0:	32 17       	cp	r19, r18
   15fa2:	19 f0       	breq	.+6      	; 0x15faa <_Z22Valve_Grouping_Handlerh+0x976>
   15fa4:	e1 2c       	mov	r14, r1
   15fa6:	e6 e0       	ldi	r30, 0x06	; 6
   15fa8:	fe 2e       	mov	r15, r30
   15faa:	e3 94       	inc	r14
   15fac:	f3 94       	inc	r15
   15fae:	e5 e0       	ldi	r30, 0x05	; 5
   15fb0:	ef 15       	cp	r30, r15
   15fb2:	50 f7       	brcc	.-44     	; 0x15f88 <_Z22Valve_Grouping_Handlerh+0x954>
   15fb4:	f6 e0       	ldi	r31, 0x06	; 6
   15fb6:	ef 16       	cp	r14, r31
   15fb8:	31 f0       	breq	.+12     	; 0x15fc6 <_Z22Valve_Grouping_Handlerh+0x992>
   15fba:	4f 5f       	subi	r20, 0xFF	; 255
   15fbc:	5f 4f       	sbci	r21, 0xFF	; 255
   15fbe:	44 30       	cpi	r20, 0x04	; 4
   15fc0:	51 05       	cpc	r21, r1
   15fc2:	c1 f6       	brne	.-80     	; 0x15f74 <_Z22Valve_Grouping_Handlerh+0x940>
   15fc4:	01 c0       	rjmp	.+2      	; 0x15fc8 <_Z22Valve_Grouping_Handlerh+0x994>
   15fc6:	4d 2c       	mov	r4, r13
   15fc8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   15fcc:	81 30       	cpi	r24, 0x01	; 1
   15fce:	89 f4       	brne	.+34     	; 0x15ff2 <_Z22Valve_Grouping_Handlerh+0x9be>
   15fd0:	6a ef       	ldi	r22, 0xFA	; 250
   15fd2:	7d e3       	ldi	r23, 0x3D	; 61
   15fd4:	8f e6       	ldi	r24, 0x6F	; 111
   15fd6:	96 e1       	ldi	r25, 0x16	; 22
   15fd8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   15fdc:	4a e0       	ldi	r20, 0x0A	; 10
   15fde:	50 e0       	ldi	r21, 0x00	; 0
   15fe0:	64 2d       	mov	r22, r4
   15fe2:	8f e6       	ldi	r24, 0x6F	; 111
   15fe4:	96 e1       	ldi	r25, 0x16	; 22
   15fe6:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   15fea:	8f e6       	ldi	r24, 0x6F	; 111
   15fec:	96 e1       	ldi	r25, 0x16	; 22
   15fee:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   15ff2:	2d e0       	ldi	r18, 0x0D	; 13
   15ff4:	42 9e       	mul	r4, r18
   15ff6:	50 01       	movw	r10, r0
   15ff8:	11 24       	eor	r1, r1
   15ffa:	31 2c       	mov	r3, r1
   15ffc:	24 9c       	mul	r2, r4
   15ffe:	c0 01       	movw	r24, r0
   16000:	11 24       	eor	r1, r1
   16002:	9c 01       	movw	r18, r24
   16004:	29 51       	subi	r18, 0x19	; 25
   16006:	34 4f       	sbci	r19, 0xF4	; 244
   16008:	49 01       	movw	r8, r18
   1600a:	4b e0       	ldi	r20, 0x0B	; 11
   1600c:	84 0e       	add	r8, r20
   1600e:	91 1c       	adc	r9, r1
   16010:	79 01       	movw	r14, r18
   16012:	68 e0       	ldi	r22, 0x08	; 8
   16014:	e6 0e       	add	r14, r22
   16016:	f1 1c       	adc	r15, r1
   16018:	dc 01       	movw	r26, r24
   1601a:	a8 51       	subi	r26, 0x18	; 24
   1601c:	b4 4f       	sbci	r27, 0xF4	; 244
   1601e:	6d 01       	movw	r12, r26
   16020:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   16024:	88 23       	and	r24, r24
   16026:	99 f0       	breq	.+38     	; 0x1604e <_Z22Valve_Grouping_Handlerh+0xa1a>
   16028:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   1602c:	88 23       	and	r24, r24
   1602e:	79 f0       	breq	.+30     	; 0x1604e <_Z22Valve_Grouping_Handlerh+0xa1a>
   16030:	f3 01       	movw	r30, r6
   16032:	01 90       	ld	r0, Z+
   16034:	00 20       	and	r0, r0
   16036:	e9 f7       	brne	.-6      	; 0x16032 <_Z22Valve_Grouping_Handlerh+0x9fe>
   16038:	31 97       	sbiw	r30, 0x01	; 1
   1603a:	af 01       	movw	r20, r30
   1603c:	47 58       	subi	r20, 0x87	; 135
   1603e:	51 41       	sbci	r21, 0x11	; 17
   16040:	21 e0       	ldi	r18, 0x01	; 1
   16042:	67 e8       	ldi	r22, 0x87	; 135
   16044:	71 e1       	ldi	r23, 0x11	; 17
   16046:	89 e1       	ldi	r24, 0x19	; 25
   16048:	91 e1       	ldi	r25, 0x11	; 17
   1604a:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   1604e:	33 94       	inc	r3
   16050:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16054:	81 30       	cpi	r24, 0x01	; 1
   16056:	51 f4       	brne	.+20     	; 0x1606c <_Z22Valve_Grouping_Handlerh+0xa38>
   16058:	66 ed       	ldi	r22, 0xD6	; 214
   1605a:	7d e3       	ldi	r23, 0x3D	; 61
   1605c:	8f e6       	ldi	r24, 0x6F	; 111
   1605e:	96 e1       	ldi	r25, 0x16	; 22
   16060:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16064:	8f e6       	ldi	r24, 0x6F	; 111
   16066:	96 e1       	ldi	r25, 0x16	; 22
   16068:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1606c:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   16070:	8c e0       	ldi	r24, 0x0C	; 12
   16072:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   16076:	88 eb       	ldi	r24, 0xB8	; 184
   16078:	9b e0       	ldi	r25, 0x0B	; 11
   1607a:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   1607e:	88 23       	and	r24, r24
   16080:	09 f4       	brne	.+2      	; 0x16084 <_Z22Valve_Grouping_Handlerh+0xa50>
   16082:	72 c1       	rjmp	.+740    	; 0x16368 <_Z22Valve_Grouping_Handlerh+0xd34>
   16084:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   16088:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1608c:	88 23       	and	r24, r24
   1608e:	09 f4       	brne	.+2      	; 0x16092 <_Z22Valve_Grouping_Handlerh+0xa5e>
   16090:	10 c1       	rjmp	.+544    	; 0x162b2 <_Z22Valve_Grouping_Handlerh+0xc7e>
   16092:	91 30       	cpi	r25, 0x01	; 1
   16094:	59 f5       	brne	.+86     	; 0x160ec <_Z22Valve_Grouping_Handlerh+0xab8>
   16096:	60 ec       	ldi	r22, 0xC0	; 192
   16098:	7d e3       	ldi	r23, 0x3D	; 61
   1609a:	8f e6       	ldi	r24, 0x6F	; 111
   1609c:	96 e1       	ldi	r25, 0x16	; 22
   1609e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   160a2:	4a e0       	ldi	r20, 0x0A	; 10
   160a4:	50 e0       	ldi	r21, 0x00	; 0
   160a6:	60 ec       	ldi	r22, 0xC0	; 192
   160a8:	75 e1       	ldi	r23, 0x15	; 21
   160aa:	8f e6       	ldi	r24, 0x6F	; 111
   160ac:	96 e1       	ldi	r25, 0x16	; 22
   160ae:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   160b2:	8f e6       	ldi	r24, 0x6F	; 111
   160b4:	96 e1       	ldi	r25, 0x16	; 22
   160b6:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   160ba:	8f e6       	ldi	r24, 0x6F	; 111
   160bc:	96 e1       	ldi	r25, 0x16	; 22
   160be:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   160c2:	62 ea       	ldi	r22, 0xA2	; 162
   160c4:	7d e3       	ldi	r23, 0x3D	; 61
   160c6:	8f e6       	ldi	r24, 0x6F	; 111
   160c8:	96 e1       	ldi	r25, 0x16	; 22
   160ca:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   160ce:	47 e0       	ldi	r20, 0x07	; 7
   160d0:	50 e0       	ldi	r21, 0x00	; 0
   160d2:	b6 01       	movw	r22, r12
   160d4:	8f e6       	ldi	r24, 0x6F	; 111
   160d6:	96 e1       	ldi	r25, 0x16	; 22
   160d8:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   160dc:	8f e6       	ldi	r24, 0x6F	; 111
   160de:	96 e1       	ldi	r25, 0x16	; 22
   160e0:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   160e4:	8f e6       	ldi	r24, 0x6F	; 111
   160e6:	96 e1       	ldi	r25, 0x16	; 22
   160e8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   160ec:	a0 ec       	ldi	r26, 0xC0	; 192
   160ee:	b5 e1       	ldi	r27, 0x15	; 21
   160f0:	80 e0       	ldi	r24, 0x00	; 0
   160f2:	90 e0       	ldi	r25, 0x00	; 0
   160f4:	2d 91       	ld	r18, X+
   160f6:	f5 01       	movw	r30, r10
   160f8:	e8 0f       	add	r30, r24
   160fa:	f9 1f       	adc	r31, r25
   160fc:	e9 51       	subi	r30, 0x19	; 25
   160fe:	f4 4f       	sbci	r31, 0xF4	; 244
   16100:	31 81       	ldd	r19, Z+1	; 0x01
   16102:	32 17       	cp	r19, r18
   16104:	09 f4       	brne	.+2      	; 0x16108 <_Z22Valve_Grouping_Handlerh+0xad4>
   16106:	72 c0       	rjmp	.+228    	; 0x161ec <_Z22Valve_Grouping_Handlerh+0xbb8>
   16108:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1610c:	81 30       	cpi	r24, 0x01	; 1
   1610e:	51 f4       	brne	.+20     	; 0x16124 <_Z22Valve_Grouping_Handlerh+0xaf0>
   16110:	67 e7       	ldi	r22, 0x77	; 119
   16112:	7d e3       	ldi	r23, 0x3D	; 61
   16114:	8f e6       	ldi	r24, 0x6F	; 111
   16116:	96 e1       	ldi	r25, 0x16	; 22
   16118:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1611c:	8f e6       	ldi	r24, 0x6F	; 111
   1611e:	96 e1       	ldi	r25, 0x16	; 22
   16120:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16124:	b2 e0       	ldi	r27, 0x02	; 2
   16126:	3b 16       	cp	r3, r27
   16128:	a9 f0       	breq	.+42     	; 0x16154 <_Z22Valve_Grouping_Handlerh+0xb20>
   1612a:	21 e0       	ldi	r18, 0x01	; 1
   1612c:	f4 01       	movw	r30, r8
   1612e:	20 83       	st	Z, r18
   16130:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   16134:	90 e0       	ldi	r25, 0x00	; 0
   16136:	98 2f       	mov	r25, r24
   16138:	88 27       	eor	r24, r24
   1613a:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   1613e:	82 2b       	or	r24, r18
   16140:	d7 01       	movw	r26, r14
   16142:	8d 93       	st	X+, r24
   16144:	9c 93       	st	X, r25
   16146:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   1614a:	58 12       	cpse	r5, r24
   1614c:	55 c0       	rjmp	.+170    	; 0x161f8 <_Z22Valve_Grouping_Handlerh+0xbc4>
   1614e:	53 e0       	ldi	r21, 0x03	; 3
   16150:	35 2e       	mov	r3, r21
   16152:	67 c1       	rjmp	.+718    	; 0x16422 <_Z22Valve_Grouping_Handlerh+0xdee>
   16154:	86 e0       	ldi	r24, 0x06	; 6
   16156:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   1615a:	84 e6       	ldi	r24, 0x64	; 100
   1615c:	90 e0       	ldi	r25, 0x00	; 0
   1615e:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16162:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16166:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1616a:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1616e:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   16172:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   16176:	a0 62       	ori	r26, 0x20	; 32
   16178:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1617c:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   16180:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   16184:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   16188:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   1618c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   16190:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   16194:	82 60       	ori	r24, 0x02	; 2
   16196:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1619a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1619e:	00 e0       	ldi	r16, 0x00	; 0
   161a0:	10 e0       	ldi	r17, 0x00	; 0
   161a2:	46 e0       	ldi	r20, 0x06	; 6
   161a4:	f4 2e       	mov	r15, r20
   161a6:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   161aa:	90 e0       	ldi	r25, 0x00	; 0
   161ac:	01 97       	sbiw	r24, 0x01	; 1
   161ae:	f8 9e       	mul	r15, r24
   161b0:	f0 01       	movw	r30, r0
   161b2:	f9 9e       	mul	r15, r25
   161b4:	f0 0d       	add	r31, r0
   161b6:	11 24       	eor	r1, r1
   161b8:	e3 50       	subi	r30, 0x03	; 3
   161ba:	f3 4f       	sbci	r31, 0xF3	; 243
   161bc:	e0 0f       	add	r30, r16
   161be:	f1 1f       	adc	r31, r17
   161c0:	e1 81       	ldd	r30, Z+1	; 0x01
   161c2:	ed 30       	cpi	r30, 0x0D	; 13
   161c4:	68 f0       	brcs	.+26     	; 0x161e0 <_Z22Valve_Grouping_Handlerh+0xbac>
   161c6:	f0 e0       	ldi	r31, 0x00	; 0
   161c8:	e8 51       	subi	r30, 0x18	; 24
   161ca:	fa 4e       	sbci	r31, 0xEA	; 234
   161cc:	61 e0       	ldi	r22, 0x01	; 1
   161ce:	80 81       	ld	r24, Z
   161d0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   161d4:	68 ec       	ldi	r22, 0xC8	; 200
   161d6:	70 e0       	ldi	r23, 0x00	; 0
   161d8:	80 e0       	ldi	r24, 0x00	; 0
   161da:	90 e0       	ldi	r25, 0x00	; 0
   161dc:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   161e0:	0f 5f       	subi	r16, 0xFF	; 255
   161e2:	1f 4f       	sbci	r17, 0xFF	; 255
   161e4:	05 30       	cpi	r16, 0x05	; 5
   161e6:	11 05       	cpc	r17, r1
   161e8:	f1 f6       	brne	.-68     	; 0x161a6 <_Z22Valve_Grouping_Handlerh+0xb72>
   161ea:	6b c4       	rjmp	.+2262   	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   161ec:	01 96       	adiw	r24, 0x01	; 1
   161ee:	86 30       	cpi	r24, 0x06	; 6
   161f0:	91 05       	cpc	r25, r1
   161f2:	09 f0       	breq	.+2      	; 0x161f6 <_Z22Valve_Grouping_Handlerh+0xbc2>
   161f4:	7f cf       	rjmp	.-258    	; 0x160f4 <_Z22Valve_Grouping_Handlerh+0xac0>
   161f6:	99 cf       	rjmp	.-206    	; 0x1612a <_Z22Valve_Grouping_Handlerh+0xaf6>
   161f8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   161fc:	81 30       	cpi	r24, 0x01	; 1
   161fe:	51 f4       	brne	.+20     	; 0x16214 <_Z22Valve_Grouping_Handlerh+0xbe0>
   16200:	64 e6       	ldi	r22, 0x64	; 100
   16202:	7d e3       	ldi	r23, 0x3D	; 61
   16204:	8f e6       	ldi	r24, 0x6F	; 111
   16206:	96 e1       	ldi	r25, 0x16	; 22
   16208:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1620c:	8f e6       	ldi	r24, 0x6F	; 111
   1620e:	96 e1       	ldi	r25, 0x16	; 22
   16210:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16214:	b2 e0       	ldi	r27, 0x02	; 2
   16216:	3b 12       	cpse	r3, r27
   16218:	04 c1       	rjmp	.+520    	; 0x16422 <_Z22Valve_Grouping_Handlerh+0xdee>
   1621a:	86 e0       	ldi	r24, 0x06	; 6
   1621c:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   16220:	84 e6       	ldi	r24, 0x64	; 100
   16222:	90 e0       	ldi	r25, 0x00	; 0
   16224:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16228:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1622c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   16230:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   16234:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   16238:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   1623c:	a0 62       	ori	r26, 0x20	; 32
   1623e:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   16242:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   16246:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   1624a:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   1624e:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   16252:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   16256:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   1625a:	82 60       	ori	r24, 0x02	; 2
   1625c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   16260:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   16264:	00 e0       	ldi	r16, 0x00	; 0
   16266:	10 e0       	ldi	r17, 0x00	; 0
   16268:	36 e0       	ldi	r19, 0x06	; 6
   1626a:	f3 2e       	mov	r15, r19
   1626c:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16270:	90 e0       	ldi	r25, 0x00	; 0
   16272:	01 97       	sbiw	r24, 0x01	; 1
   16274:	f8 9e       	mul	r15, r24
   16276:	f0 01       	movw	r30, r0
   16278:	f9 9e       	mul	r15, r25
   1627a:	f0 0d       	add	r31, r0
   1627c:	11 24       	eor	r1, r1
   1627e:	e3 50       	subi	r30, 0x03	; 3
   16280:	f3 4f       	sbci	r31, 0xF3	; 243
   16282:	e0 0f       	add	r30, r16
   16284:	f1 1f       	adc	r31, r17
   16286:	e1 81       	ldd	r30, Z+1	; 0x01
   16288:	ed 30       	cpi	r30, 0x0D	; 13
   1628a:	68 f0       	brcs	.+26     	; 0x162a6 <_Z22Valve_Grouping_Handlerh+0xc72>
   1628c:	f0 e0       	ldi	r31, 0x00	; 0
   1628e:	e8 51       	subi	r30, 0x18	; 24
   16290:	fa 4e       	sbci	r31, 0xEA	; 234
   16292:	61 e0       	ldi	r22, 0x01	; 1
   16294:	80 81       	ld	r24, Z
   16296:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1629a:	68 ec       	ldi	r22, 0xC8	; 200
   1629c:	70 e0       	ldi	r23, 0x00	; 0
   1629e:	80 e0       	ldi	r24, 0x00	; 0
   162a0:	90 e0       	ldi	r25, 0x00	; 0
   162a2:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   162a6:	0f 5f       	subi	r16, 0xFF	; 255
   162a8:	1f 4f       	sbci	r17, 0xFF	; 255
   162aa:	05 30       	cpi	r16, 0x05	; 5
   162ac:	11 05       	cpc	r17, r1
   162ae:	f1 f6       	brne	.-68     	; 0x1626c <_Z22Valve_Grouping_Handlerh+0xc38>
   162b0:	08 c4       	rjmp	.+2064   	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   162b2:	91 30       	cpi	r25, 0x01	; 1
   162b4:	51 f4       	brne	.+20     	; 0x162ca <_Z22Valve_Grouping_Handlerh+0xc96>
   162b6:	69 e2       	ldi	r22, 0x29	; 41
   162b8:	7d e3       	ldi	r23, 0x3D	; 61
   162ba:	8f e6       	ldi	r24, 0x6F	; 111
   162bc:	96 e1       	ldi	r25, 0x16	; 22
   162be:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   162c2:	8f e6       	ldi	r24, 0x6F	; 111
   162c4:	96 e1       	ldi	r25, 0x16	; 22
   162c6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   162ca:	e2 e0       	ldi	r30, 0x02	; 2
   162cc:	3e 12       	cpse	r3, r30
   162ce:	a9 c0       	rjmp	.+338    	; 0x16422 <_Z22Valve_Grouping_Handlerh+0xdee>
   162d0:	86 e0       	ldi	r24, 0x06	; 6
   162d2:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   162d6:	84 e6       	ldi	r24, 0x64	; 100
   162d8:	90 e0       	ldi	r25, 0x00	; 0
   162da:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   162de:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   162e2:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   162e6:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   162ea:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   162ee:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   162f2:	a0 62       	ori	r26, 0x20	; 32
   162f4:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   162f8:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   162fc:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   16300:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   16304:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   16308:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1630c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   16310:	82 60       	ori	r24, 0x02	; 2
   16312:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   16316:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1631a:	00 e0       	ldi	r16, 0x00	; 0
   1631c:	10 e0       	ldi	r17, 0x00	; 0
   1631e:	26 e0       	ldi	r18, 0x06	; 6
   16320:	f2 2e       	mov	r15, r18
   16322:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16326:	90 e0       	ldi	r25, 0x00	; 0
   16328:	01 97       	sbiw	r24, 0x01	; 1
   1632a:	f8 9e       	mul	r15, r24
   1632c:	f0 01       	movw	r30, r0
   1632e:	f9 9e       	mul	r15, r25
   16330:	f0 0d       	add	r31, r0
   16332:	11 24       	eor	r1, r1
   16334:	e3 50       	subi	r30, 0x03	; 3
   16336:	f3 4f       	sbci	r31, 0xF3	; 243
   16338:	e0 0f       	add	r30, r16
   1633a:	f1 1f       	adc	r31, r17
   1633c:	e1 81       	ldd	r30, Z+1	; 0x01
   1633e:	ed 30       	cpi	r30, 0x0D	; 13
   16340:	68 f0       	brcs	.+26     	; 0x1635c <_Z22Valve_Grouping_Handlerh+0xd28>
   16342:	f0 e0       	ldi	r31, 0x00	; 0
   16344:	e8 51       	subi	r30, 0x18	; 24
   16346:	fa 4e       	sbci	r31, 0xEA	; 234
   16348:	61 e0       	ldi	r22, 0x01	; 1
   1634a:	80 81       	ld	r24, Z
   1634c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   16350:	68 ec       	ldi	r22, 0xC8	; 200
   16352:	70 e0       	ldi	r23, 0x00	; 0
   16354:	80 e0       	ldi	r24, 0x00	; 0
   16356:	90 e0       	ldi	r25, 0x00	; 0
   16358:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1635c:	0f 5f       	subi	r16, 0xFF	; 255
   1635e:	1f 4f       	sbci	r17, 0xFF	; 255
   16360:	05 30       	cpi	r16, 0x05	; 5
   16362:	11 05       	cpc	r17, r1
   16364:	f1 f6       	brne	.-68     	; 0x16322 <_Z22Valve_Grouping_Handlerh+0xcee>
   16366:	ad c3       	rjmp	.+1882   	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   16368:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1636c:	81 30       	cpi	r24, 0x01	; 1
   1636e:	51 f4       	brne	.+20     	; 0x16384 <_Z22Valve_Grouping_Handlerh+0xd50>
   16370:	6e ee       	ldi	r22, 0xEE	; 238
   16372:	7c e3       	ldi	r23, 0x3C	; 60
   16374:	8f e6       	ldi	r24, 0x6F	; 111
   16376:	96 e1       	ldi	r25, 0x16	; 22
   16378:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1637c:	8f e6       	ldi	r24, 0x6F	; 111
   1637e:	96 e1       	ldi	r25, 0x16	; 22
   16380:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16384:	f2 e0       	ldi	r31, 0x02	; 2
   16386:	3f 12       	cpse	r3, r31
   16388:	4c c0       	rjmp	.+152    	; 0x16422 <_Z22Valve_Grouping_Handlerh+0xdee>
   1638a:	86 e0       	ldi	r24, 0x06	; 6
   1638c:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   16390:	84 e6       	ldi	r24, 0x64	; 100
   16392:	90 e0       	ldi	r25, 0x00	; 0
   16394:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16398:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1639c:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   163a0:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   163a4:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   163a8:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   163ac:	a0 62       	ori	r26, 0x20	; 32
   163ae:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   163b2:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   163b6:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   163ba:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   163be:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   163c2:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   163c6:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   163ca:	82 60       	ori	r24, 0x02	; 2
   163cc:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   163d0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   163d4:	00 e0       	ldi	r16, 0x00	; 0
   163d6:	10 e0       	ldi	r17, 0x00	; 0
   163d8:	96 e0       	ldi	r25, 0x06	; 6
   163da:	f9 2e       	mov	r15, r25
   163dc:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   163e0:	90 e0       	ldi	r25, 0x00	; 0
   163e2:	01 97       	sbiw	r24, 0x01	; 1
   163e4:	f8 9e       	mul	r15, r24
   163e6:	f0 01       	movw	r30, r0
   163e8:	f9 9e       	mul	r15, r25
   163ea:	f0 0d       	add	r31, r0
   163ec:	11 24       	eor	r1, r1
   163ee:	e3 50       	subi	r30, 0x03	; 3
   163f0:	f3 4f       	sbci	r31, 0xF3	; 243
   163f2:	e0 0f       	add	r30, r16
   163f4:	f1 1f       	adc	r31, r17
   163f6:	e1 81       	ldd	r30, Z+1	; 0x01
   163f8:	ed 30       	cpi	r30, 0x0D	; 13
   163fa:	68 f0       	brcs	.+26     	; 0x16416 <_Z22Valve_Grouping_Handlerh+0xde2>
   163fc:	f0 e0       	ldi	r31, 0x00	; 0
   163fe:	e8 51       	subi	r30, 0x18	; 24
   16400:	fa 4e       	sbci	r31, 0xEA	; 234
   16402:	61 e0       	ldi	r22, 0x01	; 1
   16404:	80 81       	ld	r24, Z
   16406:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1640a:	68 ec       	ldi	r22, 0xC8	; 200
   1640c:	70 e0       	ldi	r23, 0x00	; 0
   1640e:	80 e0       	ldi	r24, 0x00	; 0
   16410:	90 e0       	ldi	r25, 0x00	; 0
   16412:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16416:	0f 5f       	subi	r16, 0xFF	; 255
   16418:	1f 4f       	sbci	r17, 0xFF	; 255
   1641a:	05 30       	cpi	r16, 0x05	; 5
   1641c:	11 05       	cpc	r17, r1
   1641e:	f1 f6       	brne	.-68     	; 0x163dc <_Z22Valve_Grouping_Handlerh+0xda8>
   16420:	50 c3       	rjmp	.+1696   	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   16422:	68 ee       	ldi	r22, 0xE8	; 232
   16424:	73 e0       	ldi	r23, 0x03	; 3
   16426:	80 e0       	ldi	r24, 0x00	; 0
   16428:	90 e0       	ldi	r25, 0x00	; 0
   1642a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1642e:	23 e0       	ldi	r18, 0x03	; 3
   16430:	32 12       	cpse	r3, r18
   16432:	f6 cd       	rjmp	.-1044   	; 0x16020 <_Z22Valve_Grouping_Handlerh+0x9ec>
   16434:	2b c0       	rjmp	.+86     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0xe58>
   16436:	83 ef       	ldi	r24, 0xF3	; 243
   16438:	8f 0d       	add	r24, r15
   1643a:	87 35       	cpi	r24, 0x57	; 87
   1643c:	78 f4       	brcc	.+30     	; 0x1645c <_Z22Valve_Grouping_Handlerh+0xe28>
   1643e:	ef 2d       	mov	r30, r15
   16440:	f0 e0       	ldi	r31, 0x00	; 0
   16442:	e8 51       	subi	r30, 0x18	; 24
   16444:	fa 4e       	sbci	r31, 0xEA	; 234
   16446:	6b a9       	ldd	r22, Y+51	; 0x33
   16448:	80 81       	ld	r24, Z
   1644a:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1644e:	68 ec       	ldi	r22, 0xC8	; 200
   16450:	70 e0       	ldi	r23, 0x00	; 0
   16452:	80 e0       	ldi	r24, 0x00	; 0
   16454:	90 e0       	ldi	r25, 0x00	; 0
   16456:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1645a:	18 c0       	rjmp	.+48     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0xe58>
   1645c:	35 e6       	ldi	r19, 0x65	; 101
   1645e:	f3 12       	cpse	r15, r19
   16460:	15 c0       	rjmp	.+42     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0xe58>
   16462:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   16466:	41 e0       	ldi	r20, 0x01	; 1
   16468:	54 12       	cpse	r5, r20
   1646a:	05 c0       	rjmp	.+10     	; 0x16476 <_Z22Valve_Grouping_Handlerh+0xe42>
   1646c:	88 23       	and	r24, r24
   1646e:	71 f0       	breq	.+28     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0xe58>
   16470:	50 92 24 16 	sts	0x1624, r5	; 0x801624 <_sRuble_Parameters+0xbf>
   16474:	05 c0       	rjmp	.+10     	; 0x16480 <_Z22Valve_Grouping_Handlerh+0xe4c>
   16476:	88 23       	and	r24, r24
   16478:	49 f0       	breq	.+18     	; 0x1648c <_Z22Valve_Grouping_Handlerh+0xe58>
   1647a:	82 e0       	ldi	r24, 0x02	; 2
   1647c:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
   16480:	64 e2       	ldi	r22, 0x24	; 36
   16482:	76 e1       	ldi	r23, 0x16	; 22
   16484:	80 e3       	ldi	r24, 0x30	; 48
   16486:	9c e0       	ldi	r25, 0x0C	; 12
   16488:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1648c:	0f 5f       	subi	r16, 0xFF	; 255
   1648e:	1f 4f       	sbci	r17, 0xFF	; 255
   16490:	05 30       	cpi	r16, 0x05	; 5
   16492:	11 05       	cpc	r17, r1
   16494:	09 f0       	breq	.+2      	; 0x16498 <_Z22Valve_Grouping_Handlerh+0xe64>
   16496:	e9 cc       	rjmp	.-1582   	; 0x15e6a <_Z22Valve_Grouping_Handlerh+0x836>
   16498:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1649c:	81 30       	cpi	r24, 0x01	; 1
   1649e:	09 f0       	breq	.+2      	; 0x164a2 <_Z22Valve_Grouping_Handlerh+0xe6e>
   164a0:	67 c3       	rjmp	.+1742   	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   164a2:	6f ec       	ldi	r22, 0xCF	; 207
   164a4:	7c e3       	ldi	r23, 0x3C	; 60
   164a6:	5a c3       	rjmp	.+1716   	; 0x16b5c <_Z22Valve_Grouping_Handlerh+0x1528>
   164a8:	81 30       	cpi	r24, 0x01	; 1
   164aa:	51 f4       	brne	.+20     	; 0x164c0 <_Z22Valve_Grouping_Handlerh+0xe8c>
   164ac:	61 ec       	ldi	r22, 0xC1	; 193
   164ae:	7c e3       	ldi	r23, 0x3C	; 60
   164b0:	8f e6       	ldi	r24, 0x6F	; 111
   164b2:	96 e1       	ldi	r25, 0x16	; 22
   164b4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   164b8:	8f e6       	ldi	r24, 0x6F	; 111
   164ba:	96 e1       	ldi	r25, 0x16	; 22
   164bc:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   164c0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   164c4:	81 30       	cpi	r24, 0x01	; 1
   164c6:	d1 f0       	breq	.+52     	; 0x164fc <_Z22Valve_Grouping_Handlerh+0xec8>
   164c8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   164cc:	81 30       	cpi	r24, 0x01	; 1
   164ce:	d9 f5       	brne	.+118    	; 0x16546 <_Z22Valve_Grouping_Handlerh+0xf12>
   164d0:	69 ea       	ldi	r22, 0xA9	; 169
   164d2:	7c e3       	ldi	r23, 0x3C	; 60
   164d4:	8f e6       	ldi	r24, 0x6F	; 111
   164d6:	96 e1       	ldi	r25, 0x16	; 22
   164d8:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   164dc:	60 91 d5 15 	lds	r22, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   164e0:	70 e0       	ldi	r23, 0x00	; 0
   164e2:	61 50       	subi	r22, 0x01	; 1
   164e4:	71 09       	sbc	r23, r1
   164e6:	4a e0       	ldi	r20, 0x0A	; 10
   164e8:	50 e0       	ldi	r21, 0x00	; 0
   164ea:	8f e6       	ldi	r24, 0x6F	; 111
   164ec:	96 e1       	ldi	r25, 0x16	; 22
   164ee:	0e 94 b9 d1 	call	0x1a372	; 0x1a372 <_ZN5Print7printlnEii>
   164f2:	8f e6       	ldi	r24, 0x6F	; 111
   164f4:	96 e1       	ldi	r25, 0x16	; 22
   164f6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   164fa:	25 c0       	rjmp	.+74     	; 0x16546 <_Z22Valve_Grouping_Handlerh+0xf12>
   164fc:	00 e0       	ldi	r16, 0x00	; 0
   164fe:	10 e0       	ldi	r17, 0x00	; 0
   16500:	8b e1       	ldi	r24, 0x1B	; 27
   16502:	f8 2e       	mov	r15, r24
   16504:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16508:	90 e0       	ldi	r25, 0x00	; 0
   1650a:	85 56       	subi	r24, 0x65	; 101
   1650c:	91 09       	sbc	r25, r1
   1650e:	f8 9e       	mul	r15, r24
   16510:	f0 01       	movw	r30, r0
   16512:	f9 9e       	mul	r15, r25
   16514:	f0 0d       	add	r31, r0
   16516:	11 24       	eor	r1, r1
   16518:	e1 56       	subi	r30, 0x61	; 97
   1651a:	f0 4f       	sbci	r31, 0xF0	; 240
   1651c:	e0 0f       	add	r30, r16
   1651e:	f1 1f       	adc	r31, r17
   16520:	4a e0       	ldi	r20, 0x0A	; 10
   16522:	50 e0       	ldi	r21, 0x00	; 0
   16524:	65 81       	ldd	r22, Z+5	; 0x05
   16526:	8f e6       	ldi	r24, 0x6F	; 111
   16528:	96 e1       	ldi	r25, 0x16	; 22
   1652a:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   1652e:	6f eb       	ldi	r22, 0xBF	; 191
   16530:	7c e3       	ldi	r23, 0x3C	; 60
   16532:	8f e6       	ldi	r24, 0x6F	; 111
   16534:	96 e1       	ldi	r25, 0x16	; 22
   16536:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1653a:	0f 5f       	subi	r16, 0xFF	; 255
   1653c:	1f 4f       	sbci	r17, 0xFF	; 255
   1653e:	05 30       	cpi	r16, 0x05	; 5
   16540:	11 05       	cpc	r17, r1
   16542:	01 f7       	brne	.-64     	; 0x16504 <_Z22Valve_Grouping_Handlerh+0xed0>
   16544:	c1 cf       	rjmp	.-126    	; 0x164c8 <_Z22Valve_Grouping_Handlerh+0xe94>
   16546:	00 e0       	ldi	r16, 0x00	; 0
   16548:	10 e0       	ldi	r17, 0x00	; 0
   1654a:	81 e0       	ldi	r24, 0x01	; 1
   1654c:	85 25       	eor	r24, r5
   1654e:	81 70       	andi	r24, 0x01	; 1
   16550:	8b ab       	std	Y+51, r24	; 0x33
   16552:	ad e0       	ldi	r26, 0x0D	; 13
   16554:	2a 2e       	mov	r2, r26
   16556:	b7 e8       	ldi	r27, 0x87	; 135
   16558:	6b 2e       	mov	r6, r27
   1655a:	b1 e1       	ldi	r27, 0x11	; 17
   1655c:	7b 2e       	mov	r7, r27
   1655e:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16562:	90 e0       	ldi	r25, 0x00	; 0
   16564:	9c 01       	movw	r18, r24
   16566:	25 56       	subi	r18, 0x65	; 101
   16568:	31 09       	sbc	r19, r1
   1656a:	6b e1       	ldi	r22, 0x1B	; 27
   1656c:	62 9f       	mul	r22, r18
   1656e:	f0 01       	movw	r30, r0
   16570:	63 9f       	mul	r22, r19
   16572:	f0 0d       	add	r31, r0
   16574:	11 24       	eor	r1, r1
   16576:	e1 56       	subi	r30, 0x61	; 97
   16578:	f0 4f       	sbci	r31, 0xF0	; 240
   1657a:	e0 0f       	add	r30, r16
   1657c:	f1 1f       	adc	r31, r17
   1657e:	f5 80       	ldd	r15, Z+5	; 0x05
   16580:	2f ef       	ldi	r18, 0xFF	; 255
   16582:	2f 0d       	add	r18, r15
   16584:	2c 30       	cpi	r18, 0x0C	; 12
   16586:	08 f0       	brcs	.+2      	; 0x1658a <_Z22Valve_Grouping_Handlerh+0xf56>
   16588:	a8 c2       	rjmp	.+1360   	; 0x16ada <_Z22Valve_Grouping_Handlerh+0x14a6>
   1658a:	73 e0       	ldi	r23, 0x03	; 3
   1658c:	7f 15       	cp	r23, r15
   1658e:	a8 f4       	brcc	.+42     	; 0x165ba <_Z22Valve_Grouping_Handlerh+0xf86>
   16590:	6b ea       	ldi	r22, 0xAB	; 171
   16592:	f6 9e       	mul	r15, r22
   16594:	61 2d       	mov	r22, r1
   16596:	11 24       	eor	r1, r1
   16598:	86 2f       	mov	r24, r22
   1659a:	86 95       	lsr	r24
   1659c:	98 2f       	mov	r25, r24
   1659e:	99 0f       	add	r25, r25
   165a0:	89 0f       	add	r24, r25
   165a2:	f8 1a       	sub	r15, r24
   165a4:	66 95       	lsr	r22
   165a6:	ff 20       	and	r15, r15
   165a8:	21 f0       	breq	.+8      	; 0x165b2 <_Z22Valve_Grouping_Handlerh+0xf7e>
   165aa:	ee 24       	eor	r14, r14
   165ac:	e3 94       	inc	r14
   165ae:	e6 0e       	add	r14, r22
   165b0:	06 c0       	rjmp	.+12     	; 0x165be <_Z22Valve_Grouping_Handlerh+0xf8a>
   165b2:	e6 2e       	mov	r14, r22
   165b4:	f3 e0       	ldi	r31, 0x03	; 3
   165b6:	ff 2e       	mov	r15, r31
   165b8:	02 c0       	rjmp	.+4      	; 0x165be <_Z22Valve_Grouping_Handlerh+0xf8a>
   165ba:	ee 24       	eor	r14, r14
   165bc:	e3 94       	inc	r14
   165be:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   165c2:	81 30       	cpi	r24, 0x01	; 1
   165c4:	89 f4       	brne	.+34     	; 0x165e8 <_Z22Valve_Grouping_Handlerh+0xfb4>
   165c6:	65 e9       	ldi	r22, 0x95	; 149
   165c8:	7c e3       	ldi	r23, 0x3C	; 60
   165ca:	8f e6       	ldi	r24, 0x6F	; 111
   165cc:	96 e1       	ldi	r25, 0x16	; 22
   165ce:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   165d2:	4a e0       	ldi	r20, 0x0A	; 10
   165d4:	50 e0       	ldi	r21, 0x00	; 0
   165d6:	6e 2d       	mov	r22, r14
   165d8:	8f e6       	ldi	r24, 0x6F	; 111
   165da:	96 e1       	ldi	r25, 0x16	; 22
   165dc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   165e0:	8f e6       	ldi	r24, 0x6F	; 111
   165e2:	96 e1       	ldi	r25, 0x16	; 22
   165e4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   165e8:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   165ec:	81 11       	cpse	r24, r1
   165ee:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   165f2:	84 e1       	ldi	r24, 0x14	; 20
   165f4:	ac ea       	ldi	r26, 0xAC	; 172
   165f6:	b5 e1       	ldi	r27, 0x15	; 21
   165f8:	1d 92       	st	X+, r1
   165fa:	8a 95       	dec	r24
   165fc:	e9 f7       	brne	.-6      	; 0x165f8 <_Z22Valve_Grouping_Handlerh+0xfc4>
   165fe:	6e 2d       	mov	r22, r14
   16600:	70 e0       	ldi	r23, 0x00	; 0
   16602:	61 50       	subi	r22, 0x01	; 1
   16604:	71 09       	sbc	r23, r1
   16606:	b7 e0       	ldi	r27, 0x07	; 7
   16608:	b6 9f       	mul	r27, r22
   1660a:	c0 01       	movw	r24, r0
   1660c:	b7 9f       	mul	r27, r23
   1660e:	90 0d       	add	r25, r0
   16610:	11 24       	eor	r1, r1
   16612:	8b 59       	subi	r24, 0x9B	; 155
   16614:	9a 4e       	sbci	r25, 0xEA	; 234
   16616:	fc 01       	movw	r30, r24
   16618:	ec 58       	subi	r30, 0x8C	; 140
   1661a:	ff 4f       	sbci	r31, 0xFF	; 255
   1661c:	20 81       	ld	r18, Z
   1661e:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
   16622:	31 96       	adiw	r30, 0x01	; 1
   16624:	20 81       	ld	r18, Z
   16626:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
   1662a:	31 96       	adiw	r30, 0x01	; 1
   1662c:	20 81       	ld	r18, Z
   1662e:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
   16632:	31 96       	adiw	r30, 0x01	; 1
   16634:	20 81       	ld	r18, Z
   16636:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
   1663a:	31 96       	adiw	r30, 0x01	; 1
   1663c:	20 81       	ld	r18, Z
   1663e:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
   16642:	31 96       	adiw	r30, 0x01	; 1
   16644:	20 81       	ld	r18, Z
   16646:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
   1664a:	22 e0       	ldi	r18, 0x02	; 2
   1664c:	20 93 b2 15 	sts	0x15B2, r18	; 0x8015b2 <_sRuble_Parameters+0x4d>
   16650:	50 92 b3 15 	sts	0x15B3, r5	; 0x8015b3 <_sRuble_Parameters+0x4e>
   16654:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   16658:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
   1665c:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   16660:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
   16664:	f0 92 b7 15 	sts	0x15B7, r15	; 0x8015b7 <_sRuble_Parameters+0x52>
   16668:	40 e0       	ldi	r20, 0x00	; 0
   1666a:	50 e0       	ldi	r21, 0x00	; 0
   1666c:	d4 2e       	mov	r13, r20
   1666e:	e1 2c       	mov	r14, r1
   16670:	f1 2c       	mov	r15, r1
   16672:	24 9e       	mul	r2, r20
   16674:	b0 01       	movw	r22, r0
   16676:	25 9e       	mul	r2, r21
   16678:	70 0d       	add	r23, r0
   1667a:	11 24       	eor	r1, r1
   1667c:	69 51       	subi	r22, 0x19	; 25
   1667e:	74 4f       	sbci	r23, 0xF4	; 244
   16680:	2f 2d       	mov	r18, r15
   16682:	30 e0       	ldi	r19, 0x00	; 0
   16684:	fb 01       	movw	r30, r22
   16686:	e2 0f       	add	r30, r18
   16688:	f3 1f       	adc	r31, r19
   1668a:	28 0f       	add	r18, r24
   1668c:	39 1f       	adc	r19, r25
   1668e:	d9 01       	movw	r26, r18
   16690:	ac 58       	subi	r26, 0x8C	; 140
   16692:	bf 4f       	sbci	r27, 0xFF	; 255
   16694:	31 81       	ldd	r19, Z+1	; 0x01
   16696:	2c 91       	ld	r18, X
   16698:	32 17       	cp	r19, r18
   1669a:	19 f0       	breq	.+6      	; 0x166a2 <_Z22Valve_Grouping_Handlerh+0x106e>
   1669c:	e1 2c       	mov	r14, r1
   1669e:	e6 e0       	ldi	r30, 0x06	; 6
   166a0:	fe 2e       	mov	r15, r30
   166a2:	e3 94       	inc	r14
   166a4:	f3 94       	inc	r15
   166a6:	e5 e0       	ldi	r30, 0x05	; 5
   166a8:	ef 15       	cp	r30, r15
   166aa:	50 f7       	brcc	.-44     	; 0x16680 <_Z22Valve_Grouping_Handlerh+0x104c>
   166ac:	f6 e0       	ldi	r31, 0x06	; 6
   166ae:	ef 16       	cp	r14, r31
   166b0:	31 f0       	breq	.+12     	; 0x166be <_Z22Valve_Grouping_Handlerh+0x108a>
   166b2:	4f 5f       	subi	r20, 0xFF	; 255
   166b4:	5f 4f       	sbci	r21, 0xFF	; 255
   166b6:	44 30       	cpi	r20, 0x04	; 4
   166b8:	51 05       	cpc	r21, r1
   166ba:	c1 f6       	brne	.-80     	; 0x1666c <_Z22Valve_Grouping_Handlerh+0x1038>
   166bc:	01 c0       	rjmp	.+2      	; 0x166c0 <_Z22Valve_Grouping_Handlerh+0x108c>
   166be:	4d 2c       	mov	r4, r13
   166c0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   166c4:	81 30       	cpi	r24, 0x01	; 1
   166c6:	89 f4       	brne	.+34     	; 0x166ea <_Z22Valve_Grouping_Handlerh+0x10b6>
   166c8:	6f e7       	ldi	r22, 0x7F	; 127
   166ca:	7c e3       	ldi	r23, 0x3C	; 60
   166cc:	8f e6       	ldi	r24, 0x6F	; 111
   166ce:	96 e1       	ldi	r25, 0x16	; 22
   166d0:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   166d4:	4a e0       	ldi	r20, 0x0A	; 10
   166d6:	50 e0       	ldi	r21, 0x00	; 0
   166d8:	64 2d       	mov	r22, r4
   166da:	8f e6       	ldi	r24, 0x6F	; 111
   166dc:	96 e1       	ldi	r25, 0x16	; 22
   166de:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   166e2:	8f e6       	ldi	r24, 0x6F	; 111
   166e4:	96 e1       	ldi	r25, 0x16	; 22
   166e6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   166ea:	2d e0       	ldi	r18, 0x0D	; 13
   166ec:	42 9e       	mul	r4, r18
   166ee:	50 01       	movw	r10, r0
   166f0:	11 24       	eor	r1, r1
   166f2:	31 2c       	mov	r3, r1
   166f4:	24 9c       	mul	r2, r4
   166f6:	c0 01       	movw	r24, r0
   166f8:	11 24       	eor	r1, r1
   166fa:	9c 01       	movw	r18, r24
   166fc:	29 51       	subi	r18, 0x19	; 25
   166fe:	34 4f       	sbci	r19, 0xF4	; 244
   16700:	49 01       	movw	r8, r18
   16702:	4b e0       	ldi	r20, 0x0B	; 11
   16704:	84 0e       	add	r8, r20
   16706:	91 1c       	adc	r9, r1
   16708:	79 01       	movw	r14, r18
   1670a:	68 e0       	ldi	r22, 0x08	; 8
   1670c:	e6 0e       	add	r14, r22
   1670e:	f1 1c       	adc	r15, r1
   16710:	dc 01       	movw	r26, r24
   16712:	a8 51       	subi	r26, 0x18	; 24
   16714:	b4 4f       	sbci	r27, 0xF4	; 244
   16716:	6d 01       	movw	r12, r26
   16718:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   1671c:	88 23       	and	r24, r24
   1671e:	99 f0       	breq	.+38     	; 0x16746 <_Z22Valve_Grouping_Handlerh+0x1112>
   16720:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   16724:	88 23       	and	r24, r24
   16726:	79 f0       	breq	.+30     	; 0x16746 <_Z22Valve_Grouping_Handlerh+0x1112>
   16728:	f3 01       	movw	r30, r6
   1672a:	01 90       	ld	r0, Z+
   1672c:	00 20       	and	r0, r0
   1672e:	e9 f7       	brne	.-6      	; 0x1672a <_Z22Valve_Grouping_Handlerh+0x10f6>
   16730:	31 97       	sbiw	r30, 0x01	; 1
   16732:	af 01       	movw	r20, r30
   16734:	47 58       	subi	r20, 0x87	; 135
   16736:	51 41       	sbci	r21, 0x11	; 17
   16738:	21 e0       	ldi	r18, 0x01	; 1
   1673a:	67 e8       	ldi	r22, 0x87	; 135
   1673c:	71 e1       	ldi	r23, 0x11	; 17
   1673e:	89 e1       	ldi	r24, 0x19	; 25
   16740:	91 e1       	ldi	r25, 0x11	; 17
   16742:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   16746:	33 94       	inc	r3
   16748:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1674c:	81 30       	cpi	r24, 0x01	; 1
   1674e:	51 f4       	brne	.+20     	; 0x16764 <_Z22Valve_Grouping_Handlerh+0x1130>
   16750:	6b e5       	ldi	r22, 0x5B	; 91
   16752:	7c e3       	ldi	r23, 0x3C	; 60
   16754:	8f e6       	ldi	r24, 0x6F	; 111
   16756:	96 e1       	ldi	r25, 0x16	; 22
   16758:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1675c:	8f e6       	ldi	r24, 0x6F	; 111
   1675e:	96 e1       	ldi	r25, 0x16	; 22
   16760:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16764:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   16768:	8c e0       	ldi	r24, 0x0C	; 12
   1676a:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   1676e:	88 eb       	ldi	r24, 0xB8	; 184
   16770:	9b e0       	ldi	r25, 0x0B	; 11
   16772:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   16776:	88 23       	and	r24, r24
   16778:	09 f4       	brne	.+2      	; 0x1677c <_Z22Valve_Grouping_Handlerh+0x1148>
   1677a:	6d c1       	rjmp	.+730    	; 0x16a56 <_Z22Valve_Grouping_Handlerh+0x1422>
   1677c:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   16780:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16784:	88 23       	and	r24, r24
   16786:	09 f4       	brne	.+2      	; 0x1678a <_Z22Valve_Grouping_Handlerh+0x1156>
   16788:	0a c1       	rjmp	.+532    	; 0x1699e <_Z22Valve_Grouping_Handlerh+0x136a>
   1678a:	91 30       	cpi	r25, 0x01	; 1
   1678c:	19 f5       	brne	.+70     	; 0x167d4 <_Z22Valve_Grouping_Handlerh+0x11a0>
   1678e:	65 e4       	ldi	r22, 0x45	; 69
   16790:	7c e3       	ldi	r23, 0x3C	; 60
   16792:	8f e6       	ldi	r24, 0x6F	; 111
   16794:	96 e1       	ldi	r25, 0x16	; 22
   16796:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1679a:	4a e0       	ldi	r20, 0x0A	; 10
   1679c:	50 e0       	ldi	r21, 0x00	; 0
   1679e:	60 ec       	ldi	r22, 0xC0	; 192
   167a0:	75 e1       	ldi	r23, 0x15	; 21
   167a2:	8f e6       	ldi	r24, 0x6F	; 111
   167a4:	96 e1       	ldi	r25, 0x16	; 22
   167a6:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   167aa:	8f e6       	ldi	r24, 0x6F	; 111
   167ac:	96 e1       	ldi	r25, 0x16	; 22
   167ae:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   167b2:	67 e2       	ldi	r22, 0x27	; 39
   167b4:	7c e3       	ldi	r23, 0x3C	; 60
   167b6:	8f e6       	ldi	r24, 0x6F	; 111
   167b8:	96 e1       	ldi	r25, 0x16	; 22
   167ba:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   167be:	47 e0       	ldi	r20, 0x07	; 7
   167c0:	50 e0       	ldi	r21, 0x00	; 0
   167c2:	b6 01       	movw	r22, r12
   167c4:	8f e6       	ldi	r24, 0x6F	; 111
   167c6:	96 e1       	ldi	r25, 0x16	; 22
   167c8:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   167cc:	8f e6       	ldi	r24, 0x6F	; 111
   167ce:	96 e1       	ldi	r25, 0x16	; 22
   167d0:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   167d4:	a0 ec       	ldi	r26, 0xC0	; 192
   167d6:	b5 e1       	ldi	r27, 0x15	; 21
   167d8:	80 e0       	ldi	r24, 0x00	; 0
   167da:	90 e0       	ldi	r25, 0x00	; 0
   167dc:	2d 91       	ld	r18, X+
   167de:	f5 01       	movw	r30, r10
   167e0:	e8 0f       	add	r30, r24
   167e2:	f9 1f       	adc	r31, r25
   167e4:	e9 51       	subi	r30, 0x19	; 25
   167e6:	f4 4f       	sbci	r31, 0xF4	; 244
   167e8:	31 81       	ldd	r19, Z+1	; 0x01
   167ea:	32 17       	cp	r19, r18
   167ec:	09 f4       	brne	.+2      	; 0x167f0 <_Z22Valve_Grouping_Handlerh+0x11bc>
   167ee:	73 c0       	rjmp	.+230    	; 0x168d6 <_Z22Valve_Grouping_Handlerh+0x12a2>
   167f0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   167f4:	81 30       	cpi	r24, 0x01	; 1
   167f6:	51 f4       	brne	.+20     	; 0x1680c <_Z22Valve_Grouping_Handlerh+0x11d8>
   167f8:	6c ef       	ldi	r22, 0xFC	; 252
   167fa:	7b e3       	ldi	r23, 0x3B	; 59
   167fc:	8f e6       	ldi	r24, 0x6F	; 111
   167fe:	96 e1       	ldi	r25, 0x16	; 22
   16800:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16804:	8f e6       	ldi	r24, 0x6F	; 111
   16806:	96 e1       	ldi	r25, 0x16	; 22
   16808:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1680c:	b2 e0       	ldi	r27, 0x02	; 2
   1680e:	3b 16       	cp	r3, r27
   16810:	a9 f0       	breq	.+42     	; 0x1683c <_Z22Valve_Grouping_Handlerh+0x1208>
   16812:	21 e0       	ldi	r18, 0x01	; 1
   16814:	f4 01       	movw	r30, r8
   16816:	20 83       	st	Z, r18
   16818:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   1681c:	90 e0       	ldi	r25, 0x00	; 0
   1681e:	98 2f       	mov	r25, r24
   16820:	88 27       	eor	r24, r24
   16822:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   16826:	82 2b       	or	r24, r18
   16828:	d7 01       	movw	r26, r14
   1682a:	8d 93       	st	X+, r24
   1682c:	9c 93       	st	X, r25
   1682e:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   16832:	58 12       	cpse	r5, r24
   16834:	56 c0       	rjmp	.+172    	; 0x168e2 <_Z22Valve_Grouping_Handlerh+0x12ae>
   16836:	33 e0       	ldi	r19, 0x03	; 3
   16838:	33 2e       	mov	r3, r19
   1683a:	45 c1       	rjmp	.+650    	; 0x16ac6 <_Z22Valve_Grouping_Handlerh+0x1492>
   1683c:	86 e0       	ldi	r24, 0x06	; 6
   1683e:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   16842:	84 e6       	ldi	r24, 0x64	; 100
   16844:	90 e0       	ldi	r25, 0x00	; 0
   16846:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1684a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1684e:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   16852:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   16856:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   1685a:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   1685e:	a0 62       	ori	r26, 0x20	; 32
   16860:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   16864:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   16868:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   1686c:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   16870:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   16874:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   16878:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   1687c:	82 60       	ori	r24, 0x02	; 2
   1687e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   16882:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   16886:	00 e0       	ldi	r16, 0x00	; 0
   16888:	10 e0       	ldi	r17, 0x00	; 0
   1688a:	2b e1       	ldi	r18, 0x1B	; 27
   1688c:	f2 2e       	mov	r15, r18
   1688e:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16892:	90 e0       	ldi	r25, 0x00	; 0
   16894:	85 56       	subi	r24, 0x65	; 101
   16896:	91 09       	sbc	r25, r1
   16898:	f8 9e       	mul	r15, r24
   1689a:	f0 01       	movw	r30, r0
   1689c:	f9 9e       	mul	r15, r25
   1689e:	f0 0d       	add	r31, r0
   168a0:	11 24       	eor	r1, r1
   168a2:	e1 56       	subi	r30, 0x61	; 97
   168a4:	f0 4f       	sbci	r31, 0xF0	; 240
   168a6:	e0 0f       	add	r30, r16
   168a8:	f1 1f       	adc	r31, r17
   168aa:	e5 81       	ldd	r30, Z+5	; 0x05
   168ac:	ed 30       	cpi	r30, 0x0D	; 13
   168ae:	68 f0       	brcs	.+26     	; 0x168ca <_Z22Valve_Grouping_Handlerh+0x1296>
   168b0:	f0 e0       	ldi	r31, 0x00	; 0
   168b2:	e8 51       	subi	r30, 0x18	; 24
   168b4:	fa 4e       	sbci	r31, 0xEA	; 234
   168b6:	61 e0       	ldi	r22, 0x01	; 1
   168b8:	80 81       	ld	r24, Z
   168ba:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   168be:	68 ec       	ldi	r22, 0xC8	; 200
   168c0:	70 e0       	ldi	r23, 0x00	; 0
   168c2:	80 e0       	ldi	r24, 0x00	; 0
   168c4:	90 e0       	ldi	r25, 0x00	; 0
   168c6:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   168ca:	0f 5f       	subi	r16, 0xFF	; 255
   168cc:	1f 4f       	sbci	r17, 0xFF	; 255
   168ce:	05 30       	cpi	r16, 0x05	; 5
   168d0:	11 05       	cpc	r17, r1
   168d2:	e9 f6       	brne	.-70     	; 0x1688e <_Z22Valve_Grouping_Handlerh+0x125a>
   168d4:	f6 c0       	rjmp	.+492    	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   168d6:	01 96       	adiw	r24, 0x01	; 1
   168d8:	86 30       	cpi	r24, 0x06	; 6
   168da:	91 05       	cpc	r25, r1
   168dc:	09 f0       	breq	.+2      	; 0x168e0 <_Z22Valve_Grouping_Handlerh+0x12ac>
   168de:	7e cf       	rjmp	.-260    	; 0x167dc <_Z22Valve_Grouping_Handlerh+0x11a8>
   168e0:	98 cf       	rjmp	.-208    	; 0x16812 <_Z22Valve_Grouping_Handlerh+0x11de>
   168e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   168e6:	81 30       	cpi	r24, 0x01	; 1
   168e8:	51 f4       	brne	.+20     	; 0x168fe <_Z22Valve_Grouping_Handlerh+0x12ca>
   168ea:	69 ee       	ldi	r22, 0xE9	; 233
   168ec:	7b e3       	ldi	r23, 0x3B	; 59
   168ee:	8f e6       	ldi	r24, 0x6F	; 111
   168f0:	96 e1       	ldi	r25, 0x16	; 22
   168f2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   168f6:	8f e6       	ldi	r24, 0x6F	; 111
   168f8:	96 e1       	ldi	r25, 0x16	; 22
   168fa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   168fe:	b2 e0       	ldi	r27, 0x02	; 2
   16900:	3b 12       	cpse	r3, r27
   16902:	e1 c0       	rjmp	.+450    	; 0x16ac6 <_Z22Valve_Grouping_Handlerh+0x1492>
   16904:	86 e0       	ldi	r24, 0x06	; 6
   16906:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   1690a:	84 e6       	ldi	r24, 0x64	; 100
   1690c:	90 e0       	ldi	r25, 0x00	; 0
   1690e:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16912:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16916:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1691a:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1691e:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   16922:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   16926:	a0 62       	ori	r26, 0x20	; 32
   16928:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1692c:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   16930:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   16934:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   16938:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   1693c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   16940:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   16944:	82 60       	ori	r24, 0x02	; 2
   16946:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1694a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1694e:	00 e0       	ldi	r16, 0x00	; 0
   16950:	10 e0       	ldi	r17, 0x00	; 0
   16952:	9b e1       	ldi	r25, 0x1B	; 27
   16954:	f9 2e       	mov	r15, r25
   16956:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   1695a:	90 e0       	ldi	r25, 0x00	; 0
   1695c:	85 56       	subi	r24, 0x65	; 101
   1695e:	91 09       	sbc	r25, r1
   16960:	f8 9e       	mul	r15, r24
   16962:	f0 01       	movw	r30, r0
   16964:	f9 9e       	mul	r15, r25
   16966:	f0 0d       	add	r31, r0
   16968:	11 24       	eor	r1, r1
   1696a:	e1 56       	subi	r30, 0x61	; 97
   1696c:	f0 4f       	sbci	r31, 0xF0	; 240
   1696e:	e0 0f       	add	r30, r16
   16970:	f1 1f       	adc	r31, r17
   16972:	e5 81       	ldd	r30, Z+5	; 0x05
   16974:	ed 30       	cpi	r30, 0x0D	; 13
   16976:	68 f0       	brcs	.+26     	; 0x16992 <_Z22Valve_Grouping_Handlerh+0x135e>
   16978:	f0 e0       	ldi	r31, 0x00	; 0
   1697a:	e8 51       	subi	r30, 0x18	; 24
   1697c:	fa 4e       	sbci	r31, 0xEA	; 234
   1697e:	61 e0       	ldi	r22, 0x01	; 1
   16980:	80 81       	ld	r24, Z
   16982:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   16986:	68 ec       	ldi	r22, 0xC8	; 200
   16988:	70 e0       	ldi	r23, 0x00	; 0
   1698a:	80 e0       	ldi	r24, 0x00	; 0
   1698c:	90 e0       	ldi	r25, 0x00	; 0
   1698e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16992:	0f 5f       	subi	r16, 0xFF	; 255
   16994:	1f 4f       	sbci	r17, 0xFF	; 255
   16996:	05 30       	cpi	r16, 0x05	; 5
   16998:	11 05       	cpc	r17, r1
   1699a:	e9 f6       	brne	.-70     	; 0x16956 <_Z22Valve_Grouping_Handlerh+0x1322>
   1699c:	92 c0       	rjmp	.+292    	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   1699e:	91 30       	cpi	r25, 0x01	; 1
   169a0:	51 f4       	brne	.+20     	; 0x169b6 <_Z22Valve_Grouping_Handlerh+0x1382>
   169a2:	6e ea       	ldi	r22, 0xAE	; 174
   169a4:	7b e3       	ldi	r23, 0x3B	; 59
   169a6:	8f e6       	ldi	r24, 0x6F	; 111
   169a8:	96 e1       	ldi	r25, 0x16	; 22
   169aa:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   169ae:	8f e6       	ldi	r24, 0x6F	; 111
   169b0:	96 e1       	ldi	r25, 0x16	; 22
   169b2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   169b6:	e2 e0       	ldi	r30, 0x02	; 2
   169b8:	3e 12       	cpse	r3, r30
   169ba:	85 c0       	rjmp	.+266    	; 0x16ac6 <_Z22Valve_Grouping_Handlerh+0x1492>
   169bc:	86 e0       	ldi	r24, 0x06	; 6
   169be:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   169c2:	84 e6       	ldi	r24, 0x64	; 100
   169c4:	90 e0       	ldi	r25, 0x00	; 0
   169c6:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   169ca:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   169ce:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   169d2:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   169d6:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   169da:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   169de:	a0 62       	ori	r26, 0x20	; 32
   169e0:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   169e4:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   169e8:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   169ec:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   169f0:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   169f4:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   169f8:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   169fc:	82 60       	ori	r24, 0x02	; 2
   169fe:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   16a02:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   16a06:	00 e0       	ldi	r16, 0x00	; 0
   16a08:	10 e0       	ldi	r17, 0x00	; 0
   16a0a:	8b e1       	ldi	r24, 0x1B	; 27
   16a0c:	f8 2e       	mov	r15, r24
   16a0e:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   16a12:	90 e0       	ldi	r25, 0x00	; 0
   16a14:	85 56       	subi	r24, 0x65	; 101
   16a16:	91 09       	sbc	r25, r1
   16a18:	f8 9e       	mul	r15, r24
   16a1a:	f0 01       	movw	r30, r0
   16a1c:	f9 9e       	mul	r15, r25
   16a1e:	f0 0d       	add	r31, r0
   16a20:	11 24       	eor	r1, r1
   16a22:	e1 56       	subi	r30, 0x61	; 97
   16a24:	f0 4f       	sbci	r31, 0xF0	; 240
   16a26:	e0 0f       	add	r30, r16
   16a28:	f1 1f       	adc	r31, r17
   16a2a:	e5 81       	ldd	r30, Z+5	; 0x05
   16a2c:	ed 30       	cpi	r30, 0x0D	; 13
   16a2e:	68 f0       	brcs	.+26     	; 0x16a4a <_Z22Valve_Grouping_Handlerh+0x1416>
   16a30:	f0 e0       	ldi	r31, 0x00	; 0
   16a32:	e8 51       	subi	r30, 0x18	; 24
   16a34:	fa 4e       	sbci	r31, 0xEA	; 234
   16a36:	61 e0       	ldi	r22, 0x01	; 1
   16a38:	80 81       	ld	r24, Z
   16a3a:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   16a3e:	68 ec       	ldi	r22, 0xC8	; 200
   16a40:	70 e0       	ldi	r23, 0x00	; 0
   16a42:	80 e0       	ldi	r24, 0x00	; 0
   16a44:	90 e0       	ldi	r25, 0x00	; 0
   16a46:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16a4a:	0f 5f       	subi	r16, 0xFF	; 255
   16a4c:	1f 4f       	sbci	r17, 0xFF	; 255
   16a4e:	05 30       	cpi	r16, 0x05	; 5
   16a50:	11 05       	cpc	r17, r1
   16a52:	e9 f6       	brne	.-70     	; 0x16a0e <_Z22Valve_Grouping_Handlerh+0x13da>
   16a54:	36 c0       	rjmp	.+108    	; 0x16ac2 <_Z22Valve_Grouping_Handlerh+0x148e>
   16a56:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16a5a:	81 30       	cpi	r24, 0x01	; 1
   16a5c:	51 f4       	brne	.+20     	; 0x16a72 <_Z22Valve_Grouping_Handlerh+0x143e>
   16a5e:	63 e7       	ldi	r22, 0x73	; 115
   16a60:	7b e3       	ldi	r23, 0x3B	; 59
   16a62:	8f e6       	ldi	r24, 0x6F	; 111
   16a64:	96 e1       	ldi	r25, 0x16	; 22
   16a66:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16a6a:	8f e6       	ldi	r24, 0x6F	; 111
   16a6c:	96 e1       	ldi	r25, 0x16	; 22
   16a6e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16a72:	f2 e0       	ldi	r31, 0x02	; 2
   16a74:	3f 12       	cpse	r3, r31
   16a76:	27 c0       	rjmp	.+78     	; 0x16ac6 <_Z22Valve_Grouping_Handlerh+0x1492>
   16a78:	86 e0       	ldi	r24, 0x06	; 6
   16a7a:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   16a7e:	84 e6       	ldi	r24, 0x64	; 100
   16a80:	90 e0       	ldi	r25, 0x00	; 0
   16a82:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   16a86:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   16a8a:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   16a8e:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   16a92:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   16a96:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   16a9a:	a0 62       	ori	r26, 0x20	; 32
   16a9c:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   16aa0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   16aa4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   16aa8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   16aac:	40 92 17 16 	sts	0x1617, r4	; 0x801617 <_sRuble_Parameters+0xb2>
   16ab0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   16ab4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   16ab8:	82 60       	ori	r24, 0x02	; 2
   16aba:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   16abe:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   16ac2:	80 e0       	ldi	r24, 0x00	; 0
   16ac4:	56 c0       	rjmp	.+172    	; 0x16b72 <_Z22Valve_Grouping_Handlerh+0x153e>
   16ac6:	68 ee       	ldi	r22, 0xE8	; 232
   16ac8:	73 e0       	ldi	r23, 0x03	; 3
   16aca:	80 e0       	ldi	r24, 0x00	; 0
   16acc:	90 e0       	ldi	r25, 0x00	; 0
   16ace:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16ad2:	23 e0       	ldi	r18, 0x03	; 3
   16ad4:	32 12       	cpse	r3, r18
   16ad6:	20 ce       	rjmp	.-960    	; 0x16718 <_Z22Valve_Grouping_Handlerh+0x10e4>
   16ad8:	35 c0       	rjmp	.+106    	; 0x16b44 <_Z22Valve_Grouping_Handlerh+0x1510>
   16ada:	3c e0       	ldi	r19, 0x0C	; 12
   16adc:	3f 15       	cp	r19, r15
   16ade:	78 f4       	brcc	.+30     	; 0x16afe <_Z22Valve_Grouping_Handlerh+0x14ca>
   16ae0:	ef 2d       	mov	r30, r15
   16ae2:	f0 e0       	ldi	r31, 0x00	; 0
   16ae4:	e8 51       	subi	r30, 0x18	; 24
   16ae6:	fa 4e       	sbci	r31, 0xEA	; 234
   16ae8:	6b a9       	ldd	r22, Y+51	; 0x33
   16aea:	80 81       	ld	r24, Z
   16aec:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   16af0:	68 ec       	ldi	r22, 0xC8	; 200
   16af2:	70 e0       	ldi	r23, 0x00	; 0
   16af4:	80 e0       	ldi	r24, 0x00	; 0
   16af6:	90 e0       	ldi	r25, 0x00	; 0
   16af8:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16afc:	23 c0       	rjmp	.+70     	; 0x16b44 <_Z22Valve_Grouping_Handlerh+0x1510>
   16afe:	01 97       	sbiw	r24, 0x01	; 1
   16b00:	26 e0       	ldi	r18, 0x06	; 6
   16b02:	28 9f       	mul	r18, r24
   16b04:	f0 01       	movw	r30, r0
   16b06:	29 9f       	mul	r18, r25
   16b08:	f0 0d       	add	r31, r0
   16b0a:	11 24       	eor	r1, r1
   16b0c:	e3 50       	subi	r30, 0x03	; 3
   16b0e:	f3 4f       	sbci	r31, 0xF3	; 243
   16b10:	e0 0f       	add	r30, r16
   16b12:	f1 1f       	adc	r31, r17
   16b14:	81 81       	ldd	r24, Z+1	; 0x01
   16b16:	85 36       	cpi	r24, 0x65	; 101
   16b18:	a9 f4       	brne	.+42     	; 0x16b44 <_Z22Valve_Grouping_Handlerh+0x1510>
   16b1a:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   16b1e:	41 e0       	ldi	r20, 0x01	; 1
   16b20:	54 12       	cpse	r5, r20
   16b22:	05 c0       	rjmp	.+10     	; 0x16b2e <_Z22Valve_Grouping_Handlerh+0x14fa>
   16b24:	88 23       	and	r24, r24
   16b26:	71 f0       	breq	.+28     	; 0x16b44 <_Z22Valve_Grouping_Handlerh+0x1510>
   16b28:	50 92 24 16 	sts	0x1624, r5	; 0x801624 <_sRuble_Parameters+0xbf>
   16b2c:	05 c0       	rjmp	.+10     	; 0x16b38 <_Z22Valve_Grouping_Handlerh+0x1504>
   16b2e:	88 23       	and	r24, r24
   16b30:	49 f0       	breq	.+18     	; 0x16b44 <_Z22Valve_Grouping_Handlerh+0x1510>
   16b32:	82 e0       	ldi	r24, 0x02	; 2
   16b34:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
   16b38:	64 e2       	ldi	r22, 0x24	; 36
   16b3a:	76 e1       	ldi	r23, 0x16	; 22
   16b3c:	80 e3       	ldi	r24, 0x30	; 48
   16b3e:	9c e0       	ldi	r25, 0x0C	; 12
   16b40:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16b44:	0f 5f       	subi	r16, 0xFF	; 255
   16b46:	1f 4f       	sbci	r17, 0xFF	; 255
   16b48:	05 30       	cpi	r16, 0x05	; 5
   16b4a:	11 05       	cpc	r17, r1
   16b4c:	09 f0       	breq	.+2      	; 0x16b50 <_Z22Valve_Grouping_Handlerh+0x151c>
   16b4e:	07 cd       	rjmp	.-1522   	; 0x1655e <_Z22Valve_Grouping_Handlerh+0xf2a>
   16b50:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16b54:	81 30       	cpi	r24, 0x01	; 1
   16b56:	61 f4       	brne	.+24     	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   16b58:	64 e5       	ldi	r22, 0x54	; 84
   16b5a:	7b e3       	ldi	r23, 0x3B	; 59
   16b5c:	8f e6       	ldi	r24, 0x6F	; 111
   16b5e:	96 e1       	ldi	r25, 0x16	; 22
   16b60:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16b64:	8f e6       	ldi	r24, 0x6F	; 111
   16b66:	96 e1       	ldi	r25, 0x16	; 22
   16b68:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16b6c:	01 c0       	rjmp	.+2      	; 0x16b70 <_Z22Valve_Grouping_Handlerh+0x153c>
   16b6e:	01 c0       	rjmp	.+2      	; 0x16b72 <_Z22Valve_Grouping_Handlerh+0x153e>
   16b70:	81 e0       	ldi	r24, 0x01	; 1
   16b72:	e8 96       	adiw	r28, 0x38	; 56
   16b74:	0f b6       	in	r0, 0x3f	; 63
   16b76:	f8 94       	cli
   16b78:	de bf       	out	0x3e, r29	; 62
   16b7a:	0f be       	out	0x3f, r0	; 63
   16b7c:	cd bf       	out	0x3d, r28	; 61
   16b7e:	df 91       	pop	r29
   16b80:	cf 91       	pop	r28
   16b82:	1f 91       	pop	r17
   16b84:	0f 91       	pop	r16
   16b86:	ff 90       	pop	r15
   16b88:	ef 90       	pop	r14
   16b8a:	df 90       	pop	r13
   16b8c:	cf 90       	pop	r12
   16b8e:	bf 90       	pop	r11
   16b90:	af 90       	pop	r10
   16b92:	9f 90       	pop	r9
   16b94:	8f 90       	pop	r8
   16b96:	7f 90       	pop	r7
   16b98:	6f 90       	pop	r6
   16b9a:	5f 90       	pop	r5
   16b9c:	4f 90       	pop	r4
   16b9e:	3f 90       	pop	r3
   16ba0:	2f 90       	pop	r2
   16ba2:	08 95       	ret

00016ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>:
   16ba4:	2f 92       	push	r2
   16ba6:	3f 92       	push	r3
   16ba8:	4f 92       	push	r4
   16baa:	5f 92       	push	r5
   16bac:	6f 92       	push	r6
   16bae:	7f 92       	push	r7
   16bb0:	8f 92       	push	r8
   16bb2:	9f 92       	push	r9
   16bb4:	af 92       	push	r10
   16bb6:	bf 92       	push	r11
   16bb8:	cf 92       	push	r12
   16bba:	df 92       	push	r13
   16bbc:	ef 92       	push	r14
   16bbe:	ff 92       	push	r15
   16bc0:	0f 93       	push	r16
   16bc2:	1f 93       	push	r17
   16bc4:	cf 93       	push	r28
   16bc6:	df 93       	push	r29
   16bc8:	00 d0       	rcall	.+0      	; 0x16bca <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x26>
   16bca:	cd b7       	in	r28, 0x3d	; 61
   16bcc:	de b7       	in	r29, 0x3e	; 62
   16bce:	89 83       	std	Y+1, r24	; 0x01
   16bd0:	6a 83       	std	Y+2, r22	; 0x02
   16bd2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16bd6:	81 30       	cpi	r24, 0x01	; 1
   16bd8:	31 f4       	brne	.+12     	; 0x16be6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42>
   16bda:	67 e9       	ldi	r22, 0x97	; 151
   16bdc:	7e e2       	ldi	r23, 0x2E	; 46
   16bde:	8f e6       	ldi	r24, 0x6F	; 111
   16be0:	96 e1       	ldi	r25, 0x16	; 22
   16be2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16be6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16bea:	81 30       	cpi	r24, 0x01	; 1
   16bec:	89 f5       	brne	.+98     	; 0x16c50 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xac>
   16bee:	3a 81       	ldd	r19, Y+2	; 0x02
   16bf0:	2b e1       	ldi	r18, 0x1B	; 27
   16bf2:	32 9f       	mul	r19, r18
   16bf4:	60 01       	movw	r12, r0
   16bf6:	11 24       	eor	r1, r1
   16bf8:	e1 2c       	mov	r14, r1
   16bfa:	f1 2c       	mov	r15, r1
   16bfc:	f6 01       	movw	r30, r12
   16bfe:	ee 0d       	add	r30, r14
   16c00:	ff 1d       	adc	r31, r15
   16c02:	e1 56       	subi	r30, 0x61	; 97
   16c04:	f0 4f       	sbci	r31, 0xF0	; 240
   16c06:	4a e0       	ldi	r20, 0x0A	; 10
   16c08:	50 e0       	ldi	r21, 0x00	; 0
   16c0a:	65 81       	ldd	r22, Z+5	; 0x05
   16c0c:	8f e6       	ldi	r24, 0x6F	; 111
   16c0e:	96 e1       	ldi	r25, 0x16	; 22
   16c10:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   16c14:	65 e9       	ldi	r22, 0x95	; 149
   16c16:	7e e2       	ldi	r23, 0x2E	; 46
   16c18:	8f e6       	ldi	r24, 0x6F	; 111
   16c1a:	96 e1       	ldi	r25, 0x16	; 22
   16c1c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16c20:	4f ef       	ldi	r20, 0xFF	; 255
   16c22:	e4 1a       	sub	r14, r20
   16c24:	f4 0a       	sbc	r15, r20
   16c26:	85 e0       	ldi	r24, 0x05	; 5
   16c28:	e8 16       	cp	r14, r24
   16c2a:	f1 04       	cpc	r15, r1
   16c2c:	39 f7       	brne	.-50     	; 0x16bfc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x58>
   16c2e:	69 e7       	ldi	r22, 0x79	; 121
   16c30:	7e e2       	ldi	r23, 0x2E	; 46
   16c32:	8f e6       	ldi	r24, 0x6F	; 111
   16c34:	96 e1       	ldi	r25, 0x16	; 22
   16c36:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16c3a:	4a e0       	ldi	r20, 0x0A	; 10
   16c3c:	50 e0       	ldi	r21, 0x00	; 0
   16c3e:	6a 81       	ldd	r22, Y+2	; 0x02
   16c40:	8f e6       	ldi	r24, 0x6F	; 111
   16c42:	96 e1       	ldi	r25, 0x16	; 22
   16c44:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   16c48:	8f e6       	ldi	r24, 0x6F	; 111
   16c4a:	96 e1       	ldi	r25, 0x16	; 22
   16c4c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16c50:	9a 81       	ldd	r25, Y+2	; 0x02
   16c52:	94 30       	cpi	r25, 0x04	; 4
   16c54:	19 f4       	brne	.+6      	; 0x16c5c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xb8>
   16c56:	e9 81       	ldd	r30, Y+1	; 0x01
   16c58:	e1 30       	cpi	r30, 0x01	; 1
   16c5a:	91 f0       	breq	.+36     	; 0x16c80 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xdc>
   16c5c:	2a 81       	ldd	r18, Y+2	; 0x02
   16c5e:	4b e1       	ldi	r20, 0x1B	; 27
   16c60:	24 9f       	mul	r18, r20
   16c62:	90 01       	movw	r18, r0
   16c64:	11 24       	eor	r1, r1
   16c66:	3b 83       	std	Y+3, r19	; 0x03
   16c68:	2a 83       	std	Y+2, r18	; 0x02
   16c6a:	e1 2c       	mov	r14, r1
   16c6c:	f1 2c       	mov	r15, r1
   16c6e:	54 e1       	ldi	r21, 0x14	; 20
   16c70:	a5 2e       	mov	r10, r21
   16c72:	67 e0       	ldi	r22, 0x07	; 7
   16c74:	c6 2e       	mov	r12, r22
   16c76:	72 e0       	ldi	r23, 0x02	; 2
   16c78:	b7 2e       	mov	r11, r23
   16c7a:	ed e0       	ldi	r30, 0x0D	; 13
   16c7c:	de 2e       	mov	r13, r30
   16c7e:	8e c1       	rjmp	.+796    	; 0x16f9c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3f8>
   16c80:	e0 e1       	ldi	r30, 0x10	; 16
   16c82:	f0 e1       	ldi	r31, 0x10	; 16
   16c84:	80 e0       	ldi	r24, 0x00	; 0
   16c86:	91 91       	ld	r25, Z+
   16c88:	91 11       	cpse	r25, r1
   16c8a:	8f 5f       	subi	r24, 0xFF	; 255
   16c8c:	30 e1       	ldi	r19, 0x10	; 16
   16c8e:	e5 31       	cpi	r30, 0x15	; 21
   16c90:	f3 07       	cpc	r31, r19
   16c92:	c9 f7       	brne	.-14     	; 0x16c86 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xe2>
   16c94:	82 30       	cpi	r24, 0x02	; 2
   16c96:	18 f4       	brcc	.+6      	; 0x16c9e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0xfa>
   16c98:	91 e0       	ldi	r25, 0x01	; 1
   16c9a:	90 93 9a 0c 	sts	0x0C9A, r25	; 0x800c9a <_gRunning_Flush_Num>
   16c9e:	90 91 9a 0c 	lds	r25, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
   16ca2:	99 23       	and	r25, r25
   16ca4:	11 f0       	breq	.+4      	; 0x16caa <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x106>
   16ca6:	89 17       	cp	r24, r25
   16ca8:	48 f4       	brcc	.+18     	; 0x16cbc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x118>
   16caa:	81 e0       	ldi	r24, 0x01	; 1
   16cac:	80 93 9a 0c 	sts	0x0C9A, r24	; 0x800c9a <_gRunning_Flush_Num>
   16cb0:	6a e9       	ldi	r22, 0x9A	; 154
   16cb2:	7c e0       	ldi	r23, 0x0C	; 12
   16cb4:	8f e3       	ldi	r24, 0x3F	; 63
   16cb6:	9e e0       	ldi	r25, 0x0E	; 14
   16cb8:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   16cbc:	e0 91 9a 0c 	lds	r30, 0x0C9A	; 0x800c9a <_gRunning_Flush_Num>
   16cc0:	f0 e0       	ldi	r31, 0x00	; 0
   16cc2:	e1 5f       	subi	r30, 0xF1	; 241
   16cc4:	ff 4e       	sbci	r31, 0xEF	; 239
   16cc6:	e0 81       	ld	r30, Z
   16cc8:	ed 30       	cpi	r30, 0x0D	; 13
   16cca:	20 f4       	brcc	.+8      	; 0x16cd4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x130>
   16ccc:	80 91 15 10 	lds	r24, 0x1015	; 0x801015 <_sExtra_Plot+0x76>
   16cd0:	81 11       	cpse	r24, r1
   16cd2:	f7 c2       	rjmp	.+1518   	; 0x172c2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x71e>
   16cd4:	f0 e0       	ldi	r31, 0x00	; 0
   16cd6:	e8 51       	subi	r30, 0x18	; 24
   16cd8:	fa 4e       	sbci	r31, 0xEA	; 234
   16cda:	60 e0       	ldi	r22, 0x00	; 0
   16cdc:	80 81       	ld	r24, Z
   16cde:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   16ce2:	68 ec       	ldi	r22, 0xC8	; 200
   16ce4:	70 e0       	ldi	r23, 0x00	; 0
   16ce6:	80 e0       	ldi	r24, 0x00	; 0
   16ce8:	90 e0       	ldi	r25, 0x00	; 0
   16cea:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16cee:	e9 c2       	rjmp	.+1490   	; 0x172c2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x71e>
   16cf0:	43 e0       	ldi	r20, 0x03	; 3
   16cf2:	48 15       	cp	r20, r8
   16cf4:	08 f0       	brcs	.+2      	; 0x16cf8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x154>
   16cf6:	63 c1       	rjmp	.+710    	; 0x16fbe <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x41a>
   16cf8:	6b ea       	ldi	r22, 0xAB	; 171
   16cfa:	86 9e       	mul	r8, r22
   16cfc:	71 2c       	mov	r7, r1
   16cfe:	11 24       	eor	r1, r1
   16d00:	87 2d       	mov	r24, r7
   16d02:	86 95       	lsr	r24
   16d04:	98 2f       	mov	r25, r24
   16d06:	99 0f       	add	r25, r25
   16d08:	89 0f       	add	r24, r25
   16d0a:	88 1a       	sub	r8, r24
   16d0c:	67 2d       	mov	r22, r7
   16d0e:	66 95       	lsr	r22
   16d10:	88 20       	and	r8, r8
   16d12:	09 f4       	brne	.+2      	; 0x16d16 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x172>
   16d14:	50 c1       	rjmp	.+672    	; 0x16fb6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x412>
   16d16:	01 e0       	ldi	r16, 0x01	; 1
   16d18:	06 0f       	add	r16, r22
   16d1a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16d1e:	81 30       	cpi	r24, 0x01	; 1
   16d20:	89 f4       	brne	.+34     	; 0x16d44 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1a0>
   16d22:	65 e6       	ldi	r22, 0x65	; 101
   16d24:	7e e2       	ldi	r23, 0x2E	; 46
   16d26:	8f e6       	ldi	r24, 0x6F	; 111
   16d28:	96 e1       	ldi	r25, 0x16	; 22
   16d2a:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16d2e:	8f e6       	ldi	r24, 0x6F	; 111
   16d30:	96 e1       	ldi	r25, 0x16	; 22
   16d32:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16d36:	4a e0       	ldi	r20, 0x0A	; 10
   16d38:	50 e0       	ldi	r21, 0x00	; 0
   16d3a:	60 2f       	mov	r22, r16
   16d3c:	8f e6       	ldi	r24, 0x6F	; 111
   16d3e:	96 e1       	ldi	r25, 0x16	; 22
   16d40:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   16d44:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   16d48:	81 11       	cpse	r24, r1
   16d4a:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   16d4e:	ec ea       	ldi	r30, 0xAC	; 172
   16d50:	f5 e1       	ldi	r31, 0x15	; 21
   16d52:	2a 2d       	mov	r18, r10
   16d54:	11 92       	st	Z+, r1
   16d56:	2a 95       	dec	r18
   16d58:	e9 f7       	brne	.-6      	; 0x16d54 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x1b0>
   16d5a:	60 2f       	mov	r22, r16
   16d5c:	70 e0       	ldi	r23, 0x00	; 0
   16d5e:	61 50       	subi	r22, 0x01	; 1
   16d60:	71 09       	sbc	r23, r1
   16d62:	c6 9e       	mul	r12, r22
   16d64:	c0 01       	movw	r24, r0
   16d66:	c7 9e       	mul	r12, r23
   16d68:	90 0d       	add	r25, r0
   16d6a:	11 24       	eor	r1, r1
   16d6c:	8b 59       	subi	r24, 0x9B	; 155
   16d6e:	9a 4e       	sbci	r25, 0xEA	; 234
   16d70:	fc 01       	movw	r30, r24
   16d72:	ec 58       	subi	r30, 0x8C	; 140
   16d74:	ff 4f       	sbci	r31, 0xFF	; 255
   16d76:	20 81       	ld	r18, Z
   16d78:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
   16d7c:	31 96       	adiw	r30, 0x01	; 1
   16d7e:	20 81       	ld	r18, Z
   16d80:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
   16d84:	31 96       	adiw	r30, 0x01	; 1
   16d86:	20 81       	ld	r18, Z
   16d88:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
   16d8c:	31 96       	adiw	r30, 0x01	; 1
   16d8e:	20 81       	ld	r18, Z
   16d90:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
   16d94:	31 96       	adiw	r30, 0x01	; 1
   16d96:	20 81       	ld	r18, Z
   16d98:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
   16d9c:	31 96       	adiw	r30, 0x01	; 1
   16d9e:	20 81       	ld	r18, Z
   16da0:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
   16da4:	b0 92 b2 15 	sts	0x15B2, r11	; 0x8015b2 <_sRuble_Parameters+0x4d>
   16da8:	39 81       	ldd	r19, Y+1	; 0x01
   16daa:	30 93 b3 15 	sts	0x15B3, r19	; 0x8015b3 <_sRuble_Parameters+0x4e>
   16dae:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   16db2:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
   16db6:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   16dba:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
   16dbe:	80 92 b7 15 	sts	0x15B7, r8	; 0x8015b7 <_sRuble_Parameters+0x52>
   16dc2:	40 e0       	ldi	r20, 0x00	; 0
   16dc4:	50 e0       	ldi	r21, 0x00	; 0
   16dc6:	64 2e       	mov	r6, r20
   16dc8:	00 e0       	ldi	r16, 0x00	; 0
   16dca:	81 2c       	mov	r8, r1
   16dcc:	d4 9e       	mul	r13, r20
   16dce:	b0 01       	movw	r22, r0
   16dd0:	d5 9e       	mul	r13, r21
   16dd2:	70 0d       	add	r23, r0
   16dd4:	11 24       	eor	r1, r1
   16dd6:	69 51       	subi	r22, 0x19	; 25
   16dd8:	74 4f       	sbci	r23, 0xF4	; 244
   16dda:	28 2d       	mov	r18, r8
   16ddc:	30 e0       	ldi	r19, 0x00	; 0
   16dde:	fb 01       	movw	r30, r22
   16de0:	e2 0f       	add	r30, r18
   16de2:	f3 1f       	adc	r31, r19
   16de4:	28 0f       	add	r18, r24
   16de6:	39 1f       	adc	r19, r25
   16de8:	d9 01       	movw	r26, r18
   16dea:	ac 58       	subi	r26, 0x8C	; 140
   16dec:	bf 4f       	sbci	r27, 0xFF	; 255
   16dee:	31 81       	ldd	r19, Z+1	; 0x01
   16df0:	2c 91       	ld	r18, X
   16df2:	32 17       	cp	r19, r18
   16df4:	19 f0       	breq	.+6      	; 0x16dfc <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x258>
   16df6:	00 e0       	ldi	r16, 0x00	; 0
   16df8:	36 e0       	ldi	r19, 0x06	; 6
   16dfa:	83 2e       	mov	r8, r19
   16dfc:	0f 5f       	subi	r16, 0xFF	; 255
   16dfe:	83 94       	inc	r8
   16e00:	e5 e0       	ldi	r30, 0x05	; 5
   16e02:	e8 15       	cp	r30, r8
   16e04:	50 f7       	brcc	.-44     	; 0x16dda <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x236>
   16e06:	06 30       	cpi	r16, 0x06	; 6
   16e08:	09 f4       	brne	.+2      	; 0x16e0c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x268>
   16e0a:	db c0       	rjmp	.+438    	; 0x16fc2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x41e>
   16e0c:	4f 5f       	subi	r20, 0xFF	; 255
   16e0e:	5f 4f       	sbci	r21, 0xFF	; 255
   16e10:	44 30       	cpi	r20, 0x04	; 4
   16e12:	51 05       	cpc	r21, r1
   16e14:	c1 f6       	brne	.-80     	; 0x16dc6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x222>
   16e16:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16e1a:	81 30       	cpi	r24, 0x01	; 1
   16e1c:	89 f4       	brne	.+34     	; 0x16e40 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x29c>
   16e1e:	6f e4       	ldi	r22, 0x4F	; 79
   16e20:	7e e2       	ldi	r23, 0x2E	; 46
   16e22:	8f e6       	ldi	r24, 0x6F	; 111
   16e24:	96 e1       	ldi	r25, 0x16	; 22
   16e26:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16e2a:	4a e0       	ldi	r20, 0x0A	; 10
   16e2c:	50 e0       	ldi	r21, 0x00	; 0
   16e2e:	61 2f       	mov	r22, r17
   16e30:	8f e6       	ldi	r24, 0x6F	; 111
   16e32:	96 e1       	ldi	r25, 0x16	; 22
   16e34:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   16e38:	8f e6       	ldi	r24, 0x6F	; 111
   16e3a:	96 e1       	ldi	r25, 0x16	; 22
   16e3c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16e40:	fd e0       	ldi	r31, 0x0D	; 13
   16e42:	1f 9f       	mul	r17, r31
   16e44:	40 01       	movw	r8, r0
   16e46:	11 24       	eor	r1, r1
   16e48:	00 e0       	ldi	r16, 0x00	; 0
   16e4a:	d1 9e       	mul	r13, r17
   16e4c:	c0 01       	movw	r24, r0
   16e4e:	11 24       	eor	r1, r1
   16e50:	9c 01       	movw	r18, r24
   16e52:	29 51       	subi	r18, 0x19	; 25
   16e54:	34 4f       	sbci	r19, 0xF4	; 244
   16e56:	19 01       	movw	r2, r18
   16e58:	4b e0       	ldi	r20, 0x0B	; 11
   16e5a:	24 0e       	add	r2, r20
   16e5c:	31 1c       	adc	r3, r1
   16e5e:	29 01       	movw	r4, r18
   16e60:	e8 e0       	ldi	r30, 0x08	; 8
   16e62:	4e 0e       	add	r4, r30
   16e64:	51 1c       	adc	r5, r1
   16e66:	9c 01       	movw	r18, r24
   16e68:	28 51       	subi	r18, 0x18	; 24
   16e6a:	34 4f       	sbci	r19, 0xF4	; 244
   16e6c:	39 01       	movw	r6, r18
   16e6e:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   16e72:	81 11       	cpse	r24, r1
   16e74:	a8 c0       	rjmp	.+336    	; 0x16fc6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x422>
   16e76:	0f 5f       	subi	r16, 0xFF	; 255
   16e78:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16e7c:	81 30       	cpi	r24, 0x01	; 1
   16e7e:	51 f4       	brne	.+20     	; 0x16e94 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2f0>
   16e80:	6b e2       	ldi	r22, 0x2B	; 43
   16e82:	7e e2       	ldi	r23, 0x2E	; 46
   16e84:	8f e6       	ldi	r24, 0x6F	; 111
   16e86:	96 e1       	ldi	r25, 0x16	; 22
   16e88:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16e8c:	8f e6       	ldi	r24, 0x6F	; 111
   16e8e:	96 e1       	ldi	r25, 0x16	; 22
   16e90:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16e94:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   16e98:	8c e0       	ldi	r24, 0x0C	; 12
   16e9a:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   16e9e:	88 eb       	ldi	r24, 0xB8	; 184
   16ea0:	9b e0       	ldi	r25, 0x0B	; 11
   16ea2:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   16ea6:	88 23       	and	r24, r24
   16ea8:	09 f4       	brne	.+2      	; 0x16eac <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x308>
   16eaa:	93 c1       	rjmp	.+806    	; 0x171d2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x62e>
   16eac:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   16eb0:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16eb4:	88 23       	and	r24, r24
   16eb6:	09 f4       	brne	.+2      	; 0x16eba <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x316>
   16eb8:	3a c1       	rjmp	.+628    	; 0x1712e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x58a>
   16eba:	91 30       	cpi	r25, 0x01	; 1
   16ebc:	59 f5       	brne	.+86     	; 0x16f14 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x370>
   16ebe:	65 e1       	ldi	r22, 0x15	; 21
   16ec0:	7e e2       	ldi	r23, 0x2E	; 46
   16ec2:	8f e6       	ldi	r24, 0x6F	; 111
   16ec4:	96 e1       	ldi	r25, 0x16	; 22
   16ec6:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16eca:	4a e0       	ldi	r20, 0x0A	; 10
   16ecc:	50 e0       	ldi	r21, 0x00	; 0
   16ece:	60 ec       	ldi	r22, 0xC0	; 192
   16ed0:	75 e1       	ldi	r23, 0x15	; 21
   16ed2:	8f e6       	ldi	r24, 0x6F	; 111
   16ed4:	96 e1       	ldi	r25, 0x16	; 22
   16ed6:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   16eda:	8f e6       	ldi	r24, 0x6F	; 111
   16edc:	96 e1       	ldi	r25, 0x16	; 22
   16ede:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   16ee2:	8f e6       	ldi	r24, 0x6F	; 111
   16ee4:	96 e1       	ldi	r25, 0x16	; 22
   16ee6:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16eea:	67 ef       	ldi	r22, 0xF7	; 247
   16eec:	7d e2       	ldi	r23, 0x2D	; 45
   16eee:	8f e6       	ldi	r24, 0x6F	; 111
   16ef0:	96 e1       	ldi	r25, 0x16	; 22
   16ef2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   16ef6:	47 e0       	ldi	r20, 0x07	; 7
   16ef8:	50 e0       	ldi	r21, 0x00	; 0
   16efa:	b3 01       	movw	r22, r6
   16efc:	8f e6       	ldi	r24, 0x6F	; 111
   16efe:	96 e1       	ldi	r25, 0x16	; 22
   16f00:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   16f04:	8f e6       	ldi	r24, 0x6F	; 111
   16f06:	96 e1       	ldi	r25, 0x16	; 22
   16f08:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   16f0c:	8f e6       	ldi	r24, 0x6F	; 111
   16f0e:	96 e1       	ldi	r25, 0x16	; 22
   16f10:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16f14:	a0 ec       	ldi	r26, 0xC0	; 192
   16f16:	b5 e1       	ldi	r27, 0x15	; 21
   16f18:	80 e0       	ldi	r24, 0x00	; 0
   16f1a:	90 e0       	ldi	r25, 0x00	; 0
   16f1c:	2d 91       	ld	r18, X+
   16f1e:	f4 01       	movw	r30, r8
   16f20:	e8 0f       	add	r30, r24
   16f22:	f9 1f       	adc	r31, r25
   16f24:	e9 51       	subi	r30, 0x19	; 25
   16f26:	f4 4f       	sbci	r31, 0xF4	; 244
   16f28:	31 81       	ldd	r19, Z+1	; 0x01
   16f2a:	32 17       	cp	r19, r18
   16f2c:	09 f4       	brne	.+2      	; 0x16f30 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x38c>
   16f2e:	a5 c0       	rjmp	.+330    	; 0x1707a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4d6>
   16f30:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   16f34:	81 30       	cpi	r24, 0x01	; 1
   16f36:	51 f4       	brne	.+20     	; 0x16f4c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3a8>
   16f38:	6c ec       	ldi	r22, 0xCC	; 204
   16f3a:	7d e2       	ldi	r23, 0x2D	; 45
   16f3c:	8f e6       	ldi	r24, 0x6F	; 111
   16f3e:	96 e1       	ldi	r25, 0x16	; 22
   16f40:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   16f44:	8f e6       	ldi	r24, 0x6F	; 111
   16f46:	96 e1       	ldi	r25, 0x16	; 22
   16f48:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   16f4c:	02 30       	cpi	r16, 0x02	; 2
   16f4e:	09 f4       	brne	.+2      	; 0x16f52 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ae>
   16f50:	50 c0       	rjmp	.+160    	; 0x16ff2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x44e>
   16f52:	21 e0       	ldi	r18, 0x01	; 1
   16f54:	f1 01       	movw	r30, r2
   16f56:	20 83       	st	Z, r18
   16f58:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   16f5c:	90 e0       	ldi	r25, 0x00	; 0
   16f5e:	98 2f       	mov	r25, r24
   16f60:	88 27       	eor	r24, r24
   16f62:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   16f66:	82 2b       	or	r24, r18
   16f68:	f2 01       	movw	r30, r4
   16f6a:	91 83       	std	Z+1, r25	; 0x01
   16f6c:	80 83       	st	Z, r24
   16f6e:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   16f72:	f9 81       	ldd	r31, Y+1	; 0x01
   16f74:	f8 13       	cpse	r31, r24
   16f76:	87 c0       	rjmp	.+270    	; 0x17086 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4e2>
   16f78:	03 e0       	ldi	r16, 0x03	; 3
   16f7a:	68 ee       	ldi	r22, 0xE8	; 232
   16f7c:	73 e0       	ldi	r23, 0x03	; 3
   16f7e:	80 e0       	ldi	r24, 0x00	; 0
   16f80:	90 e0       	ldi	r25, 0x00	; 0
   16f82:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   16f86:	03 30       	cpi	r16, 0x03	; 3
   16f88:	09 f0       	breq	.+2      	; 0x16f8c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   16f8a:	71 cf       	rjmp	.-286    	; 0x16e6e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2ca>
   16f8c:	4f ef       	ldi	r20, 0xFF	; 255
   16f8e:	e4 1a       	sub	r14, r20
   16f90:	f4 0a       	sbc	r15, r20
   16f92:	85 e0       	ldi	r24, 0x05	; 5
   16f94:	e8 16       	cp	r14, r24
   16f96:	f1 04       	cpc	r15, r1
   16f98:	09 f4       	brne	.+2      	; 0x16f9c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3f8>
   16f9a:	85 c1       	rjmp	.+778    	; 0x172a6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x702>
   16f9c:	ea 81       	ldd	r30, Y+2	; 0x02
   16f9e:	fb 81       	ldd	r31, Y+3	; 0x03
   16fa0:	ee 0d       	add	r30, r14
   16fa2:	ff 1d       	adc	r31, r15
   16fa4:	e1 56       	subi	r30, 0x61	; 97
   16fa6:	f0 4f       	sbci	r31, 0xF0	; 240
   16fa8:	85 80       	ldd	r8, Z+5	; 0x05
   16faa:	8f ef       	ldi	r24, 0xFF	; 255
   16fac:	88 0d       	add	r24, r8
   16fae:	8c 30       	cpi	r24, 0x0C	; 12
   16fb0:	08 f0       	brcs	.+2      	; 0x16fb4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x410>
   16fb2:	63 c1       	rjmp	.+710    	; 0x1727a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6d6>
   16fb4:	9d ce       	rjmp	.-710    	; 0x16cf0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x14c>
   16fb6:	06 2f       	mov	r16, r22
   16fb8:	43 e0       	ldi	r20, 0x03	; 3
   16fba:	84 2e       	mov	r8, r20
   16fbc:	ae ce       	rjmp	.-676    	; 0x16d1a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   16fbe:	01 e0       	ldi	r16, 0x01	; 1
   16fc0:	ac ce       	rjmp	.-680    	; 0x16d1a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x176>
   16fc2:	16 2d       	mov	r17, r6
   16fc4:	28 cf       	rjmp	.-432    	; 0x16e16 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x272>
   16fc6:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   16fca:	88 23       	and	r24, r24
   16fcc:	09 f4       	brne	.+2      	; 0x16fd0 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x42c>
   16fce:	53 cf       	rjmp	.-346    	; 0x16e76 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d2>
   16fd0:	e7 e8       	ldi	r30, 0x87	; 135
   16fd2:	f1 e1       	ldi	r31, 0x11	; 17
   16fd4:	01 90       	ld	r0, Z+
   16fd6:	00 20       	and	r0, r0
   16fd8:	e9 f7       	brne	.-6      	; 0x16fd4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x430>
   16fda:	31 97       	sbiw	r30, 0x01	; 1
   16fdc:	af 01       	movw	r20, r30
   16fde:	47 58       	subi	r20, 0x87	; 135
   16fe0:	51 41       	sbci	r21, 0x11	; 17
   16fe2:	21 e0       	ldi	r18, 0x01	; 1
   16fe4:	67 e8       	ldi	r22, 0x87	; 135
   16fe6:	71 e1       	ldi	r23, 0x11	; 17
   16fe8:	89 e1       	ldi	r24, 0x19	; 25
   16fea:	91 e1       	ldi	r25, 0x11	; 17
   16fec:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   16ff0:	42 cf       	rjmp	.-380    	; 0x16e76 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x2d2>
   16ff2:	86 e0       	ldi	r24, 0x06	; 6
   16ff4:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   16ff8:	84 e6       	ldi	r24, 0x64	; 100
   16ffa:	90 e0       	ldi	r25, 0x00	; 0
   16ffc:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   17000:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   17004:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17008:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1700c:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17010:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17014:	a0 62       	ori	r26, 0x20	; 32
   17016:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1701a:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   1701e:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17022:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17026:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
   1702a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1702e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17032:	82 60       	ori	r24, 0x02	; 2
   17034:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17038:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1703c:	00 e0       	ldi	r16, 0x00	; 0
   1703e:	10 e0       	ldi	r17, 0x00	; 0
   17040:	ea 81       	ldd	r30, Y+2	; 0x02
   17042:	fb 81       	ldd	r31, Y+3	; 0x03
   17044:	e0 0f       	add	r30, r16
   17046:	f1 1f       	adc	r31, r17
   17048:	e1 56       	subi	r30, 0x61	; 97
   1704a:	f0 4f       	sbci	r31, 0xF0	; 240
   1704c:	e5 81       	ldd	r30, Z+5	; 0x05
   1704e:	ed 30       	cpi	r30, 0x0D	; 13
   17050:	68 f0       	brcs	.+26     	; 0x1706c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4c8>
   17052:	f0 e0       	ldi	r31, 0x00	; 0
   17054:	e8 51       	subi	r30, 0x18	; 24
   17056:	fa 4e       	sbci	r31, 0xEA	; 234
   17058:	61 e0       	ldi	r22, 0x01	; 1
   1705a:	80 81       	ld	r24, Z
   1705c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   17060:	68 ec       	ldi	r22, 0xC8	; 200
   17062:	70 e0       	ldi	r23, 0x00	; 0
   17064:	80 e0       	ldi	r24, 0x00	; 0
   17066:	90 e0       	ldi	r25, 0x00	; 0
   17068:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1706c:	0f 5f       	subi	r16, 0xFF	; 255
   1706e:	1f 4f       	sbci	r17, 0xFF	; 255
   17070:	05 30       	cpi	r16, 0x05	; 5
   17072:	11 05       	cpc	r17, r1
   17074:	29 f7       	brne	.-54     	; 0x17040 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x49c>
   17076:	80 e0       	ldi	r24, 0x00	; 0
   17078:	25 c1       	rjmp	.+586    	; 0x172c4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x720>
   1707a:	01 96       	adiw	r24, 0x01	; 1
   1707c:	86 30       	cpi	r24, 0x06	; 6
   1707e:	91 05       	cpc	r25, r1
   17080:	09 f0       	breq	.+2      	; 0x17084 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4e0>
   17082:	4c cf       	rjmp	.-360    	; 0x16f1c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x378>
   17084:	66 cf       	rjmp	.-308    	; 0x16f52 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3ae>
   17086:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1708a:	81 30       	cpi	r24, 0x01	; 1
   1708c:	51 f4       	brne	.+20     	; 0x170a2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4fe>
   1708e:	69 eb       	ldi	r22, 0xB9	; 185
   17090:	7d e2       	ldi	r23, 0x2D	; 45
   17092:	8f e6       	ldi	r24, 0x6F	; 111
   17094:	96 e1       	ldi	r25, 0x16	; 22
   17096:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1709a:	8f e6       	ldi	r24, 0x6F	; 111
   1709c:	96 e1       	ldi	r25, 0x16	; 22
   1709e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   170a2:	02 30       	cpi	r16, 0x02	; 2
   170a4:	09 f0       	breq	.+2      	; 0x170a8 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x504>
   170a6:	69 cf       	rjmp	.-302    	; 0x16f7a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d6>
   170a8:	86 e0       	ldi	r24, 0x06	; 6
   170aa:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   170ae:	84 e6       	ldi	r24, 0x64	; 100
   170b0:	90 e0       	ldi	r25, 0x00	; 0
   170b2:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   170b6:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   170ba:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   170be:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   170c2:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   170c6:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   170ca:	a0 62       	ori	r26, 0x20	; 32
   170cc:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   170d0:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   170d4:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   170d8:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   170dc:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
   170e0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   170e4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   170e8:	82 60       	ori	r24, 0x02	; 2
   170ea:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   170ee:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   170f2:	00 e0       	ldi	r16, 0x00	; 0
   170f4:	10 e0       	ldi	r17, 0x00	; 0
   170f6:	ea 81       	ldd	r30, Y+2	; 0x02
   170f8:	fb 81       	ldd	r31, Y+3	; 0x03
   170fa:	e0 0f       	add	r30, r16
   170fc:	f1 1f       	adc	r31, r17
   170fe:	e1 56       	subi	r30, 0x61	; 97
   17100:	f0 4f       	sbci	r31, 0xF0	; 240
   17102:	e5 81       	ldd	r30, Z+5	; 0x05
   17104:	ed 30       	cpi	r30, 0x0D	; 13
   17106:	68 f0       	brcs	.+26     	; 0x17122 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x57e>
   17108:	f0 e0       	ldi	r31, 0x00	; 0
   1710a:	e8 51       	subi	r30, 0x18	; 24
   1710c:	fa 4e       	sbci	r31, 0xEA	; 234
   1710e:	61 e0       	ldi	r22, 0x01	; 1
   17110:	80 81       	ld	r24, Z
   17112:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   17116:	68 ec       	ldi	r22, 0xC8	; 200
   17118:	70 e0       	ldi	r23, 0x00	; 0
   1711a:	80 e0       	ldi	r24, 0x00	; 0
   1711c:	90 e0       	ldi	r25, 0x00	; 0
   1711e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   17122:	0f 5f       	subi	r16, 0xFF	; 255
   17124:	1f 4f       	sbci	r17, 0xFF	; 255
   17126:	05 30       	cpi	r16, 0x05	; 5
   17128:	11 05       	cpc	r17, r1
   1712a:	29 f7       	brne	.-54     	; 0x170f6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x552>
   1712c:	a4 cf       	rjmp	.-184    	; 0x17076 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4d2>
   1712e:	91 30       	cpi	r25, 0x01	; 1
   17130:	51 f4       	brne	.+20     	; 0x17146 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5a2>
   17132:	6e e7       	ldi	r22, 0x7E	; 126
   17134:	7d e2       	ldi	r23, 0x2D	; 45
   17136:	8f e6       	ldi	r24, 0x6F	; 111
   17138:	96 e1       	ldi	r25, 0x16	; 22
   1713a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1713e:	8f e6       	ldi	r24, 0x6F	; 111
   17140:	96 e1       	ldi	r25, 0x16	; 22
   17142:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17146:	02 30       	cpi	r16, 0x02	; 2
   17148:	09 f0       	breq	.+2      	; 0x1714c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5a8>
   1714a:	17 cf       	rjmp	.-466    	; 0x16f7a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d6>
   1714c:	86 e0       	ldi	r24, 0x06	; 6
   1714e:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   17152:	84 e6       	ldi	r24, 0x64	; 100
   17154:	90 e0       	ldi	r25, 0x00	; 0
   17156:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1715a:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   1715e:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17162:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17166:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   1716a:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   1716e:	a0 62       	ori	r26, 0x20	; 32
   17170:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17174:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17178:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   1717c:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17180:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
   17184:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17188:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   1718c:	82 60       	ori	r24, 0x02	; 2
   1718e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17192:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17196:	00 e0       	ldi	r16, 0x00	; 0
   17198:	10 e0       	ldi	r17, 0x00	; 0
   1719a:	ea 81       	ldd	r30, Y+2	; 0x02
   1719c:	fb 81       	ldd	r31, Y+3	; 0x03
   1719e:	e0 0f       	add	r30, r16
   171a0:	f1 1f       	adc	r31, r17
   171a2:	e1 56       	subi	r30, 0x61	; 97
   171a4:	f0 4f       	sbci	r31, 0xF0	; 240
   171a6:	e5 81       	ldd	r30, Z+5	; 0x05
   171a8:	ed 30       	cpi	r30, 0x0D	; 13
   171aa:	68 f0       	brcs	.+26     	; 0x171c6 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x622>
   171ac:	f0 e0       	ldi	r31, 0x00	; 0
   171ae:	e8 51       	subi	r30, 0x18	; 24
   171b0:	fa 4e       	sbci	r31, 0xEA	; 234
   171b2:	61 e0       	ldi	r22, 0x01	; 1
   171b4:	80 81       	ld	r24, Z
   171b6:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   171ba:	68 ec       	ldi	r22, 0xC8	; 200
   171bc:	70 e0       	ldi	r23, 0x00	; 0
   171be:	80 e0       	ldi	r24, 0x00	; 0
   171c0:	90 e0       	ldi	r25, 0x00	; 0
   171c2:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   171c6:	0f 5f       	subi	r16, 0xFF	; 255
   171c8:	1f 4f       	sbci	r17, 0xFF	; 255
   171ca:	05 30       	cpi	r16, 0x05	; 5
   171cc:	11 05       	cpc	r17, r1
   171ce:	29 f7       	brne	.-54     	; 0x1719a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x5f6>
   171d0:	52 cf       	rjmp	.-348    	; 0x17076 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4d2>
   171d2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   171d6:	81 30       	cpi	r24, 0x01	; 1
   171d8:	51 f4       	brne	.+20     	; 0x171ee <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x64a>
   171da:	63 e4       	ldi	r22, 0x43	; 67
   171dc:	7d e2       	ldi	r23, 0x2D	; 45
   171de:	8f e6       	ldi	r24, 0x6F	; 111
   171e0:	96 e1       	ldi	r25, 0x16	; 22
   171e2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   171e6:	8f e6       	ldi	r24, 0x6F	; 111
   171e8:	96 e1       	ldi	r25, 0x16	; 22
   171ea:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   171ee:	02 30       	cpi	r16, 0x02	; 2
   171f0:	09 f0       	breq	.+2      	; 0x171f4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x650>
   171f2:	c3 ce       	rjmp	.-634    	; 0x16f7a <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3d6>
   171f4:	86 e0       	ldi	r24, 0x06	; 6
   171f6:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   171fa:	84 e6       	ldi	r24, 0x64	; 100
   171fc:	90 e0       	ldi	r25, 0x00	; 0
   171fe:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   17202:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   17206:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1720a:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1720e:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17212:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17216:	a0 62       	ori	r26, 0x20	; 32
   17218:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1721c:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17220:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17224:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17228:	10 93 17 16 	sts	0x1617, r17	; 0x801617 <_sRuble_Parameters+0xb2>
   1722c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17230:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17234:	82 60       	ori	r24, 0x02	; 2
   17236:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1723a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1723e:	00 e0       	ldi	r16, 0x00	; 0
   17240:	10 e0       	ldi	r17, 0x00	; 0
   17242:	ea 81       	ldd	r30, Y+2	; 0x02
   17244:	fb 81       	ldd	r31, Y+3	; 0x03
   17246:	e0 0f       	add	r30, r16
   17248:	f1 1f       	adc	r31, r17
   1724a:	e1 56       	subi	r30, 0x61	; 97
   1724c:	f0 4f       	sbci	r31, 0xF0	; 240
   1724e:	e5 81       	ldd	r30, Z+5	; 0x05
   17250:	ed 30       	cpi	r30, 0x0D	; 13
   17252:	68 f0       	brcs	.+26     	; 0x1726e <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6ca>
   17254:	f0 e0       	ldi	r31, 0x00	; 0
   17256:	e8 51       	subi	r30, 0x18	; 24
   17258:	fa 4e       	sbci	r31, 0xEA	; 234
   1725a:	61 e0       	ldi	r22, 0x01	; 1
   1725c:	80 81       	ld	r24, Z
   1725e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   17262:	68 ec       	ldi	r22, 0xC8	; 200
   17264:	70 e0       	ldi	r23, 0x00	; 0
   17266:	80 e0       	ldi	r24, 0x00	; 0
   17268:	90 e0       	ldi	r25, 0x00	; 0
   1726a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1726e:	0f 5f       	subi	r16, 0xFF	; 255
   17270:	1f 4f       	sbci	r17, 0xFF	; 255
   17272:	05 30       	cpi	r16, 0x05	; 5
   17274:	11 05       	cpc	r17, r1
   17276:	29 f7       	brne	.-54     	; 0x17242 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x69e>
   17278:	fe ce       	rjmp	.-516    	; 0x17076 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x4d2>
   1727a:	2c e0       	ldi	r18, 0x0C	; 12
   1727c:	28 15       	cp	r18, r8
   1727e:	08 f0       	brcs	.+2      	; 0x17282 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x6de>
   17280:	85 ce       	rjmp	.-758    	; 0x16f8c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   17282:	61 e0       	ldi	r22, 0x01	; 1
   17284:	39 81       	ldd	r19, Y+1	; 0x01
   17286:	31 11       	cpse	r19, r1
   17288:	60 e0       	ldi	r22, 0x00	; 0
   1728a:	e8 2d       	mov	r30, r8
   1728c:	f0 e0       	ldi	r31, 0x00	; 0
   1728e:	e8 51       	subi	r30, 0x18	; 24
   17290:	fa 4e       	sbci	r31, 0xEA	; 234
   17292:	80 81       	ld	r24, Z
   17294:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   17298:	68 ec       	ldi	r22, 0xC8	; 200
   1729a:	70 e0       	ldi	r23, 0x00	; 0
   1729c:	80 e0       	ldi	r24, 0x00	; 0
   1729e:	90 e0       	ldi	r25, 0x00	; 0
   172a0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   172a4:	73 ce       	rjmp	.-794    	; 0x16f8c <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x3e8>
   172a6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   172aa:	81 30       	cpi	r24, 0x01	; 1
   172ac:	51 f4       	brne	.+20     	; 0x172c2 <_Z33Extra_Plot_Valve_Grouping_Handlerhh+0x71e>
   172ae:	64 e2       	ldi	r22, 0x24	; 36
   172b0:	7d e2       	ldi	r23, 0x2D	; 45
   172b2:	8f e6       	ldi	r24, 0x6F	; 111
   172b4:	96 e1       	ldi	r25, 0x16	; 22
   172b6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   172ba:	8f e6       	ldi	r24, 0x6F	; 111
   172bc:	96 e1       	ldi	r25, 0x16	; 22
   172be:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   172c2:	81 e0       	ldi	r24, 0x01	; 1
   172c4:	0f 90       	pop	r0
   172c6:	0f 90       	pop	r0
   172c8:	0f 90       	pop	r0
   172ca:	df 91       	pop	r29
   172cc:	cf 91       	pop	r28
   172ce:	1f 91       	pop	r17
   172d0:	0f 91       	pop	r16
   172d2:	ff 90       	pop	r15
   172d4:	ef 90       	pop	r14
   172d6:	df 90       	pop	r13
   172d8:	cf 90       	pop	r12
   172da:	bf 90       	pop	r11
   172dc:	af 90       	pop	r10
   172de:	9f 90       	pop	r9
   172e0:	8f 90       	pop	r8
   172e2:	7f 90       	pop	r7
   172e4:	6f 90       	pop	r6
   172e6:	5f 90       	pop	r5
   172e8:	4f 90       	pop	r4
   172ea:	3f 90       	pop	r3
   172ec:	2f 90       	pop	r2
   172ee:	08 95       	ret

000172f0 <_Z20Wireless_Pump_On_Offhh>:
   172f0:	6f 92       	push	r6
   172f2:	7f 92       	push	r7
   172f4:	8f 92       	push	r8
   172f6:	9f 92       	push	r9
   172f8:	af 92       	push	r10
   172fa:	bf 92       	push	r11
   172fc:	cf 92       	push	r12
   172fe:	df 92       	push	r13
   17300:	ef 92       	push	r14
   17302:	ff 92       	push	r15
   17304:	0f 93       	push	r16
   17306:	1f 93       	push	r17
   17308:	cf 93       	push	r28
   1730a:	df 93       	push	r29
   1730c:	78 2e       	mov	r7, r24
   1730e:	c6 2f       	mov	r28, r22
   17310:	80 91 88 0f 	lds	r24, 0x0F88	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17314:	8f 5f       	subi	r24, 0xFF	; 255
   17316:	80 93 88 0f 	sts	0x0F88, r24	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1731a:	22 e0       	ldi	r18, 0x02	; 2
   1731c:	72 16       	cp	r7, r18
   1731e:	39 f0       	breq	.+14     	; 0x1732e <_Z20Wireless_Pump_On_Offhh+0x3e>
   17320:	34 e0       	ldi	r19, 0x04	; 4
   17322:	73 16       	cp	r7, r19
   17324:	21 f0       	breq	.+8      	; 0x1732e <_Z20Wireless_Pump_On_Offhh+0x3e>
   17326:	81 e0       	ldi	r24, 0x01	; 1
   17328:	78 12       	cpse	r7, r24
   1732a:	0f c3       	rjmp	.+1566   	; 0x1794a <_Z20Wireless_Pump_On_Offhh+0x65a>
   1732c:	42 c2       	rjmp	.+1156   	; 0x177b2 <_Z20Wireless_Pump_On_Offhh+0x4c2>
   1732e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17332:	81 30       	cpi	r24, 0x01	; 1
   17334:	89 f4       	brne	.+34     	; 0x17358 <_Z20Wireless_Pump_On_Offhh+0x68>
   17336:	67 eb       	ldi	r22, 0xB7	; 183
   17338:	7c e2       	ldi	r23, 0x2C	; 44
   1733a:	8f e6       	ldi	r24, 0x6F	; 111
   1733c:	96 e1       	ldi	r25, 0x16	; 22
   1733e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17342:	4a e0       	ldi	r20, 0x0A	; 10
   17344:	50 e0       	ldi	r21, 0x00	; 0
   17346:	6c 2f       	mov	r22, r28
   17348:	8f e6       	ldi	r24, 0x6F	; 111
   1734a:	96 e1       	ldi	r25, 0x16	; 22
   1734c:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   17350:	8f e6       	ldi	r24, 0x6F	; 111
   17352:	96 e1       	ldi	r25, 0x16	; 22
   17354:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17358:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   1735c:	81 11       	cpse	r24, r1
   1735e:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   17362:	84 e1       	ldi	r24, 0x14	; 20
   17364:	ec ea       	ldi	r30, 0xAC	; 172
   17366:	f5 e1       	ldi	r31, 0x15	; 21
   17368:	df 01       	movw	r26, r30
   1736a:	1d 92       	st	X+, r1
   1736c:	8a 95       	dec	r24
   1736e:	e9 f7       	brne	.-6      	; 0x1736a <_Z20Wireless_Pump_On_Offhh+0x7a>
   17370:	0c 2f       	mov	r16, r28
   17372:	10 e0       	ldi	r17, 0x00	; 0
   17374:	bb e0       	ldi	r27, 0x0B	; 11
   17376:	cb 9f       	mul	r28, r27
   17378:	c0 01       	movw	r24, r0
   1737a:	11 24       	eor	r1, r1
   1737c:	fc 01       	movw	r30, r24
   1737e:	ea 53       	subi	r30, 0x3A	; 58
   17380:	f4 4f       	sbci	r31, 0xF4	; 244
   17382:	21 81       	ldd	r18, Z+1	; 0x01
   17384:	20 93 ac 15 	sts	0x15AC, r18	; 0x8015ac <_sRuble_Parameters+0x47>
   17388:	22 81       	ldd	r18, Z+2	; 0x02
   1738a:	20 93 ad 15 	sts	0x15AD, r18	; 0x8015ad <_sRuble_Parameters+0x48>
   1738e:	23 81       	ldd	r18, Z+3	; 0x03
   17390:	20 93 ae 15 	sts	0x15AE, r18	; 0x8015ae <_sRuble_Parameters+0x49>
   17394:	24 81       	ldd	r18, Z+4	; 0x04
   17396:	20 93 af 15 	sts	0x15AF, r18	; 0x8015af <_sRuble_Parameters+0x4a>
   1739a:	25 81       	ldd	r18, Z+5	; 0x05
   1739c:	20 93 b0 15 	sts	0x15B0, r18	; 0x8015b0 <_sRuble_Parameters+0x4b>
   173a0:	26 81       	ldd	r18, Z+6	; 0x06
   173a2:	20 93 b1 15 	sts	0x15B1, r18	; 0x8015b1 <_sRuble_Parameters+0x4c>
   173a6:	21 e0       	ldi	r18, 0x01	; 1
   173a8:	20 93 b2 15 	sts	0x15B2, r18	; 0x8015b2 <_sRuble_Parameters+0x4d>
   173ac:	70 92 b3 15 	sts	0x15B3, r7	; 0x8015b3 <_sRuble_Parameters+0x4e>
   173b0:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   173b4:	20 93 b4 15 	sts	0x15B4, r18	; 0x8015b4 <_sRuble_Parameters+0x4f>
   173b8:	20 91 7b 15 	lds	r18, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   173bc:	20 93 b6 15 	sts	0x15B6, r18	; 0x8015b6 <_sRuble_Parameters+0x51>
   173c0:	21 e0       	ldi	r18, 0x01	; 1
   173c2:	2c 0f       	add	r18, r28
   173c4:	20 93 b7 15 	sts	0x15B7, r18	; 0x8015b7 <_sRuble_Parameters+0x52>
   173c8:	23 e5       	ldi	r18, 0x53	; 83
   173ca:	20 93 b8 15 	sts	0x15B8, r18	; 0x8015b8 <_sRuble_Parameters+0x53>
   173ce:	4c 01       	movw	r8, r24
   173d0:	d0 e0       	ldi	r29, 0x00	; 0
   173d2:	9c 01       	movw	r18, r24
   173d4:	29 53       	subi	r18, 0x39	; 57
   173d6:	34 4f       	sbci	r19, 0xF4	; 244
   173d8:	79 01       	movw	r14, r18
   173da:	df 5f       	subi	r29, 0xFF	; 255
   173dc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   173e0:	81 30       	cpi	r24, 0x01	; 1
   173e2:	51 f4       	brne	.+20     	; 0x173f8 <_Z20Wireless_Pump_On_Offhh+0x108>
   173e4:	60 e9       	ldi	r22, 0x90	; 144
   173e6:	7c e2       	ldi	r23, 0x2C	; 44
   173e8:	8f e6       	ldi	r24, 0x6F	; 111
   173ea:	96 e1       	ldi	r25, 0x16	; 22
   173ec:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   173f0:	8f e6       	ldi	r24, 0x6F	; 111
   173f2:	96 e1       	ldi	r25, 0x16	; 22
   173f4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   173f8:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   173fc:	10 92 a0 0c 	sts	0x0CA0, r1	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   17400:	10 92 9f 0c 	sts	0x0C9F, r1	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   17404:	8d e0       	ldi	r24, 0x0D	; 13
   17406:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   1740a:	61 2c       	mov	r6, r1
   1740c:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   17410:	88 23       	and	r24, r24
   17412:	09 f4       	brne	.+2      	; 0x17416 <_Z20Wireless_Pump_On_Offhh+0x126>
   17414:	68 c1       	rjmp	.+720    	; 0x176e6 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17416:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1741a:	81 30       	cpi	r24, 0x01	; 1
   1741c:	71 f4       	brne	.+28     	; 0x1743a <_Z20Wireless_Pump_On_Offhh+0x14a>
   1741e:	64 e7       	ldi	r22, 0x74	; 116
   17420:	7c e2       	ldi	r23, 0x2C	; 44
   17422:	8f e6       	ldi	r24, 0x6F	; 111
   17424:	96 e1       	ldi	r25, 0x16	; 22
   17426:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1742a:	8f e6       	ldi	r24, 0x6F	; 111
   1742c:	96 e1       	ldi	r25, 0x16	; 22
   1742e:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   17432:	8f e6       	ldi	r24, 0x6F	; 111
   17434:	96 e1       	ldi	r25, 0x16	; 22
   17436:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1743a:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   1743e:	88 23       	and	r24, r24
   17440:	09 f4       	brne	.+2      	; 0x17444 <_Z20Wireless_Pump_On_Offhh+0x154>
   17442:	51 c1       	rjmp	.+674    	; 0x176e6 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17444:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17448:	81 30       	cpi	r24, 0x01	; 1
   1744a:	59 f5       	brne	.+86     	; 0x174a2 <_Z20Wireless_Pump_On_Offhh+0x1b2>
   1744c:	6b e5       	ldi	r22, 0x5B	; 91
   1744e:	7c e2       	ldi	r23, 0x2C	; 44
   17450:	8f e6       	ldi	r24, 0x6F	; 111
   17452:	96 e1       	ldi	r25, 0x16	; 22
   17454:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17458:	4a e0       	ldi	r20, 0x0A	; 10
   1745a:	50 e0       	ldi	r21, 0x00	; 0
   1745c:	60 ec       	ldi	r22, 0xC0	; 192
   1745e:	75 e1       	ldi	r23, 0x15	; 21
   17460:	8f e6       	ldi	r24, 0x6F	; 111
   17462:	96 e1       	ldi	r25, 0x16	; 22
   17464:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   17468:	8f e6       	ldi	r24, 0x6F	; 111
   1746a:	96 e1       	ldi	r25, 0x16	; 22
   1746c:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   17470:	8f e6       	ldi	r24, 0x6F	; 111
   17472:	96 e1       	ldi	r25, 0x16	; 22
   17474:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17478:	64 e3       	ldi	r22, 0x34	; 52
   1747a:	7c e2       	ldi	r23, 0x2C	; 44
   1747c:	8f e6       	ldi	r24, 0x6F	; 111
   1747e:	96 e1       	ldi	r25, 0x16	; 22
   17480:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17484:	47 e0       	ldi	r20, 0x07	; 7
   17486:	50 e0       	ldi	r21, 0x00	; 0
   17488:	b7 01       	movw	r22, r14
   1748a:	8f e6       	ldi	r24, 0x6F	; 111
   1748c:	96 e1       	ldi	r25, 0x16	; 22
   1748e:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   17492:	8f e6       	ldi	r24, 0x6F	; 111
   17494:	96 e1       	ldi	r25, 0x16	; 22
   17496:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   1749a:	8f e6       	ldi	r24, 0x6F	; 111
   1749c:	96 e1       	ldi	r25, 0x16	; 22
   1749e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   174a2:	80 ec       	ldi	r24, 0xC0	; 192
   174a4:	a8 2e       	mov	r10, r24
   174a6:	85 e1       	ldi	r24, 0x15	; 21
   174a8:	b8 2e       	mov	r11, r24
   174aa:	c1 2c       	mov	r12, r1
   174ac:	d1 2c       	mov	r13, r1
   174ae:	d5 01       	movw	r26, r10
   174b0:	8d 91       	ld	r24, X+
   174b2:	5d 01       	movw	r10, r26
   174b4:	f4 01       	movw	r30, r8
   174b6:	ec 0d       	add	r30, r12
   174b8:	fd 1d       	adc	r31, r13
   174ba:	ea 53       	subi	r30, 0x3A	; 58
   174bc:	f4 4f       	sbci	r31, 0xF4	; 244
   174be:	91 81       	ldd	r25, Z+1	; 0x01
   174c0:	98 17       	cp	r25, r24
   174c2:	09 f4       	brne	.+2      	; 0x174c6 <_Z20Wireless_Pump_On_Offhh+0x1d6>
   174c4:	54 c0       	rjmp	.+168    	; 0x1756e <_Z20Wireless_Pump_On_Offhh+0x27e>
   174c6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   174ca:	81 30       	cpi	r24, 0x01	; 1
   174cc:	51 f4       	brne	.+20     	; 0x174e2 <_Z20Wireless_Pump_On_Offhh+0x1f2>
   174ce:	68 e0       	ldi	r22, 0x08	; 8
   174d0:	7c e2       	ldi	r23, 0x2C	; 44
   174d2:	8f e6       	ldi	r24, 0x6F	; 111
   174d4:	96 e1       	ldi	r25, 0x16	; 22
   174d6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   174da:	8f e6       	ldi	r24, 0x6F	; 111
   174dc:	96 e1       	ldi	r25, 0x16	; 22
   174de:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   174e2:	68 ee       	ldi	r22, 0xE8	; 232
   174e4:	73 e0       	ldi	r23, 0x03	; 3
   174e6:	80 e0       	ldi	r24, 0x00	; 0
   174e8:	90 e0       	ldi	r25, 0x00	; 0
   174ea:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   174ee:	80 91 9f 0c 	lds	r24, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   174f2:	90 91 a0 0c 	lds	r25, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   174f6:	0b 97       	sbiw	r24, 0x0b	; 11
   174f8:	a0 f0       	brcs	.+40     	; 0x17522 <_Z20Wireless_Pump_On_Offhh+0x232>
   174fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   174fe:	81 30       	cpi	r24, 0x01	; 1
   17500:	09 f0       	breq	.+2      	; 0x17504 <_Z20Wireless_Pump_On_Offhh+0x214>
   17502:	91 c0       	rjmp	.+290    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   17504:	6a ee       	ldi	r22, 0xEA	; 234
   17506:	7b e2       	ldi	r23, 0x2B	; 43
   17508:	8f e6       	ldi	r24, 0x6F	; 111
   1750a:	96 e1       	ldi	r25, 0x16	; 22
   1750c:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17510:	8f e6       	ldi	r24, 0x6F	; 111
   17512:	96 e1       	ldi	r25, 0x16	; 22
   17514:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   17518:	8f e6       	ldi	r24, 0x6F	; 111
   1751a:	96 e1       	ldi	r25, 0x16	; 22
   1751c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17520:	82 c0       	rjmp	.+260    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   17522:	d3 30       	cpi	r29, 0x03	; 3
   17524:	10 f1       	brcs	.+68     	; 0x1756a <_Z20Wireless_Pump_On_Offhh+0x27a>
   17526:	80 91 88 0f 	lds	r24, 0x0F88	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1752a:	83 30       	cpi	r24, 0x03	; 3
   1752c:	f0 f0       	brcs	.+60     	; 0x1756a <_Z20Wireless_Pump_On_Offhh+0x27a>
   1752e:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17532:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17536:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1753a:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   1753e:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17542:	a0 62       	ori	r26, 0x20	; 32
   17544:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17548:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   1754c:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17550:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17554:	c0 93 18 16 	sts	0x1618, r28	; 0x801618 <_sRuble_Parameters+0xb3>
   17558:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1755c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17560:	90 68       	ori	r25, 0x80	; 128
   17562:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17566:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1756a:	66 24       	eor	r6, r6
   1756c:	63 94       	inc	r6
   1756e:	bf ef       	ldi	r27, 0xFF	; 255
   17570:	cb 1a       	sub	r12, r27
   17572:	db 0a       	sbc	r13, r27
   17574:	e6 e0       	ldi	r30, 0x06	; 6
   17576:	ce 16       	cp	r12, r30
   17578:	d1 04       	cpc	r13, r1
   1757a:	09 f0       	breq	.+2      	; 0x1757e <_Z20Wireless_Pump_On_Offhh+0x28e>
   1757c:	98 cf       	rjmp	.-208    	; 0x174ae <_Z20Wireless_Pump_On_Offhh+0x1be>
   1757e:	61 10       	cpse	r6, r1
   17580:	b2 c0       	rjmp	.+356    	; 0x176e6 <_Z20Wireless_Pump_On_Offhh+0x3f6>
   17582:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17586:	81 30       	cpi	r24, 0x01	; 1
   17588:	71 f4       	brne	.+28     	; 0x175a6 <_Z20Wireless_Pump_On_Offhh+0x2b6>
   1758a:	6e ec       	ldi	r22, 0xCE	; 206
   1758c:	7b e2       	ldi	r23, 0x2B	; 43
   1758e:	8f e6       	ldi	r24, 0x6F	; 111
   17590:	96 e1       	ldi	r25, 0x16	; 22
   17592:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17596:	8f e6       	ldi	r24, 0x6F	; 111
   17598:	96 e1       	ldi	r25, 0x16	; 22
   1759a:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   1759e:	8f e6       	ldi	r24, 0x6F	; 111
   175a0:	96 e1       	ldi	r25, 0x16	; 22
   175a2:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   175a6:	68 ee       	ldi	r22, 0xE8	; 232
   175a8:	73 e0       	ldi	r23, 0x03	; 3
   175aa:	80 e0       	ldi	r24, 0x00	; 0
   175ac:	90 e0       	ldi	r25, 0x00	; 0
   175ae:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   175b2:	f2 e0       	ldi	r31, 0x02	; 2
   175b4:	7f 12       	cpse	r7, r31
   175b6:	3f c0       	rjmp	.+126    	; 0x17636 <_Z20Wireless_Pump_On_Offhh+0x346>
   175b8:	90 91 c7 15 	lds	r25, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
   175bc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   175c0:	92 30       	cpi	r25, 0x02	; 2
   175c2:	31 f4       	brne	.+12     	; 0x175d0 <_Z20Wireless_Pump_On_Offhh+0x2e0>
   175c4:	81 30       	cpi	r24, 0x01	; 1
   175c6:	09 f0       	breq	.+2      	; 0x175ca <_Z20Wireless_Pump_On_Offhh+0x2da>
   175c8:	47 c0       	rjmp	.+142    	; 0x17658 <_Z20Wireless_Pump_On_Offhh+0x368>
   175ca:	64 ec       	ldi	r22, 0xC4	; 196
   175cc:	7b e2       	ldi	r23, 0x2B	; 43
   175ce:	40 c0       	rjmp	.+128    	; 0x17650 <_Z20Wireless_Pump_On_Offhh+0x360>
   175d0:	98 30       	cpi	r25, 0x08	; 8
   175d2:	59 f5       	brne	.+86     	; 0x1762a <_Z20Wireless_Pump_On_Offhh+0x33a>
   175d4:	81 30       	cpi	r24, 0x01	; 1
   175d6:	31 f4       	brne	.+12     	; 0x175e4 <_Z20Wireless_Pump_On_Offhh+0x2f4>
   175d8:	66 ea       	ldi	r22, 0xA6	; 166
   175da:	7b e2       	ldi	r23, 0x2B	; 43
   175dc:	8f e6       	ldi	r24, 0x6F	; 111
   175de:	96 e1       	ldi	r25, 0x16	; 22
   175e0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   175e4:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   175e8:	c0 93 18 16 	sts	0x1618, r28	; 0x801618 <_sRuble_Parameters+0xb3>
   175ec:	84 e0       	ldi	r24, 0x04	; 4
   175ee:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   175f2:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   175f6:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   175fa:	82 60       	ori	r24, 0x02	; 2
   175fc:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17600:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17604:	8b e0       	ldi	r24, 0x0B	; 11
   17606:	80 9f       	mul	r24, r16
   17608:	f0 01       	movw	r30, r0
   1760a:	81 9f       	mul	r24, r17
   1760c:	f0 0d       	add	r31, r0
   1760e:	11 24       	eor	r1, r1
   17610:	ea 53       	subi	r30, 0x3A	; 58
   17612:	f4 4f       	sbci	r31, 0xF4	; 244
   17614:	80 91 cb 15 	lds	r24, 0x15CB	; 0x8015cb <_sRuble_Parameters+0x66>
   17618:	90 91 cc 15 	lds	r25, 0x15CC	; 0x8015cc <_sRuble_Parameters+0x67>
   1761c:	98 27       	eor	r25, r24
   1761e:	89 27       	eor	r24, r25
   17620:	98 27       	eor	r25, r24
   17622:	91 87       	std	Z+9, r25	; 0x09
   17624:	80 87       	std	Z+8, r24	; 0x08
   17626:	c0 e0       	ldi	r28, 0x00	; 0
   17628:	92 c1       	rjmp	.+804    	; 0x1794e <_Z20Wireless_Pump_On_Offhh+0x65e>
   1762a:	81 30       	cpi	r24, 0x01	; 1
   1762c:	09 f0       	breq	.+2      	; 0x17630 <_Z20Wireless_Pump_On_Offhh+0x340>
   1762e:	5d c0       	rjmp	.+186    	; 0x176ea <_Z20Wireless_Pump_On_Offhh+0x3fa>
   17630:	6a e8       	ldi	r22, 0x8A	; 138
   17632:	7b e2       	ldi	r23, 0x2B	; 43
   17634:	4f c0       	rjmp	.+158    	; 0x176d4 <_Z20Wireless_Pump_On_Offhh+0x3e4>
   17636:	24 e0       	ldi	r18, 0x04	; 4
   17638:	72 12       	cpse	r7, r18
   1763a:	57 c0       	rjmp	.+174    	; 0x176ea <_Z20Wireless_Pump_On_Offhh+0x3fa>
   1763c:	90 91 c7 15 	lds	r25, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
   17640:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17644:	94 30       	cpi	r25, 0x04	; 4
   17646:	e1 f4       	brne	.+56     	; 0x17680 <_Z20Wireless_Pump_On_Offhh+0x390>
   17648:	81 30       	cpi	r24, 0x01	; 1
   1764a:	31 f4       	brne	.+12     	; 0x17658 <_Z20Wireless_Pump_On_Offhh+0x368>
   1764c:	6f e7       	ldi	r22, 0x7F	; 127
   1764e:	7b e2       	ldi	r23, 0x2B	; 43
   17650:	8f e6       	ldi	r24, 0x6F	; 111
   17652:	96 e1       	ldi	r25, 0x16	; 22
   17654:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17658:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1765c:	8b e0       	ldi	r24, 0x0B	; 11
   1765e:	80 9f       	mul	r24, r16
   17660:	f0 01       	movw	r30, r0
   17662:	81 9f       	mul	r24, r17
   17664:	f0 0d       	add	r31, r0
   17666:	11 24       	eor	r1, r1
   17668:	ea 53       	subi	r30, 0x3A	; 58
   1766a:	f4 4f       	sbci	r31, 0xF4	; 244
   1766c:	80 91 cb 15 	lds	r24, 0x15CB	; 0x8015cb <_sRuble_Parameters+0x66>
   17670:	90 91 cc 15 	lds	r25, 0x15CC	; 0x8015cc <_sRuble_Parameters+0x67>
   17674:	98 27       	eor	r25, r24
   17676:	89 27       	eor	r24, r25
   17678:	98 27       	eor	r25, r24
   1767a:	91 87       	std	Z+9, r25	; 0x09
   1767c:	80 87       	std	Z+8, r24	; 0x08
   1767e:	66 c1       	rjmp	.+716    	; 0x1794c <_Z20Wireless_Pump_On_Offhh+0x65c>
   17680:	98 30       	cpi	r25, 0x08	; 8
   17682:	21 f5       	brne	.+72     	; 0x176cc <_Z20Wireless_Pump_On_Offhh+0x3dc>
   17684:	81 30       	cpi	r24, 0x01	; 1
   17686:	31 f4       	brne	.+12     	; 0x17694 <_Z20Wireless_Pump_On_Offhh+0x3a4>
   17688:	61 e6       	ldi	r22, 0x61	; 97
   1768a:	7b e2       	ldi	r23, 0x2B	; 43
   1768c:	8f e6       	ldi	r24, 0x6F	; 111
   1768e:	96 e1       	ldi	r25, 0x16	; 22
   17690:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17694:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17698:	8b e0       	ldi	r24, 0x0B	; 11
   1769a:	80 9f       	mul	r24, r16
   1769c:	f0 01       	movw	r30, r0
   1769e:	81 9f       	mul	r24, r17
   176a0:	f0 0d       	add	r31, r0
   176a2:	11 24       	eor	r1, r1
   176a4:	ea 53       	subi	r30, 0x3A	; 58
   176a6:	f4 4f       	sbci	r31, 0xF4	; 244
   176a8:	80 91 cb 15 	lds	r24, 0x15CB	; 0x8015cb <_sRuble_Parameters+0x66>
   176ac:	90 91 cc 15 	lds	r25, 0x15CC	; 0x8015cc <_sRuble_Parameters+0x67>
   176b0:	98 27       	eor	r25, r24
   176b2:	89 27       	eor	r24, r25
   176b4:	98 27       	eor	r25, r24
   176b6:	91 87       	std	Z+9, r25	; 0x09
   176b8:	80 87       	std	Z+8, r24	; 0x08
   176ba:	84 e0       	ldi	r24, 0x04	; 4
   176bc:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   176c0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   176c4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   176c8:	82 60       	ori	r24, 0x02	; 2
   176ca:	6e c0       	rjmp	.+220    	; 0x177a8 <_Z20Wireless_Pump_On_Offhh+0x4b8>
   176cc:	81 30       	cpi	r24, 0x01	; 1
   176ce:	69 f4       	brne	.+26     	; 0x176ea <_Z20Wireless_Pump_On_Offhh+0x3fa>
   176d0:	65 e4       	ldi	r22, 0x45	; 69
   176d2:	7b e2       	ldi	r23, 0x2B	; 43
   176d4:	8f e6       	ldi	r24, 0x6F	; 111
   176d6:	96 e1       	ldi	r25, 0x16	; 22
   176d8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   176dc:	8f e6       	ldi	r24, 0x6F	; 111
   176de:	96 e1       	ldi	r25, 0x16	; 22
   176e0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   176e4:	02 c0       	rjmp	.+4      	; 0x176ea <_Z20Wireless_Pump_On_Offhh+0x3fa>
   176e6:	80 e0       	ldi	r24, 0x00	; 0
   176e8:	02 c0       	rjmp	.+4      	; 0x176ee <_Z20Wireless_Pump_On_Offhh+0x3fe>
   176ea:	81 e0       	ldi	r24, 0x01	; 1
   176ec:	d3 e0       	ldi	r29, 0x03	; 3
   176ee:	20 91 9f 0c 	lds	r18, 0x0C9F	; 0x800c9f <_gTime_To_Wait_Lora_Resp>
   176f2:	30 91 a0 0c 	lds	r19, 0x0CA0	; 0x800ca0 <_gTime_To_Wait_Lora_Resp+0x1>
   176f6:	28 30       	cpi	r18, 0x08	; 8
   176f8:	31 05       	cpc	r19, r1
   176fa:	20 f4       	brcc	.+8      	; 0x17704 <_Z20Wireless_Pump_On_Offhh+0x414>
   176fc:	88 23       	and	r24, r24
   176fe:	09 f4       	brne	.+2      	; 0x17702 <_Z20Wireless_Pump_On_Offhh+0x412>
   17700:	85 ce       	rjmp	.-758    	; 0x1740c <_Z20Wireless_Pump_On_Offhh+0x11c>
   17702:	02 c0       	rjmp	.+4      	; 0x17708 <_Z20Wireless_Pump_On_Offhh+0x418>
   17704:	81 30       	cpi	r24, 0x01	; 1
   17706:	b1 f4       	brne	.+44     	; 0x17734 <_Z20Wireless_Pump_On_Offhh+0x444>
   17708:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   1770c:	c0 91 55 16 	lds	r28, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17710:	c1 30       	cpi	r28, 0x01	; 1
   17712:	09 f0       	breq	.+2      	; 0x17716 <_Z20Wireless_Pump_On_Offhh+0x426>
   17714:	1b c1       	rjmp	.+566    	; 0x1794c <_Z20Wireless_Pump_On_Offhh+0x65c>
   17716:	69 e2       	ldi	r22, 0x29	; 41
   17718:	7b e2       	ldi	r23, 0x2B	; 43
   1771a:	8f e6       	ldi	r24, 0x6F	; 111
   1771c:	96 e1       	ldi	r25, 0x16	; 22
   1771e:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17722:	8f e6       	ldi	r24, 0x6F	; 111
   17724:	96 e1       	ldi	r25, 0x16	; 22
   17726:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   1772a:	8f e6       	ldi	r24, 0x6F	; 111
   1772c:	96 e1       	ldi	r25, 0x16	; 22
   1772e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17732:	0d c1       	rjmp	.+538    	; 0x1794e <_Z20Wireless_Pump_On_Offhh+0x65e>
   17734:	80 91 88 0f 	lds	r24, 0x0F88	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17738:	83 30       	cpi	r24, 0x03	; 3
   1773a:	a8 f0       	brcs	.+42     	; 0x17766 <_Z20Wireless_Pump_On_Offhh+0x476>
   1773c:	10 92 88 0f 	sts	0x0F88, r1	; 0x800f88 <_ZZ20Wireless_Pump_On_OffhhE19fault_check_counter>
   17740:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17744:	81 30       	cpi	r24, 0x01	; 1
   17746:	c1 f4       	brne	.+48     	; 0x17778 <_Z20Wireless_Pump_On_Offhh+0x488>
   17748:	6d e0       	ldi	r22, 0x0D	; 13
   1774a:	7b e2       	ldi	r23, 0x2B	; 43
   1774c:	8f e6       	ldi	r24, 0x6F	; 111
   1774e:	96 e1       	ldi	r25, 0x16	; 22
   17750:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   17754:	8f e6       	ldi	r24, 0x6F	; 111
   17756:	96 e1       	ldi	r25, 0x16	; 22
   17758:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   1775c:	8f e6       	ldi	r24, 0x6F	; 111
   1775e:	96 e1       	ldi	r25, 0x16	; 22
   17760:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17764:	09 c0       	rjmp	.+18     	; 0x17778 <_Z20Wireless_Pump_On_Offhh+0x488>
   17766:	68 ee       	ldi	r22, 0xE8	; 232
   17768:	73 e0       	ldi	r23, 0x03	; 3
   1776a:	80 e0       	ldi	r24, 0x00	; 0
   1776c:	90 e0       	ldi	r25, 0x00	; 0
   1776e:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   17772:	d3 30       	cpi	r29, 0x03	; 3
   17774:	08 f4       	brcc	.+2      	; 0x17778 <_Z20Wireless_Pump_On_Offhh+0x488>
   17776:	31 ce       	rjmp	.-926    	; 0x173da <_Z20Wireless_Pump_On_Offhh+0xea>
   17778:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1777c:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17780:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17784:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17788:	a0 62       	ori	r26, 0x20	; 32
   1778a:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1778e:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17792:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17796:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   1779a:	c0 93 18 16 	sts	0x1618, r28	; 0x801618 <_sRuble_Parameters+0xb3>
   1779e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   177a2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   177a6:	90 68       	ori	r25, 0x80	; 128
   177a8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   177ac:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   177b0:	3a cf       	rjmp	.-396    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   177b2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   177b6:	81 30       	cpi	r24, 0x01	; 1
   177b8:	89 f4       	brne	.+34     	; 0x177dc <_Z20Wireless_Pump_On_Offhh+0x4ec>
   177ba:	6a ef       	ldi	r22, 0xFA	; 250
   177bc:	7a e2       	ldi	r23, 0x2A	; 42
   177be:	8f e6       	ldi	r24, 0x6F	; 111
   177c0:	96 e1       	ldi	r25, 0x16	; 22
   177c2:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   177c6:	4a e0       	ldi	r20, 0x0A	; 10
   177c8:	50 e0       	ldi	r21, 0x00	; 0
   177ca:	6c 2f       	mov	r22, r28
   177cc:	8f e6       	ldi	r24, 0x6F	; 111
   177ce:	96 e1       	ldi	r25, 0x16	; 22
   177d0:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   177d4:	8f e6       	ldi	r24, 0x6F	; 111
   177d6:	96 e1       	ldi	r25, 0x16	; 22
   177d8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   177dc:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   177e0:	81 11       	cpse	r24, r1
   177e2:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   177e6:	84 e1       	ldi	r24, 0x14	; 20
   177e8:	ec ea       	ldi	r30, 0xAC	; 172
   177ea:	f5 e1       	ldi	r31, 0x15	; 21
   177ec:	df 01       	movw	r26, r30
   177ee:	1d 92       	st	X+, r1
   177f0:	8a 95       	dec	r24
   177f2:	e9 f7       	brne	.-6      	; 0x177ee <_Z20Wireless_Pump_On_Offhh+0x4fe>
   177f4:	bb e0       	ldi	r27, 0x0B	; 11
   177f6:	cb 9f       	mul	r28, r27
   177f8:	80 01       	movw	r16, r0
   177fa:	11 24       	eor	r1, r1
   177fc:	f8 01       	movw	r30, r16
   177fe:	ea 53       	subi	r30, 0x3A	; 58
   17800:	f4 4f       	sbci	r31, 0xF4	; 244
   17802:	81 81       	ldd	r24, Z+1	; 0x01
   17804:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
   17808:	82 81       	ldd	r24, Z+2	; 0x02
   1780a:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
   1780e:	83 81       	ldd	r24, Z+3	; 0x03
   17810:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
   17814:	84 81       	ldd	r24, Z+4	; 0x04
   17816:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
   1781a:	85 81       	ldd	r24, Z+5	; 0x05
   1781c:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
   17820:	86 81       	ldd	r24, Z+6	; 0x06
   17822:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
   17826:	81 e0       	ldi	r24, 0x01	; 1
   17828:	80 93 b2 15 	sts	0x15B2, r24	; 0x8015b2 <_sRuble_Parameters+0x4d>
   1782c:	80 93 b3 15 	sts	0x15B3, r24	; 0x8015b3 <_sRuble_Parameters+0x4e>
   17830:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   17834:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
   17838:	80 91 7b 15 	lds	r24, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   1783c:	80 93 b6 15 	sts	0x15B6, r24	; 0x8015b6 <_sRuble_Parameters+0x51>
   17840:	81 e0       	ldi	r24, 0x01	; 1
   17842:	8c 0f       	add	r24, r28
   17844:	80 93 b7 15 	sts	0x15B7, r24	; 0x8015b7 <_sRuble_Parameters+0x52>
   17848:	83 e5       	ldi	r24, 0x53	; 83
   1784a:	80 93 b8 15 	sts	0x15B8, r24	; 0x8015b8 <_sRuble_Parameters+0x53>
   1784e:	80 91 56 16 	lds	r24, 0x1656	; 0x801656 <_sRuble_Parameters+0xf1>
   17852:	80 93 b9 15 	sts	0x15B9, r24	; 0x8015b9 <_sRuble_Parameters+0x54>
   17856:	78 01       	movw	r14, r16
   17858:	d0 e0       	ldi	r29, 0x00	; 0
   1785a:	09 53       	subi	r16, 0x39	; 57
   1785c:	14 4f       	sbci	r17, 0xF4	; 244
   1785e:	df 5f       	subi	r29, 0xFF	; 255
   17860:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17864:	81 30       	cpi	r24, 0x01	; 1
   17866:	51 f4       	brne	.+20     	; 0x1787c <_Z20Wireless_Pump_On_Offhh+0x58c>
   17868:	63 ed       	ldi	r22, 0xD3	; 211
   1786a:	7a e2       	ldi	r23, 0x2A	; 42
   1786c:	8f e6       	ldi	r24, 0x6F	; 111
   1786e:	96 e1       	ldi	r25, 0x16	; 22
   17870:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17874:	8f e6       	ldi	r24, 0x6F	; 111
   17876:	96 e1       	ldi	r25, 0x16	; 22
   17878:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1787c:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   17880:	8e e0       	ldi	r24, 0x0E	; 14
   17882:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   17886:	80 ee       	ldi	r24, 0xE0	; 224
   17888:	9e e2       	ldi	r25, 0x2E	; 46
   1788a:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   1788e:	88 23       	and	r24, r24
   17890:	09 f4       	brne	.+2      	; 0x17894 <_Z20Wireless_Pump_On_Offhh+0x5a4>
   17892:	4f c0       	rjmp	.+158    	; 0x17932 <_Z20Wireless_Pump_On_Offhh+0x642>
   17894:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   17898:	88 23       	and	r24, r24
   1789a:	09 f4       	brne	.+2      	; 0x1789e <_Z20Wireless_Pump_On_Offhh+0x5ae>
   1789c:	4a c0       	rjmp	.+148    	; 0x17932 <_Z20Wireless_Pump_On_Offhh+0x642>
   1789e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   178a2:	81 30       	cpi	r24, 0x01	; 1
   178a4:	59 f5       	brne	.+86     	; 0x178fc <_Z20Wireless_Pump_On_Offhh+0x60c>
   178a6:	6a eb       	ldi	r22, 0xBA	; 186
   178a8:	7a e2       	ldi	r23, 0x2A	; 42
   178aa:	8f e6       	ldi	r24, 0x6F	; 111
   178ac:	96 e1       	ldi	r25, 0x16	; 22
   178ae:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   178b2:	4a e0       	ldi	r20, 0x0A	; 10
   178b4:	50 e0       	ldi	r21, 0x00	; 0
   178b6:	60 ec       	ldi	r22, 0xC0	; 192
   178b8:	75 e1       	ldi	r23, 0x15	; 21
   178ba:	8f e6       	ldi	r24, 0x6F	; 111
   178bc:	96 e1       	ldi	r25, 0x16	; 22
   178be:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   178c2:	8f e6       	ldi	r24, 0x6F	; 111
   178c4:	96 e1       	ldi	r25, 0x16	; 22
   178c6:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   178ca:	8f e6       	ldi	r24, 0x6F	; 111
   178cc:	96 e1       	ldi	r25, 0x16	; 22
   178ce:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   178d2:	6c e9       	ldi	r22, 0x9C	; 156
   178d4:	7a e2       	ldi	r23, 0x2A	; 42
   178d6:	8f e6       	ldi	r24, 0x6F	; 111
   178d8:	96 e1       	ldi	r25, 0x16	; 22
   178da:	0e 94 8c d0 	call	0x1a118	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   178de:	47 e0       	ldi	r20, 0x07	; 7
   178e0:	50 e0       	ldi	r21, 0x00	; 0
   178e2:	b8 01       	movw	r22, r16
   178e4:	8f e6       	ldi	r24, 0x6F	; 111
   178e6:	96 e1       	ldi	r25, 0x16	; 22
   178e8:	0e 94 62 d0 	call	0x1a0c4	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   178ec:	8f e6       	ldi	r24, 0x6F	; 111
   178ee:	96 e1       	ldi	r25, 0x16	; 22
   178f0:	0e 94 b9 d0 	call	0x1a172	; 0x1a172 <_ZN5Print7printlnEv>
   178f4:	8f e6       	ldi	r24, 0x6F	; 111
   178f6:	96 e1       	ldi	r25, 0x16	; 22
   178f8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   178fc:	a0 ec       	ldi	r26, 0xC0	; 192
   178fe:	b5 e1       	ldi	r27, 0x15	; 21
   17900:	80 e0       	ldi	r24, 0x00	; 0
   17902:	90 e0       	ldi	r25, 0x00	; 0
   17904:	2d 91       	ld	r18, X+
   17906:	f7 01       	movw	r30, r14
   17908:	e8 0f       	add	r30, r24
   1790a:	f9 1f       	adc	r31, r25
   1790c:	ea 53       	subi	r30, 0x3A	; 58
   1790e:	f4 4f       	sbci	r31, 0xF4	; 244
   17910:	31 81       	ldd	r19, Z+1	; 0x01
   17912:	32 17       	cp	r19, r18
   17914:	19 f0       	breq	.+6      	; 0x1791c <_Z20Wireless_Pump_On_Offhh+0x62c>
   17916:	d1 30       	cpi	r29, 0x01	; 1
   17918:	09 f0       	breq	.+2      	; 0x1791c <_Z20Wireless_Pump_On_Offhh+0x62c>
   1791a:	85 ce       	rjmp	.-758    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   1791c:	01 96       	adiw	r24, 0x01	; 1
   1791e:	86 30       	cpi	r24, 0x06	; 6
   17920:	91 05       	cpc	r25, r1
   17922:	81 f7       	brne	.-32     	; 0x17904 <_Z20Wireless_Pump_On_Offhh+0x614>
   17924:	80 91 c7 15 	lds	r24, 0x15C7	; 0x8015c7 <_sRuble_Parameters+0x62>
   17928:	81 30       	cpi	r24, 0x01	; 1
   1792a:	19 f4       	brne	.+6      	; 0x17932 <_Z20Wireless_Pump_On_Offhh+0x642>
   1792c:	d3 30       	cpi	r29, 0x03	; 3
   1792e:	31 f0       	breq	.+12     	; 0x1793c <_Z20Wireless_Pump_On_Offhh+0x64c>
   17930:	96 cf       	rjmp	.-212    	; 0x1785e <_Z20Wireless_Pump_On_Offhh+0x56e>
   17932:	d1 30       	cpi	r29, 0x01	; 1
   17934:	09 f0       	breq	.+2      	; 0x17938 <_Z20Wireless_Pump_On_Offhh+0x648>
   17936:	77 ce       	rjmp	.-786    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   17938:	d1 e0       	ldi	r29, 0x01	; 1
   1793a:	91 cf       	rjmp	.-222    	; 0x1785e <_Z20Wireless_Pump_On_Offhh+0x56e>
   1793c:	c1 e0       	ldi	r28, 0x01	; 1
   1793e:	80 91 cd 15 	lds	r24, 0x15CD	; 0x8015cd <_sRuble_Parameters+0x68>
   17942:	81 30       	cpi	r24, 0x01	; 1
   17944:	09 f0       	breq	.+2      	; 0x17948 <_Z20Wireless_Pump_On_Offhh+0x658>
   17946:	6f ce       	rjmp	.-802    	; 0x17626 <_Z20Wireless_Pump_On_Offhh+0x336>
   17948:	02 c0       	rjmp	.+4      	; 0x1794e <_Z20Wireless_Pump_On_Offhh+0x65e>
   1794a:	02 c0       	rjmp	.+4      	; 0x17950 <_Z20Wireless_Pump_On_Offhh+0x660>
   1794c:	c1 e0       	ldi	r28, 0x01	; 1
   1794e:	8c 2f       	mov	r24, r28
   17950:	df 91       	pop	r29
   17952:	cf 91       	pop	r28
   17954:	1f 91       	pop	r17
   17956:	0f 91       	pop	r16
   17958:	ff 90       	pop	r15
   1795a:	ef 90       	pop	r14
   1795c:	df 90       	pop	r13
   1795e:	cf 90       	pop	r12
   17960:	bf 90       	pop	r11
   17962:	af 90       	pop	r10
   17964:	9f 90       	pop	r9
   17966:	8f 90       	pop	r8
   17968:	7f 90       	pop	r7
   1796a:	6f 90       	pop	r6
   1796c:	08 95       	ret

0001796e <_Z15Stop_Irrigationv>:
   1796e:	cf 93       	push	r28
   17970:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17974:	81 30       	cpi	r24, 0x01	; 1
   17976:	51 f4       	brne	.+20     	; 0x1798c <_Z15Stop_Irrigationv+0x1e>
   17978:	6e e9       	ldi	r22, 0x9E	; 158
   1797a:	70 e4       	ldi	r23, 0x40	; 64
   1797c:	8f e6       	ldi	r24, 0x6F	; 111
   1797e:	96 e1       	ldi	r25, 0x16	; 22
   17980:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17984:	8f e6       	ldi	r24, 0x6F	; 111
   17986:	96 e1       	ldi	r25, 0x16	; 22
   17988:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1798c:	c0 91 43 16 	lds	r28, 0x1643	; 0x801643 <_sRuble_Parameters+0xde>
   17990:	8f ef       	ldi	r24, 0xFF	; 255
   17992:	8c 0f       	add	r24, r28
   17994:	83 30       	cpi	r24, 0x03	; 3
   17996:	18 f4       	brcc	.+6      	; 0x1799e <_Z15Stop_Irrigationv+0x30>
   17998:	10 92 43 16 	sts	0x1643, r1	; 0x801643 <_sRuble_Parameters+0xde>
   1799c:	02 c0       	rjmp	.+4      	; 0x179a2 <_Z15Stop_Irrigationv+0x34>
   1799e:	c0 91 41 16 	lds	r28, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   179a2:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   179a6:	81 30       	cpi	r24, 0x01	; 1
   179a8:	59 f4       	brne	.+22     	; 0x179c0 <_Z15Stop_Irrigationv+0x52>
   179aa:	c2 30       	cpi	r28, 0x02	; 2
   179ac:	48 f0       	brcs	.+18     	; 0x179c0 <_Z15Stop_Irrigationv+0x52>
   179ae:	82 e0       	ldi	r24, 0x02	; 2
   179b0:	80 93 24 16 	sts	0x1624, r24	; 0x801624 <_sRuble_Parameters+0xbf>
   179b4:	64 e2       	ldi	r22, 0x24	; 36
   179b6:	76 e1       	ldi	r23, 0x16	; 22
   179b8:	80 e3       	ldi	r24, 0x30	; 48
   179ba:	9c e0       	ldi	r25, 0x0C	; 12
   179bc:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   179c0:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
   179c4:	81 30       	cpi	r24, 0x01	; 1
   179c6:	29 f4       	brne	.+10     	; 0x179d2 <_Z15Stop_Irrigationv+0x64>
   179c8:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   179cc:	81 30       	cpi	r24, 0x01	; 1
   179ce:	09 f0       	breq	.+2      	; 0x179d2 <_Z15Stop_Irrigationv+0x64>
   179d0:	6b c0       	rjmp	.+214    	; 0x17aa8 <_Z15Stop_Irrigationv+0x13a>
   179d2:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   179d6:	81 11       	cpse	r24, r1
   179d8:	16 c0       	rjmp	.+44     	; 0x17a06 <_Z15Stop_Irrigationv+0x98>
   179da:	c1 30       	cpi	r28, 0x01	; 1
   179dc:	a1 f4       	brne	.+40     	; 0x17a06 <_Z15Stop_Irrigationv+0x98>
   179de:	8a e0       	ldi	r24, 0x0A	; 10
   179e0:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   179e4:	01 97       	sbiw	r24, 0x01	; 1
   179e6:	21 f0       	breq	.+8      	; 0x179f0 <_Z15Stop_Irrigationv+0x82>
   179e8:	61 e0       	ldi	r22, 0x01	; 1
   179ea:	8a e0       	ldi	r24, 0x0A	; 10
   179ec:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   179f0:	8b e0       	ldi	r24, 0x0B	; 11
   179f2:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   179f6:	01 97       	sbiw	r24, 0x01	; 1
   179f8:	09 f4       	brne	.+2      	; 0x179fc <_Z15Stop_Irrigationv+0x8e>
   179fa:	56 c0       	rjmp	.+172    	; 0x17aa8 <_Z15Stop_Irrigationv+0x13a>
   179fc:	61 e0       	ldi	r22, 0x01	; 1
   179fe:	8b e0       	ldi	r24, 0x0B	; 11
   17a00:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   17a04:	51 c0       	rjmp	.+162    	; 0x17aa8 <_Z15Stop_Irrigationv+0x13a>
   17a06:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17a0a:	81 30       	cpi	r24, 0x01	; 1
   17a0c:	31 f4       	brne	.+12     	; 0x17a1a <_Z15Stop_Irrigationv+0xac>
   17a0e:	64 e7       	ldi	r22, 0x74	; 116
   17a10:	70 e4       	ldi	r23, 0x40	; 64
   17a12:	8f e6       	ldi	r24, 0x6F	; 111
   17a14:	96 e1       	ldi	r25, 0x16	; 22
   17a16:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17a1a:	6e ef       	ldi	r22, 0xFE	; 254
   17a1c:	6c 0f       	add	r22, r28
   17a1e:	84 e0       	ldi	r24, 0x04	; 4
   17a20:	67 dc       	rcall	.-1842   	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   17a22:	2c 2f       	mov	r18, r28
   17a24:	30 e0       	ldi	r19, 0x00	; 0
   17a26:	e0 91 d5 15 	lds	r30, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   17a2a:	d9 01       	movw	r26, r18
   17a2c:	a5 5c       	subi	r26, 0xC5	; 197
   17a2e:	b9 4e       	sbci	r27, 0xE9	; 233
   17a30:	1c 92       	st	X, r1
   17a32:	f0 e0       	ldi	r31, 0x00	; 0
   17a34:	e9 5d       	subi	r30, 0xD9	; 217
   17a36:	f9 4e       	sbci	r31, 0xE9	; 233
   17a38:	88 23       	and	r24, r24
   17a3a:	61 f0       	breq	.+24     	; 0x17a54 <_Z15Stop_Irrigationv+0xe6>
   17a3c:	10 82       	st	Z, r1
   17a3e:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   17a42:	65 e2       	ldi	r22, 0x25	; 37
   17a44:	76 e1       	ldi	r23, 0x16	; 22
   17a46:	85 e3       	ldi	r24, 0x35	; 53
   17a48:	9c e0       	ldi	r25, 0x0C	; 12
   17a4a:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17a4e:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   17a52:	2a c0       	rjmp	.+84     	; 0x17aa8 <_Z15Stop_Irrigationv+0x13a>
   17a54:	81 e0       	ldi	r24, 0x01	; 1
   17a56:	80 83       	st	Z, r24
   17a58:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   17a5c:	65 e2       	ldi	r22, 0x25	; 37
   17a5e:	76 e1       	ldi	r23, 0x16	; 22
   17a60:	85 e3       	ldi	r24, 0x35	; 53
   17a62:	9c e0       	ldi	r25, 0x0C	; 12
   17a64:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17a68:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   17a6c:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17a70:	8d 7f       	andi	r24, 0xFD	; 253
   17a72:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17a76:	10 92 d5 15 	sts	0x15D5, r1	; 0x8015d5 <_sRuble_Parameters+0x70>
   17a7a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17a7e:	81 30       	cpi	r24, 0x01	; 1
   17a80:	51 f4       	brne	.+20     	; 0x17a96 <_Z15Stop_Irrigationv+0x128>
   17a82:	63 e6       	ldi	r22, 0x63	; 99
   17a84:	70 e4       	ldi	r23, 0x40	; 64
   17a86:	8f e6       	ldi	r24, 0x6F	; 111
   17a88:	96 e1       	ldi	r25, 0x16	; 22
   17a8a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17a8e:	8f e6       	ldi	r24, 0x6F	; 111
   17a90:	96 e1       	ldi	r25, 0x16	; 22
   17a92:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17a96:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17a9a:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17a9e:	84 60       	ori	r24, 0x04	; 4
   17aa0:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17aa4:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17aa8:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   17aac:	88 23       	and	r24, r24
   17aae:	09 f4       	brne	.+2      	; 0x17ab2 <_Z15Stop_Irrigationv+0x144>
   17ab0:	41 c0       	rjmp	.+130    	; 0x17b34 <_Z15Stop_Irrigationv+0x1c6>
   17ab2:	80 93 20 16 	sts	0x1620, r24	; 0x801620 <_sRuble_Parameters+0xbb>
   17ab6:	83 e0       	ldi	r24, 0x03	; 3
   17ab8:	0e 94 3d 24 	call	0x487a	; 0x487a <_Z22Hard_Coded_Flush_Valveh>
   17abc:	80 e0       	ldi	r24, 0x00	; 0
   17abe:	0e 94 1a ab 	call	0x15634	; 0x15634 <_Z22Valve_Grouping_Handlerh>
   17ac2:	20 91 55 16 	lds	r18, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17ac6:	88 23       	and	r24, r24
   17ac8:	e9 f0       	breq	.+58     	; 0x17b04 <_Z15Stop_Irrigationv+0x196>
   17aca:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17ace:	8d 7f       	andi	r24, 0xFD	; 253
   17ad0:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17ad4:	10 92 d5 15 	sts	0x15D5, r1	; 0x8015d5 <_sRuble_Parameters+0x70>
   17ad8:	21 30       	cpi	r18, 0x01	; 1
   17ada:	51 f4       	brne	.+20     	; 0x17af0 <_Z15Stop_Irrigationv+0x182>
   17adc:	62 e5       	ldi	r22, 0x52	; 82
   17ade:	70 e4       	ldi	r23, 0x40	; 64
   17ae0:	8f e6       	ldi	r24, 0x6F	; 111
   17ae2:	96 e1       	ldi	r25, 0x16	; 22
   17ae4:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17ae8:	8f e6       	ldi	r24, 0x6F	; 111
   17aea:	96 e1       	ldi	r25, 0x16	; 22
   17aec:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17af0:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17af4:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17af8:	84 60       	ori	r24, 0x04	; 4
   17afa:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17afe:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17b02:	18 c0       	rjmp	.+48     	; 0x17b34 <_Z15Stop_Irrigationv+0x1c6>
   17b04:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17b08:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17b0c:	84 60       	ori	r24, 0x04	; 4
   17b0e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17b12:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17b16:	10 92 d5 15 	sts	0x15D5, r1	; 0x8015d5 <_sRuble_Parameters+0x70>
   17b1a:	21 30       	cpi	r18, 0x01	; 1
   17b1c:	69 f4       	brne	.+26     	; 0x17b38 <_Z15Stop_Irrigationv+0x1ca>
   17b1e:	6a e3       	ldi	r22, 0x3A	; 58
   17b20:	70 e4       	ldi	r23, 0x40	; 64
   17b22:	8f e6       	ldi	r24, 0x6F	; 111
   17b24:	96 e1       	ldi	r25, 0x16	; 22
   17b26:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17b2a:	8f e6       	ldi	r24, 0x6F	; 111
   17b2c:	96 e1       	ldi	r25, 0x16	; 22
   17b2e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17b32:	02 c0       	rjmp	.+4      	; 0x17b38 <_Z15Stop_Irrigationv+0x1ca>
   17b34:	81 e0       	ldi	r24, 0x01	; 1
   17b36:	01 c0       	rjmp	.+2      	; 0x17b3a <_Z15Stop_Irrigationv+0x1cc>
   17b38:	80 e0       	ldi	r24, 0x00	; 0
   17b3a:	cf 91       	pop	r28
   17b3c:	08 95       	ret

00017b3e <_Z21Select_Operation_Modev>:
   17b3e:	90 91 8e 15 	lds	r25, 0x158E	; 0x80158e <_sRuble_Parameters+0x29>
   17b42:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   17b46:	93 30       	cpi	r25, 0x03	; 3
   17b48:	09 f4       	brne	.+2      	; 0x17b4c <_Z21Select_Operation_Modev+0xe>
   17b4a:	c5 c0       	rjmp	.+394    	; 0x17cd6 <_Z21Select_Operation_Modev+0x198>
   17b4c:	94 30       	cpi	r25, 0x04	; 4
   17b4e:	09 f4       	brne	.+2      	; 0x17b52 <_Z21Select_Operation_Modev+0x14>
   17b50:	7e c0       	rjmp	.+252    	; 0x17c4e <_Z21Select_Operation_Modev+0x110>
   17b52:	91 30       	cpi	r25, 0x01	; 1
   17b54:	09 f0       	breq	.+2      	; 0x17b58 <_Z21Select_Operation_Modev+0x1a>
   17b56:	0d c1       	rjmp	.+538    	; 0x17d72 <_Z21Select_Operation_Modev+0x234>
   17b58:	2d ef       	ldi	r18, 0xFD	; 253
   17b5a:	28 0f       	add	r18, r24
   17b5c:	22 30       	cpi	r18, 0x02	; 2
   17b5e:	08 f0       	brcs	.+2      	; 0x17b62 <_Z21Select_Operation_Modev+0x24>
   17b60:	08 c1       	rjmp	.+528    	; 0x17d72 <_Z21Select_Operation_Modev+0x234>
   17b62:	10 92 8e 15 	sts	0x158E, r1	; 0x80158e <_sRuble_Parameters+0x29>
   17b66:	83 30       	cpi	r24, 0x03	; 3
   17b68:	21 f4       	brne	.+8      	; 0x17b72 <_Z21Select_Operation_Modev+0x34>
   17b6a:	82 e0       	ldi	r24, 0x02	; 2
   17b6c:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17b70:	02 c0       	rjmp	.+4      	; 0x17b76 <_Z21Select_Operation_Modev+0x38>
   17b72:	90 93 8d 15 	sts	0x158D, r25	; 0x80158d <_sRuble_Parameters+0x28>
   17b76:	90 91 8f 15 	lds	r25, 0x158F	; 0x80158f <_sRuble_Parameters+0x2a>
   17b7a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17b7e:	92 30       	cpi	r25, 0x02	; 2
   17b80:	79 f1       	breq	.+94     	; 0x17be0 <_Z21Select_Operation_Modev+0xa2>
   17b82:	81 30       	cpi	r24, 0x01	; 1
   17b84:	51 f4       	brne	.+20     	; 0x17b9a <_Z21Select_Operation_Modev+0x5c>
   17b86:	64 e0       	ldi	r22, 0x04	; 4
   17b88:	76 e4       	ldi	r23, 0x46	; 70
   17b8a:	8f e6       	ldi	r24, 0x6F	; 111
   17b8c:	96 e1       	ldi	r25, 0x16	; 22
   17b8e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17b92:	8f e6       	ldi	r24, 0x6F	; 111
   17b94:	96 e1       	ldi	r25, 0x16	; 22
   17b96:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17b9a:	85 e0       	ldi	r24, 0x05	; 5
   17b9c:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17ba0:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17ba4:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17ba8:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17bac:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17bb0:	80 61       	ori	r24, 0x10	; 16
   17bb2:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17bb6:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17bba:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17bbe:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17bc2:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17bc6:	8e 7f       	andi	r24, 0xFE	; 254
   17bc8:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17bcc:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17bd0:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17bd4:	84 60       	ori	r24, 0x04	; 4
   17bd6:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17bda:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17bde:	25 c0       	rjmp	.+74     	; 0x17c2a <_Z21Select_Operation_Modev+0xec>
   17be0:	81 30       	cpi	r24, 0x01	; 1
   17be2:	51 f4       	brne	.+20     	; 0x17bf8 <_Z21Select_Operation_Modev+0xba>
   17be4:	68 ee       	ldi	r22, 0xE8	; 232
   17be6:	75 e4       	ldi	r23, 0x45	; 69
   17be8:	8f e6       	ldi	r24, 0x6F	; 111
   17bea:	96 e1       	ldi	r25, 0x16	; 22
   17bec:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17bf0:	8f e6       	ldi	r24, 0x6F	; 111
   17bf2:	96 e1       	ldi	r25, 0x16	; 22
   17bf4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17bf8:	85 e0       	ldi	r24, 0x05	; 5
   17bfa:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17bfe:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17c02:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17c06:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17c0a:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17c0e:	80 61       	ori	r24, 0x10	; 16
   17c10:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17c14:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17c18:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17c1c:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17c20:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17c24:	81 60       	ori	r24, 0x01	; 1
   17c26:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17c2a:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   17c2e:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   17c32:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17c36:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17c3a:	84 60       	ori	r24, 0x04	; 4
   17c3c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17c40:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17c44:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   17c48:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   17c4c:	3d c0       	rjmp	.+122    	; 0x17cc8 <_Z21Select_Operation_Modev+0x18a>
   17c4e:	81 50       	subi	r24, 0x01	; 1
   17c50:	83 30       	cpi	r24, 0x03	; 3
   17c52:	08 f0       	brcs	.+2      	; 0x17c56 <_Z21Select_Operation_Modev+0x118>
   17c54:	8e c0       	rjmp	.+284    	; 0x17d72 <_Z21Select_Operation_Modev+0x234>
   17c56:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17c5a:	81 30       	cpi	r24, 0x01	; 1
   17c5c:	51 f4       	brne	.+20     	; 0x17c72 <_Z21Select_Operation_Modev+0x134>
   17c5e:	6e ec       	ldi	r22, 0xCE	; 206
   17c60:	75 e4       	ldi	r23, 0x45	; 69
   17c62:	8f e6       	ldi	r24, 0x6F	; 111
   17c64:	96 e1       	ldi	r25, 0x16	; 22
   17c66:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17c6a:	8f e6       	ldi	r24, 0x6F	; 111
   17c6c:	96 e1       	ldi	r25, 0x16	; 22
   17c6e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17c72:	10 92 8e 15 	sts	0x158E, r1	; 0x80158e <_sRuble_Parameters+0x29>
   17c76:	81 e0       	ldi	r24, 0x01	; 1
   17c78:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17c7c:	84 e0       	ldi	r24, 0x04	; 4
   17c7e:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17c82:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   17c86:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   17c8a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17c8e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17c92:	84 60       	ori	r24, 0x04	; 4
   17c94:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17c98:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17c9c:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17ca0:	81 60       	ori	r24, 0x01	; 1
   17ca2:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17ca6:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17caa:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17cae:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17cb2:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17cb6:	84 60       	ori	r24, 0x04	; 4
   17cb8:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17cbc:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17cc0:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17cc4:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17cc8:	6c e8       	ldi	r22, 0x8C	; 140
   17cca:	75 e1       	ldi	r23, 0x15	; 21
   17ccc:	80 e6       	ldi	r24, 0x60	; 96
   17cce:	94 e0       	ldi	r25, 0x04	; 4
   17cd0:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17cd4:	4e c0       	rjmp	.+156    	; 0x17d72 <_Z21Select_Operation_Modev+0x234>
   17cd6:	81 30       	cpi	r24, 0x01	; 1
   17cd8:	19 f0       	breq	.+6      	; 0x17ce0 <_Z21Select_Operation_Modev+0x1a2>
   17cda:	85 30       	cpi	r24, 0x05	; 5
   17cdc:	69 f0       	breq	.+26     	; 0x17cf8 <_Z21Select_Operation_Modev+0x1ba>
   17cde:	47 c0       	rjmp	.+142    	; 0x17d6e <_Z21Select_Operation_Modev+0x230>
   17ce0:	10 92 8e 15 	sts	0x158E, r1	; 0x80158e <_sRuble_Parameters+0x29>
   17ce4:	82 e0       	ldi	r24, 0x02	; 2
   17ce6:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17cea:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17cee:	81 30       	cpi	r24, 0x01	; 1
   17cf0:	b1 f4       	brne	.+44     	; 0x17d1e <_Z21Select_Operation_Modev+0x1e0>
   17cf2:	6a eb       	ldi	r22, 0xBA	; 186
   17cf4:	75 e4       	ldi	r23, 0x45	; 69
   17cf6:	0b c0       	rjmp	.+22     	; 0x17d0e <_Z21Select_Operation_Modev+0x1d0>
   17cf8:	10 92 8e 15 	sts	0x158E, r1	; 0x80158e <_sRuble_Parameters+0x29>
   17cfc:	82 e0       	ldi	r24, 0x02	; 2
   17cfe:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17d02:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17d06:	81 30       	cpi	r24, 0x01	; 1
   17d08:	51 f4       	brne	.+20     	; 0x17d1e <_Z21Select_Operation_Modev+0x1e0>
   17d0a:	66 ea       	ldi	r22, 0xA6	; 166
   17d0c:	75 e4       	ldi	r23, 0x45	; 69
   17d0e:	8f e6       	ldi	r24, 0x6F	; 111
   17d10:	96 e1       	ldi	r25, 0x16	; 22
   17d12:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17d16:	8f e6       	ldi	r24, 0x6F	; 111
   17d18:	96 e1       	ldi	r25, 0x16	; 22
   17d1a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17d1e:	83 e0       	ldi	r24, 0x03	; 3
   17d20:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17d24:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17d28:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17d2c:	8c 60       	ori	r24, 0x0C	; 12
   17d2e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17d32:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17d36:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17d3a:	8e 7f       	andi	r24, 0xFE	; 254
   17d3c:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17d40:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17d44:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17d48:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17d4c:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17d50:	80 62       	ori	r24, 0x20	; 32
   17d52:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17d56:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17d5a:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17d5e:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17d62:	6c e8       	ldi	r22, 0x8C	; 140
   17d64:	75 e1       	ldi	r23, 0x15	; 21
   17d66:	80 e6       	ldi	r24, 0x60	; 96
   17d68:	94 e0       	ldi	r25, 0x04	; 4
   17d6a:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17d6e:	10 92 8e 15 	sts	0x158E, r1	; 0x80158e <_sRuble_Parameters+0x29>
   17d72:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   17d76:	82 30       	cpi	r24, 0x02	; 2
   17d78:	09 f4       	brne	.+2      	; 0x17d7c <_Z21Select_Operation_Modev+0x23e>
   17d7a:	66 c1       	rjmp	.+716    	; 0x18048 <_Z21Select_Operation_Modev+0x50a>
   17d7c:	20 f4       	brcc	.+8      	; 0x17d86 <_Z21Select_Operation_Modev+0x248>
   17d7e:	81 30       	cpi	r24, 0x01	; 1
   17d80:	09 f4       	brne	.+2      	; 0x17d84 <_Z21Select_Operation_Modev+0x246>
   17d82:	c6 c0       	rjmp	.+396    	; 0x17f10 <_Z21Select_Operation_Modev+0x3d2>
   17d84:	08 95       	ret
   17d86:	83 30       	cpi	r24, 0x03	; 3
   17d88:	21 f0       	breq	.+8      	; 0x17d92 <_Z21Select_Operation_Modev+0x254>
   17d8a:	85 30       	cpi	r24, 0x05	; 5
   17d8c:	09 f4       	brne	.+2      	; 0x17d90 <_Z21Select_Operation_Modev+0x252>
   17d8e:	17 c1       	rjmp	.+558    	; 0x17fbe <_Z21Select_Operation_Modev+0x480>
   17d90:	08 95       	ret
   17d92:	80 91 7b 15 	lds	r24, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   17d96:	90 91 7c 15 	lds	r25, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
   17d9a:	89 2b       	or	r24, r25
   17d9c:	09 f0       	breq	.+2      	; 0x17da0 <_Z21Select_Operation_Modev+0x262>
   17d9e:	5f c0       	rjmp	.+190    	; 0x17e5e <_Z21Select_Operation_Modev+0x320>
   17da0:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <_sSchedules>
   17da4:	88 23       	and	r24, r24
   17da6:	e1 f0       	breq	.+56     	; 0x17de0 <_Z21Select_Operation_Modev+0x2a2>
   17da8:	e2 dd       	rcall	.-1084   	; 0x1796e <_Z15Stop_Irrigationv>
   17daa:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17dae:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17db2:	84 60       	ori	r24, 0x04	; 4
   17db4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17db8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17dbc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17dc0:	81 30       	cpi	r24, 0x01	; 1
   17dc2:	51 f4       	brne	.+20     	; 0x17dd8 <_Z21Select_Operation_Modev+0x29a>
   17dc4:	63 e9       	ldi	r22, 0x93	; 147
   17dc6:	75 e4       	ldi	r23, 0x45	; 69
   17dc8:	8f e6       	ldi	r24, 0x6F	; 111
   17dca:	96 e1       	ldi	r25, 0x16	; 22
   17dcc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17dd0:	8f e6       	ldi	r24, 0x6F	; 111
   17dd2:	96 e1       	ldi	r25, 0x16	; 22
   17dd4:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17dd8:	85 e0       	ldi	r24, 0x05	; 5
   17dda:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17dde:	1e c0       	rjmp	.+60     	; 0x17e1c <_Z21Select_Operation_Modev+0x2de>
   17de0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17de4:	81 30       	cpi	r24, 0x01	; 1
   17de6:	51 f4       	brne	.+20     	; 0x17dfc <_Z21Select_Operation_Modev+0x2be>
   17de8:	67 e7       	ldi	r22, 0x77	; 119
   17dea:	75 e4       	ldi	r23, 0x45	; 69
   17dec:	8f e6       	ldi	r24, 0x6F	; 111
   17dee:	96 e1       	ldi	r25, 0x16	; 22
   17df0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17df4:	8f e6       	ldi	r24, 0x6F	; 111
   17df6:	96 e1       	ldi	r25, 0x16	; 22
   17df8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17dfc:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   17e00:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   17e04:	85 e0       	ldi	r24, 0x05	; 5
   17e06:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   17e0a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17e0e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17e12:	84 60       	ori	r24, 0x04	; 4
   17e14:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17e18:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17e1c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17e20:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17e24:	20 91 90 15 	lds	r18, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17e28:	2e 7f       	andi	r18, 0xFE	; 254
   17e2a:	20 93 90 15 	sts	0x1590, r18	; 0x801590 <_sRuble_Parameters+0x2b>
   17e2e:	24 e0       	ldi	r18, 0x04	; 4
   17e30:	20 93 8d 15 	sts	0x158D, r18	; 0x80158d <_sRuble_Parameters+0x28>
   17e34:	8c 60       	ori	r24, 0x0C	; 12
   17e36:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17e3a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17e3e:	6c e8       	ldi	r22, 0x8C	; 140
   17e40:	75 e1       	ldi	r23, 0x15	; 21
   17e42:	80 e6       	ldi	r24, 0x60	; 96
   17e44:	94 e0       	ldi	r25, 0x04	; 4
   17e46:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17e4a:	65 ed       	ldi	r22, 0xD5	; 213
   17e4c:	75 e1       	ldi	r23, 0x15	; 21
   17e4e:	8e e1       	ldi	r24, 0x1E	; 30
   17e50:	9c e0       	ldi	r25, 0x0C	; 12
   17e52:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17e56:	80 e2       	ldi	r24, 0x20	; 32
   17e58:	9c e0       	ldi	r25, 0x0C	; 12
   17e5a:	0e 94 0d 84 	call	0x1081a	; 0x1081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>
   17e5e:	80 91 8f 15 	lds	r24, 0x158F	; 0x80158f <_sRuble_Parameters+0x2a>
   17e62:	82 30       	cpi	r24, 0x02	; 2
   17e64:	09 f4       	brne	.+2      	; 0x17e68 <_Z21Select_Operation_Modev+0x32a>
   17e66:	3e c1       	rjmp	.+636    	; 0x180e4 <_Z21Select_Operation_Modev+0x5a6>
   17e68:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17e6c:	81 30       	cpi	r24, 0x01	; 1
   17e6e:	51 f4       	brne	.+20     	; 0x17e84 <_Z21Select_Operation_Modev+0x346>
   17e70:	62 e6       	ldi	r22, 0x62	; 98
   17e72:	75 e4       	ldi	r23, 0x45	; 69
   17e74:	8f e6       	ldi	r24, 0x6F	; 111
   17e76:	96 e1       	ldi	r25, 0x16	; 22
   17e78:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17e7c:	8f e6       	ldi	r24, 0x6F	; 111
   17e7e:	96 e1       	ldi	r25, 0x16	; 22
   17e80:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17e84:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   17e88:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   17e8c:	22 e0       	ldi	r18, 0x02	; 2
   17e8e:	20 93 8c 15 	sts	0x158C, r18	; 0x80158c <_sRuble_Parameters+0x27>
   17e92:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17e96:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17e9a:	88 60       	ori	r24, 0x08	; 8
   17e9c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17ea0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17ea4:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17ea8:	81 60       	ori	r24, 0x01	; 1
   17eaa:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17eae:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17eb2:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17eb6:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17eba:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17ebe:	92 60       	ori	r25, 0x02	; 2
   17ec0:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17ec4:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17ec8:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17ecc:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17ed0:	81 e0       	ldi	r24, 0x01	; 1
   17ed2:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17ed6:	20 93 1a 16 	sts	0x161A, r18	; 0x80161a <_sRuble_Parameters+0xb5>
   17eda:	6a e1       	ldi	r22, 0x1A	; 26
   17edc:	76 e1       	ldi	r23, 0x16	; 22
   17ede:	81 ea       	ldi	r24, 0xA1	; 161
   17ee0:	94 e0       	ldi	r25, 0x04	; 4
   17ee2:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17ee6:	6c e8       	ldi	r22, 0x8C	; 140
   17ee8:	75 e1       	ldi	r23, 0x15	; 21
   17eea:	80 e6       	ldi	r24, 0x60	; 96
   17eec:	94 e0       	ldi	r25, 0x04	; 4
   17eee:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17ef2:	65 ed       	ldi	r22, 0xD5	; 213
   17ef4:	75 e1       	ldi	r23, 0x15	; 21
   17ef6:	8e e1       	ldi	r24, 0x1E	; 30
   17ef8:	9c e0       	ldi	r25, 0x0C	; 12
   17efa:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17efe:	80 e2       	ldi	r24, 0x20	; 32
   17f00:	9c e0       	ldi	r25, 0x0C	; 12
   17f02:	0e 94 0d 84 	call	0x1081a	; 0x1081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>
   17f06:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   17f0a:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   17f0e:	08 95       	ret
   17f10:	80 91 8f 15 	lds	r24, 0x158F	; 0x80158f <_sRuble_Parameters+0x2a>
   17f14:	82 30       	cpi	r24, 0x02	; 2
   17f16:	09 f4       	brne	.+2      	; 0x17f1a <_Z21Select_Operation_Modev+0x3dc>
   17f18:	45 c0       	rjmp	.+138    	; 0x17fa4 <_Z21Select_Operation_Modev+0x466>
   17f1a:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17f1e:	81 30       	cpi	r24, 0x01	; 1
   17f20:	51 f4       	brne	.+20     	; 0x17f36 <_Z21Select_Operation_Modev+0x3f8>
   17f22:	6d e4       	ldi	r22, 0x4D	; 77
   17f24:	75 e4       	ldi	r23, 0x45	; 69
   17f26:	8f e6       	ldi	r24, 0x6F	; 111
   17f28:	96 e1       	ldi	r25, 0x16	; 22
   17f2a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17f2e:	8f e6       	ldi	r24, 0x6F	; 111
   17f30:	96 e1       	ldi	r25, 0x16	; 22
   17f32:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17f36:	22 e0       	ldi	r18, 0x02	; 2
   17f38:	20 93 8c 15 	sts	0x158C, r18	; 0x80158c <_sRuble_Parameters+0x27>
   17f3c:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17f40:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17f44:	84 60       	ori	r24, 0x04	; 4
   17f46:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17f4a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17f4e:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   17f52:	81 60       	ori	r24, 0x01	; 1
   17f54:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   17f58:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   17f5c:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   17f60:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   17f64:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   17f68:	88 60       	ori	r24, 0x08	; 8
   17f6a:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   17f6e:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   17f72:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   17f76:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   17f7a:	81 e0       	ldi	r24, 0x01	; 1
   17f7c:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   17f80:	20 93 1a 16 	sts	0x161A, r18	; 0x80161a <_sRuble_Parameters+0xb5>
   17f84:	6a e1       	ldi	r22, 0x1A	; 26
   17f86:	76 e1       	ldi	r23, 0x16	; 22
   17f88:	81 ea       	ldi	r24, 0xA1	; 161
   17f8a:	94 e0       	ldi	r25, 0x04	; 4
   17f8c:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17f90:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   17f94:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   17f98:	6c e8       	ldi	r22, 0x8C	; 140
   17f9a:	75 e1       	ldi	r23, 0x15	; 21
   17f9c:	80 e6       	ldi	r24, 0x60	; 96
   17f9e:	94 e0       	ldi	r25, 0x04	; 4
   17fa0:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   17fa4:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <_sSchedules>
   17fa8:	88 23       	and	r24, r24
   17faa:	09 f4       	brne	.+2      	; 0x17fae <_Z21Select_Operation_Modev+0x470>
   17fac:	9b c0       	rjmp	.+310    	; 0x180e4 <_Z21Select_Operation_Modev+0x5a6>
   17fae:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17fb2:	81 30       	cpi	r24, 0x01	; 1
   17fb4:	09 f0       	breq	.+2      	; 0x17fb8 <_Z21Select_Operation_Modev+0x47a>
   17fb6:	70 c0       	rjmp	.+224    	; 0x18098 <_Z21Select_Operation_Modev+0x55a>
   17fb8:	6a e3       	ldi	r22, 0x3A	; 58
   17fba:	75 e4       	ldi	r23, 0x45	; 69
   17fbc:	54 c0       	rjmp	.+168    	; 0x18066 <_Z21Select_Operation_Modev+0x528>
   17fbe:	80 91 8f 15 	lds	r24, 0x158F	; 0x80158f <_sRuble_Parameters+0x2a>
   17fc2:	82 30       	cpi	r24, 0x02	; 2
   17fc4:	09 f4       	brne	.+2      	; 0x17fc8 <_Z21Select_Operation_Modev+0x48a>
   17fc6:	8e c0       	rjmp	.+284    	; 0x180e4 <_Z21Select_Operation_Modev+0x5a6>
   17fc8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   17fcc:	81 30       	cpi	r24, 0x01	; 1
   17fce:	51 f4       	brne	.+20     	; 0x17fe4 <_Z21Select_Operation_Modev+0x4a6>
   17fd0:	65 e2       	ldi	r22, 0x25	; 37
   17fd2:	75 e4       	ldi	r23, 0x45	; 69
   17fd4:	8f e6       	ldi	r24, 0x6F	; 111
   17fd6:	96 e1       	ldi	r25, 0x16	; 22
   17fd8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   17fdc:	8f e6       	ldi	r24, 0x6F	; 111
   17fde:	96 e1       	ldi	r25, 0x16	; 22
   17fe0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   17fe4:	22 e0       	ldi	r18, 0x02	; 2
   17fe6:	20 93 8c 15 	sts	0x158C, r18	; 0x80158c <_sRuble_Parameters+0x27>
   17fea:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   17fee:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   17ff2:	84 60       	ori	r24, 0x04	; 4
   17ff4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   17ff8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   17ffc:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   18000:	81 60       	ori	r24, 0x01	; 1
   18002:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   18006:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1800a:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1800e:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   18012:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   18016:	88 60       	ori	r24, 0x08	; 8
   18018:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1801c:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   18020:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   18024:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   18028:	81 e0       	ldi	r24, 0x01	; 1
   1802a:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   1802e:	20 93 1a 16 	sts	0x161A, r18	; 0x80161a <_sRuble_Parameters+0xb5>
   18032:	6a e1       	ldi	r22, 0x1A	; 26
   18034:	76 e1       	ldi	r23, 0x16	; 22
   18036:	81 ea       	ldi	r24, 0xA1	; 161
   18038:	94 e0       	ldi	r25, 0x04	; 4
   1803a:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1803e:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   18042:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   18046:	48 c0       	rjmp	.+144    	; 0x180d8 <_Z21Select_Operation_Modev+0x59a>
   18048:	80 91 8f 15 	lds	r24, 0x158F	; 0x80158f <_sRuble_Parameters+0x2a>
   1804c:	82 30       	cpi	r24, 0x02	; 2
   1804e:	09 f0       	breq	.+2      	; 0x18052 <_Z21Select_Operation_Modev+0x514>
   18050:	49 c0       	rjmp	.+146    	; 0x180e4 <_Z21Select_Operation_Modev+0x5a6>
   18052:	90 91 f0 08 	lds	r25, 0x08F0	; 0x8008f0 <_sSchedules>
   18056:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1805a:	99 23       	and	r25, r25
   1805c:	69 f0       	breq	.+26     	; 0x18078 <_Z21Select_Operation_Modev+0x53a>
   1805e:	81 30       	cpi	r24, 0x01	; 1
   18060:	d9 f4       	brne	.+54     	; 0x18098 <_Z21Select_Operation_Modev+0x55a>
   18062:	62 e1       	ldi	r22, 0x12	; 18
   18064:	75 e4       	ldi	r23, 0x45	; 69
   18066:	8f e6       	ldi	r24, 0x6F	; 111
   18068:	96 e1       	ldi	r25, 0x16	; 22
   1806a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1806e:	8f e6       	ldi	r24, 0x6F	; 111
   18070:	96 e1       	ldi	r25, 0x16	; 22
   18072:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18076:	10 c0       	rjmp	.+32     	; 0x18098 <_Z21Select_Operation_Modev+0x55a>
   18078:	81 30       	cpi	r24, 0x01	; 1
   1807a:	51 f4       	brne	.+20     	; 0x18090 <_Z21Select_Operation_Modev+0x552>
   1807c:	6f ef       	ldi	r22, 0xFF	; 255
   1807e:	74 e4       	ldi	r23, 0x44	; 68
   18080:	8f e6       	ldi	r24, 0x6F	; 111
   18082:	96 e1       	ldi	r25, 0x16	; 22
   18084:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18088:	8f e6       	ldi	r24, 0x6F	; 111
   1808a:	96 e1       	ldi	r25, 0x16	; 22
   1808c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18090:	10 92 4d 16 	sts	0x164D, r1	; 0x80164d <_sRuble_Parameters+0xe8>
   18094:	10 92 4c 16 	sts	0x164C, r1	; 0x80164c <_sRuble_Parameters+0xe7>
   18098:	85 e0       	ldi	r24, 0x05	; 5
   1809a:	80 93 8c 15 	sts	0x158C, r24	; 0x80158c <_sRuble_Parameters+0x27>
   1809e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   180a2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   180a6:	84 60       	ori	r24, 0x04	; 4
   180a8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   180ac:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   180b0:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   180b4:	8e 7f       	andi	r24, 0xFE	; 254
   180b6:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   180ba:	80 e1       	ldi	r24, 0x10	; 16
   180bc:	90 e0       	ldi	r25, 0x00	; 0
   180be:	a0 e0       	ldi	r26, 0x00	; 0
   180c0:	b0 e0       	ldi	r27, 0x00	; 0
   180c2:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   180c6:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   180ca:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   180ce:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   180d2:	81 e0       	ldi	r24, 0x01	; 1
   180d4:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   180d8:	6c e8       	ldi	r22, 0x8C	; 140
   180da:	75 e1       	ldi	r23, 0x15	; 21
   180dc:	80 e6       	ldi	r24, 0x60	; 96
   180de:	94 e0       	ldi	r25, 0x04	; 4
   180e0:	0c 94 c0 83 	jmp	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   180e4:	08 95       	ret

000180e6 <_Z16Start_Irrigationv>:
   180e6:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   180ea:	81 30       	cpi	r24, 0x01	; 1
   180ec:	31 f4       	brne	.+12     	; 0x180fa <_Z16Start_Irrigationv+0x14>
   180ee:	6b e4       	ldi	r22, 0x4B	; 75
   180f0:	71 e4       	ldi	r23, 0x41	; 65
   180f2:	8f e6       	ldi	r24, 0x6F	; 111
   180f4:	96 e1       	ldi	r25, 0x16	; 22
   180f6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   180fa:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
   180fe:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18102:	81 30       	cpi	r24, 0x01	; 1
   18104:	29 f4       	brne	.+10     	; 0x18110 <_Z16Start_Irrigationv+0x2a>
   18106:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   1810a:	81 30       	cpi	r24, 0x01	; 1
   1810c:	09 f4       	brne	.+2      	; 0x18110 <_Z16Start_Irrigationv+0x2a>
   1810e:	d0 c0       	rjmp	.+416    	; 0x182b0 <_Z16Start_Irrigationv+0x1ca>
   18110:	82 e0       	ldi	r24, 0x02	; 2
   18112:	0e 94 3d 24 	call	0x487a	; 0x487a <_Z22Hard_Coded_Flush_Valveh>
   18116:	81 e0       	ldi	r24, 0x01	; 1
   18118:	0e 94 1a ab 	call	0x15634	; 0x15634 <_Z22Valve_Grouping_Handlerh>
   1811c:	88 23       	and	r24, r24
   1811e:	09 f4       	brne	.+2      	; 0x18122 <_Z16Start_Irrigationv+0x3c>
   18120:	af c0       	rjmp	.+350    	; 0x18280 <_Z16Start_Irrigationv+0x19a>
   18122:	10 92 80 15 	sts	0x1580, r1	; 0x801580 <_sRuble_Parameters+0x1b>
   18126:	10 92 7f 15 	sts	0x157F, r1	; 0x80157f <_sRuble_Parameters+0x1a>
   1812a:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   1812e:	81 11       	cpse	r24, r1
   18130:	1e c0       	rjmp	.+60     	; 0x1816e <_Z16Start_Irrigationv+0x88>
   18132:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18136:	81 30       	cpi	r24, 0x01	; 1
   18138:	d1 f4       	brne	.+52     	; 0x1816e <_Z16Start_Irrigationv+0x88>
   1813a:	8a e0       	ldi	r24, 0x0A	; 10
   1813c:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18140:	89 2b       	or	r24, r25
   18142:	21 f0       	breq	.+8      	; 0x1814c <_Z16Start_Irrigationv+0x66>
   18144:	60 e0       	ldi	r22, 0x00	; 0
   18146:	8a e0       	ldi	r24, 0x0A	; 10
   18148:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1814c:	8b e0       	ldi	r24, 0x0B	; 11
   1814e:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18152:	89 2b       	or	r24, r25
   18154:	21 f0       	breq	.+8      	; 0x1815e <_Z16Start_Irrigationv+0x78>
   18156:	60 e0       	ldi	r22, 0x00	; 0
   18158:	8b e0       	ldi	r24, 0x0B	; 11
   1815a:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1815e:	e0 91 41 16 	lds	r30, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18162:	f0 e0       	ldi	r31, 0x00	; 0
   18164:	e5 5c       	subi	r30, 0xC5	; 197
   18166:	f9 4e       	sbci	r31, 0xE9	; 233
   18168:	81 e0       	ldi	r24, 0x01	; 1
   1816a:	80 83       	st	Z, r24
   1816c:	32 c0       	rjmp	.+100    	; 0x181d2 <_Z16Start_Irrigationv+0xec>
   1816e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18172:	81 30       	cpi	r24, 0x01	; 1
   18174:	51 f4       	brne	.+20     	; 0x1818a <_Z16Start_Irrigationv+0xa4>
   18176:	64 e2       	ldi	r22, 0x24	; 36
   18178:	71 e4       	ldi	r23, 0x41	; 65
   1817a:	8f e6       	ldi	r24, 0x6F	; 111
   1817c:	96 e1       	ldi	r25, 0x16	; 22
   1817e:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18182:	8f e6       	ldi	r24, 0x6F	; 111
   18184:	96 e1       	ldi	r25, 0x16	; 22
   18186:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1818a:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   1818e:	62 50       	subi	r22, 0x02	; 2
   18190:	82 e0       	ldi	r24, 0x02	; 2
   18192:	ae d8       	rcall	.-3748   	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18194:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18198:	88 23       	and	r24, r24
   1819a:	b9 f1       	breq	.+110    	; 0x1820a <_Z16Start_Irrigationv+0x124>
   1819c:	91 30       	cpi	r25, 0x01	; 1
   1819e:	51 f4       	brne	.+20     	; 0x181b4 <_Z16Start_Irrigationv+0xce>
   181a0:	6f e0       	ldi	r22, 0x0F	; 15
   181a2:	71 e4       	ldi	r23, 0x41	; 65
   181a4:	8f e6       	ldi	r24, 0x6F	; 111
   181a6:	96 e1       	ldi	r25, 0x16	; 22
   181a8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   181ac:	8f e6       	ldi	r24, 0x6F	; 111
   181ae:	96 e1       	ldi	r25, 0x16	; 22
   181b0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   181b4:	e0 91 41 16 	lds	r30, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   181b8:	f0 e0       	ldi	r31, 0x00	; 0
   181ba:	e5 5c       	subi	r30, 0xC5	; 197
   181bc:	f9 4e       	sbci	r31, 0xE9	; 233
   181be:	81 e0       	ldi	r24, 0x01	; 1
   181c0:	80 83       	st	Z, r24
   181c2:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
   181c6:	65 e2       	ldi	r22, 0x25	; 37
   181c8:	76 e1       	ldi	r23, 0x16	; 22
   181ca:	85 e3       	ldi	r24, 0x35	; 53
   181cc:	9c e0       	ldi	r25, 0x0C	; 12
   181ce:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   181d2:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   181d6:	86 e9       	ldi	r24, 0x96	; 150
   181d8:	90 e0       	ldi	r25, 0x00	; 0
   181da:	90 93 27 16 	sts	0x1627, r25	; 0x801627 <_sRuble_Parameters+0xc2>
   181de:	80 93 26 16 	sts	0x1626, r24	; 0x801626 <_sRuble_Parameters+0xc1>
   181e2:	80 91 90 15 	lds	r24, 0x1590	; 0x801590 <_sRuble_Parameters+0x2b>
   181e6:	82 60       	ori	r24, 0x02	; 2
   181e8:	80 93 90 15 	sts	0x1590, r24	; 0x801590 <_sRuble_Parameters+0x2b>
   181ec:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   181f0:	81 30       	cpi	r24, 0x01	; 1
   181f2:	d9 f5       	brne	.+118    	; 0x1826a <_Z16Start_Irrigationv+0x184>
   181f4:	6b ec       	ldi	r22, 0xCB	; 203
   181f6:	70 e4       	ldi	r23, 0x40	; 64
   181f8:	8f e6       	ldi	r24, 0x6F	; 111
   181fa:	96 e1       	ldi	r25, 0x16	; 22
   181fc:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18200:	8f e6       	ldi	r24, 0x6F	; 111
   18202:	96 e1       	ldi	r25, 0x16	; 22
   18204:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18208:	30 c0       	rjmp	.+96     	; 0x1826a <_Z16Start_Irrigationv+0x184>
   1820a:	91 30       	cpi	r25, 0x01	; 1
   1820c:	51 f4       	brne	.+20     	; 0x18222 <_Z16Start_Irrigationv+0x13c>
   1820e:	62 ef       	ldi	r22, 0xF2	; 242
   18210:	70 e4       	ldi	r23, 0x40	; 64
   18212:	8f e6       	ldi	r24, 0x6F	; 111
   18214:	96 e1       	ldi	r25, 0x16	; 22
   18216:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1821a:	8f e6       	ldi	r24, 0x6F	; 111
   1821c:	96 e1       	ldi	r25, 0x16	; 22
   1821e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18222:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   18226:	65 e2       	ldi	r22, 0x25	; 37
   18228:	76 e1       	ldi	r23, 0x16	; 22
   1822a:	85 e3       	ldi	r24, 0x35	; 53
   1822c:	9c e0       	ldi	r25, 0x0C	; 12
   1822e:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18232:	e0 91 41 16 	lds	r30, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18236:	f0 e0       	ldi	r31, 0x00	; 0
   18238:	e5 5c       	subi	r30, 0xC5	; 197
   1823a:	f9 4e       	sbci	r31, 0xE9	; 233
   1823c:	10 82       	st	Z, r1
   1823e:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   18242:	95 db       	rcall	.-2262   	; 0x1796e <_Z15Stop_Irrigationv>
   18244:	64 e0       	ldi	r22, 0x04	; 4
   18246:	80 e0       	ldi	r24, 0x00	; 0
   18248:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   1824c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18250:	81 30       	cpi	r24, 0x01	; 1
   18252:	71 f5       	brne	.+92     	; 0x182b0 <_Z16Start_Irrigationv+0x1ca>
   18254:	6c ed       	ldi	r22, 0xDC	; 220
   18256:	70 e4       	ldi	r23, 0x40	; 64
   18258:	8f e6       	ldi	r24, 0x6F	; 111
   1825a:	96 e1       	ldi	r25, 0x16	; 22
   1825c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18260:	8f e6       	ldi	r24, 0x6F	; 111
   18262:	96 e1       	ldi	r25, 0x16	; 22
   18264:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18268:	23 c0       	rjmp	.+70     	; 0x182b0 <_Z16Start_Irrigationv+0x1ca>
   1826a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1826e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18272:	84 60       	ori	r24, 0x04	; 4
   18274:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18278:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1827c:	81 e0       	ldi	r24, 0x01	; 1
   1827e:	08 95       	ret
   18280:	76 db       	rcall	.-2324   	; 0x1796e <_Z15Stop_Irrigationv>
   18282:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18286:	81 30       	cpi	r24, 0x01	; 1
   18288:	51 f4       	brne	.+20     	; 0x1829e <_Z16Start_Irrigationv+0x1b8>
   1828a:	65 eb       	ldi	r22, 0xB5	; 181
   1828c:	70 e4       	ldi	r23, 0x40	; 64
   1828e:	8f e6       	ldi	r24, 0x6F	; 111
   18290:	96 e1       	ldi	r25, 0x16	; 22
   18292:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18296:	8f e6       	ldi	r24, 0x6F	; 111
   18298:	96 e1       	ldi	r25, 0x16	; 22
   1829a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1829e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   182a2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   182a6:	84 60       	ori	r24, 0x04	; 4
   182a8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   182ac:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   182b0:	80 e0       	ldi	r24, 0x00	; 0
   182b2:	08 95       	ret

000182b4 <_Z13Run_Operationv>:
   182b4:	0f 93       	push	r16
   182b6:	1f 93       	push	r17
   182b8:	cf 93       	push	r28
   182ba:	df 93       	push	r29
   182bc:	1f 92       	push	r1
   182be:	1f 92       	push	r1
   182c0:	cd b7       	in	r28, 0x3d	; 61
   182c2:	de b7       	in	r29, 0x3e	; 62
   182c4:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   182c8:	82 30       	cpi	r24, 0x02	; 2
   182ca:	61 f0       	breq	.+24     	; 0x182e4 <_Z13Run_Operationv+0x30>
   182cc:	20 f4       	brcc	.+8      	; 0x182d6 <_Z13Run_Operationv+0x22>
   182ce:	81 30       	cpi	r24, 0x01	; 1
   182d0:	09 f4       	brne	.+2      	; 0x182d4 <_Z13Run_Operationv+0x20>
   182d2:	42 c0       	rjmp	.+132    	; 0x18358 <_Z13Run_Operationv+0xa4>
   182d4:	ef c2       	rjmp	.+1502   	; 0x188b4 <_Z13Run_Operationv+0x600>
   182d6:	83 30       	cpi	r24, 0x03	; 3
   182d8:	09 f4       	brne	.+2      	; 0x182dc <_Z13Run_Operationv+0x28>
   182da:	d5 c0       	rjmp	.+426    	; 0x18486 <_Z13Run_Operationv+0x1d2>
   182dc:	85 30       	cpi	r24, 0x05	; 5
   182de:	09 f4       	brne	.+2      	; 0x182e2 <_Z13Run_Operationv+0x2e>
   182e0:	c5 c2       	rjmp	.+1418   	; 0x1886c <_Z13Run_Operationv+0x5b8>
   182e2:	e8 c2       	rjmp	.+1488   	; 0x188b4 <_Z13Run_Operationv+0x600>
   182e4:	80 91 8d 15 	lds	r24, 0x158D	; 0x80158d <_sRuble_Parameters+0x28>
   182e8:	81 30       	cpi	r24, 0x01	; 1
   182ea:	19 f0       	breq	.+6      	; 0x182f2 <_Z13Run_Operationv+0x3e>
   182ec:	84 30       	cpi	r24, 0x04	; 4
   182ee:	09 f0       	breq	.+2      	; 0x182f2 <_Z13Run_Operationv+0x3e>
   182f0:	e1 c2       	rjmp	.+1474   	; 0x188b4 <_Z13Run_Operationv+0x600>
   182f2:	0e 94 5b 53 	call	0xa6b6	; 0xa6b6 <_Z20Schedules_Monitoringv>
   182f6:	80 91 4c 16 	lds	r24, 0x164C	; 0x80164c <_sRuble_Parameters+0xe7>
   182fa:	90 91 4d 16 	lds	r25, 0x164D	; 0x80164d <_sRuble_Parameters+0xe8>
   182fe:	89 2b       	or	r24, r25
   18300:	09 f0       	breq	.+2      	; 0x18304 <_Z13Run_Operationv+0x50>
   18302:	d8 c2       	rjmp	.+1456   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18304:	34 db       	rcall	.-2456   	; 0x1796e <_Z15Stop_Irrigationv>
   18306:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1830a:	88 23       	and	r24, r24
   1830c:	49 f0       	breq	.+18     	; 0x18320 <_Z13Run_Operationv+0x6c>
   1830e:	83 e0       	ldi	r24, 0x03	; 3
   18310:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   18314:	91 30       	cpi	r25, 0x01	; 1
   18316:	09 f0       	breq	.+2      	; 0x1831a <_Z13Run_Operationv+0x66>
   18318:	cd c2       	rjmp	.+1434   	; 0x188b4 <_Z13Run_Operationv+0x600>
   1831a:	67 ed       	ldi	r22, 0xD7	; 215
   1831c:	74 e4       	ldi	r23, 0x44	; 68
   1831e:	0e c0       	rjmp	.+28     	; 0x1833c <_Z13Run_Operationv+0x88>
   18320:	84 e0       	ldi	r24, 0x04	; 4
   18322:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   18326:	28 e5       	ldi	r18, 0x58	; 88
   18328:	32 e0       	ldi	r19, 0x02	; 2
   1832a:	30 93 4d 16 	sts	0x164D, r19	; 0x80164d <_sRuble_Parameters+0xe8>
   1832e:	20 93 4c 16 	sts	0x164C, r18	; 0x80164c <_sRuble_Parameters+0xe7>
   18332:	91 30       	cpi	r25, 0x01	; 1
   18334:	09 f0       	breq	.+2      	; 0x18338 <_Z13Run_Operationv+0x84>
   18336:	be c2       	rjmp	.+1404   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18338:	6f ea       	ldi	r22, 0xAF	; 175
   1833a:	74 e4       	ldi	r23, 0x44	; 68
   1833c:	8f e6       	ldi	r24, 0x6F	; 111
   1833e:	96 e1       	ldi	r25, 0x16	; 22
   18340:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18344:	8f e6       	ldi	r24, 0x6F	; 111
   18346:	96 e1       	ldi	r25, 0x16	; 22
   18348:	0f 90       	pop	r0
   1834a:	0f 90       	pop	r0
   1834c:	df 91       	pop	r29
   1834e:	cf 91       	pop	r28
   18350:	1f 91       	pop	r17
   18352:	0f 91       	pop	r16
   18354:	0c 94 b8 ce 	jmp	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18358:	80 91 8d 15 	lds	r24, 0x158D	; 0x80158d <_sRuble_Parameters+0x28>
   1835c:	83 30       	cpi	r24, 0x03	; 3
   1835e:	09 f4       	brne	.+2      	; 0x18362 <_Z13Run_Operationv+0xae>
   18360:	48 c0       	rjmp	.+144    	; 0x183f2 <_Z13Run_Operationv+0x13e>
   18362:	20 f4       	brcc	.+8      	; 0x1836c <_Z13Run_Operationv+0xb8>
   18364:	81 30       	cpi	r24, 0x01	; 1
   18366:	08 f4       	brcc	.+2      	; 0x1836a <_Z13Run_Operationv+0xb6>
   18368:	a5 c2       	rjmp	.+1354   	; 0x188b4 <_Z13Run_Operationv+0x600>
   1836a:	03 c0       	rjmp	.+6      	; 0x18372 <_Z13Run_Operationv+0xbe>
   1836c:	84 30       	cpi	r24, 0x04	; 4
   1836e:	09 f0       	breq	.+2      	; 0x18372 <_Z13Run_Operationv+0xbe>
   18370:	a1 c2       	rjmp	.+1346   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18372:	80 91 1d 16 	lds	r24, 0x161D	; 0x80161d <_sRuble_Parameters+0xb8>
   18376:	81 11       	cpse	r24, r1
   18378:	9d c2       	rjmp	.+1338   	; 0x188b4 <_Z13Run_Operationv+0x600>
   1837a:	0e 94 5b 53 	call	0xa6b6	; 0xa6b6 <_Z20Schedules_Monitoringv>
   1837e:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18382:	88 23       	and	r24, r24
   18384:	59 f1       	breq	.+86     	; 0x183dc <_Z13Run_Operationv+0x128>
   18386:	80 91 4c 16 	lds	r24, 0x164C	; 0x80164c <_sRuble_Parameters+0xe7>
   1838a:	90 91 4d 16 	lds	r25, 0x164D	; 0x80164d <_sRuble_Parameters+0xe8>
   1838e:	89 2b       	or	r24, r25
   18390:	09 f0       	breq	.+2      	; 0x18394 <_Z13Run_Operationv+0xe0>
   18392:	90 c2       	rjmp	.+1312   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18394:	ec da       	rcall	.-2600   	; 0x1796e <_Z15Stop_Irrigationv>
   18396:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1839a:	88 23       	and	r24, r24
   1839c:	49 f0       	breq	.+18     	; 0x183b0 <_Z13Run_Operationv+0xfc>
   1839e:	83 e0       	ldi	r24, 0x03	; 3
   183a0:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   183a4:	91 30       	cpi	r25, 0x01	; 1
   183a6:	09 f0       	breq	.+2      	; 0x183aa <_Z13Run_Operationv+0xf6>
   183a8:	85 c2       	rjmp	.+1290   	; 0x188b4 <_Z13Run_Operationv+0x600>
   183aa:	6d e8       	ldi	r22, 0x8D	; 141
   183ac:	74 e4       	ldi	r23, 0x44	; 68
   183ae:	c6 cf       	rjmp	.-116    	; 0x1833c <_Z13Run_Operationv+0x88>
   183b0:	84 e0       	ldi	r24, 0x04	; 4
   183b2:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   183b6:	91 30       	cpi	r25, 0x01	; 1
   183b8:	51 f4       	brne	.+20     	; 0x183ce <_Z13Run_Operationv+0x11a>
   183ba:	62 e6       	ldi	r22, 0x62	; 98
   183bc:	74 e4       	ldi	r23, 0x44	; 68
   183be:	8f e6       	ldi	r24, 0x6F	; 111
   183c0:	96 e1       	ldi	r25, 0x16	; 22
   183c2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   183c6:	8f e6       	ldi	r24, 0x6F	; 111
   183c8:	96 e1       	ldi	r25, 0x16	; 22
   183ca:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   183ce:	88 e5       	ldi	r24, 0x58	; 88
   183d0:	92 e0       	ldi	r25, 0x02	; 2
   183d2:	90 93 4d 16 	sts	0x164D, r25	; 0x80164d <_sRuble_Parameters+0xe8>
   183d6:	80 93 4c 16 	sts	0x164C, r24	; 0x80164c <_sRuble_Parameters+0xe7>
   183da:	6c c2       	rjmp	.+1240   	; 0x188b4 <_Z13Run_Operationv+0x600>
   183dc:	83 e0       	ldi	r24, 0x03	; 3
   183de:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   183e2:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   183e6:	81 30       	cpi	r24, 0x01	; 1
   183e8:	09 f0       	breq	.+2      	; 0x183ec <_Z13Run_Operationv+0x138>
   183ea:	64 c2       	rjmp	.+1224   	; 0x188b4 <_Z13Run_Operationv+0x600>
   183ec:	61 e4       	ldi	r22, 0x41	; 65
   183ee:	74 e4       	ldi	r23, 0x44	; 68
   183f0:	a5 cf       	rjmp	.-182    	; 0x1833c <_Z13Run_Operationv+0x88>
   183f2:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
   183f6:	88 23       	and	r24, r24
   183f8:	a1 f0       	breq	.+40     	; 0x18422 <_Z13Run_Operationv+0x16e>
   183fa:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   183fe:	81 30       	cpi	r24, 0x01	; 1
   18400:	51 f4       	brne	.+20     	; 0x18416 <_Z13Run_Operationv+0x162>
   18402:	62 e1       	ldi	r22, 0x12	; 18
   18404:	74 e4       	ldi	r23, 0x44	; 68
   18406:	8f e6       	ldi	r24, 0x6F	; 111
   18408:	96 e1       	ldi	r25, 0x16	; 22
   1840a:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1840e:	8f e6       	ldi	r24, 0x6F	; 111
   18410:	96 e1       	ldi	r25, 0x16	; 22
   18412:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18416:	ab da       	rcall	.-2730   	; 0x1796e <_Z15Stop_Irrigationv>
   18418:	81 11       	cpse	r24, r1
   1841a:	03 c0       	rjmp	.+6      	; 0x18422 <_Z13Run_Operationv+0x16e>
   1841c:	84 e0       	ldi	r24, 0x04	; 4
   1841e:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   18422:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   18426:	81 11       	cpse	r24, r1
   18428:	04 c0       	rjmp	.+8      	; 0x18432 <_Z13Run_Operationv+0x17e>
   1842a:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   1842e:	88 23       	and	r24, r24
   18430:	a1 f0       	breq	.+40     	; 0x1845a <_Z13Run_Operationv+0x1a6>
   18432:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18436:	81 30       	cpi	r24, 0x01	; 1
   18438:	51 f4       	brne	.+20     	; 0x1844e <_Z13Run_Operationv+0x19a>
   1843a:	67 ef       	ldi	r22, 0xF7	; 247
   1843c:	73 e4       	ldi	r23, 0x43	; 67
   1843e:	8f e6       	ldi	r24, 0x6F	; 111
   18440:	96 e1       	ldi	r25, 0x16	; 22
   18442:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18446:	8f e6       	ldi	r24, 0x6F	; 111
   18448:	96 e1       	ldi	r25, 0x16	; 22
   1844a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1844e:	8f da       	rcall	.-2786   	; 0x1796e <_Z15Stop_Irrigationv>
   18450:	81 11       	cpse	r24, r1
   18452:	03 c0       	rjmp	.+6      	; 0x1845a <_Z13Run_Operationv+0x1a6>
   18454:	84 e0       	ldi	r24, 0x04	; 4
   18456:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   1845a:	80 91 1d 16 	lds	r24, 0x161D	; 0x80161d <_sRuble_Parameters+0xb8>
   1845e:	88 23       	and	r24, r24
   18460:	09 f4       	brne	.+2      	; 0x18464 <_Z13Run_Operationv+0x1b0>
   18462:	28 c2       	rjmp	.+1104   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18464:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18468:	81 30       	cpi	r24, 0x01	; 1
   1846a:	51 f4       	brne	.+20     	; 0x18480 <_Z13Run_Operationv+0x1cc>
   1846c:	6e ec       	ldi	r22, 0xCE	; 206
   1846e:	73 e4       	ldi	r23, 0x43	; 67
   18470:	8f e6       	ldi	r24, 0x6F	; 111
   18472:	96 e1       	ldi	r25, 0x16	; 22
   18474:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18478:	8f e6       	ldi	r24, 0x6F	; 111
   1847a:	96 e1       	ldi	r25, 0x16	; 22
   1847c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18480:	76 da       	rcall	.-2836   	; 0x1796e <_Z15Stop_Irrigationv>
   18482:	84 e0       	ldi	r24, 0x04	; 4
   18484:	55 c0       	rjmp	.+170    	; 0x18530 <_Z13Run_Operationv+0x27c>
   18486:	80 91 8d 15 	lds	r24, 0x158D	; 0x80158d <_sRuble_Parameters+0x28>
   1848a:	83 30       	cpi	r24, 0x03	; 3
   1848c:	09 f4       	brne	.+2      	; 0x18490 <_Z13Run_Operationv+0x1dc>
   1848e:	76 c0       	rjmp	.+236    	; 0x1857c <_Z13Run_Operationv+0x2c8>
   18490:	20 f4       	brcc	.+8      	; 0x1849a <_Z13Run_Operationv+0x1e6>
   18492:	81 30       	cpi	r24, 0x01	; 1
   18494:	08 f4       	brcc	.+2      	; 0x18498 <_Z13Run_Operationv+0x1e4>
   18496:	0e c2       	rjmp	.+1052   	; 0x188b4 <_Z13Run_Operationv+0x600>
   18498:	03 c0       	rjmp	.+6      	; 0x184a0 <_Z13Run_Operationv+0x1ec>
   1849a:	84 30       	cpi	r24, 0x04	; 4
   1849c:	09 f0       	breq	.+2      	; 0x184a0 <_Z13Run_Operationv+0x1ec>
   1849e:	0a c2       	rjmp	.+1044   	; 0x188b4 <_Z13Run_Operationv+0x600>
   184a0:	80 91 83 15 	lds	r24, 0x1583	; 0x801583 <_sRuble_Parameters+0x1e>
   184a4:	90 91 84 15 	lds	r25, 0x1584	; 0x801584 <_sRuble_Parameters+0x1f>
   184a8:	89 2b       	or	r24, r25
   184aa:	09 f0       	breq	.+2      	; 0x184ae <_Z13Run_Operationv+0x1fa>
   184ac:	03 c2       	rjmp	.+1030   	; 0x188b4 <_Z13Run_Operationv+0x600>
   184ae:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   184b2:	81 30       	cpi	r24, 0x01	; 1
   184b4:	b1 f4       	brne	.+44     	; 0x184e2 <_Z13Run_Operationv+0x22e>
   184b6:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   184ba:	81 30       	cpi	r24, 0x01	; 1
   184bc:	91 f4       	brne	.+36     	; 0x184e2 <_Z13Run_Operationv+0x22e>
   184be:	80 ef       	ldi	r24, 0xF0	; 240
   184c0:	90 e0       	ldi	r25, 0x00	; 0
   184c2:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   184c6:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   184ca:	6e e0       	ldi	r22, 0x0E	; 14
   184cc:	76 e1       	ldi	r23, 0x16	; 22
   184ce:	8e e1       	ldi	r24, 0x1E	; 30
   184d0:	9c e0       	ldi	r25, 0x0C	; 12
   184d2:	0f 90       	pop	r0
   184d4:	0f 90       	pop	r0
   184d6:	df 91       	pop	r29
   184d8:	cf 91       	pop	r28
   184da:	1f 91       	pop	r17
   184dc:	0f 91       	pop	r16
   184de:	0c 94 c0 83 	jmp	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   184e2:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   184e6:	81 11       	cpse	r24, r1
   184e8:	04 c0       	rjmp	.+8      	; 0x184f2 <_Z13Run_Operationv+0x23e>
   184ea:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   184ee:	88 23       	and	r24, r24
   184f0:	39 f0       	breq	.+14     	; 0x18500 <_Z13Run_Operationv+0x24c>
   184f2:	8c e3       	ldi	r24, 0x3C	; 60
   184f4:	90 e0       	ldi	r25, 0x00	; 0
   184f6:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   184fa:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   184fe:	da c1       	rjmp	.+948    	; 0x188b4 <_Z13Run_Operationv+0x600>
   18500:	10 92 9b 0f 	sts	0x0F9B, r1	; 0x800f9b <_ZZ13Run_OperationvE12eeprom_timer>
   18504:	10 92 21 16 	sts	0x1621, r1	; 0x801621 <_sRuble_Parameters+0xbc>
   18508:	0e 94 5b 53 	call	0xa6b6	; 0xa6b6 <_Z20Schedules_Monitoringv>
   1850c:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18510:	88 23       	and	r24, r24
   18512:	69 f0       	breq	.+26     	; 0x1852e <_Z13Run_Operationv+0x27a>
   18514:	2c da       	rcall	.-2984   	; 0x1796e <_Z15Stop_Irrigationv>
   18516:	88 23       	and	r24, r24
   18518:	71 f0       	breq	.+28     	; 0x18536 <_Z13Run_Operationv+0x282>
   1851a:	6c ea       	ldi	r22, 0xAC	; 172
   1851c:	73 e4       	ldi	r23, 0x43	; 67
   1851e:	8f e6       	ldi	r24, 0x6F	; 111
   18520:	96 e1       	ldi	r25, 0x16	; 22
   18522:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18526:	8f e6       	ldi	r24, 0x6F	; 111
   18528:	96 e1       	ldi	r25, 0x16	; 22
   1852a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1852e:	83 e0       	ldi	r24, 0x03	; 3
   18530:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   18534:	bf c1       	rjmp	.+894    	; 0x188b4 <_Z13Run_Operationv+0x600>
   18536:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   1853a:	81 30       	cpi	r24, 0x01	; 1
   1853c:	51 f4       	brne	.+20     	; 0x18552 <_Z13Run_Operationv+0x29e>
   1853e:	69 e6       	ldi	r22, 0x69	; 105
   18540:	73 e4       	ldi	r23, 0x43	; 67
   18542:	8f e6       	ldi	r24, 0x6F	; 111
   18544:	96 e1       	ldi	r25, 0x16	; 22
   18546:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   1854a:	8f e6       	ldi	r24, 0x6F	; 111
   1854c:	96 e1       	ldi	r25, 0x16	; 22
   1854e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18552:	83 e0       	ldi	r24, 0x03	; 3
   18554:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   18558:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1855c:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   18560:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   18564:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   18568:	92 60       	ori	r25, 0x02	; 2
   1856a:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1856e:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   18572:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   18576:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   1857a:	9c c1       	rjmp	.+824    	; 0x188b4 <_Z13Run_Operationv+0x600>
   1857c:	80 91 9b 0f 	lds	r24, 0x0F9B	; 0x800f9b <_ZZ13Run_OperationvE12eeprom_timer>
   18580:	8f 5f       	subi	r24, 0xFF	; 255
   18582:	8b 3a       	cpi	r24, 0xAB	; 171
   18584:	18 f4       	brcc	.+6      	; 0x1858c <_Z13Run_Operationv+0x2d8>
   18586:	80 93 9b 0f 	sts	0x0F9B, r24	; 0x800f9b <_ZZ13Run_OperationvE12eeprom_timer>
   1858a:	06 c0       	rjmp	.+12     	; 0x18598 <_Z13Run_Operationv+0x2e4>
   1858c:	10 92 9b 0f 	sts	0x0F9B, r1	; 0x800f9b <_ZZ13Run_OperationvE12eeprom_timer>
   18590:	80 e2       	ldi	r24, 0x20	; 32
   18592:	9c e0       	ldi	r25, 0x0C	; 12
   18594:	0e 94 0d 84 	call	0x1081a	; 0x1081a <_ZN11EEPROMClass3putIjEERKT_iS3_.isra.4.constprop.40>
   18598:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   1859c:	81 11       	cpse	r24, r1
   1859e:	95 c0       	rjmp	.+298    	; 0x186ca <_Z13Run_Operationv+0x416>
   185a0:	00 91 7d 15 	lds	r16, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   185a4:	10 91 7e 15 	lds	r17, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   185a8:	c8 01       	movw	r24, r16
   185aa:	88 60       	ori	r24, 0x08	; 8
   185ac:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   185b0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   185b4:	80 e2       	ldi	r24, 0x20	; 32
   185b6:	9c e0       	ldi	r25, 0x0C	; 12
   185b8:	0e 94 9a ec 	call	0x1d934	; 0x1d934 <eeprom_read_byte>
   185bc:	89 83       	std	Y+1, r24	; 0x01
   185be:	81 e2       	ldi	r24, 0x21	; 33
   185c0:	9c e0       	ldi	r25, 0x0C	; 12
   185c2:	0e 94 9a ec 	call	0x1d934	; 0x1d934 <eeprom_read_byte>
   185c6:	8a 83       	std	Y+2, r24	; 0x02
   185c8:	89 81       	ldd	r24, Y+1	; 0x01
   185ca:	9a 81       	ldd	r25, Y+2	; 0x02
   185cc:	90 93 7c 15 	sts	0x157C, r25	; 0x80157c <_sRuble_Parameters+0x17>
   185d0:	80 93 7b 15 	sts	0x157B, r24	; 0x80157b <_sRuble_Parameters+0x16>
   185d4:	10 92 80 15 	sts	0x1580, r1	; 0x801580 <_sRuble_Parameters+0x1b>
   185d8:	10 92 7f 15 	sts	0x157F, r1	; 0x80157f <_sRuble_Parameters+0x1a>
   185dc:	88 e7       	ldi	r24, 0x78	; 120
   185de:	80 93 21 16 	sts	0x1621, r24	; 0x801621 <_sRuble_Parameters+0xbc>
   185e2:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   185e6:	81 11       	cpse	r24, r1
   185e8:	62 c0       	rjmp	.+196    	; 0x186ae <_Z13Run_Operationv+0x3fa>
   185ea:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   185ee:	81 11       	cpse	r24, r1
   185f0:	5e c0       	rjmp	.+188    	; 0x186ae <_Z13Run_Operationv+0x3fa>
   185f2:	80 91 0e 16 	lds	r24, 0x160E	; 0x80160e <_sRuble_Parameters+0xa9>
   185f6:	80 93 d5 15 	sts	0x15D5, r24	; 0x8015d5 <_sRuble_Parameters+0x70>
   185fa:	65 ed       	ldi	r22, 0xD5	; 213
   185fc:	75 e1       	ldi	r23, 0x15	; 21
   185fe:	8e e1       	ldi	r24, 0x1E	; 30
   18600:	9c e0       	ldi	r25, 0x0C	; 12
   18602:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18606:	6f dd       	rcall	.-1314   	; 0x180e6 <_Z16Start_Irrigationv>
   18608:	81 11       	cpse	r24, r1
   1860a:	2c c0       	rjmp	.+88     	; 0x18664 <_Z13Run_Operationv+0x3b0>
   1860c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18610:	81 30       	cpi	r24, 0x01	; 1
   18612:	51 f4       	brne	.+20     	; 0x18628 <_Z13Run_Operationv+0x374>
   18614:	61 e2       	ldi	r22, 0x21	; 33
   18616:	73 e4       	ldi	r23, 0x43	; 67
   18618:	8f e6       	ldi	r24, 0x6F	; 111
   1861a:	96 e1       	ldi	r25, 0x16	; 22
   1861c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18620:	8f e6       	ldi	r24, 0x6F	; 111
   18622:	96 e1       	ldi	r25, 0x16	; 22
   18624:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18628:	81 e0       	ldi	r24, 0x01	; 1
   1862a:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   1862e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18632:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18636:	84 60       	ori	r24, 0x04	; 4
   18638:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1863c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18640:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18644:	81 30       	cpi	r24, 0x01	; 1
   18646:	39 f4       	brne	.+14     	; 0x18656 <_Z13Run_Operationv+0x3a2>
   18648:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   1864c:	81 30       	cpi	r24, 0x01	; 1
   1864e:	19 f4       	brne	.+6      	; 0x18656 <_Z13Run_Operationv+0x3a2>
   18650:	80 ef       	ldi	r24, 0xF0	; 240
   18652:	90 e0       	ldi	r25, 0x00	; 0
   18654:	02 c0       	rjmp	.+4      	; 0x1865a <_Z13Run_Operationv+0x3a6>
   18656:	88 e5       	ldi	r24, 0x58	; 88
   18658:	92 e0       	ldi	r25, 0x02	; 2
   1865a:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   1865e:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   18662:	33 c0       	rjmp	.+102    	; 0x186ca <_Z13Run_Operationv+0x416>
   18664:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18668:	81 11       	cpse	r24, r1
   1866a:	2f c0       	rjmp	.+94     	; 0x186ca <_Z13Run_Operationv+0x416>
   1866c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18670:	81 30       	cpi	r24, 0x01	; 1
   18672:	51 f4       	brne	.+20     	; 0x18688 <_Z13Run_Operationv+0x3d4>
   18674:	69 ed       	ldi	r22, 0xD9	; 217
   18676:	72 e4       	ldi	r23, 0x42	; 66
   18678:	8f e6       	ldi	r24, 0x6F	; 111
   1867a:	96 e1       	ldi	r25, 0x16	; 22
   1867c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18680:	8f e6       	ldi	r24, 0x6F	; 111
   18682:	96 e1       	ldi	r25, 0x16	; 22
   18684:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18688:	88 e5       	ldi	r24, 0x58	; 88
   1868a:	92 e0       	ldi	r25, 0x02	; 2
   1868c:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   18690:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   18694:	81 e0       	ldi	r24, 0x01	; 1
   18696:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   1869a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1869e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   186a2:	84 60       	ori	r24, 0x04	; 4
   186a4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   186a8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   186ac:	0e c0       	rjmp	.+28     	; 0x186ca <_Z13Run_Operationv+0x416>
   186ae:	88 e5       	ldi	r24, 0x58	; 88
   186b0:	92 e0       	ldi	r25, 0x02	; 2
   186b2:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   186b6:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   186ba:	81 e0       	ldi	r24, 0x01	; 1
   186bc:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   186c0:	0c 60       	ori	r16, 0x0C	; 12
   186c2:	10 93 7e 15 	sts	0x157E, r17	; 0x80157e <_sRuble_Parameters+0x19>
   186c6:	00 93 7d 15 	sts	0x157D, r16	; 0x80157d <_sRuble_Parameters+0x18>
   186ca:	80 91 7b 15 	lds	r24, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   186ce:	90 91 7c 15 	lds	r25, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
   186d2:	89 2b       	or	r24, r25
   186d4:	a9 f0       	breq	.+42     	; 0x18700 <_Z13Run_Operationv+0x44c>
   186d6:	6e eb       	ldi	r22, 0xBE	; 190
   186d8:	72 e4       	ldi	r23, 0x42	; 66
   186da:	8f e6       	ldi	r24, 0x6F	; 111
   186dc:	96 e1       	ldi	r25, 0x16	; 22
   186de:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   186e2:	60 91 7b 15 	lds	r22, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   186e6:	70 91 7c 15 	lds	r23, 0x157C	; 0x80157c <_sRuble_Parameters+0x17>
   186ea:	4a e0       	ldi	r20, 0x0A	; 10
   186ec:	50 e0       	ldi	r21, 0x00	; 0
   186ee:	8f e6       	ldi	r24, 0x6F	; 111
   186f0:	96 e1       	ldi	r25, 0x16	; 22
   186f2:	0e 94 4e d1 	call	0x1a29c	; 0x1a29c <_ZN5Print7printlnEji>
   186f6:	8f e6       	ldi	r24, 0x6F	; 111
   186f8:	96 e1       	ldi	r25, 0x16	; 22
   186fa:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   186fe:	13 c0       	rjmp	.+38     	; 0x18726 <_Z13Run_Operationv+0x472>
   18700:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18704:	81 30       	cpi	r24, 0x01	; 1
   18706:	51 f4       	brne	.+20     	; 0x1871c <_Z13Run_Operationv+0x468>
   18708:	61 ea       	ldi	r22, 0xA1	; 161
   1870a:	72 e4       	ldi	r23, 0x42	; 66
   1870c:	8f e6       	ldi	r24, 0x6F	; 111
   1870e:	96 e1       	ldi	r25, 0x16	; 22
   18710:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18714:	8f e6       	ldi	r24, 0x6F	; 111
   18716:	96 e1       	ldi	r25, 0x16	; 22
   18718:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1871c:	28 d9       	rcall	.-3504   	; 0x1796e <_Z15Stop_Irrigationv>
   1871e:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   18722:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   18726:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
   1872a:	81 11       	cpse	r24, r1
   1872c:	09 c0       	rjmp	.+18     	; 0x18740 <_Z13Run_Operationv+0x48c>
   1872e:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   18732:	81 11       	cpse	r24, r1
   18734:	11 c0       	rjmp	.+34     	; 0x18758 <_Z13Run_Operationv+0x4a4>
   18736:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   1873a:	81 11       	cpse	r24, r1
   1873c:	0d c0       	rjmp	.+26     	; 0x18758 <_Z13Run_Operationv+0x4a4>
   1873e:	8a c0       	rjmp	.+276    	; 0x18854 <_Z13Run_Operationv+0x5a0>
   18740:	98 2f       	mov	r25, r24
   18742:	97 7f       	andi	r25, 0xF7	; 247
   18744:	91 30       	cpi	r25, 0x01	; 1
   18746:	89 f0       	breq	.+34     	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18748:	98 2f       	mov	r25, r24
   1874a:	9d 7f       	andi	r25, 0xFD	; 253
   1874c:	94 30       	cpi	r25, 0x04	; 4
   1874e:	69 f0       	breq	.+26     	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18750:	8c 30       	cpi	r24, 0x0C	; 12
   18752:	59 f0       	breq	.+22     	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18754:	8f 30       	cpi	r24, 0x0F	; 15
   18756:	49 f0       	breq	.+18     	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18758:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   1875c:	81 11       	cpse	r24, r1
   1875e:	05 c0       	rjmp	.+10     	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18760:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   18764:	88 23       	and	r24, r24
   18766:	09 f4       	brne	.+2      	; 0x1876a <_Z13Run_Operationv+0x4b6>
   18768:	49 c0       	rjmp	.+146    	; 0x187fc <_Z13Run_Operationv+0x548>
   1876a:	01 d9       	rcall	.-3582   	; 0x1796e <_Z15Stop_Irrigationv>
   1876c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18770:	81 30       	cpi	r24, 0x01	; 1
   18772:	51 f4       	brne	.+20     	; 0x18788 <_Z13Run_Operationv+0x4d4>
   18774:	6e e6       	ldi	r22, 0x6E	; 110
   18776:	72 e4       	ldi	r23, 0x42	; 66
   18778:	8f e6       	ldi	r24, 0x6F	; 111
   1877a:	96 e1       	ldi	r25, 0x16	; 22
   1877c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18780:	8f e6       	ldi	r24, 0x6F	; 111
   18782:	96 e1       	ldi	r25, 0x16	; 22
   18784:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18788:	90 91 f0 0f 	lds	r25, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   1878c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18790:	91 11       	cpse	r25, r1
   18792:	04 c0       	rjmp	.+8      	; 0x1879c <_Z13Run_Operationv+0x4e8>
   18794:	90 91 09 10 	lds	r25, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   18798:	99 23       	and	r25, r25
   1879a:	79 f0       	breq	.+30     	; 0x187ba <_Z13Run_Operationv+0x506>
   1879c:	81 30       	cpi	r24, 0x01	; 1
   1879e:	51 f4       	brne	.+20     	; 0x187b4 <_Z13Run_Operationv+0x500>
   187a0:	6b e3       	ldi	r22, 0x3B	; 59
   187a2:	72 e4       	ldi	r23, 0x42	; 66
   187a4:	8f e6       	ldi	r24, 0x6F	; 111
   187a6:	96 e1       	ldi	r25, 0x16	; 22
   187a8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   187ac:	8f e6       	ldi	r24, 0x6F	; 111
   187ae:	96 e1       	ldi	r25, 0x16	; 22
   187b0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   187b4:	8c e3       	ldi	r24, 0x3C	; 60
   187b6:	90 e0       	ldi	r25, 0x00	; 0
   187b8:	19 c0       	rjmp	.+50     	; 0x187ec <_Z13Run_Operationv+0x538>
   187ba:	81 30       	cpi	r24, 0x01	; 1
   187bc:	51 f4       	brne	.+20     	; 0x187d2 <_Z13Run_Operationv+0x51e>
   187be:	68 e0       	ldi	r22, 0x08	; 8
   187c0:	72 e4       	ldi	r23, 0x42	; 66
   187c2:	8f e6       	ldi	r24, 0x6F	; 111
   187c4:	96 e1       	ldi	r25, 0x16	; 22
   187c6:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   187ca:	8f e6       	ldi	r24, 0x6F	; 111
   187cc:	96 e1       	ldi	r25, 0x16	; 22
   187ce:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   187d2:	80 91 41 16 	lds	r24, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   187d6:	81 30       	cpi	r24, 0x01	; 1
   187d8:	39 f4       	brne	.+14     	; 0x187e8 <_Z13Run_Operationv+0x534>
   187da:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   187de:	81 30       	cpi	r24, 0x01	; 1
   187e0:	19 f4       	brne	.+6      	; 0x187e8 <_Z13Run_Operationv+0x534>
   187e2:	80 ef       	ldi	r24, 0xF0	; 240
   187e4:	90 e0       	ldi	r25, 0x00	; 0
   187e6:	02 c0       	rjmp	.+4      	; 0x187ec <_Z13Run_Operationv+0x538>
   187e8:	88 e5       	ldi	r24, 0x58	; 88
   187ea:	92 e0       	ldi	r25, 0x02	; 2
   187ec:	90 93 84 15 	sts	0x1584, r25	; 0x801584 <_sRuble_Parameters+0x1f>
   187f0:	80 93 83 15 	sts	0x1583, r24	; 0x801583 <_sRuble_Parameters+0x1e>
   187f4:	81 e0       	ldi	r24, 0x01	; 1
   187f6:	80 93 8d 15 	sts	0x158D, r24	; 0x80158d <_sRuble_Parameters+0x28>
   187fa:	2c c0       	rjmp	.+88     	; 0x18854 <_Z13Run_Operationv+0x5a0>
   187fc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18800:	81 30       	cpi	r24, 0x01	; 1
   18802:	51 f4       	brne	.+20     	; 0x18818 <_Z13Run_Operationv+0x564>
   18804:	65 ed       	ldi	r22, 0xD5	; 213
   18806:	71 e4       	ldi	r23, 0x41	; 65
   18808:	8f e6       	ldi	r24, 0x6F	; 111
   1880a:	96 e1       	ldi	r25, 0x16	; 22
   1880c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18810:	8f e6       	ldi	r24, 0x6F	; 111
   18812:	96 e1       	ldi	r25, 0x16	; 22
   18814:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18818:	aa d8       	rcall	.-3756   	; 0x1796e <_Z15Stop_Irrigationv>
   1881a:	80 91 f0 0f 	lds	r24, 0x0FF0	; 0x800ff0 <_sExtra_Plot+0x51>
   1881e:	88 23       	and	r24, r24
   18820:	21 f0       	breq	.+8      	; 0x1882a <_Z13Run_Operationv+0x576>
   18822:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   18826:	81 11       	cpse	r24, r1
   18828:	04 c0       	rjmp	.+8      	; 0x18832 <_Z13Run_Operationv+0x57e>
   1882a:	10 92 7c 15 	sts	0x157C, r1	; 0x80157c <_sRuble_Parameters+0x17>
   1882e:	10 92 7b 15 	sts	0x157B, r1	; 0x80157b <_sRuble_Parameters+0x16>
   18832:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   18836:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1883a:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   1883e:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   18842:	92 60       	ori	r25, 0x02	; 2
   18844:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   18848:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   1884c:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   18850:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   18854:	80 91 1d 16 	lds	r24, 0x161D	; 0x80161d <_sRuble_Parameters+0xb8>
   18858:	88 23       	and	r24, r24
   1885a:	61 f1       	breq	.+88     	; 0x188b4 <_Z13Run_Operationv+0x600>
   1885c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18860:	81 30       	cpi	r24, 0x01	; 1
   18862:	09 f0       	breq	.+2      	; 0x18866 <_Z13Run_Operationv+0x5b2>
   18864:	0d ce       	rjmp	.-998    	; 0x18480 <_Z13Run_Operationv+0x1cc>
   18866:	6b ea       	ldi	r22, 0xAB	; 171
   18868:	71 e4       	ldi	r23, 0x41	; 65
   1886a:	02 ce       	rjmp	.-1020   	; 0x18470 <_Z13Run_Operationv+0x1bc>
   1886c:	80 91 8d 15 	lds	r24, 0x158D	; 0x80158d <_sRuble_Parameters+0x28>
   18870:	83 30       	cpi	r24, 0x03	; 3
   18872:	c1 f0       	breq	.+48     	; 0x188a4 <_Z13Run_Operationv+0x5f0>
   18874:	18 f4       	brcc	.+6      	; 0x1887c <_Z13Run_Operationv+0x5c8>
   18876:	81 30       	cpi	r24, 0x01	; 1
   18878:	e8 f0       	brcs	.+58     	; 0x188b4 <_Z13Run_Operationv+0x600>
   1887a:	02 c0       	rjmp	.+4      	; 0x18880 <_Z13Run_Operationv+0x5cc>
   1887c:	84 30       	cpi	r24, 0x04	; 4
   1887e:	d1 f4       	brne	.+52     	; 0x188b4 <_Z13Run_Operationv+0x600>
   18880:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18884:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18888:	99 23       	and	r25, r25
   1888a:	31 f0       	breq	.+12     	; 0x18898 <_Z13Run_Operationv+0x5e4>
   1888c:	81 30       	cpi	r24, 0x01	; 1
   1888e:	09 f0       	breq	.+2      	; 0x18892 <_Z13Run_Operationv+0x5de>
   18890:	4e ce       	rjmp	.-868    	; 0x1852e <_Z13Run_Operationv+0x27a>
   18892:	64 e8       	ldi	r22, 0x84	; 132
   18894:	71 e4       	ldi	r23, 0x41	; 65
   18896:	43 ce       	rjmp	.-890    	; 0x1851e <_Z13Run_Operationv+0x26a>
   18898:	81 30       	cpi	r24, 0x01	; 1
   1889a:	09 f0       	breq	.+2      	; 0x1889e <_Z13Run_Operationv+0x5ea>
   1889c:	48 ce       	rjmp	.-880    	; 0x1852e <_Z13Run_Operationv+0x27a>
   1889e:	67 e6       	ldi	r22, 0x67	; 103
   188a0:	71 e4       	ldi	r23, 0x41	; 65
   188a2:	3d ce       	rjmp	.-902    	; 0x1851e <_Z13Run_Operationv+0x26a>
   188a4:	0f 90       	pop	r0
   188a6:	0f 90       	pop	r0
   188a8:	df 91       	pop	r29
   188aa:	cf 91       	pop	r28
   188ac:	1f 91       	pop	r17
   188ae:	0f 91       	pop	r16
   188b0:	0c 94 5b 53 	jmp	0xa6b6	; 0xa6b6 <_Z20Schedules_Monitoringv>
   188b4:	0f 90       	pop	r0
   188b6:	0f 90       	pop	r0
   188b8:	df 91       	pop	r29
   188ba:	cf 91       	pop	r28
   188bc:	1f 91       	pop	r17
   188be:	0f 91       	pop	r16
   188c0:	08 95       	ret

000188c2 <_Z26Start_Extra_Plot_Operationh>:
   188c2:	1f 93       	push	r17
   188c4:	cf 93       	push	r28
   188c6:	df 93       	push	r29
   188c8:	c8 2f       	mov	r28, r24
   188ca:	69 e9       	ldi	r22, 0x99	; 153
   188cc:	7f e2       	ldi	r23, 0x2F	; 47
   188ce:	8f e6       	ldi	r24, 0x6F	; 111
   188d0:	96 e1       	ldi	r25, 0x16	; 22
   188d2:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   188d6:	4a e0       	ldi	r20, 0x0A	; 10
   188d8:	50 e0       	ldi	r21, 0x00	; 0
   188da:	6c 2f       	mov	r22, r28
   188dc:	8f e6       	ldi	r24, 0x6F	; 111
   188de:	96 e1       	ldi	r25, 0x16	; 22
   188e0:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   188e4:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   188e8:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   188ec:	84 60       	ori	r24, 0x04	; 4
   188ee:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   188f2:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   188f6:	1d ef       	ldi	r17, 0xFD	; 253
   188f8:	1c 0f       	add	r17, r28
   188fa:	12 30       	cpi	r17, 0x02	; 2
   188fc:	10 f4       	brcc	.+4      	; 0x18902 <_Z26Start_Extra_Plot_Operationh+0x40>
   188fe:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
   18902:	6c 2f       	mov	r22, r28
   18904:	81 e0       	ldi	r24, 0x01	; 1
   18906:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   1890a:	d8 2f       	mov	r29, r24
   1890c:	88 23       	and	r24, r24
   1890e:	09 f4       	brne	.+2      	; 0x18912 <_Z26Start_Extra_Plot_Operationh+0x50>
   18910:	81 c0       	rjmp	.+258    	; 0x18a14 <_Z26Start_Extra_Plot_Operationh+0x152>
   18912:	12 30       	cpi	r17, 0x02	; 2
   18914:	08 f0       	brcs	.+2      	; 0x18918 <_Z26Start_Extra_Plot_Operationh+0x56>
   18916:	4c c0       	rjmp	.+152    	; 0x189b0 <_Z26Start_Extra_Plot_Operationh+0xee>
   18918:	c4 30       	cpi	r28, 0x04	; 4
   1891a:	19 f0       	breq	.+6      	; 0x18922 <_Z26Start_Extra_Plot_Operationh+0x60>
   1891c:	82 e0       	ldi	r24, 0x02	; 2
   1891e:	0e 94 3d 24 	call	0x487a	; 0x487a <_Z22Hard_Coded_Flush_Valveh>
   18922:	10 92 80 15 	sts	0x1580, r1	; 0x801580 <_sRuble_Parameters+0x1b>
   18926:	10 92 7f 15 	sts	0x157F, r1	; 0x80157f <_sRuble_Parameters+0x1a>
   1892a:	10 92 63 15 	sts	0x1563, r1	; 0x801563 <_sPump_Parameter+0x8>
   1892e:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   18932:	81 11       	cpse	r24, r1
   18934:	13 c0       	rjmp	.+38     	; 0x1895c <_Z26Start_Extra_Plot_Operationh+0x9a>
   18936:	8a e0       	ldi	r24, 0x0A	; 10
   18938:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   1893c:	89 2b       	or	r24, r25
   1893e:	21 f0       	breq	.+8      	; 0x18948 <_Z26Start_Extra_Plot_Operationh+0x86>
   18940:	60 e0       	ldi	r22, 0x00	; 0
   18942:	8a e0       	ldi	r24, 0x0A	; 10
   18944:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   18948:	8b e0       	ldi	r24, 0x0B	; 11
   1894a:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   1894e:	89 2b       	or	r24, r25
   18950:	79 f1       	breq	.+94     	; 0x189b0 <_Z26Start_Extra_Plot_Operationh+0xee>
   18952:	60 e0       	ldi	r22, 0x00	; 0
   18954:	8b e0       	ldi	r24, 0x0B	; 11
   18956:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1895a:	2a c0       	rjmp	.+84     	; 0x189b0 <_Z26Start_Extra_Plot_Operationh+0xee>
   1895c:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18960:	81 30       	cpi	r24, 0x01	; 1
   18962:	51 f4       	brne	.+20     	; 0x18978 <_Z26Start_Extra_Plot_Operationh+0xb6>
   18964:	64 e7       	ldi	r22, 0x74	; 116
   18966:	7f e2       	ldi	r23, 0x2F	; 47
   18968:	8f e6       	ldi	r24, 0x6F	; 111
   1896a:	96 e1       	ldi	r25, 0x16	; 22
   1896c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18970:	8f e6       	ldi	r24, 0x6F	; 111
   18972:	96 e1       	ldi	r25, 0x16	; 22
   18974:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18978:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   1897c:	62 50       	subi	r22, 0x02	; 2
   1897e:	82 e0       	ldi	r24, 0x02	; 2
   18980:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18984:	88 23       	and	r24, r24
   18986:	51 f0       	breq	.+20     	; 0x1899c <_Z26Start_Extra_Plot_Operationh+0xda>
   18988:	81 e0       	ldi	r24, 0x01	; 1
   1898a:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
   1898e:	65 e2       	ldi	r22, 0x25	; 37
   18990:	76 e1       	ldi	r23, 0x16	; 22
   18992:	85 e3       	ldi	r24, 0x35	; 53
   18994:	9c e0       	ldi	r25, 0x0C	; 12
   18996:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   1899a:	0a c0       	rjmp	.+20     	; 0x189b0 <_Z26Start_Extra_Plot_Operationh+0xee>
   1899c:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   189a0:	65 e2       	ldi	r22, 0x25	; 37
   189a2:	76 e1       	ldi	r23, 0x16	; 22
   189a4:	85 e3       	ldi	r24, 0x35	; 53
   189a6:	9c e0       	ldi	r25, 0x0C	; 12
   189a8:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   189ac:	d0 e0       	ldi	r29, 0x00	; 0
   189ae:	40 c0       	rjmp	.+128    	; 0x18a30 <_Z26Start_Extra_Plot_Operationh+0x16e>
   189b0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   189b4:	81 30       	cpi	r24, 0x01	; 1
   189b6:	51 f4       	brne	.+20     	; 0x189cc <_Z26Start_Extra_Plot_Operationh+0x10a>
   189b8:	66 e6       	ldi	r22, 0x66	; 102
   189ba:	7f e2       	ldi	r23, 0x2F	; 47
   189bc:	8f e6       	ldi	r24, 0x6F	; 111
   189be:	96 e1       	ldi	r25, 0x16	; 22
   189c0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   189c4:	8f e6       	ldi	r24, 0x6F	; 111
   189c6:	96 e1       	ldi	r25, 0x16	; 22
   189c8:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   189cc:	8b e1       	ldi	r24, 0x1B	; 27
   189ce:	c8 9f       	mul	r28, r24
   189d0:	f0 01       	movw	r30, r0
   189d2:	11 24       	eor	r1, r1
   189d4:	e1 56       	subi	r30, 0x61	; 97
   189d6:	f0 4f       	sbci	r31, 0xF0	; 240
   189d8:	81 e0       	ldi	r24, 0x01	; 1
   189da:	80 83       	st	Z, r24
   189dc:	23 85       	ldd	r18, Z+11	; 0x0b
   189de:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   189e2:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   189e6:	21 30       	cpi	r18, 0x01	; 1
   189e8:	51 f4       	brne	.+20     	; 0x189fe <_Z26Start_Extra_Plot_Operationh+0x13c>
   189ea:	90 61       	ori	r25, 0x10	; 16
   189ec:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   189f0:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   189f4:	12 86       	std	Z+10, r1	; 0x0a
   189f6:	c0 93 1c 16 	sts	0x161C, r28	; 0x80161c <_sRuble_Parameters+0xb7>
   189fa:	22 8f       	std	Z+26, r18	; 0x1a
   189fc:	19 c0       	rjmp	.+50     	; 0x18a30 <_Z26Start_Extra_Plot_Operationh+0x16e>
   189fe:	90 62       	ori	r25, 0x20	; 32
   18a00:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18a04:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18a08:	13 86       	std	Z+11, r1	; 0x0b
   18a0a:	c0 93 1b 16 	sts	0x161B, r28	; 0x80161b <_sRuble_Parameters+0xb6>
   18a0e:	82 e0       	ldi	r24, 0x02	; 2
   18a10:	82 8f       	std	Z+26, r24	; 0x1a
   18a12:	0e c0       	rjmp	.+28     	; 0x18a30 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18a14:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18a18:	81 30       	cpi	r24, 0x01	; 1
   18a1a:	51 f4       	brne	.+20     	; 0x18a30 <_Z26Start_Extra_Plot_Operationh+0x16e>
   18a1c:	6f e4       	ldi	r22, 0x4F	; 79
   18a1e:	7f e2       	ldi	r23, 0x2F	; 47
   18a20:	8f e6       	ldi	r24, 0x6F	; 111
   18a22:	96 e1       	ldi	r25, 0x16	; 22
   18a24:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a28:	8f e6       	ldi	r24, 0x6F	; 111
   18a2a:	96 e1       	ldi	r25, 0x16	; 22
   18a2c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18a30:	8d 2f       	mov	r24, r29
   18a32:	df 91       	pop	r29
   18a34:	cf 91       	pop	r28
   18a36:	1f 91       	pop	r17
   18a38:	08 95       	ret

00018a3a <_Z25Stop_Extra_Plot_Operationh>:
   18a3a:	0f 93       	push	r16
   18a3c:	1f 93       	push	r17
   18a3e:	cf 93       	push	r28
   18a40:	df 93       	push	r29
   18a42:	c8 2f       	mov	r28, r24
   18a44:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18a48:	81 30       	cpi	r24, 0x01	; 1
   18a4a:	51 f4       	brne	.+20     	; 0x18a60 <_Z25Stop_Extra_Plot_Operationh+0x26>
   18a4c:	6d e3       	ldi	r22, 0x3D	; 61
   18a4e:	7f e2       	ldi	r23, 0x2F	; 47
   18a50:	8f e6       	ldi	r24, 0x6F	; 111
   18a52:	96 e1       	ldi	r25, 0x16	; 22
   18a54:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18a58:	8f e6       	ldi	r24, 0x6F	; 111
   18a5a:	96 e1       	ldi	r25, 0x16	; 22
   18a5c:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18a60:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18a64:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18a68:	84 60       	ori	r24, 0x04	; 4
   18a6a:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18a6e:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18a72:	0c 2f       	mov	r16, r28
   18a74:	10 e0       	ldi	r17, 0x00	; 0
   18a76:	8b e1       	ldi	r24, 0x1B	; 27
   18a78:	c8 9f       	mul	r28, r24
   18a7a:	f0 01       	movw	r30, r0
   18a7c:	11 24       	eor	r1, r1
   18a7e:	e1 56       	subi	r30, 0x61	; 97
   18a80:	f0 4f       	sbci	r31, 0xF0	; 240
   18a82:	10 82       	st	Z, r1
   18a84:	8d ef       	ldi	r24, 0xFD	; 253
   18a86:	8c 0f       	add	r24, r28
   18a88:	82 30       	cpi	r24, 0x02	; 2
   18a8a:	20 f4       	brcc	.+8      	; 0x18a94 <_Z25Stop_Extra_Plot_Operationh+0x5a>
   18a8c:	90 91 8c 15 	lds	r25, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   18a90:	93 30       	cpi	r25, 0x03	; 3
   18a92:	a9 f4       	brne	.+42     	; 0x18abe <_Z25Stop_Extra_Plot_Operationh+0x84>
   18a94:	90 91 63 15 	lds	r25, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
   18a98:	99 23       	and	r25, r25
   18a9a:	11 f0       	breq	.+4      	; 0x18aa0 <_Z25Stop_Extra_Plot_Operationh+0x66>
   18a9c:	82 30       	cpi	r24, 0x02	; 2
   18a9e:	78 f0       	brcs	.+30     	; 0x18abe <_Z25Stop_Extra_Plot_Operationh+0x84>
   18aa0:	90 91 8c 15 	lds	r25, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   18aa4:	93 30       	cpi	r25, 0x03	; 3
   18aa6:	31 f4       	brne	.+12     	; 0x18ab4 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18aa8:	90 91 d5 15 	lds	r25, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18aac:	91 11       	cpse	r25, r1
   18aae:	02 c0       	rjmp	.+4      	; 0x18ab4 <_Z25Stop_Extra_Plot_Operationh+0x7a>
   18ab0:	82 30       	cpi	r24, 0x02	; 2
   18ab2:	28 f0       	brcs	.+10     	; 0x18abe <_Z25Stop_Extra_Plot_Operationh+0x84>
   18ab4:	80 91 19 16 	lds	r24, 0x1619	; 0x801619 <_sRuble_Parameters+0xb4>
   18ab8:	81 30       	cpi	r24, 0x01	; 1
   18aba:	09 f0       	breq	.+2      	; 0x18abe <_Z25Stop_Extra_Plot_Operationh+0x84>
   18abc:	aa c0       	rjmp	.+340    	; 0x18c12 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18abe:	83 e0       	ldi	r24, 0x03	; 3
   18ac0:	0e 94 3d 24 	call	0x487a	; 0x487a <_Z22Hard_Coded_Flush_Valveh>
   18ac4:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18ac8:	81 11       	cpse	r24, r1
   18aca:	a3 c0       	rjmp	.+326    	; 0x18c12 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18acc:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   18ad0:	81 11       	cpse	r24, r1
   18ad2:	14 c0       	rjmp	.+40     	; 0x18afc <_Z25Stop_Extra_Plot_Operationh+0xc2>
   18ad4:	8a e0       	ldi	r24, 0x0A	; 10
   18ad6:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18ada:	01 97       	sbiw	r24, 0x01	; 1
   18adc:	21 f0       	breq	.+8      	; 0x18ae6 <_Z25Stop_Extra_Plot_Operationh+0xac>
   18ade:	61 e0       	ldi	r22, 0x01	; 1
   18ae0:	8a e0       	ldi	r24, 0x0A	; 10
   18ae2:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   18ae6:	8b e0       	ldi	r24, 0x0B	; 11
   18ae8:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18aec:	01 97       	sbiw	r24, 0x01	; 1
   18aee:	09 f4       	brne	.+2      	; 0x18af2 <_Z25Stop_Extra_Plot_Operationh+0xb8>
   18af0:	90 c0       	rjmp	.+288    	; 0x18c12 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18af2:	61 e0       	ldi	r22, 0x01	; 1
   18af4:	8b e0       	ldi	r24, 0x0B	; 11
   18af6:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   18afa:	8b c0       	rjmp	.+278    	; 0x18c12 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18afc:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18b00:	81 30       	cpi	r24, 0x01	; 1
   18b02:	51 f4       	brne	.+20     	; 0x18b18 <_Z25Stop_Extra_Plot_Operationh+0xde>
   18b04:	67 e1       	ldi	r22, 0x17	; 23
   18b06:	7f e2       	ldi	r23, 0x2F	; 47
   18b08:	8f e6       	ldi	r24, 0x6F	; 111
   18b0a:	96 e1       	ldi	r25, 0x16	; 22
   18b0c:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b10:	8f e6       	ldi	r24, 0x6F	; 111
   18b12:	96 e1       	ldi	r25, 0x16	; 22
   18b14:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18b18:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18b1c:	62 50       	subi	r22, 0x02	; 2
   18b1e:	84 e0       	ldi	r24, 0x04	; 4
   18b20:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18b24:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18b28:	88 23       	and	r24, r24
   18b2a:	b9 f0       	breq	.+46     	; 0x18b5a <_Z25Stop_Extra_Plot_Operationh+0x120>
   18b2c:	91 30       	cpi	r25, 0x01	; 1
   18b2e:	51 f4       	brne	.+20     	; 0x18b44 <_Z25Stop_Extra_Plot_Operationh+0x10a>
   18b30:	67 ef       	ldi	r22, 0xF7	; 247
   18b32:	7e e2       	ldi	r23, 0x2E	; 46
   18b34:	8f e6       	ldi	r24, 0x6F	; 111
   18b36:	96 e1       	ldi	r25, 0x16	; 22
   18b38:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b3c:	8f e6       	ldi	r24, 0x6F	; 111
   18b3e:	96 e1       	ldi	r25, 0x16	; 22
   18b40:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18b44:	10 92 35 16 	sts	0x1635, r1	; 0x801635 <_sRuble_Parameters+0xd0>
   18b48:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   18b4c:	65 e2       	ldi	r22, 0x25	; 37
   18b4e:	76 e1       	ldi	r23, 0x16	; 22
   18b50:	85 e3       	ldi	r24, 0x35	; 53
   18b52:	9c e0       	ldi	r25, 0x0C	; 12
   18b54:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18b58:	5c c0       	rjmp	.+184    	; 0x18c12 <_Z25Stop_Extra_Plot_Operationh+0x1d8>
   18b5a:	91 30       	cpi	r25, 0x01	; 1
   18b5c:	51 f4       	brne	.+20     	; 0x18b72 <_Z25Stop_Extra_Plot_Operationh+0x138>
   18b5e:	6f ec       	ldi	r22, 0xCF	; 207
   18b60:	7e e2       	ldi	r23, 0x2E	; 46
   18b62:	8f e6       	ldi	r24, 0x6F	; 111
   18b64:	96 e1       	ldi	r25, 0x16	; 22
   18b66:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18b6a:	8f e6       	ldi	r24, 0x6F	; 111
   18b6c:	96 e1       	ldi	r25, 0x16	; 22
   18b6e:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18b72:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18b76:	81 11       	cpse	r24, r1
   18b78:	0c c0       	rjmp	.+24     	; 0x18b92 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18b7a:	80 91 24 10 	lds	r24, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
   18b7e:	81 30       	cpi	r24, 0x01	; 1
   18b80:	41 f0       	breq	.+16     	; 0x18b92 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18b82:	80 91 09 10 	lds	r24, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   18b86:	81 30       	cpi	r24, 0x01	; 1
   18b88:	21 f0       	breq	.+8      	; 0x18b92 <_Z25Stop_Extra_Plot_Operationh+0x158>
   18b8a:	81 e0       	ldi	r24, 0x01	; 1
   18b8c:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
   18b90:	02 c0       	rjmp	.+4      	; 0x18b96 <_Z25Stop_Extra_Plot_Operationh+0x15c>
   18b92:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   18b96:	65 e2       	ldi	r22, 0x25	; 37
   18b98:	76 e1       	ldi	r23, 0x16	; 22
   18b9a:	85 e3       	ldi	r24, 0x35	; 53
   18b9c:	9c e0       	ldi	r25, 0x0C	; 12
   18b9e:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18ba2:	65 e2       	ldi	r22, 0x25	; 37
   18ba4:	76 e1       	ldi	r23, 0x16	; 22
   18ba6:	85 e3       	ldi	r24, 0x35	; 53
   18ba8:	9c e0       	ldi	r25, 0x0C	; 12
   18baa:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18bae:	81 e0       	ldi	r24, 0x01	; 1
   18bb0:	80 93 35 16 	sts	0x1635, r24	; 0x801635 <_sRuble_Parameters+0xd0>
   18bb4:	8b e1       	ldi	r24, 0x1B	; 27
   18bb6:	80 9f       	mul	r24, r16
   18bb8:	f0 01       	movw	r30, r0
   18bba:	81 9f       	mul	r24, r17
   18bbc:	f0 0d       	add	r31, r0
   18bbe:	11 24       	eor	r1, r1
   18bc0:	e1 56       	subi	r30, 0x61	; 97
   18bc2:	f0 4f       	sbci	r31, 0xF0	; 240
   18bc4:	23 85       	ldd	r18, Z+11	; 0x0b
   18bc6:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18bca:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18bce:	21 30       	cpi	r18, 0x01	; 1
   18bd0:	51 f4       	brne	.+20     	; 0x18be6 <_Z25Stop_Extra_Plot_Operationh+0x1ac>
   18bd2:	90 61       	ori	r25, 0x10	; 16
   18bd4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18bd8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18bdc:	13 86       	std	Z+11, r1	; 0x0b
   18bde:	c0 93 1c 16 	sts	0x161C, r28	; 0x80161c <_sRuble_Parameters+0xb7>
   18be2:	22 8f       	std	Z+26, r18	; 0x1a
   18be4:	0b c0       	rjmp	.+22     	; 0x18bfc <_Z25Stop_Extra_Plot_Operationh+0x1c2>
   18be6:	90 62       	ori	r25, 0x20	; 32
   18be8:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18bec:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18bf0:	12 86       	std	Z+10, r1	; 0x0a
   18bf2:	c0 93 1b 16 	sts	0x161B, r28	; 0x80161b <_sRuble_Parameters+0xb6>
   18bf6:	13 86       	std	Z+11, r1	; 0x0b
   18bf8:	82 e0       	ldi	r24, 0x02	; 2
   18bfa:	82 8f       	std	Z+26, r24	; 0x1a
   18bfc:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18c00:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18c04:	84 60       	ori	r24, 0x04	; 4
   18c06:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18c0a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18c0e:	d1 e0       	ldi	r29, 0x01	; 1
   18c10:	51 c0       	rjmp	.+162    	; 0x18cb4 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18c12:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18c16:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18c1a:	84 60       	ori	r24, 0x04	; 4
   18c1c:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18c20:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18c24:	6c 2f       	mov	r22, r28
   18c26:	80 e0       	ldi	r24, 0x00	; 0
   18c28:	0e 94 d2 b5 	call	0x16ba4	; 0x16ba4 <_Z33Extra_Plot_Valve_Grouping_Handlerhh>
   18c2c:	d8 2f       	mov	r29, r24
   18c2e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18c32:	dd 23       	and	r29, r29
   18c34:	99 f1       	breq	.+102    	; 0x18c9c <_Z25Stop_Extra_Plot_Operationh+0x262>
   18c36:	81 30       	cpi	r24, 0x01	; 1
   18c38:	51 f4       	brne	.+20     	; 0x18c4e <_Z25Stop_Extra_Plot_Operationh+0x214>
   18c3a:	6e eb       	ldi	r22, 0xBE	; 190
   18c3c:	7e e2       	ldi	r23, 0x2E	; 46
   18c3e:	8f e6       	ldi	r24, 0x6F	; 111
   18c40:	96 e1       	ldi	r25, 0x16	; 22
   18c42:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18c46:	8f e6       	ldi	r24, 0x6F	; 111
   18c48:	96 e1       	ldi	r25, 0x16	; 22
   18c4a:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18c4e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18c52:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18c56:	2b e1       	ldi	r18, 0x1B	; 27
   18c58:	20 9f       	mul	r18, r16
   18c5a:	f0 01       	movw	r30, r0
   18c5c:	21 9f       	mul	r18, r17
   18c5e:	f0 0d       	add	r31, r0
   18c60:	11 24       	eor	r1, r1
   18c62:	e1 56       	subi	r30, 0x61	; 97
   18c64:	f0 4f       	sbci	r31, 0xF0	; 240
   18c66:	23 85       	ldd	r18, Z+11	; 0x0b
   18c68:	21 30       	cpi	r18, 0x01	; 1
   18c6a:	59 f4       	brne	.+22     	; 0x18c82 <_Z25Stop_Extra_Plot_Operationh+0x248>
   18c6c:	84 60       	ori	r24, 0x04	; 4
   18c6e:	90 61       	ori	r25, 0x10	; 16
   18c70:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18c74:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18c78:	13 86       	std	Z+11, r1	; 0x0b
   18c7a:	c0 93 1c 16 	sts	0x161C, r28	; 0x80161c <_sRuble_Parameters+0xb7>
   18c7e:	22 8f       	std	Z+26, r18	; 0x1a
   18c80:	19 c0       	rjmp	.+50     	; 0x18cb4 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18c82:	84 60       	ori	r24, 0x04	; 4
   18c84:	90 62       	ori	r25, 0x20	; 32
   18c86:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18c8a:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18c8e:	12 86       	std	Z+10, r1	; 0x0a
   18c90:	c0 93 1b 16 	sts	0x161B, r28	; 0x80161b <_sRuble_Parameters+0xb6>
   18c94:	13 86       	std	Z+11, r1	; 0x0b
   18c96:	82 e0       	ldi	r24, 0x02	; 2
   18c98:	82 8f       	std	Z+26, r24	; 0x1a
   18c9a:	0c c0       	rjmp	.+24     	; 0x18cb4 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18c9c:	81 30       	cpi	r24, 0x01	; 1
   18c9e:	51 f4       	brne	.+20     	; 0x18cb4 <_Z25Stop_Extra_Plot_Operationh+0x27a>
   18ca0:	65 ea       	ldi	r22, 0xA5	; 165
   18ca2:	7e e2       	ldi	r23, 0x2E	; 46
   18ca4:	8f e6       	ldi	r24, 0x6F	; 111
   18ca6:	96 e1       	ldi	r25, 0x16	; 22
   18ca8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18cac:	8f e6       	ldi	r24, 0x6F	; 111
   18cae:	96 e1       	ldi	r25, 0x16	; 22
   18cb0:	0e 94 b8 ce 	call	0x19d70	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18cb4:	8d 2f       	mov	r24, r29
   18cb6:	df 91       	pop	r29
   18cb8:	cf 91       	pop	r28
   18cba:	1f 91       	pop	r17
   18cbc:	0f 91       	pop	r16
   18cbe:	08 95       	ret

00018cc0 <_Z24Run_Extra_Plot_Operationv>:
   18cc0:	cf 92       	push	r12
   18cc2:	df 92       	push	r13
   18cc4:	ef 92       	push	r14
   18cc6:	ff 92       	push	r15
   18cc8:	1f 93       	push	r17
   18cca:	cf 93       	push	r28
   18ccc:	df 93       	push	r29
   18cce:	8f e9       	ldi	r24, 0x9F	; 159
   18cd0:	e8 2e       	mov	r14, r24
   18cd2:	8f e0       	ldi	r24, 0x0F	; 15
   18cd4:	f8 2e       	mov	r15, r24
   18cd6:	99 e8       	ldi	r25, 0x89	; 137
   18cd8:	c9 2e       	mov	r12, r25
   18cda:	9f e0       	ldi	r25, 0x0F	; 15
   18cdc:	d9 2e       	mov	r13, r25
   18cde:	c0 e0       	ldi	r28, 0x00	; 0
   18ce0:	d0 e0       	ldi	r29, 0x00	; 0
   18ce2:	1c 2f       	mov	r17, r28
   18ce4:	f7 01       	movw	r30, r14
   18ce6:	81 81       	ldd	r24, Z+1	; 0x01
   18ce8:	81 50       	subi	r24, 0x01	; 1
   18cea:	82 37       	cpi	r24, 0x72	; 114
   18cec:	08 f0       	brcs	.+2      	; 0x18cf0 <_Z24Run_Extra_Plot_Operationv+0x30>
   18cee:	8e c0       	rjmp	.+284    	; 0x18e0c <_Z24Run_Extra_Plot_Operationv+0x14c>
   18cf0:	82 81       	ldd	r24, Z+2	; 0x02
   18cf2:	82 30       	cpi	r24, 0x02	; 2
   18cf4:	19 f0       	breq	.+6      	; 0x18cfc <_Z24Run_Extra_Plot_Operationv+0x3c>
   18cf6:	83 30       	cpi	r24, 0x03	; 3
   18cf8:	21 f1       	breq	.+72     	; 0x18d42 <_Z24Run_Extra_Plot_Operationv+0x82>
   18cfa:	88 c0       	rjmp	.+272    	; 0x18e0c <_Z24Run_Extra_Plot_Operationv+0x14c>
   18cfc:	8b e1       	ldi	r24, 0x1B	; 27
   18cfe:	8c 9f       	mul	r24, r28
   18d00:	f0 01       	movw	r30, r0
   18d02:	8d 9f       	mul	r24, r29
   18d04:	f0 0d       	add	r31, r0
   18d06:	11 24       	eor	r1, r1
   18d08:	e1 56       	subi	r30, 0x61	; 97
   18d0a:	f0 4f       	sbci	r31, 0xF0	; 240
   18d0c:	83 81       	ldd	r24, Z+3	; 0x03
   18d0e:	94 81       	ldd	r25, Z+4	; 0x04
   18d10:	89 2b       	or	r24, r25
   18d12:	41 f4       	brne	.+16     	; 0x18d24 <_Z24Run_Extra_Plot_Operationv+0x64>
   18d14:	82 85       	ldd	r24, Z+10	; 0x0a
   18d16:	81 11       	cpse	r24, r1
   18d18:	05 c0       	rjmp	.+10     	; 0x18d24 <_Z24Run_Extra_Plot_Operationv+0x64>
   18d1a:	81 e0       	ldi	r24, 0x01	; 1
   18d1c:	82 83       	std	Z+2, r24	; 0x02
   18d1e:	14 82       	std	Z+4, r1	; 0x04
   18d20:	13 82       	std	Z+3, r1	; 0x03
   18d22:	44 c0       	rjmp	.+136    	; 0x18dac <_Z24Run_Extra_Plot_Operationv+0xec>
   18d24:	81 2f       	mov	r24, r17
   18d26:	cd dd       	rcall	.-1126   	; 0x188c2 <_Z26Start_Extra_Plot_Operationh>
   18d28:	88 23       	and	r24, r24
   18d2a:	d1 f0       	breq	.+52     	; 0x18d60 <_Z24Run_Extra_Plot_Operationv+0xa0>
   18d2c:	8b e1       	ldi	r24, 0x1B	; 27
   18d2e:	8c 9f       	mul	r24, r28
   18d30:	f0 01       	movw	r30, r0
   18d32:	8d 9f       	mul	r24, r29
   18d34:	f0 0d       	add	r31, r0
   18d36:	11 24       	eor	r1, r1
   18d38:	e1 56       	subi	r30, 0x61	; 97
   18d3a:	f0 4f       	sbci	r31, 0xF0	; 240
   18d3c:	83 e0       	ldi	r24, 0x03	; 3
   18d3e:	82 83       	std	Z+2, r24	; 0x02
   18d40:	70 c0       	rjmp	.+224    	; 0x18e22 <_Z24Run_Extra_Plot_Operationv+0x162>
   18d42:	f7 01       	movw	r30, r14
   18d44:	83 81       	ldd	r24, Z+3	; 0x03
   18d46:	94 81       	ldd	r25, Z+4	; 0x04
   18d48:	00 97       	sbiw	r24, 0x00	; 0
   18d4a:	19 f1       	breq	.+70     	; 0x18d92 <_Z24Run_Extra_Plot_Operationv+0xd2>
   18d4c:	20 91 8c 15 	lds	r18, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   18d50:	22 30       	cpi	r18, 0x02	; 2
   18d52:	71 f5       	brne	.+92     	; 0x18db0 <_Z24Run_Extra_Plot_Operationv+0xf0>
   18d54:	18 30       	cpi	r17, 0x08	; 8
   18d56:	09 f4       	brne	.+2      	; 0x18d5a <_Z24Run_Extra_Plot_Operationv+0x9a>
   18d58:	64 c0       	rjmp	.+200    	; 0x18e22 <_Z24Run_Extra_Plot_Operationv+0x162>
   18d5a:	14 30       	cpi	r17, 0x04	; 4
   18d5c:	09 f4       	brne	.+2      	; 0x18d60 <_Z24Run_Extra_Plot_Operationv+0xa0>
   18d5e:	61 c0       	rjmp	.+194    	; 0x18e22 <_Z24Run_Extra_Plot_Operationv+0x162>
   18d60:	8b e1       	ldi	r24, 0x1B	; 27
   18d62:	8c 9f       	mul	r24, r28
   18d64:	f0 01       	movw	r30, r0
   18d66:	8d 9f       	mul	r24, r29
   18d68:	f0 0d       	add	r31, r0
   18d6a:	11 24       	eor	r1, r1
   18d6c:	e1 56       	subi	r30, 0x61	; 97
   18d6e:	f0 4f       	sbci	r31, 0xF0	; 240
   18d70:	81 e0       	ldi	r24, 0x01	; 1
   18d72:	82 83       	std	Z+2, r24	; 0x02
   18d74:	14 82       	std	Z+4, r1	; 0x04
   18d76:	13 82       	std	Z+3, r1	; 0x03
   18d78:	81 2f       	mov	r24, r17
   18d7a:	5f de       	rcall	.-834    	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
   18d7c:	81 e0       	ldi	r24, 0x01	; 1
   18d7e:	81 0f       	add	r24, r17
   18d80:	df 91       	pop	r29
   18d82:	cf 91       	pop	r28
   18d84:	1f 91       	pop	r17
   18d86:	ff 90       	pop	r15
   18d88:	ef 90       	pop	r14
   18d8a:	df 90       	pop	r13
   18d8c:	cf 90       	pop	r12
   18d8e:	0c 94 34 78 	jmp	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   18d92:	22 85       	ldd	r18, Z+10	; 0x0a
   18d94:	21 11       	cpse	r18, r1
   18d96:	da cf       	rjmp	.-76     	; 0x18d4c <_Z24Run_Extra_Plot_Operationv+0x8c>
   18d98:	8b e1       	ldi	r24, 0x1B	; 27
   18d9a:	8c 9f       	mul	r24, r28
   18d9c:	f0 01       	movw	r30, r0
   18d9e:	8d 9f       	mul	r24, r29
   18da0:	f0 0d       	add	r31, r0
   18da2:	11 24       	eor	r1, r1
   18da4:	e1 56       	subi	r30, 0x61	; 97
   18da6:	f0 4f       	sbci	r31, 0xF0	; 240
   18da8:	81 e0       	ldi	r24, 0x01	; 1
   18daa:	82 83       	std	Z+2, r24	; 0x02
   18dac:	8c 2f       	mov	r24, r28
   18dae:	e5 cf       	rjmp	.-54     	; 0x18d7a <_Z24Run_Extra_Plot_Operationv+0xba>
   18db0:	89 2b       	or	r24, r25
   18db2:	69 f0       	breq	.+26     	; 0x18dce <_Z24Run_Extra_Plot_Operationv+0x10e>
   18db4:	f6 01       	movw	r30, r12
   18db6:	80 81       	ld	r24, Z
   18db8:	8f 5f       	subi	r24, 0xFF	; 255
   18dba:	83 33       	cpi	r24, 0x33	; 51
   18dbc:	10 f4       	brcc	.+4      	; 0x18dc2 <_Z24Run_Extra_Plot_Operationv+0x102>
   18dbe:	80 83       	st	Z, r24
   18dc0:	06 c0       	rjmp	.+12     	; 0x18dce <_Z24Run_Extra_Plot_Operationv+0x10e>
   18dc2:	f6 01       	movw	r30, r12
   18dc4:	10 82       	st	Z, r1
   18dc6:	81 e0       	ldi	r24, 0x01	; 1
   18dc8:	81 0f       	add	r24, r17
   18dca:	0e 94 34 78 	call	0xf068	; 0xf068 <_Z21Exra_Plot_Data_EEPROMh>
   18dce:	13 30       	cpi	r17, 0x03	; 3
   18dd0:	e9 f4       	brne	.+58     	; 0x18e0c <_Z24Run_Extra_Plot_Operationv+0x14c>
   18dd2:	80 91 63 15 	lds	r24, 0x1563	; 0x801563 <_sPump_Parameter+0x8>
   18dd6:	98 2f       	mov	r25, r24
   18dd8:	97 7f       	andi	r25, 0xF7	; 247
   18dda:	91 30       	cpi	r25, 0x01	; 1
   18ddc:	29 f0       	breq	.+10     	; 0x18de8 <_Z24Run_Extra_Plot_Operationv+0x128>
   18dde:	84 30       	cpi	r24, 0x04	; 4
   18de0:	19 f0       	breq	.+6      	; 0x18de8 <_Z24Run_Extra_Plot_Operationv+0x128>
   18de2:	8c 50       	subi	r24, 0x0C	; 12
   18de4:	82 30       	cpi	r24, 0x02	; 2
   18de6:	90 f4       	brcc	.+36     	; 0x18e0c <_Z24Run_Extra_Plot_Operationv+0x14c>
   18de8:	61 eb       	ldi	r22, 0xB1	; 177
   18dea:	7f e2       	ldi	r23, 0x2F	; 47
   18dec:	8f e6       	ldi	r24, 0x6F	; 111
   18dee:	96 e1       	ldi	r25, 0x16	; 22
   18df0:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18df4:	8f e6       	ldi	r24, 0x6F	; 111
   18df6:	96 e1       	ldi	r25, 0x16	; 22
   18df8:	bb d7       	rcall	.+3958   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18dfa:	83 e0       	ldi	r24, 0x03	; 3
   18dfc:	df 91       	pop	r29
   18dfe:	cf 91       	pop	r28
   18e00:	1f 91       	pop	r17
   18e02:	ff 90       	pop	r15
   18e04:	ef 90       	pop	r14
   18e06:	df 90       	pop	r13
   18e08:	cf 90       	pop	r12
   18e0a:	17 ce       	rjmp	.-978    	; 0x18a3a <_Z25Stop_Extra_Plot_Operationh>
   18e0c:	21 96       	adiw	r28, 0x01	; 1
   18e0e:	fb e1       	ldi	r31, 0x1B	; 27
   18e10:	ef 0e       	add	r14, r31
   18e12:	f1 1c       	adc	r15, r1
   18e14:	8f ef       	ldi	r24, 0xFF	; 255
   18e16:	c8 1a       	sub	r12, r24
   18e18:	d8 0a       	sbc	r13, r24
   18e1a:	ce 30       	cpi	r28, 0x0E	; 14
   18e1c:	d1 05       	cpc	r29, r1
   18e1e:	09 f0       	breq	.+2      	; 0x18e22 <_Z24Run_Extra_Plot_Operationv+0x162>
   18e20:	60 cf       	rjmp	.-320    	; 0x18ce2 <_Z24Run_Extra_Plot_Operationv+0x22>
   18e22:	df 91       	pop	r29
   18e24:	cf 91       	pop	r28
   18e26:	1f 91       	pop	r17
   18e28:	ff 90       	pop	r15
   18e2a:	ef 90       	pop	r14
   18e2c:	df 90       	pop	r13
   18e2e:	cf 90       	pop	r12
   18e30:	08 95       	ret

00018e32 <_Z20Handle_Wireless_Pumpv>:
   18e32:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   18e36:	88 23       	and	r24, r24
   18e38:	09 f4       	brne	.+2      	; 0x18e3c <_Z20Handle_Wireless_Pumpv+0xa>
   18e3a:	7d c0       	rjmp	.+250    	; 0x18f36 <_Z20Handle_Wireless_Pumpv+0x104>
   18e3c:	20 91 d5 15 	lds	r18, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   18e40:	80 91 26 16 	lds	r24, 0x1626	; 0x801626 <_sRuble_Parameters+0xc1>
   18e44:	90 91 27 16 	lds	r25, 0x1627	; 0x801627 <_sRuble_Parameters+0xc2>
   18e48:	21 11       	cpse	r18, r1
   18e4a:	09 c0       	rjmp	.+18     	; 0x18e5e <_Z20Handle_Wireless_Pumpv+0x2c>
   18e4c:	20 91 09 10 	lds	r18, 0x1009	; 0x801009 <_sExtra_Plot+0x6a>
   18e50:	21 11       	cpse	r18, r1
   18e52:	05 c0       	rjmp	.+10     	; 0x18e5e <_Z20Handle_Wireless_Pumpv+0x2c>
   18e54:	20 91 24 10 	lds	r18, 0x1024	; 0x801024 <_sExtra_Plot+0x85>
   18e58:	22 23       	and	r18, r18
   18e5a:	09 f4       	brne	.+2      	; 0x18e5e <_Z20Handle_Wireless_Pumpv+0x2c>
   18e5c:	40 c0       	rjmp	.+128    	; 0x18ede <_Z20Handle_Wireless_Pumpv+0xac>
   18e5e:	89 2b       	or	r24, r25
   18e60:	09 f0       	breq	.+2      	; 0x18e64 <_Z20Handle_Wireless_Pumpv+0x32>
   18e62:	69 c0       	rjmp	.+210    	; 0x18f36 <_Z20Handle_Wireless_Pumpv+0x104>
   18e64:	86 e9       	ldi	r24, 0x96	; 150
   18e66:	90 e0       	ldi	r25, 0x00	; 0
   18e68:	90 93 27 16 	sts	0x1627, r25	; 0x801627 <_sRuble_Parameters+0xc2>
   18e6c:	80 93 26 16 	sts	0x1626, r24	; 0x801626 <_sRuble_Parameters+0xc1>
   18e70:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18e74:	81 30       	cpi	r24, 0x01	; 1
   18e76:	49 f4       	brne	.+18     	; 0x18e8a <_Z20Handle_Wireless_Pumpv+0x58>
   18e78:	69 ef       	ldi	r22, 0xF9	; 249
   18e7a:	7c e2       	ldi	r23, 0x2C	; 44
   18e7c:	8f e6       	ldi	r24, 0x6F	; 111
   18e7e:	96 e1       	ldi	r25, 0x16	; 22
   18e80:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18e84:	8f e6       	ldi	r24, 0x6F	; 111
   18e86:	96 e1       	ldi	r25, 0x16	; 22
   18e88:	73 d7       	rcall	.+3814   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18e8a:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18e8e:	62 50       	subi	r22, 0x02	; 2
   18e90:	82 e0       	ldi	r24, 0x02	; 2
   18e92:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18e96:	88 23       	and	r24, r24
   18e98:	21 f0       	breq	.+8      	; 0x18ea2 <_Z20Handle_Wireless_Pumpv+0x70>
   18e9a:	81 e0       	ldi	r24, 0x01	; 1
   18e9c:	80 93 25 16 	sts	0x1625, r24	; 0x801625 <_sRuble_Parameters+0xc0>
   18ea0:	0e c0       	rjmp	.+28     	; 0x18ebe <_Z20Handle_Wireless_Pumpv+0x8c>
   18ea2:	86 e0       	ldi	r24, 0x06	; 6
   18ea4:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   18ea8:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18eac:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18eb0:	90 68       	ori	r25, 0x80	; 128
   18eb2:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18eb6:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18eba:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   18ebe:	65 e2       	ldi	r22, 0x25	; 37
   18ec0:	76 e1       	ldi	r23, 0x16	; 22
   18ec2:	85 e3       	ldi	r24, 0x35	; 53
   18ec4:	9c e0       	ldi	r25, 0x0C	; 12
   18ec6:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18eca:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18ece:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18ed2:	84 60       	ori	r24, 0x04	; 4
   18ed4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18ed8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18edc:	08 95       	ret
   18ede:	89 2b       	or	r24, r25
   18ee0:	51 f5       	brne	.+84     	; 0x18f36 <_Z20Handle_Wireless_Pumpv+0x104>
   18ee2:	88 e5       	ldi	r24, 0x58	; 88
   18ee4:	92 e0       	ldi	r25, 0x02	; 2
   18ee6:	90 93 27 16 	sts	0x1627, r25	; 0x801627 <_sRuble_Parameters+0xc2>
   18eea:	80 93 26 16 	sts	0x1626, r24	; 0x801626 <_sRuble_Parameters+0xc1>
   18eee:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18ef2:	81 30       	cpi	r24, 0x01	; 1
   18ef4:	49 f4       	brne	.+18     	; 0x18f08 <_Z20Handle_Wireless_Pumpv+0xd6>
   18ef6:	6a ec       	ldi	r22, 0xCA	; 202
   18ef8:	7c e2       	ldi	r23, 0x2C	; 44
   18efa:	8f e6       	ldi	r24, 0x6F	; 111
   18efc:	96 e1       	ldi	r25, 0x16	; 22
   18efe:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18f02:	8f e6       	ldi	r24, 0x6F	; 111
   18f04:	96 e1       	ldi	r25, 0x16	; 22
   18f06:	34 d7       	rcall	.+3688   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18f08:	60 91 41 16 	lds	r22, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18f0c:	62 50       	subi	r22, 0x02	; 2
   18f0e:	84 e0       	ldi	r24, 0x04	; 4
   18f10:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18f14:	10 92 25 16 	sts	0x1625, r1	; 0x801625 <_sRuble_Parameters+0xc0>
   18f18:	65 e2       	ldi	r22, 0x25	; 37
   18f1a:	76 e1       	ldi	r23, 0x16	; 22
   18f1c:	85 e3       	ldi	r24, 0x35	; 53
   18f1e:	9c e0       	ldi	r25, 0x0C	; 12
   18f20:	0e 94 c0 83 	call	0x10780	; 0x10780 <_ZN11EEPROMClass3putIhEERKT_iS3_.isra.3>
   18f24:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   18f28:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   18f2c:	84 60       	ori	r24, 0x04	; 4
   18f2e:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   18f32:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   18f36:	08 95       	ret

00018f38 <_Z24Pump_Status_List_Monitorv>:
   18f38:	0f 93       	push	r16
   18f3a:	1f 93       	push	r17
   18f3c:	cf 93       	push	r28
   18f3e:	df 93       	push	r29
   18f40:	80 91 87 0f 	lds	r24, 0x0F87	; 0x800f87 <_ZZ24Pump_Status_List_MonitorvE7counter>
   18f44:	89 37       	cpi	r24, 0x79	; 121
   18f46:	08 f4       	brcc	.+2      	; 0x18f4a <_Z24Pump_Status_List_Monitorv+0x12>
   18f48:	4a c0       	rjmp	.+148    	; 0x18fde <_Z24Pump_Status_List_Monitorv+0xa6>
   18f4a:	20 91 41 16 	lds	r18, 0x1641	; 0x801641 <_sRuble_Parameters+0xdc>
   18f4e:	30 e0       	ldi	r19, 0x00	; 0
   18f50:	ec e3       	ldi	r30, 0x3C	; 60
   18f52:	f6 e1       	ldi	r31, 0x16	; 22
   18f54:	80 e0       	ldi	r24, 0x00	; 0
   18f56:	90 e0       	ldi	r25, 0x00	; 0
   18f58:	08 2f       	mov	r16, r24
   18f5a:	ec 01       	movw	r28, r24
   18f5c:	11 91       	ld	r17, Z+
   18f5e:	01 96       	adiw	r24, 0x01	; 1
   18f60:	11 30       	cpi	r17, 0x01	; 1
   18f62:	c1 f5       	brne	.+112    	; 0x18fd4 <_Z24Pump_Status_List_Monitorv+0x9c>
   18f64:	28 17       	cp	r18, r24
   18f66:	39 07       	cpc	r19, r25
   18f68:	a9 f1       	breq	.+106    	; 0x18fd4 <_Z24Pump_Status_List_Monitorv+0x9c>
   18f6a:	10 92 87 0f 	sts	0x0F87, r1	; 0x800f87 <_ZZ24Pump_Status_List_MonitorvE7counter>
   18f6e:	01 11       	cpse	r16, r1
   18f70:	13 c0       	rjmp	.+38     	; 0x18f98 <_Z24Pump_Status_List_Monitorv+0x60>
   18f72:	8a e0       	ldi	r24, 0x0A	; 10
   18f74:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18f78:	01 97       	sbiw	r24, 0x01	; 1
   18f7a:	21 f0       	breq	.+8      	; 0x18f84 <_Z24Pump_Status_List_Monitorv+0x4c>
   18f7c:	61 e0       	ldi	r22, 0x01	; 1
   18f7e:	8a e0       	ldi	r24, 0x0A	; 10
   18f80:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   18f84:	8b e0       	ldi	r24, 0x0B	; 11
   18f86:	0e 94 d7 d4 	call	0x1a9ae	; 0x1a9ae <digitalRead>
   18f8a:	01 97       	sbiw	r24, 0x01	; 1
   18f8c:	c9 f0       	breq	.+50     	; 0x18fc0 <_Z24Pump_Status_List_Monitorv+0x88>
   18f8e:	61 e0       	ldi	r22, 0x01	; 1
   18f90:	8b e0       	ldi	r24, 0x0B	; 11
   18f92:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   18f96:	14 c0       	rjmp	.+40     	; 0x18fc0 <_Z24Pump_Status_List_Monitorv+0x88>
   18f98:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   18f9c:	81 30       	cpi	r24, 0x01	; 1
   18f9e:	49 f4       	brne	.+18     	; 0x18fb2 <_Z24Pump_Status_List_Monitorv+0x7a>
   18fa0:	63 ef       	ldi	r22, 0xF3	; 243
   18fa2:	78 e2       	ldi	r23, 0x28	; 40
   18fa4:	8f e6       	ldi	r24, 0x6F	; 111
   18fa6:	96 e1       	ldi	r25, 0x16	; 22
   18fa8:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   18fac:	8f e6       	ldi	r24, 0x6F	; 111
   18fae:	96 e1       	ldi	r25, 0x16	; 22
   18fb0:	df d6       	rcall	.+3518   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   18fb2:	6f ef       	ldi	r22, 0xFF	; 255
   18fb4:	60 0f       	add	r22, r16
   18fb6:	84 e0       	ldi	r24, 0x04	; 4
   18fb8:	0e 94 78 b9 	call	0x172f0	; 0x172f0 <_Z20Wireless_Pump_On_Offhh>
   18fbc:	88 23       	and	r24, r24
   18fbe:	31 f0       	breq	.+12     	; 0x18fcc <_Z24Pump_Status_List_Monitorv+0x94>
   18fc0:	c4 5c       	subi	r28, 0xC4	; 196
   18fc2:	d9 4e       	sbci	r29, 0xE9	; 233
   18fc4:	18 82       	st	Y, r1
   18fc6:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   18fca:	0d c0       	rjmp	.+26     	; 0x18fe6 <_Z24Pump_Status_List_Monitorv+0xae>
   18fcc:	0e 94 39 84 	call	0x10872	; 0x10872 <_ZN11EEPROMClass3putIA5_hEERKT_iS4_.isra.6.constprop.41>
   18fd0:	10 e0       	ldi	r17, 0x00	; 0
   18fd2:	09 c0       	rjmp	.+18     	; 0x18fe6 <_Z24Pump_Status_List_Monitorv+0xae>
   18fd4:	84 30       	cpi	r24, 0x04	; 4
   18fd6:	91 05       	cpc	r25, r1
   18fd8:	09 f0       	breq	.+2      	; 0x18fdc <_Z24Pump_Status_List_Monitorv+0xa4>
   18fda:	be cf       	rjmp	.-132    	; 0x18f58 <_Z24Pump_Status_List_Monitorv+0x20>
   18fdc:	03 c0       	rjmp	.+6      	; 0x18fe4 <_Z24Pump_Status_List_Monitorv+0xac>
   18fde:	8f 5f       	subi	r24, 0xFF	; 255
   18fe0:	80 93 87 0f 	sts	0x0F87, r24	; 0x800f87 <_ZZ24Pump_Status_List_MonitorvE7counter>
   18fe4:	01 c0       	rjmp	.+2      	; 0x18fe8 <_Z24Pump_Status_List_Monitorv+0xb0>
   18fe6:	81 2f       	mov	r24, r17
   18fe8:	df 91       	pop	r29
   18fea:	cf 91       	pop	r28
   18fec:	1f 91       	pop	r17
   18fee:	0f 91       	pop	r16
   18ff0:	08 95       	ret

00018ff2 <_Z24Plot_Status_List_Monitorv>:
   18ff2:	2f 92       	push	r2
   18ff4:	3f 92       	push	r3
   18ff6:	4f 92       	push	r4
   18ff8:	5f 92       	push	r5
   18ffa:	6f 92       	push	r6
   18ffc:	7f 92       	push	r7
   18ffe:	8f 92       	push	r8
   19000:	9f 92       	push	r9
   19002:	af 92       	push	r10
   19004:	bf 92       	push	r11
   19006:	cf 92       	push	r12
   19008:	df 92       	push	r13
   1900a:	ef 92       	push	r14
   1900c:	ff 92       	push	r15
   1900e:	0f 93       	push	r16
   19010:	1f 93       	push	r17
   19012:	cf 93       	push	r28
   19014:	df 93       	push	r29
   19016:	cd b7       	in	r28, 0x3d	; 61
   19018:	de b7       	in	r29, 0x3e	; 62
   1901a:	29 97       	sbiw	r28, 0x09	; 9
   1901c:	0f b6       	in	r0, 0x3f	; 63
   1901e:	f8 94       	cli
   19020:	de bf       	out	0x3e, r29	; 62
   19022:	0f be       	out	0x3f, r0	; 63
   19024:	cd bf       	out	0x3d, r28	; 61
   19026:	80 91 24 16 	lds	r24, 0x1624	; 0x801624 <_sRuble_Parameters+0xbf>
   1902a:	88 23       	and	r24, r24
   1902c:	09 f4       	brne	.+2      	; 0x19030 <_Z24Plot_Status_List_Monitorv+0x3e>
   1902e:	59 c3       	rjmp	.+1714   	; 0x196e2 <_Z24Plot_Status_List_Monitorv+0x6f0>
   19030:	80 91 25 16 	lds	r24, 0x1625	; 0x801625 <_sRuble_Parameters+0xc0>
   19034:	88 23       	and	r24, r24
   19036:	49 f0       	breq	.+18     	; 0x1904a <_Z24Plot_Status_List_Monitorv+0x58>
   19038:	80 91 d5 15 	lds	r24, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   1903c:	81 11       	cpse	r24, r1
   1903e:	05 c0       	rjmp	.+10     	; 0x1904a <_Z24Plot_Status_List_Monitorv+0x58>
   19040:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   19044:	82 30       	cpi	r24, 0x02	; 2
   19046:	09 f0       	breq	.+2      	; 0x1904a <_Z24Plot_Status_List_Monitorv+0x58>
   19048:	4c c3       	rjmp	.+1688   	; 0x196e2 <_Z24Plot_Status_List_Monitorv+0x6f0>
   1904a:	e8 e2       	ldi	r30, 0x28	; 40
   1904c:	f6 e1       	ldi	r31, 0x16	; 22
   1904e:	e1 2c       	mov	r14, r1
   19050:	f1 2c       	mov	r15, r1
   19052:	de 2c       	mov	r13, r14
   19054:	c1 90       	ld	r12, Z+
   19056:	21 e0       	ldi	r18, 0x01	; 1
   19058:	c2 12       	cpse	r12, r18
   1905a:	3b c3       	rjmp	.+1654   	; 0x196d2 <_Z24Plot_Status_List_Monitorv+0x6e0>
   1905c:	20 91 d5 15 	lds	r18, 0x15D5	; 0x8015d5 <_sRuble_Parameters+0x70>
   19060:	82 2f       	mov	r24, r18
   19062:	90 e0       	ldi	r25, 0x00	; 0
   19064:	01 97       	sbiw	r24, 0x01	; 1
   19066:	e8 16       	cp	r14, r24
   19068:	f9 06       	cpc	r15, r25
   1906a:	09 f4       	brne	.+2      	; 0x1906e <_Z24Plot_Status_List_Monitorv+0x7c>
   1906c:	3b c3       	rjmp	.+1654   	; 0x196e4 <_Z24Plot_Status_List_Monitorv+0x6f2>
   1906e:	8e 01       	movw	r16, r28
   19070:	0f 5f       	subi	r16, 0xFF	; 255
   19072:	1f 4f       	sbci	r17, 0xFF	; 255
   19074:	22 23       	and	r18, r18
   19076:	09 f4       	brne	.+2      	; 0x1907a <_Z24Plot_Status_List_Monitorv+0x88>
   19078:	4b c0       	rjmp	.+150    	; 0x19110 <_Z24Plot_Status_List_Monitorv+0x11e>
   1907a:	25 e0       	ldi	r18, 0x05	; 5
   1907c:	d8 01       	movw	r26, r16
   1907e:	1d 92       	st	X+, r1
   19080:	2a 95       	dec	r18
   19082:	e9 f7       	brne	.-6      	; 0x1907e <_Z24Plot_Status_List_Monitorv+0x8c>
   19084:	26 e0       	ldi	r18, 0x06	; 6
   19086:	2e 9d       	mul	r18, r14
   19088:	f0 01       	movw	r30, r0
   1908a:	2f 9d       	mul	r18, r15
   1908c:	f0 0d       	add	r31, r0
   1908e:	11 24       	eor	r1, r1
   19090:	28 9f       	mul	r18, r24
   19092:	b0 01       	movw	r22, r0
   19094:	29 9f       	mul	r18, r25
   19096:	70 0d       	add	r23, r0
   19098:	11 24       	eor	r1, r1
   1909a:	80 e0       	ldi	r24, 0x00	; 0
   1909c:	90 e0       	ldi	r25, 0x00	; 0
   1909e:	40 e0       	ldi	r20, 0x00	; 0
   190a0:	df 01       	movw	r26, r30
   190a2:	a8 0f       	add	r26, r24
   190a4:	b9 1f       	adc	r27, r25
   190a6:	a3 50       	subi	r26, 0x03	; 3
   190a8:	b3 4f       	sbci	r27, 0xF3	; 243
   190aa:	11 96       	adiw	r26, 0x01	; 1
   190ac:	5c 91       	ld	r21, X
   190ae:	20 e0       	ldi	r18, 0x00	; 0
   190b0:	30 e0       	ldi	r19, 0x00	; 0
   190b2:	b1 2c       	mov	r11, r1
   190b4:	db 01       	movw	r26, r22
   190b6:	a2 0f       	add	r26, r18
   190b8:	b3 1f       	adc	r27, r19
   190ba:	a3 50       	subi	r26, 0x03	; 3
   190bc:	b3 4f       	sbci	r27, 0xF3	; 243
   190be:	11 96       	adiw	r26, 0x01	; 1
   190c0:	ac 91       	ld	r26, X
   190c2:	5a 13       	cpse	r21, r26
   190c4:	02 c0       	rjmp	.+4      	; 0x190ca <_Z24Plot_Status_List_Monitorv+0xd8>
   190c6:	bb 24       	eor	r11, r11
   190c8:	b3 94       	inc	r11
   190ca:	2f 5f       	subi	r18, 0xFF	; 255
   190cc:	3f 4f       	sbci	r19, 0xFF	; 255
   190ce:	25 30       	cpi	r18, 0x05	; 5
   190d0:	31 05       	cpc	r19, r1
   190d2:	81 f7       	brne	.-32     	; 0x190b4 <_Z24Plot_Status_List_Monitorv+0xc2>
   190d4:	b1 10       	cpse	r11, r1
   190d6:	05 c0       	rjmp	.+10     	; 0x190e2 <_Z24Plot_Status_List_Monitorv+0xf0>
   190d8:	d8 01       	movw	r26, r16
   190da:	a4 0f       	add	r26, r20
   190dc:	b1 1d       	adc	r27, r1
   190de:	5c 93       	st	X, r21
   190e0:	4f 5f       	subi	r20, 0xFF	; 255
   190e2:	01 96       	adiw	r24, 0x01	; 1
   190e4:	85 30       	cpi	r24, 0x05	; 5
   190e6:	91 05       	cpc	r25, r1
   190e8:	d9 f6       	brne	.-74     	; 0x190a0 <_Z24Plot_Status_List_Monitorv+0xae>
   190ea:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   190ee:	fe 01       	movw	r30, r28
   190f0:	36 96       	adiw	r30, 0x06	; 6
   190f2:	5f 01       	movw	r10, r30
   190f4:	81 30       	cpi	r24, 0x01	; 1
   190f6:	09 f0       	breq	.+2      	; 0x190fa <_Z24Plot_Status_List_Monitorv+0x108>
   190f8:	40 c0       	rjmp	.+128    	; 0x1917a <_Z24Plot_Status_List_Monitorv+0x188>
   190fa:	63 e8       	ldi	r22, 0x83	; 131
   190fc:	7a e2       	ldi	r23, 0x2A	; 42
   190fe:	8f e6       	ldi	r24, 0x6F	; 111
   19100:	96 e1       	ldi	r25, 0x16	; 22
   19102:	0e 94 bd d0 	call	0x1a17a	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19106:	8f e6       	ldi	r24, 0x6F	; 111
   19108:	96 e1       	ldi	r25, 0x16	; 22
   1910a:	32 d6       	rcall	.+3172   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1910c:	48 01       	movw	r8, r16
   1910e:	15 c0       	rjmp	.+42     	; 0x1913a <_Z24Plot_Status_List_Monitorv+0x148>
   19110:	d8 01       	movw	r26, r16
   19112:	86 e0       	ldi	r24, 0x06	; 6
   19114:	8e 9d       	mul	r24, r14
   19116:	a0 01       	movw	r20, r0
   19118:	8f 9d       	mul	r24, r15
   1911a:	50 0d       	add	r21, r0
   1911c:	11 24       	eor	r1, r1
   1911e:	80 e0       	ldi	r24, 0x00	; 0
   19120:	90 e0       	ldi	r25, 0x00	; 0
   19122:	fa 01       	movw	r30, r20
   19124:	e8 0f       	add	r30, r24
   19126:	f9 1f       	adc	r31, r25
   19128:	e3 50       	subi	r30, 0x03	; 3
   1912a:	f3 4f       	sbci	r31, 0xF3	; 243
   1912c:	21 81       	ldd	r18, Z+1	; 0x01
   1912e:	2d 93       	st	X+, r18
   19130:	01 96       	adiw	r24, 0x01	; 1
   19132:	85 30       	cpi	r24, 0x05	; 5
   19134:	91 05       	cpc	r25, r1
   19136:	a9 f7       	brne	.-22     	; 0x19122 <_Z24Plot_Status_List_Monitorv+0x130>
   19138:	d8 cf       	rjmp	.-80     	; 0x190ea <_Z24Plot_Status_List_Monitorv+0xf8>
   1913a:	d4 01       	movw	r26, r8
   1913c:	6d 91       	ld	r22, X+
   1913e:	4d 01       	movw	r8, r26
   19140:	4a e0       	ldi	r20, 0x0A	; 10
   19142:	50 e0       	ldi	r21, 0x00	; 0
   19144:	8f e6       	ldi	r24, 0x6F	; 111
   19146:	96 e1       	ldi	r25, 0x16	; 22
   19148:	0e 94 33 d1 	call	0x1a266	; 0x1a266 <_ZN5Print5printEhi>
   1914c:	61 e8       	ldi	r22, 0x81	; 129
   1914e:	7a e2       	ldi	r23, 0x2A	; 42
   19150:	8f e6       	ldi	r24, 0x6F	; 111
   19152:	96 e1       	ldi	r25, 0x16	; 22
   19154:	e1 d7       	rcall	.+4034   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   19156:	a8 14       	cp	r10, r8
   19158:	b9 04       	cpc	r11, r9
   1915a:	79 f7       	brne	.-34     	; 0x1913a <_Z24Plot_Status_List_Monitorv+0x148>
   1915c:	61 e7       	ldi	r22, 0x71	; 113
   1915e:	7a e2       	ldi	r23, 0x2A	; 42
   19160:	8f e6       	ldi	r24, 0x6F	; 111
   19162:	96 e1       	ldi	r25, 0x16	; 22
   19164:	d9 d7       	rcall	.+4018   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   19166:	4a e0       	ldi	r20, 0x0A	; 10
   19168:	50 e0       	ldi	r21, 0x00	; 0
   1916a:	6d 2d       	mov	r22, r13
   1916c:	8f e6       	ldi	r24, 0x6F	; 111
   1916e:	96 e1       	ldi	r25, 0x16	; 22
   19170:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   19174:	8f e6       	ldi	r24, 0x6F	; 111
   19176:	96 e1       	ldi	r25, 0x16	; 22
   19178:	fb d5       	rcall	.+3062   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1917a:	28 01       	movw	r4, r16
   1917c:	d1 2c       	mov	r13, r1
   1917e:	ad e0       	ldi	r26, 0x0D	; 13
   19180:	9a 2e       	mov	r9, r26
   19182:	f2 01       	movw	r30, r4
   19184:	71 90       	ld	r7, Z+
   19186:	2f 01       	movw	r4, r30
   19188:	8f ef       	ldi	r24, 0xFF	; 255
   1918a:	87 0d       	add	r24, r7
   1918c:	8c 30       	cpi	r24, 0x0C	; 12
   1918e:	08 f0       	brcs	.+2      	; 0x19192 <_Z24Plot_Status_List_Monitorv+0x1a0>
   19190:	77 c2       	rjmp	.+1262   	; 0x19680 <_Z24Plot_Status_List_Monitorv+0x68e>
   19192:	f3 e0       	ldi	r31, 0x03	; 3
   19194:	f7 15       	cp	r31, r7
   19196:	90 f4       	brcc	.+36     	; 0x191bc <_Z24Plot_Status_List_Monitorv+0x1ca>
   19198:	2b ea       	ldi	r18, 0xAB	; 171
   1919a:	72 9e       	mul	r7, r18
   1919c:	81 2c       	mov	r8, r1
   1919e:	11 24       	eor	r1, r1
   191a0:	88 2d       	mov	r24, r8
   191a2:	86 95       	lsr	r24
   191a4:	98 2f       	mov	r25, r24
   191a6:	99 0f       	add	r25, r25
   191a8:	89 0f       	add	r24, r25
   191aa:	78 1a       	sub	r7, r24
   191ac:	86 94       	lsr	r8
   191ae:	77 20       	and	r7, r7
   191b0:	11 f0       	breq	.+4      	; 0x191b6 <_Z24Plot_Status_List_Monitorv+0x1c4>
   191b2:	83 94       	inc	r8
   191b4:	05 c0       	rjmp	.+10     	; 0x191c0 <_Z24Plot_Status_List_Monitorv+0x1ce>
   191b6:	f3 e0       	ldi	r31, 0x03	; 3
   191b8:	7f 2e       	mov	r7, r31
   191ba:	02 c0       	rjmp	.+4      	; 0x191c0 <_Z24Plot_Status_List_Monitorv+0x1ce>
   191bc:	88 24       	eor	r8, r8
   191be:	83 94       	inc	r8
   191c0:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   191c4:	81 30       	cpi	r24, 0x01	; 1
   191c6:	79 f4       	brne	.+30     	; 0x191e6 <_Z24Plot_Status_List_Monitorv+0x1f4>
   191c8:	6d e5       	ldi	r22, 0x5D	; 93
   191ca:	7a e2       	ldi	r23, 0x2A	; 42
   191cc:	8f e6       	ldi	r24, 0x6F	; 111
   191ce:	96 e1       	ldi	r25, 0x16	; 22
   191d0:	a3 d7       	rcall	.+3910   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   191d2:	4a e0       	ldi	r20, 0x0A	; 10
   191d4:	50 e0       	ldi	r21, 0x00	; 0
   191d6:	68 2d       	mov	r22, r8
   191d8:	8f e6       	ldi	r24, 0x6F	; 111
   191da:	96 e1       	ldi	r25, 0x16	; 22
   191dc:	0e 94 39 d1 	call	0x1a272	; 0x1a272 <_ZN5Print7printlnEhi>
   191e0:	8f e6       	ldi	r24, 0x6F	; 111
   191e2:	96 e1       	ldi	r25, 0x16	; 22
   191e4:	c5 d5       	rcall	.+2954   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   191e6:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   191ea:	81 11       	cpse	r24, r1
   191ec:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   191f0:	ac ea       	ldi	r26, 0xAC	; 172
   191f2:	b5 e1       	ldi	r27, 0x15	; 21
   191f4:	e4 e1       	ldi	r30, 0x14	; 20
   191f6:	1d 92       	st	X+, r1
   191f8:	ea 95       	dec	r30
   191fa:	e9 f7       	brne	.-6      	; 0x191f6 <_Z24Plot_Status_List_Monitorv+0x204>
   191fc:	88 2d       	mov	r24, r8
   191fe:	90 e0       	ldi	r25, 0x00	; 0
   19200:	01 97       	sbiw	r24, 0x01	; 1
   19202:	f7 e0       	ldi	r31, 0x07	; 7
   19204:	f8 9f       	mul	r31, r24
   19206:	90 01       	movw	r18, r0
   19208:	f9 9f       	mul	r31, r25
   1920a:	30 0d       	add	r19, r0
   1920c:	11 24       	eor	r1, r1
   1920e:	2b 59       	subi	r18, 0x9B	; 155
   19210:	3a 4e       	sbci	r19, 0xEA	; 234
   19212:	f9 01       	movw	r30, r18
   19214:	ec 58       	subi	r30, 0x8C	; 140
   19216:	ff 4f       	sbci	r31, 0xFF	; 255
   19218:	80 81       	ld	r24, Z
   1921a:	80 93 ac 15 	sts	0x15AC, r24	; 0x8015ac <_sRuble_Parameters+0x47>
   1921e:	31 96       	adiw	r30, 0x01	; 1
   19220:	80 81       	ld	r24, Z
   19222:	80 93 ad 15 	sts	0x15AD, r24	; 0x8015ad <_sRuble_Parameters+0x48>
   19226:	31 96       	adiw	r30, 0x01	; 1
   19228:	80 81       	ld	r24, Z
   1922a:	80 93 ae 15 	sts	0x15AE, r24	; 0x8015ae <_sRuble_Parameters+0x49>
   1922e:	31 96       	adiw	r30, 0x01	; 1
   19230:	80 81       	ld	r24, Z
   19232:	80 93 af 15 	sts	0x15AF, r24	; 0x8015af <_sRuble_Parameters+0x4a>
   19236:	31 96       	adiw	r30, 0x01	; 1
   19238:	80 81       	ld	r24, Z
   1923a:	80 93 b0 15 	sts	0x15B0, r24	; 0x8015b0 <_sRuble_Parameters+0x4b>
   1923e:	31 96       	adiw	r30, 0x01	; 1
   19240:	80 81       	ld	r24, Z
   19242:	80 93 b1 15 	sts	0x15B1, r24	; 0x8015b1 <_sRuble_Parameters+0x4c>
   19246:	42 e0       	ldi	r20, 0x02	; 2
   19248:	40 93 b2 15 	sts	0x15B2, r20	; 0x8015b2 <_sRuble_Parameters+0x4d>
   1924c:	80 91 8c 15 	lds	r24, 0x158C	; 0x80158c <_sRuble_Parameters+0x27>
   19250:	80 93 b4 15 	sts	0x15B4, r24	; 0x8015b4 <_sRuble_Parameters+0x4f>
   19254:	80 91 7b 15 	lds	r24, 0x157B	; 0x80157b <_sRuble_Parameters+0x16>
   19258:	80 93 b6 15 	sts	0x15B6, r24	; 0x8015b6 <_sRuble_Parameters+0x51>
   1925c:	70 92 b7 15 	sts	0x15B7, r7	; 0x8015b7 <_sRuble_Parameters+0x52>
   19260:	40 e0       	ldi	r20, 0x00	; 0
   19262:	50 e0       	ldi	r21, 0x00	; 0
   19264:	64 2e       	mov	r6, r20
   19266:	81 2c       	mov	r8, r1
   19268:	71 2c       	mov	r7, r1
   1926a:	94 9e       	mul	r9, r20
   1926c:	b0 01       	movw	r22, r0
   1926e:	95 9e       	mul	r9, r21
   19270:	70 0d       	add	r23, r0
   19272:	11 24       	eor	r1, r1
   19274:	69 51       	subi	r22, 0x19	; 25
   19276:	74 4f       	sbci	r23, 0xF4	; 244
   19278:	88 2d       	mov	r24, r8
   1927a:	90 e0       	ldi	r25, 0x00	; 0
   1927c:	fb 01       	movw	r30, r22
   1927e:	e8 0f       	add	r30, r24
   19280:	f9 1f       	adc	r31, r25
   19282:	82 0f       	add	r24, r18
   19284:	93 1f       	adc	r25, r19
   19286:	dc 01       	movw	r26, r24
   19288:	ac 58       	subi	r26, 0x8C	; 140
   1928a:	bf 4f       	sbci	r27, 0xFF	; 255
   1928c:	81 81       	ldd	r24, Z+1	; 0x01
   1928e:	9c 91       	ld	r25, X
   19290:	89 17       	cp	r24, r25
   19292:	19 f0       	breq	.+6      	; 0x1929a <_Z24Plot_Status_List_Monitorv+0x2a8>
   19294:	e6 e0       	ldi	r30, 0x06	; 6
   19296:	8e 2e       	mov	r8, r30
   19298:	71 2c       	mov	r7, r1
   1929a:	73 94       	inc	r7
   1929c:	83 94       	inc	r8
   1929e:	85 e0       	ldi	r24, 0x05	; 5
   192a0:	88 15       	cp	r24, r8
   192a2:	50 f7       	brcc	.-44     	; 0x19278 <_Z24Plot_Status_List_Monitorv+0x286>
   192a4:	a6 e0       	ldi	r26, 0x06	; 6
   192a6:	7a 16       	cp	r7, r26
   192a8:	31 f0       	breq	.+12     	; 0x192b6 <_Z24Plot_Status_List_Monitorv+0x2c4>
   192aa:	4f 5f       	subi	r20, 0xFF	; 255
   192ac:	5f 4f       	sbci	r21, 0xFF	; 255
   192ae:	44 30       	cpi	r20, 0x04	; 4
   192b0:	51 05       	cpc	r21, r1
   192b2:	c1 f6       	brne	.-80     	; 0x19264 <_Z24Plot_Status_List_Monitorv+0x272>
   192b4:	01 c0       	rjmp	.+2      	; 0x192b8 <_Z24Plot_Status_List_Monitorv+0x2c6>
   192b6:	d6 2c       	mov	r13, r6
   192b8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   192bc:	81 30       	cpi	r24, 0x01	; 1
   192be:	71 f4       	brne	.+28     	; 0x192dc <_Z24Plot_Status_List_Monitorv+0x2ea>
   192c0:	67 e4       	ldi	r22, 0x47	; 71
   192c2:	7a e2       	ldi	r23, 0x2A	; 42
   192c4:	8f e6       	ldi	r24, 0x6F	; 111
   192c6:	96 e1       	ldi	r25, 0x16	; 22
   192c8:	27 d7       	rcall	.+3662   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   192ca:	4a e0       	ldi	r20, 0x0A	; 10
   192cc:	50 e0       	ldi	r21, 0x00	; 0
   192ce:	6d 2d       	mov	r22, r13
   192d0:	8f e6       	ldi	r24, 0x6F	; 111
   192d2:	96 e1       	ldi	r25, 0x16	; 22
   192d4:	c8 d7       	rcall	.+3984   	; 0x1a266 <_ZN5Print5printEhi>
   192d6:	8f e6       	ldi	r24, 0x6F	; 111
   192d8:	96 e1       	ldi	r25, 0x16	; 22
   192da:	4a d5       	rcall	.+2708   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   192dc:	bd e0       	ldi	r27, 0x0D	; 13
   192de:	db 9e       	mul	r13, r27
   192e0:	10 01       	movw	r2, r0
   192e2:	11 24       	eor	r1, r1
   192e4:	81 2c       	mov	r8, r1
   192e6:	9d 9c       	mul	r9, r13
   192e8:	c0 01       	movw	r24, r0
   192ea:	11 24       	eor	r1, r1
   192ec:	9c 01       	movw	r18, r24
   192ee:	29 51       	subi	r18, 0x19	; 25
   192f0:	34 4f       	sbci	r19, 0xF4	; 244
   192f2:	f9 01       	movw	r30, r18
   192f4:	3b 96       	adiw	r30, 0x0b	; 11
   192f6:	ff 83       	std	Y+7, r31	; 0x07
   192f8:	ee 83       	std	Y+6, r30	; 0x06
   192fa:	a9 01       	movw	r20, r18
   192fc:	48 5f       	subi	r20, 0xF8	; 248
   192fe:	5f 4f       	sbci	r21, 0xFF	; 255
   19300:	59 87       	std	Y+9, r21	; 0x09
   19302:	48 87       	std	Y+8, r20	; 0x08
   19304:	dc 01       	movw	r26, r24
   19306:	a8 51       	subi	r26, 0x18	; 24
   19308:	b4 4f       	sbci	r27, 0xF4	; 244
   1930a:	3d 01       	movw	r6, r26
   1930c:	0e 94 f5 70 	call	0xe1ea	; 0xe1ea <_Z21Subscribed_data_checkv>
   19310:	88 23       	and	r24, r24
   19312:	a1 f0       	breq	.+40     	; 0x1933c <_Z24Plot_Status_List_Monitorv+0x34a>
   19314:	0e 94 41 64 	call	0xc882	; 0xc882 <_Z21Seperate_Out_Sub_Datav>
   19318:	88 23       	and	r24, r24
   1931a:	81 f0       	breq	.+32     	; 0x1933c <_Z24Plot_Status_List_Monitorv+0x34a>
   1931c:	e7 e8       	ldi	r30, 0x87	; 135
   1931e:	f1 e1       	ldi	r31, 0x11	; 17
   19320:	01 90       	ld	r0, Z+
   19322:	00 20       	and	r0, r0
   19324:	e9 f7       	brne	.-6      	; 0x19320 <_Z24Plot_Status_List_Monitorv+0x32e>
   19326:	31 97       	sbiw	r30, 0x01	; 1
   19328:	af 01       	movw	r20, r30
   1932a:	47 58       	subi	r20, 0x87	; 135
   1932c:	51 41       	sbci	r21, 0x11	; 17
   1932e:	21 e0       	ldi	r18, 0x01	; 1
   19330:	67 e8       	ldi	r22, 0x87	; 135
   19332:	71 e1       	ldi	r23, 0x11	; 17
   19334:	89 e1       	ldi	r24, 0x19	; 25
   19336:	91 e1       	ldi	r25, 0x11	; 17
   19338:	0e 94 67 91 	call	0x122ce	; 0x122ce <_Z12Pub_Sub_DataPcPhjh>
   1933c:	83 94       	inc	r8
   1933e:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   19342:	81 30       	cpi	r24, 0x01	; 1
   19344:	41 f4       	brne	.+16     	; 0x19356 <_Z24Plot_Status_List_Monitorv+0x364>
   19346:	63 e2       	ldi	r22, 0x23	; 35
   19348:	7a e2       	ldi	r23, 0x2A	; 42
   1934a:	8f e6       	ldi	r24, 0x6F	; 111
   1934c:	96 e1       	ldi	r25, 0x16	; 22
   1934e:	15 d7       	rcall	.+3626   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19350:	8f e6       	ldi	r24, 0x6F	; 111
   19352:	96 e1       	ldi	r25, 0x16	; 22
   19354:	0d d5       	rcall	.+2586   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   19356:	0e 94 17 67 	call	0xce2e	; 0xce2e <_Z16Display_Update_1v>
   1935a:	8c e0       	ldi	r24, 0x0C	; 12
   1935c:	0e 94 11 66 	call	0xcc22	; 0xcc22 <_Z14Lora_Data_Sendh>
   19360:	88 eb       	ldi	r24, 0xB8	; 184
   19362:	9b e0       	ldi	r25, 0x0B	; 11
   19364:	0e 94 3c 64 	call	0xc878	; 0xc878 <_Z20Check_Data_Availablej>
   19368:	88 23       	and	r24, r24
   1936a:	09 f4       	brne	.+2      	; 0x1936e <_Z24Plot_Status_List_Monitorv+0x37c>
   1936c:	35 c1       	rjmp	.+618    	; 0x195d8 <_Z24Plot_Status_List_Monitorv+0x5e6>
   1936e:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   19372:	90 91 55 16 	lds	r25, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   19376:	88 23       	and	r24, r24
   19378:	09 f4       	brne	.+2      	; 0x1937c <_Z24Plot_Status_List_Monitorv+0x38a>
   1937a:	e6 c0       	rjmp	.+460    	; 0x19548 <_Z24Plot_Status_List_Monitorv+0x556>
   1937c:	91 30       	cpi	r25, 0x01	; 1
   1937e:	21 f5       	brne	.+72     	; 0x193c8 <_Z24Plot_Status_List_Monitorv+0x3d6>
   19380:	6d e0       	ldi	r22, 0x0D	; 13
   19382:	7a e2       	ldi	r23, 0x2A	; 42
   19384:	8f e6       	ldi	r24, 0x6F	; 111
   19386:	96 e1       	ldi	r25, 0x16	; 22
   19388:	c7 d6       	rcall	.+3470   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1938a:	4a e0       	ldi	r20, 0x0A	; 10
   1938c:	50 e0       	ldi	r21, 0x00	; 0
   1938e:	60 ec       	ldi	r22, 0xC0	; 192
   19390:	75 e1       	ldi	r23, 0x15	; 21
   19392:	8f e6       	ldi	r24, 0x6F	; 111
   19394:	96 e1       	ldi	r25, 0x16	; 22
   19396:	0e 94 dc 23 	call	0x47b8	; 0x47b8 <_ZN5Print5writeEPKcj>
   1939a:	8f e6       	ldi	r24, 0x6F	; 111
   1939c:	96 e1       	ldi	r25, 0x16	; 22
   1939e:	e9 d6       	rcall	.+3538   	; 0x1a172 <_ZN5Print7printlnEv>
   193a0:	8f e6       	ldi	r24, 0x6F	; 111
   193a2:	96 e1       	ldi	r25, 0x16	; 22
   193a4:	e5 d4       	rcall	.+2506   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   193a6:	6f ee       	ldi	r22, 0xEF	; 239
   193a8:	79 e2       	ldi	r23, 0x29	; 41
   193aa:	8f e6       	ldi	r24, 0x6F	; 111
   193ac:	96 e1       	ldi	r25, 0x16	; 22
   193ae:	b4 d6       	rcall	.+3432   	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   193b0:	47 e0       	ldi	r20, 0x07	; 7
   193b2:	50 e0       	ldi	r21, 0x00	; 0
   193b4:	b3 01       	movw	r22, r6
   193b6:	8f e6       	ldi	r24, 0x6F	; 111
   193b8:	96 e1       	ldi	r25, 0x16	; 22
   193ba:	84 d6       	rcall	.+3336   	; 0x1a0c4 <_ZN5Print5writeEPKhj>
   193bc:	8f e6       	ldi	r24, 0x6F	; 111
   193be:	96 e1       	ldi	r25, 0x16	; 22
   193c0:	d8 d6       	rcall	.+3504   	; 0x1a172 <_ZN5Print7printlnEv>
   193c2:	8f e6       	ldi	r24, 0x6F	; 111
   193c4:	96 e1       	ldi	r25, 0x16	; 22
   193c6:	d4 d4       	rcall	.+2472   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   193c8:	a0 ec       	ldi	r26, 0xC0	; 192
   193ca:	b5 e1       	ldi	r27, 0x15	; 21
   193cc:	80 e0       	ldi	r24, 0x00	; 0
   193ce:	90 e0       	ldi	r25, 0x00	; 0
   193d0:	2d 91       	ld	r18, X+
   193d2:	f1 01       	movw	r30, r2
   193d4:	e8 0f       	add	r30, r24
   193d6:	f9 1f       	adc	r31, r25
   193d8:	e9 51       	subi	r30, 0x19	; 25
   193da:	f4 4f       	sbci	r31, 0xF4	; 244
   193dc:	31 81       	ldd	r19, Z+1	; 0x01
   193de:	32 17       	cp	r19, r18
   193e0:	09 f4       	brne	.+2      	; 0x193e4 <_Z24Plot_Status_List_Monitorv+0x3f2>
   193e2:	62 c0       	rjmp	.+196    	; 0x194a8 <_Z24Plot_Status_List_Monitorv+0x4b6>
   193e4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   193e8:	81 30       	cpi	r24, 0x01	; 1
   193ea:	41 f4       	brne	.+16     	; 0x193fc <_Z24Plot_Status_List_Monitorv+0x40a>
   193ec:	64 ec       	ldi	r22, 0xC4	; 196
   193ee:	79 e2       	ldi	r23, 0x29	; 41
   193f0:	8f e6       	ldi	r24, 0x6F	; 111
   193f2:	96 e1       	ldi	r25, 0x16	; 22
   193f4:	c2 d6       	rcall	.+3460   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   193f6:	8f e6       	ldi	r24, 0x6F	; 111
   193f8:	96 e1       	ldi	r25, 0x16	; 22
   193fa:	ba d4       	rcall	.+2420   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   193fc:	b2 e0       	ldi	r27, 0x02	; 2
   193fe:	8b 16       	cp	r8, r27
   19400:	b9 f0       	breq	.+46     	; 0x19430 <_Z24Plot_Status_List_Monitorv+0x43e>
   19402:	81 e0       	ldi	r24, 0x01	; 1
   19404:	ee 81       	ldd	r30, Y+6	; 0x06
   19406:	ff 81       	ldd	r31, Y+7	; 0x07
   19408:	80 83       	st	Z, r24
   1940a:	80 91 c9 15 	lds	r24, 0x15C9	; 0x8015c9 <_sRuble_Parameters+0x64>
   1940e:	90 e0       	ldi	r25, 0x00	; 0
   19410:	98 2f       	mov	r25, r24
   19412:	88 27       	eor	r24, r24
   19414:	20 91 ca 15 	lds	r18, 0x15CA	; 0x8015ca <_sRuble_Parameters+0x65>
   19418:	82 2b       	or	r24, r18
   1941a:	a8 85       	ldd	r26, Y+8	; 0x08
   1941c:	b9 85       	ldd	r27, Y+9	; 0x09
   1941e:	8d 93       	st	X+, r24
   19420:	9c 93       	st	X, r25
   19422:	80 91 c8 15 	lds	r24, 0x15C8	; 0x8015c8 <_sRuble_Parameters+0x63>
   19426:	81 11       	cpse	r24, r1
   19428:	45 c0       	rjmp	.+138    	; 0x194b4 <_Z24Plot_Status_List_Monitorv+0x4c2>
   1942a:	83 e0       	ldi	r24, 0x03	; 3
   1942c:	88 2e       	mov	r8, r24
   1942e:	1e c1       	rjmp	.+572    	; 0x1966c <_Z24Plot_Status_List_Monitorv+0x67a>
   19430:	86 e0       	ldi	r24, 0x06	; 6
   19432:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   19436:	84 e6       	ldi	r24, 0x64	; 100
   19438:	90 e0       	ldi	r25, 0x00	; 0
   1943a:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   1943e:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   19442:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   19446:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1944a:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   1944e:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   19452:	a0 62       	ori	r26, 0x20	; 32
   19454:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   19458:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   1945c:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   19460:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   19464:	d0 92 17 16 	sts	0x1617, r13	; 0x801617 <_sRuble_Parameters+0xb2>
   19468:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1946c:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   19470:	82 60       	ori	r24, 0x02	; 2
   19472:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   19476:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1947a:	d8 01       	movw	r26, r16
   1947c:	ed 91       	ld	r30, X+
   1947e:	8d 01       	movw	r16, r26
   19480:	ed 30       	cpi	r30, 0x0D	; 13
   19482:	68 f0       	brcs	.+26     	; 0x1949e <_Z24Plot_Status_List_Monitorv+0x4ac>
   19484:	f0 e0       	ldi	r31, 0x00	; 0
   19486:	e8 51       	subi	r30, 0x18	; 24
   19488:	fa 4e       	sbci	r31, 0xEA	; 234
   1948a:	61 e0       	ldi	r22, 0x01	; 1
   1948c:	80 81       	ld	r24, Z
   1948e:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   19492:	68 ec       	ldi	r22, 0xC8	; 200
   19494:	70 e0       	ldi	r23, 0x00	; 0
   19496:	80 e0       	ldi	r24, 0x00	; 0
   19498:	90 e0       	ldi	r25, 0x00	; 0
   1949a:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1949e:	a0 16       	cp	r10, r16
   194a0:	b1 06       	cpc	r11, r17
   194a2:	59 f7       	brne	.-42     	; 0x1947a <_Z24Plot_Status_List_Monitorv+0x488>
   194a4:	c1 2c       	mov	r12, r1
   194a6:	1e c1       	rjmp	.+572    	; 0x196e4 <_Z24Plot_Status_List_Monitorv+0x6f2>
   194a8:	01 96       	adiw	r24, 0x01	; 1
   194aa:	86 30       	cpi	r24, 0x06	; 6
   194ac:	91 05       	cpc	r25, r1
   194ae:	09 f0       	breq	.+2      	; 0x194b2 <_Z24Plot_Status_List_Monitorv+0x4c0>
   194b0:	8f cf       	rjmp	.-226    	; 0x193d0 <_Z24Plot_Status_List_Monitorv+0x3de>
   194b2:	a7 cf       	rjmp	.-178    	; 0x19402 <_Z24Plot_Status_List_Monitorv+0x410>
   194b4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   194b8:	81 30       	cpi	r24, 0x01	; 1
   194ba:	41 f4       	brne	.+16     	; 0x194cc <_Z24Plot_Status_List_Monitorv+0x4da>
   194bc:	61 eb       	ldi	r22, 0xB1	; 177
   194be:	79 e2       	ldi	r23, 0x29	; 41
   194c0:	8f e6       	ldi	r24, 0x6F	; 111
   194c2:	96 e1       	ldi	r25, 0x16	; 22
   194c4:	5a d6       	rcall	.+3252   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   194c6:	8f e6       	ldi	r24, 0x6F	; 111
   194c8:	96 e1       	ldi	r25, 0x16	; 22
   194ca:	52 d4       	rcall	.+2212   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   194cc:	b2 e0       	ldi	r27, 0x02	; 2
   194ce:	8b 12       	cpse	r8, r27
   194d0:	cd c0       	rjmp	.+410    	; 0x1966c <_Z24Plot_Status_List_Monitorv+0x67a>
   194d2:	86 e0       	ldi	r24, 0x06	; 6
   194d4:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   194d8:	84 e6       	ldi	r24, 0x64	; 100
   194da:	90 e0       	ldi	r25, 0x00	; 0
   194dc:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   194e0:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   194e4:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   194e8:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   194ec:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   194f0:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   194f4:	a0 62       	ori	r26, 0x20	; 32
   194f6:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   194fa:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   194fe:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   19502:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   19506:	d0 92 17 16 	sts	0x1617, r13	; 0x801617 <_sRuble_Parameters+0xb2>
   1950a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1950e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   19512:	82 60       	ori	r24, 0x02	; 2
   19514:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   19518:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   1951c:	d8 01       	movw	r26, r16
   1951e:	ed 91       	ld	r30, X+
   19520:	8d 01       	movw	r16, r26
   19522:	ed 30       	cpi	r30, 0x0D	; 13
   19524:	68 f0       	brcs	.+26     	; 0x19540 <_Z24Plot_Status_List_Monitorv+0x54e>
   19526:	f0 e0       	ldi	r31, 0x00	; 0
   19528:	e8 51       	subi	r30, 0x18	; 24
   1952a:	fa 4e       	sbci	r31, 0xEA	; 234
   1952c:	61 e0       	ldi	r22, 0x01	; 1
   1952e:	80 81       	ld	r24, Z
   19530:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   19534:	68 ec       	ldi	r22, 0xC8	; 200
   19536:	70 e0       	ldi	r23, 0x00	; 0
   19538:	80 e0       	ldi	r24, 0x00	; 0
   1953a:	90 e0       	ldi	r25, 0x00	; 0
   1953c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   19540:	a0 16       	cp	r10, r16
   19542:	b1 06       	cpc	r11, r17
   19544:	59 f7       	brne	.-42     	; 0x1951c <_Z24Plot_Status_List_Monitorv+0x52a>
   19546:	ae cf       	rjmp	.-164    	; 0x194a4 <_Z24Plot_Status_List_Monitorv+0x4b2>
   19548:	91 30       	cpi	r25, 0x01	; 1
   1954a:	41 f4       	brne	.+16     	; 0x1955c <_Z24Plot_Status_List_Monitorv+0x56a>
   1954c:	66 e7       	ldi	r22, 0x76	; 118
   1954e:	79 e2       	ldi	r23, 0x29	; 41
   19550:	8f e6       	ldi	r24, 0x6F	; 111
   19552:	96 e1       	ldi	r25, 0x16	; 22
   19554:	12 d6       	rcall	.+3108   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   19556:	8f e6       	ldi	r24, 0x6F	; 111
   19558:	96 e1       	ldi	r25, 0x16	; 22
   1955a:	0a d4       	rcall	.+2068   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   1955c:	b2 e0       	ldi	r27, 0x02	; 2
   1955e:	8b 12       	cpse	r8, r27
   19560:	85 c0       	rjmp	.+266    	; 0x1966c <_Z24Plot_Status_List_Monitorv+0x67a>
   19562:	86 e0       	ldi	r24, 0x06	; 6
   19564:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   19568:	84 e6       	ldi	r24, 0x64	; 100
   1956a:	90 e0       	ldi	r25, 0x00	; 0
   1956c:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   19570:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   19574:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   19578:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   1957c:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   19580:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   19584:	a0 62       	ori	r26, 0x20	; 32
   19586:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1958a:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   1958e:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   19592:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   19596:	d0 92 17 16 	sts	0x1617, r13	; 0x801617 <_sRuble_Parameters+0xb2>
   1959a:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   1959e:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   195a2:	82 60       	ori	r24, 0x02	; 2
   195a4:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   195a8:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   195ac:	d8 01       	movw	r26, r16
   195ae:	ed 91       	ld	r30, X+
   195b0:	8d 01       	movw	r16, r26
   195b2:	ed 30       	cpi	r30, 0x0D	; 13
   195b4:	68 f0       	brcs	.+26     	; 0x195d0 <_Z24Plot_Status_List_Monitorv+0x5de>
   195b6:	f0 e0       	ldi	r31, 0x00	; 0
   195b8:	e8 51       	subi	r30, 0x18	; 24
   195ba:	fa 4e       	sbci	r31, 0xEA	; 234
   195bc:	61 e0       	ldi	r22, 0x01	; 1
   195be:	80 81       	ld	r24, Z
   195c0:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   195c4:	68 ec       	ldi	r22, 0xC8	; 200
   195c6:	70 e0       	ldi	r23, 0x00	; 0
   195c8:	80 e0       	ldi	r24, 0x00	; 0
   195ca:	90 e0       	ldi	r25, 0x00	; 0
   195cc:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   195d0:	a0 16       	cp	r10, r16
   195d2:	b1 06       	cpc	r11, r17
   195d4:	59 f7       	brne	.-42     	; 0x195ac <_Z24Plot_Status_List_Monitorv+0x5ba>
   195d6:	66 cf       	rjmp	.-308    	; 0x194a4 <_Z24Plot_Status_List_Monitorv+0x4b2>
   195d8:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   195dc:	81 30       	cpi	r24, 0x01	; 1
   195de:	41 f4       	brne	.+16     	; 0x195f0 <_Z24Plot_Status_List_Monitorv+0x5fe>
   195e0:	6b e3       	ldi	r22, 0x3B	; 59
   195e2:	79 e2       	ldi	r23, 0x29	; 41
   195e4:	8f e6       	ldi	r24, 0x6F	; 111
   195e6:	96 e1       	ldi	r25, 0x16	; 22
   195e8:	c8 d5       	rcall	.+2960   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   195ea:	8f e6       	ldi	r24, 0x6F	; 111
   195ec:	96 e1       	ldi	r25, 0x16	; 22
   195ee:	c0 d3       	rcall	.+1920   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   195f0:	b2 e0       	ldi	r27, 0x02	; 2
   195f2:	8b 12       	cpse	r8, r27
   195f4:	3b c0       	rjmp	.+118    	; 0x1966c <_Z24Plot_Status_List_Monitorv+0x67a>
   195f6:	86 e0       	ldi	r24, 0x06	; 6
   195f8:	80 93 63 15 	sts	0x1563, r24	; 0x801563 <_sPump_Parameter+0x8>
   195fc:	84 e6       	ldi	r24, 0x64	; 100
   195fe:	90 e0       	ldi	r25, 0x00	; 0
   19600:	90 93 9c 0c 	sts	0x0C9C, r25	; 0x800c9c <_gfault_Occure+0x1>
   19604:	80 93 9b 0c 	sts	0x0C9B, r24	; 0x800c9b <_gfault_Occure>
   19608:	80 91 1c 0c 	lds	r24, 0x0C1C	; 0x800c1c <_sGSM_Query>
   1960c:	90 91 1d 0c 	lds	r25, 0x0C1D	; 0x800c1d <_sGSM_Query+0x1>
   19610:	a0 91 1e 0c 	lds	r26, 0x0C1E	; 0x800c1e <_sGSM_Query+0x2>
   19614:	b0 91 1f 0c 	lds	r27, 0x0C1F	; 0x800c1f <_sGSM_Query+0x3>
   19618:	a0 62       	ori	r26, 0x20	; 32
   1961a:	80 93 1c 0c 	sts	0x0C1C, r24	; 0x800c1c <_sGSM_Query>
   1961e:	90 93 1d 0c 	sts	0x0C1D, r25	; 0x800c1d <_sGSM_Query+0x1>
   19622:	a0 93 1e 0c 	sts	0x0C1E, r26	; 0x800c1e <_sGSM_Query+0x2>
   19626:	b0 93 1f 0c 	sts	0x0C1F, r27	; 0x800c1f <_sGSM_Query+0x3>
   1962a:	d0 92 17 16 	sts	0x1617, r13	; 0x801617 <_sRuble_Parameters+0xb2>
   1962e:	80 91 7d 15 	lds	r24, 0x157D	; 0x80157d <_sRuble_Parameters+0x18>
   19632:	90 91 7e 15 	lds	r25, 0x157E	; 0x80157e <_sRuble_Parameters+0x19>
   19636:	82 60       	ori	r24, 0x02	; 2
   19638:	90 93 7e 15 	sts	0x157E, r25	; 0x80157e <_sRuble_Parameters+0x19>
   1963c:	80 93 7d 15 	sts	0x157D, r24	; 0x80157d <_sRuble_Parameters+0x18>
   19640:	d8 01       	movw	r26, r16
   19642:	ed 91       	ld	r30, X+
   19644:	8d 01       	movw	r16, r26
   19646:	ed 30       	cpi	r30, 0x0D	; 13
   19648:	68 f0       	brcs	.+26     	; 0x19664 <_Z24Plot_Status_List_Monitorv+0x672>
   1964a:	f0 e0       	ldi	r31, 0x00	; 0
   1964c:	e8 51       	subi	r30, 0x18	; 24
   1964e:	fa 4e       	sbci	r31, 0xEA	; 234
   19650:	61 e0       	ldi	r22, 0x01	; 1
   19652:	80 81       	ld	r24, Z
   19654:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   19658:	68 ec       	ldi	r22, 0xC8	; 200
   1965a:	70 e0       	ldi	r23, 0x00	; 0
   1965c:	80 e0       	ldi	r24, 0x00	; 0
   1965e:	90 e0       	ldi	r25, 0x00	; 0
   19660:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   19664:	a0 16       	cp	r10, r16
   19666:	b1 06       	cpc	r11, r17
   19668:	59 f7       	brne	.-42     	; 0x19640 <_Z24Plot_Status_List_Monitorv+0x64e>
   1966a:	1c cf       	rjmp	.-456    	; 0x194a4 <_Z24Plot_Status_List_Monitorv+0x4b2>
   1966c:	68 ee       	ldi	r22, 0xE8	; 232
   1966e:	73 e0       	ldi	r23, 0x03	; 3
   19670:	80 e0       	ldi	r24, 0x00	; 0
   19672:	90 e0       	ldi	r25, 0x00	; 0
   19674:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   19678:	b3 e0       	ldi	r27, 0x03	; 3
   1967a:	8b 12       	cpse	r8, r27
   1967c:	47 ce       	rjmp	.-882    	; 0x1930c <_Z24Plot_Status_List_Monitorv+0x31a>
   1967e:	12 c0       	rjmp	.+36     	; 0x196a4 <_Z24Plot_Status_List_Monitorv+0x6b2>
   19680:	83 ef       	ldi	r24, 0xF3	; 243
   19682:	87 0d       	add	r24, r7
   19684:	87 35       	cpi	r24, 0x57	; 87
   19686:	70 f4       	brcc	.+28     	; 0x196a4 <_Z24Plot_Status_List_Monitorv+0x6b2>
   19688:	e7 2d       	mov	r30, r7
   1968a:	f0 e0       	ldi	r31, 0x00	; 0
   1968c:	e8 51       	subi	r30, 0x18	; 24
   1968e:	fa 4e       	sbci	r31, 0xEA	; 234
   19690:	61 e0       	ldi	r22, 0x01	; 1
   19692:	80 81       	ld	r24, Z
   19694:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   19698:	68 ec       	ldi	r22, 0xC8	; 200
   1969a:	70 e0       	ldi	r23, 0x00	; 0
   1969c:	80 e0       	ldi	r24, 0x00	; 0
   1969e:	90 e0       	ldi	r25, 0x00	; 0
   196a0:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   196a4:	4a 14       	cp	r4, r10
   196a6:	5b 04       	cpc	r5, r11
   196a8:	09 f0       	breq	.+2      	; 0x196ac <_Z24Plot_Status_List_Monitorv+0x6ba>
   196aa:	6b cd       	rjmp	.-1322   	; 0x19182 <_Z24Plot_Status_List_Monitorv+0x190>
   196ac:	f7 01       	movw	r30, r14
   196ae:	e8 5d       	subi	r30, 0xD8	; 216
   196b0:	f9 4e       	sbci	r31, 0xE9	; 233
   196b2:	10 82       	st	Z, r1
   196b4:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   196b8:	81 30       	cpi	r24, 0x01	; 1
   196ba:	a1 f4       	brne	.+40     	; 0x196e4 <_Z24Plot_Status_List_Monitorv+0x6f2>
   196bc:	6c e1       	ldi	r22, 0x1C	; 28
   196be:	79 e2       	ldi	r23, 0x29	; 41
   196c0:	8f e6       	ldi	r24, 0x6F	; 111
   196c2:	96 e1       	ldi	r25, 0x16	; 22
   196c4:	5a d5       	rcall	.+2740   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
   196c6:	8f e6       	ldi	r24, 0x6F	; 111
   196c8:	96 e1       	ldi	r25, 0x16	; 22
   196ca:	52 d3       	rcall	.+1700   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
   196cc:	cc 24       	eor	r12, r12
   196ce:	c3 94       	inc	r12
   196d0:	09 c0       	rjmp	.+18     	; 0x196e4 <_Z24Plot_Status_List_Monitorv+0x6f2>
   196d2:	2f ef       	ldi	r18, 0xFF	; 255
   196d4:	e2 1a       	sub	r14, r18
   196d6:	f2 0a       	sbc	r15, r18
   196d8:	3e e0       	ldi	r19, 0x0E	; 14
   196da:	e3 16       	cp	r14, r19
   196dc:	f1 04       	cpc	r15, r1
   196de:	09 f0       	breq	.+2      	; 0x196e2 <_Z24Plot_Status_List_Monitorv+0x6f0>
   196e0:	b8 cc       	rjmp	.-1680   	; 0x19052 <_Z24Plot_Status_List_Monitorv+0x60>
   196e2:	01 c0       	rjmp	.+2      	; 0x196e6 <_Z24Plot_Status_List_Monitorv+0x6f4>
   196e4:	8c 2d       	mov	r24, r12
   196e6:	29 96       	adiw	r28, 0x09	; 9
   196e8:	0f b6       	in	r0, 0x3f	; 63
   196ea:	f8 94       	cli
   196ec:	de bf       	out	0x3e, r29	; 62
   196ee:	0f be       	out	0x3f, r0	; 63
   196f0:	cd bf       	out	0x3d, r28	; 61
   196f2:	df 91       	pop	r29
   196f4:	cf 91       	pop	r28
   196f6:	1f 91       	pop	r17
   196f8:	0f 91       	pop	r16
   196fa:	ff 90       	pop	r15
   196fc:	ef 90       	pop	r14
   196fe:	df 90       	pop	r13
   19700:	cf 90       	pop	r12
   19702:	bf 90       	pop	r11
   19704:	af 90       	pop	r10
   19706:	9f 90       	pop	r9
   19708:	8f 90       	pop	r8
   1970a:	7f 90       	pop	r7
   1970c:	6f 90       	pop	r6
   1970e:	5f 90       	pop	r5
   19710:	4f 90       	pop	r4
   19712:	3f 90       	pop	r3
   19714:	2f 90       	pop	r2
   19716:	08 95       	ret

00019718 <_Z14Lora_Operationv>:
		}break;
	}
}

void Lora_Operation(void)
{
   19718:	0f 93       	push	r16
   1971a:	1f 93       	push	r17
   1971c:	cf 93       	push	r28
   1971e:	df 93       	push	r29
   19720:	00 d0       	rcall	.+0      	; 0x19722 <_Z14Lora_Operationv+0xa>
   19722:	00 d0       	rcall	.+0      	; 0x19724 <_Z14Lora_Operationv+0xc>
   19724:	cd b7       	in	r28, 0x3d	; 61
   19726:	de b7       	in	r29, 0x3e	; 62
	unsigned char temp_id[_kVALVE_ID_LEN],i;
	
	if(_kLORA_DATA_AVAIALABLE())     /* check weather data is available */
   19728:	0e 94 06 64 	call	0xc80c	; 0xc80c <_Z14Lora_Availablev>
   1972c:	88 23       	and	r24, r24
   1972e:	09 f4       	brne	.+2      	; 0x19732 <_Z14Lora_Operationv+0x1a>
   19730:	45 c0       	rjmp	.+138    	; 0x197bc <_Z14Lora_Operationv+0xa4>
	{
		if(_sRuble_Parameters.Debug_Mode == _kSET)
   19732:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   19736:	81 30       	cpi	r24, 0x01	; 1
   19738:	41 f4       	brne	.+16     	; 0x1974a <_Z14Lora_Operationv+0x32>
		{
			_kSERAIL_MON_WRITE("Lora Data Recived");                /* for debugging purpose */
   1973a:	62 e4       	ldi	r22, 0x42	; 66
   1973c:	7b e3       	ldi	r23, 0x3B	; 59
   1973e:	8f e6       	ldi	r24, 0x6F	; 111
   19740:	96 e1       	ldi	r25, 0x16	; 22
   19742:	1b d5       	rcall	.+2614   	; 0x1a17a <_ZN5Print7printlnEPK19__FlashStringHelper>
			_kSERIAL_MON_CLEAR();
   19744:	8f e6       	ldi	r24, 0x6F	; 111
   19746:	96 e1       	ldi	r25, 0x16	; 22
   19748:	13 d3       	rcall	.+1574   	; 0x19d70 <_ZN14HardwareSerial5flushEv>
		}
		
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
   1974a:	0e 94 0a 64 	call	0xc814	; 0xc814 <_Z17Lora_Data_Receivev>
   1974e:	88 23       	and	r24, r24
   19750:	a9 f1       	breq	.+106    	; 0x197bc <_Z14Lora_Operationv+0xa4>
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
   19752:	80 91 55 16 	lds	r24, 0x1655	; 0x801655 <_sRuble_Parameters+0xf0>
   19756:	81 30       	cpi	r24, 0x01	; 1
   19758:	11 f4       	brne	.+4      	; 0x1975e <_Z14Lora_Operationv+0x46>
   1975a:	10 e0       	ldi	r17, 0x00	; 0
   1975c:	08 c0       	rjmp	.+16     	; 0x1976e <_Z14Lora_Operationv+0x56>
   1975e:	a0 ec       	ldi	r26, 0xC0	; 192
   19760:	b5 e1       	ldi	r27, 0x15	; 21
   19762:	fe 01       	movw	r30, r28
   19764:	31 96       	adiw	r30, 0x01	; 1
   19766:	ce 01       	movw	r24, r28
   19768:	07 96       	adiw	r24, 0x07	; 7
   1976a:	8f 01       	movw	r16, r30
   1976c:	0c c0       	rjmp	.+24     	; 0x19786 <_Z14Lora_Operationv+0x6e>
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   1976e:	e1 2f       	mov	r30, r17
   19770:	f0 e0       	ldi	r31, 0x00	; 0
   19772:	e0 54       	subi	r30, 0x40	; 64
   19774:	fa 4e       	sbci	r31, 0xEA	; 234
   19776:	60 81       	ld	r22, Z
   19778:	66 23       	and	r22, r22
   1977a:	89 f3       	breq	.-30     	; 0x1975e <_Z14Lora_Operationv+0x46>
				{
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
   1977c:	8f e6       	ldi	r24, 0x6F	; 111
   1977e:	96 e1       	ldi	r25, 0x16	; 22
   19780:	ad d2       	rcall	.+1370   	; 0x19cdc <_ZN14HardwareSerial5writeEh>
		if(_kLORA_RECV_DATA())            /* read the data and check weather it received successfully or not */
		{
			/************************************ print the data recieved data ************************************/
			if(_sRuble_Parameters.Debug_Mode == _kSET)
			{
				for(i=0;_sRuble_Parameters.Lora_Data_Rx[i] !=0;i++)
   19782:	1f 5f       	subi	r17, 0xFF	; 255
   19784:	f4 cf       	rjmp	.-24     	; 0x1976e <_Z14Lora_Operationv+0x56>
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
   19786:	2d 91       	ld	r18, X+
   19788:	21 93       	st	Z+, r18
					_kSERIAL_MON_WRITE(_sRuble_Parameters.Lora_Data_Rx[i]);
				}
			}
			
			/* copy the id */
			for(i=0;i<_kVALVE_ID_LEN;i++)
   1978a:	e8 17       	cp	r30, r24
   1978c:	f9 07       	cpc	r31, r25
   1978e:	d9 f7       	brne	.-10     	; 0x19786 <_Z14Lora_Operationv+0x6e>
			{
				temp_id[i] = _sRuble_Parameters.Lora_Data_Rx[i];   /* copy each byte one by one */
			}
			
			if(!Update_Lira_Sensor_Data(temp_id))    /* check weather is lira node has send the packet */
   19790:	c8 01       	movw	r24, r16
   19792:	0e 94 13 7d 	call	0xfa26	; 0xfa26 <_Z23Update_Lira_Sensor_DataPh>
   19796:	81 11       	cpse	r24, r1
   19798:	11 c0       	rjmp	.+34     	; 0x197bc <_Z14Lora_Operationv+0xa4>
			{
				if(!Update_Euro_Valve_Data(temp_id))   /* check weather EURO valve have sent the packet */
   1979a:	c8 01       	movw	r24, r16
   1979c:	0e 94 8e 5b 	call	0xb71c	; 0xb71c <_Z22Update_Euro_Valve_DataPh>
   197a0:	81 11       	cpse	r24, r1
   197a2:	0c c0       	rjmp	.+24     	; 0x197bc <_Z14Lora_Operationv+0xa4>
				{
					if(!Update_Wireless_Pump_Data(temp_id))
   197a4:	c8 01       	movw	r24, r16
   197a6:	0e 94 7e 5e 	call	0xbcfc	; 0xbcfc <_Z25Update_Wireless_Pump_DataPh>
   197aa:	81 11       	cpse	r24, r1
   197ac:	07 c0       	rjmp	.+14     	; 0x197bc <_Z14Lora_Operationv+0xa4>
					{
						memset(_sRuble_Parameters.Lora_Data_Rx,0,sizeof(_sRuble_Parameters.Lora_Data_Rx));  /* discard the package */
   197ae:	84 e1       	ldi	r24, 0x14	; 20
   197b0:	e0 ec       	ldi	r30, 0xC0	; 192
   197b2:	f5 e1       	ldi	r31, 0x15	; 21
   197b4:	df 01       	movw	r26, r30
   197b6:	1d 92       	st	X+, r1
   197b8:	8a 95       	dec	r24
   197ba:	e9 f7       	brne	.-6      	; 0x197b6 <_Z14Lora_Operationv+0x9e>
					}	
				}
			}
		}
	}
}
   197bc:	26 96       	adiw	r28, 0x06	; 6
   197be:	0f b6       	in	r0, 0x3f	; 63
   197c0:	f8 94       	cli
   197c2:	de bf       	out	0x3e, r29	; 62
   197c4:	0f be       	out	0x3f, r0	; 63
   197c6:	cd bf       	out	0x3d, r28	; 61
   197c8:	df 91       	pop	r29
   197ca:	cf 91       	pop	r28
   197cc:	1f 91       	pop	r17
   197ce:	0f 91       	pop	r16
   197d0:	08 95       	ret

000197d2 <__subsf3>:
   197d2:	50 58       	subi	r21, 0x80	; 128

000197d4 <__addsf3>:
   197d4:	bb 27       	eor	r27, r27
   197d6:	aa 27       	eor	r26, r26
   197d8:	0e d0       	rcall	.+28     	; 0x197f6 <__addsf3x>
   197da:	70 c1       	rjmp	.+736    	; 0x19abc <__fp_round>
   197dc:	61 d1       	rcall	.+706    	; 0x19aa0 <__fp_pscA>
   197de:	30 f0       	brcs	.+12     	; 0x197ec <__addsf3+0x18>
   197e0:	66 d1       	rcall	.+716    	; 0x19aae <__fp_pscB>
   197e2:	20 f0       	brcs	.+8      	; 0x197ec <__addsf3+0x18>
   197e4:	31 f4       	brne	.+12     	; 0x197f2 <__addsf3+0x1e>
   197e6:	9f 3f       	cpi	r25, 0xFF	; 255
   197e8:	11 f4       	brne	.+4      	; 0x197ee <__addsf3+0x1a>
   197ea:	1e f4       	brtc	.+6      	; 0x197f2 <__addsf3+0x1e>
   197ec:	56 c1       	rjmp	.+684    	; 0x19a9a <__fp_nan>
   197ee:	0e f4       	brtc	.+2      	; 0x197f2 <__addsf3+0x1e>
   197f0:	e0 95       	com	r30
   197f2:	e7 fb       	bst	r30, 7
   197f4:	4c c1       	rjmp	.+664    	; 0x19a8e <__fp_inf>

000197f6 <__addsf3x>:
   197f6:	e9 2f       	mov	r30, r25
   197f8:	72 d1       	rcall	.+740    	; 0x19ade <__fp_split3>
   197fa:	80 f3       	brcs	.-32     	; 0x197dc <__addsf3+0x8>
   197fc:	ba 17       	cp	r27, r26
   197fe:	62 07       	cpc	r22, r18
   19800:	73 07       	cpc	r23, r19
   19802:	84 07       	cpc	r24, r20
   19804:	95 07       	cpc	r25, r21
   19806:	18 f0       	brcs	.+6      	; 0x1980e <__addsf3x+0x18>
   19808:	71 f4       	brne	.+28     	; 0x19826 <__addsf3x+0x30>
   1980a:	9e f5       	brtc	.+102    	; 0x19872 <__addsf3x+0x7c>
   1980c:	8a c1       	rjmp	.+788    	; 0x19b22 <__fp_zero>
   1980e:	0e f4       	brtc	.+2      	; 0x19812 <__addsf3x+0x1c>
   19810:	e0 95       	com	r30
   19812:	0b 2e       	mov	r0, r27
   19814:	ba 2f       	mov	r27, r26
   19816:	a0 2d       	mov	r26, r0
   19818:	0b 01       	movw	r0, r22
   1981a:	b9 01       	movw	r22, r18
   1981c:	90 01       	movw	r18, r0
   1981e:	0c 01       	movw	r0, r24
   19820:	ca 01       	movw	r24, r20
   19822:	a0 01       	movw	r20, r0
   19824:	11 24       	eor	r1, r1
   19826:	ff 27       	eor	r31, r31
   19828:	59 1b       	sub	r21, r25
   1982a:	99 f0       	breq	.+38     	; 0x19852 <__addsf3x+0x5c>
   1982c:	59 3f       	cpi	r21, 0xF9	; 249
   1982e:	50 f4       	brcc	.+20     	; 0x19844 <__addsf3x+0x4e>
   19830:	50 3e       	cpi	r21, 0xE0	; 224
   19832:	68 f1       	brcs	.+90     	; 0x1988e <__addsf3x+0x98>
   19834:	1a 16       	cp	r1, r26
   19836:	f0 40       	sbci	r31, 0x00	; 0
   19838:	a2 2f       	mov	r26, r18
   1983a:	23 2f       	mov	r18, r19
   1983c:	34 2f       	mov	r19, r20
   1983e:	44 27       	eor	r20, r20
   19840:	58 5f       	subi	r21, 0xF8	; 248
   19842:	f3 cf       	rjmp	.-26     	; 0x1982a <__addsf3x+0x34>
   19844:	46 95       	lsr	r20
   19846:	37 95       	ror	r19
   19848:	27 95       	ror	r18
   1984a:	a7 95       	ror	r26
   1984c:	f0 40       	sbci	r31, 0x00	; 0
   1984e:	53 95       	inc	r21
   19850:	c9 f7       	brne	.-14     	; 0x19844 <__addsf3x+0x4e>
   19852:	7e f4       	brtc	.+30     	; 0x19872 <__addsf3x+0x7c>
   19854:	1f 16       	cp	r1, r31
   19856:	ba 0b       	sbc	r27, r26
   19858:	62 0b       	sbc	r22, r18
   1985a:	73 0b       	sbc	r23, r19
   1985c:	84 0b       	sbc	r24, r20
   1985e:	ba f0       	brmi	.+46     	; 0x1988e <__addsf3x+0x98>
   19860:	91 50       	subi	r25, 0x01	; 1
   19862:	a1 f0       	breq	.+40     	; 0x1988c <__addsf3x+0x96>
   19864:	ff 0f       	add	r31, r31
   19866:	bb 1f       	adc	r27, r27
   19868:	66 1f       	adc	r22, r22
   1986a:	77 1f       	adc	r23, r23
   1986c:	88 1f       	adc	r24, r24
   1986e:	c2 f7       	brpl	.-16     	; 0x19860 <__addsf3x+0x6a>
   19870:	0e c0       	rjmp	.+28     	; 0x1988e <__addsf3x+0x98>
   19872:	ba 0f       	add	r27, r26
   19874:	62 1f       	adc	r22, r18
   19876:	73 1f       	adc	r23, r19
   19878:	84 1f       	adc	r24, r20
   1987a:	48 f4       	brcc	.+18     	; 0x1988e <__addsf3x+0x98>
   1987c:	87 95       	ror	r24
   1987e:	77 95       	ror	r23
   19880:	67 95       	ror	r22
   19882:	b7 95       	ror	r27
   19884:	f7 95       	ror	r31
   19886:	9e 3f       	cpi	r25, 0xFE	; 254
   19888:	08 f0       	brcs	.+2      	; 0x1988c <__addsf3x+0x96>
   1988a:	b3 cf       	rjmp	.-154    	; 0x197f2 <__addsf3+0x1e>
   1988c:	93 95       	inc	r25
   1988e:	88 0f       	add	r24, r24
   19890:	08 f0       	brcs	.+2      	; 0x19894 <__addsf3x+0x9e>
   19892:	99 27       	eor	r25, r25
   19894:	ee 0f       	add	r30, r30
   19896:	97 95       	ror	r25
   19898:	87 95       	ror	r24
   1989a:	08 95       	ret

0001989c <__cmpsf2>:
   1989c:	d4 d0       	rcall	.+424    	; 0x19a46 <__fp_cmp>
   1989e:	08 f4       	brcc	.+2      	; 0x198a2 <__cmpsf2+0x6>
   198a0:	81 e0       	ldi	r24, 0x01	; 1
   198a2:	08 95       	ret

000198a4 <__divsf3>:
   198a4:	0c d0       	rcall	.+24     	; 0x198be <__divsf3x>
   198a6:	0a c1       	rjmp	.+532    	; 0x19abc <__fp_round>
   198a8:	02 d1       	rcall	.+516    	; 0x19aae <__fp_pscB>
   198aa:	40 f0       	brcs	.+16     	; 0x198bc <__divsf3+0x18>
   198ac:	f9 d0       	rcall	.+498    	; 0x19aa0 <__fp_pscA>
   198ae:	30 f0       	brcs	.+12     	; 0x198bc <__divsf3+0x18>
   198b0:	21 f4       	brne	.+8      	; 0x198ba <__divsf3+0x16>
   198b2:	5f 3f       	cpi	r21, 0xFF	; 255
   198b4:	19 f0       	breq	.+6      	; 0x198bc <__divsf3+0x18>
   198b6:	eb c0       	rjmp	.+470    	; 0x19a8e <__fp_inf>
   198b8:	51 11       	cpse	r21, r1
   198ba:	34 c1       	rjmp	.+616    	; 0x19b24 <__fp_szero>
   198bc:	ee c0       	rjmp	.+476    	; 0x19a9a <__fp_nan>

000198be <__divsf3x>:
   198be:	0f d1       	rcall	.+542    	; 0x19ade <__fp_split3>
   198c0:	98 f3       	brcs	.-26     	; 0x198a8 <__divsf3+0x4>

000198c2 <__divsf3_pse>:
   198c2:	99 23       	and	r25, r25
   198c4:	c9 f3       	breq	.-14     	; 0x198b8 <__divsf3+0x14>
   198c6:	55 23       	and	r21, r21
   198c8:	b1 f3       	breq	.-20     	; 0x198b6 <__divsf3+0x12>
   198ca:	95 1b       	sub	r25, r21
   198cc:	55 0b       	sbc	r21, r21
   198ce:	bb 27       	eor	r27, r27
   198d0:	aa 27       	eor	r26, r26
   198d2:	62 17       	cp	r22, r18
   198d4:	73 07       	cpc	r23, r19
   198d6:	84 07       	cpc	r24, r20
   198d8:	38 f0       	brcs	.+14     	; 0x198e8 <__divsf3_pse+0x26>
   198da:	9f 5f       	subi	r25, 0xFF	; 255
   198dc:	5f 4f       	sbci	r21, 0xFF	; 255
   198de:	22 0f       	add	r18, r18
   198e0:	33 1f       	adc	r19, r19
   198e2:	44 1f       	adc	r20, r20
   198e4:	aa 1f       	adc	r26, r26
   198e6:	a9 f3       	breq	.-22     	; 0x198d2 <__divsf3_pse+0x10>
   198e8:	33 d0       	rcall	.+102    	; 0x19950 <__divsf3_pse+0x8e>
   198ea:	0e 2e       	mov	r0, r30
   198ec:	3a f0       	brmi	.+14     	; 0x198fc <__divsf3_pse+0x3a>
   198ee:	e0 e8       	ldi	r30, 0x80	; 128
   198f0:	30 d0       	rcall	.+96     	; 0x19952 <__divsf3_pse+0x90>
   198f2:	91 50       	subi	r25, 0x01	; 1
   198f4:	50 40       	sbci	r21, 0x00	; 0
   198f6:	e6 95       	lsr	r30
   198f8:	00 1c       	adc	r0, r0
   198fa:	ca f7       	brpl	.-14     	; 0x198ee <__divsf3_pse+0x2c>
   198fc:	29 d0       	rcall	.+82     	; 0x19950 <__divsf3_pse+0x8e>
   198fe:	fe 2f       	mov	r31, r30
   19900:	27 d0       	rcall	.+78     	; 0x19950 <__divsf3_pse+0x8e>
   19902:	66 0f       	add	r22, r22
   19904:	77 1f       	adc	r23, r23
   19906:	88 1f       	adc	r24, r24
   19908:	bb 1f       	adc	r27, r27
   1990a:	26 17       	cp	r18, r22
   1990c:	37 07       	cpc	r19, r23
   1990e:	48 07       	cpc	r20, r24
   19910:	ab 07       	cpc	r26, r27
   19912:	b0 e8       	ldi	r27, 0x80	; 128
   19914:	09 f0       	breq	.+2      	; 0x19918 <__divsf3_pse+0x56>
   19916:	bb 0b       	sbc	r27, r27
   19918:	80 2d       	mov	r24, r0
   1991a:	bf 01       	movw	r22, r30
   1991c:	ff 27       	eor	r31, r31
   1991e:	93 58       	subi	r25, 0x83	; 131
   19920:	5f 4f       	sbci	r21, 0xFF	; 255
   19922:	2a f0       	brmi	.+10     	; 0x1992e <__divsf3_pse+0x6c>
   19924:	9e 3f       	cpi	r25, 0xFE	; 254
   19926:	51 05       	cpc	r21, r1
   19928:	68 f0       	brcs	.+26     	; 0x19944 <__divsf3_pse+0x82>
   1992a:	b1 c0       	rjmp	.+354    	; 0x19a8e <__fp_inf>
   1992c:	fb c0       	rjmp	.+502    	; 0x19b24 <__fp_szero>
   1992e:	5f 3f       	cpi	r21, 0xFF	; 255
   19930:	ec f3       	brlt	.-6      	; 0x1992c <__divsf3_pse+0x6a>
   19932:	98 3e       	cpi	r25, 0xE8	; 232
   19934:	dc f3       	brlt	.-10     	; 0x1992c <__divsf3_pse+0x6a>
   19936:	86 95       	lsr	r24
   19938:	77 95       	ror	r23
   1993a:	67 95       	ror	r22
   1993c:	b7 95       	ror	r27
   1993e:	f7 95       	ror	r31
   19940:	9f 5f       	subi	r25, 0xFF	; 255
   19942:	c9 f7       	brne	.-14     	; 0x19936 <__divsf3_pse+0x74>
   19944:	88 0f       	add	r24, r24
   19946:	91 1d       	adc	r25, r1
   19948:	96 95       	lsr	r25
   1994a:	87 95       	ror	r24
   1994c:	97 f9       	bld	r25, 7
   1994e:	08 95       	ret
   19950:	e1 e0       	ldi	r30, 0x01	; 1
   19952:	66 0f       	add	r22, r22
   19954:	77 1f       	adc	r23, r23
   19956:	88 1f       	adc	r24, r24
   19958:	bb 1f       	adc	r27, r27
   1995a:	62 17       	cp	r22, r18
   1995c:	73 07       	cpc	r23, r19
   1995e:	84 07       	cpc	r24, r20
   19960:	ba 07       	cpc	r27, r26
   19962:	20 f0       	brcs	.+8      	; 0x1996c <__divsf3_pse+0xaa>
   19964:	62 1b       	sub	r22, r18
   19966:	73 0b       	sbc	r23, r19
   19968:	84 0b       	sbc	r24, r20
   1996a:	ba 0b       	sbc	r27, r26
   1996c:	ee 1f       	adc	r30, r30
   1996e:	88 f7       	brcc	.-30     	; 0x19952 <__divsf3_pse+0x90>
   19970:	e0 95       	com	r30
   19972:	08 95       	ret

00019974 <__fixunssfsi>:
   19974:	bc d0       	rcall	.+376    	; 0x19aee <__fp_splitA>
   19976:	88 f0       	brcs	.+34     	; 0x1999a <__fixunssfsi+0x26>
   19978:	9f 57       	subi	r25, 0x7F	; 127
   1997a:	90 f0       	brcs	.+36     	; 0x199a0 <__fixunssfsi+0x2c>
   1997c:	b9 2f       	mov	r27, r25
   1997e:	99 27       	eor	r25, r25
   19980:	b7 51       	subi	r27, 0x17	; 23
   19982:	a0 f0       	brcs	.+40     	; 0x199ac <__fixunssfsi+0x38>
   19984:	d1 f0       	breq	.+52     	; 0x199ba <__fixunssfsi+0x46>
   19986:	66 0f       	add	r22, r22
   19988:	77 1f       	adc	r23, r23
   1998a:	88 1f       	adc	r24, r24
   1998c:	99 1f       	adc	r25, r25
   1998e:	1a f0       	brmi	.+6      	; 0x19996 <__fixunssfsi+0x22>
   19990:	ba 95       	dec	r27
   19992:	c9 f7       	brne	.-14     	; 0x19986 <__fixunssfsi+0x12>
   19994:	12 c0       	rjmp	.+36     	; 0x199ba <__fixunssfsi+0x46>
   19996:	b1 30       	cpi	r27, 0x01	; 1
   19998:	81 f0       	breq	.+32     	; 0x199ba <__fixunssfsi+0x46>
   1999a:	c3 d0       	rcall	.+390    	; 0x19b22 <__fp_zero>
   1999c:	b1 e0       	ldi	r27, 0x01	; 1
   1999e:	08 95       	ret
   199a0:	c0 c0       	rjmp	.+384    	; 0x19b22 <__fp_zero>
   199a2:	67 2f       	mov	r22, r23
   199a4:	78 2f       	mov	r23, r24
   199a6:	88 27       	eor	r24, r24
   199a8:	b8 5f       	subi	r27, 0xF8	; 248
   199aa:	39 f0       	breq	.+14     	; 0x199ba <__fixunssfsi+0x46>
   199ac:	b9 3f       	cpi	r27, 0xF9	; 249
   199ae:	cc f3       	brlt	.-14     	; 0x199a2 <__fixunssfsi+0x2e>
   199b0:	86 95       	lsr	r24
   199b2:	77 95       	ror	r23
   199b4:	67 95       	ror	r22
   199b6:	b3 95       	inc	r27
   199b8:	d9 f7       	brne	.-10     	; 0x199b0 <__fixunssfsi+0x3c>
   199ba:	3e f4       	brtc	.+14     	; 0x199ca <__fixunssfsi+0x56>
   199bc:	90 95       	com	r25
   199be:	80 95       	com	r24
   199c0:	70 95       	com	r23
   199c2:	61 95       	neg	r22
   199c4:	7f 4f       	sbci	r23, 0xFF	; 255
   199c6:	8f 4f       	sbci	r24, 0xFF	; 255
   199c8:	9f 4f       	sbci	r25, 0xFF	; 255
   199ca:	08 95       	ret

000199cc <__floatunsisf>:
   199cc:	e8 94       	clt
   199ce:	09 c0       	rjmp	.+18     	; 0x199e2 <__floatsisf+0x12>

000199d0 <__floatsisf>:
   199d0:	97 fb       	bst	r25, 7
   199d2:	3e f4       	brtc	.+14     	; 0x199e2 <__floatsisf+0x12>
   199d4:	90 95       	com	r25
   199d6:	80 95       	com	r24
   199d8:	70 95       	com	r23
   199da:	61 95       	neg	r22
   199dc:	7f 4f       	sbci	r23, 0xFF	; 255
   199de:	8f 4f       	sbci	r24, 0xFF	; 255
   199e0:	9f 4f       	sbci	r25, 0xFF	; 255
   199e2:	99 23       	and	r25, r25
   199e4:	a9 f0       	breq	.+42     	; 0x19a10 <__floatsisf+0x40>
   199e6:	f9 2f       	mov	r31, r25
   199e8:	96 e9       	ldi	r25, 0x96	; 150
   199ea:	bb 27       	eor	r27, r27
   199ec:	93 95       	inc	r25
   199ee:	f6 95       	lsr	r31
   199f0:	87 95       	ror	r24
   199f2:	77 95       	ror	r23
   199f4:	67 95       	ror	r22
   199f6:	b7 95       	ror	r27
   199f8:	f1 11       	cpse	r31, r1
   199fa:	f8 cf       	rjmp	.-16     	; 0x199ec <__floatsisf+0x1c>
   199fc:	fa f4       	brpl	.+62     	; 0x19a3c <__floatsisf+0x6c>
   199fe:	bb 0f       	add	r27, r27
   19a00:	11 f4       	brne	.+4      	; 0x19a06 <__floatsisf+0x36>
   19a02:	60 ff       	sbrs	r22, 0
   19a04:	1b c0       	rjmp	.+54     	; 0x19a3c <__floatsisf+0x6c>
   19a06:	6f 5f       	subi	r22, 0xFF	; 255
   19a08:	7f 4f       	sbci	r23, 0xFF	; 255
   19a0a:	8f 4f       	sbci	r24, 0xFF	; 255
   19a0c:	9f 4f       	sbci	r25, 0xFF	; 255
   19a0e:	16 c0       	rjmp	.+44     	; 0x19a3c <__floatsisf+0x6c>
   19a10:	88 23       	and	r24, r24
   19a12:	11 f0       	breq	.+4      	; 0x19a18 <__floatsisf+0x48>
   19a14:	96 e9       	ldi	r25, 0x96	; 150
   19a16:	11 c0       	rjmp	.+34     	; 0x19a3a <__floatsisf+0x6a>
   19a18:	77 23       	and	r23, r23
   19a1a:	21 f0       	breq	.+8      	; 0x19a24 <__floatsisf+0x54>
   19a1c:	9e e8       	ldi	r25, 0x8E	; 142
   19a1e:	87 2f       	mov	r24, r23
   19a20:	76 2f       	mov	r23, r22
   19a22:	05 c0       	rjmp	.+10     	; 0x19a2e <__floatsisf+0x5e>
   19a24:	66 23       	and	r22, r22
   19a26:	71 f0       	breq	.+28     	; 0x19a44 <__floatsisf+0x74>
   19a28:	96 e8       	ldi	r25, 0x86	; 134
   19a2a:	86 2f       	mov	r24, r22
   19a2c:	70 e0       	ldi	r23, 0x00	; 0
   19a2e:	60 e0       	ldi	r22, 0x00	; 0
   19a30:	2a f0       	brmi	.+10     	; 0x19a3c <__floatsisf+0x6c>
   19a32:	9a 95       	dec	r25
   19a34:	66 0f       	add	r22, r22
   19a36:	77 1f       	adc	r23, r23
   19a38:	88 1f       	adc	r24, r24
   19a3a:	da f7       	brpl	.-10     	; 0x19a32 <__floatsisf+0x62>
   19a3c:	88 0f       	add	r24, r24
   19a3e:	96 95       	lsr	r25
   19a40:	87 95       	ror	r24
   19a42:	97 f9       	bld	r25, 7
   19a44:	08 95       	ret

00019a46 <__fp_cmp>:
   19a46:	99 0f       	add	r25, r25
   19a48:	00 08       	sbc	r0, r0
   19a4a:	55 0f       	add	r21, r21
   19a4c:	aa 0b       	sbc	r26, r26
   19a4e:	e0 e8       	ldi	r30, 0x80	; 128
   19a50:	fe ef       	ldi	r31, 0xFE	; 254
   19a52:	16 16       	cp	r1, r22
   19a54:	17 06       	cpc	r1, r23
   19a56:	e8 07       	cpc	r30, r24
   19a58:	f9 07       	cpc	r31, r25
   19a5a:	c0 f0       	brcs	.+48     	; 0x19a8c <__fp_cmp+0x46>
   19a5c:	12 16       	cp	r1, r18
   19a5e:	13 06       	cpc	r1, r19
   19a60:	e4 07       	cpc	r30, r20
   19a62:	f5 07       	cpc	r31, r21
   19a64:	98 f0       	brcs	.+38     	; 0x19a8c <__fp_cmp+0x46>
   19a66:	62 1b       	sub	r22, r18
   19a68:	73 0b       	sbc	r23, r19
   19a6a:	84 0b       	sbc	r24, r20
   19a6c:	95 0b       	sbc	r25, r21
   19a6e:	39 f4       	brne	.+14     	; 0x19a7e <__fp_cmp+0x38>
   19a70:	0a 26       	eor	r0, r26
   19a72:	61 f0       	breq	.+24     	; 0x19a8c <__fp_cmp+0x46>
   19a74:	23 2b       	or	r18, r19
   19a76:	24 2b       	or	r18, r20
   19a78:	25 2b       	or	r18, r21
   19a7a:	21 f4       	brne	.+8      	; 0x19a84 <__fp_cmp+0x3e>
   19a7c:	08 95       	ret
   19a7e:	0a 26       	eor	r0, r26
   19a80:	09 f4       	brne	.+2      	; 0x19a84 <__fp_cmp+0x3e>
   19a82:	a1 40       	sbci	r26, 0x01	; 1
   19a84:	a6 95       	lsr	r26
   19a86:	8f ef       	ldi	r24, 0xFF	; 255
   19a88:	81 1d       	adc	r24, r1
   19a8a:	81 1d       	adc	r24, r1
   19a8c:	08 95       	ret

00019a8e <__fp_inf>:
   19a8e:	97 f9       	bld	r25, 7
   19a90:	9f 67       	ori	r25, 0x7F	; 127
   19a92:	80 e8       	ldi	r24, 0x80	; 128
   19a94:	70 e0       	ldi	r23, 0x00	; 0
   19a96:	60 e0       	ldi	r22, 0x00	; 0
   19a98:	08 95       	ret

00019a9a <__fp_nan>:
   19a9a:	9f ef       	ldi	r25, 0xFF	; 255
   19a9c:	80 ec       	ldi	r24, 0xC0	; 192
   19a9e:	08 95       	ret

00019aa0 <__fp_pscA>:
   19aa0:	00 24       	eor	r0, r0
   19aa2:	0a 94       	dec	r0
   19aa4:	16 16       	cp	r1, r22
   19aa6:	17 06       	cpc	r1, r23
   19aa8:	18 06       	cpc	r1, r24
   19aaa:	09 06       	cpc	r0, r25
   19aac:	08 95       	ret

00019aae <__fp_pscB>:
   19aae:	00 24       	eor	r0, r0
   19ab0:	0a 94       	dec	r0
   19ab2:	12 16       	cp	r1, r18
   19ab4:	13 06       	cpc	r1, r19
   19ab6:	14 06       	cpc	r1, r20
   19ab8:	05 06       	cpc	r0, r21
   19aba:	08 95       	ret

00019abc <__fp_round>:
   19abc:	09 2e       	mov	r0, r25
   19abe:	03 94       	inc	r0
   19ac0:	00 0c       	add	r0, r0
   19ac2:	11 f4       	brne	.+4      	; 0x19ac8 <__fp_round+0xc>
   19ac4:	88 23       	and	r24, r24
   19ac6:	52 f0       	brmi	.+20     	; 0x19adc <__fp_round+0x20>
   19ac8:	bb 0f       	add	r27, r27
   19aca:	40 f4       	brcc	.+16     	; 0x19adc <__fp_round+0x20>
   19acc:	bf 2b       	or	r27, r31
   19ace:	11 f4       	brne	.+4      	; 0x19ad4 <__fp_round+0x18>
   19ad0:	60 ff       	sbrs	r22, 0
   19ad2:	04 c0       	rjmp	.+8      	; 0x19adc <__fp_round+0x20>
   19ad4:	6f 5f       	subi	r22, 0xFF	; 255
   19ad6:	7f 4f       	sbci	r23, 0xFF	; 255
   19ad8:	8f 4f       	sbci	r24, 0xFF	; 255
   19ada:	9f 4f       	sbci	r25, 0xFF	; 255
   19adc:	08 95       	ret

00019ade <__fp_split3>:
   19ade:	57 fd       	sbrc	r21, 7
   19ae0:	90 58       	subi	r25, 0x80	; 128
   19ae2:	44 0f       	add	r20, r20
   19ae4:	55 1f       	adc	r21, r21
   19ae6:	59 f0       	breq	.+22     	; 0x19afe <__fp_splitA+0x10>
   19ae8:	5f 3f       	cpi	r21, 0xFF	; 255
   19aea:	71 f0       	breq	.+28     	; 0x19b08 <__fp_splitA+0x1a>
   19aec:	47 95       	ror	r20

00019aee <__fp_splitA>:
   19aee:	88 0f       	add	r24, r24
   19af0:	97 fb       	bst	r25, 7
   19af2:	99 1f       	adc	r25, r25
   19af4:	61 f0       	breq	.+24     	; 0x19b0e <__fp_splitA+0x20>
   19af6:	9f 3f       	cpi	r25, 0xFF	; 255
   19af8:	79 f0       	breq	.+30     	; 0x19b18 <__fp_splitA+0x2a>
   19afa:	87 95       	ror	r24
   19afc:	08 95       	ret
   19afe:	12 16       	cp	r1, r18
   19b00:	13 06       	cpc	r1, r19
   19b02:	14 06       	cpc	r1, r20
   19b04:	55 1f       	adc	r21, r21
   19b06:	f2 cf       	rjmp	.-28     	; 0x19aec <__fp_split3+0xe>
   19b08:	46 95       	lsr	r20
   19b0a:	f1 df       	rcall	.-30     	; 0x19aee <__fp_splitA>
   19b0c:	08 c0       	rjmp	.+16     	; 0x19b1e <__fp_splitA+0x30>
   19b0e:	16 16       	cp	r1, r22
   19b10:	17 06       	cpc	r1, r23
   19b12:	18 06       	cpc	r1, r24
   19b14:	99 1f       	adc	r25, r25
   19b16:	f1 cf       	rjmp	.-30     	; 0x19afa <__fp_splitA+0xc>
   19b18:	86 95       	lsr	r24
   19b1a:	71 05       	cpc	r23, r1
   19b1c:	61 05       	cpc	r22, r1
   19b1e:	08 94       	sec
   19b20:	08 95       	ret

00019b22 <__fp_zero>:
   19b22:	e8 94       	clt

00019b24 <__fp_szero>:
   19b24:	bb 27       	eor	r27, r27
   19b26:	66 27       	eor	r22, r22
   19b28:	77 27       	eor	r23, r23
   19b2a:	cb 01       	movw	r24, r22
   19b2c:	97 f9       	bld	r25, 7
   19b2e:	08 95       	ret

00019b30 <__gesf2>:
   19b30:	8a df       	rcall	.-236    	; 0x19a46 <__fp_cmp>
   19b32:	08 f4       	brcc	.+2      	; 0x19b36 <__gesf2+0x6>
   19b34:	8f ef       	ldi	r24, 0xFF	; 255
   19b36:	08 95       	ret

00019b38 <__mulsf3>:
   19b38:	0b d0       	rcall	.+22     	; 0x19b50 <__mulsf3x>
   19b3a:	c0 cf       	rjmp	.-128    	; 0x19abc <__fp_round>
   19b3c:	b1 df       	rcall	.-158    	; 0x19aa0 <__fp_pscA>
   19b3e:	28 f0       	brcs	.+10     	; 0x19b4a <__mulsf3+0x12>
   19b40:	b6 df       	rcall	.-148    	; 0x19aae <__fp_pscB>
   19b42:	18 f0       	brcs	.+6      	; 0x19b4a <__mulsf3+0x12>
   19b44:	95 23       	and	r25, r21
   19b46:	09 f0       	breq	.+2      	; 0x19b4a <__mulsf3+0x12>
   19b48:	a2 cf       	rjmp	.-188    	; 0x19a8e <__fp_inf>
   19b4a:	a7 cf       	rjmp	.-178    	; 0x19a9a <__fp_nan>
   19b4c:	11 24       	eor	r1, r1
   19b4e:	ea cf       	rjmp	.-44     	; 0x19b24 <__fp_szero>

00019b50 <__mulsf3x>:
   19b50:	c6 df       	rcall	.-116    	; 0x19ade <__fp_split3>
   19b52:	a0 f3       	brcs	.-24     	; 0x19b3c <__mulsf3+0x4>

00019b54 <__mulsf3_pse>:
   19b54:	95 9f       	mul	r25, r21
   19b56:	d1 f3       	breq	.-12     	; 0x19b4c <__mulsf3+0x14>
   19b58:	95 0f       	add	r25, r21
   19b5a:	50 e0       	ldi	r21, 0x00	; 0
   19b5c:	55 1f       	adc	r21, r21
   19b5e:	62 9f       	mul	r22, r18
   19b60:	f0 01       	movw	r30, r0
   19b62:	72 9f       	mul	r23, r18
   19b64:	bb 27       	eor	r27, r27
   19b66:	f0 0d       	add	r31, r0
   19b68:	b1 1d       	adc	r27, r1
   19b6a:	63 9f       	mul	r22, r19
   19b6c:	aa 27       	eor	r26, r26
   19b6e:	f0 0d       	add	r31, r0
   19b70:	b1 1d       	adc	r27, r1
   19b72:	aa 1f       	adc	r26, r26
   19b74:	64 9f       	mul	r22, r20
   19b76:	66 27       	eor	r22, r22
   19b78:	b0 0d       	add	r27, r0
   19b7a:	a1 1d       	adc	r26, r1
   19b7c:	66 1f       	adc	r22, r22
   19b7e:	82 9f       	mul	r24, r18
   19b80:	22 27       	eor	r18, r18
   19b82:	b0 0d       	add	r27, r0
   19b84:	a1 1d       	adc	r26, r1
   19b86:	62 1f       	adc	r22, r18
   19b88:	73 9f       	mul	r23, r19
   19b8a:	b0 0d       	add	r27, r0
   19b8c:	a1 1d       	adc	r26, r1
   19b8e:	62 1f       	adc	r22, r18
   19b90:	83 9f       	mul	r24, r19
   19b92:	a0 0d       	add	r26, r0
   19b94:	61 1d       	adc	r22, r1
   19b96:	22 1f       	adc	r18, r18
   19b98:	74 9f       	mul	r23, r20
   19b9a:	33 27       	eor	r19, r19
   19b9c:	a0 0d       	add	r26, r0
   19b9e:	61 1d       	adc	r22, r1
   19ba0:	23 1f       	adc	r18, r19
   19ba2:	84 9f       	mul	r24, r20
   19ba4:	60 0d       	add	r22, r0
   19ba6:	21 1d       	adc	r18, r1
   19ba8:	82 2f       	mov	r24, r18
   19baa:	76 2f       	mov	r23, r22
   19bac:	6a 2f       	mov	r22, r26
   19bae:	11 24       	eor	r1, r1
   19bb0:	9f 57       	subi	r25, 0x7F	; 127
   19bb2:	50 40       	sbci	r21, 0x00	; 0
   19bb4:	8a f0       	brmi	.+34     	; 0x19bd8 <__mulsf3_pse+0x84>
   19bb6:	e1 f0       	breq	.+56     	; 0x19bf0 <__mulsf3_pse+0x9c>
   19bb8:	88 23       	and	r24, r24
   19bba:	4a f0       	brmi	.+18     	; 0x19bce <__mulsf3_pse+0x7a>
   19bbc:	ee 0f       	add	r30, r30
   19bbe:	ff 1f       	adc	r31, r31
   19bc0:	bb 1f       	adc	r27, r27
   19bc2:	66 1f       	adc	r22, r22
   19bc4:	77 1f       	adc	r23, r23
   19bc6:	88 1f       	adc	r24, r24
   19bc8:	91 50       	subi	r25, 0x01	; 1
   19bca:	50 40       	sbci	r21, 0x00	; 0
   19bcc:	a9 f7       	brne	.-22     	; 0x19bb8 <__mulsf3_pse+0x64>
   19bce:	9e 3f       	cpi	r25, 0xFE	; 254
   19bd0:	51 05       	cpc	r21, r1
   19bd2:	70 f0       	brcs	.+28     	; 0x19bf0 <__mulsf3_pse+0x9c>
   19bd4:	5c cf       	rjmp	.-328    	; 0x19a8e <__fp_inf>
   19bd6:	a6 cf       	rjmp	.-180    	; 0x19b24 <__fp_szero>
   19bd8:	5f 3f       	cpi	r21, 0xFF	; 255
   19bda:	ec f3       	brlt	.-6      	; 0x19bd6 <__mulsf3_pse+0x82>
   19bdc:	98 3e       	cpi	r25, 0xE8	; 232
   19bde:	dc f3       	brlt	.-10     	; 0x19bd6 <__mulsf3_pse+0x82>
   19be0:	86 95       	lsr	r24
   19be2:	77 95       	ror	r23
   19be4:	67 95       	ror	r22
   19be6:	b7 95       	ror	r27
   19be8:	f7 95       	ror	r31
   19bea:	e7 95       	ror	r30
   19bec:	9f 5f       	subi	r25, 0xFF	; 255
   19bee:	c1 f7       	brne	.-16     	; 0x19be0 <__mulsf3_pse+0x8c>
   19bf0:	fe 2b       	or	r31, r30
   19bf2:	88 0f       	add	r24, r24
   19bf4:	91 1d       	adc	r25, r1
   19bf6:	96 95       	lsr	r25
   19bf8:	87 95       	ror	r24
   19bfa:	97 f9       	bld	r25, 7
   19bfc:	08 95       	ret

00019bfe <_ZN14HardwareSerial9availableEv>:
#endif
#if defined(HAVE_HWSERIAL2)
  if (Serial2_available && serialEvent2 && Serial2_available()) serialEvent2();
#endif
#if defined(HAVE_HWSERIAL3)
  if (Serial3_available && serialEvent3 && Serial3_available()) serialEvent3();
   19bfe:	fc 01       	movw	r30, r24
   19c00:	91 8d       	ldd	r25, Z+25	; 0x19
   19c02:	22 8d       	ldd	r18, Z+26	; 0x1a
   19c04:	89 2f       	mov	r24, r25
   19c06:	90 e0       	ldi	r25, 0x00	; 0
   19c08:	80 53       	subi	r24, 0x30	; 48
   19c0a:	9f 4f       	sbci	r25, 0xFF	; 255
   19c0c:	82 1b       	sub	r24, r18
   19c0e:	91 09       	sbc	r25, r1
   19c10:	8f 70       	andi	r24, 0x0F	; 15
   19c12:	99 27       	eor	r25, r25
   19c14:	2d e0       	ldi	r18, 0x0D	; 13
   19c16:	ac 01       	movw	r20, r24
   19c18:	24 9f       	mul	r18, r20
   19c1a:	c0 01       	movw	r24, r0
   19c1c:	25 9f       	mul	r18, r21
   19c1e:	90 0d       	add	r25, r0
   19c20:	11 24       	eor	r1, r1
   19c22:	08 95       	ret

00019c24 <_ZN14HardwareSerial4peekEv>:
   19c24:	fc 01       	movw	r30, r24
   19c26:	91 8d       	ldd	r25, Z+25	; 0x19
   19c28:	82 8d       	ldd	r24, Z+26	; 0x1a
   19c2a:	98 17       	cp	r25, r24
   19c2c:	31 f0       	breq	.+12     	; 0x19c3a <_ZN14HardwareSerial4peekEv+0x16>
   19c2e:	82 8d       	ldd	r24, Z+26	; 0x1a
   19c30:	e8 0f       	add	r30, r24
   19c32:	f1 1d       	adc	r31, r1
   19c34:	85 8d       	ldd	r24, Z+29	; 0x1d
   19c36:	90 e0       	ldi	r25, 0x00	; 0
   19c38:	08 95       	ret
   19c3a:	8f ef       	ldi	r24, 0xFF	; 255
   19c3c:	9f ef       	ldi	r25, 0xFF	; 255
   19c3e:	08 95       	ret

00019c40 <_ZN14HardwareSerial4readEv>:
   19c40:	fc 01       	movw	r30, r24
   19c42:	91 8d       	ldd	r25, Z+25	; 0x19
   19c44:	82 8d       	ldd	r24, Z+26	; 0x1a
   19c46:	98 17       	cp	r25, r24
   19c48:	81 f0       	breq	.+32     	; 0x19c6a <_ZN14HardwareSerial4readEv+0x2a>
   19c4a:	82 8d       	ldd	r24, Z+26	; 0x1a
   19c4c:	df 01       	movw	r26, r30
   19c4e:	a8 0f       	add	r26, r24
   19c50:	b1 1d       	adc	r27, r1
   19c52:	5d 96       	adiw	r26, 0x1d	; 29
   19c54:	8c 91       	ld	r24, X
   19c56:	92 8d       	ldd	r25, Z+26	; 0x1a
   19c58:	9f 5f       	subi	r25, 0xFF	; 255
   19c5a:	9f 70       	andi	r25, 0x0F	; 15
   19c5c:	2d e0       	ldi	r18, 0x0D	; 13
   19c5e:	92 9f       	mul	r25, r18
   19c60:	90 2d       	mov	r25, r0
   19c62:	11 24       	eor	r1, r1
   19c64:	92 8f       	std	Z+26, r25	; 0x1a
   19c66:	90 e0       	ldi	r25, 0x00	; 0
   19c68:	08 95       	ret
   19c6a:	8f ef       	ldi	r24, 0xFF	; 255
   19c6c:	9f ef       	ldi	r25, 0xFF	; 255
   19c6e:	08 95       	ret

00019c70 <_ZN14HardwareSerial17availableForWriteEv>:
   19c70:	fc 01       	movw	r30, r24
   19c72:	53 8d       	ldd	r21, Z+27	; 0x1b
   19c74:	44 8d       	ldd	r20, Z+28	; 0x1c
   19c76:	25 2f       	mov	r18, r21
   19c78:	30 e0       	ldi	r19, 0x00	; 0
   19c7a:	84 2f       	mov	r24, r20
   19c7c:	90 e0       	ldi	r25, 0x00	; 0
   19c7e:	82 1b       	sub	r24, r18
   19c80:	93 0b       	sbc	r25, r19
   19c82:	54 17       	cp	r21, r20
   19c84:	18 f0       	brcs	.+6      	; 0x19c8c <_ZN14HardwareSerial17availableForWriteEv+0x1c>
   19c86:	81 53       	subi	r24, 0x31	; 49
   19c88:	9f 4f       	sbci	r25, 0xFF	; 255
   19c8a:	08 95       	ret
   19c8c:	01 97       	sbiw	r24, 0x01	; 1
   19c8e:	08 95       	ret

00019c90 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
#endif

// Actual interrupt handlers //////////////////////////////////////////////////////////////

void HardwareSerial::_tx_udr_empty_irq(void)
{
   19c90:	fc 01       	movw	r30, r24
  // If interrupts are enabled, there must be more data in the output
  // buffer. Send the next byte
  unsigned char c = _tx_buffer[_tx_buffer_tail];
   19c92:	84 8d       	ldd	r24, Z+28	; 0x1c
   19c94:	df 01       	movw	r26, r30
   19c96:	a8 0f       	add	r26, r24
   19c98:	b1 1d       	adc	r27, r1
   19c9a:	a3 51       	subi	r26, 0x13	; 19
   19c9c:	bf 4f       	sbci	r27, 0xFF	; 255
   19c9e:	2c 91       	ld	r18, X
  _tx_buffer_tail = (_tx_buffer_tail + 1) % SERIAL_TX_BUFFER_SIZE;
   19ca0:	84 8d       	ldd	r24, Z+28	; 0x1c
   19ca2:	90 e0       	ldi	r25, 0x00	; 0
   19ca4:	01 96       	adiw	r24, 0x01	; 1
   19ca6:	8f 70       	andi	r24, 0x0F	; 15
   19ca8:	99 27       	eor	r25, r25
   19caa:	9d e0       	ldi	r25, 0x0D	; 13
   19cac:	89 9f       	mul	r24, r25
   19cae:	80 2d       	mov	r24, r0
   19cb0:	11 24       	eor	r1, r1
   19cb2:	84 8f       	std	Z+28, r24	; 0x1c

  *_udr = c;
   19cb4:	a6 89       	ldd	r26, Z+22	; 0x16
   19cb6:	b7 89       	ldd	r27, Z+23	; 0x17
   19cb8:	2c 93       	st	X, r18
  // location". This makes sure flush() won't return until the bytes
  // actually got written. Other r/w bits are preserved, and zeroes
  // written to the rest.

#ifdef MPCM0
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   19cba:	a0 89       	ldd	r26, Z+16	; 0x10
   19cbc:	b1 89       	ldd	r27, Z+17	; 0x11
   19cbe:	8c 91       	ld	r24, X
   19cc0:	83 70       	andi	r24, 0x03	; 3
   19cc2:	80 64       	ori	r24, 0x40	; 64
   19cc4:	8c 93       	st	X, r24
#else
  *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif

  if (_tx_buffer_head == _tx_buffer_tail) {
   19cc6:	93 8d       	ldd	r25, Z+27	; 0x1b
   19cc8:	84 8d       	ldd	r24, Z+28	; 0x1c
   19cca:	98 13       	cpse	r25, r24
   19ccc:	06 c0       	rjmp	.+12     	; 0x19cda <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x4a>
    // Buffer empty, so disable interrupts
    cbi(*_ucsrb, UDRIE0);
   19cce:	02 88       	ldd	r0, Z+18	; 0x12
   19cd0:	f3 89       	ldd	r31, Z+19	; 0x13
   19cd2:	e0 2d       	mov	r30, r0
   19cd4:	80 81       	ld	r24, Z
   19cd6:	8f 7d       	andi	r24, 0xDF	; 223
   19cd8:	80 83       	st	Z, r24
   19cda:	08 95       	ret

00019cdc <_ZN14HardwareSerial5writeEh>:
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}

size_t HardwareSerial::write(uint8_t c)
{
   19cdc:	0f 93       	push	r16
   19cde:	1f 93       	push	r17
   19ce0:	cf 93       	push	r28
   19ce2:	df 93       	push	r29
   19ce4:	ec 01       	movw	r28, r24
  _written = true;
   19ce6:	81 e0       	ldi	r24, 0x01	; 1
   19ce8:	88 8f       	std	Y+24, r24	; 0x18
  // If the buffer and the data register is empty, just write the byte
  // to the data register and be done. This shortcut helps
  // significantly improve the effective datarate at high (>
  // 500kbit/s) bitrates, where interrupt overhead becomes a slowdown.
  if (_tx_buffer_head == _tx_buffer_tail && bit_is_set(*_ucsra, UDRE0)) {
   19cea:	9b 8d       	ldd	r25, Y+27	; 0x1b
   19cec:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19cee:	98 13       	cpse	r25, r24
   19cf0:	05 c0       	rjmp	.+10     	; 0x19cfc <_ZN14HardwareSerial5writeEh+0x20>
   19cf2:	e8 89       	ldd	r30, Y+16	; 0x10
   19cf4:	f9 89       	ldd	r31, Y+17	; 0x11
   19cf6:	80 81       	ld	r24, Z
   19cf8:	85 fd       	sbrc	r24, 5
   19cfa:	27 c0       	rjmp	.+78     	; 0x19d4a <_ZN14HardwareSerial5writeEh+0x6e>
   19cfc:	06 2f       	mov	r16, r22
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << TXC0)));
#endif
    }
    return 1;
  }
  tx_buffer_index_t i = (_tx_buffer_head + 1) % SERIAL_TX_BUFFER_SIZE;
   19cfe:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19d00:	90 e0       	ldi	r25, 0x00	; 0
   19d02:	01 96       	adiw	r24, 0x01	; 1
   19d04:	8f 70       	andi	r24, 0x0F	; 15
   19d06:	99 27       	eor	r25, r25
   19d08:	1d e0       	ldi	r17, 0x0D	; 13
   19d0a:	81 9f       	mul	r24, r17
   19d0c:	10 2d       	mov	r17, r0
   19d0e:	11 24       	eor	r1, r1
	
  // If the output buffer is full, there's nothing for it other than to 
  // wait for the interrupt handler to empty it a bit
  while (i == _tx_buffer_tail) {
   19d10:	8c 8d       	ldd	r24, Y+28	; 0x1c
   19d12:	18 13       	cpse	r17, r24
   19d14:	0b c0       	rjmp	.+22     	; 0x19d2c <_ZN14HardwareSerial5writeEh+0x50>
    if (bit_is_clear(SREG, SREG_I)) {
   19d16:	0f b6       	in	r0, 0x3f	; 63
   19d18:	07 fc       	sbrc	r0, 7
   19d1a:	fa cf       	rjmp	.-12     	; 0x19d10 <_ZN14HardwareSerial5writeEh+0x34>
      // Interrupts are disabled, so we'll have to poll the data
      // register empty flag ourselves. If it is set, pretend an
      // interrupt has happened and call the handler to free up
      // space for us.
      if(bit_is_set(*_ucsra, UDRE0))
   19d1c:	e8 89       	ldd	r30, Y+16	; 0x10
   19d1e:	f9 89       	ldd	r31, Y+17	; 0x11
   19d20:	80 81       	ld	r24, Z
   19d22:	85 ff       	sbrs	r24, 5
   19d24:	f5 cf       	rjmp	.-22     	; 0x19d10 <_ZN14HardwareSerial5writeEh+0x34>
	_tx_udr_empty_irq();
   19d26:	ce 01       	movw	r24, r28
   19d28:	b3 df       	rcall	.-154    	; 0x19c90 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19d2a:	f2 cf       	rjmp	.-28     	; 0x19d10 <_ZN14HardwareSerial5writeEh+0x34>
    } else {
      // nop, the interrupt handler will free up space for us
    }
  }

  _tx_buffer[_tx_buffer_head] = c;
   19d2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
   19d2e:	fe 01       	movw	r30, r28
   19d30:	e8 0f       	add	r30, r24
   19d32:	f1 1d       	adc	r31, r1
   19d34:	e3 51       	subi	r30, 0x13	; 19
   19d36:	ff 4f       	sbci	r31, 0xFF	; 255
   19d38:	00 83       	st	Z, r16

  // make atomic to prevent execution of ISR between setting the
  // head pointer and setting the interrupt flag resulting in buffer
  // retransmission
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   19d3a:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
   19d3c:	f8 94       	cli
    _tx_buffer_head = i;
   19d3e:	1b 8f       	std	Y+27, r17	; 0x1b
    sbi(*_ucsrb, UDRIE0);
   19d40:	ea 89       	ldd	r30, Y+18	; 0x12
   19d42:	fb 89       	ldd	r31, Y+19	; 0x13
   19d44:	80 81       	ld	r24, Z
   19d46:	80 62       	ori	r24, 0x20	; 32
   19d48:	0a c0       	rjmp	.+20     	; 0x19d5e <_ZN14HardwareSerial5writeEh+0x82>
    // So writing UDR must happen first.
    // Writing UDR and clearing TC must be done atomically, otherwise
    // interrupts might delay the TXC clear so the byte written to UDR
    // is transmitted (setting TXC) before clearing TXC. Then TXC will
    // be cleared when no bytes are left, causing flush() to hang
    ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
   19d4a:	9f b7       	in	r25, 0x3f	; 63
   19d4c:	f8 94       	cli
      *_udr = c;
   19d4e:	ee 89       	ldd	r30, Y+22	; 0x16
   19d50:	ff 89       	ldd	r31, Y+23	; 0x17
   19d52:	60 83       	st	Z, r22
#ifdef MPCM0
      *_ucsra = ((*_ucsra) & ((1 << U2X0) | (1 << MPCM0))) | (1 << TXC0);
   19d54:	e8 89       	ldd	r30, Y+16	; 0x10
   19d56:	f9 89       	ldd	r31, Y+17	; 0x11
   19d58:	80 81       	ld	r24, Z
   19d5a:	83 70       	andi	r24, 0x03	; 3
   19d5c:	80 64       	ori	r24, 0x40	; 64
   19d5e:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
   19d60:	9f bf       	out	0x3f, r25	; 63
    _tx_buffer_head = i;
    sbi(*_ucsrb, UDRIE0);
  }
  
  return 1;
}
   19d62:	81 e0       	ldi	r24, 0x01	; 1
   19d64:	90 e0       	ldi	r25, 0x00	; 0
   19d66:	df 91       	pop	r29
   19d68:	cf 91       	pop	r28
   19d6a:	1f 91       	pop	r17
   19d6c:	0f 91       	pop	r16
   19d6e:	08 95       	ret

00019d70 <_ZN14HardwareSerial5flushEv>:
  if (head >= tail) return SERIAL_TX_BUFFER_SIZE - 1 - head + tail;
  return tail - head - 1;
}

void HardwareSerial::flush()
{
   19d70:	cf 93       	push	r28
   19d72:	df 93       	push	r29
   19d74:	ec 01       	movw	r28, r24
  // If we have never written a byte, no need to flush. This special
  // case is needed since there is no way to force the TXC (transmit
  // complete) bit to 1 during initialization
  if (!_written)
   19d76:	88 8d       	ldd	r24, Y+24	; 0x18
   19d78:	88 23       	and	r24, r24
   19d7a:	c1 f0       	breq	.+48     	; 0x19dac <_ZN14HardwareSerial5flushEv+0x3c>
    return;

  while (bit_is_set(*_ucsrb, UDRIE0) || bit_is_clear(*_ucsra, TXC0)) {
   19d7c:	ea 89       	ldd	r30, Y+18	; 0x12
   19d7e:	fb 89       	ldd	r31, Y+19	; 0x13
   19d80:	80 81       	ld	r24, Z
   19d82:	85 fd       	sbrc	r24, 5
   19d84:	05 c0       	rjmp	.+10     	; 0x19d90 <_ZN14HardwareSerial5flushEv+0x20>
   19d86:	a8 89       	ldd	r26, Y+16	; 0x10
   19d88:	b9 89       	ldd	r27, Y+17	; 0x11
   19d8a:	8c 91       	ld	r24, X
   19d8c:	86 fd       	sbrc	r24, 6
   19d8e:	0e c0       	rjmp	.+28     	; 0x19dac <_ZN14HardwareSerial5flushEv+0x3c>
    if (bit_is_clear(SREG, SREG_I) && bit_is_set(*_ucsrb, UDRIE0))
   19d90:	0f b6       	in	r0, 0x3f	; 63
   19d92:	07 fc       	sbrc	r0, 7
   19d94:	f5 cf       	rjmp	.-22     	; 0x19d80 <_ZN14HardwareSerial5flushEv+0x10>
   19d96:	80 81       	ld	r24, Z
   19d98:	85 ff       	sbrs	r24, 5
   19d9a:	f2 cf       	rjmp	.-28     	; 0x19d80 <_ZN14HardwareSerial5flushEv+0x10>
	// Interrupts are globally disabled, but the DR empty
	// interrupt should be enabled, so poll the DR empty flag to
	// prevent deadlock
	if (bit_is_set(*_ucsra, UDRE0))
   19d9c:	a8 89       	ldd	r26, Y+16	; 0x10
   19d9e:	b9 89       	ldd	r27, Y+17	; 0x11
   19da0:	8c 91       	ld	r24, X
   19da2:	85 ff       	sbrs	r24, 5
   19da4:	ed cf       	rjmp	.-38     	; 0x19d80 <_ZN14HardwareSerial5flushEv+0x10>
	  _tx_udr_empty_irq();
   19da6:	ce 01       	movw	r24, r28
   19da8:	73 df       	rcall	.-282    	; 0x19c90 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19daa:	e8 cf       	rjmp	.-48     	; 0x19d7c <_ZN14HardwareSerial5flushEv+0xc>
  }
  // If we get here, nothing is queued anymore (DRIE is disabled) and
  // the hardware finished tranmission (TXC is set).
}
   19dac:	df 91       	pop	r29
   19dae:	cf 91       	pop	r28
   19db0:	08 95       	ret

00019db2 <_ZN14HardwareSerial5beginEmh>:
}

// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
   19db2:	cf 92       	push	r12
   19db4:	df 92       	push	r13
   19db6:	ef 92       	push	r14
   19db8:	ff 92       	push	r15
   19dba:	1f 93       	push	r17
   19dbc:	cf 93       	push	r28
   19dbe:	df 93       	push	r29
   19dc0:	ec 01       	movw	r28, r24
   19dc2:	6a 01       	movw	r12, r20
   19dc4:	7b 01       	movw	r14, r22
   19dc6:	12 2f       	mov	r17, r18
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
  *_ucsra = 1 << U2X0;
   19dc8:	e8 89       	ldd	r30, Y+16	; 0x10
   19dca:	f9 89       	ldd	r31, Y+17	; 0x11
   19dcc:	82 e0       	ldi	r24, 0x02	; 2
   19dce:	80 83       	st	Z, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   19dd0:	41 15       	cp	r20, r1
   19dd2:	51 4e       	sbci	r21, 0xE1	; 225
   19dd4:	61 05       	cpc	r22, r1
   19dd6:	71 05       	cpc	r23, r1
   19dd8:	b1 f0       	breq	.+44     	; 0x19e06 <_ZN14HardwareSerial5beginEmh+0x54>
// Public Methods //////////////////////////////////////////////////////////////

void HardwareSerial::begin(unsigned long baud, byte config)
{
  // Try u2x mode first
  uint16_t baud_setting = (F_CPU / 4 / baud - 1) / 2;
   19dda:	60 e0       	ldi	r22, 0x00	; 0
   19ddc:	79 e0       	ldi	r23, 0x09	; 9
   19dde:	8d e3       	ldi	r24, 0x3D	; 61
   19de0:	90 e0       	ldi	r25, 0x00	; 0
   19de2:	a7 01       	movw	r20, r14
   19de4:	96 01       	movw	r18, r12
   19de6:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   19dea:	da 01       	movw	r26, r20
   19dec:	c9 01       	movw	r24, r18
   19dee:	01 97       	sbiw	r24, 0x01	; 1
   19df0:	a1 09       	sbc	r26, r1
   19df2:	b1 09       	sbc	r27, r1
   19df4:	b6 95       	lsr	r27
   19df6:	a7 95       	ror	r26
   19df8:	97 95       	ror	r25
   19dfa:	87 95       	ror	r24
   19dfc:	9c 01       	movw	r18, r24
  // hardcoded exception for 57600 for compatibility with the bootloader
  // shipped with the Duemilanove and previous boards and the firmware
  // on the 8U2 on the Uno and Mega 2560. Also, The baud_setting cannot
  // be > 4095, so switch back to non-u2x mode if the baud rate is too
  // low.
  if (((F_CPU == 16000000UL) && (baud == 57600)) || (baud_setting >4095))
   19dfe:	21 15       	cp	r18, r1
   19e00:	80 e1       	ldi	r24, 0x10	; 16
   19e02:	38 07       	cpc	r19, r24
   19e04:	a8 f0       	brcs	.+42     	; 0x19e30 <_ZN14HardwareSerial5beginEmh+0x7e>
  {
    *_ucsra = 0;
   19e06:	e8 89       	ldd	r30, Y+16	; 0x10
   19e08:	f9 89       	ldd	r31, Y+17	; 0x11
   19e0a:	10 82       	st	Z, r1
    baud_setting = (F_CPU / 8 / baud - 1) / 2;
   19e0c:	60 e8       	ldi	r22, 0x80	; 128
   19e0e:	74 e8       	ldi	r23, 0x84	; 132
   19e10:	8e e1       	ldi	r24, 0x1E	; 30
   19e12:	90 e0       	ldi	r25, 0x00	; 0
   19e14:	a7 01       	movw	r20, r14
   19e16:	96 01       	movw	r18, r12
   19e18:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   19e1c:	da 01       	movw	r26, r20
   19e1e:	c9 01       	movw	r24, r18
   19e20:	01 97       	sbiw	r24, 0x01	; 1
   19e22:	a1 09       	sbc	r26, r1
   19e24:	b1 09       	sbc	r27, r1
   19e26:	b6 95       	lsr	r27
   19e28:	a7 95       	ror	r26
   19e2a:	97 95       	ror	r25
   19e2c:	87 95       	ror	r24
   19e2e:	9c 01       	movw	r18, r24
  }

  // assign the baud_setting, a.k.a. ubrr (USART Baud Rate Register)
  *_ubrrh = baud_setting >> 8;
   19e30:	ec 85       	ldd	r30, Y+12	; 0x0c
   19e32:	fd 85       	ldd	r31, Y+13	; 0x0d
   19e34:	30 83       	st	Z, r19
  *_ubrrl = baud_setting;
   19e36:	ee 85       	ldd	r30, Y+14	; 0x0e
   19e38:	ff 85       	ldd	r31, Y+15	; 0x0f
   19e3a:	20 83       	st	Z, r18

  _written = false;
   19e3c:	18 8e       	std	Y+24, r1	; 0x18

  //set the data bits, parity, and stop bits
#if defined(__AVR_ATmega8__)
  config |= 0x80; // select UCSRC register (shared with UBRRH)
#endif
  *_ucsrc = config;
   19e3e:	ec 89       	ldd	r30, Y+20	; 0x14
   19e40:	fd 89       	ldd	r31, Y+21	; 0x15
   19e42:	10 83       	st	Z, r17
  
  sbi(*_ucsrb, RXEN0);
   19e44:	ea 89       	ldd	r30, Y+18	; 0x12
   19e46:	fb 89       	ldd	r31, Y+19	; 0x13
   19e48:	80 81       	ld	r24, Z
   19e4a:	80 61       	ori	r24, 0x10	; 16
   19e4c:	80 83       	st	Z, r24
  sbi(*_ucsrb, TXEN0);
   19e4e:	ea 89       	ldd	r30, Y+18	; 0x12
   19e50:	fb 89       	ldd	r31, Y+19	; 0x13
   19e52:	80 81       	ld	r24, Z
   19e54:	88 60       	ori	r24, 0x08	; 8
   19e56:	80 83       	st	Z, r24
  sbi(*_ucsrb, RXCIE0);
   19e58:	ea 89       	ldd	r30, Y+18	; 0x12
   19e5a:	fb 89       	ldd	r31, Y+19	; 0x13
   19e5c:	80 81       	ld	r24, Z
   19e5e:	80 68       	ori	r24, 0x80	; 128
   19e60:	80 83       	st	Z, r24
  cbi(*_ucsrb, UDRIE0);
   19e62:	ea 89       	ldd	r30, Y+18	; 0x12
   19e64:	fb 89       	ldd	r31, Y+19	; 0x13
   19e66:	80 81       	ld	r24, Z
   19e68:	8f 7d       	andi	r24, 0xDF	; 223
   19e6a:	80 83       	st	Z, r24
}
   19e6c:	df 91       	pop	r29
   19e6e:	cf 91       	pop	r28
   19e70:	1f 91       	pop	r17
   19e72:	ff 90       	pop	r15
   19e74:	ef 90       	pop	r14
   19e76:	df 90       	pop	r13
   19e78:	cf 90       	pop	r12
   19e7a:	08 95       	ret

00019e7c <_ZN5Print17availableForWriteEv>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial0_available() {
  return Serial.available();
}
   19e7c:	80 e0       	ldi	r24, 0x00	; 0
   19e7e:	90 e0       	ldi	r25, 0x00	; 0
   19e80:	08 95       	ret

00019e82 <_ZN5Print5flushEv>:
   19e82:	08 95       	ret

00019e84 <__vector_25>:
   19e84:	1f 92       	push	r1
   19e86:	0f 92       	push	r0
   19e88:	0f b6       	in	r0, 0x3f	; 63
   19e8a:	0f 92       	push	r0
   19e8c:	11 24       	eor	r1, r1
   19e8e:	0b b6       	in	r0, 0x3b	; 59
   19e90:	0f 92       	push	r0
   19e92:	2f 93       	push	r18
   19e94:	8f 93       	push	r24
   19e96:	9f 93       	push	r25
   19e98:	ef 93       	push	r30
   19e9a:	ff 93       	push	r31
   19e9c:	e0 91 7f 16 	lds	r30, 0x167F	; 0x80167f <Serial+0x10>
   19ea0:	f0 91 80 16 	lds	r31, 0x1680	; 0x801680 <Serial+0x11>
   19ea4:	80 81       	ld	r24, Z
   19ea6:	e0 91 85 16 	lds	r30, 0x1685	; 0x801685 <Serial+0x16>
   19eaa:	f0 91 86 16 	lds	r31, 0x1686	; 0x801686 <Serial+0x17>
   19eae:	82 fd       	sbrc	r24, 2
   19eb0:	16 c0       	rjmp	.+44     	; 0x19ede <__vector_25+0x5a>
   19eb2:	90 81       	ld	r25, Z
   19eb4:	80 91 88 16 	lds	r24, 0x1688	; 0x801688 <Serial+0x19>
   19eb8:	8f 5f       	subi	r24, 0xFF	; 255
   19eba:	8f 70       	andi	r24, 0x0F	; 15
   19ebc:	2d e0       	ldi	r18, 0x0D	; 13
   19ebe:	82 9f       	mul	r24, r18
   19ec0:	80 2d       	mov	r24, r0
   19ec2:	11 24       	eor	r1, r1
   19ec4:	20 91 89 16 	lds	r18, 0x1689	; 0x801689 <Serial+0x1a>
   19ec8:	82 17       	cp	r24, r18
   19eca:	51 f0       	breq	.+20     	; 0x19ee0 <__vector_25+0x5c>
   19ecc:	e0 91 88 16 	lds	r30, 0x1688	; 0x801688 <Serial+0x19>
   19ed0:	f0 e0       	ldi	r31, 0x00	; 0
   19ed2:	e1 59       	subi	r30, 0x91	; 145
   19ed4:	f9 4e       	sbci	r31, 0xE9	; 233
   19ed6:	95 8f       	std	Z+29, r25	; 0x1d
   19ed8:	80 93 88 16 	sts	0x1688, r24	; 0x801688 <Serial+0x19>
   19edc:	01 c0       	rjmp	.+2      	; 0x19ee0 <__vector_25+0x5c>
   19ede:	80 81       	ld	r24, Z
   19ee0:	ff 91       	pop	r31
   19ee2:	ef 91       	pop	r30
   19ee4:	9f 91       	pop	r25
   19ee6:	8f 91       	pop	r24
   19ee8:	2f 91       	pop	r18
   19eea:	0f 90       	pop	r0
   19eec:	0b be       	out	0x3b, r0	; 59
   19eee:	0f 90       	pop	r0
   19ef0:	0f be       	out	0x3f, r0	; 63
   19ef2:	0f 90       	pop	r0
   19ef4:	1f 90       	pop	r1
   19ef6:	18 95       	reti

00019ef8 <__vector_26>:
   19ef8:	1f 92       	push	r1
   19efa:	0f 92       	push	r0
   19efc:	0f b6       	in	r0, 0x3f	; 63
   19efe:	0f 92       	push	r0
   19f00:	11 24       	eor	r1, r1
   19f02:	0b b6       	in	r0, 0x3b	; 59
   19f04:	0f 92       	push	r0
   19f06:	2f 93       	push	r18
   19f08:	3f 93       	push	r19
   19f0a:	4f 93       	push	r20
   19f0c:	5f 93       	push	r21
   19f0e:	6f 93       	push	r22
   19f10:	7f 93       	push	r23
   19f12:	8f 93       	push	r24
   19f14:	9f 93       	push	r25
   19f16:	af 93       	push	r26
   19f18:	bf 93       	push	r27
   19f1a:	ef 93       	push	r30
   19f1c:	ff 93       	push	r31
   19f1e:	8f e6       	ldi	r24, 0x6F	; 111
   19f20:	96 e1       	ldi	r25, 0x16	; 22
   19f22:	b6 de       	rcall	.-660    	; 0x19c90 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   19f24:	ff 91       	pop	r31
   19f26:	ef 91       	pop	r30
   19f28:	bf 91       	pop	r27
   19f2a:	af 91       	pop	r26
   19f2c:	9f 91       	pop	r25
   19f2e:	8f 91       	pop	r24
   19f30:	7f 91       	pop	r23
   19f32:	6f 91       	pop	r22
   19f34:	5f 91       	pop	r21
   19f36:	4f 91       	pop	r20
   19f38:	3f 91       	pop	r19
   19f3a:	2f 91       	pop	r18
   19f3c:	0f 90       	pop	r0
   19f3e:	0b be       	out	0x3b, r0	; 59
   19f40:	0f 90       	pop	r0
   19f42:	0f be       	out	0x3f, r0	; 63
   19f44:	0f 90       	pop	r0
   19f46:	1f 90       	pop	r1
   19f48:	18 95       	reti

00019f4a <_GLOBAL__sub_I___vector_25>:
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
   19f4a:	ef e6       	ldi	r30, 0x6F	; 111
   19f4c:	f6 e1       	ldi	r31, 0x16	; 22
   19f4e:	13 82       	std	Z+3, r1	; 0x03
   19f50:	12 82       	std	Z+2, r1	; 0x02
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
   19f52:	88 ee       	ldi	r24, 0xE8	; 232
   19f54:	93 e0       	ldi	r25, 0x03	; 3
   19f56:	a0 e0       	ldi	r26, 0x00	; 0
   19f58:	b0 e0       	ldi	r27, 0x00	; 0
   19f5a:	84 83       	std	Z+4, r24	; 0x04
   19f5c:	95 83       	std	Z+5, r25	; 0x05
   19f5e:	a6 83       	std	Z+6, r26	; 0x06
   19f60:	b7 83       	std	Z+7, r27	; 0x07
  volatile uint8_t *ucsrc, volatile uint8_t *udr) :
    _ubrrh(ubrrh), _ubrrl(ubrrl),
    _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
    _udr(udr),
    _rx_buffer_head(0), _rx_buffer_tail(0),
    _tx_buffer_head(0), _tx_buffer_tail(0)
   19f62:	81 eb       	ldi	r24, 0xB1	; 177
   19f64:	97 e0       	ldi	r25, 0x07	; 7
   19f66:	91 83       	std	Z+1, r25	; 0x01
   19f68:	80 83       	st	Z, r24
   19f6a:	85 ec       	ldi	r24, 0xC5	; 197
   19f6c:	90 e0       	ldi	r25, 0x00	; 0
   19f6e:	95 87       	std	Z+13, r25	; 0x0d
   19f70:	84 87       	std	Z+12, r24	; 0x0c
   19f72:	84 ec       	ldi	r24, 0xC4	; 196
   19f74:	90 e0       	ldi	r25, 0x00	; 0
   19f76:	97 87       	std	Z+15, r25	; 0x0f
   19f78:	86 87       	std	Z+14, r24	; 0x0e
   19f7a:	80 ec       	ldi	r24, 0xC0	; 192
   19f7c:	90 e0       	ldi	r25, 0x00	; 0
   19f7e:	91 8b       	std	Z+17, r25	; 0x11
   19f80:	80 8b       	std	Z+16, r24	; 0x10
   19f82:	81 ec       	ldi	r24, 0xC1	; 193
   19f84:	90 e0       	ldi	r25, 0x00	; 0
   19f86:	93 8b       	std	Z+19, r25	; 0x13
   19f88:	82 8b       	std	Z+18, r24	; 0x12
   19f8a:	82 ec       	ldi	r24, 0xC2	; 194
   19f8c:	90 e0       	ldi	r25, 0x00	; 0
   19f8e:	95 8b       	std	Z+21, r25	; 0x15
   19f90:	84 8b       	std	Z+20, r24	; 0x14
   19f92:	86 ec       	ldi	r24, 0xC6	; 198
   19f94:	90 e0       	ldi	r25, 0x00	; 0
   19f96:	97 8b       	std	Z+23, r25	; 0x17
   19f98:	86 8b       	std	Z+22, r24	; 0x16
   19f9a:	11 8e       	std	Z+25, r1	; 0x19
   19f9c:	12 8e       	std	Z+26, r1	; 0x1a
   19f9e:	13 8e       	std	Z+27, r1	; 0x1b
   19fa0:	14 8e       	std	Z+28, r1	; 0x1c
   19fa2:	08 95       	ret

00019fa4 <__vector_36>:

// Function that can be weakly referenced by serialEventRun to prevent
// pulling in this file if it's not otherwise used.
bool Serial1_available() {
  return Serial1.available();
}
   19fa4:	1f 92       	push	r1
   19fa6:	0f 92       	push	r0
   19fa8:	0f b6       	in	r0, 0x3f	; 63
   19faa:	0f 92       	push	r0
   19fac:	11 24       	eor	r1, r1
   19fae:	0b b6       	in	r0, 0x3b	; 59
   19fb0:	0f 92       	push	r0
   19fb2:	2f 93       	push	r18
   19fb4:	8f 93       	push	r24
   19fb6:	9f 93       	push	r25
   19fb8:	ef 93       	push	r30
   19fba:	ff 93       	push	r31
   19fbc:	e0 91 3c 18 	lds	r30, 0x183C	; 0x80183c <Serial1+0x10>
   19fc0:	f0 91 3d 18 	lds	r31, 0x183D	; 0x80183d <Serial1+0x11>
   19fc4:	80 81       	ld	r24, Z
   19fc6:	e0 91 42 18 	lds	r30, 0x1842	; 0x801842 <Serial1+0x16>
   19fca:	f0 91 43 18 	lds	r31, 0x1843	; 0x801843 <Serial1+0x17>
   19fce:	82 fd       	sbrc	r24, 2
   19fd0:	16 c0       	rjmp	.+44     	; 0x19ffe <__vector_36+0x5a>
   19fd2:	90 81       	ld	r25, Z
   19fd4:	80 91 45 18 	lds	r24, 0x1845	; 0x801845 <Serial1+0x19>
   19fd8:	8f 5f       	subi	r24, 0xFF	; 255
   19fda:	8f 70       	andi	r24, 0x0F	; 15
   19fdc:	2d e0       	ldi	r18, 0x0D	; 13
   19fde:	82 9f       	mul	r24, r18
   19fe0:	80 2d       	mov	r24, r0
   19fe2:	11 24       	eor	r1, r1
   19fe4:	20 91 46 18 	lds	r18, 0x1846	; 0x801846 <Serial1+0x1a>
   19fe8:	82 17       	cp	r24, r18
   19fea:	51 f0       	breq	.+20     	; 0x1a000 <__vector_36+0x5c>
   19fec:	e0 91 45 18 	lds	r30, 0x1845	; 0x801845 <Serial1+0x19>
   19ff0:	f0 e0       	ldi	r31, 0x00	; 0
   19ff2:	e4 5d       	subi	r30, 0xD4	; 212
   19ff4:	f7 4e       	sbci	r31, 0xE7	; 231
   19ff6:	95 8f       	std	Z+29, r25	; 0x1d
   19ff8:	80 93 45 18 	sts	0x1845, r24	; 0x801845 <Serial1+0x19>
   19ffc:	01 c0       	rjmp	.+2      	; 0x1a000 <__vector_36+0x5c>
   19ffe:	80 81       	ld	r24, Z
   1a000:	ff 91       	pop	r31
   1a002:	ef 91       	pop	r30
   1a004:	9f 91       	pop	r25
   1a006:	8f 91       	pop	r24
   1a008:	2f 91       	pop	r18
   1a00a:	0f 90       	pop	r0
   1a00c:	0b be       	out	0x3b, r0	; 59
   1a00e:	0f 90       	pop	r0
   1a010:	0f be       	out	0x3f, r0	; 63
   1a012:	0f 90       	pop	r0
   1a014:	1f 90       	pop	r1
   1a016:	18 95       	reti

0001a018 <__vector_37>:
   1a018:	1f 92       	push	r1
   1a01a:	0f 92       	push	r0
   1a01c:	0f b6       	in	r0, 0x3f	; 63
   1a01e:	0f 92       	push	r0
   1a020:	11 24       	eor	r1, r1
   1a022:	0b b6       	in	r0, 0x3b	; 59
   1a024:	0f 92       	push	r0
   1a026:	2f 93       	push	r18
   1a028:	3f 93       	push	r19
   1a02a:	4f 93       	push	r20
   1a02c:	5f 93       	push	r21
   1a02e:	6f 93       	push	r22
   1a030:	7f 93       	push	r23
   1a032:	8f 93       	push	r24
   1a034:	9f 93       	push	r25
   1a036:	af 93       	push	r26
   1a038:	bf 93       	push	r27
   1a03a:	ef 93       	push	r30
   1a03c:	ff 93       	push	r31
   1a03e:	8c e2       	ldi	r24, 0x2C	; 44
   1a040:	98 e1       	ldi	r25, 0x18	; 24
   1a042:	26 de       	rcall	.-948    	; 0x19c90 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
   1a044:	ff 91       	pop	r31
   1a046:	ef 91       	pop	r30
   1a048:	bf 91       	pop	r27
   1a04a:	af 91       	pop	r26
   1a04c:	9f 91       	pop	r25
   1a04e:	8f 91       	pop	r24
   1a050:	7f 91       	pop	r23
   1a052:	6f 91       	pop	r22
   1a054:	5f 91       	pop	r21
   1a056:	4f 91       	pop	r20
   1a058:	3f 91       	pop	r19
   1a05a:	2f 91       	pop	r18
   1a05c:	0f 90       	pop	r0
   1a05e:	0b be       	out	0x3b, r0	; 59
   1a060:	0f 90       	pop	r0
   1a062:	0f be       	out	0x3f, r0	; 63
   1a064:	0f 90       	pop	r0
   1a066:	1f 90       	pop	r1
   1a068:	18 95       	reti

0001a06a <_GLOBAL__sub_I___vector_36>:
   1a06a:	ec e2       	ldi	r30, 0x2C	; 44
   1a06c:	f8 e1       	ldi	r31, 0x18	; 24
   1a06e:	13 82       	std	Z+3, r1	; 0x03
   1a070:	12 82       	std	Z+2, r1	; 0x02
   1a072:	88 ee       	ldi	r24, 0xE8	; 232
   1a074:	93 e0       	ldi	r25, 0x03	; 3
   1a076:	a0 e0       	ldi	r26, 0x00	; 0
   1a078:	b0 e0       	ldi	r27, 0x00	; 0
   1a07a:	84 83       	std	Z+4, r24	; 0x04
   1a07c:	95 83       	std	Z+5, r25	; 0x05
   1a07e:	a6 83       	std	Z+6, r26	; 0x06
   1a080:	b7 83       	std	Z+7, r27	; 0x07
   1a082:	81 eb       	ldi	r24, 0xB1	; 177
   1a084:	97 e0       	ldi	r25, 0x07	; 7
   1a086:	91 83       	std	Z+1, r25	; 0x01
   1a088:	80 83       	st	Z, r24
   1a08a:	8d ec       	ldi	r24, 0xCD	; 205
   1a08c:	90 e0       	ldi	r25, 0x00	; 0
   1a08e:	95 87       	std	Z+13, r25	; 0x0d
   1a090:	84 87       	std	Z+12, r24	; 0x0c
   1a092:	8c ec       	ldi	r24, 0xCC	; 204
   1a094:	90 e0       	ldi	r25, 0x00	; 0
   1a096:	97 87       	std	Z+15, r25	; 0x0f
   1a098:	86 87       	std	Z+14, r24	; 0x0e
   1a09a:	88 ec       	ldi	r24, 0xC8	; 200
   1a09c:	90 e0       	ldi	r25, 0x00	; 0
   1a09e:	91 8b       	std	Z+17, r25	; 0x11
   1a0a0:	80 8b       	std	Z+16, r24	; 0x10
   1a0a2:	89 ec       	ldi	r24, 0xC9	; 201
   1a0a4:	90 e0       	ldi	r25, 0x00	; 0
   1a0a6:	93 8b       	std	Z+19, r25	; 0x13
   1a0a8:	82 8b       	std	Z+18, r24	; 0x12
   1a0aa:	8a ec       	ldi	r24, 0xCA	; 202
   1a0ac:	90 e0       	ldi	r25, 0x00	; 0
   1a0ae:	95 8b       	std	Z+21, r25	; 0x15
   1a0b0:	84 8b       	std	Z+20, r24	; 0x14
   1a0b2:	8e ec       	ldi	r24, 0xCE	; 206
   1a0b4:	90 e0       	ldi	r25, 0x00	; 0
   1a0b6:	97 8b       	std	Z+23, r25	; 0x17
   1a0b8:	86 8b       	std	Z+22, r24	; 0x16
   1a0ba:	11 8e       	std	Z+25, r1	; 0x19
   1a0bc:	12 8e       	std	Z+26, r1	; 0x1a
   1a0be:	13 8e       	std	Z+27, r1	; 0x1b
   1a0c0:	14 8e       	std	Z+28, r1	; 0x1c
   1a0c2:	08 95       	ret

0001a0c4 <_ZN5Print5writeEPKhj>:
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a0c4:	cf 92       	push	r12
   1a0c6:	df 92       	push	r13
   1a0c8:	ef 92       	push	r14
   1a0ca:	ff 92       	push	r15
   1a0cc:	0f 93       	push	r16
   1a0ce:	1f 93       	push	r17
   1a0d0:	cf 93       	push	r28
   1a0d2:	df 93       	push	r29
   1a0d4:	6c 01       	movw	r12, r24
   1a0d6:	7a 01       	movw	r14, r20
   1a0d8:	8b 01       	movw	r16, r22
   1a0da:	c0 e0       	ldi	r28, 0x00	; 0
   1a0dc:	d0 e0       	ldi	r29, 0x00	; 0
   1a0de:	ce 15       	cp	r28, r14
   1a0e0:	df 05       	cpc	r29, r15
   1a0e2:	81 f0       	breq	.+32     	; 0x1a104 <_ZN5Print5writeEPKhj+0x40>
   1a0e4:	d8 01       	movw	r26, r16
   1a0e6:	6d 91       	ld	r22, X+
   1a0e8:	8d 01       	movw	r16, r26
   1a0ea:	d6 01       	movw	r26, r12
   1a0ec:	ed 91       	ld	r30, X+
   1a0ee:	fc 91       	ld	r31, X
   1a0f0:	01 90       	ld	r0, Z+
   1a0f2:	f0 81       	ld	r31, Z
   1a0f4:	e0 2d       	mov	r30, r0
   1a0f6:	c6 01       	movw	r24, r12
   1a0f8:	19 95       	eicall
   1a0fa:	89 2b       	or	r24, r25
   1a0fc:	11 f0       	breq	.+4      	; 0x1a102 <_ZN5Print5writeEPKhj+0x3e>
   1a0fe:	21 96       	adiw	r28, 0x01	; 1
   1a100:	ee cf       	rjmp	.-36     	; 0x1a0de <_ZN5Print5writeEPKhj+0x1a>
   1a102:	7e 01       	movw	r14, r28
   1a104:	c7 01       	movw	r24, r14
   1a106:	df 91       	pop	r29
   1a108:	cf 91       	pop	r28
   1a10a:	1f 91       	pop	r17
   1a10c:	0f 91       	pop	r16
   1a10e:	ff 90       	pop	r15
   1a110:	ef 90       	pop	r14
   1a112:	df 90       	pop	r13
   1a114:	cf 90       	pop	r12
   1a116:	08 95       	ret

0001a118 <_ZN5Print5printEPK19__FlashStringHelper>:
   1a118:	ef 92       	push	r14
   1a11a:	ff 92       	push	r15
   1a11c:	0f 93       	push	r16
   1a11e:	1f 93       	push	r17
   1a120:	cf 93       	push	r28
   1a122:	df 93       	push	r29
   1a124:	8c 01       	movw	r16, r24
   1a126:	7b 01       	movw	r14, r22
   1a128:	c0 e0       	ldi	r28, 0x00	; 0
   1a12a:	d0 e0       	ldi	r29, 0x00	; 0
   1a12c:	f7 01       	movw	r30, r14
   1a12e:	ec 0f       	add	r30, r28
   1a130:	fd 1f       	adc	r31, r29
   1a132:	64 91       	lpm	r22, Z
   1a134:	66 23       	and	r22, r22
   1a136:	61 f0       	breq	.+24     	; 0x1a150 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a138:	d8 01       	movw	r26, r16
   1a13a:	ed 91       	ld	r30, X+
   1a13c:	fc 91       	ld	r31, X
   1a13e:	01 90       	ld	r0, Z+
   1a140:	f0 81       	ld	r31, Z
   1a142:	e0 2d       	mov	r30, r0
   1a144:	c8 01       	movw	r24, r16
   1a146:	19 95       	eicall
   1a148:	89 2b       	or	r24, r25
   1a14a:	11 f0       	breq	.+4      	; 0x1a150 <_ZN5Print5printEPK19__FlashStringHelper+0x38>
   1a14c:	21 96       	adiw	r28, 0x01	; 1
   1a14e:	ee cf       	rjmp	.-36     	; 0x1a12c <_ZN5Print5printEPK19__FlashStringHelper+0x14>
   1a150:	ce 01       	movw	r24, r28
   1a152:	df 91       	pop	r29
   1a154:	cf 91       	pop	r28
   1a156:	1f 91       	pop	r17
   1a158:	0f 91       	pop	r16
   1a15a:	ff 90       	pop	r15
   1a15c:	ef 90       	pop	r14
   1a15e:	08 95       	ret

0001a160 <_ZN5Print5printEPKc>:
   1a160:	0c 94 64 83 	jmp	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>

0001a164 <_ZN5Print5printEc>:
   1a164:	dc 01       	movw	r26, r24
   1a166:	ed 91       	ld	r30, X+
   1a168:	fc 91       	ld	r31, X
   1a16a:	01 90       	ld	r0, Z+
   1a16c:	f0 81       	ld	r31, Z
   1a16e:	e0 2d       	mov	r30, r0
   1a170:	19 94       	eijmp

0001a172 <_ZN5Print7printlnEv>:
   1a172:	6e e6       	ldi	r22, 0x6E	; 110
   1a174:	77 e0       	ldi	r23, 0x07	; 7
   1a176:	0c 94 64 83 	jmp	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>

0001a17a <_ZN5Print7printlnEPK19__FlashStringHelper>:
   1a17a:	0f 93       	push	r16
   1a17c:	1f 93       	push	r17
   1a17e:	cf 93       	push	r28
   1a180:	df 93       	push	r29
   1a182:	ec 01       	movw	r28, r24
   1a184:	c9 df       	rcall	.-110    	; 0x1a118 <_ZN5Print5printEPK19__FlashStringHelper>
   1a186:	8c 01       	movw	r16, r24
   1a188:	ce 01       	movw	r24, r28
   1a18a:	f3 df       	rcall	.-26     	; 0x1a172 <_ZN5Print7printlnEv>
   1a18c:	80 0f       	add	r24, r16
   1a18e:	91 1f       	adc	r25, r17
   1a190:	df 91       	pop	r29
   1a192:	cf 91       	pop	r28
   1a194:	1f 91       	pop	r17
   1a196:	0f 91       	pop	r16
   1a198:	08 95       	ret

0001a19a <_ZN5Print7printlnEPKc>:
   1a19a:	0f 93       	push	r16
   1a19c:	1f 93       	push	r17
   1a19e:	cf 93       	push	r28
   1a1a0:	df 93       	push	r29
   1a1a2:	ec 01       	movw	r28, r24
   1a1a4:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1a1a8:	8c 01       	movw	r16, r24
   1a1aa:	ce 01       	movw	r24, r28
   1a1ac:	e2 df       	rcall	.-60     	; 0x1a172 <_ZN5Print7printlnEv>
   1a1ae:	80 0f       	add	r24, r16
   1a1b0:	91 1f       	adc	r25, r17
   1a1b2:	df 91       	pop	r29
   1a1b4:	cf 91       	pop	r28
   1a1b6:	1f 91       	pop	r17
   1a1b8:	0f 91       	pop	r16
   1a1ba:	08 95       	ret

0001a1bc <_ZN5Print11printNumberEmh>:
   1a1bc:	8f 92       	push	r8
   1a1be:	9f 92       	push	r9
   1a1c0:	af 92       	push	r10
   1a1c2:	bf 92       	push	r11
   1a1c4:	ef 92       	push	r14
   1a1c6:	ff 92       	push	r15
   1a1c8:	0f 93       	push	r16
   1a1ca:	1f 93       	push	r17
   1a1cc:	cf 93       	push	r28
   1a1ce:	df 93       	push	r29
   1a1d0:	cd b7       	in	r28, 0x3d	; 61
   1a1d2:	de b7       	in	r29, 0x3e	; 62
   1a1d4:	a1 97       	sbiw	r28, 0x21	; 33
   1a1d6:	0f b6       	in	r0, 0x3f	; 63
   1a1d8:	f8 94       	cli
   1a1da:	de bf       	out	0x3e, r29	; 62
   1a1dc:	0f be       	out	0x3f, r0	; 63
   1a1de:	cd bf       	out	0x3d, r28	; 61
   1a1e0:	7c 01       	movw	r14, r24
   1a1e2:	fa 01       	movw	r30, r20
   1a1e4:	cb 01       	movw	r24, r22
   1a1e6:	19 a2       	std	Y+33, r1	; 0x21
   1a1e8:	22 30       	cpi	r18, 0x02	; 2
   1a1ea:	08 f4       	brcc	.+2      	; 0x1a1ee <_ZN5Print11printNumberEmh+0x32>
   1a1ec:	2a e0       	ldi	r18, 0x0A	; 10
   1a1ee:	8e 01       	movw	r16, r28
   1a1f0:	0f 5d       	subi	r16, 0xDF	; 223
   1a1f2:	1f 4f       	sbci	r17, 0xFF	; 255
   1a1f4:	82 2e       	mov	r8, r18
   1a1f6:	91 2c       	mov	r9, r1
   1a1f8:	a1 2c       	mov	r10, r1
   1a1fa:	b1 2c       	mov	r11, r1
   1a1fc:	bf 01       	movw	r22, r30
   1a1fe:	a5 01       	movw	r20, r10
   1a200:	94 01       	movw	r18, r8
   1a202:	0e 94 45 e7 	call	0x1ce8a	; 0x1ce8a <__udivmodsi4>
   1a206:	f9 01       	movw	r30, r18
   1a208:	ca 01       	movw	r24, r20
   1a20a:	01 50       	subi	r16, 0x01	; 1
   1a20c:	11 09       	sbc	r17, r1
   1a20e:	6a 30       	cpi	r22, 0x0A	; 10
   1a210:	10 f4       	brcc	.+4      	; 0x1a216 <_ZN5Print11printNumberEmh+0x5a>
   1a212:	60 5d       	subi	r22, 0xD0	; 208
   1a214:	01 c0       	rjmp	.+2      	; 0x1a218 <_ZN5Print11printNumberEmh+0x5c>
   1a216:	69 5c       	subi	r22, 0xC9	; 201
   1a218:	d8 01       	movw	r26, r16
   1a21a:	6c 93       	st	X, r22
   1a21c:	23 2b       	or	r18, r19
   1a21e:	24 2b       	or	r18, r20
   1a220:	25 2b       	or	r18, r21
   1a222:	61 f7       	brne	.-40     	; 0x1a1fc <_ZN5Print11printNumberEmh+0x40>
   1a224:	b8 01       	movw	r22, r16
   1a226:	c7 01       	movw	r24, r14
   1a228:	0e 94 64 83 	call	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1a22c:	a1 96       	adiw	r28, 0x21	; 33
   1a22e:	0f b6       	in	r0, 0x3f	; 63
   1a230:	f8 94       	cli
   1a232:	de bf       	out	0x3e, r29	; 62
   1a234:	0f be       	out	0x3f, r0	; 63
   1a236:	cd bf       	out	0x3d, r28	; 61
   1a238:	df 91       	pop	r29
   1a23a:	cf 91       	pop	r28
   1a23c:	1f 91       	pop	r17
   1a23e:	0f 91       	pop	r16
   1a240:	ff 90       	pop	r15
   1a242:	ef 90       	pop	r14
   1a244:	bf 90       	pop	r11
   1a246:	af 90       	pop	r10
   1a248:	9f 90       	pop	r9
   1a24a:	8f 90       	pop	r8
   1a24c:	08 95       	ret

0001a24e <_ZN5Print5printEmi>:
   1a24e:	21 15       	cp	r18, r1
   1a250:	31 05       	cpc	r19, r1
   1a252:	41 f4       	brne	.+16     	; 0x1a264 <_ZN5Print5printEmi+0x16>
   1a254:	dc 01       	movw	r26, r24
   1a256:	ed 91       	ld	r30, X+
   1a258:	fc 91       	ld	r31, X
   1a25a:	01 90       	ld	r0, Z+
   1a25c:	f0 81       	ld	r31, Z
   1a25e:	e0 2d       	mov	r30, r0
   1a260:	64 2f       	mov	r22, r20
   1a262:	19 94       	eijmp
   1a264:	ab cf       	rjmp	.-170    	; 0x1a1bc <_ZN5Print11printNumberEmh>

0001a266 <_ZN5Print5printEhi>:
   1a266:	9a 01       	movw	r18, r20
   1a268:	46 2f       	mov	r20, r22
   1a26a:	50 e0       	ldi	r21, 0x00	; 0
   1a26c:	60 e0       	ldi	r22, 0x00	; 0
   1a26e:	70 e0       	ldi	r23, 0x00	; 0
   1a270:	ee cf       	rjmp	.-36     	; 0x1a24e <_ZN5Print5printEmi>

0001a272 <_ZN5Print7printlnEhi>:
   1a272:	0f 93       	push	r16
   1a274:	1f 93       	push	r17
   1a276:	cf 93       	push	r28
   1a278:	df 93       	push	r29
   1a27a:	ec 01       	movw	r28, r24
   1a27c:	f4 df       	rcall	.-24     	; 0x1a266 <_ZN5Print5printEhi>
   1a27e:	8c 01       	movw	r16, r24
   1a280:	ce 01       	movw	r24, r28
   1a282:	77 df       	rcall	.-274    	; 0x1a172 <_ZN5Print7printlnEv>
   1a284:	80 0f       	add	r24, r16
   1a286:	91 1f       	adc	r25, r17
   1a288:	df 91       	pop	r29
   1a28a:	cf 91       	pop	r28
   1a28c:	1f 91       	pop	r17
   1a28e:	0f 91       	pop	r16
   1a290:	08 95       	ret

0001a292 <_ZN5Print5printEji>:
   1a292:	9a 01       	movw	r18, r20
   1a294:	ab 01       	movw	r20, r22
   1a296:	60 e0       	ldi	r22, 0x00	; 0
   1a298:	70 e0       	ldi	r23, 0x00	; 0
   1a29a:	d9 cf       	rjmp	.-78     	; 0x1a24e <_ZN5Print5printEmi>

0001a29c <_ZN5Print7printlnEji>:
   1a29c:	0f 93       	push	r16
   1a29e:	1f 93       	push	r17
   1a2a0:	cf 93       	push	r28
   1a2a2:	df 93       	push	r29
   1a2a4:	ec 01       	movw	r28, r24
   1a2a6:	f5 df       	rcall	.-22     	; 0x1a292 <_ZN5Print5printEji>
   1a2a8:	8c 01       	movw	r16, r24
   1a2aa:	ce 01       	movw	r24, r28
   1a2ac:	62 df       	rcall	.-316    	; 0x1a172 <_ZN5Print7printlnEv>
   1a2ae:	80 0f       	add	r24, r16
   1a2b0:	91 1f       	adc	r25, r17
   1a2b2:	df 91       	pop	r29
   1a2b4:	cf 91       	pop	r28
   1a2b6:	1f 91       	pop	r17
   1a2b8:	0f 91       	pop	r16
   1a2ba:	08 95       	ret

0001a2bc <_ZN5Print7printlnEmi>:
   1a2bc:	0f 93       	push	r16
   1a2be:	1f 93       	push	r17
   1a2c0:	cf 93       	push	r28
   1a2c2:	df 93       	push	r29
   1a2c4:	ec 01       	movw	r28, r24
   1a2c6:	c3 df       	rcall	.-122    	; 0x1a24e <_ZN5Print5printEmi>
   1a2c8:	8c 01       	movw	r16, r24
   1a2ca:	ce 01       	movw	r24, r28
   1a2cc:	52 df       	rcall	.-348    	; 0x1a172 <_ZN5Print7printlnEv>
   1a2ce:	80 0f       	add	r24, r16
   1a2d0:	91 1f       	adc	r25, r17
   1a2d2:	df 91       	pop	r29
   1a2d4:	cf 91       	pop	r28
   1a2d6:	1f 91       	pop	r17
   1a2d8:	0f 91       	pop	r16
   1a2da:	08 95       	ret

0001a2dc <_ZN5Print5printEli>:
   1a2dc:	cf 92       	push	r12
   1a2de:	df 92       	push	r13
   1a2e0:	ef 92       	push	r14
   1a2e2:	ff 92       	push	r15
   1a2e4:	0f 93       	push	r16
   1a2e6:	1f 93       	push	r17
   1a2e8:	cf 93       	push	r28
   1a2ea:	df 93       	push	r29
   1a2ec:	21 15       	cp	r18, r1
   1a2ee:	31 05       	cpc	r19, r1
   1a2f0:	81 f4       	brne	.+32     	; 0x1a312 <_ZN5Print5printEli+0x36>
   1a2f2:	dc 01       	movw	r26, r24
   1a2f4:	ed 91       	ld	r30, X+
   1a2f6:	fc 91       	ld	r31, X
   1a2f8:	01 90       	ld	r0, Z+
   1a2fa:	f0 81       	ld	r31, Z
   1a2fc:	e0 2d       	mov	r30, r0
   1a2fe:	64 2f       	mov	r22, r20
   1a300:	df 91       	pop	r29
   1a302:	cf 91       	pop	r28
   1a304:	1f 91       	pop	r17
   1a306:	0f 91       	pop	r16
   1a308:	ff 90       	pop	r15
   1a30a:	ef 90       	pop	r14
   1a30c:	df 90       	pop	r13
   1a30e:	cf 90       	pop	r12
   1a310:	19 94       	eijmp
   1a312:	2a 30       	cpi	r18, 0x0A	; 10
   1a314:	31 05       	cpc	r19, r1
   1a316:	f1 f4       	brne	.+60     	; 0x1a354 <_ZN5Print5printEli+0x78>
   1a318:	77 ff       	sbrs	r23, 7
   1a31a:	1b c0       	rjmp	.+54     	; 0x1a352 <_ZN5Print5printEli+0x76>
   1a31c:	6a 01       	movw	r12, r20
   1a31e:	7b 01       	movw	r14, r22
   1a320:	ec 01       	movw	r28, r24
   1a322:	6d e2       	ldi	r22, 0x2D	; 45
   1a324:	1f df       	rcall	.-450    	; 0x1a164 <_ZN5Print5printEc>
   1a326:	8c 01       	movw	r16, r24
   1a328:	44 27       	eor	r20, r20
   1a32a:	55 27       	eor	r21, r21
   1a32c:	ba 01       	movw	r22, r20
   1a32e:	4c 19       	sub	r20, r12
   1a330:	5d 09       	sbc	r21, r13
   1a332:	6e 09       	sbc	r22, r14
   1a334:	7f 09       	sbc	r23, r15
   1a336:	2a e0       	ldi	r18, 0x0A	; 10
   1a338:	ce 01       	movw	r24, r28
   1a33a:	40 df       	rcall	.-384    	; 0x1a1bc <_ZN5Print11printNumberEmh>
   1a33c:	80 0f       	add	r24, r16
   1a33e:	91 1f       	adc	r25, r17
   1a340:	df 91       	pop	r29
   1a342:	cf 91       	pop	r28
   1a344:	1f 91       	pop	r17
   1a346:	0f 91       	pop	r16
   1a348:	ff 90       	pop	r15
   1a34a:	ef 90       	pop	r14
   1a34c:	df 90       	pop	r13
   1a34e:	cf 90       	pop	r12
   1a350:	08 95       	ret
   1a352:	2a e0       	ldi	r18, 0x0A	; 10
   1a354:	df 91       	pop	r29
   1a356:	cf 91       	pop	r28
   1a358:	1f 91       	pop	r17
   1a35a:	0f 91       	pop	r16
   1a35c:	ff 90       	pop	r15
   1a35e:	ef 90       	pop	r14
   1a360:	df 90       	pop	r13
   1a362:	cf 90       	pop	r12
   1a364:	2b cf       	rjmp	.-426    	; 0x1a1bc <_ZN5Print11printNumberEmh>

0001a366 <_ZN5Print5printEii>:
   1a366:	9a 01       	movw	r18, r20
   1a368:	ab 01       	movw	r20, r22
   1a36a:	77 0f       	add	r23, r23
   1a36c:	66 0b       	sbc	r22, r22
   1a36e:	77 0b       	sbc	r23, r23
   1a370:	b5 cf       	rjmp	.-150    	; 0x1a2dc <_ZN5Print5printEli>

0001a372 <_ZN5Print7printlnEii>:
   1a372:	0f 93       	push	r16
   1a374:	1f 93       	push	r17
   1a376:	cf 93       	push	r28
   1a378:	df 93       	push	r29
   1a37a:	ec 01       	movw	r28, r24
   1a37c:	f4 df       	rcall	.-24     	; 0x1a366 <_ZN5Print5printEii>
   1a37e:	8c 01       	movw	r16, r24
   1a380:	ce 01       	movw	r24, r28
   1a382:	f7 de       	rcall	.-530    	; 0x1a172 <_ZN5Print7printlnEv>
   1a384:	80 0f       	add	r24, r16
   1a386:	91 1f       	adc	r25, r17
   1a388:	df 91       	pop	r29
   1a38a:	cf 91       	pop	r28
   1a38c:	1f 91       	pop	r17
   1a38e:	0f 91       	pop	r16
   1a390:	08 95       	ret

0001a392 <_ZN5Print10printFloatEdh>:
   1a392:	7f 92       	push	r7
   1a394:	8f 92       	push	r8
   1a396:	9f 92       	push	r9
   1a398:	af 92       	push	r10
   1a39a:	bf 92       	push	r11
   1a39c:	cf 92       	push	r12
   1a39e:	df 92       	push	r13
   1a3a0:	ef 92       	push	r14
   1a3a2:	ff 92       	push	r15
   1a3a4:	0f 93       	push	r16
   1a3a6:	1f 93       	push	r17
   1a3a8:	cf 93       	push	r28
   1a3aa:	df 93       	push	r29
   1a3ac:	8c 01       	movw	r16, r24
   1a3ae:	6a 01       	movw	r12, r20
   1a3b0:	7b 01       	movw	r14, r22
   1a3b2:	72 2e       	mov	r7, r18
   1a3b4:	9a 01       	movw	r18, r20
   1a3b6:	ab 01       	movw	r20, r22
   1a3b8:	c7 01       	movw	r24, r14
   1a3ba:	b6 01       	movw	r22, r12
   1a3bc:	0e 94 d8 e5 	call	0x1cbb0	; 0x1cbb0 <__unordsf2>
   1a3c0:	88 23       	and	r24, r24
   1a3c2:	19 f0       	breq	.+6      	; 0x1a3ca <_ZN5Print10printFloatEdh+0x38>
   1a3c4:	6f eb       	ldi	r22, 0xBF	; 191
   1a3c6:	77 e0       	ldi	r23, 0x07	; 7
   1a3c8:	25 c0       	rjmp	.+74     	; 0x1a414 <_ZN5Print10printFloatEdh+0x82>
   1a3ca:	46 01       	movw	r8, r12
   1a3cc:	57 01       	movw	r10, r14
   1a3ce:	e8 94       	clt
   1a3d0:	b7 f8       	bld	r11, 7
   1a3d2:	2f ef       	ldi	r18, 0xFF	; 255
   1a3d4:	3f ef       	ldi	r19, 0xFF	; 255
   1a3d6:	4f e7       	ldi	r20, 0x7F	; 127
   1a3d8:	5f e7       	ldi	r21, 0x7F	; 127
   1a3da:	c5 01       	movw	r24, r10
   1a3dc:	b4 01       	movw	r22, r8
   1a3de:	0e 94 d8 e5 	call	0x1cbb0	; 0x1cbb0 <__unordsf2>
   1a3e2:	81 11       	cpse	r24, r1
   1a3e4:	0c c0       	rjmp	.+24     	; 0x1a3fe <_ZN5Print10printFloatEdh+0x6c>
   1a3e6:	2f ef       	ldi	r18, 0xFF	; 255
   1a3e8:	3f ef       	ldi	r19, 0xFF	; 255
   1a3ea:	4f e7       	ldi	r20, 0x7F	; 127
   1a3ec:	5f e7       	ldi	r21, 0x7F	; 127
   1a3ee:	c5 01       	movw	r24, r10
   1a3f0:	b4 01       	movw	r22, r8
   1a3f2:	54 da       	rcall	.-2904   	; 0x1989c <__cmpsf2>
   1a3f4:	18 16       	cp	r1, r24
   1a3f6:	1c f4       	brge	.+6      	; 0x1a3fe <_ZN5Print10printFloatEdh+0x6c>
   1a3f8:	63 ec       	ldi	r22, 0xC3	; 195
   1a3fa:	77 e0       	ldi	r23, 0x07	; 7
   1a3fc:	0b c0       	rjmp	.+22     	; 0x1a414 <_ZN5Print10printFloatEdh+0x82>
   1a3fe:	2f ef       	ldi	r18, 0xFF	; 255
   1a400:	3f ef       	ldi	r19, 0xFF	; 255
   1a402:	4f e7       	ldi	r20, 0x7F	; 127
   1a404:	5f e4       	ldi	r21, 0x4F	; 79
   1a406:	c7 01       	movw	r24, r14
   1a408:	b6 01       	movw	r22, r12
   1a40a:	92 db       	rcall	.-2268   	; 0x19b30 <__gesf2>
   1a40c:	18 16       	cp	r1, r24
   1a40e:	94 f4       	brge	.+36     	; 0x1a434 <_ZN5Print10printFloatEdh+0xa2>
   1a410:	67 ec       	ldi	r22, 0xC7	; 199
   1a412:	77 e0       	ldi	r23, 0x07	; 7
   1a414:	c8 01       	movw	r24, r16
   1a416:	df 91       	pop	r29
   1a418:	cf 91       	pop	r28
   1a41a:	1f 91       	pop	r17
   1a41c:	0f 91       	pop	r16
   1a41e:	ff 90       	pop	r15
   1a420:	ef 90       	pop	r14
   1a422:	df 90       	pop	r13
   1a424:	cf 90       	pop	r12
   1a426:	bf 90       	pop	r11
   1a428:	af 90       	pop	r10
   1a42a:	9f 90       	pop	r9
   1a42c:	8f 90       	pop	r8
   1a42e:	7f 90       	pop	r7
   1a430:	0c 94 64 83 	jmp	0x106c8	; 0x106c8 <_ZN5Print5writeEPKc>
   1a434:	2f ef       	ldi	r18, 0xFF	; 255
   1a436:	3f ef       	ldi	r19, 0xFF	; 255
   1a438:	4f e7       	ldi	r20, 0x7F	; 127
   1a43a:	5f ec       	ldi	r21, 0xCF	; 207
   1a43c:	c7 01       	movw	r24, r14
   1a43e:	b6 01       	movw	r22, r12
   1a440:	2d da       	rcall	.-2982   	; 0x1989c <__cmpsf2>
   1a442:	87 fd       	sbrc	r24, 7
   1a444:	e5 cf       	rjmp	.-54     	; 0x1a410 <_ZN5Print10printFloatEdh+0x7e>
   1a446:	20 e0       	ldi	r18, 0x00	; 0
   1a448:	30 e0       	ldi	r19, 0x00	; 0
   1a44a:	a9 01       	movw	r20, r18
   1a44c:	c7 01       	movw	r24, r14
   1a44e:	b6 01       	movw	r22, r12
   1a450:	25 da       	rcall	.-2998   	; 0x1989c <__cmpsf2>
   1a452:	87 ff       	sbrs	r24, 7
   1a454:	09 c0       	rjmp	.+18     	; 0x1a468 <_ZN5Print10printFloatEdh+0xd6>
   1a456:	6d e2       	ldi	r22, 0x2D	; 45
   1a458:	c8 01       	movw	r24, r16
   1a45a:	84 de       	rcall	.-760    	; 0x1a164 <_ZN5Print5printEc>
   1a45c:	ec 01       	movw	r28, r24
   1a45e:	f7 fa       	bst	r15, 7
   1a460:	f0 94       	com	r15
   1a462:	f7 f8       	bld	r15, 7
   1a464:	f0 94       	com	r15
   1a466:	02 c0       	rjmp	.+4      	; 0x1a46c <_ZN5Print10printFloatEdh+0xda>
   1a468:	c0 e0       	ldi	r28, 0x00	; 0
   1a46a:	d0 e0       	ldi	r29, 0x00	; 0
   1a46c:	b1 2c       	mov	r11, r1
   1a46e:	60 e0       	ldi	r22, 0x00	; 0
   1a470:	70 e0       	ldi	r23, 0x00	; 0
   1a472:	80 e0       	ldi	r24, 0x00	; 0
   1a474:	9f e3       	ldi	r25, 0x3F	; 63
   1a476:	7b 14       	cp	r7, r11
   1a478:	39 f0       	breq	.+14     	; 0x1a488 <_ZN5Print10printFloatEdh+0xf6>
   1a47a:	20 e0       	ldi	r18, 0x00	; 0
   1a47c:	30 e0       	ldi	r19, 0x00	; 0
   1a47e:	40 e2       	ldi	r20, 0x20	; 32
   1a480:	51 e4       	ldi	r21, 0x41	; 65
   1a482:	10 da       	rcall	.-3040   	; 0x198a4 <__divsf3>
   1a484:	b3 94       	inc	r11
   1a486:	f7 cf       	rjmp	.-18     	; 0x1a476 <_ZN5Print10printFloatEdh+0xe4>
   1a488:	a7 01       	movw	r20, r14
   1a48a:	96 01       	movw	r18, r12
   1a48c:	a3 d9       	rcall	.-3258   	; 0x197d4 <__addsf3>
   1a48e:	6b 01       	movw	r12, r22
   1a490:	7c 01       	movw	r14, r24
   1a492:	70 da       	rcall	.-2848   	; 0x19974 <__fixunssfsi>
   1a494:	4b 01       	movw	r8, r22
   1a496:	5c 01       	movw	r10, r24
   1a498:	2a e0       	ldi	r18, 0x0A	; 10
   1a49a:	ab 01       	movw	r20, r22
   1a49c:	bc 01       	movw	r22, r24
   1a49e:	c8 01       	movw	r24, r16
   1a4a0:	8d de       	rcall	.-742    	; 0x1a1bc <_ZN5Print11printNumberEmh>
   1a4a2:	c8 0f       	add	r28, r24
   1a4a4:	d9 1f       	adc	r29, r25
   1a4a6:	77 20       	and	r7, r7
   1a4a8:	79 f1       	breq	.+94     	; 0x1a508 <_ZN5Print10printFloatEdh+0x176>
   1a4aa:	c5 01       	movw	r24, r10
   1a4ac:	b4 01       	movw	r22, r8
   1a4ae:	8e da       	rcall	.-2788   	; 0x199cc <__floatunsisf>
   1a4b0:	9b 01       	movw	r18, r22
   1a4b2:	ac 01       	movw	r20, r24
   1a4b4:	c7 01       	movw	r24, r14
   1a4b6:	b6 01       	movw	r22, r12
   1a4b8:	8c d9       	rcall	.-3304   	; 0x197d2 <__subsf3>
   1a4ba:	6b 01       	movw	r12, r22
   1a4bc:	7c 01       	movw	r14, r24
   1a4be:	6e e2       	ldi	r22, 0x2E	; 46
   1a4c0:	c8 01       	movw	r24, r16
   1a4c2:	50 de       	rcall	.-864    	; 0x1a164 <_ZN5Print5printEc>
   1a4c4:	c8 0f       	add	r28, r24
   1a4c6:	d9 1f       	adc	r29, r25
   1a4c8:	20 e0       	ldi	r18, 0x00	; 0
   1a4ca:	30 e0       	ldi	r19, 0x00	; 0
   1a4cc:	40 e2       	ldi	r20, 0x20	; 32
   1a4ce:	51 e4       	ldi	r21, 0x41	; 65
   1a4d0:	c7 01       	movw	r24, r14
   1a4d2:	b6 01       	movw	r22, r12
   1a4d4:	31 db       	rcall	.-2462   	; 0x19b38 <__mulsf3>
   1a4d6:	4b 01       	movw	r8, r22
   1a4d8:	5c 01       	movw	r10, r24
   1a4da:	4c da       	rcall	.-2920   	; 0x19974 <__fixunssfsi>
   1a4dc:	6b 01       	movw	r12, r22
   1a4de:	7c 01       	movw	r14, r24
   1a4e0:	4a e0       	ldi	r20, 0x0A	; 10
   1a4e2:	50 e0       	ldi	r21, 0x00	; 0
   1a4e4:	c8 01       	movw	r24, r16
   1a4e6:	d5 de       	rcall	.-598    	; 0x1a292 <_ZN5Print5printEji>
   1a4e8:	c8 0f       	add	r28, r24
   1a4ea:	d9 1f       	adc	r29, r25
   1a4ec:	b6 01       	movw	r22, r12
   1a4ee:	80 e0       	ldi	r24, 0x00	; 0
   1a4f0:	90 e0       	ldi	r25, 0x00	; 0
   1a4f2:	6c da       	rcall	.-2856   	; 0x199cc <__floatunsisf>
   1a4f4:	9b 01       	movw	r18, r22
   1a4f6:	ac 01       	movw	r20, r24
   1a4f8:	c5 01       	movw	r24, r10
   1a4fa:	b4 01       	movw	r22, r8
   1a4fc:	6a d9       	rcall	.-3372   	; 0x197d2 <__subsf3>
   1a4fe:	6b 01       	movw	r12, r22
   1a500:	7c 01       	movw	r14, r24
   1a502:	7a 94       	dec	r7
   1a504:	71 10       	cpse	r7, r1
   1a506:	e0 cf       	rjmp	.-64     	; 0x1a4c8 <_ZN5Print10printFloatEdh+0x136>
   1a508:	ce 01       	movw	r24, r28
   1a50a:	df 91       	pop	r29
   1a50c:	cf 91       	pop	r28
   1a50e:	1f 91       	pop	r17
   1a510:	0f 91       	pop	r16
   1a512:	ff 90       	pop	r15
   1a514:	ef 90       	pop	r14
   1a516:	df 90       	pop	r13
   1a518:	cf 90       	pop	r12
   1a51a:	bf 90       	pop	r11
   1a51c:	af 90       	pop	r10
   1a51e:	9f 90       	pop	r9
   1a520:	8f 90       	pop	r8
   1a522:	7f 90       	pop	r7
   1a524:	08 95       	ret

0001a526 <_ZN5Print7printlnEdi>:
  n += println();
  return n;
}

size_t Print::println(double num, int digits)
{
   1a526:	0f 93       	push	r16
   1a528:	1f 93       	push	r17
   1a52a:	cf 93       	push	r28
   1a52c:	df 93       	push	r29
   1a52e:	ec 01       	movw	r28, r24
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
   1a530:	30 df       	rcall	.-416    	; 0x1a392 <_ZN5Print10printFloatEdh>
   1a532:	8c 01       	movw	r16, r24
}

size_t Print::println(double num, int digits)
{
  size_t n = print(num, digits);
  n += println();
   1a534:	ce 01       	movw	r24, r28
   1a536:	1d de       	rcall	.-966    	; 0x1a172 <_ZN5Print7printlnEv>
  return n;
}
   1a538:	80 0f       	add	r24, r16
   1a53a:	91 1f       	adc	r25, r17
   1a53c:	df 91       	pop	r29
   1a53e:	cf 91       	pop	r28
   1a540:	1f 91       	pop	r17
   1a542:	0f 91       	pop	r16
   1a544:	08 95       	ret

0001a546 <_ZN6Stream9timedReadEv>:
    value = -value;
  if(isFraction)
    return value * fraction;
  else
    return value;
}
   1a546:	0f 93       	push	r16
   1a548:	1f 93       	push	r17
   1a54a:	cf 93       	push	r28
   1a54c:	df 93       	push	r29
   1a54e:	ec 01       	movw	r28, r24
   1a550:	96 d0       	rcall	.+300    	; 0x1a67e <millis>
   1a552:	68 87       	std	Y+8, r22	; 0x08
   1a554:	79 87       	std	Y+9, r23	; 0x09
   1a556:	8a 87       	std	Y+10, r24	; 0x0a
   1a558:	9b 87       	std	Y+11, r25	; 0x0b
   1a55a:	e8 81       	ld	r30, Y
   1a55c:	f9 81       	ldd	r31, Y+1	; 0x01
   1a55e:	02 84       	ldd	r0, Z+10	; 0x0a
   1a560:	f3 85       	ldd	r31, Z+11	; 0x0b
   1a562:	e0 2d       	mov	r30, r0
   1a564:	ce 01       	movw	r24, r28
   1a566:	19 95       	eicall
   1a568:	97 ff       	sbrs	r25, 7
   1a56a:	16 c0       	rjmp	.+44     	; 0x1a598 <_ZN6Stream9timedReadEv+0x52>
   1a56c:	88 d0       	rcall	.+272    	; 0x1a67e <millis>
   1a56e:	08 85       	ldd	r16, Y+8	; 0x08
   1a570:	19 85       	ldd	r17, Y+9	; 0x09
   1a572:	2a 85       	ldd	r18, Y+10	; 0x0a
   1a574:	3b 85       	ldd	r19, Y+11	; 0x0b
   1a576:	dc 01       	movw	r26, r24
   1a578:	cb 01       	movw	r24, r22
   1a57a:	80 1b       	sub	r24, r16
   1a57c:	91 0b       	sbc	r25, r17
   1a57e:	a2 0b       	sbc	r26, r18
   1a580:	b3 0b       	sbc	r27, r19
   1a582:	0c 81       	ldd	r16, Y+4	; 0x04
   1a584:	1d 81       	ldd	r17, Y+5	; 0x05
   1a586:	2e 81       	ldd	r18, Y+6	; 0x06
   1a588:	3f 81       	ldd	r19, Y+7	; 0x07
   1a58a:	80 17       	cp	r24, r16
   1a58c:	91 07       	cpc	r25, r17
   1a58e:	a2 07       	cpc	r26, r18
   1a590:	b3 07       	cpc	r27, r19
   1a592:	18 f3       	brcs	.-58     	; 0x1a55a <_ZN6Stream9timedReadEv+0x14>
   1a594:	8f ef       	ldi	r24, 0xFF	; 255
   1a596:	9f ef       	ldi	r25, 0xFF	; 255
   1a598:	df 91       	pop	r29
   1a59a:	cf 91       	pop	r28
   1a59c:	1f 91       	pop	r17
   1a59e:	0f 91       	pop	r16
   1a5a0:	08 95       	ret

0001a5a2 <_ZN6Stream9readBytesEPcj>:
// terminates if length characters have been read, or timeout (see setTimeout)
// returns the number of characters placed in the buffer
// the buffer is NOT null terminated.
//
size_t Stream::readBytes(char *buffer, size_t length)
{
   1a5a2:	cf 92       	push	r12
   1a5a4:	df 92       	push	r13
   1a5a6:	ef 92       	push	r14
   1a5a8:	ff 92       	push	r15
   1a5aa:	0f 93       	push	r16
   1a5ac:	1f 93       	push	r17
   1a5ae:	cf 93       	push	r28
   1a5b0:	df 93       	push	r29
   1a5b2:	6c 01       	movw	r12, r24
   1a5b4:	7a 01       	movw	r14, r20
   1a5b6:	8b 01       	movw	r16, r22
  size_t count = 0;
   1a5b8:	c0 e0       	ldi	r28, 0x00	; 0
   1a5ba:	d0 e0       	ldi	r29, 0x00	; 0
  while (count < length) {
   1a5bc:	ce 15       	cp	r28, r14
   1a5be:	df 05       	cpc	r29, r15
   1a5c0:	51 f0       	breq	.+20     	; 0x1a5d6 <_ZN6Stream9readBytesEPcj+0x34>
    int c = timedRead();
   1a5c2:	c6 01       	movw	r24, r12
   1a5c4:	c0 df       	rcall	.-128    	; 0x1a546 <_ZN6Stream9timedReadEv>
    if (c < 0) break;
   1a5c6:	97 fd       	sbrc	r25, 7
   1a5c8:	05 c0       	rjmp	.+10     	; 0x1a5d4 <_ZN6Stream9readBytesEPcj+0x32>
    *buffer++ = (char)c;
   1a5ca:	f8 01       	movw	r30, r16
   1a5cc:	81 93       	st	Z+, r24
   1a5ce:	8f 01       	movw	r16, r30
    count++;
   1a5d0:	21 96       	adiw	r28, 0x01	; 1
// the buffer is NOT null terminated.
//
size_t Stream::readBytes(char *buffer, size_t length)
{
  size_t count = 0;
  while (count < length) {
   1a5d2:	f4 cf       	rjmp	.-24     	; 0x1a5bc <_ZN6Stream9readBytesEPcj+0x1a>
   1a5d4:	7e 01       	movw	r14, r28
    if (c < 0) break;
    *buffer++ = (char)c;
    count++;
  }
  return count;
}
   1a5d6:	c7 01       	movw	r24, r14
   1a5d8:	df 91       	pop	r29
   1a5da:	cf 91       	pop	r28
   1a5dc:	1f 91       	pop	r17
   1a5de:	0f 91       	pop	r16
   1a5e0:	ff 90       	pop	r15
   1a5e2:	ef 90       	pop	r14
   1a5e4:	df 90       	pop	r13
   1a5e6:	cf 90       	pop	r12
   1a5e8:	08 95       	ret

0001a5ea <__vector_23>:
#if defined(TIM0_OVF_vect)
ISR(TIM0_OVF_vect)
#else
ISR(TIMER0_OVF_vect)
#endif
{
   1a5ea:	1f 92       	push	r1
   1a5ec:	0f 92       	push	r0
   1a5ee:	0f b6       	in	r0, 0x3f	; 63
   1a5f0:	0f 92       	push	r0
   1a5f2:	11 24       	eor	r1, r1
   1a5f4:	2f 93       	push	r18
   1a5f6:	3f 93       	push	r19
   1a5f8:	8f 93       	push	r24
   1a5fa:	9f 93       	push	r25
   1a5fc:	af 93       	push	r26
   1a5fe:	bf 93       	push	r27
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
   1a600:	80 91 ea 19 	lds	r24, 0x19EA	; 0x8019ea <timer0_millis>
   1a604:	90 91 eb 19 	lds	r25, 0x19EB	; 0x8019eb <timer0_millis+0x1>
   1a608:	a0 91 ec 19 	lds	r26, 0x19EC	; 0x8019ec <timer0_millis+0x2>
   1a60c:	b0 91 ed 19 	lds	r27, 0x19ED	; 0x8019ed <timer0_millis+0x3>
	unsigned char f = timer0_fract;
   1a610:	30 91 e9 19 	lds	r19, 0x19E9	; 0x8019e9 <timer0_fract>

	m += MILLIS_INC;
	f += FRACT_INC;
   1a614:	23 e0       	ldi	r18, 0x03	; 3
   1a616:	23 0f       	add	r18, r19
	if (f >= FRACT_MAX) {
   1a618:	2d 37       	cpi	r18, 0x7D	; 125
   1a61a:	20 f4       	brcc	.+8      	; 0x1a624 <__vector_23+0x3a>
	// copy these to local variables so they can be stored in registers
	// (volatile variables must be read from memory on every access)
	unsigned long m = timer0_millis;
	unsigned char f = timer0_fract;

	m += MILLIS_INC;
   1a61c:	01 96       	adiw	r24, 0x01	; 1
   1a61e:	a1 1d       	adc	r26, r1
   1a620:	b1 1d       	adc	r27, r1
   1a622:	05 c0       	rjmp	.+10     	; 0x1a62e <__vector_23+0x44>
	f += FRACT_INC;
	if (f >= FRACT_MAX) {
		f -= FRACT_MAX;
   1a624:	26 e8       	ldi	r18, 0x86	; 134
   1a626:	23 0f       	add	r18, r19
		m += 1;
   1a628:	02 96       	adiw	r24, 0x02	; 2
   1a62a:	a1 1d       	adc	r26, r1
   1a62c:	b1 1d       	adc	r27, r1
	}

	timer0_fract = f;
   1a62e:	20 93 e9 19 	sts	0x19E9, r18	; 0x8019e9 <timer0_fract>
	timer0_millis = m;
   1a632:	80 93 ea 19 	sts	0x19EA, r24	; 0x8019ea <timer0_millis>
   1a636:	90 93 eb 19 	sts	0x19EB, r25	; 0x8019eb <timer0_millis+0x1>
   1a63a:	a0 93 ec 19 	sts	0x19EC, r26	; 0x8019ec <timer0_millis+0x2>
   1a63e:	b0 93 ed 19 	sts	0x19ED, r27	; 0x8019ed <timer0_millis+0x3>
	timer0_overflow_count++;
   1a642:	80 91 ee 19 	lds	r24, 0x19EE	; 0x8019ee <timer0_overflow_count>
   1a646:	90 91 ef 19 	lds	r25, 0x19EF	; 0x8019ef <timer0_overflow_count+0x1>
   1a64a:	a0 91 f0 19 	lds	r26, 0x19F0	; 0x8019f0 <timer0_overflow_count+0x2>
   1a64e:	b0 91 f1 19 	lds	r27, 0x19F1	; 0x8019f1 <timer0_overflow_count+0x3>
   1a652:	01 96       	adiw	r24, 0x01	; 1
   1a654:	a1 1d       	adc	r26, r1
   1a656:	b1 1d       	adc	r27, r1
   1a658:	80 93 ee 19 	sts	0x19EE, r24	; 0x8019ee <timer0_overflow_count>
   1a65c:	90 93 ef 19 	sts	0x19EF, r25	; 0x8019ef <timer0_overflow_count+0x1>
   1a660:	a0 93 f0 19 	sts	0x19F0, r26	; 0x8019f0 <timer0_overflow_count+0x2>
   1a664:	b0 93 f1 19 	sts	0x19F1, r27	; 0x8019f1 <timer0_overflow_count+0x3>
}
   1a668:	bf 91       	pop	r27
   1a66a:	af 91       	pop	r26
   1a66c:	9f 91       	pop	r25
   1a66e:	8f 91       	pop	r24
   1a670:	3f 91       	pop	r19
   1a672:	2f 91       	pop	r18
   1a674:	0f 90       	pop	r0
   1a676:	0f be       	out	0x3f, r0	; 63
   1a678:	0f 90       	pop	r0
   1a67a:	1f 90       	pop	r1
   1a67c:	18 95       	reti

0001a67e <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;
   1a67e:	2f b7       	in	r18, 0x3f	; 63

	// disable interrupts while we read timer0_millis or we might get an
	// inconsistent value (e.g. in the middle of a write to timer0_millis)
	cli();
   1a680:	f8 94       	cli
	m = timer0_millis;
   1a682:	60 91 ea 19 	lds	r22, 0x19EA	; 0x8019ea <timer0_millis>
   1a686:	70 91 eb 19 	lds	r23, 0x19EB	; 0x8019eb <timer0_millis+0x1>
   1a68a:	80 91 ec 19 	lds	r24, 0x19EC	; 0x8019ec <timer0_millis+0x2>
   1a68e:	90 91 ed 19 	lds	r25, 0x19ED	; 0x8019ed <timer0_millis+0x3>
	SREG = oldSREG;
   1a692:	2f bf       	out	0x3f, r18	; 63

	return m;
}
   1a694:	08 95       	ret

0001a696 <micros>:

unsigned long micros() {
	unsigned long m;
	uint8_t oldSREG = SREG, t;
   1a696:	3f b7       	in	r19, 0x3f	; 63
	
	cli();
   1a698:	f8 94       	cli
	m = timer0_overflow_count;
   1a69a:	80 91 ee 19 	lds	r24, 0x19EE	; 0x8019ee <timer0_overflow_count>
   1a69e:	90 91 ef 19 	lds	r25, 0x19EF	; 0x8019ef <timer0_overflow_count+0x1>
   1a6a2:	a0 91 f0 19 	lds	r26, 0x19F0	; 0x8019f0 <timer0_overflow_count+0x2>
   1a6a6:	b0 91 f1 19 	lds	r27, 0x19F1	; 0x8019f1 <timer0_overflow_count+0x3>
#if defined(TCNT0)
	t = TCNT0;
   1a6aa:	26 b5       	in	r18, 0x26	; 38
#else
	#error TIMER 0 not defined
#endif

#ifdef TIFR0
	if ((TIFR0 & _BV(TOV0)) && (t < 255))
   1a6ac:	a8 9b       	sbis	0x15, 0	; 21
   1a6ae:	05 c0       	rjmp	.+10     	; 0x1a6ba <micros+0x24>
   1a6b0:	2f 3f       	cpi	r18, 0xFF	; 255
   1a6b2:	19 f0       	breq	.+6      	; 0x1a6ba <micros+0x24>
		m++;
   1a6b4:	01 96       	adiw	r24, 0x01	; 1
   1a6b6:	a1 1d       	adc	r26, r1
   1a6b8:	b1 1d       	adc	r27, r1
#else
	if ((TIFR & _BV(TOV0)) && (t < 255))
		m++;
#endif

	SREG = oldSREG;
   1a6ba:	3f bf       	out	0x3f, r19	; 63
	
	return ((m << 8) + t) * (64 / clockCyclesPerMicrosecond());
   1a6bc:	ba 2f       	mov	r27, r26
   1a6be:	a9 2f       	mov	r26, r25
   1a6c0:	98 2f       	mov	r25, r24
   1a6c2:	88 27       	eor	r24, r24
   1a6c4:	82 0f       	add	r24, r18
   1a6c6:	91 1d       	adc	r25, r1
   1a6c8:	a1 1d       	adc	r26, r1
   1a6ca:	b1 1d       	adc	r27, r1
   1a6cc:	bc 01       	movw	r22, r24
   1a6ce:	cd 01       	movw	r24, r26
   1a6d0:	42 e0       	ldi	r20, 0x02	; 2
   1a6d2:	66 0f       	add	r22, r22
   1a6d4:	77 1f       	adc	r23, r23
   1a6d6:	88 1f       	adc	r24, r24
   1a6d8:	99 1f       	adc	r25, r25
   1a6da:	4a 95       	dec	r20
   1a6dc:	d1 f7       	brne	.-12     	; 0x1a6d2 <micros+0x3c>
}
   1a6de:	08 95       	ret

0001a6e0 <delay>:

void delay(unsigned long ms)
{
   1a6e0:	8f 92       	push	r8
   1a6e2:	9f 92       	push	r9
   1a6e4:	af 92       	push	r10
   1a6e6:	bf 92       	push	r11
   1a6e8:	cf 92       	push	r12
   1a6ea:	df 92       	push	r13
   1a6ec:	ef 92       	push	r14
   1a6ee:	ff 92       	push	r15
   1a6f0:	6b 01       	movw	r12, r22
   1a6f2:	7c 01       	movw	r14, r24
	uint32_t start = micros();
   1a6f4:	d0 df       	rcall	.-96     	; 0x1a696 <micros>
   1a6f6:	4b 01       	movw	r8, r22
   1a6f8:	5c 01       	movw	r10, r24

	while (ms > 0) {
   1a6fa:	c1 14       	cp	r12, r1
   1a6fc:	d1 04       	cpc	r13, r1
   1a6fe:	e1 04       	cpc	r14, r1
   1a700:	f1 04       	cpc	r15, r1
   1a702:	f9 f0       	breq	.+62     	; 0x1a742 <delay+0x62>
		yield();
   1a704:	0e 94 a3 de 	call	0x1bd46	; 0x1bd46 <yield>
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a708:	c6 df       	rcall	.-116    	; 0x1a696 <micros>
   1a70a:	dc 01       	movw	r26, r24
   1a70c:	cb 01       	movw	r24, r22
   1a70e:	88 19       	sub	r24, r8
   1a710:	99 09       	sbc	r25, r9
   1a712:	aa 09       	sbc	r26, r10
   1a714:	bb 09       	sbc	r27, r11
   1a716:	88 3e       	cpi	r24, 0xE8	; 232
   1a718:	93 40       	sbci	r25, 0x03	; 3
   1a71a:	a1 05       	cpc	r26, r1
   1a71c:	b1 05       	cpc	r27, r1
   1a71e:	68 f3       	brcs	.-38     	; 0x1a6fa <delay+0x1a>
			ms--;
   1a720:	21 e0       	ldi	r18, 0x01	; 1
   1a722:	c2 1a       	sub	r12, r18
   1a724:	d1 08       	sbc	r13, r1
   1a726:	e1 08       	sbc	r14, r1
   1a728:	f1 08       	sbc	r15, r1
			start += 1000;
   1a72a:	88 ee       	ldi	r24, 0xE8	; 232
   1a72c:	88 0e       	add	r8, r24
   1a72e:	83 e0       	ldi	r24, 0x03	; 3
   1a730:	98 1e       	adc	r9, r24
   1a732:	a1 1c       	adc	r10, r1
   1a734:	b1 1c       	adc	r11, r1
{
	uint32_t start = micros();

	while (ms > 0) {
		yield();
		while ( ms > 0 && (micros() - start) >= 1000) {
   1a736:	c1 14       	cp	r12, r1
   1a738:	d1 04       	cpc	r13, r1
   1a73a:	e1 04       	cpc	r14, r1
   1a73c:	f1 04       	cpc	r15, r1
   1a73e:	21 f7       	brne	.-56     	; 0x1a708 <delay+0x28>
   1a740:	dc cf       	rjmp	.-72     	; 0x1a6fa <delay+0x1a>
			ms--;
			start += 1000;
		}
	}
}
   1a742:	ff 90       	pop	r15
   1a744:	ef 90       	pop	r14
   1a746:	df 90       	pop	r13
   1a748:	cf 90       	pop	r12
   1a74a:	bf 90       	pop	r11
   1a74c:	af 90       	pop	r10
   1a74e:	9f 90       	pop	r9
   1a750:	8f 90       	pop	r8
   1a752:	08 95       	ret

0001a754 <delayMicroseconds>:
#elif F_CPU >= 16000000L
	// for the 16 MHz clock on most Arduino boards

	// for a one-microsecond delay, simply return.  the overhead
	// of the function call takes 14 (16) cycles, which is 1us
	if (us <= 1) return; //  = 3 cycles, (4 when true)
   1a754:	82 30       	cpi	r24, 0x02	; 2
   1a756:	91 05       	cpc	r25, r1
   1a758:	38 f0       	brcs	.+14     	; 0x1a768 <delayMicroseconds+0x14>

	// the following loop takes 1/4 of a microsecond (4 cycles)
	// per iteration, so execute it four times for each microsecond of
	// delay requested.
	us <<= 2; // x4 us, = 4 cycles
   1a75a:	88 0f       	add	r24, r24
   1a75c:	99 1f       	adc	r25, r25
   1a75e:	88 0f       	add	r24, r24
   1a760:	99 1f       	adc	r25, r25

	// account for the time taken in the preceeding commands.
	// we just burned 19 (21) cycles above, remove 5, (5*4=20)
	// us is at least 8 so we can substract 5
	us -= 5; // = 2 cycles,
   1a762:	05 97       	sbiw	r24, 0x05	; 5
	

#endif

	// busy wait
	__asm__ __volatile__ (
   1a764:	01 97       	sbiw	r24, 0x01	; 1
   1a766:	f1 f7       	brne	.-4      	; 0x1a764 <delayMicroseconds+0x10>
   1a768:	08 95       	ret

0001a76a <init>:

void init()
{
	// this needs to be called before setup() or some functions won't
	// work there
	sei();
   1a76a:	78 94       	sei
	
	// on the ATmega168, timer 0 is also used for fast hardware pwm
	// (using phase-correct PWM would mean that timer 0 overflowed half as often
	// resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
	sbi(TCCR0A, WGM01);
   1a76c:	84 b5       	in	r24, 0x24	; 36
   1a76e:	82 60       	ori	r24, 0x02	; 2
   1a770:	84 bd       	out	0x24, r24	; 36
	sbi(TCCR0A, WGM00);
   1a772:	84 b5       	in	r24, 0x24	; 36
   1a774:	81 60       	ori	r24, 0x01	; 1
   1a776:	84 bd       	out	0x24, r24	; 36
	// this combination is for the standard atmega8
	sbi(TCCR0, CS01);
	sbi(TCCR0, CS00);
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
	// this combination is for the standard 168/328/1280/2560
	sbi(TCCR0B, CS01);
   1a778:	85 b5       	in	r24, 0x25	; 37
   1a77a:	82 60       	ori	r24, 0x02	; 2
   1a77c:	85 bd       	out	0x25, r24	; 37
	sbi(TCCR0B, CS00);
   1a77e:	85 b5       	in	r24, 0x25	; 37
   1a780:	81 60       	ori	r24, 0x01	; 1
   1a782:	85 bd       	out	0x25, r24	; 37

	// enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
	sbi(TIMSK, TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
	sbi(TIMSK0, TOIE0);
   1a784:	ee e6       	ldi	r30, 0x6E	; 110
   1a786:	f0 e0       	ldi	r31, 0x00	; 0
   1a788:	80 81       	ld	r24, Z
   1a78a:	81 60       	ori	r24, 0x01	; 1
   1a78c:	80 83       	st	Z, r24
	// this is better for motors as it ensures an even waveform
	// note, however, that fast pwm mode can achieve a frequency of up
	// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
	TCCR1B = 0;
   1a78e:	e1 e8       	ldi	r30, 0x81	; 129
   1a790:	f0 e0       	ldi	r31, 0x00	; 0
   1a792:	10 82       	st	Z, r1

	// set timer 1 prescale factor to 64
	sbi(TCCR1B, CS11);
   1a794:	80 81       	ld	r24, Z
   1a796:	82 60       	ori	r24, 0x02	; 2
   1a798:	80 83       	st	Z, r24
#if F_CPU >= 8000000L
	sbi(TCCR1B, CS10);
   1a79a:	80 81       	ld	r24, Z
   1a79c:	81 60       	ori	r24, 0x01	; 1
   1a79e:	80 83       	st	Z, r24
	sbi(TCCR1, CS10);
#endif
#endif
	// put timer 1 in 8-bit phase correct pwm mode
#if defined(TCCR1A) && defined(WGM10)
	sbi(TCCR1A, WGM10);
   1a7a0:	e0 e8       	ldi	r30, 0x80	; 128
   1a7a2:	f0 e0       	ldi	r31, 0x00	; 0
   1a7a4:	80 81       	ld	r24, Z
   1a7a6:	81 60       	ori	r24, 0x01	; 1
   1a7a8:	80 83       	st	Z, r24

	// set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
	sbi(TCCR2, CS22);
#elif defined(TCCR2B) && defined(CS22)
	sbi(TCCR2B, CS22);
   1a7aa:	e1 eb       	ldi	r30, 0xB1	; 177
   1a7ac:	f0 e0       	ldi	r31, 0x00	; 0
   1a7ae:	80 81       	ld	r24, Z
   1a7b0:	84 60       	ori	r24, 0x04	; 4
   1a7b2:	80 83       	st	Z, r24

	// configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
	sbi(TCCR2, WGM20);
#elif defined(TCCR2A) && defined(WGM20)
	sbi(TCCR2A, WGM20);
   1a7b4:	e0 eb       	ldi	r30, 0xB0	; 176
   1a7b6:	f0 e0       	ldi	r31, 0x00	; 0
   1a7b8:	80 81       	ld	r24, Z
   1a7ba:	81 60       	ori	r24, 0x01	; 1
   1a7bc:	80 83       	st	Z, r24
//#else
	// Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
	sbi(TCCR3B, CS31);		// set timer 3 prescale factor to 64
   1a7be:	e1 e9       	ldi	r30, 0x91	; 145
   1a7c0:	f0 e0       	ldi	r31, 0x00	; 0
   1a7c2:	80 81       	ld	r24, Z
   1a7c4:	82 60       	ori	r24, 0x02	; 2
   1a7c6:	80 83       	st	Z, r24
	sbi(TCCR3B, CS30);
   1a7c8:	80 81       	ld	r24, Z
   1a7ca:	81 60       	ori	r24, 0x01	; 1
   1a7cc:	80 83       	st	Z, r24
	sbi(TCCR3A, WGM30);		// put timer 3 in 8-bit phase correct pwm mode
   1a7ce:	e0 e9       	ldi	r30, 0x90	; 144
   1a7d0:	f0 e0       	ldi	r31, 0x00	; 0
   1a7d2:	80 81       	ld	r24, Z
   1a7d4:	81 60       	ori	r24, 0x01	; 1
   1a7d6:	80 83       	st	Z, r24
	sbi(TCCR4D, WGM40);		// put timer 4 in phase- and frequency-correct PWM mode	
	sbi(TCCR4A, PWM4A);		// enable PWM mode for comparator OCR4A
	sbi(TCCR4C, PWM4D);		// enable PWM mode for comparator OCR4D
#else /* beginning of timer4 block for ATMEGA1280 and ATMEGA2560 */
#if defined(TCCR4B) && defined(CS41) && defined(WGM40)
	sbi(TCCR4B, CS41);		// set timer 4 prescale factor to 64
   1a7d8:	e1 ea       	ldi	r30, 0xA1	; 161
   1a7da:	f0 e0       	ldi	r31, 0x00	; 0
   1a7dc:	80 81       	ld	r24, Z
   1a7de:	82 60       	ori	r24, 0x02	; 2
   1a7e0:	80 83       	st	Z, r24
	sbi(TCCR4B, CS40);
   1a7e2:	80 81       	ld	r24, Z
   1a7e4:	81 60       	ori	r24, 0x01	; 1
   1a7e6:	80 83       	st	Z, r24
	sbi(TCCR4A, WGM40);		// put timer 4 in 8-bit phase correct pwm mode
   1a7e8:	e0 ea       	ldi	r30, 0xA0	; 160
   1a7ea:	f0 e0       	ldi	r31, 0x00	; 0
   1a7ec:	80 81       	ld	r24, Z
   1a7ee:	81 60       	ori	r24, 0x01	; 1
   1a7f0:	80 83       	st	Z, r24
#endif
#endif /* end timer4 block for ATMEGA1280/2560 and similar */	

#if defined(TCCR5B) && defined(CS51) && defined(WGM50)
	sbi(TCCR5B, CS51);		// set timer 5 prescale factor to 64
   1a7f2:	e1 e2       	ldi	r30, 0x21	; 33
   1a7f4:	f1 e0       	ldi	r31, 0x01	; 1
   1a7f6:	80 81       	ld	r24, Z
   1a7f8:	82 60       	ori	r24, 0x02	; 2
   1a7fa:	80 83       	st	Z, r24
	sbi(TCCR5B, CS50);
   1a7fc:	80 81       	ld	r24, Z
   1a7fe:	81 60       	ori	r24, 0x01	; 1
   1a800:	80 83       	st	Z, r24
	sbi(TCCR5A, WGM50);		// put timer 5 in 8-bit phase correct pwm mode
   1a802:	e0 e2       	ldi	r30, 0x20	; 32
   1a804:	f1 e0       	ldi	r31, 0x01	; 1
   1a806:	80 81       	ld	r24, Z
   1a808:	81 60       	ori	r24, 0x01	; 1
   1a80a:	80 83       	st	Z, r24
#endif

#if defined(ADCSRA)
	// set a2d prescaler so we are inside the desired 50-200 KHz range.
	#if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
		sbi(ADCSRA, ADPS2);
   1a80c:	ea e7       	ldi	r30, 0x7A	; 122
   1a80e:	f0 e0       	ldi	r31, 0x00	; 0
   1a810:	80 81       	ld	r24, Z
   1a812:	84 60       	ori	r24, 0x04	; 4
   1a814:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS1);
   1a816:	80 81       	ld	r24, Z
   1a818:	82 60       	ori	r24, 0x02	; 2
   1a81a:	80 83       	st	Z, r24
		sbi(ADCSRA, ADPS0);
   1a81c:	80 81       	ld	r24, Z
   1a81e:	81 60       	ori	r24, 0x01	; 1
   1a820:	80 83       	st	Z, r24
		cbi(ADCSRA, ADPS2);
		cbi(ADCSRA, ADPS1);
		sbi(ADCSRA, ADPS0);
	#endif
	// enable a2d conversions
	sbi(ADCSRA, ADEN);
   1a822:	80 81       	ld	r24, Z
   1a824:	80 68       	ori	r24, 0x80	; 128
   1a826:	80 83       	st	Z, r24
	// here so they can be used as normal digital i/o; they will be
	// reconnected in Serial.begin()
#if defined(UCSRB)
	UCSRB = 0;
#elif defined(UCSR0B)
	UCSR0B = 0;
   1a828:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
   1a82c:	08 95       	ret

0001a82e <turnOffPWM>:
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
	switch (timer)
   1a82e:	90 e0       	ldi	r25, 0x00	; 0
   1a830:	fc 01       	movw	r30, r24
   1a832:	31 97       	sbiw	r30, 0x01	; 1
   1a834:	e2 31       	cpi	r30, 0x12	; 18
   1a836:	f1 05       	cpc	r31, r1
   1a838:	08 f0       	brcs	.+2      	; 0x1a83c <turnOffPWM+0xe>
   1a83a:	4e c0       	rjmp	.+156    	; 0x1a8d8 <turnOffPWM+0xaa>
   1a83c:	88 27       	eor	r24, r24
   1a83e:	e9 50       	subi	r30, 0x09	; 9
   1a840:	ff 4f       	sbci	r31, 0xFF	; 255
   1a842:	8f 4f       	sbci	r24, 0xFF	; 255
   1a844:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
	{
		#if defined(TCCR1A) && defined(COM1A1)
		case TIMER1A:   cbi(TCCR1A, COM1A1);    break;
   1a848:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a84c:	8f 77       	andi	r24, 0x7F	; 127
   1a84e:	03 c0       	rjmp	.+6      	; 0x1a856 <turnOffPWM+0x28>
		#endif
		#if defined(TCCR1A) && defined(COM1B1)
		case TIMER1B:   cbi(TCCR1A, COM1B1);    break;
   1a850:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a854:	8f 7d       	andi	r24, 0xDF	; 223
   1a856:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a85a:	08 95       	ret
		#endif
		#if defined(TCCR1A) && defined(COM1C1)
		case TIMER1C:   cbi(TCCR1A, COM1C1);    break;
   1a85c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
   1a860:	87 7f       	andi	r24, 0xF7	; 247
   1a862:	f9 cf       	rjmp	.-14     	; 0x1a856 <turnOffPWM+0x28>
		#if defined(TCCR2) && defined(COM21)
		case  TIMER2:   cbi(TCCR2, COM21);      break;
		#endif
		
		#if defined(TCCR0A) && defined(COM0A1)
		case  TIMER0A:  cbi(TCCR0A, COM0A1);    break;
   1a864:	84 b5       	in	r24, 0x24	; 36
   1a866:	8f 77       	andi	r24, 0x7F	; 127
   1a868:	02 c0       	rjmp	.+4      	; 0x1a86e <turnOffPWM+0x40>
		#endif
		
		#if defined(TCCR0A) && defined(COM0B1)
		case  TIMER0B:  cbi(TCCR0A, COM0B1);    break;
   1a86a:	84 b5       	in	r24, 0x24	; 36
   1a86c:	8f 7d       	andi	r24, 0xDF	; 223
   1a86e:	84 bd       	out	0x24, r24	; 36
   1a870:	08 95       	ret
		#endif
		#if defined(TCCR2A) && defined(COM2A1)
		case  TIMER2A:  cbi(TCCR2A, COM2A1);    break;
   1a872:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a876:	8f 77       	andi	r24, 0x7F	; 127
   1a878:	03 c0       	rjmp	.+6      	; 0x1a880 <turnOffPWM+0x52>
		#endif
		#if defined(TCCR2A) && defined(COM2B1)
		case  TIMER2B:  cbi(TCCR2A, COM2B1);    break;
   1a87a:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a87e:	8f 7d       	andi	r24, 0xDF	; 223
   1a880:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7c00b0>
   1a884:	08 95       	ret
		#endif
		
		#if defined(TCCR3A) && defined(COM3A1)
		case  TIMER3A:  cbi(TCCR3A, COM3A1);    break;
   1a886:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a88a:	8f 77       	andi	r24, 0x7F	; 127
   1a88c:	07 c0       	rjmp	.+14     	; 0x1a89c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3B1)
		case  TIMER3B:  cbi(TCCR3A, COM3B1);    break;
   1a88e:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a892:	8f 7d       	andi	r24, 0xDF	; 223
   1a894:	03 c0       	rjmp	.+6      	; 0x1a89c <turnOffPWM+0x6e>
		#endif
		#if defined(TCCR3A) && defined(COM3C1)
		case  TIMER3C:  cbi(TCCR3A, COM3C1);    break;
   1a896:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a89a:	87 7f       	andi	r24, 0xF7	; 247
   1a89c:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
   1a8a0:	08 95       	ret
		#endif

		#if defined(TCCR4A) && defined(COM4A1)
		case  TIMER4A:  cbi(TCCR4A, COM4A1);    break;
   1a8a2:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8a6:	8f 77       	andi	r24, 0x7F	; 127
   1a8a8:	07 c0       	rjmp	.+14     	; 0x1a8b8 <turnOffPWM+0x8a>
		#endif					
		#if defined(TCCR4A) && defined(COM4B1)
		case  TIMER4B:  cbi(TCCR4A, COM4B1);    break;
   1a8aa:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8ae:	8f 7d       	andi	r24, 0xDF	; 223
   1a8b0:	03 c0       	rjmp	.+6      	; 0x1a8b8 <turnOffPWM+0x8a>
		#endif
		#if defined(TCCR4A) && defined(COM4C1)
		case  TIMER4C:  cbi(TCCR4A, COM4C1);    break;
   1a8b2:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8b6:	87 7f       	andi	r24, 0xF7	; 247
   1a8b8:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
   1a8bc:	08 95       	ret
		#if defined(TCCR4C) && defined(COM4D1)
		case TIMER4D:	cbi(TCCR4C, COM4D1);	break;
		#endif			
			
		#if defined(TCCR5A)
		case  TIMER5A:  cbi(TCCR5A, COM5A1);    break;
   1a8be:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a8c2:	8f 77       	andi	r24, 0x7F	; 127
   1a8c4:	07 c0       	rjmp	.+14     	; 0x1a8d4 <turnOffPWM+0xa6>
		case  TIMER5B:  cbi(TCCR5A, COM5B1);    break;
   1a8c6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a8ca:	8f 7d       	andi	r24, 0xDF	; 223
   1a8cc:	03 c0       	rjmp	.+6      	; 0x1a8d4 <turnOffPWM+0xa6>
		case  TIMER5C:  cbi(TCCR5A, COM5C1);    break;
   1a8ce:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a8d2:	87 7f       	andi	r24, 0xF7	; 247
   1a8d4:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>
   1a8d8:	08 95       	ret

0001a8da <pinMode>:
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
   1a8da:	cf 93       	push	r28
   1a8dc:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
   1a8de:	90 e0       	ldi	r25, 0x00	; 0
   1a8e0:	fc 01       	movw	r30, r24
   1a8e2:	e1 5a       	subi	r30, 0xA1	; 161
   1a8e4:	f9 4b       	sbci	r31, 0xB9	; 185
   1a8e6:	24 91       	lpm	r18, Z
	uint8_t port = digitalPinToPort(pin);
   1a8e8:	fc 01       	movw	r30, r24
   1a8ea:	eb 55       	subi	r30, 0x5B	; 91
   1a8ec:	f9 4b       	sbci	r31, 0xB9	; 185
   1a8ee:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
   1a8f0:	88 23       	and	r24, r24
   1a8f2:	61 f1       	breq	.+88     	; 0x1a94c <pinMode+0x72>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
   1a8f4:	90 e0       	ldi	r25, 0x00	; 0
   1a8f6:	88 0f       	add	r24, r24
   1a8f8:	99 1f       	adc	r25, r25
   1a8fa:	fc 01       	movw	r30, r24
   1a8fc:	e1 5e       	subi	r30, 0xE1	; 225
   1a8fe:	f8 4b       	sbci	r31, 0xB8	; 184
   1a900:	c5 91       	lpm	r28, Z+
   1a902:	d4 91       	lpm	r29, Z
	out = portOutputRegister(port);
   1a904:	fc 01       	movw	r30, r24
   1a906:	eb 5f       	subi	r30, 0xFB	; 251
   1a908:	f8 4b       	sbci	r31, 0xB8	; 184
   1a90a:	a5 91       	lpm	r26, Z+
   1a90c:	b4 91       	lpm	r27, Z

	if (mode == INPUT) { 
   1a90e:	61 11       	cpse	r22, r1
   1a910:	09 c0       	rjmp	.+18     	; 0x1a924 <pinMode+0x4a>
		uint8_t oldSREG = SREG;
   1a912:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1a914:	f8 94       	cli
		*reg &= ~bit;
   1a916:	88 81       	ld	r24, Y
   1a918:	20 95       	com	r18
   1a91a:	82 23       	and	r24, r18
   1a91c:	88 83       	st	Y, r24
		*out &= ~bit;
   1a91e:	ec 91       	ld	r30, X
   1a920:	2e 23       	and	r18, r30
   1a922:	0b c0       	rjmp	.+22     	; 0x1a93a <pinMode+0x60>
		SREG = oldSREG;
	} else if (mode == INPUT_PULLUP) {
   1a924:	62 30       	cpi	r22, 0x02	; 2
   1a926:	61 f4       	brne	.+24     	; 0x1a940 <pinMode+0x66>
		uint8_t oldSREG = SREG;
   1a928:	9f b7       	in	r25, 0x3f	; 63
                cli();
   1a92a:	f8 94       	cli
		*reg &= ~bit;
   1a92c:	88 81       	ld	r24, Y
   1a92e:	32 2f       	mov	r19, r18
   1a930:	30 95       	com	r19
   1a932:	83 23       	and	r24, r19
   1a934:	88 83       	st	Y, r24
		*out |= bit;
   1a936:	ec 91       	ld	r30, X
   1a938:	2e 2b       	or	r18, r30
   1a93a:	2c 93       	st	X, r18
		SREG = oldSREG;
   1a93c:	9f bf       	out	0x3f, r25	; 63
   1a93e:	06 c0       	rjmp	.+12     	; 0x1a94c <pinMode+0x72>
	} else {
		uint8_t oldSREG = SREG;
   1a940:	8f b7       	in	r24, 0x3f	; 63
                cli();
   1a942:	f8 94       	cli
		*reg |= bit;
   1a944:	e8 81       	ld	r30, Y
   1a946:	2e 2b       	or	r18, r30
   1a948:	28 83       	st	Y, r18
		SREG = oldSREG;
   1a94a:	8f bf       	out	0x3f, r24	; 63
	}
}
   1a94c:	df 91       	pop	r29
   1a94e:	cf 91       	pop	r28
   1a950:	08 95       	ret

0001a952 <digitalWrite>:
		#endif
	}
}

void digitalWrite(uint8_t pin, uint8_t val)
{
   1a952:	1f 93       	push	r17
   1a954:	cf 93       	push	r28
   1a956:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1a958:	28 2f       	mov	r18, r24
   1a95a:	30 e0       	ldi	r19, 0x00	; 0
   1a95c:	f9 01       	movw	r30, r18
   1a95e:	e7 5e       	subi	r30, 0xE7	; 231
   1a960:	f9 4b       	sbci	r31, 0xB9	; 185
   1a962:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1a964:	f9 01       	movw	r30, r18
   1a966:	e1 5a       	subi	r30, 0xA1	; 161
   1a968:	f9 4b       	sbci	r31, 0xB9	; 185
   1a96a:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1a96c:	f9 01       	movw	r30, r18
   1a96e:	eb 55       	subi	r30, 0x5B	; 91
   1a970:	f9 4b       	sbci	r31, 0xB9	; 185
   1a972:	c4 91       	lpm	r28, Z
	volatile uint8_t *out;

	if (port == NOT_A_PIN) return;
   1a974:	cc 23       	and	r28, r28
   1a976:	b9 f0       	breq	.+46     	; 0x1a9a6 <digitalWrite+0x54>
   1a978:	16 2f       	mov	r17, r22

	// If the pin that support PWM output, we need to turn it off
	// before doing a digital write.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1a97a:	81 11       	cpse	r24, r1
   1a97c:	58 df       	rcall	.-336    	; 0x1a82e <turnOffPWM>

	out = portOutputRegister(port);
   1a97e:	ec 2f       	mov	r30, r28
   1a980:	f0 e0       	ldi	r31, 0x00	; 0
   1a982:	ee 0f       	add	r30, r30
   1a984:	ff 1f       	adc	r31, r31
   1a986:	eb 5f       	subi	r30, 0xFB	; 251
   1a988:	f8 4b       	sbci	r31, 0xB8	; 184
   1a98a:	a5 91       	lpm	r26, Z+
   1a98c:	b4 91       	lpm	r27, Z

	uint8_t oldSREG = SREG;
   1a98e:	9f b7       	in	r25, 0x3f	; 63
	cli();
   1a990:	f8 94       	cli

	if (val == LOW) {
   1a992:	11 11       	cpse	r17, r1
   1a994:	04 c0       	rjmp	.+8      	; 0x1a99e <digitalWrite+0x4c>
		*out &= ~bit;
   1a996:	8c 91       	ld	r24, X
   1a998:	d0 95       	com	r29
   1a99a:	d8 23       	and	r29, r24
   1a99c:	02 c0       	rjmp	.+4      	; 0x1a9a2 <digitalWrite+0x50>
	} else {
		*out |= bit;
   1a99e:	ec 91       	ld	r30, X
   1a9a0:	de 2b       	or	r29, r30
   1a9a2:	dc 93       	st	X, r29
	}

	SREG = oldSREG;
   1a9a4:	9f bf       	out	0x3f, r25	; 63
}
   1a9a6:	df 91       	pop	r29
   1a9a8:	cf 91       	pop	r28
   1a9aa:	1f 91       	pop	r17
   1a9ac:	08 95       	ret

0001a9ae <digitalRead>:

int digitalRead(uint8_t pin)
{
   1a9ae:	cf 93       	push	r28
   1a9b0:	df 93       	push	r29
	uint8_t timer = digitalPinToTimer(pin);
   1a9b2:	28 2f       	mov	r18, r24
   1a9b4:	30 e0       	ldi	r19, 0x00	; 0
   1a9b6:	f9 01       	movw	r30, r18
   1a9b8:	e7 5e       	subi	r30, 0xE7	; 231
   1a9ba:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9bc:	84 91       	lpm	r24, Z
	uint8_t bit = digitalPinToBitMask(pin);
   1a9be:	f9 01       	movw	r30, r18
   1a9c0:	e1 5a       	subi	r30, 0xA1	; 161
   1a9c2:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9c4:	d4 91       	lpm	r29, Z
	uint8_t port = digitalPinToPort(pin);
   1a9c6:	f9 01       	movw	r30, r18
   1a9c8:	eb 55       	subi	r30, 0x5B	; 91
   1a9ca:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9cc:	c4 91       	lpm	r28, Z

	if (port == NOT_A_PIN) return LOW;
   1a9ce:	cc 23       	and	r28, r28
   1a9d0:	89 f0       	breq	.+34     	; 0x1a9f4 <digitalRead+0x46>

	// If the pin that support PWM output, we need to turn it off
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);
   1a9d2:	81 11       	cpse	r24, r1
   1a9d4:	2c df       	rcall	.-424    	; 0x1a82e <turnOffPWM>

	if (*portInputRegister(port) & bit) return HIGH;
   1a9d6:	ec 2f       	mov	r30, r28
   1a9d8:	f0 e0       	ldi	r31, 0x00	; 0
   1a9da:	ee 0f       	add	r30, r30
   1a9dc:	ff 1f       	adc	r31, r31
   1a9de:	e5 51       	subi	r30, 0x15	; 21
   1a9e0:	f9 4b       	sbci	r31, 0xB9	; 185
   1a9e2:	a5 91       	lpm	r26, Z+
   1a9e4:	b4 91       	lpm	r27, Z
   1a9e6:	ec 91       	ld	r30, X
{
	uint8_t timer = digitalPinToTimer(pin);
	uint8_t bit = digitalPinToBitMask(pin);
	uint8_t port = digitalPinToPort(pin);

	if (port == NOT_A_PIN) return LOW;
   1a9e8:	ed 23       	and	r30, r29
   1a9ea:	81 e0       	ldi	r24, 0x01	; 1
   1a9ec:	90 e0       	ldi	r25, 0x00	; 0
   1a9ee:	21 f4       	brne	.+8      	; 0x1a9f8 <digitalRead+0x4a>
   1a9f0:	80 e0       	ldi	r24, 0x00	; 0
   1a9f2:	02 c0       	rjmp	.+4      	; 0x1a9f8 <digitalRead+0x4a>
   1a9f4:	80 e0       	ldi	r24, 0x00	; 0
   1a9f6:	90 e0       	ldi	r25, 0x00	; 0
	// before getting a digital reading.
	if (timer != NOT_ON_TIMER) turnOffPWM(timer);

	if (*portInputRegister(port) & bit) return HIGH;
	return LOW;
}
   1a9f8:	df 91       	pop	r29
   1a9fa:	cf 91       	pop	r28
   1a9fc:	08 95       	ret

0001a9fe <_ZN13EnergyMonitor7currentEjd>:
    //    - every 2 crosses we will have sampled 1 wavelength
    //    - so this method allows us to sample an integer number of half wavelengths which increases accuracy
    //-----------------------------------------------------------------------------
    lastVCross = checkVCross;
    if (sampleV > startV) checkVCross = true;
                     else checkVCross = false;
   1a9fe:	fc 01       	movw	r30, r24
   1aa00:	77 8b       	std	Z+23, r23	; 0x17
   1aa02:	66 8b       	std	Z+22, r22	; 0x16
   1aa04:	24 8f       	std	Z+28, r18	; 0x1c
   1aa06:	35 8f       	std	Z+29, r19	; 0x1d
   1aa08:	46 8f       	std	Z+30, r20	; 0x1e
   1aa0a:	57 8f       	std	Z+31, r21	; 0x1f
   1aa0c:	80 e0       	ldi	r24, 0x00	; 0
   1aa0e:	90 e0       	ldi	r25, 0x00	; 0
   1aa10:	a0 e0       	ldi	r26, 0x00	; 0
   1aa12:	b4 e4       	ldi	r27, 0x44	; 68
   1aa14:	80 af       	std	Z+56, r24	; 0x38
   1aa16:	91 af       	std	Z+57, r25	; 0x39
   1aa18:	a2 af       	std	Z+58, r26	; 0x3a
   1aa1a:	b3 af       	std	Z+59, r27	; 0x3b
   1aa1c:	08 95       	ret

0001aa1e <_ZN13EnergyMonitor7readVccEv>:
   1aa1e:	8e e5       	ldi	r24, 0x5E	; 94
   1aa20:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
   1aa24:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1aa28:	87 7f       	andi	r24, 0xF7	; 247
   1aa2a:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1aa2e:	62 e0       	ldi	r22, 0x02	; 2
   1aa30:	70 e0       	ldi	r23, 0x00	; 0
   1aa32:	80 e0       	ldi	r24, 0x00	; 0
   1aa34:	90 e0       	ldi	r25, 0x00	; 0
   1aa36:	54 de       	rcall	.-856    	; 0x1a6e0 <delay>
   1aa38:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa3c:	80 64       	ori	r24, 0x40	; 64
   1aa3e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa42:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1aa46:	86 fd       	sbrc	r24, 6
   1aa48:	fc cf       	rjmp	.-8      	; 0x1aa42 <_ZN13EnergyMonitor7readVccEv+0x24>
   1aa4a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
   1aa4e:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
   1aa52:	30 e0       	ldi	r19, 0x00	; 0
   1aa54:	32 2f       	mov	r19, r18
   1aa56:	22 27       	eor	r18, r18
   1aa58:	a9 01       	movw	r20, r18
   1aa5a:	33 0f       	add	r19, r19
   1aa5c:	66 0b       	sbc	r22, r22
   1aa5e:	77 0b       	sbc	r23, r23
   1aa60:	9a 01       	movw	r18, r20
   1aa62:	ab 01       	movw	r20, r22
   1aa64:	28 2b       	or	r18, r24
   1aa66:	60 e0       	ldi	r22, 0x00	; 0
   1aa68:	70 e3       	ldi	r23, 0x30	; 48
   1aa6a:	81 e1       	ldi	r24, 0x11	; 17
   1aa6c:	90 e0       	ldi	r25, 0x00	; 0
   1aa6e:	0e 94 67 e7 	call	0x1cece	; 0x1cece <__divmodsi4>
   1aa72:	ca 01       	movw	r24, r20
   1aa74:	b9 01       	movw	r22, r18
   1aa76:	08 95       	ret

0001aa78 <_ZN13EnergyMonitor8calcIrmsEj>:
//--------------------------------------------------------------------------------------
}

//--------------------------------------------------------------------------------------
double EnergyMonitor::calcIrms(unsigned int Number_of_Samples)
{
   1aa78:	2f 92       	push	r2
   1aa7a:	3f 92       	push	r3
   1aa7c:	4f 92       	push	r4
   1aa7e:	5f 92       	push	r5
   1aa80:	6f 92       	push	r6
   1aa82:	7f 92       	push	r7
   1aa84:	8f 92       	push	r8
   1aa86:	9f 92       	push	r9
   1aa88:	af 92       	push	r10
   1aa8a:	bf 92       	push	r11
   1aa8c:	cf 92       	push	r12
   1aa8e:	df 92       	push	r13
   1aa90:	ef 92       	push	r14
   1aa92:	ff 92       	push	r15
   1aa94:	0f 93       	push	r16
   1aa96:	1f 93       	push	r17
   1aa98:	cf 93       	push	r28
   1aa9a:	df 93       	push	r29
   1aa9c:	00 d0       	rcall	.+0      	; 0x1aa9e <_ZN13EnergyMonitor8calcIrmsEj+0x26>
   1aa9e:	00 d0       	rcall	.+0      	; 0x1aaa0 <_ZN13EnergyMonitor8calcIrmsEj+0x28>
   1aaa0:	cd b7       	in	r28, 0x3d	; 61
   1aaa2:	de b7       	in	r29, 0x3e	; 62
   1aaa4:	9e 83       	std	Y+6, r25	; 0x06
   1aaa6:	8d 83       	std	Y+5, r24	; 0x05
   1aaa8:	7a 83       	std	Y+2, r23	; 0x02
   1aaaa:	69 83       	std	Y+1, r22	; 0x01

  #if defined emonTxV3
    int SupplyVoltage=3300;
  #else
    int SupplyVoltage = readVcc();
   1aaac:	b8 df       	rcall	.-144    	; 0x1aa1e <_ZN13EnergyMonitor7readVccEv>
   1aaae:	6b 01       	movw	r12, r22
   1aab0:	7c 01       	movw	r14, r24
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1aab2:	00 e0       	ldi	r16, 0x00	; 0
   1aab4:	10 e0       	ldi	r17, 0x00	; 0
   1aab6:	8d 81       	ldd	r24, Y+5	; 0x05
   1aab8:	9e 81       	ldd	r25, Y+6	; 0x06
   1aaba:	84 5b       	subi	r24, 0xB4	; 180
   1aabc:	9f 4f       	sbci	r25, 0xFF	; 255
   1aabe:	1c 01       	movw	r2, r24
    offsetI = (offsetI + (sampleI-offsetI)/1024);
    filteredI = sampleI - offsetI;

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1aac0:	ed 81       	ldd	r30, Y+5	; 0x05
   1aac2:	fe 81       	ldd	r31, Y+6	; 0x06
   1aac4:	e8 5b       	subi	r30, 0xB8	; 184
   1aac6:	ff 4f       	sbci	r31, 0xFF	; 255
   1aac8:	fc 83       	std	Y+4, r31	; 0x04
   1aaca:	eb 83       	std	Y+3, r30	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1aacc:	89 81       	ldd	r24, Y+1	; 0x01
   1aace:	9a 81       	ldd	r25, Y+2	; 0x02
   1aad0:	08 17       	cp	r16, r24
   1aad2:	19 07       	cpc	r17, r25
   1aad4:	09 f4       	brne	.+2      	; 0x1aad8 <_ZN13EnergyMonitor8calcIrmsEj+0x60>
   1aad6:	51 c0       	rjmp	.+162    	; 0x1ab7a <_ZN13EnergyMonitor8calcIrmsEj+0x102>
  {
    sampleI = analogRead(inPinI);
   1aad8:	ed 81       	ldd	r30, Y+5	; 0x05
   1aada:	fe 81       	ldd	r31, Y+6	; 0x06
   1aadc:	86 89       	ldd	r24, Z+22	; 0x16
   1aade:	0e 94 73 e0 	call	0x1c0e6	; 0x1c0e6 <analogRead>
   1aae2:	ed 81       	ldd	r30, Y+5	; 0x05
   1aae4:	fe 81       	ldd	r31, Y+6	; 0x06
   1aae6:	97 a3       	std	Z+39, r25	; 0x27
   1aae8:	86 a3       	std	Z+38, r24	; 0x26

    // Digital low pass filter extracts the 2.5 V or 1.65 V dc offset,
    //  then subtract this - signal is now centered on 0 counts.
    offsetI = (offsetI + (sampleI-offsetI)/1024);
   1aaea:	bc 01       	movw	r22, r24
   1aaec:	99 0f       	add	r25, r25
   1aaee:	88 0b       	sbc	r24, r24
   1aaf0:	99 0b       	sbc	r25, r25
   1aaf2:	0e 94 e8 cc 	call	0x199d0	; 0x199d0 <__floatsisf>
   1aaf6:	4b 01       	movw	r8, r22
   1aaf8:	5c 01       	movw	r10, r24
   1aafa:	ed 81       	ldd	r30, Y+5	; 0x05
   1aafc:	fe 81       	ldd	r31, Y+6	; 0x06
   1aafe:	40 ac       	ldd	r4, Z+56	; 0x38
   1ab00:	51 ac       	ldd	r5, Z+57	; 0x39
   1ab02:	62 ac       	ldd	r6, Z+58	; 0x3a
   1ab04:	73 ac       	ldd	r7, Z+59	; 0x3b
   1ab06:	a3 01       	movw	r20, r6
   1ab08:	92 01       	movw	r18, r4
   1ab0a:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <__subsf3>
   1ab0e:	20 e0       	ldi	r18, 0x00	; 0
   1ab10:	30 e0       	ldi	r19, 0x00	; 0
   1ab12:	40 e8       	ldi	r20, 0x80	; 128
   1ab14:	5a e3       	ldi	r21, 0x3A	; 58
   1ab16:	10 d8       	rcall	.-4064   	; 0x19b38 <__mulsf3>
   1ab18:	a3 01       	movw	r20, r6
   1ab1a:	92 01       	movw	r18, r4
   1ab1c:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   1ab20:	9b 01       	movw	r18, r22
   1ab22:	ac 01       	movw	r20, r24
   1ab24:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab26:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab28:	60 af       	std	Z+56, r22	; 0x38
   1ab2a:	71 af       	std	Z+57, r23	; 0x39
   1ab2c:	82 af       	std	Z+58, r24	; 0x3a
   1ab2e:	93 af       	std	Z+59, r25	; 0x3b
    filteredI = sampleI - offsetI;
   1ab30:	c5 01       	movw	r24, r10
   1ab32:	b4 01       	movw	r22, r8
   1ab34:	0e 94 e9 cb 	call	0x197d2	; 0x197d2 <__subsf3>
   1ab38:	ed 81       	ldd	r30, Y+5	; 0x05
   1ab3a:	fe 81       	ldd	r31, Y+6	; 0x06
   1ab3c:	60 ab       	std	Z+48, r22	; 0x30
   1ab3e:	71 ab       	std	Z+49, r23	; 0x31
   1ab40:	82 ab       	std	Z+50, r24	; 0x32
   1ab42:	93 ab       	std	Z+51, r25	; 0x33

    // Root-mean-square method current
    // 1) square current values
    sqI = filteredI * filteredI;
   1ab44:	9b 01       	movw	r18, r22
   1ab46:	ac 01       	movw	r20, r24
   1ab48:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1ab4c:	9b 01       	movw	r18, r22
   1ab4e:	ac 01       	movw	r20, r24
   1ab50:	eb 81       	ldd	r30, Y+3	; 0x03
   1ab52:	fc 81       	ldd	r31, Y+4	; 0x04
   1ab54:	60 83       	st	Z, r22
   1ab56:	71 83       	std	Z+1, r23	; 0x01
   1ab58:	82 83       	std	Z+2, r24	; 0x02
   1ab5a:	93 83       	std	Z+3, r25	; 0x03
    // 2) sum
    sumI += sqI;
   1ab5c:	f1 01       	movw	r30, r2
   1ab5e:	60 81       	ld	r22, Z
   1ab60:	71 81       	ldd	r23, Z+1	; 0x01
   1ab62:	82 81       	ldd	r24, Z+2	; 0x02
   1ab64:	93 81       	ldd	r25, Z+3	; 0x03
   1ab66:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   1ab6a:	f1 01       	movw	r30, r2
   1ab6c:	60 83       	st	Z, r22
   1ab6e:	71 83       	std	Z+1, r23	; 0x01
   1ab70:	82 83       	std	Z+2, r24	; 0x02
   1ab72:	93 83       	std	Z+3, r25	; 0x03
  #else
    int SupplyVoltage = readVcc();
  #endif


  for (unsigned int n = 0; n < Number_of_Samples; n++)
   1ab74:	0f 5f       	subi	r16, 0xFF	; 255
   1ab76:	1f 4f       	sbci	r17, 0xFF	; 255
   1ab78:	a9 cf       	rjmp	.-174    	; 0x1aacc <_ZN13EnergyMonitor8calcIrmsEj+0x54>
    // 2) sum
    sumI += sqI;
  }

  double I_RATIO = ICAL *((SupplyVoltage/1000.0) / (ADC_COUNTS));
  Irms = I_RATIO * sqrt(sumI / Number_of_Samples);
   1ab7a:	b8 01       	movw	r22, r16
   1ab7c:	80 e0       	ldi	r24, 0x00	; 0
   1ab7e:	90 e0       	ldi	r25, 0x00	; 0
   1ab80:	0e 94 e6 cc 	call	0x199cc	; 0x199cc <__floatunsisf>
   1ab84:	9b 01       	movw	r18, r22
   1ab86:	ac 01       	movw	r20, r24
   1ab88:	f1 01       	movw	r30, r2
   1ab8a:	60 81       	ld	r22, Z
   1ab8c:	71 81       	ldd	r23, Z+1	; 0x01
   1ab8e:	82 81       	ldd	r24, Z+2	; 0x02
   1ab90:	93 81       	ldd	r25, Z+3	; 0x03
   1ab92:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
   1ab96:	0e 94 99 e5 	call	0x1cb32	; 0x1cb32 <sqrt>
   1ab9a:	4b 01       	movw	r8, r22
   1ab9c:	5c 01       	movw	r10, r24
   1ab9e:	b6 01       	movw	r22, r12
   1aba0:	dd 0c       	add	r13, r13
   1aba2:	88 0b       	sbc	r24, r24
   1aba4:	99 0b       	sbc	r25, r25
   1aba6:	0e 94 e8 cc 	call	0x199d0	; 0x199d0 <__floatsisf>
   1abaa:	20 e0       	ldi	r18, 0x00	; 0
   1abac:	30 e0       	ldi	r19, 0x00	; 0
   1abae:	4a e7       	ldi	r20, 0x7A	; 122
   1abb0:	54 e4       	ldi	r21, 0x44	; 68
   1abb2:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
   1abb6:	20 e0       	ldi	r18, 0x00	; 0
   1abb8:	30 e0       	ldi	r19, 0x00	; 0
   1abba:	40 e8       	ldi	r20, 0x80	; 128
   1abbc:	5a e3       	ldi	r21, 0x3A	; 58
   1abbe:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1abc2:	ed 81       	ldd	r30, Y+5	; 0x05
   1abc4:	fe 81       	ldd	r31, Y+6	; 0x06
   1abc6:	24 8d       	ldd	r18, Z+28	; 0x1c
   1abc8:	35 8d       	ldd	r19, Z+29	; 0x1d
   1abca:	46 8d       	ldd	r20, Z+30	; 0x1e
   1abcc:	57 8d       	ldd	r21, Z+31	; 0x1f
   1abce:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1abd2:	a5 01       	movw	r20, r10
   1abd4:	94 01       	movw	r18, r8
   1abd6:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1abda:	ed 81       	ldd	r30, Y+5	; 0x05
   1abdc:	fe 81       	ldd	r31, Y+6	; 0x06
   1abde:	60 8b       	std	Z+16, r22	; 0x10
   1abe0:	71 8b       	std	Z+17, r23	; 0x11
   1abe2:	82 8b       	std	Z+18, r24	; 0x12
   1abe4:	93 8b       	std	Z+19, r25	; 0x13

  //Reset accumulators
  sumI = 0;
   1abe6:	f1 01       	movw	r30, r2
   1abe8:	10 82       	st	Z, r1
   1abea:	11 82       	std	Z+1, r1	; 0x01
   1abec:	12 82       	std	Z+2, r1	; 0x02
   1abee:	13 82       	std	Z+3, r1	; 0x03
  //--------------------------------------------------------------------------------------

  return Irms;
}
   1abf0:	26 96       	adiw	r28, 0x06	; 6
   1abf2:	0f b6       	in	r0, 0x3f	; 63
   1abf4:	f8 94       	cli
   1abf6:	de bf       	out	0x3e, r29	; 62
   1abf8:	0f be       	out	0x3f, r0	; 63
   1abfa:	cd bf       	out	0x3d, r28	; 61
   1abfc:	df 91       	pop	r29
   1abfe:	cf 91       	pop	r28
   1ac00:	1f 91       	pop	r17
   1ac02:	0f 91       	pop	r16
   1ac04:	ff 90       	pop	r15
   1ac06:	ef 90       	pop	r14
   1ac08:	df 90       	pop	r13
   1ac0a:	cf 90       	pop	r12
   1ac0c:	bf 90       	pop	r11
   1ac0e:	af 90       	pop	r10
   1ac10:	9f 90       	pop	r9
   1ac12:	8f 90       	pop	r8
   1ac14:	7f 90       	pop	r7
   1ac16:	6f 90       	pop	r6
   1ac18:	5f 90       	pop	r5
   1ac1a:	4f 90       	pop	r4
   1ac1c:	3f 90       	pop	r3
   1ac1e:	2f 90       	pop	r2
   1ac20:	08 95       	ret

0001ac22 <_ZN17LiquidCrystal_I2CC1Ehhh>:
void LiquidCrystal_I2C::blink_off(){
	noBlink();
}

void LiquidCrystal_I2C::load_custom_character(uint8_t char_num, uint8_t *rows){
		createChar(char_num, rows);
   1ac22:	fc 01       	movw	r30, r24
   1ac24:	13 82       	std	Z+3, r1	; 0x03
   1ac26:	12 82       	std	Z+2, r1	; 0x02
   1ac28:	8f ec       	ldi	r24, 0xCF	; 207
   1ac2a:	97 e0       	ldi	r25, 0x07	; 7
   1ac2c:	91 83       	std	Z+1, r25	; 0x01
   1ac2e:	80 83       	st	Z, r24
   1ac30:	64 83       	std	Z+4, r22	; 0x04
   1ac32:	41 87       	std	Z+9, r20	; 0x09
   1ac34:	22 87       	std	Z+10, r18	; 0x0a
   1ac36:	13 86       	std	Z+11, r1	; 0x0b
   1ac38:	08 95       	ret

0001ac3a <_ZN17LiquidCrystal_I2C13expanderWriteEh>:
   1ac3a:	1f 93       	push	r17
   1ac3c:	cf 93       	push	r28
   1ac3e:	df 93       	push	r29
   1ac40:	ec 01       	movw	r28, r24
   1ac42:	16 2f       	mov	r17, r22
   1ac44:	6c 81       	ldd	r22, Y+4	; 0x04
   1ac46:	84 e0       	ldi	r24, 0x04	; 4
   1ac48:	9a e1       	ldi	r25, 0x1A	; 26
   1ac4a:	0e 94 80 de 	call	0x1bd00	; 0x1bd00 <_ZN7TwoWire17beginTransmissionEh>
   1ac4e:	6b 85       	ldd	r22, Y+11	; 0x0b
   1ac50:	61 2b       	or	r22, r17
   1ac52:	84 e0       	ldi	r24, 0x04	; 4
   1ac54:	9a e1       	ldi	r25, 0x1A	; 26
   1ac56:	0e 94 33 de 	call	0x1bc66	; 0x1bc66 <_ZN7TwoWire5writeEh>
   1ac5a:	84 e0       	ldi	r24, 0x04	; 4
   1ac5c:	9a e1       	ldi	r25, 0x1A	; 26
   1ac5e:	df 91       	pop	r29
   1ac60:	cf 91       	pop	r28
   1ac62:	1f 91       	pop	r17
   1ac64:	0c 94 9c de 	jmp	0x1bd38	; 0x1bd38 <_ZN7TwoWire15endTransmissionEv>

0001ac68 <_ZN17LiquidCrystal_I2C11pulseEnableEh>:
   1ac68:	0f 93       	push	r16
   1ac6a:	1f 93       	push	r17
   1ac6c:	cf 93       	push	r28
   1ac6e:	8c 01       	movw	r16, r24
   1ac70:	c6 2f       	mov	r28, r22
   1ac72:	64 60       	ori	r22, 0x04	; 4
   1ac74:	e2 df       	rcall	.-60     	; 0x1ac3a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1ac76:	81 e0       	ldi	r24, 0x01	; 1
   1ac78:	90 e0       	ldi	r25, 0x00	; 0
   1ac7a:	6c dd       	rcall	.-1320   	; 0x1a754 <delayMicroseconds>
   1ac7c:	6c 2f       	mov	r22, r28
   1ac7e:	6b 7f       	andi	r22, 0xFB	; 251
   1ac80:	c8 01       	movw	r24, r16
   1ac82:	db df       	rcall	.-74     	; 0x1ac3a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1ac84:	82 e3       	ldi	r24, 0x32	; 50
   1ac86:	90 e0       	ldi	r25, 0x00	; 0
   1ac88:	cf 91       	pop	r28
   1ac8a:	1f 91       	pop	r17
   1ac8c:	0f 91       	pop	r16
   1ac8e:	62 cd       	rjmp	.-1340   	; 0x1a754 <delayMicroseconds>

0001ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>:
   1ac90:	1f 93       	push	r17
   1ac92:	cf 93       	push	r28
   1ac94:	df 93       	push	r29
   1ac96:	ec 01       	movw	r28, r24
   1ac98:	16 2f       	mov	r17, r22
   1ac9a:	cf df       	rcall	.-98     	; 0x1ac3a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
   1ac9c:	61 2f       	mov	r22, r17
   1ac9e:	ce 01       	movw	r24, r28
   1aca0:	df 91       	pop	r29
   1aca2:	cf 91       	pop	r28
   1aca4:	1f 91       	pop	r17
   1aca6:	e0 cf       	rjmp	.-64     	; 0x1ac68 <_ZN17LiquidCrystal_I2C11pulseEnableEh>

0001aca8 <_ZN17LiquidCrystal_I2C4sendEhh>:
   1aca8:	0f 93       	push	r16
   1acaa:	1f 93       	push	r17
   1acac:	cf 93       	push	r28
   1acae:	df 93       	push	r29
   1acb0:	8c 01       	movw	r16, r24
   1acb2:	c6 2f       	mov	r28, r22
   1acb4:	d4 2f       	mov	r29, r20
   1acb6:	60 7f       	andi	r22, 0xF0	; 240
   1acb8:	64 2b       	or	r22, r20
   1acba:	ea df       	rcall	.-44     	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   1acbc:	80 e1       	ldi	r24, 0x10	; 16
   1acbe:	c8 9f       	mul	r28, r24
   1acc0:	b0 01       	movw	r22, r0
   1acc2:	11 24       	eor	r1, r1
   1acc4:	6d 2b       	or	r22, r29
   1acc6:	c8 01       	movw	r24, r16
   1acc8:	df 91       	pop	r29
   1acca:	cf 91       	pop	r28
   1accc:	1f 91       	pop	r17
   1acce:	0f 91       	pop	r16
   1acd0:	df cf       	rjmp	.-66     	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>

0001acd2 <_ZN17LiquidCrystal_I2C7commandEh>:
   1acd2:	40 e0       	ldi	r20, 0x00	; 0
   1acd4:	e9 cf       	rjmp	.-46     	; 0x1aca8 <_ZN17LiquidCrystal_I2C4sendEhh>

0001acd6 <_ZN17LiquidCrystal_I2C5clearEv>:
   1acd6:	61 e0       	ldi	r22, 0x01	; 1
   1acd8:	fc df       	rcall	.-8      	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>
   1acda:	80 ed       	ldi	r24, 0xD0	; 208
   1acdc:	97 e0       	ldi	r25, 0x07	; 7
   1acde:	3a cd       	rjmp	.-1420   	; 0x1a754 <delayMicroseconds>

0001ace0 <_ZN17LiquidCrystal_I2C4homeEv>:
   1ace0:	62 e0       	ldi	r22, 0x02	; 2
   1ace2:	f7 df       	rcall	.-18     	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>
   1ace4:	80 ed       	ldi	r24, 0xD0	; 208
   1ace6:	97 e0       	ldi	r25, 0x07	; 7
   1ace8:	35 cd       	rjmp	.-1430   	; 0x1a754 <delayMicroseconds>

0001acea <_ZN17LiquidCrystal_I2C9setCursorEhh>:
   1acea:	cf 93       	push	r28
   1acec:	df 93       	push	r29
   1acee:	cd b7       	in	r28, 0x3d	; 61
   1acf0:	de b7       	in	r29, 0x3e	; 62
   1acf2:	28 97       	sbiw	r28, 0x08	; 8
   1acf4:	0f b6       	in	r0, 0x3f	; 63
   1acf6:	f8 94       	cli
   1acf8:	de bf       	out	0x3e, r29	; 62
   1acfa:	0f be       	out	0x3f, r0	; 63
   1acfc:	cd bf       	out	0x3d, r28	; 61
   1acfe:	9c 01       	movw	r18, r24
   1ad00:	88 e0       	ldi	r24, 0x08	; 8
   1ad02:	e3 e7       	ldi	r30, 0x73	; 115
   1ad04:	f2 e0       	ldi	r31, 0x02	; 2
   1ad06:	de 01       	movw	r26, r28
   1ad08:	11 96       	adiw	r26, 0x01	; 1
   1ad0a:	01 90       	ld	r0, Z+
   1ad0c:	0d 92       	st	X+, r0
   1ad0e:	8a 95       	dec	r24
   1ad10:	e1 f7       	brne	.-8      	; 0x1ad0a <_ZN17LiquidCrystal_I2C9setCursorEhh+0x20>
   1ad12:	f9 01       	movw	r30, r18
   1ad14:	80 85       	ldd	r24, Z+8	; 0x08
   1ad16:	84 17       	cp	r24, r20
   1ad18:	10 f4       	brcc	.+4      	; 0x1ad1e <_ZN17LiquidCrystal_I2C9setCursorEhh+0x34>
   1ad1a:	4f ef       	ldi	r20, 0xFF	; 255
   1ad1c:	48 0f       	add	r20, r24
   1ad1e:	fe 01       	movw	r30, r28
   1ad20:	31 96       	adiw	r30, 0x01	; 1
   1ad22:	e4 0f       	add	r30, r20
   1ad24:	f1 1d       	adc	r31, r1
   1ad26:	e4 0f       	add	r30, r20
   1ad28:	f1 1d       	adc	r31, r1
   1ad2a:	90 81       	ld	r25, Z
   1ad2c:	69 0f       	add	r22, r25
   1ad2e:	60 68       	ori	r22, 0x80	; 128
   1ad30:	c9 01       	movw	r24, r18
   1ad32:	28 96       	adiw	r28, 0x08	; 8
   1ad34:	0f b6       	in	r0, 0x3f	; 63
   1ad36:	f8 94       	cli
   1ad38:	de bf       	out	0x3e, r29	; 62
   1ad3a:	0f be       	out	0x3f, r0	; 63
   1ad3c:	cd bf       	out	0x3d, r28	; 61
   1ad3e:	df 91       	pop	r29
   1ad40:	cf 91       	pop	r28
   1ad42:	c7 cf       	rjmp	.-114    	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>

0001ad44 <_ZN17LiquidCrystal_I2C7displayEv>:
   1ad44:	fc 01       	movw	r30, r24
   1ad46:	66 81       	ldd	r22, Z+6	; 0x06
   1ad48:	26 2f       	mov	r18, r22
   1ad4a:	24 60       	ori	r18, 0x04	; 4
   1ad4c:	26 83       	std	Z+6, r18	; 0x06
   1ad4e:	6c 60       	ori	r22, 0x0C	; 12
   1ad50:	c0 cf       	rjmp	.-128    	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>

0001ad52 <_ZN17LiquidCrystal_I2C10createCharEhPh>:
   1ad52:	ef 92       	push	r14
   1ad54:	ff 92       	push	r15
   1ad56:	0f 93       	push	r16
   1ad58:	1f 93       	push	r17
   1ad5a:	cf 93       	push	r28
   1ad5c:	df 93       	push	r29
   1ad5e:	8c 01       	movw	r16, r24
   1ad60:	7a 01       	movw	r14, r20
   1ad62:	67 70       	andi	r22, 0x07	; 7
   1ad64:	88 e0       	ldi	r24, 0x08	; 8
   1ad66:	68 9f       	mul	r22, r24
   1ad68:	b0 01       	movw	r22, r0
   1ad6a:	11 24       	eor	r1, r1
   1ad6c:	60 64       	ori	r22, 0x40	; 64
   1ad6e:	c8 01       	movw	r24, r16
   1ad70:	b0 df       	rcall	.-160    	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>
   1ad72:	e7 01       	movw	r28, r14
   1ad74:	a8 e0       	ldi	r26, 0x08	; 8
   1ad76:	ea 0e       	add	r14, r26
   1ad78:	f1 1c       	adc	r15, r1
   1ad7a:	69 91       	ld	r22, Y+
   1ad7c:	d8 01       	movw	r26, r16
   1ad7e:	ed 91       	ld	r30, X+
   1ad80:	fc 91       	ld	r31, X
   1ad82:	01 90       	ld	r0, Z+
   1ad84:	f0 81       	ld	r31, Z
   1ad86:	e0 2d       	mov	r30, r0
   1ad88:	c8 01       	movw	r24, r16
   1ad8a:	19 95       	eicall
   1ad8c:	ce 15       	cp	r28, r14
   1ad8e:	df 05       	cpc	r29, r15
   1ad90:	a1 f7       	brne	.-24     	; 0x1ad7a <_ZN17LiquidCrystal_I2C10createCharEhPh+0x28>
   1ad92:	df 91       	pop	r29
   1ad94:	cf 91       	pop	r28
   1ad96:	1f 91       	pop	r17
   1ad98:	0f 91       	pop	r16
   1ad9a:	ff 90       	pop	r15
   1ad9c:	ef 90       	pop	r14
   1ad9e:	08 95       	ret

0001ada0 <_ZN17LiquidCrystal_I2C5writeEh>:

#include "Arduino.h"

#define printIIC(args)	Wire.write(args)
inline size_t LiquidCrystal_I2C::write(uint8_t value) {
	send(value, Rs);
   1ada0:	41 e0       	ldi	r20, 0x01	; 1
   1ada2:	82 df       	rcall	.-252    	; 0x1aca8 <_ZN17LiquidCrystal_I2C4sendEhh>
	return 1;
}
   1ada4:	81 e0       	ldi	r24, 0x01	; 1
   1ada6:	90 e0       	ldi	r25, 0x00	; 0
   1ada8:	08 95       	ret

0001adaa <_ZN17LiquidCrystal_I2C5beginEhhh>:
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
}

void LiquidCrystal_I2C::begin(uint8_t cols, uint8_t lines, uint8_t dotsize) {
   1adaa:	cf 93       	push	r28
   1adac:	df 93       	push	r29
   1adae:	ec 01       	movw	r28, r24
	if (lines > 1) {
   1adb0:	42 30       	cpi	r20, 0x02	; 2
   1adb2:	18 f0       	brcs	.+6      	; 0x1adba <_ZN17LiquidCrystal_I2C5beginEhhh+0x10>
		_displayfunction |= LCD_2LINE;
   1adb4:	8d 81       	ldd	r24, Y+5	; 0x05
   1adb6:	88 60       	ori	r24, 0x08	; 8
   1adb8:	8d 83       	std	Y+5, r24	; 0x05
	}
	_numlines = lines;
   1adba:	48 87       	std	Y+8, r20	; 0x08

	// for some 1 line displays you can select a 10 pixel high font
	if ((dotsize != 0) && (lines == 1)) {
   1adbc:	22 23       	and	r18, r18
   1adbe:	29 f0       	breq	.+10     	; 0x1adca <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
   1adc0:	41 30       	cpi	r20, 0x01	; 1
   1adc2:	19 f4       	brne	.+6      	; 0x1adca <_ZN17LiquidCrystal_I2C5beginEhhh+0x20>
		_displayfunction |= LCD_5x10DOTS;
   1adc4:	8d 81       	ldd	r24, Y+5	; 0x05
   1adc6:	84 60       	ori	r24, 0x04	; 4
   1adc8:	8d 83       	std	Y+5, r24	; 0x05
	}

	// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!
	// according to datasheet, we need at least 40ms after power rises above 2.7V
	// before sending commands. Arduino can turn on way befer 4.5V so we'll wait 50
	delay(50); 
   1adca:	62 e3       	ldi	r22, 0x32	; 50
   1adcc:	70 e0       	ldi	r23, 0x00	; 0
   1adce:	80 e0       	ldi	r24, 0x00	; 0
   1add0:	90 e0       	ldi	r25, 0x00	; 0
   1add2:	86 dc       	rcall	.-1780   	; 0x1a6e0 <delay>
  
	// Now we pull both RS and R/W low to begin commands
// 	expanderWrite(_backlightval);	// reset expanderand turn backlight off (Bit 8 =1)   // kishorr
// 	delay(1000);
	
	_backlightval=LCD_BACKLIGHT;   // kishorr
   1add4:	88 e0       	ldi	r24, 0x08	; 8
   1add6:	8b 87       	std	Y+11, r24	; 0x0b
	expanderWrite(0);
   1add8:	60 e0       	ldi	r22, 0x00	; 0
   1adda:	ce 01       	movw	r24, r28
   1addc:	2e df       	rcall	.-420    	; 0x1ac3a <_ZN17LiquidCrystal_I2C13expanderWriteEh>
    delay(1000);
   1adde:	68 ee       	ldi	r22, 0xE8	; 232
   1ade0:	73 e0       	ldi	r23, 0x03	; 3
   1ade2:	80 e0       	ldi	r24, 0x00	; 0
   1ade4:	90 e0       	ldi	r25, 0x00	; 0
   1ade6:	7c dc       	rcall	.-1800   	; 0x1a6e0 <delay>
  	//put the LCD into 4 bit mode
	// this is according to the hitachi HD44780 datasheet
	// figure 24, pg 46
	
	  // we start in 8bit mode, try to set 4 bit mode
   write4bits(0x03 << 4);
   1ade8:	60 e3       	ldi	r22, 0x30	; 48
   1adea:	ce 01       	movw	r24, r28
   1adec:	51 df       	rcall	.-350    	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1adee:	84 e9       	ldi	r24, 0x94	; 148
   1adf0:	91 e1       	ldi	r25, 0x11	; 17
   1adf2:	b0 dc       	rcall	.-1696   	; 0x1a754 <delayMicroseconds>
   
   // second try
   write4bits(0x03 << 4);
   1adf4:	60 e3       	ldi	r22, 0x30	; 48
   1adf6:	ce 01       	movw	r24, r28
   1adf8:	4b df       	rcall	.-362    	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(4500); // wait min 4.1ms
   1adfa:	84 e9       	ldi	r24, 0x94	; 148
   1adfc:	91 e1       	ldi	r25, 0x11	; 17
   1adfe:	aa dc       	rcall	.-1708   	; 0x1a754 <delayMicroseconds>
   
   // third go!
   write4bits(0x03 << 4); 
   1ae00:	60 e3       	ldi	r22, 0x30	; 48
   1ae02:	ce 01       	movw	r24, r28
   1ae04:	45 df       	rcall	.-374    	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>
   delayMicroseconds(150);
   1ae06:	86 e9       	ldi	r24, 0x96	; 150
   1ae08:	90 e0       	ldi	r25, 0x00	; 0
   1ae0a:	a4 dc       	rcall	.-1720   	; 0x1a754 <delayMicroseconds>
   
   // finally, set to 4-bit interface
   write4bits(0x02 << 4); 
   1ae0c:	60 e2       	ldi	r22, 0x20	; 32
   1ae0e:	ce 01       	movw	r24, r28
   1ae10:	3f df       	rcall	.-386    	; 0x1ac90 <_ZN17LiquidCrystal_I2C10write4bitsEh>


	// set # lines, font size, etc.
	command(LCD_FUNCTIONSET | _displayfunction);  
   1ae12:	6d 81       	ldd	r22, Y+5	; 0x05
   1ae14:	60 62       	ori	r22, 0x20	; 32
   1ae16:	ce 01       	movw	r24, r28
   1ae18:	5c df       	rcall	.-328    	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>
	
	// turn the display on with no cursor or blinking default
	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;
   1ae1a:	84 e0       	ldi	r24, 0x04	; 4
   1ae1c:	8e 83       	std	Y+6, r24	; 0x06
	display();
   1ae1e:	ce 01       	movw	r24, r28
   1ae20:	91 df       	rcall	.-222    	; 0x1ad44 <_ZN17LiquidCrystal_I2C7displayEv>
	
	// clear it off
	clear();
   1ae22:	ce 01       	movw	r24, r28
   1ae24:	58 df       	rcall	.-336    	; 0x1acd6 <_ZN17LiquidCrystal_I2C5clearEv>
   1ae26:	82 e0       	ldi	r24, 0x02	; 2
	
	// Initialize to default text direction (for roman languages)
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
   1ae28:	8f 83       	std	Y+7, r24	; 0x07
   1ae2a:	66 e0       	ldi	r22, 0x06	; 6
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
   1ae2c:	ce 01       	movw	r24, r28
   1ae2e:	51 df       	rcall	.-350    	; 0x1acd2 <_ZN17LiquidCrystal_I2C7commandEh>
   1ae30:	ce 01       	movw	r24, r28
   1ae32:	df 91       	pop	r29
	
	home();
   1ae34:	cf 91       	pop	r28
  
}
   1ae36:	54 cf       	rjmp	.-344    	; 0x1ace0 <_ZN17LiquidCrystal_I2C4homeEv>

0001ae38 <_ZN17LiquidCrystal_I2C9init_privEv>:
   1ae38:	cf 93       	push	r28
	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
	
	// set the entry mode
	command(LCD_ENTRYMODESET | _displaymode);
	
	home();
   1ae3a:	df 93       	push	r29
   1ae3c:	ec 01       	movw	r28, r24
	init_priv();
}

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
   1ae3e:	84 e0       	ldi	r24, 0x04	; 4
   1ae40:	9a e1       	ldi	r25, 0x1A	; 26
   1ae42:	4f d7       	rcall	.+3742   	; 0x1bce2 <_ZN7TwoWire5beginEv>
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
   1ae44:	1d 82       	std	Y+5, r1	; 0x05
	begin(_cols, _rows);  
   1ae46:	20 e0       	ldi	r18, 0x00	; 0
   1ae48:	4a 85       	ldd	r20, Y+10	; 0x0a
   1ae4a:	69 85       	ldd	r22, Y+9	; 0x09
   1ae4c:	ce 01       	movw	r24, r28
}
   1ae4e:	df 91       	pop	r29

void LiquidCrystal_I2C::init_priv()
{
	Wire.begin();
	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
	begin(_cols, _rows);  
   1ae50:	cf 91       	pop	r28
   1ae52:	ab cf       	rjmp	.-170    	; 0x1adaa <_ZN17LiquidCrystal_I2C5beginEhhh>

0001ae54 <_ZN17LiquidCrystal_I2C4initEv>:
  _rows = lcd_rows;
  _backlightval = LCD_NOBACKLIGHT;
}

void LiquidCrystal_I2C::init(){
	init_priv();
   1ae54:	f1 cf       	rjmp	.-30     	; 0x1ae38 <_ZN17LiquidCrystal_I2C9init_privEv>

0001ae56 <_ZN15RHGenericDriver4initEv>:
}

bool RHGenericDriver::init()
{
    return true;
}
   1ae56:	81 e0       	ldi	r24, 0x01	; 1
   1ae58:	08 95       	ret

0001ae5a <_ZN15RHGenericDriver14setPromiscuousEb>:
    return false;
}

void RHGenericDriver::setPromiscuous(bool promiscuous)
{
    _promiscuous = promiscuous;
   1ae5a:	fc 01       	movw	r30, r24
   1ae5c:	64 83       	std	Z+4, r22	; 0x04
   1ae5e:	08 95       	ret

0001ae60 <_ZN15RHGenericDriver14setThisAddressEh>:
}

void RHGenericDriver::setThisAddress(uint8_t address)
{
    _thisAddress = address;
   1ae60:	fc 01       	movw	r30, r24
   1ae62:	63 83       	std	Z+3, r22	; 0x03
   1ae64:	08 95       	ret

0001ae66 <_ZN15RHGenericDriver11setHeaderToEh>:
}

void RHGenericDriver::setHeaderTo(uint8_t to)
{
    _txHeaderTo = to;
   1ae66:	fc 01       	movw	r30, r24
   1ae68:	61 87       	std	Z+9, r22	; 0x09
   1ae6a:	08 95       	ret

0001ae6c <_ZN15RHGenericDriver13setHeaderFromEh>:
}

void RHGenericDriver::setHeaderFrom(uint8_t from)
{
    _txHeaderFrom = from;
   1ae6c:	fc 01       	movw	r30, r24
   1ae6e:	62 87       	std	Z+10, r22	; 0x0a
   1ae70:	08 95       	ret

0001ae72 <_ZN15RHGenericDriver11setHeaderIdEh>:
}

void RHGenericDriver::setHeaderId(uint8_t id)
{
    _txHeaderId = id;
   1ae72:	fc 01       	movw	r30, r24
   1ae74:	63 87       	std	Z+11, r22	; 0x0b
   1ae76:	08 95       	ret

0001ae78 <_ZN15RHGenericDriver14setHeaderFlagsEhh>:
}

void RHGenericDriver::setHeaderFlags(uint8_t set, uint8_t clear)
{
   1ae78:	fc 01       	movw	r30, r24
    _txHeaderFlags &= ~clear;
    _txHeaderFlags |= set;
   1ae7a:	40 95       	com	r20
   1ae7c:	94 85       	ldd	r25, Z+12	; 0x0c
   1ae7e:	49 23       	and	r20, r25
   1ae80:	64 2b       	or	r22, r20
   1ae82:	64 87       	std	Z+12, r22	; 0x0c
   1ae84:	08 95       	ret

0001ae86 <_ZN15RHGenericDriver8headerToEv>:
}

uint8_t RHGenericDriver::headerTo()
{
    return _rxHeaderTo;
   1ae86:	fc 01       	movw	r30, r24
   1ae88:	85 81       	ldd	r24, Z+5	; 0x05
}
   1ae8a:	08 95       	ret

0001ae8c <_ZN15RHGenericDriver10headerFromEv>:

uint8_t RHGenericDriver::headerFrom()
{
    return _rxHeaderFrom;
   1ae8c:	fc 01       	movw	r30, r24
   1ae8e:	86 81       	ldd	r24, Z+6	; 0x06
}
   1ae90:	08 95       	ret

0001ae92 <_ZN15RHGenericDriver8headerIdEv>:

uint8_t RHGenericDriver::headerId()
{
    return _rxHeaderId;
   1ae92:	fc 01       	movw	r30, r24
   1ae94:	87 81       	ldd	r24, Z+7	; 0x07
}
   1ae96:	08 95       	ret

0001ae98 <_ZN15RHGenericDriver11headerFlagsEv>:

uint8_t RHGenericDriver::headerFlags()
{
    return _rxHeaderFlags;
   1ae98:	fc 01       	movw	r30, r24
   1ae9a:	80 85       	ldd	r24, Z+8	; 0x08
}
   1ae9c:	08 95       	ret

0001ae9e <_ZN15RHGenericDriver8lastRssiEv>:

int16_t RHGenericDriver::lastRssi()
{
    return _lastRssi;
   1ae9e:	fc 01       	movw	r30, r24
   1aea0:	85 85       	ldd	r24, Z+13	; 0x0d
   1aea2:	96 85       	ldd	r25, Z+14	; 0x0e
}
   1aea4:	08 95       	ret

0001aea6 <_ZN15RHGenericDriver4modeEv>:

RHGenericDriver::RHMode  RHGenericDriver::mode()
{
    return _mode;
   1aea6:	fc 01       	movw	r30, r24
   1aea8:	82 81       	ldd	r24, Z+2	; 0x02
}
   1aeaa:	08 95       	ret

0001aeac <_ZN15RHGenericDriver7setModeENS_6RHModeE>:

void  RHGenericDriver::setMode(RHMode mode)
{
    _mode = mode;
   1aeac:	fc 01       	movw	r30, r24
   1aeae:	62 83       	std	Z+2, r22	; 0x02
   1aeb0:	08 95       	ret

0001aeb2 <_ZN15RHGenericDriver15isChannelActiveEv>:
}

bool  RHGenericDriver::sleep()
{
    return false;
}
   1aeb2:	80 e0       	ldi	r24, 0x00	; 0
   1aeb4:	08 95       	ret

0001aeb6 <_ZN15RHGenericDriver5rxBadEv>:
#endif
}

uint16_t RHGenericDriver::rxBad()
{
    return _rxBad;
   1aeb6:	fc 01       	movw	r30, r24
   1aeb8:	87 85       	ldd	r24, Z+15	; 0x0f
   1aeba:	90 89       	ldd	r25, Z+16	; 0x10
}
   1aebc:	08 95       	ret

0001aebe <_ZN15RHGenericDriver6rxGoodEv>:

uint16_t RHGenericDriver::rxGood()
{
    return _rxGood;
   1aebe:	fc 01       	movw	r30, r24
   1aec0:	81 89       	ldd	r24, Z+17	; 0x11
   1aec2:	92 89       	ldd	r25, Z+18	; 0x12
}
   1aec4:	08 95       	ret

0001aec6 <_ZN15RHGenericDriver6txGoodEv>:

uint16_t RHGenericDriver::txGood()
{
    return _txGood;
   1aec6:	fc 01       	movw	r30, r24
   1aec8:	83 89       	ldd	r24, Z+19	; 0x13
   1aeca:	94 89       	ldd	r25, Z+20	; 0x14
}
   1aecc:	08 95       	ret

0001aece <_ZN15RHGenericDriver13waitAvailableEv>:
    return true;
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
   1aece:	cf 93       	push	r28
   1aed0:	df 93       	push	r29
   1aed2:	ec 01       	movw	r28, r24
    while (!available())
   1aed4:	e8 81       	ld	r30, Y
   1aed6:	f9 81       	ldd	r31, Y+1	; 0x01
   1aed8:	06 80       	ldd	r0, Z+6	; 0x06
   1aeda:	f7 81       	ldd	r31, Z+7	; 0x07
   1aedc:	e0 2d       	mov	r30, r0
   1aede:	ce 01       	movw	r24, r28
   1aee0:	19 95       	eicall
   1aee2:	81 11       	cpse	r24, r1
   1aee4:	02 c0       	rjmp	.+4      	; 0x1aeea <_ZN15RHGenericDriver13waitAvailableEv+0x1c>
	YIELD;
   1aee6:	2f d7       	rcall	.+3678   	; 0x1bd46 <yield>
}

// Blocks until a valid message is received
void RHGenericDriver::waitAvailable()
{
    while (!available())
   1aee8:	f5 cf       	rjmp	.-22     	; 0x1aed4 <_ZN15RHGenericDriver13waitAvailableEv+0x6>
	YIELD;
}
   1aeea:	df 91       	pop	r29
   1aeec:	cf 91       	pop	r28
   1aeee:	08 95       	ret

0001aef0 <_ZN15RHGenericDriver14waitPacketSentEv>:
    }
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
   1aef0:	cf 93       	push	r28
   1aef2:	df 93       	push	r29
   1aef4:	ec 01       	movw	r28, r24
    while (_mode == RHModeTx)
   1aef6:	8a 81       	ldd	r24, Y+2	; 0x02
   1aef8:	83 30       	cpi	r24, 0x03	; 3
   1aefa:	11 f4       	brne	.+4      	; 0x1af00 <_ZN15RHGenericDriver14waitPacketSentEv+0x10>
	YIELD; // Wait for any previous transmit to finish
   1aefc:	24 d7       	rcall	.+3656   	; 0x1bd46 <yield>
    return false;
}

bool RHGenericDriver::waitPacketSent()
{
    while (_mode == RHModeTx)
   1aefe:	fb cf       	rjmp	.-10     	; 0x1aef6 <_ZN15RHGenericDriver14waitPacketSentEv+0x6>
	YIELD; // Wait for any previous transmit to finish
    return true;
}
   1af00:	81 e0       	ldi	r24, 0x01	; 1
   1af02:	df 91       	pop	r29
   1af04:	cf 91       	pop	r28
   1af06:	08 95       	ret

0001af08 <_ZN15RHGenericDriver20waitAvailableTimeoutEj>:

// Blocks until a valid message is received or timeout expires
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
   1af08:	8f 92       	push	r8
   1af0a:	9f 92       	push	r9
   1af0c:	af 92       	push	r10
   1af0e:	bf 92       	push	r11
   1af10:	cf 92       	push	r12
   1af12:	df 92       	push	r13
   1af14:	ef 92       	push	r14
   1af16:	ff 92       	push	r15
   1af18:	cf 93       	push	r28
   1af1a:	df 93       	push	r29
   1af1c:	ec 01       	movw	r28, r24
   1af1e:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1af20:	ae db       	rcall	.-2212   	; 0x1a67e <millis>
   1af22:	4b 01       	movw	r8, r22
   1af24:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1af26:	e1 2c       	mov	r14, r1
   1af28:	f1 2c       	mov	r15, r1
   1af2a:	a9 db       	rcall	.-2222   	; 0x1a67e <millis>
   1af2c:	dc 01       	movw	r26, r24
   1af2e:	cb 01       	movw	r24, r22
   1af30:	88 19       	sub	r24, r8
   1af32:	99 09       	sbc	r25, r9
   1af34:	aa 09       	sbc	r26, r10
   1af36:	bb 09       	sbc	r27, r11
   1af38:	8c 15       	cp	r24, r12
   1af3a:	9d 05       	cpc	r25, r13
   1af3c:	ae 05       	cpc	r26, r14
   1af3e:	bf 05       	cpc	r27, r15
   1af40:	58 f4       	brcc	.+22     	; 0x1af58 <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x50>
    {
        if (available())
   1af42:	e8 81       	ld	r30, Y
   1af44:	f9 81       	ldd	r31, Y+1	; 0x01
   1af46:	06 80       	ldd	r0, Z+6	; 0x06
   1af48:	f7 81       	ldd	r31, Z+7	; 0x07
   1af4a:	e0 2d       	mov	r30, r0
   1af4c:	ce 01       	movw	r24, r28
   1af4e:	19 95       	eicall
   1af50:	81 11       	cpse	r24, r1
	{
           return true;
	}
	YIELD;
   1af52:	03 c0       	rjmp	.+6      	; 0x1af5a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x52>
   1af54:	f8 d6       	rcall	.+3568   	; 0x1bd46 <yield>
// Return true if there is a message available
// Works correctly even on millis() rollover
bool RHGenericDriver::waitAvailableTimeout(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1af56:	e9 cf       	rjmp	.-46     	; 0x1af2a <_ZN15RHGenericDriver20waitAvailableTimeoutEj+0x22>
	{
           return true;
	}
	YIELD;
    }
    return false;
   1af58:	80 e0       	ldi	r24, 0x00	; 0
}
   1af5a:	df 91       	pop	r29
   1af5c:	cf 91       	pop	r28
   1af5e:	ff 90       	pop	r15
   1af60:	ef 90       	pop	r14
   1af62:	df 90       	pop	r13
   1af64:	cf 90       	pop	r12
   1af66:	bf 90       	pop	r11
   1af68:	af 90       	pop	r10
   1af6a:	9f 90       	pop	r9
   1af6c:	8f 90       	pop	r8
   1af6e:	08 95       	ret

0001af70 <_ZN15RHGenericDriver14waitPacketSentEj>:
	YIELD; // Wait for any previous transmit to finish
    return true;
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
   1af70:	8f 92       	push	r8
   1af72:	9f 92       	push	r9
   1af74:	af 92       	push	r10
   1af76:	bf 92       	push	r11
   1af78:	cf 92       	push	r12
   1af7a:	df 92       	push	r13
   1af7c:	ef 92       	push	r14
   1af7e:	ff 92       	push	r15
   1af80:	cf 93       	push	r28
   1af82:	df 93       	push	r29
   1af84:	ec 01       	movw	r28, r24
   1af86:	6b 01       	movw	r12, r22
    unsigned long starttime = millis();
   1af88:	7a db       	rcall	.-2316   	; 0x1a67e <millis>
   1af8a:	4b 01       	movw	r8, r22
   1af8c:	5c 01       	movw	r10, r24
    while ((millis() - starttime) < timeout)
   1af8e:	e1 2c       	mov	r14, r1
   1af90:	f1 2c       	mov	r15, r1
   1af92:	75 db       	rcall	.-2326   	; 0x1a67e <millis>
   1af94:	dc 01       	movw	r26, r24
   1af96:	cb 01       	movw	r24, r22
   1af98:	88 19       	sub	r24, r8
   1af9a:	99 09       	sbc	r25, r9
   1af9c:	aa 09       	sbc	r26, r10
   1af9e:	bb 09       	sbc	r27, r11
   1afa0:	8c 15       	cp	r24, r12
   1afa2:	9d 05       	cpc	r25, r13
   1afa4:	ae 05       	cpc	r26, r14
   1afa6:	bf 05       	cpc	r27, r15
   1afa8:	28 f4       	brcc	.+10     	; 0x1afb4 <_ZN15RHGenericDriver14waitPacketSentEj+0x44>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
   1afaa:	8a 81       	ldd	r24, Y+2	; 0x02
   1afac:	83 30       	cpi	r24, 0x03	; 3
           return true;
	YIELD;
   1afae:	21 f4       	brne	.+8      	; 0x1afb8 <_ZN15RHGenericDriver14waitPacketSentEj+0x48>
   1afb0:	ca d6       	rcall	.+3476   	; 0x1bd46 <yield>
}

bool RHGenericDriver::waitPacketSent(uint16_t timeout)
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
   1afb2:	ef cf       	rjmp	.-34     	; 0x1af92 <_ZN15RHGenericDriver14waitPacketSentEj+0x22>
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
	YIELD;
    }
    return false;
   1afb4:	80 e0       	ldi	r24, 0x00	; 0
   1afb6:	01 c0       	rjmp	.+2      	; 0x1afba <_ZN15RHGenericDriver14waitPacketSentEj+0x4a>
{
    unsigned long starttime = millis();
    while ((millis() - starttime) < timeout)
    {
        if (_mode != RHModeTx) // Any previous transmit finished?
           return true;
   1afb8:	81 e0       	ldi	r24, 0x01	; 1
	YIELD;
    }
    return false;
}
   1afba:	df 91       	pop	r29
   1afbc:	cf 91       	pop	r28
   1afbe:	ff 90       	pop	r15
   1afc0:	ef 90       	pop	r14
   1afc2:	df 90       	pop	r13
   1afc4:	cf 90       	pop	r12
   1afc6:	bf 90       	pop	r11
   1afc8:	af 90       	pop	r10
   1afca:	9f 90       	pop	r9
   1afcc:	8f 90       	pop	r8
   1afce:	08 95       	ret

0001afd0 <_ZN15RHGenericDriver7waitCADEv>:

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
   1afd0:	cf 92       	push	r12
   1afd2:	df 92       	push	r13
   1afd4:	ef 92       	push	r14
   1afd6:	ff 92       	push	r15
   1afd8:	cf 93       	push	r28
   1afda:	df 93       	push	r29
    if (!_cad_timeout)
   1afdc:	fc 01       	movw	r30, r24
   1afde:	26 89       	ldd	r18, Z+22	; 0x16
   1afe0:	37 89       	ldd	r19, Z+23	; 0x17
   1afe2:	23 2b       	or	r18, r19
   1afe4:	79 f1       	breq	.+94     	; 0x1b044 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1afe6:	ec 01       	movw	r28, r24
    // Wait for any channel activity to finish or timeout
    // Sophisticated DCF function...
    // DCF : BackoffTime = random() x aSlotTime
    // 100 - 1000 ms
    // 10 sec timeout
    unsigned long t = millis();
   1afe8:	4a db       	rcall	.-2412   	; 0x1a67e <millis>
   1afea:	6b 01       	movw	r12, r22
   1afec:	7c 01       	movw	r14, r24
    while (isChannelActive())
   1afee:	e8 81       	ld	r30, Y
   1aff0:	f9 81       	ldd	r31, Y+1	; 0x01
   1aff2:	00 8c       	ldd	r0, Z+24	; 0x18
   1aff4:	f1 8d       	ldd	r31, Z+25	; 0x19
   1aff6:	e0 2d       	mov	r30, r0
   1aff8:	ce 01       	movw	r24, r28
   1affa:	19 95       	eicall
   1affc:	88 23       	and	r24, r24
    {
         if (millis() - t > _cad_timeout) 
   1affe:	11 f1       	breq	.+68     	; 0x1b044 <_ZN15RHGenericDriver7waitCADEv+0x74>
   1b000:	3e db       	rcall	.-2436   	; 0x1a67e <millis>
   1b002:	ab 01       	movw	r20, r22
   1b004:	bc 01       	movw	r22, r24
   1b006:	4c 19       	sub	r20, r12
   1b008:	5d 09       	sbc	r21, r13
   1b00a:	6e 09       	sbc	r22, r14
   1b00c:	7f 09       	sbc	r23, r15
   1b00e:	8e 89       	ldd	r24, Y+22	; 0x16
   1b010:	9f 89       	ldd	r25, Y+23	; 0x17
   1b012:	a0 e0       	ldi	r26, 0x00	; 0
   1b014:	b0 e0       	ldi	r27, 0x00	; 0
   1b016:	84 17       	cp	r24, r20
   1b018:	95 07       	cpc	r25, r21
   1b01a:	a6 07       	cpc	r26, r22
   1b01c:	b7 07       	cpc	r27, r23
   1b01e:	a0 f0       	brcs	.+40     	; 0x1b048 <_ZN15RHGenericDriver7waitCADEv+0x78>
	     return false;
#if (RH_PLATFORM == RH_PLATFORM_STM32) // stdlib on STMF103 gets confused if random is redefined
	 delay(_random(1, 10) * 100);
#else
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
   1b020:	2a e0       	ldi	r18, 0x0A	; 10
   1b022:	30 e0       	ldi	r19, 0x00	; 0
   1b024:	40 e0       	ldi	r20, 0x00	; 0
   1b026:	50 e0       	ldi	r21, 0x00	; 0
   1b028:	61 e0       	ldi	r22, 0x01	; 1
   1b02a:	70 e0       	ldi	r23, 0x00	; 0
   1b02c:	80 e0       	ldi	r24, 0x00	; 0
   1b02e:	90 e0       	ldi	r25, 0x00	; 0
   1b030:	0e 94 b1 e0 	call	0x1c162	; 0x1c162 <_Z6randomll>
   1b034:	9b 01       	movw	r18, r22
   1b036:	ac 01       	movw	r20, r24
   1b038:	a4 e6       	ldi	r26, 0x64	; 100
   1b03a:	b0 e0       	ldi	r27, 0x00	; 0
   1b03c:	0e 94 9a e7 	call	0x1cf34	; 0x1cf34 <__muluhisi3>
   1b040:	4f db       	rcall	.-2402   	; 0x1a6e0 <delay>
   1b042:	d5 cf       	rjmp	.-86     	; 0x1afee <_ZN15RHGenericDriver7waitCADEv+0x1e>

// Wait until no channel activity detected or timeout
bool RHGenericDriver::waitCAD()
{
    if (!_cad_timeout)
	return true;
   1b044:	81 e0       	ldi	r24, 0x01	; 1
   1b046:	01 c0       	rjmp	.+2      	; 0x1b04a <_ZN15RHGenericDriver7waitCADEv+0x7a>
    // 10 sec timeout
    unsigned long t = millis();
    while (isChannelActive())
    {
         if (millis() - t > _cad_timeout) 
	     return false;
   1b048:	80 e0       	ldi	r24, 0x00	; 0
         delay(random(1, 10) * 100); // Should these values be configurable? Macros?
#endif
    }

    return true;
}
   1b04a:	df 91       	pop	r29
   1b04c:	cf 91       	pop	r28
   1b04e:	ff 90       	pop	r15
   1b050:	ef 90       	pop	r14
   1b052:	df 90       	pop	r13
   1b054:	cf 90       	pop	r12
   1b056:	08 95       	ret

0001b058 <_ZN15RHGenericDriverC1Ev>:
// Copyright (C) 2014 Mike McCauley
// $Id: RHGenericDriver.cpp,v 1.24 2020/01/07 23:35:02 mikem Exp $

#include <RHGenericDriver.h>

RHGenericDriver::RHGenericDriver()
   1b058:	fc 01       	movw	r30, r24
    _txHeaderId(0),
    _txHeaderFlags(0),
    _rxBad(0),
    _rxGood(0),
    _txGood(0),
    _cad_timeout(0)
   1b05a:	8b ed       	ldi	r24, 0xDB	; 219
   1b05c:	97 e0       	ldi	r25, 0x07	; 7
   1b05e:	91 83       	std	Z+1, r25	; 0x01
   1b060:	80 83       	st	Z, r24
   1b062:	12 82       	std	Z+2, r1	; 0x02
   1b064:	8f ef       	ldi	r24, 0xFF	; 255
   1b066:	83 83       	std	Z+3, r24	; 0x03
   1b068:	81 87       	std	Z+9, r24	; 0x09
   1b06a:	82 87       	std	Z+10, r24	; 0x0a
   1b06c:	13 86       	std	Z+11, r1	; 0x0b
   1b06e:	14 86       	std	Z+12, r1	; 0x0c
   1b070:	10 8a       	std	Z+16, r1	; 0x10
   1b072:	17 86       	std	Z+15, r1	; 0x0f
   1b074:	12 8a       	std	Z+18, r1	; 0x12
   1b076:	11 8a       	std	Z+17, r1	; 0x11
   1b078:	14 8a       	std	Z+20, r1	; 0x14
   1b07a:	13 8a       	std	Z+19, r1	; 0x13
   1b07c:	17 8a       	std	Z+23, r1	; 0x17
   1b07e:	16 8a       	std	Z+22, r1	; 0x16
   1b080:	08 95       	ret

0001b082 <_ZN13RHHardwareSPI8transferEh>:
    SPSR = settings.spsr;
  }

  // Write to the SPI bus (MOSI pin) and also receive (MISO pin)
  inline static uint8_t transfer(uint8_t data) {
    SPDR = data;
   1b082:	6e bd       	out	0x2e, r22	; 46
     * The following NOP introduces a small delay that can prevent the wait
     * loop form iterating when running at the maximum speed. This gives
     * about 10% more speed, even if it seems counter-intuitive. At lower
     * speeds it is unnoticed.
     */
    asm volatile("nop");
   1b084:	00 00       	nop
    while (!(SPSR & _BV(SPIF))) ; // wait
   1b086:	0d b4       	in	r0, 0x2d	; 45
   1b088:	07 fe       	sbrs	r0, 7
   1b08a:	fd cf       	rjmp	.-6      	; 0x1b086 <_ZN13RHHardwareSPI8transferEh+0x4>
    return SPDR;
   1b08c:	8e b5       	in	r24, 0x2e	; 46
}

uint8_t RHHardwareSPI::transfer(uint8_t data) 
{
    return SPI.transfer(data);
}
   1b08e:	08 95       	ret

0001b090 <_ZN13RHHardwareSPI15attachInterruptEv>:
    SPSR = (SPSR & ~SPI_2XCLOCK_MASK) | ((clockDiv >> 2) & SPI_2XCLOCK_MASK);
  }
  // These undocumented functions should not be used.  SPI.transfer()
  // polls the hardware flag which is automatically cleared as the
  // AVR responds to SPI's interrupt
  inline static void attachInterrupt() { SPCR |= _BV(SPIE); }
   1b090:	8c b5       	in	r24, 0x2c	; 44
   1b092:	80 68       	ori	r24, 0x80	; 128
   1b094:	8c bd       	out	0x2c, r24	; 44
   1b096:	08 95       	ret

0001b098 <_ZN13RHHardwareSPI15detachInterruptEv>:
  inline static void detachInterrupt() { SPCR &= ~_BV(SPIE); }
   1b098:	8c b5       	in	r24, 0x2c	; 44
   1b09a:	8f 77       	andi	r24, 0x7F	; 127
   1b09c:	8c bd       	out	0x2c, r24	; 44
   1b09e:	08 95       	ret

0001b0a0 <_ZN13RHHardwareSPI16beginTransactionEv>:
{
    return SPI.end();
}

void RHHardwareSPI::beginTransaction()
{
   1b0a0:	fc 01       	movw	r30, r24
   1b0a2:	45 81       	ldd	r20, Z+5	; 0x05
   1b0a4:	36 81       	ldd	r19, Z+6	; 0x06

  // Before using SPI.transfer() or asserting chip select pins,
  // this function is used to gain exclusive access to the SPI bus
  // and configure the correct settings.
  inline static void beginTransaction(SPISettings settings) {
    if (interruptMode > 0) {
   1b0a6:	80 91 02 1a 	lds	r24, 0x1A02	; 0x801a02 <_ZN8SPIClass13interruptModeE>
   1b0aa:	88 23       	and	r24, r24
   1b0ac:	99 f0       	breq	.+38     	; 0x1b0d4 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      uint8_t sreg = SREG;
   1b0ae:	2f b7       	in	r18, 0x3f	; 63
      noInterrupts();
   1b0b0:	f8 94       	cli

      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b0b2:	80 91 02 1a 	lds	r24, 0x1A02	; 0x801a02 <_ZN8SPIClass13interruptModeE>
   1b0b6:	81 30       	cpi	r24, 0x01	; 1
   1b0b8:	59 f4       	brne	.+22     	; 0x1b0d0 <_ZN13RHHardwareSPI16beginTransactionEv+0x30>
        interruptSave = SPI_AVR_EIMSK;
   1b0ba:	8d b3       	in	r24, 0x1d	; 29
   1b0bc:	80 93 00 1a 	sts	0x1A00, r24	; 0x801a00 <_ZN8SPIClass13interruptSaveE>
        SPI_AVR_EIMSK &= ~interruptMask;
   1b0c0:	9d b3       	in	r25, 0x1d	; 29
   1b0c2:	80 91 01 1a 	lds	r24, 0x1A01	; 0x801a01 <_ZN8SPIClass13interruptMaskE>
   1b0c6:	80 95       	com	r24
   1b0c8:	89 23       	and	r24, r25
   1b0ca:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b0cc:	2f bf       	out	0x3f, r18	; 63
   1b0ce:	02 c0       	rjmp	.+4      	; 0x1b0d4 <_ZN13RHHardwareSPI16beginTransactionEv+0x34>
      } else
      #endif
      {
        interruptSave = sreg;
   1b0d0:	20 93 00 1a 	sts	0x1A00, r18	; 0x801a00 <_ZN8SPIClass13interruptSaveE>
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 1;
    #endif

    SPCR = settings.spcr;
   1b0d4:	4c bd       	out	0x2c, r20	; 44
    SPSR = settings.spsr;
   1b0d6:	3d bd       	out	0x2d, r19	; 45
   1b0d8:	08 95       	ret

0001b0da <_ZN13RHHardwareSPI5beginEv>:
    SPI.detachInterrupt();
#endif
}
    
void RHHardwareSPI::begin() 
{
   1b0da:	0f 93       	push	r16
   1b0dc:	1f 93       	push	r17
   1b0de:	fc 01       	movw	r30, r24
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
   1b0e0:	82 81       	ldd	r24, Z+2	; 0x02
   1b0e2:	84 30       	cpi	r24, 0x04	; 4
   1b0e4:	59 f0       	breq	.+22     	; 0x1b0fc <_ZN13RHHardwareSPI5beginEv+0x22>
       frequency = 16000000;
   else if (_frequency == Frequency8MHz)
   1b0e6:	83 30       	cpi	r24, 0x03	; 3
   1b0e8:	71 f0       	breq	.+28     	; 0x1b106 <_ZN13RHHardwareSPI5beginEv+0x2c>
       frequency = 8000000;
   else if (_frequency == Frequency4MHz)
   1b0ea:	82 30       	cpi	r24, 0x02	; 2
   1b0ec:	89 f0       	breq	.+34     	; 0x1b110 <_ZN13RHHardwareSPI5beginEv+0x36>
       frequency = 4000000;
   else if (_frequency == Frequency2MHz)
   1b0ee:	81 30       	cpi	r24, 0x01	; 1
   1b0f0:	a1 f0       	breq	.+40     	; 0x1b11a <_ZN13RHHardwareSPI5beginEv+0x40>
       frequency = 2000000;
   else
       frequency = 1000000;
   1b0f2:	40 e4       	ldi	r20, 0x40	; 64
   1b0f4:	52 e4       	ldi	r21, 0x42	; 66
   1b0f6:	6f e0       	ldi	r22, 0x0F	; 15
   1b0f8:	70 e0       	ldi	r23, 0x00	; 0
   1b0fa:	13 c0       	rjmp	.+38     	; 0x1b122 <_ZN13RHHardwareSPI5beginEv+0x48>
#if defined(SPI_HAS_TRANSACTION)
    // Perhaps this is a uniform interface for SPI?
    // Currently Teensy and ESP32 only
   uint32_t frequency;
   if (_frequency == Frequency16MHz)
       frequency = 16000000;
   1b0fc:	40 e0       	ldi	r20, 0x00	; 0
   1b0fe:	54 e2       	ldi	r21, 0x24	; 36
   1b100:	64 ef       	ldi	r22, 0xF4	; 244
   1b102:	70 e0       	ldi	r23, 0x00	; 0
   1b104:	0e c0       	rjmp	.+28     	; 0x1b122 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency8MHz)
       frequency = 8000000;
   1b106:	40 e0       	ldi	r20, 0x00	; 0
   1b108:	52 e1       	ldi	r21, 0x12	; 18
   1b10a:	6a e7       	ldi	r22, 0x7A	; 122
   1b10c:	70 e0       	ldi	r23, 0x00	; 0
   1b10e:	09 c0       	rjmp	.+18     	; 0x1b122 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency4MHz)
       frequency = 4000000;
   1b110:	40 e0       	ldi	r20, 0x00	; 0
   1b112:	59 e0       	ldi	r21, 0x09	; 9
   1b114:	6d e3       	ldi	r22, 0x3D	; 61
   1b116:	70 e0       	ldi	r23, 0x00	; 0
   1b118:	04 c0       	rjmp	.+8      	; 0x1b122 <_ZN13RHHardwareSPI5beginEv+0x48>
   else if (_frequency == Frequency2MHz)
       frequency = 2000000;
   1b11a:	40 e8       	ldi	r20, 0x80	; 128
   1b11c:	54 e8       	ldi	r21, 0x84	; 132
   1b11e:	6e e1       	ldi	r22, 0x1E	; 30
   1b120:	70 e0       	ldi	r23, 0x00	; 0
       bitOrder = LSBFIRST;
   else
       bitOrder = MSBFIRST;
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
   1b122:	84 81       	ldd	r24, Z+4	; 0x04
   1b124:	88 23       	and	r24, r24
   1b126:	61 f0       	breq	.+24     	; 0x1b140 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
   1b128:	81 30       	cpi	r24, 0x01	; 1
   1b12a:	31 f0       	breq	.+12     	; 0x1b138 <_ZN13RHHardwareSPI5beginEv+0x5e>
	dataMode = SPI_MODE1;
    else if (_dataMode == DataMode2)
   1b12c:	82 30       	cpi	r24, 0x02	; 2
   1b12e:	31 f0       	breq	.+12     	; 0x1b13c <_ZN13RHHardwareSPI5beginEv+0x62>
	dataMode = SPI_MODE2;
    else if (_dataMode == DataMode3)
   1b130:	83 30       	cpi	r24, 0x03	; 3
   1b132:	31 f4       	brne	.+12     	; 0x1b140 <_ZN13RHHardwareSPI5beginEv+0x66>
	dataMode = SPI_MODE3;
   1b134:	9c e0       	ldi	r25, 0x0C	; 12
   1b136:	05 c0       	rjmp	.+10     	; 0x1b142 <_ZN13RHHardwareSPI5beginEv+0x68>
   
    uint8_t dataMode;
    if (_dataMode == DataMode0)
	dataMode = SPI_MODE0;
    else if (_dataMode == DataMode1)
	dataMode = SPI_MODE1;
   1b138:	94 e0       	ldi	r25, 0x04	; 4
   1b13a:	03 c0       	rjmp	.+6      	; 0x1b142 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode2)
	dataMode = SPI_MODE2;
   1b13c:	98 e0       	ldi	r25, 0x08	; 8
   1b13e:	01 c0       	rjmp	.+2      	; 0x1b142 <_ZN13RHHardwareSPI5beginEv+0x68>
    else if (_dataMode == DataMode3)
	dataMode = SPI_MODE3;
    else
	dataMode = SPI_MODE0;
   1b140:	90 e0       	ldi	r25, 0x00	; 0
   1b142:	00 e0       	ldi	r16, 0x00	; 0
   1b144:	12 e1       	ldi	r17, 0x12	; 18
   1b146:	2a e7       	ldi	r18, 0x7A	; 122
   1b148:	30 e0       	ldi	r19, 0x00	; 0
   1b14a:	80 e0       	ldi	r24, 0x00	; 0
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b14c:	40 17       	cp	r20, r16
   1b14e:	51 07       	cpc	r21, r17
   1b150:	62 07       	cpc	r22, r18
   1b152:	73 07       	cpc	r23, r19
   1b154:	40 f4       	brcc	.+16     	; 0x1b166 <_ZN13RHHardwareSPI5beginEv+0x8c>
        clockSetting /= 2;
   1b156:	36 95       	lsr	r19
   1b158:	27 95       	ror	r18
   1b15a:	17 95       	ror	r17
   1b15c:	07 95       	ror	r16
        clockDiv++;
   1b15e:	8f 5f       	subi	r24, 0xFF	; 255
        clockDiv = 6;
      }
    } else {
      uint32_t clockSetting = F_CPU / 2;
      clockDiv = 0;
      while (clockDiv < 6 && clock < clockSetting) {
   1b160:	86 30       	cpi	r24, 0x06	; 6
   1b162:	a1 f7       	brne	.-24     	; 0x1b14c <_ZN13RHHardwareSPI5beginEv+0x72>
      }
    }

    // Compensate for the duplicate fosc/64
    if (clockDiv == 6)
    clockDiv = 7;
   1b164:	87 e0       	ldi	r24, 0x07	; 7

    // Invert the SPI2X bit
    clockDiv ^= 0x1;
   1b166:	21 e0       	ldi	r18, 0x01	; 1
   1b168:	28 27       	eor	r18, r24

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b16a:	83 81       	ldd	r24, Z+3	; 0x03
   1b16c:	81 30       	cpi	r24, 0x01	; 1
   1b16e:	11 f0       	breq	.+4      	; 0x1b174 <_ZN13RHHardwareSPI5beginEv+0x9a>
   1b170:	80 e5       	ldi	r24, 0x50	; 80
   1b172:	01 c0       	rjmp	.+2      	; 0x1b176 <_ZN13RHHardwareSPI5beginEv+0x9c>
   1b174:	80 e7       	ldi	r24, 0x70	; 112

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   1b176:	32 2f       	mov	r19, r18
   1b178:	36 95       	lsr	r19
   1b17a:	93 2b       	or	r25, r19
   1b17c:	98 2b       	or	r25, r24
   1b17e:	95 83       	std	Z+5, r25	; 0x05
   1b180:	21 70       	andi	r18, 0x01	; 1
   1b182:	26 83       	std	Z+6, r18	; 0x06
#else
 #warning RHHardwareSPI does not support this platform yet. Consider adding it and contributing a patch.
#endif

#endif // SPI_HAS_TRANSACTION
}
   1b184:	1f 91       	pop	r17
   1b186:	0f 91       	pop	r16
    else
	dataMode = SPI_MODE0;

    // Save the settings for use in transactions
   _settings = SPISettings(frequency, bitOrder, dataMode);
   SPI.begin();
   1b188:	67 c4       	rjmp	.+2254   	; 0x1ba58 <_ZN8SPIClass5beginEv>

0001b18a <_ZN13RHHardwareSPI3endEv>:
#endif // SPI_HAS_TRANSACTION
}

void RHHardwareSPI::end() 
{
    return SPI.end();
   1b18a:	9c c4       	rjmp	.+2360   	; 0x1bac4 <_ZN8SPIClass3endEv>

0001b18c <_ZN13RHHardwareSPI14usingInterruptEh>:
    SPI.endTransaction();
#endif
}

void RHHardwareSPI::usingInterrupt(uint8_t interrupt)
{
   1b18c:	86 2f       	mov	r24, r22
#if defined(SPI_HAS_TRANSACTION) && !defined(RH_MISSING_SPIUSINGINTERRUPT)
    SPI.usingInterrupt(interrupt);
   1b18e:	ae c4       	rjmp	.+2396   	; 0x1baec <_ZN8SPIClass14usingInterruptEh>

0001b190 <_ZN13RHHardwareSPI14endTransactionEv>:
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
   1b190:	80 91 02 1a 	lds	r24, 0x1A02	; 0x801a02 <_ZN8SPIClass13interruptModeE>
   1b194:	88 23       	and	r24, r24
   1b196:	61 f0       	breq	.+24     	; 0x1b1b0 <_ZN13RHHardwareSPI14endTransactionEv+0x20>
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
   1b198:	9f b7       	in	r25, 0x3f	; 63
      #endif
      noInterrupts();
   1b19a:	f8 94       	cli
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
   1b19c:	20 91 02 1a 	lds	r18, 0x1A02	; 0x801a02 <_ZN8SPIClass13interruptModeE>
   1b1a0:	80 91 00 1a 	lds	r24, 0x1A00	; 0x801a00 <_ZN8SPIClass13interruptSaveE>
   1b1a4:	21 30       	cpi	r18, 0x01	; 1
   1b1a6:	19 f4       	brne	.+6      	; 0x1b1ae <_ZN13RHHardwareSPI14endTransactionEv+0x1e>
        SPI_AVR_EIMSK = interruptSave;
   1b1a8:	8d bb       	out	0x1d, r24	; 29
        SREG = sreg;
   1b1aa:	9f bf       	out	0x3f, r25	; 63
   1b1ac:	08 95       	ret
      } else
      #endif
      {
        SREG = interruptSave;
   1b1ae:	8f bf       	out	0x3f, r24	; 63
   1b1b0:	08 95       	ret

0001b1b2 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>:
 #define SPI_CLOCK_DIV4  (VARIANT_MCK/21000000) // 4MHz
 #define SPI_CLOCK_DIV2  (VARIANT_MCK/10500000) // 8MHz
 #define SPI_CLOCK_DIV1  (VARIANT_MCK/5250000)  // 16MHz
#endif

RHHardwareSPI::RHHardwareSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1b1b2:	cf 93       	push	r28
   1b1b4:	df 93       	push	r29
   1b1b6:	ec 01       	movw	r28, r24
    :
    RHGenericSPI(frequency, bitOrder, dataMode)
   1b1b8:	0e 94 e0 e0 	call	0x1c1c0	; 0x1c1c0 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>
   1b1bc:	8b e1       	ldi	r24, 0x1B	; 27
   1b1be:	98 e0       	ldi	r25, 0x08	; 8
   1b1c0:	99 83       	std	Y+1, r25	; 0x01
   1b1c2:	88 83       	st	Y, r24
    // Invert the SPI2X bit
    clockDiv ^= 0x1;

    // Pack into the SPISettings class
    spcr = _BV(SPE) | _BV(MSTR) | ((bitOrder == LSBFIRST) ? _BV(DORD) : 0) |
      (dataMode & SPI_MODE_MASK) | ((clockDiv >> 1) & SPI_CLOCK_MASK);
   1b1c4:	80 e5       	ldi	r24, 0x50	; 80
   1b1c6:	8d 83       	std	Y+5, r24	; 0x05
    spsr = clockDiv & SPI_2XCLOCK_MASK;
   1b1c8:	1e 82       	std	Y+6, r1	; 0x06
{
}
   1b1ca:	df 91       	pop	r29
   1b1cc:	cf 91       	pop	r28
   1b1ce:	08 95       	ret

0001b1d0 <_GLOBAL__sub_I_hardware_spi>:
#include <RHHardwareSPI.h>

#ifdef RH_HAVE_HARDWARE_SPI

// Declare a single default instance of the hardware SPI interface class
RHHardwareSPI hardware_spi;
   1b1d0:	20 e0       	ldi	r18, 0x00	; 0
   1b1d2:	40 e0       	ldi	r20, 0x00	; 0
   1b1d4:	60 e0       	ldi	r22, 0x00	; 0
   1b1d6:	82 ef       	ldi	r24, 0xF2	; 242
   1b1d8:	99 e1       	ldi	r25, 0x19	; 25
   1b1da:	eb cf       	rjmp	.-42     	; 0x1b1b2 <_ZN13RHHardwareSPIC1EN12RHGenericSPI9FrequencyENS0_8BitOrderENS0_8DataModeE>

0001b1dc <_ZN7RH_RF9514modeWillChangeEN15RHGenericDriver6RHModeE>:
	cr = RH_RF95_CODING_RATE_4_7;
    else if (denominator >= 8)
	cr = RH_RF95_CODING_RATE_4_8;
 
    // CR is bits 3..1 of RH_RF95_REG_1D_MODEM_CONFIG1
    spiWrite(RH_RF95_REG_1D_MODEM_CONFIG1, (spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) & ~RH_RF95_CODING_RATE) | cr);
   1b1dc:	81 e0       	ldi	r24, 0x01	; 1
   1b1de:	08 95       	ret

0001b1e0 <_ZN7RH_RF9516maxMessageLengthEv>:
   1b1e0:	8f e1       	ldi	r24, 0x1F	; 31
   1b1e2:	08 95       	ret

0001b1e4 <_ZN7RH_RF95D1Ev>:
   1b1e4:	08 95       	ret

0001b1e6 <_ZN7RH_RF9515isChannelActiveEv>:
   1b1e6:	cf 93       	push	r28
   1b1e8:	df 93       	push	r29
   1b1ea:	ec 01       	movw	r28, r24
   1b1ec:	8a 81       	ldd	r24, Y+2	; 0x02
   1b1ee:	85 30       	cpi	r24, 0x05	; 5
   1b1f0:	b1 f0       	breq	.+44     	; 0x1b21e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b1f2:	e8 81       	ld	r30, Y
   1b1f4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b1f6:	e0 5c       	subi	r30, 0xC0	; 192
   1b1f8:	ff 4f       	sbci	r31, 0xFF	; 255
   1b1fa:	01 90       	ld	r0, Z+
   1b1fc:	f0 81       	ld	r31, Z
   1b1fe:	e0 2d       	mov	r30, r0
   1b200:	65 e0       	ldi	r22, 0x05	; 5
   1b202:	ce 01       	movw	r24, r28
   1b204:	19 95       	eicall
   1b206:	47 e0       	ldi	r20, 0x07	; 7
   1b208:	61 e0       	ldi	r22, 0x01	; 1
   1b20a:	ce 01       	movw	r24, r28
   1b20c:	0e 94 72 e1 	call	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b210:	40 e8       	ldi	r20, 0x80	; 128
   1b212:	60 e4       	ldi	r22, 0x40	; 64
   1b214:	ce 01       	movw	r24, r28
   1b216:	0e 94 72 e1 	call	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b21a:	85 e0       	ldi	r24, 0x05	; 5
   1b21c:	8a 83       	std	Y+2, r24	; 0x02
   1b21e:	8a 81       	ldd	r24, Y+2	; 0x02
   1b220:	85 30       	cpi	r24, 0x05	; 5
   1b222:	11 f4       	brne	.+4      	; 0x1b228 <_ZN7RH_RF9515isChannelActiveEv+0x42>
   1b224:	90 d5       	rcall	.+2848   	; 0x1bd46 <yield>
   1b226:	fb cf       	rjmp	.-10     	; 0x1b21e <_ZN7RH_RF9515isChannelActiveEv+0x38>
   1b228:	8d 89       	ldd	r24, Y+21	; 0x15
   1b22a:	df 91       	pop	r29
   1b22c:	cf 91       	pop	r28
   1b22e:	08 95       	ret

0001b230 <_ZN7RH_RF95D0Ev>:
   1b230:	8b c5       	rjmp	.+2838   	; 0x1bd48 <_ZdlPv>

0001b232 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>:
   1b232:	0f 93       	push	r16
   1b234:	1f 93       	push	r17
   1b236:	cf 93       	push	r28
   1b238:	8c 01       	movw	r16, r24
   1b23a:	c6 2f       	mov	r28, r22
   1b23c:	65 31       	cpi	r22, 0x15	; 21
   1b23e:	2c f4       	brge	.+10     	; 0x1b24a <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x18>
   1b240:	62 30       	cpi	r22, 0x02	; 2
   1b242:	5c f0       	brlt	.+22     	; 0x1b25a <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x28>
   1b244:	62 31       	cpi	r22, 0x12	; 18
   1b246:	54 f0       	brlt	.+20     	; 0x1b25c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x2a>
   1b248:	01 c0       	rjmp	.+2      	; 0x1b24c <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x1a>
   1b24a:	c4 e1       	ldi	r28, 0x14	; 20
   1b24c:	47 e0       	ldi	r20, 0x07	; 7
   1b24e:	6d e4       	ldi	r22, 0x4D	; 77
   1b250:	c8 01       	movw	r24, r16
   1b252:	0e 94 72 e1 	call	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b256:	c3 50       	subi	r28, 0x03	; 3
   1b258:	06 c0       	rjmp	.+12     	; 0x1b266 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10+0x34>
   1b25a:	c2 e0       	ldi	r28, 0x02	; 2
   1b25c:	44 e0       	ldi	r20, 0x04	; 4
   1b25e:	6d e4       	ldi	r22, 0x4D	; 77
   1b260:	c8 01       	movw	r24, r16
   1b262:	0e 94 72 e1 	call	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b266:	4e ef       	ldi	r20, 0xFE	; 254
   1b268:	4c 0f       	add	r20, r28
   1b26a:	40 68       	ori	r20, 0x80	; 128
   1b26c:	69 e0       	ldi	r22, 0x09	; 9
   1b26e:	c8 01       	movw	r24, r16
   1b270:	cf 91       	pop	r28
   1b272:	1f 91       	pop	r17
   1b274:	0f 91       	pop	r16
   1b276:	0c 94 72 e1 	jmp	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>

0001b27a <_ZN7RH_RF955sleepEv>:
   1b27a:	cf 93       	push	r28
   1b27c:	df 93       	push	r29
   1b27e:	fc 01       	movw	r30, r24
   1b280:	22 81       	ldd	r18, Z+2	; 0x02
   1b282:	21 30       	cpi	r18, 0x01	; 1
   1b284:	91 f0       	breq	.+36     	; 0x1b2aa <_ZN7RH_RF955sleepEv+0x30>
   1b286:	ec 01       	movw	r28, r24
   1b288:	01 90       	ld	r0, Z+
   1b28a:	f0 81       	ld	r31, Z
   1b28c:	e0 2d       	mov	r30, r0
   1b28e:	e0 5c       	subi	r30, 0xC0	; 192
   1b290:	ff 4f       	sbci	r31, 0xFF	; 255
   1b292:	01 90       	ld	r0, Z+
   1b294:	f0 81       	ld	r31, Z
   1b296:	e0 2d       	mov	r30, r0
   1b298:	61 e0       	ldi	r22, 0x01	; 1
   1b29a:	19 95       	eicall
   1b29c:	40 e0       	ldi	r20, 0x00	; 0
   1b29e:	61 e0       	ldi	r22, 0x01	; 1
   1b2a0:	ce 01       	movw	r24, r28
   1b2a2:	0e 94 72 e1 	call	0x1c2e4	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b2a6:	81 e0       	ldi	r24, 0x01	; 1
   1b2a8:	8a 83       	std	Y+2, r24	; 0x02
   1b2aa:	81 e0       	ldi	r24, 0x01	; 1
   1b2ac:	df 91       	pop	r29
   1b2ae:	cf 91       	pop	r28
   1b2b0:	08 95       	ret

0001b2b2 <_ZN7RH_RF95C1EhhR12RHGenericSPI>:
   1b2b2:	1f 93       	push	r17
   1b2b4:	cf 93       	push	r28
   1b2b6:	df 93       	push	r29
   1b2b8:	ec 01       	movw	r28, r24
   1b2ba:	14 2f       	mov	r17, r20
   1b2bc:	a9 01       	movw	r20, r18
   1b2be:	b6 d7       	rcall	.+3948   	; 0x1c22c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>
   1b2c0:	85 e3       	ldi	r24, 0x35	; 53
   1b2c2:	98 e0       	ldi	r25, 0x08	; 8
   1b2c4:	99 83       	std	Y+1, r25	; 0x01
   1b2c6:	88 83       	st	Y, r24
   1b2c8:	fe 01       	movw	r30, r28
   1b2ca:	ee 5b       	subi	r30, 0xBE	; 190
   1b2cc:	ff 4f       	sbci	r31, 0xFF	; 255
   1b2ce:	10 82       	st	Z, r1
   1b2d0:	34 96       	adiw	r30, 0x04	; 4
   1b2d2:	10 82       	st	Z, r1
   1b2d4:	1c 8f       	std	Y+28, r17	; 0x1c
   1b2d6:	8f ef       	ldi	r24, 0xFF	; 255
   1b2d8:	8d 8f       	std	Y+29, r24	; 0x1d
   1b2da:	31 97       	sbiw	r30, 0x01	; 1
   1b2dc:	81 e0       	ldi	r24, 0x01	; 1
   1b2de:	80 83       	st	Z, r24
   1b2e0:	1b 8e       	std	Y+27, r1	; 0x1b
   1b2e2:	df 91       	pop	r29
   1b2e4:	cf 91       	pop	r28
   1b2e6:	1f 91       	pop	r17
   1b2e8:	08 95       	ret

0001b2ea <_ZN7RH_RF9513validateRxBufEv>:
   1b2ea:	fc 01       	movw	r30, r24
   1b2ec:	86 8d       	ldd	r24, Z+30	; 0x1e
   1b2ee:	84 30       	cpi	r24, 0x04	; 4
   1b2f0:	d8 f0       	brcs	.+54     	; 0x1b328 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b2f2:	87 8d       	ldd	r24, Z+31	; 0x1f
   1b2f4:	85 83       	std	Z+5, r24	; 0x05
   1b2f6:	80 a1       	ldd	r24, Z+32	; 0x20
   1b2f8:	86 83       	std	Z+6, r24	; 0x06
   1b2fa:	81 a1       	ldd	r24, Z+33	; 0x21
   1b2fc:	87 83       	std	Z+7, r24	; 0x07
   1b2fe:	82 a1       	ldd	r24, Z+34	; 0x22
   1b300:	80 87       	std	Z+8, r24	; 0x08
   1b302:	84 81       	ldd	r24, Z+4	; 0x04
   1b304:	81 11       	cpse	r24, r1
   1b306:	07 c0       	rjmp	.+14     	; 0x1b316 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b308:	95 81       	ldd	r25, Z+5	; 0x05
   1b30a:	83 81       	ldd	r24, Z+3	; 0x03
   1b30c:	98 17       	cp	r25, r24
   1b30e:	19 f0       	breq	.+6      	; 0x1b316 <_ZN7RH_RF9513validateRxBufEv+0x2c>
   1b310:	85 81       	ldd	r24, Z+5	; 0x05
   1b312:	8f 3f       	cpi	r24, 0xFF	; 255
   1b314:	49 f4       	brne	.+18     	; 0x1b328 <_ZN7RH_RF9513validateRxBufEv+0x3e>
   1b316:	81 89       	ldd	r24, Z+17	; 0x11
   1b318:	92 89       	ldd	r25, Z+18	; 0x12
   1b31a:	01 96       	adiw	r24, 0x01	; 1
   1b31c:	92 8b       	std	Z+18, r25	; 0x12
   1b31e:	81 8b       	std	Z+17, r24	; 0x11
   1b320:	ee 5b       	subi	r30, 0xBE	; 190
   1b322:	ff 4f       	sbci	r31, 0xFF	; 255
   1b324:	81 e0       	ldi	r24, 0x01	; 1
   1b326:	80 83       	st	Z, r24
   1b328:	08 95       	ret

0001b32a <_ZN7RH_RF9510clearRxBufEv>:
   1b32a:	2f b7       	in	r18, 0x3f	; 63
   1b32c:	f8 94       	cli
   1b32e:	fc 01       	movw	r30, r24
   1b330:	ee 5b       	subi	r30, 0xBE	; 190
   1b332:	ff 4f       	sbci	r31, 0xFF	; 255
   1b334:	10 82       	st	Z, r1
   1b336:	fc 01       	movw	r30, r24
   1b338:	16 8e       	std	Z+30, r1	; 0x1e
   1b33a:	2f bf       	out	0x3f, r18	; 63
   1b33c:	08 95       	ret

0001b33e <_ZN7RH_RF954recvEPhS0_>:
   1b33e:	cf 92       	push	r12
   1b340:	df 92       	push	r13
   1b342:	ef 92       	push	r14
   1b344:	ff 92       	push	r15
   1b346:	0f 93       	push	r16
   1b348:	1f 93       	push	r17
   1b34a:	cf 93       	push	r28
   1b34c:	df 93       	push	r29
   1b34e:	ec 01       	movw	r28, r24
   1b350:	7b 01       	movw	r14, r22
   1b352:	8a 01       	movw	r16, r20
   1b354:	e8 81       	ld	r30, Y
   1b356:	f9 81       	ldd	r31, Y+1	; 0x01
   1b358:	06 80       	ldd	r0, Z+6	; 0x06
   1b35a:	f7 81       	ldd	r31, Z+7	; 0x07
   1b35c:	e0 2d       	mov	r30, r0
   1b35e:	19 95       	eicall
   1b360:	d8 2e       	mov	r13, r24
   1b362:	88 23       	and	r24, r24
   1b364:	01 f1       	breq	.+64     	; 0x1b3a6 <_ZN7RH_RF954recvEPhS0_+0x68>
   1b366:	e1 14       	cp	r14, r1
   1b368:	f1 04       	cpc	r15, r1
   1b36a:	d9 f0       	breq	.+54     	; 0x1b3a2 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b36c:	01 15       	cp	r16, r1
   1b36e:	11 05       	cpc	r17, r1
   1b370:	c1 f0       	breq	.+48     	; 0x1b3a2 <_ZN7RH_RF954recvEPhS0_+0x64>
   1b372:	cf b6       	in	r12, 0x3f	; 63
   1b374:	f8 94       	cli
   1b376:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b378:	90 e0       	ldi	r25, 0x00	; 0
   1b37a:	03 97       	sbiw	r24, 0x03	; 3
   1b37c:	f8 01       	movw	r30, r16
   1b37e:	20 81       	ld	r18, Z
   1b380:	30 e0       	ldi	r19, 0x00	; 0
   1b382:	28 17       	cp	r18, r24
   1b384:	39 07       	cpc	r19, r25
   1b386:	1c f0       	brlt	.+6      	; 0x1b38e <_ZN7RH_RF954recvEPhS0_+0x50>
   1b388:	8e 8d       	ldd	r24, Y+30	; 0x1e
   1b38a:	84 50       	subi	r24, 0x04	; 4
   1b38c:	80 83       	st	Z, r24
   1b38e:	f8 01       	movw	r30, r16
   1b390:	40 81       	ld	r20, Z
   1b392:	50 e0       	ldi	r21, 0x00	; 0
   1b394:	be 01       	movw	r22, r28
   1b396:	6d 5d       	subi	r22, 0xDD	; 221
   1b398:	7f 4f       	sbci	r23, 0xFF	; 255
   1b39a:	c7 01       	movw	r24, r14
   1b39c:	0e 94 8c e9 	call	0x1d318	; 0x1d318 <memcpy>
   1b3a0:	cf be       	out	0x3f, r12	; 63
   1b3a2:	ce 01       	movw	r24, r28
   1b3a4:	c2 df       	rcall	.-124    	; 0x1b32a <_ZN7RH_RF9510clearRxBufEv>
   1b3a6:	8d 2d       	mov	r24, r13
   1b3a8:	df 91       	pop	r29
   1b3aa:	cf 91       	pop	r28
   1b3ac:	1f 91       	pop	r17
   1b3ae:	0f 91       	pop	r16
   1b3b0:	ff 90       	pop	r15
   1b3b2:	ef 90       	pop	r14
   1b3b4:	df 90       	pop	r13
   1b3b6:	cf 90       	pop	r12
   1b3b8:	08 95       	ret

0001b3ba <_ZN7RH_RF9512setFrequencyEf>:
   1b3ba:	8f 92       	push	r8
   1b3bc:	9f 92       	push	r9
   1b3be:	af 92       	push	r10
   1b3c0:	bf 92       	push	r11
   1b3c2:	cf 92       	push	r12
   1b3c4:	df 92       	push	r13
   1b3c6:	ef 92       	push	r14
   1b3c8:	ff 92       	push	r15
   1b3ca:	1f 93       	push	r17
   1b3cc:	cf 93       	push	r28
   1b3ce:	df 93       	push	r29
   1b3d0:	ec 01       	movw	r28, r24
   1b3d2:	4a 01       	movw	r8, r20
   1b3d4:	5b 01       	movw	r10, r22
   1b3d6:	20 e0       	ldi	r18, 0x00	; 0
   1b3d8:	34 e2       	ldi	r19, 0x24	; 36
   1b3da:	44 e7       	ldi	r20, 0x74	; 116
   1b3dc:	59 e4       	ldi	r21, 0x49	; 73
   1b3de:	c5 01       	movw	r24, r10
   1b3e0:	b4 01       	movw	r22, r8
   1b3e2:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1b3e6:	20 e0       	ldi	r18, 0x00	; 0
   1b3e8:	34 e2       	ldi	r19, 0x24	; 36
   1b3ea:	44 e7       	ldi	r20, 0x74	; 116
   1b3ec:	52 e4       	ldi	r21, 0x42	; 66
   1b3ee:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
   1b3f2:	0e 94 ba cc 	call	0x19974	; 0x19974 <__fixunssfsi>
   1b3f6:	6b 01       	movw	r12, r22
   1b3f8:	7c 01       	movw	r14, r24
   1b3fa:	a7 01       	movw	r20, r14
   1b3fc:	66 27       	eor	r22, r22
   1b3fe:	77 27       	eor	r23, r23
   1b400:	66 e0       	ldi	r22, 0x06	; 6
   1b402:	ce 01       	movw	r24, r28
   1b404:	6f d7       	rcall	.+3806   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b406:	77 27       	eor	r23, r23
   1b408:	6f 2d       	mov	r22, r15
   1b40a:	5e 2d       	mov	r21, r14
   1b40c:	4d 2d       	mov	r20, r13
   1b40e:	67 e0       	ldi	r22, 0x07	; 7
   1b410:	ce 01       	movw	r24, r28
   1b412:	68 d7       	rcall	.+3792   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b414:	4c 2d       	mov	r20, r12
   1b416:	68 e0       	ldi	r22, 0x08	; 8
   1b418:	ce 01       	movw	r24, r28
   1b41a:	64 d7       	rcall	.+3784   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b41c:	cd 5b       	subi	r28, 0xBD	; 189
   1b41e:	df 4f       	sbci	r29, 0xFF	; 255
   1b420:	11 e0       	ldi	r17, 0x01	; 1
   1b422:	20 e0       	ldi	r18, 0x00	; 0
   1b424:	30 ec       	ldi	r19, 0xC0	; 192
   1b426:	42 e4       	ldi	r20, 0x42	; 66
   1b428:	54 e4       	ldi	r21, 0x44	; 68
   1b42a:	c5 01       	movw	r24, r10
   1b42c:	b4 01       	movw	r22, r8
   1b42e:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
   1b432:	87 fd       	sbrc	r24, 7
   1b434:	10 e0       	ldi	r17, 0x00	; 0
   1b436:	18 83       	st	Y, r17
   1b438:	81 e0       	ldi	r24, 0x01	; 1
   1b43a:	df 91       	pop	r29
   1b43c:	cf 91       	pop	r28
   1b43e:	1f 91       	pop	r17
   1b440:	ff 90       	pop	r15
   1b442:	ef 90       	pop	r14
   1b444:	df 90       	pop	r13
   1b446:	cf 90       	pop	r12
   1b448:	bf 90       	pop	r11
   1b44a:	af 90       	pop	r10
   1b44c:	9f 90       	pop	r9
   1b44e:	8f 90       	pop	r8
   1b450:	08 95       	ret

0001b452 <_ZN7RH_RF9511setModeIdleEv>:
   1b452:	cf 93       	push	r28
   1b454:	df 93       	push	r29
   1b456:	fc 01       	movw	r30, r24
   1b458:	22 81       	ldd	r18, Z+2	; 0x02
   1b45a:	22 30       	cpi	r18, 0x02	; 2
   1b45c:	89 f0       	breq	.+34     	; 0x1b480 <_ZN7RH_RF9511setModeIdleEv+0x2e>
   1b45e:	ec 01       	movw	r28, r24
   1b460:	01 90       	ld	r0, Z+
   1b462:	f0 81       	ld	r31, Z
   1b464:	e0 2d       	mov	r30, r0
   1b466:	e0 5c       	subi	r30, 0xC0	; 192
   1b468:	ff 4f       	sbci	r31, 0xFF	; 255
   1b46a:	01 90       	ld	r0, Z+
   1b46c:	f0 81       	ld	r31, Z
   1b46e:	e0 2d       	mov	r30, r0
   1b470:	62 e0       	ldi	r22, 0x02	; 2
   1b472:	19 95       	eicall
   1b474:	41 e0       	ldi	r20, 0x01	; 1
   1b476:	61 e0       	ldi	r22, 0x01	; 1
   1b478:	ce 01       	movw	r24, r28
   1b47a:	34 d7       	rcall	.+3688   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b47c:	82 e0       	ldi	r24, 0x02	; 2
   1b47e:	8a 83       	std	Y+2, r24	; 0x02
   1b480:	df 91       	pop	r29
   1b482:	cf 91       	pop	r28
   1b484:	08 95       	ret

0001b486 <_ZN7RH_RF9515handleInterruptEv>:
   1b486:	0f 93       	push	r16
   1b488:	1f 93       	push	r17
   1b48a:	cf 93       	push	r28
   1b48c:	df 93       	push	r29
   1b48e:	ec 01       	movw	r28, r24
   1b490:	62 e1       	ldi	r22, 0x12	; 18
   1b492:	e3 d6       	rcall	.+3526   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b494:	18 2f       	mov	r17, r24
   1b496:	6c e1       	ldi	r22, 0x1C	; 28
   1b498:	ce 01       	movw	r24, r28
   1b49a:	df d6       	rcall	.+3518   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b49c:	08 2f       	mov	r16, r24
   1b49e:	4f ef       	ldi	r20, 0xFF	; 255
   1b4a0:	62 e1       	ldi	r22, 0x12	; 18
   1b4a2:	ce 01       	movw	r24, r28
   1b4a4:	1f d7       	rcall	.+3646   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b4a6:	8a 81       	ldd	r24, Y+2	; 0x02
   1b4a8:	84 30       	cpi	r24, 0x04	; 4
   1b4aa:	b1 f4       	brne	.+44     	; 0x1b4d8 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4ac:	81 2f       	mov	r24, r17
   1b4ae:	80 7a       	andi	r24, 0xA0	; 160
   1b4b0:	41 f4       	brne	.+16     	; 0x1b4c2 <_ZN7RH_RF9515handleInterruptEv+0x3c>
   1b4b2:	fe 01       	movw	r30, r28
   1b4b4:	eb 5b       	subi	r30, 0xBB	; 187
   1b4b6:	ff 4f       	sbci	r31, 0xFF	; 255
   1b4b8:	80 81       	ld	r24, Z
   1b4ba:	88 23       	and	r24, r24
   1b4bc:	69 f0       	breq	.+26     	; 0x1b4d8 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4be:	06 fd       	sbrc	r16, 6
   1b4c0:	0b c0       	rjmp	.+22     	; 0x1b4d8 <_ZN7RH_RF9515handleInterruptEv+0x52>
   1b4c2:	8f 85       	ldd	r24, Y+15	; 0x0f
   1b4c4:	98 89       	ldd	r25, Y+16	; 0x10
   1b4c6:	01 96       	adiw	r24, 0x01	; 1
   1b4c8:	98 8b       	std	Y+16, r25	; 0x10
   1b4ca:	8f 87       	std	Y+15, r24	; 0x0f
   1b4cc:	ce 01       	movw	r24, r28
   1b4ce:	df 91       	pop	r29
   1b4d0:	cf 91       	pop	r28
   1b4d2:	1f 91       	pop	r17
   1b4d4:	0f 91       	pop	r16
   1b4d6:	29 cf       	rjmp	.-430    	; 0x1b32a <_ZN7RH_RF9510clearRxBufEv>
   1b4d8:	8a 81       	ldd	r24, Y+2	; 0x02
   1b4da:	84 30       	cpi	r24, 0x04	; 4
   1b4dc:	11 f4       	brne	.+4      	; 0x1b4e2 <_ZN7RH_RF9515handleInterruptEv+0x5c>
   1b4de:	16 fd       	sbrc	r17, 6
   1b4e0:	0c c0       	rjmp	.+24     	; 0x1b4fa <_ZN7RH_RF9515handleInterruptEv+0x74>
   1b4e2:	8a 81       	ldd	r24, Y+2	; 0x02
   1b4e4:	83 30       	cpi	r24, 0x03	; 3
   1b4e6:	09 f0       	breq	.+2      	; 0x1b4ea <_ZN7RH_RF9515handleInterruptEv+0x64>
   1b4e8:	61 c0       	rjmp	.+194    	; 0x1b5ac <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b4ea:	13 ff       	sbrs	r17, 3
   1b4ec:	5f c0       	rjmp	.+190    	; 0x1b5ac <_ZN7RH_RF9515handleInterruptEv+0x126>
   1b4ee:	8b 89       	ldd	r24, Y+19	; 0x13
   1b4f0:	9c 89       	ldd	r25, Y+20	; 0x14
   1b4f2:	01 96       	adiw	r24, 0x01	; 1
   1b4f4:	9c 8b       	std	Y+20, r25	; 0x14
   1b4f6:	8b 8b       	std	Y+19, r24	; 0x13
   1b4f8:	60 c0       	rjmp	.+192    	; 0x1b5ba <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b4fa:	63 e1       	ldi	r22, 0x13	; 19
   1b4fc:	ce 01       	movw	r24, r28
   1b4fe:	ad d6       	rcall	.+3418   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b500:	18 2f       	mov	r17, r24
   1b502:	60 e1       	ldi	r22, 0x10	; 16
   1b504:	ce 01       	movw	r24, r28
   1b506:	a9 d6       	rcall	.+3410   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b508:	48 2f       	mov	r20, r24
   1b50a:	6d e0       	ldi	r22, 0x0D	; 13
   1b50c:	ce 01       	movw	r24, r28
   1b50e:	ea d6       	rcall	.+3540   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b510:	21 2f       	mov	r18, r17
   1b512:	ae 01       	movw	r20, r28
   1b514:	41 5e       	subi	r20, 0xE1	; 225
   1b516:	5f 4f       	sbci	r21, 0xFF	; 255
   1b518:	60 e0       	ldi	r22, 0x00	; 0
   1b51a:	ce 01       	movw	r24, r28
   1b51c:	2b d7       	rcall	.+3670   	; 0x1c374 <_ZN11RHSPIDriver12spiBurstReadEhPhh>
   1b51e:	1e 8f       	std	Y+30, r17	; 0x1e
   1b520:	69 e1       	ldi	r22, 0x19	; 25
   1b522:	ce 01       	movw	r24, r28
   1b524:	9a d6       	rcall	.+3380   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b526:	8e 01       	movw	r16, r28
   1b528:	0c 5b       	subi	r16, 0xBC	; 188
   1b52a:	1f 4f       	sbci	r17, 0xFF	; 255
   1b52c:	87 fd       	sbrc	r24, 7
   1b52e:	8d 5f       	subi	r24, 0xFD	; 253
   1b530:	85 95       	asr	r24
   1b532:	85 95       	asr	r24
   1b534:	f8 01       	movw	r30, r16
   1b536:	80 83       	st	Z, r24
   1b538:	6a e1       	ldi	r22, 0x1A	; 26
   1b53a:	ce 01       	movw	r24, r28
   1b53c:	8e d6       	rcall	.+3356   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b53e:	90 e0       	ldi	r25, 0x00	; 0
   1b540:	9e 87       	std	Y+14, r25	; 0x0e
   1b542:	8d 87       	std	Y+13, r24	; 0x0d
   1b544:	f8 01       	movw	r30, r16
   1b546:	20 81       	ld	r18, Z
   1b548:	27 ff       	sbrs	r18, 7
   1b54a:	09 c0       	rjmp	.+18     	; 0x1b55e <_ZN7RH_RF9515handleInterruptEv+0xd8>
   1b54c:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b54e:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b550:	82 0f       	add	r24, r18
   1b552:	91 1d       	adc	r25, r1
   1b554:	27 fd       	sbrc	r18, 7
   1b556:	9a 95       	dec	r25
   1b558:	9e 87       	std	Y+14, r25	; 0x0e
   1b55a:	8d 87       	std	Y+13, r24	; 0x0d
   1b55c:	0d c0       	rjmp	.+26     	; 0x1b578 <_ZN7RH_RF9515handleInterruptEv+0xf2>
   1b55e:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b560:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b562:	24 e0       	ldi	r18, 0x04	; 4
   1b564:	88 0f       	add	r24, r24
   1b566:	99 1f       	adc	r25, r25
   1b568:	2a 95       	dec	r18
   1b56a:	e1 f7       	brne	.-8      	; 0x1b564 <_ZN7RH_RF9515handleInterruptEv+0xde>
   1b56c:	6f e0       	ldi	r22, 0x0F	; 15
   1b56e:	70 e0       	ldi	r23, 0x00	; 0
   1b570:	0e 94 32 e7 	call	0x1ce64	; 0x1ce64 <__divmodhi4>
   1b574:	7e 87       	std	Y+14, r23	; 0x0e
   1b576:	6d 87       	std	Y+13, r22	; 0x0d
   1b578:	fe 01       	movw	r30, r28
   1b57a:	ed 5b       	subi	r30, 0xBD	; 189
   1b57c:	ff 4f       	sbci	r31, 0xFF	; 255
   1b57e:	80 81       	ld	r24, Z
   1b580:	88 23       	and	r24, r24
   1b582:	29 f0       	breq	.+10     	; 0x1b58e <_ZN7RH_RF9515handleInterruptEv+0x108>
   1b584:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b586:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b588:	8d 59       	subi	r24, 0x9D	; 157
   1b58a:	91 09       	sbc	r25, r1
   1b58c:	04 c0       	rjmp	.+8      	; 0x1b596 <_ZN7RH_RF9515handleInterruptEv+0x110>
   1b58e:	8d 85       	ldd	r24, Y+13	; 0x0d
   1b590:	9e 85       	ldd	r25, Y+14	; 0x0e
   1b592:	84 5a       	subi	r24, 0xA4	; 164
   1b594:	91 09       	sbc	r25, r1
   1b596:	9e 87       	std	Y+14, r25	; 0x0e
   1b598:	8d 87       	std	Y+13, r24	; 0x0d
   1b59a:	ce 01       	movw	r24, r28
   1b59c:	a6 de       	rcall	.-692    	; 0x1b2ea <_ZN7RH_RF9513validateRxBufEv>
   1b59e:	fe 01       	movw	r30, r28
   1b5a0:	ee 5b       	subi	r30, 0xBE	; 190
   1b5a2:	ff 4f       	sbci	r31, 0xFF	; 255
   1b5a4:	80 81       	ld	r24, Z
   1b5a6:	88 23       	and	r24, r24
   1b5a8:	71 f0       	breq	.+28     	; 0x1b5c6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5aa:	07 c0       	rjmp	.+14     	; 0x1b5ba <_ZN7RH_RF9515handleInterruptEv+0x134>
   1b5ac:	8a 81       	ldd	r24, Y+2	; 0x02
   1b5ae:	85 30       	cpi	r24, 0x05	; 5
   1b5b0:	51 f4       	brne	.+20     	; 0x1b5c6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5b2:	12 ff       	sbrs	r17, 2
   1b5b4:	08 c0       	rjmp	.+16     	; 0x1b5c6 <_ZN7RH_RF9515handleInterruptEv+0x140>
   1b5b6:	11 70       	andi	r17, 0x01	; 1
   1b5b8:	1d 8b       	std	Y+21, r17	; 0x15
   1b5ba:	ce 01       	movw	r24, r28
   1b5bc:	df 91       	pop	r29
   1b5be:	cf 91       	pop	r28
   1b5c0:	1f 91       	pop	r17
   1b5c2:	0f 91       	pop	r16
   1b5c4:	46 cf       	rjmp	.-372    	; 0x1b452 <_ZN7RH_RF9511setModeIdleEv>
   1b5c6:	df 91       	pop	r29
   1b5c8:	cf 91       	pop	r28
   1b5ca:	1f 91       	pop	r17
   1b5cc:	0f 91       	pop	r16
   1b5ce:	08 95       	ret

0001b5d0 <_ZN7RH_RF954isr0Ev>:
   1b5d0:	80 91 fa 19 	lds	r24, 0x19FA	; 0x8019fa <_ZN7RH_RF9519_deviceForInterruptE>
   1b5d4:	90 91 fb 19 	lds	r25, 0x19FB	; 0x8019fb <_ZN7RH_RF9519_deviceForInterruptE+0x1>
   1b5d8:	00 97       	sbiw	r24, 0x00	; 0
   1b5da:	09 f0       	breq	.+2      	; 0x1b5de <_ZN7RH_RF954isr0Ev+0xe>
   1b5dc:	54 cf       	rjmp	.-344    	; 0x1b486 <_ZN7RH_RF9515handleInterruptEv>
   1b5de:	08 95       	ret

0001b5e0 <_ZN7RH_RF954isr1Ev>:
   1b5e0:	80 91 fc 19 	lds	r24, 0x19FC	; 0x8019fc <_ZN7RH_RF9519_deviceForInterruptE+0x2>
   1b5e4:	90 91 fd 19 	lds	r25, 0x19FD	; 0x8019fd <_ZN7RH_RF9519_deviceForInterruptE+0x3>
   1b5e8:	00 97       	sbiw	r24, 0x00	; 0
   1b5ea:	09 f0       	breq	.+2      	; 0x1b5ee <_ZN7RH_RF954isr1Ev+0xe>
   1b5ec:	4c cf       	rjmp	.-360    	; 0x1b486 <_ZN7RH_RF9515handleInterruptEv>
   1b5ee:	08 95       	ret

0001b5f0 <_ZN7RH_RF954isr2Ev>:
   1b5f0:	80 91 fe 19 	lds	r24, 0x19FE	; 0x8019fe <_ZN7RH_RF9519_deviceForInterruptE+0x4>
   1b5f4:	90 91 ff 19 	lds	r25, 0x19FF	; 0x8019ff <_ZN7RH_RF9519_deviceForInterruptE+0x5>
   1b5f8:	00 97       	sbiw	r24, 0x00	; 0
   1b5fa:	09 f0       	breq	.+2      	; 0x1b5fe <_ZN7RH_RF954isr2Ev+0xe>
   1b5fc:	44 cf       	rjmp	.-376    	; 0x1b486 <_ZN7RH_RF9515handleInterruptEv>
   1b5fe:	08 95       	ret

0001b600 <_ZN7RH_RF959setModeRxEv>:
   1b600:	cf 93       	push	r28
   1b602:	df 93       	push	r29
   1b604:	fc 01       	movw	r30, r24
   1b606:	22 81       	ldd	r18, Z+2	; 0x02
   1b608:	24 30       	cpi	r18, 0x04	; 4
   1b60a:	a9 f0       	breq	.+42     	; 0x1b636 <_ZN7RH_RF959setModeRxEv+0x36>
   1b60c:	ec 01       	movw	r28, r24
   1b60e:	01 90       	ld	r0, Z+
   1b610:	f0 81       	ld	r31, Z
   1b612:	e0 2d       	mov	r30, r0
   1b614:	e0 5c       	subi	r30, 0xC0	; 192
   1b616:	ff 4f       	sbci	r31, 0xFF	; 255
   1b618:	01 90       	ld	r0, Z+
   1b61a:	f0 81       	ld	r31, Z
   1b61c:	e0 2d       	mov	r30, r0
   1b61e:	64 e0       	ldi	r22, 0x04	; 4
   1b620:	19 95       	eicall
   1b622:	45 e0       	ldi	r20, 0x05	; 5
   1b624:	61 e0       	ldi	r22, 0x01	; 1
   1b626:	ce 01       	movw	r24, r28
   1b628:	5d d6       	rcall	.+3258   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b62a:	40 e0       	ldi	r20, 0x00	; 0
   1b62c:	60 e4       	ldi	r22, 0x40	; 64
   1b62e:	ce 01       	movw	r24, r28
   1b630:	59 d6       	rcall	.+3250   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b632:	84 e0       	ldi	r24, 0x04	; 4
   1b634:	8a 83       	std	Y+2, r24	; 0x02
   1b636:	df 91       	pop	r29
   1b638:	cf 91       	pop	r28
   1b63a:	08 95       	ret

0001b63c <_ZN7RH_RF959availableEv>:
   1b63c:	cf 93       	push	r28
   1b63e:	df 93       	push	r29
   1b640:	fc 01       	movw	r30, r24
   1b642:	22 81       	ldd	r18, Z+2	; 0x02
   1b644:	23 30       	cpi	r18, 0x03	; 3
   1b646:	31 f0       	breq	.+12     	; 0x1b654 <_ZN7RH_RF959availableEv+0x18>
   1b648:	ec 01       	movw	r28, r24
   1b64a:	da df       	rcall	.-76     	; 0x1b600 <_ZN7RH_RF959setModeRxEv>
   1b64c:	ce 5b       	subi	r28, 0xBE	; 190
   1b64e:	df 4f       	sbci	r29, 0xFF	; 255
   1b650:	88 81       	ld	r24, Y
   1b652:	01 c0       	rjmp	.+2      	; 0x1b656 <_ZN7RH_RF959availableEv+0x1a>
   1b654:	80 e0       	ldi	r24, 0x00	; 0
   1b656:	df 91       	pop	r29
   1b658:	cf 91       	pop	r28
   1b65a:	08 95       	ret

0001b65c <_ZN7RH_RF959setModeTxEv>:
   1b65c:	cf 93       	push	r28
   1b65e:	df 93       	push	r29
   1b660:	fc 01       	movw	r30, r24
   1b662:	22 81       	ldd	r18, Z+2	; 0x02
   1b664:	23 30       	cpi	r18, 0x03	; 3
   1b666:	a9 f0       	breq	.+42     	; 0x1b692 <_ZN7RH_RF959setModeTxEv+0x36>
   1b668:	ec 01       	movw	r28, r24
   1b66a:	01 90       	ld	r0, Z+
   1b66c:	f0 81       	ld	r31, Z
   1b66e:	e0 2d       	mov	r30, r0
   1b670:	e0 5c       	subi	r30, 0xC0	; 192
   1b672:	ff 4f       	sbci	r31, 0xFF	; 255
   1b674:	01 90       	ld	r0, Z+
   1b676:	f0 81       	ld	r31, Z
   1b678:	e0 2d       	mov	r30, r0
   1b67a:	63 e0       	ldi	r22, 0x03	; 3
   1b67c:	19 95       	eicall
   1b67e:	43 e0       	ldi	r20, 0x03	; 3
   1b680:	61 e0       	ldi	r22, 0x01	; 1
   1b682:	ce 01       	movw	r24, r28
   1b684:	2f d6       	rcall	.+3166   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b686:	40 e4       	ldi	r20, 0x40	; 64
   1b688:	60 e4       	ldi	r22, 0x40	; 64
   1b68a:	ce 01       	movw	r24, r28
   1b68c:	2b d6       	rcall	.+3158   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b68e:	83 e0       	ldi	r24, 0x03	; 3
   1b690:	8a 83       	std	Y+2, r24	; 0x02
   1b692:	df 91       	pop	r29
   1b694:	cf 91       	pop	r28
   1b696:	08 95       	ret

0001b698 <_ZN7RH_RF954sendEPKhh>:
   1b698:	ef 92       	push	r14
   1b69a:	ff 92       	push	r15
   1b69c:	0f 93       	push	r16
   1b69e:	1f 93       	push	r17
   1b6a0:	cf 93       	push	r28
   1b6a2:	df 93       	push	r29
   1b6a4:	40 32       	cpi	r20, 0x20	; 32
   1b6a6:	10 f0       	brcs	.+4      	; 0x1b6ac <_ZN7RH_RF954sendEPKhh+0x14>
   1b6a8:	00 e0       	ldi	r16, 0x00	; 0
   1b6aa:	35 c0       	rjmp	.+106    	; 0x1b716 <_ZN7RH_RF954sendEPKhh+0x7e>
   1b6ac:	14 2f       	mov	r17, r20
   1b6ae:	7b 01       	movw	r14, r22
   1b6b0:	ec 01       	movw	r28, r24
   1b6b2:	e8 81       	ld	r30, Y
   1b6b4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b6b6:	00 88       	ldd	r0, Z+16	; 0x10
   1b6b8:	f1 89       	ldd	r31, Z+17	; 0x11
   1b6ba:	e0 2d       	mov	r30, r0
   1b6bc:	19 95       	eicall
   1b6be:	ce 01       	movw	r24, r28
   1b6c0:	c8 de       	rcall	.-624    	; 0x1b452 <_ZN7RH_RF9511setModeIdleEv>
   1b6c2:	e8 81       	ld	r30, Y
   1b6c4:	f9 81       	ldd	r31, Y+1	; 0x01
   1b6c6:	06 88       	ldd	r0, Z+22	; 0x16
   1b6c8:	f7 89       	ldd	r31, Z+23	; 0x17
   1b6ca:	e0 2d       	mov	r30, r0
   1b6cc:	ce 01       	movw	r24, r28
   1b6ce:	19 95       	eicall
   1b6d0:	08 2f       	mov	r16, r24
   1b6d2:	88 23       	and	r24, r24
   1b6d4:	49 f3       	breq	.-46     	; 0x1b6a8 <_ZN7RH_RF954sendEPKhh+0x10>
   1b6d6:	40 e0       	ldi	r20, 0x00	; 0
   1b6d8:	6d e0       	ldi	r22, 0x0D	; 13
   1b6da:	ce 01       	movw	r24, r28
   1b6dc:	03 d6       	rcall	.+3078   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6de:	49 85       	ldd	r20, Y+9	; 0x09
   1b6e0:	60 e0       	ldi	r22, 0x00	; 0
   1b6e2:	ce 01       	movw	r24, r28
   1b6e4:	ff d5       	rcall	.+3070   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6e6:	4a 85       	ldd	r20, Y+10	; 0x0a
   1b6e8:	60 e0       	ldi	r22, 0x00	; 0
   1b6ea:	ce 01       	movw	r24, r28
   1b6ec:	fb d5       	rcall	.+3062   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6ee:	4b 85       	ldd	r20, Y+11	; 0x0b
   1b6f0:	60 e0       	ldi	r22, 0x00	; 0
   1b6f2:	ce 01       	movw	r24, r28
   1b6f4:	f7 d5       	rcall	.+3054   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6f6:	4c 85       	ldd	r20, Y+12	; 0x0c
   1b6f8:	60 e0       	ldi	r22, 0x00	; 0
   1b6fa:	ce 01       	movw	r24, r28
   1b6fc:	f3 d5       	rcall	.+3046   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b6fe:	21 2f       	mov	r18, r17
   1b700:	a7 01       	movw	r20, r14
   1b702:	60 e0       	ldi	r22, 0x00	; 0
   1b704:	ce 01       	movw	r24, r28
   1b706:	91 d6       	rcall	.+3362   	; 0x1c42a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>
   1b708:	44 e0       	ldi	r20, 0x04	; 4
   1b70a:	41 0f       	add	r20, r17
   1b70c:	62 e2       	ldi	r22, 0x22	; 34
   1b70e:	ce 01       	movw	r24, r28
   1b710:	e9 d5       	rcall	.+3026   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b712:	ce 01       	movw	r24, r28
   1b714:	a3 df       	rcall	.-186    	; 0x1b65c <_ZN7RH_RF959setModeTxEv>
   1b716:	80 2f       	mov	r24, r16
   1b718:	df 91       	pop	r29
   1b71a:	cf 91       	pop	r28
   1b71c:	1f 91       	pop	r17
   1b71e:	0f 91       	pop	r16
   1b720:	ff 90       	pop	r15
   1b722:	ef 90       	pop	r14
   1b724:	08 95       	ret

0001b726 <_ZN7RH_RF9510setTxPowerEab>:
   1b726:	cf 93       	push	r28
   1b728:	df 93       	push	r29
   1b72a:	ec 01       	movw	r28, r24
   1b72c:	4b 8f       	std	Y+27, r20	; 0x1b
   1b72e:	44 23       	and	r20, r20
   1b730:	91 f0       	breq	.+36     	; 0x1b756 <_ZN7RH_RF9510setTxPowerEab+0x30>
   1b732:	60 31       	cpi	r22, 0x10	; 16
   1b734:	24 f4       	brge	.+8      	; 0x1b73e <_ZN7RH_RF9510setTxPowerEab+0x18>
   1b736:	67 ff       	sbrs	r22, 7
   1b738:	03 c0       	rjmp	.+6      	; 0x1b740 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b73a:	60 e0       	ldi	r22, 0x00	; 0
   1b73c:	01 c0       	rjmp	.+2      	; 0x1b740 <_ZN7RH_RF9510setTxPowerEab+0x1a>
   1b73e:	6f e0       	ldi	r22, 0x0F	; 15
   1b740:	46 2f       	mov	r20, r22
   1b742:	40 67       	ori	r20, 0x70	; 112
   1b744:	69 e0       	ldi	r22, 0x09	; 9
   1b746:	ce 01       	movw	r24, r28
   1b748:	cd d5       	rcall	.+2970   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b74a:	44 e0       	ldi	r20, 0x04	; 4
   1b74c:	6d e4       	ldi	r22, 0x4D	; 77
   1b74e:	ce 01       	movw	r24, r28
   1b750:	df 91       	pop	r29
   1b752:	cf 91       	pop	r28
   1b754:	c7 c5       	rjmp	.+2958   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b756:	df 91       	pop	r29
   1b758:	cf 91       	pop	r28
   1b75a:	6b cd       	rjmp	.-1322   	; 0x1b232 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>

0001b75c <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>:
   1b75c:	0f 93       	push	r16
   1b75e:	1f 93       	push	r17
   1b760:	cf 93       	push	r28
   1b762:	df 93       	push	r29
   1b764:	ec 01       	movw	r28, r24
   1b766:	8b 01       	movw	r16, r22
   1b768:	fb 01       	movw	r30, r22
   1b76a:	40 81       	ld	r20, Z
   1b76c:	6d e1       	ldi	r22, 0x1D	; 29
   1b76e:	ba d5       	rcall	.+2932   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b770:	f8 01       	movw	r30, r16
   1b772:	41 81       	ldd	r20, Z+1	; 0x01
   1b774:	6e e1       	ldi	r22, 0x1E	; 30
   1b776:	ce 01       	movw	r24, r28
   1b778:	b5 d5       	rcall	.+2922   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b77a:	f8 01       	movw	r30, r16
   1b77c:	42 81       	ldd	r20, Z+2	; 0x02
   1b77e:	66 e2       	ldi	r22, 0x26	; 38
   1b780:	ce 01       	movw	r24, r28
   1b782:	df 91       	pop	r29
   1b784:	cf 91       	pop	r28
   1b786:	1f 91       	pop	r17
   1b788:	0f 91       	pop	r16
   1b78a:	ac c5       	rjmp	.+2904   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>

0001b78c <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>:
   1b78c:	0f 93       	push	r16
   1b78e:	1f 93       	push	r17
   1b790:	cf 93       	push	r28
   1b792:	df 93       	push	r29
   1b794:	00 d0       	rcall	.+0      	; 0x1b796 <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0xa>
   1b796:	cd b7       	in	r28, 0x3d	; 61
   1b798:	de b7       	in	r29, 0x3e	; 62
   1b79a:	70 e0       	ldi	r23, 0x00	; 0
   1b79c:	66 30       	cpi	r22, 0x06	; 6
   1b79e:	71 05       	cpc	r23, r1
   1b7a0:	ac f4       	brge	.+42     	; 0x1b7cc <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x40>
   1b7a2:	8c 01       	movw	r16, r24
   1b7a4:	cb 01       	movw	r24, r22
   1b7a6:	88 0f       	add	r24, r24
   1b7a8:	99 1f       	adc	r25, r25
   1b7aa:	68 0f       	add	r22, r24
   1b7ac:	79 1f       	adc	r23, r25
   1b7ae:	67 5c       	subi	r22, 0xC7	; 199
   1b7b0:	78 4b       	sbci	r23, 0xB8	; 184
   1b7b2:	43 e0       	ldi	r20, 0x03	; 3
   1b7b4:	50 e0       	ldi	r21, 0x00	; 0
   1b7b6:	ce 01       	movw	r24, r28
   1b7b8:	01 96       	adiw	r24, 0x01	; 1
   1b7ba:	0e 94 71 e9 	call	0x1d2e2	; 0x1d2e2 <memcpy_P>
   1b7be:	be 01       	movw	r22, r28
   1b7c0:	6f 5f       	subi	r22, 0xFF	; 255
   1b7c2:	7f 4f       	sbci	r23, 0xFF	; 255
   1b7c4:	c8 01       	movw	r24, r16
   1b7c6:	ca df       	rcall	.-108    	; 0x1b75c <_ZN7RH_RF9517setModemRegistersEPKNS_11ModemConfigE>
   1b7c8:	81 e0       	ldi	r24, 0x01	; 1
   1b7ca:	01 c0       	rjmp	.+2      	; 0x1b7ce <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE+0x42>
   1b7cc:	80 e0       	ldi	r24, 0x00	; 0
   1b7ce:	0f 90       	pop	r0
   1b7d0:	0f 90       	pop	r0
   1b7d2:	0f 90       	pop	r0
   1b7d4:	df 91       	pop	r29
   1b7d6:	cf 91       	pop	r28
   1b7d8:	1f 91       	pop	r17
   1b7da:	0f 91       	pop	r16
   1b7dc:	08 95       	ret

0001b7de <_ZN7RH_RF9517setPreambleLengthEj>:
   1b7de:	1f 93       	push	r17
   1b7e0:	cf 93       	push	r28
   1b7e2:	df 93       	push	r29
   1b7e4:	ec 01       	movw	r28, r24
   1b7e6:	16 2f       	mov	r17, r22
   1b7e8:	47 2f       	mov	r20, r23
   1b7ea:	60 e2       	ldi	r22, 0x20	; 32
   1b7ec:	7b d5       	rcall	.+2806   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b7ee:	41 2f       	mov	r20, r17
   1b7f0:	61 e2       	ldi	r22, 0x21	; 33
   1b7f2:	ce 01       	movw	r24, r28
   1b7f4:	df 91       	pop	r29
   1b7f6:	cf 91       	pop	r28
   1b7f8:	1f 91       	pop	r17
   1b7fa:	74 c5       	rjmp	.+2792   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>

0001b7fc <_ZN7RH_RF954initEv>:
   1b7fc:	ff 92       	push	r15
   1b7fe:	0f 93       	push	r16
   1b800:	1f 93       	push	r17
   1b802:	cf 93       	push	r28
   1b804:	df 93       	push	r29
   1b806:	ec 01       	movw	r28, r24
   1b808:	e4 d4       	rcall	.+2504   	; 0x1c1d2 <_ZN11RHSPIDriver4initEv>
   1b80a:	f8 2e       	mov	r15, r24
   1b80c:	81 11       	cpse	r24, r1
   1b80e:	02 c0       	rjmp	.+4      	; 0x1b814 <_ZN7RH_RF954initEv+0x18>
   1b810:	f1 2c       	mov	r15, r1
   1b812:	79 c0       	rjmp	.+242    	; 0x1b906 <_ZN7RH_RF954initEv+0x10a>
   1b814:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b816:	8f 3f       	cpi	r24, 0xFF	; 255
   1b818:	79 f0       	breq	.+30     	; 0x1b838 <_ZN7RH_RF954initEv+0x3c>
   1b81a:	82 30       	cpi	r24, 0x02	; 2
   1b81c:	09 f4       	brne	.+2      	; 0x1b820 <_ZN7RH_RF954initEv+0x24>
   1b81e:	6a c0       	rjmp	.+212    	; 0x1b8f4 <_ZN7RH_RF954initEv+0xf8>
   1b820:	83 30       	cpi	r24, 0x03	; 3
   1b822:	09 f4       	brne	.+2      	; 0x1b826 <_ZN7RH_RF954initEv+0x2a>
   1b824:	6a c0       	rjmp	.+212    	; 0x1b8fa <_ZN7RH_RF954initEv+0xfe>
   1b826:	9e ee       	ldi	r25, 0xEE	; 238
   1b828:	98 0f       	add	r25, r24
   1b82a:	94 30       	cpi	r25, 0x04	; 4
   1b82c:	88 f7       	brcc	.-30     	; 0x1b810 <_ZN7RH_RF954initEv+0x14>
   1b82e:	07 e1       	ldi	r16, 0x17	; 23
   1b830:	10 e0       	ldi	r17, 0x00	; 0
   1b832:	08 1b       	sub	r16, r24
   1b834:	11 09       	sbc	r17, r1
   1b836:	63 c0       	rjmp	.+198    	; 0x1b8fe <_ZN7RH_RF954initEv+0x102>
   1b838:	0f ef       	ldi	r16, 0xFF	; 255
   1b83a:	1f ef       	ldi	r17, 0xFF	; 255
   1b83c:	40 e8       	ldi	r20, 0x80	; 128
   1b83e:	61 e0       	ldi	r22, 0x01	; 1
   1b840:	ce 01       	movw	r24, r28
   1b842:	50 d5       	rcall	.+2720   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b844:	6a e0       	ldi	r22, 0x0A	; 10
   1b846:	70 e0       	ldi	r23, 0x00	; 0
   1b848:	80 e0       	ldi	r24, 0x00	; 0
   1b84a:	90 e0       	ldi	r25, 0x00	; 0
   1b84c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1b850:	61 e0       	ldi	r22, 0x01	; 1
   1b852:	ce 01       	movw	r24, r28
   1b854:	02 d5       	rcall	.+2564   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b856:	80 38       	cpi	r24, 0x80	; 128
   1b858:	d9 f6       	brne	.-74     	; 0x1b810 <_ZN7RH_RF954initEv+0x14>
   1b85a:	8c 8d       	ldd	r24, Y+28	; 0x1c
   1b85c:	8f 3f       	cpi	r24, 0xFF	; 255
   1b85e:	71 f1       	breq	.+92     	; 0x1b8bc <_ZN7RH_RF954initEv+0xc0>
   1b860:	60 e0       	ldi	r22, 0x00	; 0
   1b862:	3b d8       	rcall	.-3978   	; 0x1a8da <pinMode>
   1b864:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b866:	8f 3f       	cpi	r24, 0xFF	; 255
   1b868:	49 f4       	brne	.+18     	; 0x1b87c <_ZN7RH_RF954initEv+0x80>
   1b86a:	80 91 f9 19 	lds	r24, 0x19F9	; 0x8019f9 <_ZN7RH_RF9515_interruptCountE>
   1b86e:	84 30       	cpi	r24, 0x04	; 4
   1b870:	78 f6       	brcc	.-98     	; 0x1b810 <_ZN7RH_RF954initEv+0x14>
   1b872:	91 e0       	ldi	r25, 0x01	; 1
   1b874:	98 0f       	add	r25, r24
   1b876:	90 93 f9 19 	sts	0x19F9, r25	; 0x8019f9 <_ZN7RH_RF9515_interruptCountE>
   1b87a:	8d 8f       	std	Y+29, r24	; 0x1d
   1b87c:	8d 8d       	ldd	r24, Y+29	; 0x1d
   1b87e:	e8 2f       	mov	r30, r24
   1b880:	f0 e0       	ldi	r31, 0x00	; 0
   1b882:	ee 0f       	add	r30, r30
   1b884:	ff 1f       	adc	r31, r31
   1b886:	e6 50       	subi	r30, 0x06	; 6
   1b888:	f6 4e       	sbci	r31, 0xE6	; 230
   1b88a:	d1 83       	std	Z+1, r29	; 0x01
   1b88c:	c0 83       	st	Z, r28
   1b88e:	81 11       	cpse	r24, r1
   1b890:	05 c0       	rjmp	.+10     	; 0x1b89c <_ZN7RH_RF954initEv+0xa0>
   1b892:	43 e0       	ldi	r20, 0x03	; 3
   1b894:	50 e0       	ldi	r21, 0x00	; 0
   1b896:	68 ee       	ldi	r22, 0xE8	; 232
   1b898:	7a ed       	ldi	r23, 0xDA	; 218
   1b89a:	0e c0       	rjmp	.+28     	; 0x1b8b8 <_ZN7RH_RF954initEv+0xbc>
   1b89c:	81 30       	cpi	r24, 0x01	; 1
   1b89e:	29 f4       	brne	.+10     	; 0x1b8aa <_ZN7RH_RF954initEv+0xae>
   1b8a0:	43 e0       	ldi	r20, 0x03	; 3
   1b8a2:	50 e0       	ldi	r21, 0x00	; 0
   1b8a4:	60 ef       	ldi	r22, 0xF0	; 240
   1b8a6:	7a ed       	ldi	r23, 0xDA	; 218
   1b8a8:	07 c0       	rjmp	.+14     	; 0x1b8b8 <_ZN7RH_RF954initEv+0xbc>
   1b8aa:	82 30       	cpi	r24, 0x02	; 2
   1b8ac:	09 f0       	breq	.+2      	; 0x1b8b0 <_ZN7RH_RF954initEv+0xb4>
   1b8ae:	b0 cf       	rjmp	.-160    	; 0x1b810 <_ZN7RH_RF954initEv+0x14>
   1b8b0:	43 e0       	ldi	r20, 0x03	; 3
   1b8b2:	50 e0       	ldi	r21, 0x00	; 0
   1b8b4:	68 ef       	ldi	r22, 0xF8	; 248
   1b8b6:	7a ed       	ldi	r23, 0xDA	; 218
   1b8b8:	80 2f       	mov	r24, r16
   1b8ba:	49 d2       	rcall	.+1170   	; 0x1bd4e <attachInterrupt>
   1b8bc:	40 e0       	ldi	r20, 0x00	; 0
   1b8be:	6e e0       	ldi	r22, 0x0E	; 14
   1b8c0:	ce 01       	movw	r24, r28
   1b8c2:	10 d5       	rcall	.+2592   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8c4:	40 e0       	ldi	r20, 0x00	; 0
   1b8c6:	6f e0       	ldi	r22, 0x0F	; 15
   1b8c8:	ce 01       	movw	r24, r28
   1b8ca:	0c d5       	rcall	.+2584   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   1b8cc:	ce 01       	movw	r24, r28
   1b8ce:	c1 dd       	rcall	.-1150   	; 0x1b452 <_ZN7RH_RF9511setModeIdleEv>
   1b8d0:	60 e0       	ldi	r22, 0x00	; 0
   1b8d2:	ce 01       	movw	r24, r28
   1b8d4:	5b df       	rcall	.-330    	; 0x1b78c <_ZN7RH_RF9514setModemConfigENS_17ModemConfigChoiceE>
   1b8d6:	68 e0       	ldi	r22, 0x08	; 8
   1b8d8:	70 e0       	ldi	r23, 0x00	; 0
   1b8da:	ce 01       	movw	r24, r28
   1b8dc:	80 df       	rcall	.-256    	; 0x1b7de <_ZN7RH_RF9517setPreambleLengthEj>
   1b8de:	40 e0       	ldi	r20, 0x00	; 0
   1b8e0:	50 e0       	ldi	r21, 0x00	; 0
   1b8e2:	69 ed       	ldi	r22, 0xD9	; 217
   1b8e4:	73 e4       	ldi	r23, 0x43	; 67
   1b8e6:	ce 01       	movw	r24, r28
   1b8e8:	68 dd       	rcall	.-1328   	; 0x1b3ba <_ZN7RH_RF9512setFrequencyEf>
   1b8ea:	1b 8e       	std	Y+27, r1	; 0x1b
   1b8ec:	6d e0       	ldi	r22, 0x0D	; 13
   1b8ee:	ce 01       	movw	r24, r28
   1b8f0:	a0 dc       	rcall	.-1728   	; 0x1b232 <_ZN7RH_RF9510setTxPowerEab.part.8.constprop.10>
   1b8f2:	09 c0       	rjmp	.+18     	; 0x1b906 <_ZN7RH_RF954initEv+0x10a>
   1b8f4:	00 e0       	ldi	r16, 0x00	; 0
   1b8f6:	10 e0       	ldi	r17, 0x00	; 0
   1b8f8:	02 c0       	rjmp	.+4      	; 0x1b8fe <_ZN7RH_RF954initEv+0x102>
   1b8fa:	01 e0       	ldi	r16, 0x01	; 1
   1b8fc:	10 e0       	ldi	r17, 0x00	; 0
   1b8fe:	60 2f       	mov	r22, r16
   1b900:	ce 01       	movw	r24, r28
   1b902:	ed d5       	rcall	.+3034   	; 0x1c4de <_ZN11RHSPIDriver17spiUsingInterruptEh>
   1b904:	9b cf       	rjmp	.-202    	; 0x1b83c <_ZN7RH_RF954initEv+0x40>
   1b906:	8f 2d       	mov	r24, r15
   1b908:	df 91       	pop	r29
   1b90a:	cf 91       	pop	r28
   1b90c:	1f 91       	pop	r17
   1b90e:	0f 91       	pop	r16
   1b910:	ff 90       	pop	r15
   1b912:	08 95       	ret

0001b914 <_ZN7RH_RF9514setLowDatarateEv>:
}
 
void RH_RF95::setLowDatarate()
{
   1b914:	8f 92       	push	r8
   1b916:	9f 92       	push	r9
   1b918:	af 92       	push	r10
   1b91a:	bf 92       	push	r11
   1b91c:	ef 92       	push	r14
   1b91e:	ff 92       	push	r15
   1b920:	1f 93       	push	r17
   1b922:	cf 93       	push	r28
   1b924:	df 93       	push	r29
   1b926:	cd b7       	in	r28, 0x3d	; 61
   1b928:	de b7       	in	r29, 0x3e	; 62
   1b92a:	a8 97       	sbiw	r28, 0x28	; 40
   1b92c:	0f b6       	in	r0, 0x3f	; 63
   1b92e:	f8 94       	cli
   1b930:	de bf       	out	0x3e, r29	; 62
   1b932:	0f be       	out	0x3f, r0	; 63
   1b934:	cd bf       	out	0x3d, r28	; 61
   1b936:	7c 01       	movw	r14, r24
    // "To avoid issues surrounding  drift  of  the  crystal  reference  oscillator  due  to  either  temperature  change  
    // or  motion,the  low  data  rate optimization  bit  is  used. Specifically for 125  kHz  bandwidth  and  SF  =  11  and  12,  
    // this  adds  a  small  overhead  to increase robustness to reference frequency variations over the timescale of the LoRa packet."
 
    // read current value for BW and SF
    uint8_t BW = spiRead(RH_RF95_REG_1D_MODEM_CONFIG1) >> 4;	// bw is in bits 7..4
   1b938:	6d e1       	ldi	r22, 0x1D	; 29
   1b93a:	8f d4       	rcall	.+2334   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b93c:	18 2f       	mov	r17, r24
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   1b93e:	6e e1       	ldi	r22, 0x1E	; 30
   1b940:	c7 01       	movw	r24, r14
   1b942:	8b d4       	rcall	.+2326   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   1b944:	98 e2       	ldi	r25, 0x28	; 40
   1b946:	e7 ec       	ldi	r30, 0xC7	; 199
   1b948:	f2 e0       	ldi	r31, 0x02	; 2
   1b94a:	de 01       	movw	r26, r28
   1b94c:	11 96       	adiw	r26, 0x01	; 1
   1b94e:	01 90       	ld	r0, Z+
   1b950:	0d 92       	st	X+, r0
   1b952:	9a 95       	dec	r25
   1b954:	e1 f7       	brne	.-8      	; 0x1b94e <_ZN7RH_RF9514setLowDatarateEv+0x3a>
   
    float bandwidth = bw_tab[BW];
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1b956:	68 2f       	mov	r22, r24
   1b958:	70 e0       	ldi	r23, 0x00	; 0
   1b95a:	84 e0       	ldi	r24, 0x04	; 4
   1b95c:	75 95       	asr	r23
   1b95e:	67 95       	ror	r22
   1b960:	8a 95       	dec	r24
   1b962:	e1 f7       	brne	.-8      	; 0x1b95c <_ZN7RH_RF9514setLowDatarateEv+0x48>
   1b964:	70 e0       	ldi	r23, 0x00	; 0
   1b966:	80 e0       	ldi	r24, 0x00	; 0
   1b968:	90 e0       	ldi	r25, 0x00	; 0
   1b96a:	0e 94 e6 cc 	call	0x199cc	; 0x199cc <__floatunsisf>
   1b96e:	9b 01       	movw	r18, r22
   1b970:	ac 01       	movw	r20, r24
   1b972:	60 e0       	ldi	r22, 0x00	; 0
   1b974:	70 e0       	ldi	r23, 0x00	; 0
   1b976:	80 e0       	ldi	r24, 0x00	; 0
   1b978:	90 e4       	ldi	r25, 0x40	; 64
   1b97a:	0e 94 46 e5 	call	0x1ca8c	; 0x1ca8c <pow>
   1b97e:	20 e0       	ldi	r18, 0x00	; 0
   1b980:	30 e0       	ldi	r19, 0x00	; 0
   1b982:	4a e7       	ldi	r20, 0x7A	; 122
   1b984:	54 e4       	ldi	r21, 0x44	; 68
   1b986:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
    uint8_t SF = spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) >> 4;	// sf is in bits 7..4
   
    // calculate symbol time (see Semtech AN1200.22 section 4)
    float bw_tab[] = {7800, 10400, 15600, 20800, 31250, 41700, 62500, 125000, 250000, 500000};
   
    float bandwidth = bw_tab[BW];
   1b98a:	e1 2f       	mov	r30, r17
   1b98c:	f0 e0       	ldi	r31, 0x00	; 0
   1b98e:	24 e0       	ldi	r18, 0x04	; 4
   1b990:	f5 95       	asr	r31
   1b992:	e7 95       	ror	r30
   1b994:	2a 95       	dec	r18
   1b996:	e1 f7       	brne	.-8      	; 0x1b990 <_ZN7RH_RF9514setLowDatarateEv+0x7c>
   1b998:	ee 0f       	add	r30, r30
   1b99a:	ff 1f       	adc	r31, r31
   1b99c:	ee 0f       	add	r30, r30
   1b99e:	ff 1f       	adc	r31, r31
   1b9a0:	21 e0       	ldi	r18, 0x01	; 1
   1b9a2:	30 e0       	ldi	r19, 0x00	; 0
   1b9a4:	2c 0f       	add	r18, r28
   1b9a6:	3d 1f       	adc	r19, r29
   1b9a8:	e2 0f       	add	r30, r18
   1b9aa:	f3 1f       	adc	r31, r19
   
    float symbolTime = 1000.0 * pow(2, SF) / bandwidth;	// ms
   1b9ac:	20 81       	ld	r18, Z
   1b9ae:	31 81       	ldd	r19, Z+1	; 0x01
   1b9b0:	42 81       	ldd	r20, Z+2	; 0x02
   1b9b2:	53 81       	ldd	r21, Z+3	; 0x03
   1b9b4:	0e 94 52 cc 	call	0x198a4	; 0x198a4 <__divsf3>
   1b9b8:	4b 01       	movw	r8, r22
   1b9ba:	5c 01       	movw	r10, r24
    // https://www.thethingsnetwork.org/forum/t/a-point-to-note-lora-low-data-rate-optimisation-flag/12007
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
   1b9bc:	66 e2       	ldi	r22, 0x26	; 38
   1b9be:	c7 01       	movw	r24, r14
   1b9c0:	4c d4       	rcall	.+2200   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1b9c2:	18 2f       	mov	r17, r24
   1b9c4:	17 7f       	andi	r17, 0xF7	; 247
    if (symbolTime > 16.0)
   1b9c6:	20 e0       	ldi	r18, 0x00	; 0
   1b9c8:	30 e0       	ldi	r19, 0x00	; 0
   1b9ca:	40 e8       	ldi	r20, 0x80	; 128
   1b9cc:	51 e4       	ldi	r21, 0x41	; 65
   1b9ce:	c5 01       	movw	r24, r10
   1b9d0:	b4 01       	movw	r22, r8
   1b9d2:	0e 94 98 cd 	call	0x19b30	; 0x19b30 <__gesf2>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1b9d6:	41 2f       	mov	r20, r17
    // the LDR bit should be set if the Symbol Time is > 16ms
    // So the threshold used here is 16.0ms
 
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
   1b9d8:	18 16       	cp	r1, r24
   1b9da:	0c f4       	brge	.+2      	; 0x1b9de <_ZN7RH_RF9514setLowDatarateEv+0xca>
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
   1b9dc:	48 60       	ori	r20, 0x08	; 8
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1b9de:	66 e2       	ldi	r22, 0x26	; 38
   1b9e0:	c7 01       	movw	r24, r14
   
}
   1b9e2:	a8 96       	adiw	r28, 0x28	; 40
   1b9e4:	0f b6       	in	r0, 0x3f	; 63
   1b9e6:	f8 94       	cli
   1b9e8:	de bf       	out	0x3e, r29	; 62
   1b9ea:	0f be       	out	0x3f, r0	; 63
   1b9ec:	cd bf       	out	0x3d, r28	; 61
   1b9ee:	df 91       	pop	r29
   1b9f0:	cf 91       	pop	r28
   1b9f2:	1f 91       	pop	r17
   1b9f4:	ff 90       	pop	r15
   1b9f6:	ef 90       	pop	r14
   1b9f8:	bf 90       	pop	r11
   1b9fa:	af 90       	pop	r10
   1b9fc:	9f 90       	pop	r9
    // the LDR is bit 3 of RH_RF95_REG_26_MODEM_CONFIG3
    uint8_t current = spiRead(RH_RF95_REG_26_MODEM_CONFIG3) & ~RH_RF95_LOW_DATA_RATE_OPTIMIZE; // mask off the LDR bit
    if (symbolTime > 16.0)
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current | RH_RF95_LOW_DATA_RATE_OPTIMIZE);
    else
	spiWrite(RH_RF95_REG_26_MODEM_CONFIG3, current);
   1b9fe:	8f 90       	pop	r8
   1ba00:	71 c4       	rjmp	.+2274   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>

0001ba02 <_ZN7RH_RF9518setSpreadingFactorEh>:
 // a bit more intuitive
 //
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   1ba02:	0f 93       	push	r16
   1ba04:	1f 93       	push	r17
   1ba06:	cf 93       	push	r28
   1ba08:	8c 01       	movw	r16, r24
   if (sf <= 6) 
   1ba0a:	67 30       	cpi	r22, 0x07	; 7
   1ba0c:	60 f0       	brcs	.+24     	; 0x1ba26 <_ZN7RH_RF9518setSpreadingFactorEh+0x24>
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   else if (sf == 7) 
   1ba0e:	67 30       	cpi	r22, 0x07	; 7
   1ba10:	61 f0       	breq	.+24     	; 0x1ba2a <_ZN7RH_RF9518setSpreadingFactorEh+0x28>
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   else if (sf == 8) 
   1ba12:	68 30       	cpi	r22, 0x08	; 8
   1ba14:	61 f0       	breq	.+24     	; 0x1ba2e <_ZN7RH_RF9518setSpreadingFactorEh+0x2c>
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   else if (sf == 9)
   1ba16:	69 30       	cpi	r22, 0x09	; 9
   1ba18:	61 f0       	breq	.+24     	; 0x1ba32 <_ZN7RH_RF9518setSpreadingFactorEh+0x30>
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   else if (sf == 10)
   1ba1a:	6a 30       	cpi	r22, 0x0A	; 10
   1ba1c:	61 f0       	breq	.+24     	; 0x1ba36 <_ZN7RH_RF9518setSpreadingFactorEh+0x34>
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   else if (sf == 11) 
   1ba1e:	6b 30       	cpi	r22, 0x0B	; 11
   1ba20:	61 f4       	brne	.+24     	; 0x1ba3a <_ZN7RH_RF9518setSpreadingFactorEh+0x38>
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   1ba22:	c0 eb       	ldi	r28, 0xB0	; 176
   1ba24:	0b c0       	rjmp	.+22     	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
 ///////////////////////////////////////////////////
 
 void RH_RF95::setSpreadingFactor(uint8_t sf)
 {
   if (sf <= 6) 
     sf = RH_RF95_SPREADING_FACTOR_64CPS;
   1ba26:	c0 e6       	ldi	r28, 0x60	; 96
   1ba28:	09 c0       	rjmp	.+18     	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 7) 
     sf = RH_RF95_SPREADING_FACTOR_128CPS;
   1ba2a:	c0 e7       	ldi	r28, 0x70	; 112
   1ba2c:	07 c0       	rjmp	.+14     	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 8) 
     sf = RH_RF95_SPREADING_FACTOR_256CPS;
   1ba2e:	c0 e8       	ldi	r28, 0x80	; 128
   1ba30:	05 c0       	rjmp	.+10     	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 9)
     sf = RH_RF95_SPREADING_FACTOR_512CPS;
   1ba32:	c0 e9       	ldi	r28, 0x90	; 144
   1ba34:	03 c0       	rjmp	.+6      	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 10)
     sf = RH_RF95_SPREADING_FACTOR_1024CPS;
   1ba36:	c0 ea       	ldi	r28, 0xA0	; 160
   1ba38:	01 c0       	rjmp	.+2      	; 0x1ba3c <_ZN7RH_RF9518setSpreadingFactorEh+0x3a>
   else if (sf == 11) 
     sf = RH_RF95_SPREADING_FACTOR_2048CPS;
   else if (sf >= 12)
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
   1ba3a:	c0 ec       	ldi	r28, 0xC0	; 192
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   1ba3c:	6e e1       	ldi	r22, 0x1E	; 30
   1ba3e:	c8 01       	movw	r24, r16
   1ba40:	0c d4       	rcall	.+2072   	; 0x1c25a <_ZN11RHSPIDriver7spiReadEh>
   1ba42:	8f 70       	andi	r24, 0x0F	; 15
   1ba44:	48 2f       	mov	r20, r24
   1ba46:	4c 2b       	or	r20, r28
   1ba48:	6e e1       	ldi	r22, 0x1E	; 30
   1ba4a:	c8 01       	movw	r24, r16
   1ba4c:	4b d4       	rcall	.+2198   	; 0x1c2e4 <_ZN11RHSPIDriver8spiWriteEhh>
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1ba4e:	c8 01       	movw	r24, r16
 }
   1ba50:	cf 91       	pop	r28
   1ba52:	1f 91       	pop	r17
     sf =  RH_RF95_SPREADING_FACTOR_4096CPS;
 
   // set the new spreading factor
   spiWrite(RH_RF95_REG_1E_MODEM_CONFIG2, (spiRead(RH_RF95_REG_1E_MODEM_CONFIG2) & ~RH_RF95_SPREADING_FACTOR) | sf);
   // check if Low data Rate bit should be set or cleared
   setLowDatarate();
   1ba54:	0f 91       	pop	r16
   1ba56:	5e cf       	rjmp	.-324    	; 0x1b914 <_ZN7RH_RF9514setLowDatarateEv>

0001ba58 <_ZN8SPIClass5beginEv>:
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
   1ba58:	cf 93       	push	r28
  uint8_t sreg = SREG;
   1ba5a:	cf b7       	in	r28, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1ba5c:	f8 94       	cli
  if (!initialized) {
   1ba5e:	80 91 03 1a 	lds	r24, 0x1A03	; 0x801a03 <_ZN8SPIClass11initializedE>
   1ba62:	81 11       	cpse	r24, r1
   1ba64:	27 c0       	rjmp	.+78     	; 0x1bab4 <_ZN8SPIClass5beginEv+0x5c>
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
   1ba66:	ea ed       	ldi	r30, 0xDA	; 218
   1ba68:	f6 e4       	ldi	r31, 0x46	; 70
   1ba6a:	84 91       	lpm	r24, Z
    uint8_t bit = digitalPinToBitMask(SS);
   1ba6c:	e4 e9       	ldi	r30, 0x94	; 148
   1ba6e:	f6 e4       	ldi	r31, 0x46	; 70
   1ba70:	94 91       	lpm	r25, Z
    volatile uint8_t *reg = portModeRegister(port);
   1ba72:	e8 2f       	mov	r30, r24
   1ba74:	f0 e0       	ldi	r31, 0x00	; 0
   1ba76:	ee 0f       	add	r30, r30
   1ba78:	ff 1f       	adc	r31, r31
   1ba7a:	e1 5e       	subi	r30, 0xE1	; 225
   1ba7c:	f8 4b       	sbci	r31, 0xB8	; 184
   1ba7e:	a5 91       	lpm	r26, Z+
   1ba80:	b4 91       	lpm	r27, Z

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
   1ba82:	ec 91       	ld	r30, X
   1ba84:	e9 23       	and	r30, r25
   1ba86:	21 f4       	brne	.+8      	; 0x1ba90 <_ZN8SPIClass5beginEv+0x38>
      digitalWrite(SS, HIGH);
   1ba88:	61 e0       	ldi	r22, 0x01	; 1
   1ba8a:	85 e3       	ldi	r24, 0x35	; 53
   1ba8c:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
   1ba90:	61 e0       	ldi	r22, 0x01	; 1
   1ba92:	85 e3       	ldi	r24, 0x35	; 53
   1ba94:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
   1ba98:	8c b5       	in	r24, 0x2c	; 44
   1ba9a:	80 61       	ori	r24, 0x10	; 16
   1ba9c:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
   1ba9e:	8c b5       	in	r24, 0x2c	; 44
   1baa0:	80 64       	ori	r24, 0x40	; 64
   1baa2:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
   1baa4:	61 e0       	ldi	r22, 0x01	; 1
   1baa6:	84 e3       	ldi	r24, 0x34	; 52
   1baa8:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
    pinMode(MOSI, OUTPUT);
   1baac:	61 e0       	ldi	r22, 0x01	; 1
   1baae:	83 e3       	ldi	r24, 0x33	; 51
   1bab0:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
  }
  initialized++; // reference count
   1bab4:	80 91 03 1a 	lds	r24, 0x1A03	; 0x801a03 <_ZN8SPIClass11initializedE>
   1bab8:	8f 5f       	subi	r24, 0xFF	; 255
   1baba:	80 93 03 1a 	sts	0x1A03, r24	; 0x801a03 <_ZN8SPIClass11initializedE>
  SREG = sreg;
   1babe:	cf bf       	out	0x3f, r28	; 63
}
   1bac0:	cf 91       	pop	r28
   1bac2:	08 95       	ret

0001bac4 <_ZN8SPIClass3endEv>:

void SPIClass::end() {
  uint8_t sreg = SREG;
   1bac4:	9f b7       	in	r25, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1bac6:	f8 94       	cli
  // Decrease the reference counter
  if (initialized)
   1bac8:	80 91 03 1a 	lds	r24, 0x1A03	; 0x801a03 <_ZN8SPIClass11initializedE>
   1bacc:	88 23       	and	r24, r24
   1bace:	19 f0       	breq	.+6      	; 0x1bad6 <_ZN8SPIClass3endEv+0x12>
    initialized--;
   1bad0:	81 50       	subi	r24, 0x01	; 1
   1bad2:	80 93 03 1a 	sts	0x1A03, r24	; 0x801a03 <_ZN8SPIClass11initializedE>
  // If there are no more references disable SPI
  if (!initialized) {
   1bad6:	80 91 03 1a 	lds	r24, 0x1A03	; 0x801a03 <_ZN8SPIClass11initializedE>
   1bada:	81 11       	cpse	r24, r1
   1badc:	05 c0       	rjmp	.+10     	; 0x1bae8 <_ZN8SPIClass3endEv+0x24>
    SPCR &= ~_BV(SPE);
   1bade:	8c b5       	in	r24, 0x2c	; 44
   1bae0:	8f 7b       	andi	r24, 0xBF	; 191
   1bae2:	8c bd       	out	0x2c, r24	; 44
    interruptMode = 0;
   1bae4:	10 92 02 1a 	sts	0x1A02, r1	; 0x801a02 <_ZN8SPIClass13interruptModeE>
    #ifdef SPI_TRANSACTION_MISMATCH_LED
    inTransactionFlag = 0;
    #endif
  }
  SREG = sreg;
   1bae8:	9f bf       	out	0x3f, r25	; 63
   1baea:	08 95       	ret

0001baec <_ZN8SPIClass14usingInterruptEh>:
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
  uint8_t sreg = SREG;
   1baec:	2f b7       	in	r18, 0x3f	; 63
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
   1baee:	f8 94       	cli
  switch (interruptNumber) {
   1baf0:	90 e0       	ldi	r25, 0x00	; 0
   1baf2:	88 30       	cpi	r24, 0x08	; 8
   1baf4:	91 05       	cpc	r25, r1
   1baf6:	a8 f4       	brcc	.+42     	; 0x1bb22 <_ZN8SPIClass14usingInterruptEh+0x36>
   1baf8:	fc 01       	movw	r30, r24
   1bafa:	88 27       	eor	r24, r24
   1bafc:	e7 5f       	subi	r30, 0xF7	; 247
   1bafe:	fe 4f       	sbci	r31, 0xFE	; 254
   1bb00:	8f 4f       	sbci	r24, 0xFF	; 255
   1bb02:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
  #endif
  #ifdef SPI_INT1_MASK
  case 1: mask = SPI_INT1_MASK; break;
   1bb06:	80 e2       	ldi	r24, 0x20	; 32
   1bb08:	12 c0       	rjmp	.+36     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT2_MASK
  case 2: mask = SPI_INT2_MASK; break;
   1bb0a:	81 e0       	ldi	r24, 0x01	; 1
   1bb0c:	10 c0       	rjmp	.+32     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT3_MASK
  case 3: mask = SPI_INT3_MASK; break;
   1bb0e:	82 e0       	ldi	r24, 0x02	; 2
   1bb10:	0e c0       	rjmp	.+28     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT4_MASK
  case 4: mask = SPI_INT4_MASK; break;
   1bb12:	84 e0       	ldi	r24, 0x04	; 4
   1bb14:	0c c0       	rjmp	.+24     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT5_MASK
  case 5: mask = SPI_INT5_MASK; break;
   1bb16:	88 e0       	ldi	r24, 0x08	; 8
   1bb18:	0a c0       	rjmp	.+20     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT6_MASK
  case 6: mask = SPI_INT6_MASK; break;
   1bb1a:	80 e4       	ldi	r24, 0x40	; 64
   1bb1c:	08 c0       	rjmp	.+16     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
   1bb1e:	80 e8       	ldi	r24, 0x80	; 128
   1bb20:	06 c0       	rjmp	.+12     	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  #endif
  default:
    interruptMode = 2;
   1bb22:	82 e0       	ldi	r24, 0x02	; 2
   1bb24:	80 93 02 1a 	sts	0x1A02, r24	; 0x801a02 <_ZN8SPIClass13interruptModeE>
  #endif
#endif

void SPIClass::usingInterrupt(uint8_t interruptNumber)
{
  uint8_t mask = 0;
   1bb28:	80 e0       	ldi	r24, 0x00	; 0
  #ifdef SPI_INT7_MASK
  case 7: mask = SPI_INT7_MASK; break;
  #endif
  default:
    interruptMode = 2;
    break;
   1bb2a:	01 c0       	rjmp	.+2      	; 0x1bb2e <_ZN8SPIClass14usingInterruptEh+0x42>
  uint8_t mask = 0;
  uint8_t sreg = SREG;
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
  switch (interruptNumber) {
  #ifdef SPI_INT0_MASK
  case 0: mask = SPI_INT0_MASK; break;
   1bb2c:	80 e1       	ldi	r24, 0x10	; 16
  #endif
  default:
    interruptMode = 2;
    break;
  }
  interruptMask |= mask;
   1bb2e:	90 91 01 1a 	lds	r25, 0x1A01	; 0x801a01 <_ZN8SPIClass13interruptMaskE>
   1bb32:	89 2b       	or	r24, r25
   1bb34:	80 93 01 1a 	sts	0x1A01, r24	; 0x801a01 <_ZN8SPIClass13interruptMaskE>
  if (!interruptMode)
   1bb38:	80 91 02 1a 	lds	r24, 0x1A02	; 0x801a02 <_ZN8SPIClass13interruptModeE>
   1bb3c:	81 11       	cpse	r24, r1
   1bb3e:	03 c0       	rjmp	.+6      	; 0x1bb46 <_ZN8SPIClass14usingInterruptEh+0x5a>
    interruptMode = 1;
   1bb40:	81 e0       	ldi	r24, 0x01	; 1
   1bb42:	80 93 02 1a 	sts	0x1A02, r24	; 0x801a02 <_ZN8SPIClass13interruptModeE>
  SREG = sreg;
   1bb46:	2f bf       	out	0x3f, r18	; 63
   1bb48:	08 95       	ret

0001bb4a <_ZN7TwoWire9availableEv>:
}

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
   1bb4a:	80 91 38 1a 	lds	r24, 0x1A38	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bb4e:	90 e0       	ldi	r25, 0x00	; 0
   1bb50:	20 91 39 1a 	lds	r18, 0x1A39	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bb54:	82 1b       	sub	r24, r18
   1bb56:	91 09       	sbc	r25, r1
   1bb58:	08 95       	ret

0001bb5a <_ZN7TwoWire4readEv>:
   1bb5a:	90 91 39 1a 	lds	r25, 0x1A39	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bb5e:	80 91 38 1a 	lds	r24, 0x1A38	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bb62:	98 17       	cp	r25, r24
   1bb64:	50 f4       	brcc	.+20     	; 0x1bb7a <_ZN7TwoWire4readEv+0x20>
   1bb66:	e9 2f       	mov	r30, r25
   1bb68:	f0 e0       	ldi	r31, 0x00	; 0
   1bb6a:	e6 5c       	subi	r30, 0xC6	; 198
   1bb6c:	f5 4e       	sbci	r31, 0xE5	; 229
   1bb6e:	20 81       	ld	r18, Z
   1bb70:	30 e0       	ldi	r19, 0x00	; 0
   1bb72:	9f 5f       	subi	r25, 0xFF	; 255
   1bb74:	90 93 39 1a 	sts	0x1A39, r25	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bb78:	02 c0       	rjmp	.+4      	; 0x1bb7e <_ZN7TwoWire4readEv+0x24>
   1bb7a:	2f ef       	ldi	r18, 0xFF	; 255
   1bb7c:	3f ef       	ldi	r19, 0xFF	; 255
   1bb7e:	c9 01       	movw	r24, r18
   1bb80:	08 95       	ret

0001bb82 <_ZN7TwoWire4peekEv>:
   1bb82:	e0 91 39 1a 	lds	r30, 0x1A39	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bb86:	80 91 38 1a 	lds	r24, 0x1A38	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bb8a:	e8 17       	cp	r30, r24
   1bb8c:	30 f4       	brcc	.+12     	; 0x1bb9a <_ZN7TwoWire4peekEv+0x18>
   1bb8e:	f0 e0       	ldi	r31, 0x00	; 0
   1bb90:	e6 5c       	subi	r30, 0xC6	; 198
   1bb92:	f5 4e       	sbci	r31, 0xE5	; 229
   1bb94:	80 81       	ld	r24, Z
   1bb96:	90 e0       	ldi	r25, 0x00	; 0
   1bb98:	08 95       	ret
   1bb9a:	8f ef       	ldi	r24, 0xFF	; 255
   1bb9c:	9f ef       	ldi	r25, 0xFF	; 255
   1bb9e:	08 95       	ret

0001bba0 <_ZN7TwoWire5flushEv>:
   1bba0:	08 95       	ret

0001bba2 <_ZN7TwoWire16onReceiveServiceEPhi>:
   1bba2:	cf 93       	push	r28
   1bba4:	df 93       	push	r29
   1bba6:	ec 01       	movw	r28, r24
   1bba8:	e0 91 10 1a 	lds	r30, 0x1A10	; 0x801a10 <_ZN7TwoWire14user_onReceiveE>
   1bbac:	f0 91 11 1a 	lds	r31, 0x1A11	; 0x801a11 <_ZN7TwoWire14user_onReceiveE+0x1>
   1bbb0:	30 97       	sbiw	r30, 0x00	; 0
   1bbb2:	f1 f0       	breq	.+60     	; 0x1bbf0 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bbb4:	90 91 39 1a 	lds	r25, 0x1A39	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bbb8:	80 91 38 1a 	lds	r24, 0x1A38	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bbbc:	98 17       	cp	r25, r24
   1bbbe:	c0 f0       	brcs	.+48     	; 0x1bbf0 <_ZN7TwoWire16onReceiveServiceEPhi+0x4e>
   1bbc0:	90 e0       	ldi	r25, 0x00	; 0
   1bbc2:	29 2f       	mov	r18, r25
   1bbc4:	30 e0       	ldi	r19, 0x00	; 0
   1bbc6:	26 17       	cp	r18, r22
   1bbc8:	37 07       	cpc	r19, r23
   1bbca:	54 f4       	brge	.+20     	; 0x1bbe0 <_ZN7TwoWire16onReceiveServiceEPhi+0x3e>
   1bbcc:	de 01       	movw	r26, r28
   1bbce:	a2 0f       	add	r26, r18
   1bbd0:	b3 1f       	adc	r27, r19
   1bbd2:	4c 91       	ld	r20, X
   1bbd4:	d9 01       	movw	r26, r18
   1bbd6:	a6 5c       	subi	r26, 0xC6	; 198
   1bbd8:	b5 4e       	sbci	r27, 0xE5	; 229
   1bbda:	4c 93       	st	X, r20
   1bbdc:	9f 5f       	subi	r25, 0xFF	; 255
   1bbde:	f1 cf       	rjmp	.-30     	; 0x1bbc2 <_ZN7TwoWire16onReceiveServiceEPhi+0x20>
   1bbe0:	10 92 39 1a 	sts	0x1A39, r1	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bbe4:	60 93 38 1a 	sts	0x1A38, r22	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bbe8:	cb 01       	movw	r24, r22
   1bbea:	df 91       	pop	r29
   1bbec:	cf 91       	pop	r28
   1bbee:	19 94       	eijmp
   1bbf0:	df 91       	pop	r29
   1bbf2:	cf 91       	pop	r28
   1bbf4:	08 95       	ret

0001bbf6 <_ZN7TwoWire16onRequestServiceEv>:
   1bbf6:	e0 91 12 1a 	lds	r30, 0x1A12	; 0x801a12 <_ZN7TwoWire14user_onRequestE>
   1bbfa:	f0 91 13 1a 	lds	r31, 0x1A13	; 0x801a13 <_ZN7TwoWire14user_onRequestE+0x1>
   1bbfe:	30 97       	sbiw	r30, 0x00	; 0
   1bc00:	29 f0       	breq	.+10     	; 0x1bc0c <_ZN7TwoWire16onRequestServiceEv+0x16>
   1bc02:	10 92 16 1a 	sts	0x1A16, r1	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bc06:	10 92 15 1a 	sts	0x1A15, r1	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bc0a:	19 94       	eijmp
   1bc0c:	08 95       	ret

0001bc0e <_ZN7TwoWire5writeEPKhj>:
   1bc0e:	cf 92       	push	r12
   1bc10:	df 92       	push	r13
   1bc12:	ef 92       	push	r14
   1bc14:	ff 92       	push	r15
   1bc16:	0f 93       	push	r16
   1bc18:	1f 93       	push	r17
   1bc1a:	cf 93       	push	r28
   1bc1c:	df 93       	push	r29
   1bc1e:	7c 01       	movw	r14, r24
   1bc20:	cb 01       	movw	r24, r22
   1bc22:	8a 01       	movw	r16, r20
   1bc24:	20 91 14 1a 	lds	r18, 0x1A14	; 0x801a14 <_ZN7TwoWire12transmittingE>
   1bc28:	22 23       	and	r18, r18
   1bc2a:	89 f0       	breq	.+34     	; 0x1bc4e <_ZN7TwoWire5writeEPKhj+0x40>
   1bc2c:	eb 01       	movw	r28, r22
   1bc2e:	6b 01       	movw	r12, r22
   1bc30:	c4 0e       	add	r12, r20
   1bc32:	d5 1e       	adc	r13, r21
   1bc34:	cc 15       	cp	r28, r12
   1bc36:	dd 05       	cpc	r29, r13
   1bc38:	61 f0       	breq	.+24     	; 0x1bc52 <_ZN7TwoWire5writeEPKhj+0x44>
   1bc3a:	69 91       	ld	r22, Y+
   1bc3c:	d7 01       	movw	r26, r14
   1bc3e:	ed 91       	ld	r30, X+
   1bc40:	fc 91       	ld	r31, X
   1bc42:	01 90       	ld	r0, Z+
   1bc44:	f0 81       	ld	r31, Z
   1bc46:	e0 2d       	mov	r30, r0
   1bc48:	c7 01       	movw	r24, r14
   1bc4a:	19 95       	eicall
   1bc4c:	f3 cf       	rjmp	.-26     	; 0x1bc34 <_ZN7TwoWire5writeEPKhj+0x26>
   1bc4e:	64 2f       	mov	r22, r20
   1bc50:	7d d4       	rcall	.+2298   	; 0x1c54c <twi_transmit>
   1bc52:	c8 01       	movw	r24, r16
   1bc54:	df 91       	pop	r29
   1bc56:	cf 91       	pop	r28
   1bc58:	1f 91       	pop	r17
   1bc5a:	0f 91       	pop	r16
   1bc5c:	ff 90       	pop	r15
   1bc5e:	ef 90       	pop	r14
   1bc60:	df 90       	pop	r13
   1bc62:	cf 90       	pop	r12
   1bc64:	08 95       	ret

0001bc66 <_ZN7TwoWire5writeEh>:
   1bc66:	cf 93       	push	r28
   1bc68:	df 93       	push	r29
   1bc6a:	1f 92       	push	r1
   1bc6c:	cd b7       	in	r28, 0x3d	; 61
   1bc6e:	de b7       	in	r29, 0x3e	; 62
   1bc70:	69 83       	std	Y+1, r22	; 0x01
   1bc72:	20 91 14 1a 	lds	r18, 0x1A14	; 0x801a14 <_ZN7TwoWire12transmittingE>
   1bc76:	22 23       	and	r18, r18
   1bc78:	d1 f0       	breq	.+52     	; 0x1bcae <_ZN7TwoWire5writeEh+0x48>
   1bc7a:	20 91 15 1a 	lds	r18, 0x1A15	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bc7e:	20 32       	cpi	r18, 0x20	; 32
   1bc80:	40 f0       	brcs	.+16     	; 0x1bc92 <_ZN7TwoWire5writeEh+0x2c>
   1bc82:	21 e0       	ldi	r18, 0x01	; 1
   1bc84:	30 e0       	ldi	r19, 0x00	; 0
   1bc86:	fc 01       	movw	r30, r24
   1bc88:	33 83       	std	Z+3, r19	; 0x03
   1bc8a:	22 83       	std	Z+2, r18	; 0x02
   1bc8c:	80 e0       	ldi	r24, 0x00	; 0
   1bc8e:	90 e0       	ldi	r25, 0x00	; 0
   1bc90:	14 c0       	rjmp	.+40     	; 0x1bcba <_ZN7TwoWire5writeEh+0x54>
   1bc92:	80 91 16 1a 	lds	r24, 0x1A16	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bc96:	e8 2f       	mov	r30, r24
   1bc98:	f0 e0       	ldi	r31, 0x00	; 0
   1bc9a:	e9 5e       	subi	r30, 0xE9	; 233
   1bc9c:	f5 4e       	sbci	r31, 0xE5	; 229
   1bc9e:	99 81       	ldd	r25, Y+1	; 0x01
   1bca0:	90 83       	st	Z, r25
   1bca2:	8f 5f       	subi	r24, 0xFF	; 255
   1bca4:	80 93 16 1a 	sts	0x1A16, r24	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bca8:	80 93 15 1a 	sts	0x1A15, r24	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bcac:	04 c0       	rjmp	.+8      	; 0x1bcb6 <_ZN7TwoWire5writeEh+0x50>
   1bcae:	61 e0       	ldi	r22, 0x01	; 1
   1bcb0:	ce 01       	movw	r24, r28
   1bcb2:	01 96       	adiw	r24, 0x01	; 1
   1bcb4:	4b d4       	rcall	.+2198   	; 0x1c54c <twi_transmit>
   1bcb6:	81 e0       	ldi	r24, 0x01	; 1
   1bcb8:	90 e0       	ldi	r25, 0x00	; 0
   1bcba:	0f 90       	pop	r0
   1bcbc:	df 91       	pop	r29
   1bcbe:	cf 91       	pop	r28
   1bcc0:	08 95       	ret

0001bcc2 <_ZN7TwoWireC1Ev>:
   1bcc2:	fc 01       	movw	r30, r24
   1bcc4:	13 82       	std	Z+3, r1	; 0x03
   1bcc6:	12 82       	std	Z+2, r1	; 0x02
   1bcc8:	88 ee       	ldi	r24, 0xE8	; 232
   1bcca:	93 e0       	ldi	r25, 0x03	; 3
   1bccc:	a0 e0       	ldi	r26, 0x00	; 0
   1bcce:	b0 e0       	ldi	r27, 0x00	; 0
   1bcd0:	84 83       	std	Z+4, r24	; 0x04
   1bcd2:	95 83       	std	Z+5, r25	; 0x05
   1bcd4:	a6 83       	std	Z+6, r26	; 0x06
   1bcd6:	b7 83       	std	Z+7, r27	; 0x07
   1bcd8:	8b e7       	ldi	r24, 0x7B	; 123
   1bcda:	98 e0       	ldi	r25, 0x08	; 8
   1bcdc:	91 83       	std	Z+1, r25	; 0x01
   1bcde:	80 83       	st	Z, r24
   1bce0:	08 95       	ret

0001bce2 <_ZN7TwoWire5beginEv>:
   1bce2:	10 92 39 1a 	sts	0x1A39, r1	; 0x801a39 <_ZN7TwoWire13rxBufferIndexE>
   1bce6:	10 92 38 1a 	sts	0x1A38, r1	; 0x801a38 <_ZN7TwoWire14rxBufferLengthE>
   1bcea:	10 92 16 1a 	sts	0x1A16, r1	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bcee:	10 92 15 1a 	sts	0x1A15, r1	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bcf2:	01 d4       	rcall	.+2050   	; 0x1c4f6 <twi_init>
   1bcf4:	8b ef       	ldi	r24, 0xFB	; 251
   1bcf6:	9d ed       	ldi	r25, 0xDD	; 221
   1bcf8:	56 d4       	rcall	.+2220   	; 0x1c5a6 <twi_attachSlaveTxEvent>
   1bcfa:	81 ed       	ldi	r24, 0xD1	; 209
   1bcfc:	9d ed       	ldi	r25, 0xDD	; 221
   1bcfe:	4e c4       	rjmp	.+2204   	; 0x1c59c <twi_attachSlaveRxEvent>

0001bd00 <_ZN7TwoWire17beginTransmissionEh>:
   1bd00:	81 e0       	ldi	r24, 0x01	; 1
   1bd02:	80 93 14 1a 	sts	0x1A14, r24	; 0x801a14 <_ZN7TwoWire12transmittingE>
   1bd06:	60 93 37 1a 	sts	0x1A37, r22	; 0x801a37 <_ZN7TwoWire9txAddressE>
   1bd0a:	10 92 16 1a 	sts	0x1A16, r1	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bd0e:	10 92 15 1a 	sts	0x1A15, r1	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bd12:	08 95       	ret

0001bd14 <_ZN7TwoWire15endTransmissionEh>:
   1bd14:	0f 93       	push	r16
   1bd16:	06 2f       	mov	r16, r22
   1bd18:	21 e0       	ldi	r18, 0x01	; 1
   1bd1a:	40 91 15 1a 	lds	r20, 0x1A15	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bd1e:	67 e1       	ldi	r22, 0x17	; 23
   1bd20:	7a e1       	ldi	r23, 0x1A	; 26
   1bd22:	80 91 37 1a 	lds	r24, 0x1A37	; 0x801a37 <_ZN7TwoWire9txAddressE>
   1bd26:	5e d4       	rcall	.+2236   	; 0x1c5e4 <twi_writeTo>
   1bd28:	10 92 16 1a 	sts	0x1A16, r1	; 0x801a16 <_ZN7TwoWire13txBufferIndexE>
   1bd2c:	10 92 15 1a 	sts	0x1A15, r1	; 0x801a15 <_ZN7TwoWire14txBufferLengthE>
   1bd30:	10 92 14 1a 	sts	0x1A14, r1	; 0x801a14 <_ZN7TwoWire12transmittingE>
   1bd34:	0f 91       	pop	r16
   1bd36:	08 95       	ret

0001bd38 <_ZN7TwoWire15endTransmissionEv>:
   1bd38:	61 e0       	ldi	r22, 0x01	; 1
   1bd3a:	ec cf       	rjmp	.-40     	; 0x1bd14 <_ZN7TwoWire15endTransmissionEh>

0001bd3c <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
   1bd3c:	84 e0       	ldi	r24, 0x04	; 4
   1bd3e:	9a e1       	ldi	r25, 0x1A	; 26
   1bd40:	c0 cf       	rjmp	.-128    	; 0x1bcc2 <_ZN7TwoWireC1Ev>

0001bd42 <__cxa_pure_virtual>:
   1bd42:	0e 94 6d e9 	call	0x1d2da	; 0x1d2da <abort>

0001bd46 <yield>:
   1bd46:	08 95       	ret

0001bd48 <_ZdlPv>:
   1bd48:	0c 94 48 e8 	jmp	0x1d090	; 0x1d090 <free>

0001bd4c <nothing>:
    #endif
      break;       
#endif
    }
      
    intFunc[interruptNum] = nothing;
   1bd4c:	08 95       	ret

0001bd4e <attachInterrupt>:
   1bd4e:	88 30       	cpi	r24, 0x08	; 8
   1bd50:	08 f0       	brcs	.+2      	; 0x1bd54 <attachInterrupt+0x6>
   1bd52:	70 c0       	rjmp	.+224    	; 0x1be34 <attachInterrupt+0xe6>
   1bd54:	a8 2f       	mov	r26, r24
   1bd56:	b0 e0       	ldi	r27, 0x00	; 0
   1bd58:	aa 0f       	add	r26, r26
   1bd5a:	bb 1f       	adc	r27, r27
   1bd5c:	ae 5a       	subi	r26, 0xAE	; 174
   1bd5e:	bd 4f       	sbci	r27, 0xFD	; 253
   1bd60:	11 96       	adiw	r26, 0x01	; 1
   1bd62:	7c 93       	st	X, r23
   1bd64:	6e 93       	st	-X, r22
   1bd66:	90 e0       	ldi	r25, 0x00	; 0
   1bd68:	fc 01       	movw	r30, r24
   1bd6a:	31 97       	sbiw	r30, 0x01	; 1
   1bd6c:	e7 30       	cpi	r30, 0x07	; 7
   1bd6e:	f1 05       	cpc	r31, r1
   1bd70:	a0 f5       	brcc	.+104    	; 0x1bdda <attachInterrupt+0x8c>
   1bd72:	88 27       	eor	r24, r24
   1bd74:	ef 5e       	subi	r30, 0xEF	; 239
   1bd76:	fe 4f       	sbci	r31, 0xFE	; 254
   1bd78:	8f 4f       	sbci	r24, 0xFF	; 255
   1bd7a:	0c 94 83 e7 	jmp	0x1cf06	; 0x1cf06 <__tablejump2__>
   1bd7e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bd82:	8c 7f       	andi	r24, 0xFC	; 252
   1bd84:	48 2b       	or	r20, r24
   1bd86:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bd8a:	e8 9a       	sbi	0x1d, 0	; 29
   1bd8c:	08 95       	ret
   1bd8e:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bd92:	83 7f       	andi	r24, 0xF3	; 243
   1bd94:	44 0f       	add	r20, r20
   1bd96:	55 1f       	adc	r21, r21
   1bd98:	44 0f       	add	r20, r20
   1bd9a:	55 1f       	adc	r21, r21
   1bd9c:	48 2b       	or	r20, r24
   1bd9e:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bda2:	e9 9a       	sbi	0x1d, 1	; 29
   1bda4:	08 95       	ret
   1bda6:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdaa:	8f 7c       	andi	r24, 0xCF	; 207
   1bdac:	74 e0       	ldi	r23, 0x04	; 4
   1bdae:	44 0f       	add	r20, r20
   1bdb0:	55 1f       	adc	r21, r21
   1bdb2:	7a 95       	dec	r23
   1bdb4:	e1 f7       	brne	.-8      	; 0x1bdae <attachInterrupt+0x60>
   1bdb6:	48 2b       	or	r20, r24
   1bdb8:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdbc:	ea 9a       	sbi	0x1d, 2	; 29
   1bdbe:	08 95       	ret
   1bdc0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdc4:	8f 73       	andi	r24, 0x3F	; 63
   1bdc6:	66 e0       	ldi	r22, 0x06	; 6
   1bdc8:	44 0f       	add	r20, r20
   1bdca:	55 1f       	adc	r21, r21
   1bdcc:	6a 95       	dec	r22
   1bdce:	e1 f7       	brne	.-8      	; 0x1bdc8 <attachInterrupt+0x7a>
   1bdd0:	48 2b       	or	r20, r24
   1bdd2:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
   1bdd6:	eb 9a       	sbi	0x1d, 3	; 29
   1bdd8:	08 95       	ret
   1bdda:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bdde:	8c 7f       	andi	r24, 0xFC	; 252
   1bde0:	48 2b       	or	r20, r24
   1bde2:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bde6:	ec 9a       	sbi	0x1d, 4	; 29
   1bde8:	08 95       	ret
   1bdea:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bdee:	83 7f       	andi	r24, 0xF3	; 243
   1bdf0:	44 0f       	add	r20, r20
   1bdf2:	55 1f       	adc	r21, r21
   1bdf4:	44 0f       	add	r20, r20
   1bdf6:	55 1f       	adc	r21, r21
   1bdf8:	48 2b       	or	r20, r24
   1bdfa:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1bdfe:	ed 9a       	sbi	0x1d, 5	; 29
   1be00:	08 95       	ret
   1be02:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be06:	8f 7c       	andi	r24, 0xCF	; 207
   1be08:	24 e0       	ldi	r18, 0x04	; 4
   1be0a:	44 0f       	add	r20, r20
   1be0c:	55 1f       	adc	r21, r21
   1be0e:	2a 95       	dec	r18
   1be10:	e1 f7       	brne	.-8      	; 0x1be0a <attachInterrupt+0xbc>
   1be12:	48 2b       	or	r20, r24
   1be14:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be18:	ee 9a       	sbi	0x1d, 6	; 29
   1be1a:	08 95       	ret
   1be1c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be20:	8f 73       	andi	r24, 0x3F	; 63
   1be22:	96 e0       	ldi	r25, 0x06	; 6
   1be24:	44 0f       	add	r20, r20
   1be26:	55 1f       	adc	r21, r21
   1be28:	9a 95       	dec	r25
   1be2a:	e1 f7       	brne	.-8      	; 0x1be24 <attachInterrupt+0xd6>
   1be2c:	48 2b       	or	r20, r24
   1be2e:	40 93 6a 00 	sts	0x006A, r20	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
   1be32:	ef 9a       	sbi	0x1d, 7	; 29
   1be34:	08 95       	ret

0001be36 <__vector_1>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)

#elif defined(EICRA) && defined(EICRB)

IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_2)
   1be36:	1f 92       	push	r1
   1be38:	0f 92       	push	r0
   1be3a:	0f b6       	in	r0, 0x3f	; 63
   1be3c:	0f 92       	push	r0
   1be3e:	11 24       	eor	r1, r1
   1be40:	0b b6       	in	r0, 0x3b	; 59
   1be42:	0f 92       	push	r0
   1be44:	2f 93       	push	r18
   1be46:	3f 93       	push	r19
   1be48:	4f 93       	push	r20
   1be4a:	5f 93       	push	r21
   1be4c:	6f 93       	push	r22
   1be4e:	7f 93       	push	r23
   1be50:	8f 93       	push	r24
   1be52:	9f 93       	push	r25
   1be54:	af 93       	push	r26
   1be56:	bf 93       	push	r27
   1be58:	ef 93       	push	r30
   1be5a:	ff 93       	push	r31
   1be5c:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <intFunc+0x4>
   1be60:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <intFunc+0x5>
   1be64:	19 95       	eicall
   1be66:	ff 91       	pop	r31
   1be68:	ef 91       	pop	r30
   1be6a:	bf 91       	pop	r27
   1be6c:	af 91       	pop	r26
   1be6e:	9f 91       	pop	r25
   1be70:	8f 91       	pop	r24
   1be72:	7f 91       	pop	r23
   1be74:	6f 91       	pop	r22
   1be76:	5f 91       	pop	r21
   1be78:	4f 91       	pop	r20
   1be7a:	3f 91       	pop	r19
   1be7c:	2f 91       	pop	r18
   1be7e:	0f 90       	pop	r0
   1be80:	0b be       	out	0x3b, r0	; 59
   1be82:	0f 90       	pop	r0
   1be84:	0f be       	out	0x3f, r0	; 63
   1be86:	0f 90       	pop	r0
   1be88:	1f 90       	pop	r1
   1be8a:	18 95       	reti

0001be8c <__vector_2>:
IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_3)
   1be8c:	1f 92       	push	r1
   1be8e:	0f 92       	push	r0
   1be90:	0f b6       	in	r0, 0x3f	; 63
   1be92:	0f 92       	push	r0
   1be94:	11 24       	eor	r1, r1
   1be96:	0b b6       	in	r0, 0x3b	; 59
   1be98:	0f 92       	push	r0
   1be9a:	2f 93       	push	r18
   1be9c:	3f 93       	push	r19
   1be9e:	4f 93       	push	r20
   1bea0:	5f 93       	push	r21
   1bea2:	6f 93       	push	r22
   1bea4:	7f 93       	push	r23
   1bea6:	8f 93       	push	r24
   1bea8:	9f 93       	push	r25
   1beaa:	af 93       	push	r26
   1beac:	bf 93       	push	r27
   1beae:	ef 93       	push	r30
   1beb0:	ff 93       	push	r31
   1beb2:	e0 91 58 02 	lds	r30, 0x0258	; 0x800258 <intFunc+0x6>
   1beb6:	f0 91 59 02 	lds	r31, 0x0259	; 0x800259 <intFunc+0x7>
   1beba:	19 95       	eicall
   1bebc:	ff 91       	pop	r31
   1bebe:	ef 91       	pop	r30
   1bec0:	bf 91       	pop	r27
   1bec2:	af 91       	pop	r26
   1bec4:	9f 91       	pop	r25
   1bec6:	8f 91       	pop	r24
   1bec8:	7f 91       	pop	r23
   1beca:	6f 91       	pop	r22
   1becc:	5f 91       	pop	r21
   1bece:	4f 91       	pop	r20
   1bed0:	3f 91       	pop	r19
   1bed2:	2f 91       	pop	r18
   1bed4:	0f 90       	pop	r0
   1bed6:	0b be       	out	0x3b, r0	; 59
   1bed8:	0f 90       	pop	r0
   1beda:	0f be       	out	0x3f, r0	; 63
   1bedc:	0f 90       	pop	r0
   1bede:	1f 90       	pop	r1
   1bee0:	18 95       	reti

0001bee2 <__vector_3>:
IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_4)
   1bee2:	1f 92       	push	r1
   1bee4:	0f 92       	push	r0
   1bee6:	0f b6       	in	r0, 0x3f	; 63
   1bee8:	0f 92       	push	r0
   1beea:	11 24       	eor	r1, r1
   1beec:	0b b6       	in	r0, 0x3b	; 59
   1beee:	0f 92       	push	r0
   1bef0:	2f 93       	push	r18
   1bef2:	3f 93       	push	r19
   1bef4:	4f 93       	push	r20
   1bef6:	5f 93       	push	r21
   1bef8:	6f 93       	push	r22
   1befa:	7f 93       	push	r23
   1befc:	8f 93       	push	r24
   1befe:	9f 93       	push	r25
   1bf00:	af 93       	push	r26
   1bf02:	bf 93       	push	r27
   1bf04:	ef 93       	push	r30
   1bf06:	ff 93       	push	r31
   1bf08:	e0 91 5a 02 	lds	r30, 0x025A	; 0x80025a <intFunc+0x8>
   1bf0c:	f0 91 5b 02 	lds	r31, 0x025B	; 0x80025b <intFunc+0x9>
   1bf10:	19 95       	eicall
   1bf12:	ff 91       	pop	r31
   1bf14:	ef 91       	pop	r30
   1bf16:	bf 91       	pop	r27
   1bf18:	af 91       	pop	r26
   1bf1a:	9f 91       	pop	r25
   1bf1c:	8f 91       	pop	r24
   1bf1e:	7f 91       	pop	r23
   1bf20:	6f 91       	pop	r22
   1bf22:	5f 91       	pop	r21
   1bf24:	4f 91       	pop	r20
   1bf26:	3f 91       	pop	r19
   1bf28:	2f 91       	pop	r18
   1bf2a:	0f 90       	pop	r0
   1bf2c:	0b be       	out	0x3b, r0	; 59
   1bf2e:	0f 90       	pop	r0
   1bf30:	0f be       	out	0x3f, r0	; 63
   1bf32:	0f 90       	pop	r0
   1bf34:	1f 90       	pop	r1
   1bf36:	18 95       	reti

0001bf38 <__vector_4>:
IMPLEMENT_ISR(INT3_vect, EXTERNAL_INT_5)
   1bf38:	1f 92       	push	r1
   1bf3a:	0f 92       	push	r0
   1bf3c:	0f b6       	in	r0, 0x3f	; 63
   1bf3e:	0f 92       	push	r0
   1bf40:	11 24       	eor	r1, r1
   1bf42:	0b b6       	in	r0, 0x3b	; 59
   1bf44:	0f 92       	push	r0
   1bf46:	2f 93       	push	r18
   1bf48:	3f 93       	push	r19
   1bf4a:	4f 93       	push	r20
   1bf4c:	5f 93       	push	r21
   1bf4e:	6f 93       	push	r22
   1bf50:	7f 93       	push	r23
   1bf52:	8f 93       	push	r24
   1bf54:	9f 93       	push	r25
   1bf56:	af 93       	push	r26
   1bf58:	bf 93       	push	r27
   1bf5a:	ef 93       	push	r30
   1bf5c:	ff 93       	push	r31
   1bf5e:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <intFunc+0xa>
   1bf62:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <intFunc+0xb>
   1bf66:	19 95       	eicall
   1bf68:	ff 91       	pop	r31
   1bf6a:	ef 91       	pop	r30
   1bf6c:	bf 91       	pop	r27
   1bf6e:	af 91       	pop	r26
   1bf70:	9f 91       	pop	r25
   1bf72:	8f 91       	pop	r24
   1bf74:	7f 91       	pop	r23
   1bf76:	6f 91       	pop	r22
   1bf78:	5f 91       	pop	r21
   1bf7a:	4f 91       	pop	r20
   1bf7c:	3f 91       	pop	r19
   1bf7e:	2f 91       	pop	r18
   1bf80:	0f 90       	pop	r0
   1bf82:	0b be       	out	0x3b, r0	; 59
   1bf84:	0f 90       	pop	r0
   1bf86:	0f be       	out	0x3f, r0	; 63
   1bf88:	0f 90       	pop	r0
   1bf8a:	1f 90       	pop	r1
   1bf8c:	18 95       	reti

0001bf8e <__vector_5>:
IMPLEMENT_ISR(INT4_vect, EXTERNAL_INT_0)
   1bf8e:	1f 92       	push	r1
   1bf90:	0f 92       	push	r0
   1bf92:	0f b6       	in	r0, 0x3f	; 63
   1bf94:	0f 92       	push	r0
   1bf96:	11 24       	eor	r1, r1
   1bf98:	0b b6       	in	r0, 0x3b	; 59
   1bf9a:	0f 92       	push	r0
   1bf9c:	2f 93       	push	r18
   1bf9e:	3f 93       	push	r19
   1bfa0:	4f 93       	push	r20
   1bfa2:	5f 93       	push	r21
   1bfa4:	6f 93       	push	r22
   1bfa6:	7f 93       	push	r23
   1bfa8:	8f 93       	push	r24
   1bfaa:	9f 93       	push	r25
   1bfac:	af 93       	push	r26
   1bfae:	bf 93       	push	r27
   1bfb0:	ef 93       	push	r30
   1bfb2:	ff 93       	push	r31
   1bfb4:	e0 91 52 02 	lds	r30, 0x0252	; 0x800252 <intFunc>
   1bfb8:	f0 91 53 02 	lds	r31, 0x0253	; 0x800253 <intFunc+0x1>
   1bfbc:	19 95       	eicall
   1bfbe:	ff 91       	pop	r31
   1bfc0:	ef 91       	pop	r30
   1bfc2:	bf 91       	pop	r27
   1bfc4:	af 91       	pop	r26
   1bfc6:	9f 91       	pop	r25
   1bfc8:	8f 91       	pop	r24
   1bfca:	7f 91       	pop	r23
   1bfcc:	6f 91       	pop	r22
   1bfce:	5f 91       	pop	r21
   1bfd0:	4f 91       	pop	r20
   1bfd2:	3f 91       	pop	r19
   1bfd4:	2f 91       	pop	r18
   1bfd6:	0f 90       	pop	r0
   1bfd8:	0b be       	out	0x3b, r0	; 59
   1bfda:	0f 90       	pop	r0
   1bfdc:	0f be       	out	0x3f, r0	; 63
   1bfde:	0f 90       	pop	r0
   1bfe0:	1f 90       	pop	r1
   1bfe2:	18 95       	reti

0001bfe4 <__vector_6>:
IMPLEMENT_ISR(INT5_vect, EXTERNAL_INT_1)
   1bfe4:	1f 92       	push	r1
   1bfe6:	0f 92       	push	r0
   1bfe8:	0f b6       	in	r0, 0x3f	; 63
   1bfea:	0f 92       	push	r0
   1bfec:	11 24       	eor	r1, r1
   1bfee:	0b b6       	in	r0, 0x3b	; 59
   1bff0:	0f 92       	push	r0
   1bff2:	2f 93       	push	r18
   1bff4:	3f 93       	push	r19
   1bff6:	4f 93       	push	r20
   1bff8:	5f 93       	push	r21
   1bffa:	6f 93       	push	r22
   1bffc:	7f 93       	push	r23
   1bffe:	8f 93       	push	r24
   1c000:	9f 93       	push	r25
   1c002:	af 93       	push	r26
   1c004:	bf 93       	push	r27
   1c006:	ef 93       	push	r30
   1c008:	ff 93       	push	r31
   1c00a:	e0 91 54 02 	lds	r30, 0x0254	; 0x800254 <intFunc+0x2>
   1c00e:	f0 91 55 02 	lds	r31, 0x0255	; 0x800255 <intFunc+0x3>
   1c012:	19 95       	eicall
   1c014:	ff 91       	pop	r31
   1c016:	ef 91       	pop	r30
   1c018:	bf 91       	pop	r27
   1c01a:	af 91       	pop	r26
   1c01c:	9f 91       	pop	r25
   1c01e:	8f 91       	pop	r24
   1c020:	7f 91       	pop	r23
   1c022:	6f 91       	pop	r22
   1c024:	5f 91       	pop	r21
   1c026:	4f 91       	pop	r20
   1c028:	3f 91       	pop	r19
   1c02a:	2f 91       	pop	r18
   1c02c:	0f 90       	pop	r0
   1c02e:	0b be       	out	0x3b, r0	; 59
   1c030:	0f 90       	pop	r0
   1c032:	0f be       	out	0x3f, r0	; 63
   1c034:	0f 90       	pop	r0
   1c036:	1f 90       	pop	r1
   1c038:	18 95       	reti

0001c03a <__vector_7>:
IMPLEMENT_ISR(INT6_vect, EXTERNAL_INT_6)
   1c03a:	1f 92       	push	r1
   1c03c:	0f 92       	push	r0
   1c03e:	0f b6       	in	r0, 0x3f	; 63
   1c040:	0f 92       	push	r0
   1c042:	11 24       	eor	r1, r1
   1c044:	0b b6       	in	r0, 0x3b	; 59
   1c046:	0f 92       	push	r0
   1c048:	2f 93       	push	r18
   1c04a:	3f 93       	push	r19
   1c04c:	4f 93       	push	r20
   1c04e:	5f 93       	push	r21
   1c050:	6f 93       	push	r22
   1c052:	7f 93       	push	r23
   1c054:	8f 93       	push	r24
   1c056:	9f 93       	push	r25
   1c058:	af 93       	push	r26
   1c05a:	bf 93       	push	r27
   1c05c:	ef 93       	push	r30
   1c05e:	ff 93       	push	r31
   1c060:	e0 91 5e 02 	lds	r30, 0x025E	; 0x80025e <intFunc+0xc>
   1c064:	f0 91 5f 02 	lds	r31, 0x025F	; 0x80025f <intFunc+0xd>
   1c068:	19 95       	eicall
   1c06a:	ff 91       	pop	r31
   1c06c:	ef 91       	pop	r30
   1c06e:	bf 91       	pop	r27
   1c070:	af 91       	pop	r26
   1c072:	9f 91       	pop	r25
   1c074:	8f 91       	pop	r24
   1c076:	7f 91       	pop	r23
   1c078:	6f 91       	pop	r22
   1c07a:	5f 91       	pop	r21
   1c07c:	4f 91       	pop	r20
   1c07e:	3f 91       	pop	r19
   1c080:	2f 91       	pop	r18
   1c082:	0f 90       	pop	r0
   1c084:	0b be       	out	0x3b, r0	; 59
   1c086:	0f 90       	pop	r0
   1c088:	0f be       	out	0x3f, r0	; 63
   1c08a:	0f 90       	pop	r0
   1c08c:	1f 90       	pop	r1
   1c08e:	18 95       	reti

0001c090 <__vector_8>:
IMPLEMENT_ISR(INT7_vect, EXTERNAL_INT_7)
   1c090:	1f 92       	push	r1
   1c092:	0f 92       	push	r0
   1c094:	0f b6       	in	r0, 0x3f	; 63
   1c096:	0f 92       	push	r0
   1c098:	11 24       	eor	r1, r1
   1c09a:	0b b6       	in	r0, 0x3b	; 59
   1c09c:	0f 92       	push	r0
   1c09e:	2f 93       	push	r18
   1c0a0:	3f 93       	push	r19
   1c0a2:	4f 93       	push	r20
   1c0a4:	5f 93       	push	r21
   1c0a6:	6f 93       	push	r22
   1c0a8:	7f 93       	push	r23
   1c0aa:	8f 93       	push	r24
   1c0ac:	9f 93       	push	r25
   1c0ae:	af 93       	push	r26
   1c0b0:	bf 93       	push	r27
   1c0b2:	ef 93       	push	r30
   1c0b4:	ff 93       	push	r31
   1c0b6:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <intFunc+0xe>
   1c0ba:	f0 91 61 02 	lds	r31, 0x0261	; 0x800261 <intFunc+0xf>
   1c0be:	19 95       	eicall
   1c0c0:	ff 91       	pop	r31
   1c0c2:	ef 91       	pop	r30
   1c0c4:	bf 91       	pop	r27
   1c0c6:	af 91       	pop	r26
   1c0c8:	9f 91       	pop	r25
   1c0ca:	8f 91       	pop	r24
   1c0cc:	7f 91       	pop	r23
   1c0ce:	6f 91       	pop	r22
   1c0d0:	5f 91       	pop	r21
   1c0d2:	4f 91       	pop	r20
   1c0d4:	3f 91       	pop	r19
   1c0d6:	2f 91       	pop	r18
   1c0d8:	0f 90       	pop	r0
   1c0da:	0b be       	out	0x3b, r0	; 59
   1c0dc:	0f 90       	pop	r0
   1c0de:	0f be       	out	0x3f, r0	; 63
   1c0e0:	0f 90       	pop	r0
   1c0e2:	1f 90       	pop	r1
   1c0e4:	18 95       	reti

0001c0e6 <analogRead>:
#if defined(__AVR_ATmega32U4__)
	if (pin >= 18) pin -= 18; // allow for channel or pin numbers
#endif
	pin = analogPinToChannel(pin);
#elif defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)
	if (pin >= 54) pin -= 54; // allow for channel or pin numbers
   1c0e6:	86 33       	cpi	r24, 0x36	; 54
   1c0e8:	08 f0       	brcs	.+2      	; 0x1c0ec <analogRead+0x6>
   1c0ea:	86 53       	subi	r24, 0x36	; 54
#endif

#if defined(ADCSRB) && defined(MUX5)
	// the MUX5 bit of ADCSRB selects whether we're reading from channels
	// 0 to 7 (MUX5 low) or 8 to 15 (MUX5 high).
	ADCSRB = (ADCSRB & ~(1 << MUX5)) | (((pin >> 3) & 0x01) << MUX5);
   1c0ec:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
   1c0f0:	28 2f       	mov	r18, r24
   1c0f2:	28 70       	andi	r18, 0x08	; 8
   1c0f4:	97 7f       	andi	r25, 0xF7	; 247
   1c0f6:	92 2b       	or	r25, r18
   1c0f8:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__TEXT_REGION_LENGTH__+0x7c007b>
	// to 0 (the default).
#if defined(ADMUX)
#if defined(__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)
	ADMUX = (analog_reference << 4) | (pin & 0x07);
#else
	ADMUX = (analog_reference << 6) | (pin & 0x07);
   1c0fc:	20 91 62 02 	lds	r18, 0x0262	; 0x800262 <analog_reference>
   1c100:	90 e4       	ldi	r25, 0x40	; 64
   1c102:	29 9f       	mul	r18, r25
   1c104:	90 01       	movw	r18, r0
   1c106:	11 24       	eor	r1, r1
   1c108:	87 70       	andi	r24, 0x07	; 7
   1c10a:	82 2b       	or	r24, r18
   1c10c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	// without a delay, we seem to read from the wrong channel
	//delay(1);

#if defined(ADCSRA) && defined(ADCL)
	// start the conversion
	sbi(ADCSRA, ADSC);
   1c110:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c114:	80 64       	ori	r24, 0x40	; 64
   1c116:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>

	// ADSC is cleared when the conversion finishes
	while (bit_is_set(ADCSRA, ADSC));
   1c11a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
   1c11e:	86 fd       	sbrc	r24, 6
   1c120:	fc cf       	rjmp	.-8      	; 0x1c11a <analogRead+0x34>

	// we have to read ADCL first; doing so locks both ADCL
	// and ADCH until ADCH is read.  reading ADCL second would
	// cause the results of each conversion to be discarded,
	// as ADCL and ADCH would be locked when it completed.
	low  = ADCL;
   1c122:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	high = ADCH;
   1c126:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	low  = 0;
	high = 0;
#endif

	// combine the two bytes
	return (high << 8) | low;
   1c12a:	90 e0       	ldi	r25, 0x00	; 0
}
   1c12c:	92 2b       	or	r25, r18
   1c12e:	08 95       	ret

0001c130 <_Z6randoml>:
    srandom(seed);
  }
}

long random(long howbig)
{
   1c130:	cf 92       	push	r12
   1c132:	df 92       	push	r13
   1c134:	ef 92       	push	r14
   1c136:	ff 92       	push	r15
  if (howbig == 0) {
   1c138:	61 15       	cp	r22, r1
   1c13a:	71 05       	cpc	r23, r1
   1c13c:	81 05       	cpc	r24, r1
   1c13e:	91 05       	cpc	r25, r1
   1c140:	41 f0       	breq	.+16     	; 0x1c152 <_Z6randoml+0x22>
   1c142:	6b 01       	movw	r12, r22
   1c144:	7c 01       	movw	r14, r24
    return 0;
  }
  return random() % howbig;
   1c146:	0e 94 19 e9 	call	0x1d232	; 0x1d232 <random>
   1c14a:	a7 01       	movw	r20, r14
   1c14c:	96 01       	movw	r18, r12
   1c14e:	bf d6       	rcall	.+3454   	; 0x1cece <__divmodsi4>
   1c150:	03 c0       	rjmp	.+6      	; 0x1c158 <_Z6randoml+0x28>
}

long random(long howbig)
{
  if (howbig == 0) {
    return 0;
   1c152:	60 e0       	ldi	r22, 0x00	; 0
   1c154:	70 e0       	ldi	r23, 0x00	; 0
   1c156:	cb 01       	movw	r24, r22
  }
  return random() % howbig;
}
   1c158:	ff 90       	pop	r15
   1c15a:	ef 90       	pop	r14
   1c15c:	df 90       	pop	r13
   1c15e:	cf 90       	pop	r12
   1c160:	08 95       	ret

0001c162 <_Z6randomll>:

long random(long howsmall, long howbig)
{
   1c162:	cf 92       	push	r12
   1c164:	df 92       	push	r13
   1c166:	ef 92       	push	r14
   1c168:	ff 92       	push	r15
   1c16a:	0f 93       	push	r16
   1c16c:	1f 93       	push	r17
  if (howsmall >= howbig) {
   1c16e:	62 17       	cp	r22, r18
   1c170:	73 07       	cpc	r23, r19
   1c172:	84 07       	cpc	r24, r20
   1c174:	95 07       	cpc	r25, r21
   1c176:	7c f4       	brge	.+30     	; 0x1c196 <_Z6randomll+0x34>
   1c178:	89 01       	movw	r16, r18
   1c17a:	9a 01       	movw	r18, r20
   1c17c:	6b 01       	movw	r12, r22
   1c17e:	7c 01       	movw	r14, r24
    return howsmall;
  }
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
   1c180:	c9 01       	movw	r24, r18
   1c182:	b8 01       	movw	r22, r16
   1c184:	6c 19       	sub	r22, r12
   1c186:	7d 09       	sbc	r23, r13
   1c188:	8e 09       	sbc	r24, r14
   1c18a:	9f 09       	sbc	r25, r15
   1c18c:	d1 df       	rcall	.-94     	; 0x1c130 <_Z6randoml>
   1c18e:	6c 0d       	add	r22, r12
   1c190:	7d 1d       	adc	r23, r13
   1c192:	8e 1d       	adc	r24, r14
   1c194:	9f 1d       	adc	r25, r15
}
   1c196:	1f 91       	pop	r17
   1c198:	0f 91       	pop	r16
   1c19a:	ff 90       	pop	r15
   1c19c:	ef 90       	pop	r14
   1c19e:	df 90       	pop	r13
   1c1a0:	cf 90       	pop	r12
   1c1a2:	08 95       	ret

0001c1a4 <_ZN12RHGenericSPI15attachInterruptEv>:
#endif

    /// SPI Configuration methods
    /// Enable SPI interrupts (if supported)
    /// This can be used in an SPI slave to indicate when an SPI message has been received
    virtual void attachInterrupt() {};
   1c1a4:	08 95       	ret

0001c1a6 <_ZN12RHGenericSPI15detachInterruptEv>:

    /// Disable SPI interrupts (if supported)
    /// This can be used to diable the SPI interrupt in slaves where that is supported.
    virtual void detachInterrupt() {};
   1c1a6:	08 95       	ret

0001c1a8 <_ZN12RHGenericSPI16beginTransactionEv>:
    /// Signal the start of an SPI transaction that must not be interrupted by other SPI actions
    /// In subclasses that support transactions this will ensure that other SPI transactions
    /// are blocked until this one is completed by endTransaction().
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void beginTransaction(){}
   1c1a8:	08 95       	ret

0001c1aa <_ZN12RHGenericSPI14endTransactionEv>:

    /// Signal the end of an SPI transaction
    /// Base does nothing
    /// Might be overridden in subclass
    virtual void endTransaction(){}
   1c1aa:	08 95       	ret

0001c1ac <_ZN12RHGenericSPI14usingInterruptEh>:
    /// Tells the SPI support software that SPI transactions will occur with the interrupt
    /// handler assocated with interruptNumber
    /// Base does nothing
    /// Might be overridden in subclass
    /// \param[in] interruptNumber The number of the interrupt
    virtual void usingInterrupt(uint8_t interruptNumber){
   1c1ac:	08 95       	ret

0001c1ae <_ZN12RHGenericSPI11setBitOrderENS_8BitOrderE>:
{
}

void RHGenericSPI::setBitOrder(BitOrder bitOrder)
{
    _bitOrder = bitOrder;
   1c1ae:	fc 01       	movw	r30, r24
   1c1b0:	63 83       	std	Z+3, r22	; 0x03
   1c1b2:	08 95       	ret

0001c1b4 <_ZN12RHGenericSPI11setDataModeENS_8DataModeE>:
}

void RHGenericSPI::setDataMode(DataMode dataMode)
{
    _dataMode = dataMode; 
   1c1b4:	fc 01       	movw	r30, r24
   1c1b6:	64 83       	std	Z+4, r22	; 0x04
   1c1b8:	08 95       	ret

0001c1ba <_ZN12RHGenericSPI12setFrequencyENS_9FrequencyE>:
}

void RHGenericSPI::setFrequency(Frequency frequency)
{
    _frequency = frequency;
   1c1ba:	fc 01       	movw	r30, r24
   1c1bc:	62 83       	std	Z+2, r22	; 0x02
   1c1be:	08 95       	ret

0001c1c0 <_ZN12RHGenericSPIC1ENS_9FrequencyENS_8BitOrderENS_8DataModeE>:
// Contributed by Joanna Rutkowska
// $Id: RHGenericSPI.cpp,v 1.2 2014/04/12 05:26:05 mikem Exp $

#include <RHGenericSPI.h>

RHGenericSPI::RHGenericSPI(Frequency frequency, BitOrder bitOrder, DataMode dataMode)
   1c1c0:	fc 01       	movw	r30, r24
    :
    _frequency(frequency),
    _bitOrder(bitOrder),
    _dataMode(dataMode)
   1c1c2:	8d e8       	ldi	r24, 0x8D	; 141
   1c1c4:	98 e0       	ldi	r25, 0x08	; 8
   1c1c6:	91 83       	std	Z+1, r25	; 0x01
   1c1c8:	80 83       	st	Z, r24
   1c1ca:	62 83       	std	Z+2, r22	; 0x02
   1c1cc:	43 83       	std	Z+3, r20	; 0x03
   1c1ce:	24 83       	std	Z+4, r18	; 0x04
   1c1d0:	08 95       	ret

0001c1d2 <_ZN11RHSPIDriver4initEv>:
    return status;
}

void RHSPIDriver::setSlaveSelectPin(uint8_t slaveSelectPin)
{
    _slaveSelectPin = slaveSelectPin;
   1c1d2:	cf 93       	push	r28
   1c1d4:	df 93       	push	r29
   1c1d6:	ec 01       	movw	r28, r24
   1c1d8:	88 8d       	ldd	r24, Y+24	; 0x18
   1c1da:	99 8d       	ldd	r25, Y+25	; 0x19
   1c1dc:	dc 01       	movw	r26, r24
   1c1de:	ed 91       	ld	r30, X+
   1c1e0:	fc 91       	ld	r31, X
   1c1e2:	06 80       	ldd	r0, Z+6	; 0x06
   1c1e4:	f7 81       	ldd	r31, Z+7	; 0x07
   1c1e6:	e0 2d       	mov	r30, r0
   1c1e8:	19 95       	eicall
   1c1ea:	8a 8d       	ldd	r24, Y+26	; 0x1a
   1c1ec:	8f 3f       	cpi	r24, 0xFF	; 255
   1c1ee:	19 f0       	breq	.+6      	; 0x1c1f6 <_ZN11RHSPIDriver4initEv+0x24>
   1c1f0:	61 e0       	ldi	r22, 0x01	; 1
   1c1f2:	0e 94 6d d4 	call	0x1a8da	; 0x1a8da <pinMode>
   1c1f6:	e8 81       	ld	r30, Y
   1c1f8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c1fa:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c1fc:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c1fe:	e0 2d       	mov	r30, r0
   1c200:	ce 01       	movw	r24, r28
   1c202:	19 95       	eicall
   1c204:	64 e6       	ldi	r22, 0x64	; 100
   1c206:	70 e0       	ldi	r23, 0x00	; 0
   1c208:	80 e0       	ldi	r24, 0x00	; 0
   1c20a:	90 e0       	ldi	r25, 0x00	; 0
   1c20c:	0e 94 70 d3 	call	0x1a6e0	; 0x1a6e0 <delay>
   1c210:	81 e0       	ldi	r24, 0x01	; 1
   1c212:	df 91       	pop	r29
   1c214:	cf 91       	pop	r28
   1c216:	08 95       	ret

0001c218 <_ZN11RHSPIDriver11selectSlaveEv>:
   1c218:	60 e0       	ldi	r22, 0x00	; 0
   1c21a:	fc 01       	movw	r30, r24
   1c21c:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c21e:	0c 94 a9 d4 	jmp	0x1a952	; 0x1a952 <digitalWrite>

0001c222 <_ZN11RHSPIDriver13deselectSlaveEv>:
   1c222:	61 e0       	ldi	r22, 0x01	; 1
   1c224:	fc 01       	movw	r30, r24
   1c226:	82 8d       	ldd	r24, Z+26	; 0x1a
   1c228:	0c 94 a9 d4 	jmp	0x1a952	; 0x1a952 <digitalWrite>

0001c22c <_ZN11RHSPIDriverC1EhR12RHGenericSPI>:
   1c22c:	ef 92       	push	r14
   1c22e:	ff 92       	push	r15
   1c230:	1f 93       	push	r17
   1c232:	cf 93       	push	r28
   1c234:	df 93       	push	r29
   1c236:	ec 01       	movw	r28, r24
   1c238:	16 2f       	mov	r17, r22
   1c23a:	7a 01       	movw	r14, r20
   1c23c:	0e 94 2c d8 	call	0x1b058	; 0x1b058 <_ZN15RHGenericDriverC1Ev>
   1c240:	87 ea       	ldi	r24, 0xA7	; 167
   1c242:	98 e0       	ldi	r25, 0x08	; 8
   1c244:	99 83       	std	Y+1, r25	; 0x01
   1c246:	88 83       	st	Y, r24
   1c248:	f9 8e       	std	Y+25, r15	; 0x19
   1c24a:	e8 8e       	std	Y+24, r14	; 0x18
   1c24c:	1a 8f       	std	Y+26, r17	; 0x1a
   1c24e:	df 91       	pop	r29
   1c250:	cf 91       	pop	r28
   1c252:	1f 91       	pop	r17
   1c254:	ff 90       	pop	r15
   1c256:	ef 90       	pop	r14
   1c258:	08 95       	ret

0001c25a <_ZN11RHSPIDriver7spiReadEh>:
   1c25a:	0f 93       	push	r16
   1c25c:	1f 93       	push	r17
   1c25e:	cf 93       	push	r28
   1c260:	df 93       	push	r29
   1c262:	ec 01       	movw	r28, r24
   1c264:	16 2f       	mov	r17, r22
   1c266:	0f b7       	in	r16, 0x3f	; 63
   1c268:	f8 94       	cli
   1c26a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c26c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c26e:	dc 01       	movw	r26, r24
   1c270:	ed 91       	ld	r30, X+
   1c272:	fc 91       	ld	r31, X
   1c274:	00 88       	ldd	r0, Z+16	; 0x10
   1c276:	f1 89       	ldd	r31, Z+17	; 0x11
   1c278:	e0 2d       	mov	r30, r0
   1c27a:	19 95       	eicall
   1c27c:	e8 81       	ld	r30, Y
   1c27e:	f9 81       	ldd	r31, Y+1	; 0x01
   1c280:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c282:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c284:	e0 2d       	mov	r30, r0
   1c286:	ce 01       	movw	r24, r28
   1c288:	19 95       	eicall
   1c28a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c28c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c28e:	61 2f       	mov	r22, r17
   1c290:	6f 77       	andi	r22, 0x7F	; 127
   1c292:	dc 01       	movw	r26, r24
   1c294:	ed 91       	ld	r30, X+
   1c296:	fc 91       	ld	r31, X
   1c298:	01 90       	ld	r0, Z+
   1c29a:	f0 81       	ld	r31, Z
   1c29c:	e0 2d       	mov	r30, r0
   1c29e:	19 95       	eicall
   1c2a0:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2a2:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2a4:	dc 01       	movw	r26, r24
   1c2a6:	ed 91       	ld	r30, X+
   1c2a8:	fc 91       	ld	r31, X
   1c2aa:	01 90       	ld	r0, Z+
   1c2ac:	f0 81       	ld	r31, Z
   1c2ae:	e0 2d       	mov	r30, r0
   1c2b0:	60 e0       	ldi	r22, 0x00	; 0
   1c2b2:	19 95       	eicall
   1c2b4:	18 2f       	mov	r17, r24
   1c2b6:	e8 81       	ld	r30, Y
   1c2b8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c2ba:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c2bc:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c2be:	e0 2d       	mov	r30, r0
   1c2c0:	ce 01       	movw	r24, r28
   1c2c2:	19 95       	eicall
   1c2c4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2c6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2c8:	dc 01       	movw	r26, r24
   1c2ca:	ed 91       	ld	r30, X+
   1c2cc:	fc 91       	ld	r31, X
   1c2ce:	02 88       	ldd	r0, Z+18	; 0x12
   1c2d0:	f3 89       	ldd	r31, Z+19	; 0x13
   1c2d2:	e0 2d       	mov	r30, r0
   1c2d4:	19 95       	eicall
   1c2d6:	0f bf       	out	0x3f, r16	; 63
   1c2d8:	81 2f       	mov	r24, r17
   1c2da:	df 91       	pop	r29
   1c2dc:	cf 91       	pop	r28
   1c2de:	1f 91       	pop	r17
   1c2e0:	0f 91       	pop	r16
   1c2e2:	08 95       	ret

0001c2e4 <_ZN11RHSPIDriver8spiWriteEhh>:
   1c2e4:	ff 92       	push	r15
   1c2e6:	0f 93       	push	r16
   1c2e8:	1f 93       	push	r17
   1c2ea:	cf 93       	push	r28
   1c2ec:	df 93       	push	r29
   1c2ee:	ec 01       	movw	r28, r24
   1c2f0:	16 2f       	mov	r17, r22
   1c2f2:	f4 2e       	mov	r15, r20
   1c2f4:	0f b7       	in	r16, 0x3f	; 63
   1c2f6:	f8 94       	cli
   1c2f8:	88 8d       	ldd	r24, Y+24	; 0x18
   1c2fa:	99 8d       	ldd	r25, Y+25	; 0x19
   1c2fc:	dc 01       	movw	r26, r24
   1c2fe:	ed 91       	ld	r30, X+
   1c300:	fc 91       	ld	r31, X
   1c302:	00 88       	ldd	r0, Z+16	; 0x10
   1c304:	f1 89       	ldd	r31, Z+17	; 0x11
   1c306:	e0 2d       	mov	r30, r0
   1c308:	19 95       	eicall
   1c30a:	e8 81       	ld	r30, Y
   1c30c:	f9 81       	ldd	r31, Y+1	; 0x01
   1c30e:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c310:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c312:	e0 2d       	mov	r30, r0
   1c314:	ce 01       	movw	r24, r28
   1c316:	19 95       	eicall
   1c318:	88 8d       	ldd	r24, Y+24	; 0x18
   1c31a:	99 8d       	ldd	r25, Y+25	; 0x19
   1c31c:	61 2f       	mov	r22, r17
   1c31e:	60 68       	ori	r22, 0x80	; 128
   1c320:	dc 01       	movw	r26, r24
   1c322:	ed 91       	ld	r30, X+
   1c324:	fc 91       	ld	r31, X
   1c326:	01 90       	ld	r0, Z+
   1c328:	f0 81       	ld	r31, Z
   1c32a:	e0 2d       	mov	r30, r0
   1c32c:	19 95       	eicall
   1c32e:	18 2f       	mov	r17, r24
   1c330:	88 8d       	ldd	r24, Y+24	; 0x18
   1c332:	99 8d       	ldd	r25, Y+25	; 0x19
   1c334:	dc 01       	movw	r26, r24
   1c336:	ed 91       	ld	r30, X+
   1c338:	fc 91       	ld	r31, X
   1c33a:	01 90       	ld	r0, Z+
   1c33c:	f0 81       	ld	r31, Z
   1c33e:	e0 2d       	mov	r30, r0
   1c340:	6f 2d       	mov	r22, r15
   1c342:	19 95       	eicall
   1c344:	e8 81       	ld	r30, Y
   1c346:	f9 81       	ldd	r31, Y+1	; 0x01
   1c348:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c34a:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c34c:	e0 2d       	mov	r30, r0
   1c34e:	ce 01       	movw	r24, r28
   1c350:	19 95       	eicall
   1c352:	88 8d       	ldd	r24, Y+24	; 0x18
   1c354:	99 8d       	ldd	r25, Y+25	; 0x19
   1c356:	dc 01       	movw	r26, r24
   1c358:	ed 91       	ld	r30, X+
   1c35a:	fc 91       	ld	r31, X
   1c35c:	02 88       	ldd	r0, Z+18	; 0x12
   1c35e:	f3 89       	ldd	r31, Z+19	; 0x13
   1c360:	e0 2d       	mov	r30, r0
   1c362:	19 95       	eicall
   1c364:	0f bf       	out	0x3f, r16	; 63
   1c366:	81 2f       	mov	r24, r17
   1c368:	df 91       	pop	r29
   1c36a:	cf 91       	pop	r28
   1c36c:	1f 91       	pop	r17
   1c36e:	0f 91       	pop	r16
   1c370:	ff 90       	pop	r15
   1c372:	08 95       	ret

0001c374 <_ZN11RHSPIDriver12spiBurstReadEhPhh>:
   1c374:	bf 92       	push	r11
   1c376:	cf 92       	push	r12
   1c378:	df 92       	push	r13
   1c37a:	ef 92       	push	r14
   1c37c:	ff 92       	push	r15
   1c37e:	0f 93       	push	r16
   1c380:	1f 93       	push	r17
   1c382:	cf 93       	push	r28
   1c384:	df 93       	push	r29
   1c386:	ec 01       	movw	r28, r24
   1c388:	06 2f       	mov	r16, r22
   1c38a:	b4 2e       	mov	r11, r20
   1c38c:	c5 2e       	mov	r12, r21
   1c38e:	12 2f       	mov	r17, r18
   1c390:	df b6       	in	r13, 0x3f	; 63
   1c392:	f8 94       	cli
   1c394:	88 8d       	ldd	r24, Y+24	; 0x18
   1c396:	99 8d       	ldd	r25, Y+25	; 0x19
   1c398:	dc 01       	movw	r26, r24
   1c39a:	ed 91       	ld	r30, X+
   1c39c:	fc 91       	ld	r31, X
   1c39e:	00 88       	ldd	r0, Z+16	; 0x10
   1c3a0:	f1 89       	ldd	r31, Z+17	; 0x11
   1c3a2:	e0 2d       	mov	r30, r0
   1c3a4:	19 95       	eicall
   1c3a6:	e8 81       	ld	r30, Y
   1c3a8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c3aa:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c3ac:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c3ae:	e0 2d       	mov	r30, r0
   1c3b0:	ce 01       	movw	r24, r28
   1c3b2:	19 95       	eicall
   1c3b4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3b6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3b8:	60 2f       	mov	r22, r16
   1c3ba:	6f 77       	andi	r22, 0x7F	; 127
   1c3bc:	dc 01       	movw	r26, r24
   1c3be:	ed 91       	ld	r30, X+
   1c3c0:	fc 91       	ld	r31, X
   1c3c2:	01 90       	ld	r0, Z+
   1c3c4:	f0 81       	ld	r31, Z
   1c3c6:	e0 2d       	mov	r30, r0
   1c3c8:	19 95       	eicall
   1c3ca:	08 2f       	mov	r16, r24
   1c3cc:	eb 2c       	mov	r14, r11
   1c3ce:	fc 2c       	mov	r15, r12
   1c3d0:	11 23       	and	r17, r17
   1c3d2:	79 f0       	breq	.+30     	; 0x1c3f2 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x7e>
   1c3d4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c3d6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c3d8:	dc 01       	movw	r26, r24
   1c3da:	ed 91       	ld	r30, X+
   1c3dc:	fc 91       	ld	r31, X
   1c3de:	01 90       	ld	r0, Z+
   1c3e0:	f0 81       	ld	r31, Z
   1c3e2:	e0 2d       	mov	r30, r0
   1c3e4:	60 e0       	ldi	r22, 0x00	; 0
   1c3e6:	19 95       	eicall
   1c3e8:	f7 01       	movw	r30, r14
   1c3ea:	81 93       	st	Z+, r24
   1c3ec:	7f 01       	movw	r14, r30
   1c3ee:	11 50       	subi	r17, 0x01	; 1
   1c3f0:	ef cf       	rjmp	.-34     	; 0x1c3d0 <_ZN11RHSPIDriver12spiBurstReadEhPhh+0x5c>
   1c3f2:	e8 81       	ld	r30, Y
   1c3f4:	f9 81       	ldd	r31, Y+1	; 0x01
   1c3f6:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c3f8:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c3fa:	e0 2d       	mov	r30, r0
   1c3fc:	ce 01       	movw	r24, r28
   1c3fe:	19 95       	eicall
   1c400:	88 8d       	ldd	r24, Y+24	; 0x18
   1c402:	99 8d       	ldd	r25, Y+25	; 0x19
   1c404:	dc 01       	movw	r26, r24
   1c406:	ed 91       	ld	r30, X+
   1c408:	fc 91       	ld	r31, X
   1c40a:	02 88       	ldd	r0, Z+18	; 0x12
   1c40c:	f3 89       	ldd	r31, Z+19	; 0x13
   1c40e:	e0 2d       	mov	r30, r0
   1c410:	19 95       	eicall
   1c412:	df be       	out	0x3f, r13	; 63
   1c414:	80 2f       	mov	r24, r16
   1c416:	df 91       	pop	r29
   1c418:	cf 91       	pop	r28
   1c41a:	1f 91       	pop	r17
   1c41c:	0f 91       	pop	r16
   1c41e:	ff 90       	pop	r15
   1c420:	ef 90       	pop	r14
   1c422:	df 90       	pop	r13
   1c424:	cf 90       	pop	r12
   1c426:	bf 90       	pop	r11
   1c428:	08 95       	ret

0001c42a <_ZN11RHSPIDriver13spiBurstWriteEhPKhh>:
   1c42a:	bf 92       	push	r11
   1c42c:	cf 92       	push	r12
   1c42e:	df 92       	push	r13
   1c430:	ef 92       	push	r14
   1c432:	ff 92       	push	r15
   1c434:	0f 93       	push	r16
   1c436:	1f 93       	push	r17
   1c438:	cf 93       	push	r28
   1c43a:	df 93       	push	r29
   1c43c:	ec 01       	movw	r28, r24
   1c43e:	06 2f       	mov	r16, r22
   1c440:	b4 2e       	mov	r11, r20
   1c442:	c5 2e       	mov	r12, r21
   1c444:	12 2f       	mov	r17, r18
   1c446:	df b6       	in	r13, 0x3f	; 63
   1c448:	f8 94       	cli
   1c44a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c44c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c44e:	dc 01       	movw	r26, r24
   1c450:	ed 91       	ld	r30, X+
   1c452:	fc 91       	ld	r31, X
   1c454:	00 88       	ldd	r0, Z+16	; 0x10
   1c456:	f1 89       	ldd	r31, Z+17	; 0x11
   1c458:	e0 2d       	mov	r30, r0
   1c45a:	19 95       	eicall
   1c45c:	e8 81       	ld	r30, Y
   1c45e:	f9 81       	ldd	r31, Y+1	; 0x01
   1c460:	04 ac       	ldd	r0, Z+60	; 0x3c
   1c462:	f5 ad       	ldd	r31, Z+61	; 0x3d
   1c464:	e0 2d       	mov	r30, r0
   1c466:	ce 01       	movw	r24, r28
   1c468:	19 95       	eicall
   1c46a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c46c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c46e:	60 2f       	mov	r22, r16
   1c470:	60 68       	ori	r22, 0x80	; 128
   1c472:	dc 01       	movw	r26, r24
   1c474:	ed 91       	ld	r30, X+
   1c476:	fc 91       	ld	r31, X
   1c478:	01 90       	ld	r0, Z+
   1c47a:	f0 81       	ld	r31, Z
   1c47c:	e0 2d       	mov	r30, r0
   1c47e:	19 95       	eicall
   1c480:	08 2f       	mov	r16, r24
   1c482:	eb 2c       	mov	r14, r11
   1c484:	fc 2c       	mov	r15, r12
   1c486:	11 23       	and	r17, r17
   1c488:	71 f0       	breq	.+28     	; 0x1c4a6 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x7c>
   1c48a:	88 8d       	ldd	r24, Y+24	; 0x18
   1c48c:	99 8d       	ldd	r25, Y+25	; 0x19
   1c48e:	f7 01       	movw	r30, r14
   1c490:	61 91       	ld	r22, Z+
   1c492:	7f 01       	movw	r14, r30
   1c494:	dc 01       	movw	r26, r24
   1c496:	ed 91       	ld	r30, X+
   1c498:	fc 91       	ld	r31, X
   1c49a:	01 90       	ld	r0, Z+
   1c49c:	f0 81       	ld	r31, Z
   1c49e:	e0 2d       	mov	r30, r0
   1c4a0:	19 95       	eicall
   1c4a2:	11 50       	subi	r17, 0x01	; 1
   1c4a4:	f0 cf       	rjmp	.-32     	; 0x1c486 <_ZN11RHSPIDriver13spiBurstWriteEhPKhh+0x5c>
   1c4a6:	e8 81       	ld	r30, Y
   1c4a8:	f9 81       	ldd	r31, Y+1	; 0x01
   1c4aa:	06 ac       	ldd	r0, Z+62	; 0x3e
   1c4ac:	f7 ad       	ldd	r31, Z+63	; 0x3f
   1c4ae:	e0 2d       	mov	r30, r0
   1c4b0:	ce 01       	movw	r24, r28
   1c4b2:	19 95       	eicall
   1c4b4:	88 8d       	ldd	r24, Y+24	; 0x18
   1c4b6:	99 8d       	ldd	r25, Y+25	; 0x19
   1c4b8:	dc 01       	movw	r26, r24
   1c4ba:	ed 91       	ld	r30, X+
   1c4bc:	fc 91       	ld	r31, X
   1c4be:	02 88       	ldd	r0, Z+18	; 0x12
   1c4c0:	f3 89       	ldd	r31, Z+19	; 0x13
   1c4c2:	e0 2d       	mov	r30, r0
   1c4c4:	19 95       	eicall
   1c4c6:	df be       	out	0x3f, r13	; 63
   1c4c8:	80 2f       	mov	r24, r16
   1c4ca:	df 91       	pop	r29
   1c4cc:	cf 91       	pop	r28
   1c4ce:	1f 91       	pop	r17
   1c4d0:	0f 91       	pop	r16
   1c4d2:	ff 90       	pop	r15
   1c4d4:	ef 90       	pop	r14
   1c4d6:	df 90       	pop	r13
   1c4d8:	cf 90       	pop	r12
   1c4da:	bf 90       	pop	r11
   1c4dc:	08 95       	ret

0001c4de <_ZN11RHSPIDriver17spiUsingInterruptEh>:
}

void RHSPIDriver::spiUsingInterrupt(uint8_t interruptNumber)
{
    _spi.usingInterrupt(interruptNumber);
   1c4de:	dc 01       	movw	r26, r24
   1c4e0:	58 96       	adiw	r26, 0x18	; 24
   1c4e2:	8d 91       	ld	r24, X+
   1c4e4:	9c 91       	ld	r25, X
   1c4e6:	59 97       	sbiw	r26, 0x19	; 25
   1c4e8:	dc 01       	movw	r26, r24
   1c4ea:	ed 91       	ld	r30, X+
   1c4ec:	fc 91       	ld	r31, X
   1c4ee:	04 88       	ldd	r0, Z+20	; 0x14
   1c4f0:	f5 89       	ldd	r31, Z+21	; 0x15
   1c4f2:	e0 2d       	mov	r30, r0
   1c4f4:	19 94       	eijmp

0001c4f6 <twi_init>:
  bool flag = twi_timed_out_flag;
  if (clear_flag){
    twi_timed_out_flag = false;
  }
  return(flag);
}
   1c4f6:	10 92 cd 1a 	sts	0x1ACD, r1	; 0x801acd <twi_state>
   1c4fa:	81 e0       	ldi	r24, 0x01	; 1
   1c4fc:	80 93 cb 1a 	sts	0x1ACB, r24	; 0x801acb <twi_sendStop>
   1c500:	10 92 ca 1a 	sts	0x1ACA, r1	; 0x801aca <twi_inRepStart>
   1c504:	61 e0       	ldi	r22, 0x01	; 1
   1c506:	84 e1       	ldi	r24, 0x14	; 20
   1c508:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1c50c:	61 e0       	ldi	r22, 0x01	; 1
   1c50e:	85 e1       	ldi	r24, 0x15	; 21
   1c510:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1c514:	e9 eb       	ldi	r30, 0xB9	; 185
   1c516:	f0 e0       	ldi	r31, 0x00	; 0
   1c518:	80 81       	ld	r24, Z
   1c51a:	8e 7f       	andi	r24, 0xFE	; 254
   1c51c:	80 83       	st	Z, r24
   1c51e:	80 81       	ld	r24, Z
   1c520:	8d 7f       	andi	r24, 0xFD	; 253
   1c522:	80 83       	st	Z, r24
   1c524:	88 e4       	ldi	r24, 0x48	; 72
   1c526:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c52a:	85 e4       	ldi	r24, 0x45	; 69
   1c52c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c530:	08 95       	ret

0001c532 <twi_disable>:
   1c532:	ec eb       	ldi	r30, 0xBC	; 188
   1c534:	f0 e0       	ldi	r31, 0x00	; 0
   1c536:	80 81       	ld	r24, Z
   1c538:	8a 7b       	andi	r24, 0xBA	; 186
   1c53a:	80 83       	st	Z, r24
   1c53c:	60 e0       	ldi	r22, 0x00	; 0
   1c53e:	84 e1       	ldi	r24, 0x14	; 20
   1c540:	0e 94 a9 d4 	call	0x1a952	; 0x1a952 <digitalWrite>
   1c544:	60 e0       	ldi	r22, 0x00	; 0
   1c546:	85 e1       	ldi	r24, 0x15	; 21
   1c548:	0c 94 a9 d4 	jmp	0x1a952	; 0x1a952 <digitalWrite>

0001c54c <twi_transmit>:
   1c54c:	40 91 7c 1a 	lds	r20, 0x1A7C	; 0x801a7c <twi_txBufferLength>
   1c550:	26 2f       	mov	r18, r22
   1c552:	30 e0       	ldi	r19, 0x00	; 0
   1c554:	24 0f       	add	r18, r20
   1c556:	31 1d       	adc	r19, r1
   1c558:	21 32       	cpi	r18, 0x21	; 33
   1c55a:	31 05       	cpc	r19, r1
   1c55c:	dc f4       	brge	.+54     	; 0x1c594 <twi_transmit+0x48>
   1c55e:	20 91 cd 1a 	lds	r18, 0x1ACD	; 0x801acd <twi_state>
   1c562:	24 30       	cpi	r18, 0x04	; 4
   1c564:	c9 f4       	brne	.+50     	; 0x1c598 <twi_transmit+0x4c>
   1c566:	fc 01       	movw	r30, r24
   1c568:	80 e0       	ldi	r24, 0x00	; 0
   1c56a:	90 e0       	ldi	r25, 0x00	; 0
   1c56c:	86 17       	cp	r24, r22
   1c56e:	58 f4       	brcc	.+22     	; 0x1c586 <twi_transmit+0x3a>
   1c570:	30 91 7c 1a 	lds	r19, 0x1A7C	; 0x801a7c <twi_txBufferLength>
   1c574:	21 91       	ld	r18, Z+
   1c576:	dc 01       	movw	r26, r24
   1c578:	a2 58       	subi	r26, 0x82	; 130
   1c57a:	b5 4e       	sbci	r27, 0xE5	; 229
   1c57c:	a3 0f       	add	r26, r19
   1c57e:	b1 1d       	adc	r27, r1
   1c580:	2c 93       	st	X, r18
   1c582:	01 96       	adiw	r24, 0x01	; 1
   1c584:	f3 cf       	rjmp	.-26     	; 0x1c56c <twi_transmit+0x20>
   1c586:	80 91 7c 1a 	lds	r24, 0x1A7C	; 0x801a7c <twi_txBufferLength>
   1c58a:	68 0f       	add	r22, r24
   1c58c:	60 93 7c 1a 	sts	0x1A7C, r22	; 0x801a7c <twi_txBufferLength>
   1c590:	80 e0       	ldi	r24, 0x00	; 0
   1c592:	08 95       	ret
   1c594:	81 e0       	ldi	r24, 0x01	; 1
   1c596:	08 95       	ret
   1c598:	82 e0       	ldi	r24, 0x02	; 2
   1c59a:	08 95       	ret

0001c59c <twi_attachSlaveRxEvent>:
   1c59c:	90 93 c1 1a 	sts	0x1AC1, r25	; 0x801ac1 <twi_onSlaveReceive+0x1>
   1c5a0:	80 93 c0 1a 	sts	0x1AC0, r24	; 0x801ac0 <twi_onSlaveReceive>
   1c5a4:	08 95       	ret

0001c5a6 <twi_attachSlaveTxEvent>:
   1c5a6:	90 93 c3 1a 	sts	0x1AC3, r25	; 0x801ac3 <twi_onSlaveTransmit+0x1>
   1c5aa:	80 93 c2 1a 	sts	0x1AC2, r24	; 0x801ac2 <twi_onSlaveTransmit>
   1c5ae:	08 95       	ret

0001c5b0 <twi_releaseBus>:
   1c5b0:	85 ec       	ldi	r24, 0xC5	; 197
   1c5b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c5b6:	10 92 cd 1a 	sts	0x1ACD, r1	; 0x801acd <twi_state>
   1c5ba:	08 95       	ret

0001c5bc <twi_handleTimeout>:
   1c5bc:	cf 93       	push	r28
   1c5be:	df 93       	push	r29
   1c5c0:	91 e0       	ldi	r25, 0x01	; 1
   1c5c2:	90 93 c5 1a 	sts	0x1AC5, r25	; 0x801ac5 <twi_timed_out_flag>
   1c5c6:	88 23       	and	r24, r24
   1c5c8:	51 f0       	breq	.+20     	; 0x1c5de <twi_handleTimeout+0x22>
   1c5ca:	c0 91 b8 00 	lds	r28, 0x00B8	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c5ce:	d0 91 ba 00 	lds	r29, 0x00BA	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c5d2:	af df       	rcall	.-162    	; 0x1c532 <twi_disable>
   1c5d4:	90 df       	rcall	.-224    	; 0x1c4f6 <twi_init>
   1c5d6:	d0 93 ba 00 	sts	0x00BA, r29	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
   1c5da:	c0 93 b8 00 	sts	0x00B8, r28	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7c00b8>
   1c5de:	df 91       	pop	r29
   1c5e0:	cf 91       	pop	r28
   1c5e2:	08 95       	ret

0001c5e4 <twi_writeTo>:
   1c5e4:	4f 92       	push	r4
   1c5e6:	5f 92       	push	r5
   1c5e8:	6f 92       	push	r6
   1c5ea:	7f 92       	push	r7
   1c5ec:	8f 92       	push	r8
   1c5ee:	9f 92       	push	r9
   1c5f0:	af 92       	push	r10
   1c5f2:	bf 92       	push	r11
   1c5f4:	cf 92       	push	r12
   1c5f6:	df 92       	push	r13
   1c5f8:	ef 92       	push	r14
   1c5fa:	ff 92       	push	r15
   1c5fc:	0f 93       	push	r16
   1c5fe:	1f 93       	push	r17
   1c600:	cf 93       	push	r28
   1c602:	df 93       	push	r29
   1c604:	41 32       	cpi	r20, 0x21	; 33
   1c606:	08 f0       	brcs	.+2      	; 0x1c60a <twi_writeTo+0x26>
   1c608:	c5 c0       	rjmp	.+394    	; 0x1c794 <twi_writeTo+0x1b0>
   1c60a:	12 2f       	mov	r17, r18
   1c60c:	f4 2e       	mov	r15, r20
   1c60e:	d7 2e       	mov	r13, r23
   1c610:	e6 2e       	mov	r14, r22
   1c612:	d8 2f       	mov	r29, r24
   1c614:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c618:	4b 01       	movw	r8, r22
   1c61a:	5c 01       	movw	r10, r24
   1c61c:	c0 91 cd 1a 	lds	r28, 0x1ACD	; 0x801acd <twi_state>
   1c620:	cc 23       	and	r28, r28
   1c622:	11 f1       	breq	.+68     	; 0x1c668 <twi_writeTo+0x84>
   1c624:	80 91 c6 1a 	lds	r24, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c628:	90 91 c7 1a 	lds	r25, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c62c:	a0 91 c8 1a 	lds	r26, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c630:	b0 91 c9 1a 	lds	r27, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c634:	89 2b       	or	r24, r25
   1c636:	8a 2b       	or	r24, r26
   1c638:	8b 2b       	or	r24, r27
   1c63a:	81 f3       	breq	.-32     	; 0x1c61c <twi_writeTo+0x38>
   1c63c:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c640:	40 90 c6 1a 	lds	r4, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c644:	50 90 c7 1a 	lds	r5, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c648:	60 90 c8 1a 	lds	r6, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c64c:	70 90 c9 1a 	lds	r7, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c650:	dc 01       	movw	r26, r24
   1c652:	cb 01       	movw	r24, r22
   1c654:	88 19       	sub	r24, r8
   1c656:	99 09       	sbc	r25, r9
   1c658:	aa 09       	sbc	r26, r10
   1c65a:	bb 09       	sbc	r27, r11
   1c65c:	48 16       	cp	r4, r24
   1c65e:	59 06       	cpc	r5, r25
   1c660:	6a 06       	cpc	r6, r26
   1c662:	7b 06       	cpc	r7, r27
   1c664:	d8 f6       	brcc	.-74     	; 0x1c61c <twi_writeTo+0x38>
   1c666:	83 c0       	rjmp	.+262    	; 0x1c76e <twi_writeTo+0x18a>
   1c668:	82 e0       	ldi	r24, 0x02	; 2
   1c66a:	80 93 cd 1a 	sts	0x1ACD, r24	; 0x801acd <twi_state>
   1c66e:	00 93 cb 1a 	sts	0x1ACB, r16	; 0x801acb <twi_sendStop>
   1c672:	8f ef       	ldi	r24, 0xFF	; 255
   1c674:	80 93 5a 1a 	sts	0x1A5A, r24	; 0x801a5a <twi_error>
   1c678:	10 92 9f 1a 	sts	0x1A9F, r1	; 0x801a9f <twi_masterBufferIndex>
   1c67c:	f0 92 9e 1a 	sts	0x1A9E, r15	; 0x801a9e <twi_masterBufferLength>
   1c680:	9e 2d       	mov	r25, r14
   1c682:	a0 ea       	ldi	r26, 0xA0	; 160
   1c684:	ba e1       	ldi	r27, 0x1A	; 26
   1c686:	ee 2d       	mov	r30, r14
   1c688:	fd 2d       	mov	r31, r13
   1c68a:	8e 2f       	mov	r24, r30
   1c68c:	89 1b       	sub	r24, r25
   1c68e:	8f 15       	cp	r24, r15
   1c690:	18 f4       	brcc	.+6      	; 0x1c698 <twi_writeTo+0xb4>
   1c692:	81 91       	ld	r24, Z+
   1c694:	8d 93       	st	X+, r24
   1c696:	f9 cf       	rjmp	.-14     	; 0x1c68a <twi_writeTo+0xa6>
   1c698:	10 92 cc 1a 	sts	0x1ACC, r1	; 0x801acc <twi_slarw>
   1c69c:	90 91 cc 1a 	lds	r25, 0x1ACC	; 0x801acc <twi_slarw>
   1c6a0:	dd 0f       	add	r29, r29
   1c6a2:	d9 2b       	or	r29, r25
   1c6a4:	d0 93 cc 1a 	sts	0x1ACC, r29	; 0x801acc <twi_slarw>
   1c6a8:	80 91 ca 1a 	lds	r24, 0x1ACA	; 0x801aca <twi_inRepStart>
   1c6ac:	81 30       	cpi	r24, 0x01	; 1
   1c6ae:	89 f5       	brne	.+98     	; 0x1c712 <twi_writeTo+0x12e>
   1c6b0:	10 92 ca 1a 	sts	0x1ACA, r1	; 0x801aca <twi_inRepStart>
   1c6b4:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c6b8:	6b 01       	movw	r12, r22
   1c6ba:	7c 01       	movw	r14, r24
   1c6bc:	80 91 cc 1a 	lds	r24, 0x1ACC	; 0x801acc <twi_slarw>
   1c6c0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c6c4:	80 91 c6 1a 	lds	r24, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c6c8:	90 91 c7 1a 	lds	r25, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c6cc:	a0 91 c8 1a 	lds	r26, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c6d0:	b0 91 c9 1a 	lds	r27, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c6d4:	89 2b       	or	r24, r25
   1c6d6:	8a 2b       	or	r24, r26
   1c6d8:	8b 2b       	or	r24, r27
   1c6da:	a9 f0       	breq	.+42     	; 0x1c706 <twi_writeTo+0x122>
   1c6dc:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c6e0:	80 90 c6 1a 	lds	r8, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c6e4:	90 90 c7 1a 	lds	r9, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c6e8:	a0 90 c8 1a 	lds	r10, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c6ec:	b0 90 c9 1a 	lds	r11, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c6f0:	dc 01       	movw	r26, r24
   1c6f2:	cb 01       	movw	r24, r22
   1c6f4:	8c 19       	sub	r24, r12
   1c6f6:	9d 09       	sbc	r25, r13
   1c6f8:	ae 09       	sbc	r26, r14
   1c6fa:	bf 09       	sbc	r27, r15
   1c6fc:	88 16       	cp	r8, r24
   1c6fe:	99 06       	cpc	r9, r25
   1c700:	aa 06       	cpc	r10, r26
   1c702:	bb 06       	cpc	r11, r27
   1c704:	a0 f1       	brcs	.+104    	; 0x1c76e <twi_writeTo+0x18a>
   1c706:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c70a:	83 fd       	sbrc	r24, 3
   1c70c:	d7 cf       	rjmp	.-82     	; 0x1c6bc <twi_writeTo+0xd8>
   1c70e:	85 ec       	ldi	r24, 0xC5	; 197
   1c710:	01 c0       	rjmp	.+2      	; 0x1c714 <twi_writeTo+0x130>
   1c712:	85 ee       	ldi	r24, 0xE5	; 229
   1c714:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c718:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c71c:	6b 01       	movw	r12, r22
   1c71e:	7c 01       	movw	r14, r24
   1c720:	11 23       	and	r17, r17
   1c722:	51 f1       	breq	.+84     	; 0x1c778 <twi_writeTo+0x194>
   1c724:	80 91 cd 1a 	lds	r24, 0x1ACD	; 0x801acd <twi_state>
   1c728:	82 30       	cpi	r24, 0x02	; 2
   1c72a:	31 f5       	brne	.+76     	; 0x1c778 <twi_writeTo+0x194>
   1c72c:	80 91 c6 1a 	lds	r24, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c730:	90 91 c7 1a 	lds	r25, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c734:	a0 91 c8 1a 	lds	r26, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c738:	b0 91 c9 1a 	lds	r27, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c73c:	89 2b       	or	r24, r25
   1c73e:	8a 2b       	or	r24, r26
   1c740:	8b 2b       	or	r24, r27
   1c742:	71 f3       	breq	.-36     	; 0x1c720 <twi_writeTo+0x13c>
   1c744:	0e 94 4b d3 	call	0x1a696	; 0x1a696 <micros>
   1c748:	80 90 c6 1a 	lds	r8, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c74c:	90 90 c7 1a 	lds	r9, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c750:	a0 90 c8 1a 	lds	r10, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c754:	b0 90 c9 1a 	lds	r11, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c758:	dc 01       	movw	r26, r24
   1c75a:	cb 01       	movw	r24, r22
   1c75c:	8c 19       	sub	r24, r12
   1c75e:	9d 09       	sbc	r25, r13
   1c760:	ae 09       	sbc	r26, r14
   1c762:	bf 09       	sbc	r27, r15
   1c764:	88 16       	cp	r8, r24
   1c766:	99 06       	cpc	r9, r25
   1c768:	aa 06       	cpc	r10, r26
   1c76a:	bb 06       	cpc	r11, r27
   1c76c:	c8 f6       	brcc	.-78     	; 0x1c720 <twi_writeTo+0x13c>
   1c76e:	80 91 c4 1a 	lds	r24, 0x1AC4	; 0x801ac4 <twi_do_reset_on_timeout>
   1c772:	24 df       	rcall	.-440    	; 0x1c5bc <twi_handleTimeout>
   1c774:	c5 e0       	ldi	r28, 0x05	; 5
   1c776:	13 c0       	rjmp	.+38     	; 0x1c79e <twi_writeTo+0x1ba>
   1c778:	80 91 5a 1a 	lds	r24, 0x1A5A	; 0x801a5a <twi_error>
   1c77c:	8f 3f       	cpi	r24, 0xFF	; 255
   1c77e:	79 f0       	breq	.+30     	; 0x1c79e <twi_writeTo+0x1ba>
   1c780:	80 91 5a 1a 	lds	r24, 0x1A5A	; 0x801a5a <twi_error>
   1c784:	80 32       	cpi	r24, 0x20	; 32
   1c786:	41 f0       	breq	.+16     	; 0x1c798 <twi_writeTo+0x1b4>
   1c788:	80 91 5a 1a 	lds	r24, 0x1A5A	; 0x801a5a <twi_error>
   1c78c:	80 33       	cpi	r24, 0x30	; 48
   1c78e:	31 f0       	breq	.+12     	; 0x1c79c <twi_writeTo+0x1b8>
   1c790:	c4 e0       	ldi	r28, 0x04	; 4
   1c792:	05 c0       	rjmp	.+10     	; 0x1c79e <twi_writeTo+0x1ba>
   1c794:	c1 e0       	ldi	r28, 0x01	; 1
   1c796:	03 c0       	rjmp	.+6      	; 0x1c79e <twi_writeTo+0x1ba>
   1c798:	c2 e0       	ldi	r28, 0x02	; 2
   1c79a:	01 c0       	rjmp	.+2      	; 0x1c79e <twi_writeTo+0x1ba>
   1c79c:	c3 e0       	ldi	r28, 0x03	; 3
   1c79e:	8c 2f       	mov	r24, r28
   1c7a0:	df 91       	pop	r29
   1c7a2:	cf 91       	pop	r28
   1c7a4:	1f 91       	pop	r17
   1c7a6:	0f 91       	pop	r16
   1c7a8:	ff 90       	pop	r15
   1c7aa:	ef 90       	pop	r14
   1c7ac:	df 90       	pop	r13
   1c7ae:	cf 90       	pop	r12
   1c7b0:	bf 90       	pop	r11
   1c7b2:	af 90       	pop	r10
   1c7b4:	9f 90       	pop	r9
   1c7b6:	8f 90       	pop	r8
   1c7b8:	7f 90       	pop	r7
   1c7ba:	6f 90       	pop	r6
   1c7bc:	5f 90       	pop	r5
   1c7be:	4f 90       	pop	r4
   1c7c0:	08 95       	ret

0001c7c2 <twi_stop>:
   1c7c2:	85 ed       	ldi	r24, 0xD5	; 213
   1c7c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c7c8:	80 91 c6 1a 	lds	r24, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c7cc:	90 91 c7 1a 	lds	r25, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c7d0:	a0 91 c8 1a 	lds	r26, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c7d4:	b0 91 c9 1a 	lds	r27, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c7d8:	07 96       	adiw	r24, 0x07	; 7
   1c7da:	a1 1d       	adc	r26, r1
   1c7dc:	b1 1d       	adc	r27, r1
   1c7de:	23 e0       	ldi	r18, 0x03	; 3
   1c7e0:	b6 95       	lsr	r27
   1c7e2:	a7 95       	ror	r26
   1c7e4:	97 95       	ror	r25
   1c7e6:	87 95       	ror	r24
   1c7e8:	2a 95       	dec	r18
   1c7ea:	d1 f7       	brne	.-12     	; 0x1c7e0 <twi_stop+0x1e>
   1c7ec:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1c7f0:	24 ff       	sbrs	r18, 4
   1c7f2:	1b c0       	rjmp	.+54     	; 0x1c82a <twi_stop+0x68>
   1c7f4:	40 91 c6 1a 	lds	r20, 0x1AC6	; 0x801ac6 <twi_timeout_us>
   1c7f8:	50 91 c7 1a 	lds	r21, 0x1AC7	; 0x801ac7 <twi_timeout_us+0x1>
   1c7fc:	60 91 c8 1a 	lds	r22, 0x1AC8	; 0x801ac8 <twi_timeout_us+0x2>
   1c800:	70 91 c9 1a 	lds	r23, 0x1AC9	; 0x801ac9 <twi_timeout_us+0x3>
   1c804:	45 2b       	or	r20, r21
   1c806:	46 2b       	or	r20, r22
   1c808:	47 2b       	or	r20, r23
   1c80a:	81 f3       	breq	.-32     	; 0x1c7ec <twi_stop+0x2a>
   1c80c:	00 97       	sbiw	r24, 0x00	; 0
   1c80e:	a1 05       	cpc	r26, r1
   1c810:	b1 05       	cpc	r27, r1
   1c812:	41 f0       	breq	.+16     	; 0x1c824 <twi_stop+0x62>
   1c814:	25 e3       	ldi	r18, 0x35	; 53
   1c816:	2a 95       	dec	r18
   1c818:	f1 f7       	brne	.-4      	; 0x1c816 <twi_stop+0x54>
   1c81a:	00 00       	nop
   1c81c:	01 97       	sbiw	r24, 0x01	; 1
   1c81e:	a1 09       	sbc	r26, r1
   1c820:	b1 09       	sbc	r27, r1
   1c822:	e4 cf       	rjmp	.-56     	; 0x1c7ec <twi_stop+0x2a>
   1c824:	80 91 c4 1a 	lds	r24, 0x1AC4	; 0x801ac4 <twi_do_reset_on_timeout>
   1c828:	c9 ce       	rjmp	.-622    	; 0x1c5bc <twi_handleTimeout>
   1c82a:	10 92 cd 1a 	sts	0x1ACD, r1	; 0x801acd <twi_state>
   1c82e:	08 95       	ret

0001c830 <__vector_39>:

ISR(TWI_vect)
{
   1c830:	1f 92       	push	r1
   1c832:	0f 92       	push	r0
   1c834:	0f b6       	in	r0, 0x3f	; 63
   1c836:	0f 92       	push	r0
   1c838:	11 24       	eor	r1, r1
   1c83a:	0b b6       	in	r0, 0x3b	; 59
   1c83c:	0f 92       	push	r0
   1c83e:	2f 93       	push	r18
   1c840:	3f 93       	push	r19
   1c842:	4f 93       	push	r20
   1c844:	5f 93       	push	r21
   1c846:	6f 93       	push	r22
   1c848:	7f 93       	push	r23
   1c84a:	8f 93       	push	r24
   1c84c:	9f 93       	push	r25
   1c84e:	af 93       	push	r26
   1c850:	bf 93       	push	r27
   1c852:	ef 93       	push	r30
   1c854:	ff 93       	push	r31
  switch(TW_STATUS){
   1c856:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
   1c85a:	88 7f       	andi	r24, 0xF8	; 248
   1c85c:	80 36       	cpi	r24, 0x60	; 96
   1c85e:	09 f4       	brne	.+2      	; 0x1c862 <__vector_39+0x32>
   1c860:	9d c0       	rjmp	.+314    	; 0x1c99c <__vector_39+0x16c>
   1c862:	70 f5       	brcc	.+92     	; 0x1c8c0 <__vector_39+0x90>
   1c864:	88 32       	cpi	r24, 0x28	; 40
   1c866:	09 f4       	brne	.+2      	; 0x1c86a <__vector_39+0x3a>
   1c868:	5c c0       	rjmp	.+184    	; 0x1c922 <__vector_39+0xf2>
   1c86a:	90 f4       	brcc	.+36     	; 0x1c890 <__vector_39+0x60>
   1c86c:	80 31       	cpi	r24, 0x10	; 16
   1c86e:	09 f4       	brne	.+2      	; 0x1c872 <__vector_39+0x42>
   1c870:	55 c0       	rjmp	.+170    	; 0x1c91c <__vector_39+0xec>
   1c872:	38 f4       	brcc	.+14     	; 0x1c882 <__vector_39+0x52>
   1c874:	88 23       	and	r24, r24
   1c876:	09 f4       	brne	.+2      	; 0x1c87a <__vector_39+0x4a>
   1c878:	f3 c0       	rjmp	.+486    	; 0x1ca60 <__vector_39+0x230>
   1c87a:	88 30       	cpi	r24, 0x08	; 8
   1c87c:	09 f4       	brne	.+2      	; 0x1c880 <__vector_39+0x50>
   1c87e:	4e c0       	rjmp	.+156    	; 0x1c91c <__vector_39+0xec>
   1c880:	f2 c0       	rjmp	.+484    	; 0x1ca66 <__vector_39+0x236>
   1c882:	88 31       	cpi	r24, 0x18	; 24
   1c884:	09 f4       	brne	.+2      	; 0x1c888 <__vector_39+0x58>
   1c886:	4d c0       	rjmp	.+154    	; 0x1c922 <__vector_39+0xf2>
   1c888:	80 32       	cpi	r24, 0x20	; 32
   1c88a:	09 f4       	brne	.+2      	; 0x1c88e <__vector_39+0x5e>
   1c88c:	5e c0       	rjmp	.+188    	; 0x1c94a <__vector_39+0x11a>
   1c88e:	eb c0       	rjmp	.+470    	; 0x1ca66 <__vector_39+0x236>
   1c890:	80 34       	cpi	r24, 0x40	; 64
   1c892:	09 f4       	brne	.+2      	; 0x1c896 <__vector_39+0x66>
   1c894:	69 c0       	rjmp	.+210    	; 0x1c968 <__vector_39+0x138>
   1c896:	50 f4       	brcc	.+20     	; 0x1c8ac <__vector_39+0x7c>
   1c898:	80 33       	cpi	r24, 0x30	; 48
   1c89a:	09 f4       	brne	.+2      	; 0x1c89e <__vector_39+0x6e>
   1c89c:	56 c0       	rjmp	.+172    	; 0x1c94a <__vector_39+0x11a>
   1c89e:	88 33       	cpi	r24, 0x38	; 56
   1c8a0:	09 f0       	breq	.+2      	; 0x1c8a4 <__vector_39+0x74>
   1c8a2:	e1 c0       	rjmp	.+450    	; 0x1ca66 <__vector_39+0x236>
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
   1c8a4:	80 93 5a 1a 	sts	0x1A5A, r24	; 0x801a5a <twi_error>
      twi_releaseBus();
   1c8a8:	83 de       	rcall	.-762    	; 0x1c5b0 <twi_releaseBus>
      break;
   1c8aa:	dd c0       	rjmp	.+442    	; 0x1ca66 <__vector_39+0x236>
  return(flag);
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
   1c8ac:	80 35       	cpi	r24, 0x50	; 80
   1c8ae:	09 f4       	brne	.+2      	; 0x1c8b2 <__vector_39+0x82>
   1c8b0:	4f c0       	rjmp	.+158    	; 0x1c950 <__vector_39+0x120>
   1c8b2:	88 35       	cpi	r24, 0x58	; 88
   1c8b4:	09 f4       	brne	.+2      	; 0x1c8b8 <__vector_39+0x88>
   1c8b6:	5d c0       	rjmp	.+186    	; 0x1c972 <__vector_39+0x142>
   1c8b8:	88 34       	cpi	r24, 0x48	; 72
   1c8ba:	09 f0       	breq	.+2      	; 0x1c8be <__vector_39+0x8e>
   1c8bc:	d4 c0       	rjmp	.+424    	; 0x1ca66 <__vector_39+0x236>
   1c8be:	d2 c0       	rjmp	.+420    	; 0x1ca64 <__vector_39+0x234>
   1c8c0:	88 39       	cpi	r24, 0x98	; 152
   1c8c2:	09 f4       	brne	.+2      	; 0x1c8c6 <__vector_39+0x96>
   1c8c4:	c3 c0       	rjmp	.+390    	; 0x1ca4c <__vector_39+0x21c>
   1c8c6:	a8 f4       	brcc	.+42     	; 0x1c8f2 <__vector_39+0xc2>
   1c8c8:	88 37       	cpi	r24, 0x78	; 120
   1c8ca:	09 f4       	brne	.+2      	; 0x1c8ce <__vector_39+0x9e>
   1c8cc:	67 c0       	rjmp	.+206    	; 0x1c99c <__vector_39+0x16c>
   1c8ce:	38 f4       	brcc	.+14     	; 0x1c8de <__vector_39+0xae>
   1c8d0:	88 36       	cpi	r24, 0x68	; 104
   1c8d2:	09 f4       	brne	.+2      	; 0x1c8d6 <__vector_39+0xa6>
   1c8d4:	63 c0       	rjmp	.+198    	; 0x1c99c <__vector_39+0x16c>
   1c8d6:	80 37       	cpi	r24, 0x70	; 112
   1c8d8:	09 f4       	brne	.+2      	; 0x1c8dc <__vector_39+0xac>
   1c8da:	60 c0       	rjmp	.+192    	; 0x1c99c <__vector_39+0x16c>
   1c8dc:	c4 c0       	rjmp	.+392    	; 0x1ca66 <__vector_39+0x236>
   1c8de:	88 38       	cpi	r24, 0x88	; 136
   1c8e0:	09 f4       	brne	.+2      	; 0x1c8e4 <__vector_39+0xb4>
   1c8e2:	b4 c0       	rjmp	.+360    	; 0x1ca4c <__vector_39+0x21c>
   1c8e4:	80 39       	cpi	r24, 0x90	; 144
   1c8e6:	09 f4       	brne	.+2      	; 0x1c8ea <__vector_39+0xba>
   1c8e8:	5f c0       	rjmp	.+190    	; 0x1c9a8 <__vector_39+0x178>
   1c8ea:	80 38       	cpi	r24, 0x80	; 128
   1c8ec:	09 f0       	breq	.+2      	; 0x1c8f0 <__vector_39+0xc0>
   1c8ee:	bb c0       	rjmp	.+374    	; 0x1ca66 <__vector_39+0x236>
   1c8f0:	5b c0       	rjmp	.+182    	; 0x1c9a8 <__vector_39+0x178>
   1c8f2:	80 3b       	cpi	r24, 0xB0	; 176
   1c8f4:	09 f4       	brne	.+2      	; 0x1c8f8 <__vector_39+0xc8>
   1c8f6:	82 c0       	rjmp	.+260    	; 0x1c9fc <__vector_39+0x1cc>
   1c8f8:	38 f4       	brcc	.+14     	; 0x1c908 <__vector_39+0xd8>
   1c8fa:	80 3a       	cpi	r24, 0xA0	; 160
   1c8fc:	09 f4       	brne	.+2      	; 0x1c900 <__vector_39+0xd0>
   1c8fe:	66 c0       	rjmp	.+204    	; 0x1c9cc <__vector_39+0x19c>
   1c900:	88 3a       	cpi	r24, 0xA8	; 168
   1c902:	09 f4       	brne	.+2      	; 0x1c906 <__vector_39+0xd6>
   1c904:	7b c0       	rjmp	.+246    	; 0x1c9fc <__vector_39+0x1cc>
   1c906:	af c0       	rjmp	.+350    	; 0x1ca66 <__vector_39+0x236>
   1c908:	80 3c       	cpi	r24, 0xC0	; 192
   1c90a:	09 f4       	brne	.+2      	; 0x1c90e <__vector_39+0xde>
   1c90c:	a3 c0       	rjmp	.+326    	; 0x1ca54 <__vector_39+0x224>
   1c90e:	88 3c       	cpi	r24, 0xC8	; 200
   1c910:	09 f4       	brne	.+2      	; 0x1c914 <__vector_39+0xe4>
   1c912:	a0 c0       	rjmp	.+320    	; 0x1ca54 <__vector_39+0x224>
   1c914:	88 3b       	cpi	r24, 0xB8	; 184
   1c916:	09 f4       	brne	.+2      	; 0x1c91a <__vector_39+0xea>
   1c918:	86 c0       	rjmp	.+268    	; 0x1ca26 <__vector_39+0x1f6>
   1c91a:	a5 c0       	rjmp	.+330    	; 0x1ca66 <__vector_39+0x236>
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
   1c91c:	80 91 cc 1a 	lds	r24, 0x1ACC	; 0x801acc <twi_slarw>
   1c920:	10 c0       	rjmp	.+32     	; 0x1c942 <__vector_39+0x112>

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1c922:	90 91 9f 1a 	lds	r25, 0x1A9F	; 0x801a9f <twi_masterBufferIndex>
   1c926:	80 91 9e 1a 	lds	r24, 0x1A9E	; 0x801a9e <twi_masterBufferLength>
   1c92a:	98 17       	cp	r25, r24
   1c92c:	70 f5       	brcc	.+92     	; 0x1c98a <__vector_39+0x15a>
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
   1c92e:	e0 91 9f 1a 	lds	r30, 0x1A9F	; 0x801a9f <twi_masterBufferIndex>
   1c932:	81 e0       	ldi	r24, 0x01	; 1
   1c934:	8e 0f       	add	r24, r30
   1c936:	80 93 9f 1a 	sts	0x1A9F, r24	; 0x801a9f <twi_masterBufferIndex>
   1c93a:	f0 e0       	ldi	r31, 0x00	; 0
   1c93c:	e0 56       	subi	r30, 0x60	; 96
   1c93e:	f5 4e       	sbci	r31, 0xE5	; 229
   1c940:	80 81       	ld	r24, Z
   1c942:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1c946:	85 ec       	ldi	r24, 0xC5	; 197
   1c948:	82 c0       	rjmp	.+260    	; 0x1ca4e <__vector_39+0x21e>
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
   1c94a:	80 93 5a 1a 	sts	0x1A5A, r24	; 0x801a5a <twi_error>
   1c94e:	8a c0       	rjmp	.+276    	; 0x1ca64 <__vector_39+0x234>
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1c950:	e0 91 9f 1a 	lds	r30, 0x1A9F	; 0x801a9f <twi_masterBufferIndex>
   1c954:	81 e0       	ldi	r24, 0x01	; 1
   1c956:	8e 0f       	add	r24, r30
   1c958:	80 93 9f 1a 	sts	0x1A9F, r24	; 0x801a9f <twi_masterBufferIndex>
   1c95c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c960:	f0 e0       	ldi	r31, 0x00	; 0
   1c962:	e0 56       	subi	r30, 0x60	; 96
   1c964:	f5 4e       	sbci	r31, 0xE5	; 229
   1c966:	80 83       	st	Z, r24
      __attribute__ ((fallthrough));
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
   1c968:	90 91 9f 1a 	lds	r25, 0x1A9F	; 0x801a9f <twi_masterBufferIndex>
   1c96c:	80 91 9e 1a 	lds	r24, 0x1A9E	; 0x801a9e <twi_masterBufferLength>
   1c970:	6a c0       	rjmp	.+212    	; 0x1ca46 <__vector_39+0x216>
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
   1c972:	e0 91 9f 1a 	lds	r30, 0x1A9F	; 0x801a9f <twi_masterBufferIndex>
   1c976:	81 e0       	ldi	r24, 0x01	; 1
   1c978:	8e 0f       	add	r24, r30
   1c97a:	80 93 9f 1a 	sts	0x1A9F, r24	; 0x801a9f <twi_masterBufferIndex>
   1c97e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c982:	f0 e0       	ldi	r31, 0x00	; 0
   1c984:	e0 56       	subi	r30, 0x60	; 96
   1c986:	f5 4e       	sbci	r31, 0xE5	; 229
   1c988:	80 83       	st	Z, r24
      if (twi_sendStop){
   1c98a:	80 91 cb 1a 	lds	r24, 0x1ACB	; 0x801acb <twi_sendStop>
   1c98e:	81 11       	cpse	r24, r1
   1c990:	69 c0       	rjmp	.+210    	; 0x1ca64 <__vector_39+0x234>
        twi_stop();
      } else {
        twi_inRepStart = true;	// we're gonna send the START
   1c992:	81 e0       	ldi	r24, 0x01	; 1
   1c994:	80 93 ca 1a 	sts	0x1ACA, r24	; 0x801aca <twi_inRepStart>
        // don't enable the interrupt. We'll generate the start, but we
        // avoid handling the interrupt until we're in the next transaction,
        // at the point where we would normally issue the start.
        TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
   1c998:	84 ea       	ldi	r24, 0xA4	; 164
   1c99a:	5d c0       	rjmp	.+186    	; 0x1ca56 <__vector_39+0x226>
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
   1c99c:	83 e0       	ldi	r24, 0x03	; 3
   1c99e:	80 93 cd 1a 	sts	0x1ACD, r24	; 0x801acd <twi_state>
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
   1c9a2:	10 92 5b 1a 	sts	0x1A5B, r1	; 0x801a5b <twi_rxBufferIndex>
   1c9a6:	cf cf       	rjmp	.-98     	; 0x1c946 <__vector_39+0x116>
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1c9a8:	80 91 5b 1a 	lds	r24, 0x1A5B	; 0x801a5b <twi_rxBufferIndex>
   1c9ac:	80 32       	cpi	r24, 0x20	; 32
   1c9ae:	08 f0       	brcs	.+2      	; 0x1c9b2 <__vector_39+0x182>
   1c9b0:	4d c0       	rjmp	.+154    	; 0x1ca4c <__vector_39+0x21c>
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
   1c9b2:	e0 91 5b 1a 	lds	r30, 0x1A5B	; 0x801a5b <twi_rxBufferIndex>
   1c9b6:	81 e0       	ldi	r24, 0x01	; 1
   1c9b8:	8e 0f       	add	r24, r30
   1c9ba:	80 93 5b 1a 	sts	0x1A5B, r24	; 0x801a5b <twi_rxBufferIndex>
   1c9be:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
   1c9c2:	f0 e0       	ldi	r31, 0x00	; 0
   1c9c4:	e4 5a       	subi	r30, 0xA4	; 164
   1c9c6:	f5 4e       	sbci	r31, 0xE5	; 229
   1c9c8:	80 83       	st	Z, r24
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
   1c9ca:	bd cf       	rjmp	.-134    	; 0x1c946 <__vector_39+0x116>
   1c9cc:	f1 dd       	rcall	.-1054   	; 0x1c5b0 <twi_releaseBus>
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_LENGTH){
   1c9ce:	80 91 5b 1a 	lds	r24, 0x1A5B	; 0x801a5b <twi_rxBufferIndex>
   1c9d2:	80 32       	cpi	r24, 0x20	; 32
   1c9d4:	30 f4       	brcc	.+12     	; 0x1c9e2 <__vector_39+0x1b2>
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
   1c9d6:	e0 91 5b 1a 	lds	r30, 0x1A5B	; 0x801a5b <twi_rxBufferIndex>
   1c9da:	f0 e0       	ldi	r31, 0x00	; 0
   1c9dc:	e4 5a       	subi	r30, 0xA4	; 164
   1c9de:	f5 4e       	sbci	r31, 0xE5	; 229
   1c9e0:	10 82       	st	Z, r1
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
   1c9e2:	60 91 5b 1a 	lds	r22, 0x1A5B	; 0x801a5b <twi_rxBufferIndex>
   1c9e6:	70 e0       	ldi	r23, 0x00	; 0
   1c9e8:	e0 91 c0 1a 	lds	r30, 0x1AC0	; 0x801ac0 <twi_onSlaveReceive>
   1c9ec:	f0 91 c1 1a 	lds	r31, 0x1AC1	; 0x801ac1 <twi_onSlaveReceive+0x1>
   1c9f0:	8c e5       	ldi	r24, 0x5C	; 92
   1c9f2:	9a e1       	ldi	r25, 0x1A	; 26
   1c9f4:	19 95       	eicall
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
   1c9f6:	10 92 5b 1a 	sts	0x1A5B, r1	; 0x801a5b <twi_rxBufferIndex>
      break;
   1c9fa:	35 c0       	rjmp	.+106    	; 0x1ca66 <__vector_39+0x236>
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
   1c9fc:	84 e0       	ldi	r24, 0x04	; 4
   1c9fe:	80 93 cd 1a 	sts	0x1ACD, r24	; 0x801acd <twi_state>
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
   1ca02:	10 92 7d 1a 	sts	0x1A7D, r1	; 0x801a7d <twi_txBufferIndex>
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
   1ca06:	10 92 7c 1a 	sts	0x1A7C, r1	; 0x801a7c <twi_txBufferLength>
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
   1ca0a:	e0 91 c2 1a 	lds	r30, 0x1AC2	; 0x801ac2 <twi_onSlaveTransmit>
   1ca0e:	f0 91 c3 1a 	lds	r31, 0x1AC3	; 0x801ac3 <twi_onSlaveTransmit+0x1>
   1ca12:	19 95       	eicall
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
   1ca14:	80 91 7c 1a 	lds	r24, 0x1A7C	; 0x801a7c <twi_txBufferLength>
   1ca18:	81 11       	cpse	r24, r1
   1ca1a:	05 c0       	rjmp	.+10     	; 0x1ca26 <__vector_39+0x1f6>
        twi_txBufferLength = 1;
   1ca1c:	81 e0       	ldi	r24, 0x01	; 1
   1ca1e:	80 93 7c 1a 	sts	0x1A7C, r24	; 0x801a7c <twi_txBufferLength>
        twi_txBuffer[0] = 0x00;
   1ca22:	10 92 7e 1a 	sts	0x1A7E, r1	; 0x801a7e <twi_txBuffer>
      }
      __attribute__ ((fallthrough));		  
      // transmit first byte from buffer, fall
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
   1ca26:	e0 91 7d 1a 	lds	r30, 0x1A7D	; 0x801a7d <twi_txBufferIndex>
   1ca2a:	81 e0       	ldi	r24, 0x01	; 1
   1ca2c:	8e 0f       	add	r24, r30
   1ca2e:	80 93 7d 1a 	sts	0x1A7D, r24	; 0x801a7d <twi_txBufferIndex>
   1ca32:	f0 e0       	ldi	r31, 0x00	; 0
   1ca34:	e2 58       	subi	r30, 0x82	; 130
   1ca36:	f5 4e       	sbci	r31, 0xE5	; 229
   1ca38:	80 81       	ld	r24, Z
   1ca3a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
   1ca3e:	90 91 7d 1a 	lds	r25, 0x1A7D	; 0x801a7d <twi_txBufferIndex>
   1ca42:	80 91 7c 1a 	lds	r24, 0x1A7C	; 0x801a7c <twi_txBufferLength>
   1ca46:	98 17       	cp	r25, r24
   1ca48:	08 f4       	brcc	.+2      	; 0x1ca4c <__vector_39+0x21c>
   1ca4a:	7d cf       	rjmp	.-262    	; 0x1c946 <__vector_39+0x116>
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
   1ca4c:	85 e8       	ldi	r24, 0x85	; 133
   1ca4e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
   1ca52:	09 c0       	rjmp	.+18     	; 0x1ca66 <__vector_39+0x236>
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
   1ca54:	85 ec       	ldi	r24, 0xC5	; 197
   1ca56:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
   1ca5a:	10 92 cd 1a 	sts	0x1ACD, r1	; 0x801acd <twi_state>
      break;
   1ca5e:	03 c0       	rjmp	.+6      	; 0x1ca66 <__vector_39+0x236>

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
   1ca60:	10 92 5a 1a 	sts	0x1A5A, r1	; 0x801a5a <twi_error>
      twi_stop();
   1ca64:	ae de       	rcall	.-676    	; 0x1c7c2 <twi_stop>
      break;
  }
}
   1ca66:	ff 91       	pop	r31
   1ca68:	ef 91       	pop	r30
   1ca6a:	bf 91       	pop	r27
   1ca6c:	af 91       	pop	r26
   1ca6e:	9f 91       	pop	r25
   1ca70:	8f 91       	pop	r24
   1ca72:	7f 91       	pop	r23
   1ca74:	6f 91       	pop	r22
   1ca76:	5f 91       	pop	r21
   1ca78:	4f 91       	pop	r20
   1ca7a:	3f 91       	pop	r19
   1ca7c:	2f 91       	pop	r18
   1ca7e:	0f 90       	pop	r0
   1ca80:	0b be       	out	0x3b, r0	; 59
   1ca82:	0f 90       	pop	r0
   1ca84:	0f be       	out	0x3f, r0	; 63
   1ca86:	0f 90       	pop	r0
   1ca88:	1f 90       	pop	r1
   1ca8a:	18 95       	reti

0001ca8c <pow>:
   1ca8c:	fa 01       	movw	r30, r20
   1ca8e:	ee 0f       	add	r30, r30
   1ca90:	ff 1f       	adc	r31, r31
   1ca92:	30 96       	adiw	r30, 0x00	; 0
   1ca94:	21 05       	cpc	r18, r1
   1ca96:	31 05       	cpc	r19, r1
   1ca98:	a1 f1       	breq	.+104    	; 0x1cb02 <pow+0x76>
   1ca9a:	61 15       	cp	r22, r1
   1ca9c:	71 05       	cpc	r23, r1
   1ca9e:	61 f4       	brne	.+24     	; 0x1cab8 <pow+0x2c>
   1caa0:	80 38       	cpi	r24, 0x80	; 128
   1caa2:	bf e3       	ldi	r27, 0x3F	; 63
   1caa4:	9b 07       	cpc	r25, r27
   1caa6:	49 f1       	breq	.+82     	; 0x1cafa <pow+0x6e>
   1caa8:	68 94       	set
   1caaa:	90 38       	cpi	r25, 0x80	; 128
   1caac:	81 05       	cpc	r24, r1
   1caae:	61 f0       	breq	.+24     	; 0x1cac8 <pow+0x3c>
   1cab0:	80 38       	cpi	r24, 0x80	; 128
   1cab2:	bf ef       	ldi	r27, 0xFF	; 255
   1cab4:	9b 07       	cpc	r25, r27
   1cab6:	41 f0       	breq	.+16     	; 0x1cac8 <pow+0x3c>
   1cab8:	99 23       	and	r25, r25
   1caba:	4a f5       	brpl	.+82     	; 0x1cb0e <pow+0x82>
   1cabc:	ff 3f       	cpi	r31, 0xFF	; 255
   1cabe:	e1 05       	cpc	r30, r1
   1cac0:	31 05       	cpc	r19, r1
   1cac2:	21 05       	cpc	r18, r1
   1cac4:	19 f1       	breq	.+70     	; 0x1cb0c <pow+0x80>
   1cac6:	e8 94       	clt
   1cac8:	08 94       	sec
   1caca:	e7 95       	ror	r30
   1cacc:	d9 01       	movw	r26, r18
   1cace:	aa 23       	and	r26, r26
   1cad0:	29 f4       	brne	.+10     	; 0x1cadc <pow+0x50>
   1cad2:	ab 2f       	mov	r26, r27
   1cad4:	be 2f       	mov	r27, r30
   1cad6:	f8 5f       	subi	r31, 0xF8	; 248
   1cad8:	d0 f3       	brcs	.-12     	; 0x1cace <pow+0x42>
   1cada:	10 c0       	rjmp	.+32     	; 0x1cafc <pow+0x70>
   1cadc:	ff 5f       	subi	r31, 0xFF	; 255
   1cade:	70 f4       	brcc	.+28     	; 0x1cafc <pow+0x70>
   1cae0:	a6 95       	lsr	r26
   1cae2:	e0 f7       	brcc	.-8      	; 0x1cadc <pow+0x50>
   1cae4:	f7 39       	cpi	r31, 0x97	; 151
   1cae6:	50 f0       	brcs	.+20     	; 0x1cafc <pow+0x70>
   1cae8:	19 f0       	breq	.+6      	; 0x1caf0 <pow+0x64>
   1caea:	ff 3a       	cpi	r31, 0xAF	; 175
   1caec:	38 f4       	brcc	.+14     	; 0x1cafc <pow+0x70>
   1caee:	9f 77       	andi	r25, 0x7F	; 127
   1caf0:	9f 93       	push	r25
   1caf2:	0d d0       	rcall	.+26     	; 0x1cb0e <pow+0x82>
   1caf4:	0f 90       	pop	r0
   1caf6:	07 fc       	sbrc	r0, 7
   1caf8:	90 58       	subi	r25, 0x80	; 128
   1cafa:	08 95       	ret
   1cafc:	46 f0       	brts	.+16     	; 0x1cb0e <pow+0x82>
   1cafe:	0c 94 4d cd 	jmp	0x19a9a	; 0x19a9a <__fp_nan>
   1cb02:	60 e0       	ldi	r22, 0x00	; 0
   1cb04:	70 e0       	ldi	r23, 0x00	; 0
   1cb06:	80 e8       	ldi	r24, 0x80	; 128
   1cb08:	9f e3       	ldi	r25, 0x3F	; 63
   1cb0a:	08 95       	ret
   1cb0c:	4f e7       	ldi	r20, 0x7F	; 127
   1cb0e:	9f 77       	andi	r25, 0x7F	; 127
   1cb10:	5f 93       	push	r21
   1cb12:	4f 93       	push	r20
   1cb14:	3f 93       	push	r19
   1cb16:	2f 93       	push	r18
   1cb18:	0a d1       	rcall	.+532    	; 0x1cd2e <log>
   1cb1a:	2f 91       	pop	r18
   1cb1c:	3f 91       	pop	r19
   1cb1e:	4f 91       	pop	r20
   1cb20:	5f 91       	pop	r21
   1cb22:	0e 94 9c cd 	call	0x19b38	; 0x19b38 <__mulsf3>
   1cb26:	51 c0       	rjmp	.+162    	; 0x1cbca <exp>
   1cb28:	19 f4       	brne	.+6      	; 0x1cb30 <pow+0xa4>
   1cb2a:	16 f4       	brtc	.+4      	; 0x1cb30 <pow+0xa4>
   1cb2c:	0c 94 4d cd 	jmp	0x19a9a	; 0x19a9a <__fp_nan>
   1cb30:	7a c0       	rjmp	.+244    	; 0x1cc26 <__fp_mpack>

0001cb32 <sqrt>:
   1cb32:	0e 94 77 cd 	call	0x19aee	; 0x19aee <__fp_splitA>
   1cb36:	c0 f3       	brcs	.-16     	; 0x1cb28 <pow+0x9c>
   1cb38:	99 23       	and	r25, r25
   1cb3a:	d1 f3       	breq	.-12     	; 0x1cb30 <pow+0xa4>
   1cb3c:	be f3       	brts	.-18     	; 0x1cb2c <pow+0xa0>
   1cb3e:	9f 57       	subi	r25, 0x7F	; 127
   1cb40:	55 0b       	sbc	r21, r21
   1cb42:	87 ff       	sbrs	r24, 7
   1cb44:	7e d0       	rcall	.+252    	; 0x1cc42 <__fp_norm2>
   1cb46:	00 24       	eor	r0, r0
   1cb48:	a0 e6       	ldi	r26, 0x60	; 96
   1cb4a:	40 ea       	ldi	r20, 0xA0	; 160
   1cb4c:	90 01       	movw	r18, r0
   1cb4e:	80 58       	subi	r24, 0x80	; 128
   1cb50:	56 95       	lsr	r21
   1cb52:	97 95       	ror	r25
   1cb54:	28 f4       	brcc	.+10     	; 0x1cb60 <sqrt+0x2e>
   1cb56:	80 5c       	subi	r24, 0xC0	; 192
   1cb58:	66 0f       	add	r22, r22
   1cb5a:	77 1f       	adc	r23, r23
   1cb5c:	88 1f       	adc	r24, r24
   1cb5e:	20 f0       	brcs	.+8      	; 0x1cb68 <sqrt+0x36>
   1cb60:	26 17       	cp	r18, r22
   1cb62:	37 07       	cpc	r19, r23
   1cb64:	48 07       	cpc	r20, r24
   1cb66:	30 f4       	brcc	.+12     	; 0x1cb74 <sqrt+0x42>
   1cb68:	62 1b       	sub	r22, r18
   1cb6a:	73 0b       	sbc	r23, r19
   1cb6c:	84 0b       	sbc	r24, r20
   1cb6e:	20 29       	or	r18, r0
   1cb70:	31 29       	or	r19, r1
   1cb72:	4a 2b       	or	r20, r26
   1cb74:	a6 95       	lsr	r26
   1cb76:	17 94       	ror	r1
   1cb78:	07 94       	ror	r0
   1cb7a:	20 25       	eor	r18, r0
   1cb7c:	31 25       	eor	r19, r1
   1cb7e:	4a 27       	eor	r20, r26
   1cb80:	58 f7       	brcc	.-42     	; 0x1cb58 <sqrt+0x26>
   1cb82:	66 0f       	add	r22, r22
   1cb84:	77 1f       	adc	r23, r23
   1cb86:	88 1f       	adc	r24, r24
   1cb88:	20 f0       	brcs	.+8      	; 0x1cb92 <sqrt+0x60>
   1cb8a:	26 17       	cp	r18, r22
   1cb8c:	37 07       	cpc	r19, r23
   1cb8e:	48 07       	cpc	r20, r24
   1cb90:	30 f4       	brcc	.+12     	; 0x1cb9e <sqrt+0x6c>
   1cb92:	62 0b       	sbc	r22, r18
   1cb94:	73 0b       	sbc	r23, r19
   1cb96:	84 0b       	sbc	r24, r20
   1cb98:	20 0d       	add	r18, r0
   1cb9a:	31 1d       	adc	r19, r1
   1cb9c:	41 1d       	adc	r20, r1
   1cb9e:	a0 95       	com	r26
   1cba0:	81 f7       	brne	.-32     	; 0x1cb82 <sqrt+0x50>
   1cba2:	b9 01       	movw	r22, r18
   1cba4:	84 2f       	mov	r24, r20
   1cba6:	91 58       	subi	r25, 0x81	; 129
   1cba8:	88 0f       	add	r24, r24
   1cbaa:	96 95       	lsr	r25
   1cbac:	87 95       	ror	r24
   1cbae:	08 95       	ret

0001cbb0 <__unordsf2>:
   1cbb0:	0e 94 23 cd 	call	0x19a46	; 0x19a46 <__fp_cmp>
   1cbb4:	88 0b       	sbc	r24, r24
   1cbb6:	99 0b       	sbc	r25, r25
   1cbb8:	08 95       	ret
   1cbba:	29 f4       	brne	.+10     	; 0x1cbc6 <__unordsf2+0x16>
   1cbbc:	16 f0       	brts	.+4      	; 0x1cbc2 <__unordsf2+0x12>
   1cbbe:	0c 94 47 cd 	jmp	0x19a8e	; 0x19a8e <__fp_inf>
   1cbc2:	0c 94 91 cd 	jmp	0x19b22	; 0x19b22 <__fp_zero>
   1cbc6:	0c 94 4d cd 	jmp	0x19a9a	; 0x19a9a <__fp_nan>

0001cbca <exp>:
   1cbca:	0e 94 77 cd 	call	0x19aee	; 0x19aee <__fp_splitA>
   1cbce:	a8 f3       	brcs	.-22     	; 0x1cbba <__unordsf2+0xa>
   1cbd0:	96 38       	cpi	r25, 0x86	; 134
   1cbd2:	a0 f7       	brcc	.-24     	; 0x1cbbc <__unordsf2+0xc>
   1cbd4:	07 f8       	bld	r0, 7
   1cbd6:	0f 92       	push	r0
   1cbd8:	e8 94       	clt
   1cbda:	2b e3       	ldi	r18, 0x3B	; 59
   1cbdc:	3a ea       	ldi	r19, 0xAA	; 170
   1cbde:	48 eb       	ldi	r20, 0xB8	; 184
   1cbe0:	5f e7       	ldi	r21, 0x7F	; 127
   1cbe2:	0e 94 aa cd 	call	0x19b54	; 0x19b54 <__mulsf3_pse>
   1cbe6:	0f 92       	push	r0
   1cbe8:	0f 92       	push	r0
   1cbea:	0f 92       	push	r0
   1cbec:	4d b7       	in	r20, 0x3d	; 61
   1cbee:	5e b7       	in	r21, 0x3e	; 62
   1cbf0:	0f 92       	push	r0
   1cbf2:	e4 d0       	rcall	.+456    	; 0x1cdbc <modf>
   1cbf4:	e0 e3       	ldi	r30, 0x30	; 48
   1cbf6:	f2 e0       	ldi	r31, 0x02	; 2
   1cbf8:	2b d0       	rcall	.+86     	; 0x1cc50 <__fp_powser>
   1cbfa:	4f 91       	pop	r20
   1cbfc:	5f 91       	pop	r21
   1cbfe:	ef 91       	pop	r30
   1cc00:	ff 91       	pop	r31
   1cc02:	e5 95       	asr	r30
   1cc04:	ee 1f       	adc	r30, r30
   1cc06:	ff 1f       	adc	r31, r31
   1cc08:	49 f0       	breq	.+18     	; 0x1cc1c <exp+0x52>
   1cc0a:	fe 57       	subi	r31, 0x7E	; 126
   1cc0c:	e0 68       	ori	r30, 0x80	; 128
   1cc0e:	44 27       	eor	r20, r20
   1cc10:	ee 0f       	add	r30, r30
   1cc12:	44 1f       	adc	r20, r20
   1cc14:	fa 95       	dec	r31
   1cc16:	e1 f7       	brne	.-8      	; 0x1cc10 <exp+0x46>
   1cc18:	41 95       	neg	r20
   1cc1a:	55 0b       	sbc	r21, r21
   1cc1c:	4b d0       	rcall	.+150    	; 0x1ccb4 <ldexp>
   1cc1e:	0f 90       	pop	r0
   1cc20:	07 fe       	sbrs	r0, 7
   1cc22:	3d c0       	rjmp	.+122    	; 0x1cc9e <inverse>
   1cc24:	08 95       	ret

0001cc26 <__fp_mpack>:
   1cc26:	9f 3f       	cpi	r25, 0xFF	; 255
   1cc28:	31 f0       	breq	.+12     	; 0x1cc36 <__fp_mpack_finite+0xc>

0001cc2a <__fp_mpack_finite>:
   1cc2a:	91 50       	subi	r25, 0x01	; 1
   1cc2c:	20 f4       	brcc	.+8      	; 0x1cc36 <__fp_mpack_finite+0xc>
   1cc2e:	87 95       	ror	r24
   1cc30:	77 95       	ror	r23
   1cc32:	67 95       	ror	r22
   1cc34:	b7 95       	ror	r27
   1cc36:	88 0f       	add	r24, r24
   1cc38:	91 1d       	adc	r25, r1
   1cc3a:	96 95       	lsr	r25
   1cc3c:	87 95       	ror	r24
   1cc3e:	97 f9       	bld	r25, 7
   1cc40:	08 95       	ret

0001cc42 <__fp_norm2>:
   1cc42:	91 50       	subi	r25, 0x01	; 1
   1cc44:	50 40       	sbci	r21, 0x00	; 0
   1cc46:	66 0f       	add	r22, r22
   1cc48:	77 1f       	adc	r23, r23
   1cc4a:	88 1f       	adc	r24, r24
   1cc4c:	d2 f7       	brpl	.-12     	; 0x1cc42 <__fp_norm2>
   1cc4e:	08 95       	ret

0001cc50 <__fp_powser>:
   1cc50:	df 93       	push	r29
   1cc52:	cf 93       	push	r28
   1cc54:	1f 93       	push	r17
   1cc56:	0f 93       	push	r16
   1cc58:	ff 92       	push	r15
   1cc5a:	ef 92       	push	r14
   1cc5c:	df 92       	push	r13
   1cc5e:	7b 01       	movw	r14, r22
   1cc60:	8c 01       	movw	r16, r24
   1cc62:	68 94       	set
   1cc64:	06 c0       	rjmp	.+12     	; 0x1cc72 <__fp_powser+0x22>
   1cc66:	da 2e       	mov	r13, r26
   1cc68:	ef 01       	movw	r28, r30
   1cc6a:	0e 94 a8 cd 	call	0x19b50	; 0x19b50 <__mulsf3x>
   1cc6e:	fe 01       	movw	r30, r28
   1cc70:	e8 94       	clt
   1cc72:	a5 91       	lpm	r26, Z+
   1cc74:	25 91       	lpm	r18, Z+
   1cc76:	35 91       	lpm	r19, Z+
   1cc78:	45 91       	lpm	r20, Z+
   1cc7a:	55 91       	lpm	r21, Z+
   1cc7c:	a6 f3       	brts	.-24     	; 0x1cc66 <__fp_powser+0x16>
   1cc7e:	ef 01       	movw	r28, r30
   1cc80:	0e 94 fb cb 	call	0x197f6	; 0x197f6 <__addsf3x>
   1cc84:	fe 01       	movw	r30, r28
   1cc86:	97 01       	movw	r18, r14
   1cc88:	a8 01       	movw	r20, r16
   1cc8a:	da 94       	dec	r13
   1cc8c:	69 f7       	brne	.-38     	; 0x1cc68 <__fp_powser+0x18>
   1cc8e:	df 90       	pop	r13
   1cc90:	ef 90       	pop	r14
   1cc92:	ff 90       	pop	r15
   1cc94:	0f 91       	pop	r16
   1cc96:	1f 91       	pop	r17
   1cc98:	cf 91       	pop	r28
   1cc9a:	df 91       	pop	r29
   1cc9c:	08 95       	ret

0001cc9e <inverse>:
   1cc9e:	9b 01       	movw	r18, r22
   1cca0:	ac 01       	movw	r20, r24
   1cca2:	60 e0       	ldi	r22, 0x00	; 0
   1cca4:	70 e0       	ldi	r23, 0x00	; 0
   1cca6:	80 e8       	ldi	r24, 0x80	; 128
   1cca8:	9f e3       	ldi	r25, 0x3F	; 63
   1ccaa:	0c 94 52 cc 	jmp	0x198a4	; 0x198a4 <__divsf3>
   1ccae:	0c 94 47 cd 	jmp	0x19a8e	; 0x19a8e <__fp_inf>
   1ccb2:	b9 cf       	rjmp	.-142    	; 0x1cc26 <__fp_mpack>

0001ccb4 <ldexp>:
   1ccb4:	0e 94 77 cd 	call	0x19aee	; 0x19aee <__fp_splitA>
   1ccb8:	e0 f3       	brcs	.-8      	; 0x1ccb2 <inverse+0x14>
   1ccba:	99 23       	and	r25, r25
   1ccbc:	d1 f3       	breq	.-12     	; 0x1ccb2 <inverse+0x14>
   1ccbe:	94 0f       	add	r25, r20
   1ccc0:	51 1d       	adc	r21, r1
   1ccc2:	ab f3       	brvs	.-22     	; 0x1ccae <inverse+0x10>
   1ccc4:	91 50       	subi	r25, 0x01	; 1
   1ccc6:	50 40       	sbci	r21, 0x00	; 0
   1ccc8:	94 f0       	brlt	.+36     	; 0x1ccee <ldexp+0x3a>
   1ccca:	59 f0       	breq	.+22     	; 0x1cce2 <ldexp+0x2e>
   1cccc:	88 23       	and	r24, r24
   1ccce:	32 f0       	brmi	.+12     	; 0x1ccdc <ldexp+0x28>
   1ccd0:	66 0f       	add	r22, r22
   1ccd2:	77 1f       	adc	r23, r23
   1ccd4:	88 1f       	adc	r24, r24
   1ccd6:	91 50       	subi	r25, 0x01	; 1
   1ccd8:	50 40       	sbci	r21, 0x00	; 0
   1ccda:	c1 f7       	brne	.-16     	; 0x1cccc <ldexp+0x18>
   1ccdc:	9e 3f       	cpi	r25, 0xFE	; 254
   1ccde:	51 05       	cpc	r21, r1
   1cce0:	34 f7       	brge	.-52     	; 0x1ccae <inverse+0x10>
   1cce2:	88 0f       	add	r24, r24
   1cce4:	91 1d       	adc	r25, r1
   1cce6:	96 95       	lsr	r25
   1cce8:	87 95       	ror	r24
   1ccea:	97 f9       	bld	r25, 7
   1ccec:	08 95       	ret
   1ccee:	5f 3f       	cpi	r21, 0xFF	; 255
   1ccf0:	ac f0       	brlt	.+42     	; 0x1cd1c <ldexp+0x68>
   1ccf2:	98 3e       	cpi	r25, 0xE8	; 232
   1ccf4:	9c f0       	brlt	.+38     	; 0x1cd1c <ldexp+0x68>
   1ccf6:	bb 27       	eor	r27, r27
   1ccf8:	86 95       	lsr	r24
   1ccfa:	77 95       	ror	r23
   1ccfc:	67 95       	ror	r22
   1ccfe:	b7 95       	ror	r27
   1cd00:	08 f4       	brcc	.+2      	; 0x1cd04 <ldexp+0x50>
   1cd02:	b1 60       	ori	r27, 0x01	; 1
   1cd04:	93 95       	inc	r25
   1cd06:	c1 f7       	brne	.-16     	; 0x1ccf8 <ldexp+0x44>
   1cd08:	bb 0f       	add	r27, r27
   1cd0a:	58 f7       	brcc	.-42     	; 0x1cce2 <ldexp+0x2e>
   1cd0c:	11 f4       	brne	.+4      	; 0x1cd12 <ldexp+0x5e>
   1cd0e:	60 ff       	sbrs	r22, 0
   1cd10:	e8 cf       	rjmp	.-48     	; 0x1cce2 <ldexp+0x2e>
   1cd12:	6f 5f       	subi	r22, 0xFF	; 255
   1cd14:	7f 4f       	sbci	r23, 0xFF	; 255
   1cd16:	8f 4f       	sbci	r24, 0xFF	; 255
   1cd18:	9f 4f       	sbci	r25, 0xFF	; 255
   1cd1a:	e3 cf       	rjmp	.-58     	; 0x1cce2 <ldexp+0x2e>
   1cd1c:	0c 94 92 cd 	jmp	0x19b24	; 0x19b24 <__fp_szero>
   1cd20:	0e f0       	brts	.+2      	; 0x1cd24 <ldexp+0x70>
   1cd22:	81 cf       	rjmp	.-254    	; 0x1cc26 <__fp_mpack>
   1cd24:	0c 94 4d cd 	jmp	0x19a9a	; 0x19a9a <__fp_nan>
   1cd28:	68 94       	set
   1cd2a:	0c 94 47 cd 	jmp	0x19a8e	; 0x19a8e <__fp_inf>

0001cd2e <log>:
   1cd2e:	0e 94 77 cd 	call	0x19aee	; 0x19aee <__fp_splitA>
   1cd32:	b0 f3       	brcs	.-20     	; 0x1cd20 <ldexp+0x6c>
   1cd34:	99 23       	and	r25, r25
   1cd36:	c1 f3       	breq	.-16     	; 0x1cd28 <ldexp+0x74>
   1cd38:	ae f3       	brts	.-22     	; 0x1cd24 <ldexp+0x70>
   1cd3a:	df 93       	push	r29
   1cd3c:	cf 93       	push	r28
   1cd3e:	1f 93       	push	r17
   1cd40:	0f 93       	push	r16
   1cd42:	ff 92       	push	r15
   1cd44:	c9 2f       	mov	r28, r25
   1cd46:	dd 27       	eor	r29, r29
   1cd48:	88 23       	and	r24, r24
   1cd4a:	2a f0       	brmi	.+10     	; 0x1cd56 <log+0x28>
   1cd4c:	21 97       	sbiw	r28, 0x01	; 1
   1cd4e:	66 0f       	add	r22, r22
   1cd50:	77 1f       	adc	r23, r23
   1cd52:	88 1f       	adc	r24, r24
   1cd54:	da f7       	brpl	.-10     	; 0x1cd4c <log+0x1e>
   1cd56:	20 e0       	ldi	r18, 0x00	; 0
   1cd58:	30 e0       	ldi	r19, 0x00	; 0
   1cd5a:	40 e8       	ldi	r20, 0x80	; 128
   1cd5c:	5f eb       	ldi	r21, 0xBF	; 191
   1cd5e:	9f e3       	ldi	r25, 0x3F	; 63
   1cd60:	88 39       	cpi	r24, 0x98	; 152
   1cd62:	20 f0       	brcs	.+8      	; 0x1cd6c <log+0x3e>
   1cd64:	80 3e       	cpi	r24, 0xE0	; 224
   1cd66:	38 f0       	brcs	.+14     	; 0x1cd76 <log+0x48>
   1cd68:	21 96       	adiw	r28, 0x01	; 1
   1cd6a:	8f 77       	andi	r24, 0x7F	; 127
   1cd6c:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   1cd70:	e8 e5       	ldi	r30, 0x58	; 88
   1cd72:	f2 e0       	ldi	r31, 0x02	; 2
   1cd74:	04 c0       	rjmp	.+8      	; 0x1cd7e <log+0x50>
   1cd76:	0e 94 ea cb 	call	0x197d4	; 0x197d4 <__addsf3>
   1cd7a:	e5 e8       	ldi	r30, 0x85	; 133
   1cd7c:	f2 e0       	ldi	r31, 0x02	; 2
   1cd7e:	68 df       	rcall	.-304    	; 0x1cc50 <__fp_powser>
   1cd80:	8b 01       	movw	r16, r22
   1cd82:	be 01       	movw	r22, r28
   1cd84:	ec 01       	movw	r28, r24
   1cd86:	fb 2e       	mov	r15, r27
   1cd88:	6f 57       	subi	r22, 0x7F	; 127
   1cd8a:	71 09       	sbc	r23, r1
   1cd8c:	75 95       	asr	r23
   1cd8e:	77 1f       	adc	r23, r23
   1cd90:	88 0b       	sbc	r24, r24
   1cd92:	99 0b       	sbc	r25, r25
   1cd94:	0e 94 e8 cc 	call	0x199d0	; 0x199d0 <__floatsisf>
   1cd98:	28 e1       	ldi	r18, 0x18	; 24
   1cd9a:	32 e7       	ldi	r19, 0x72	; 114
   1cd9c:	41 e3       	ldi	r20, 0x31	; 49
   1cd9e:	5f e3       	ldi	r21, 0x3F	; 63
   1cda0:	0e 94 a8 cd 	call	0x19b50	; 0x19b50 <__mulsf3x>
   1cda4:	af 2d       	mov	r26, r15
   1cda6:	98 01       	movw	r18, r16
   1cda8:	ae 01       	movw	r20, r28
   1cdaa:	ff 90       	pop	r15
   1cdac:	0f 91       	pop	r16
   1cdae:	1f 91       	pop	r17
   1cdb0:	cf 91       	pop	r28
   1cdb2:	df 91       	pop	r29
   1cdb4:	0e 94 fb cb 	call	0x197f6	; 0x197f6 <__addsf3x>
   1cdb8:	0c 94 5e cd 	jmp	0x19abc	; 0x19abc <__fp_round>

0001cdbc <modf>:
   1cdbc:	fa 01       	movw	r30, r20
   1cdbe:	dc 01       	movw	r26, r24
   1cdc0:	aa 0f       	add	r26, r26
   1cdc2:	bb 1f       	adc	r27, r27
   1cdc4:	9b 01       	movw	r18, r22
   1cdc6:	ac 01       	movw	r20, r24
   1cdc8:	bf 57       	subi	r27, 0x7F	; 127
   1cdca:	28 f4       	brcc	.+10     	; 0x1cdd6 <modf+0x1a>
   1cdcc:	22 27       	eor	r18, r18
   1cdce:	33 27       	eor	r19, r19
   1cdd0:	44 27       	eor	r20, r20
   1cdd2:	50 78       	andi	r21, 0x80	; 128
   1cdd4:	20 c0       	rjmp	.+64     	; 0x1ce16 <modf+0x5a>
   1cdd6:	b7 51       	subi	r27, 0x17	; 23
   1cdd8:	90 f4       	brcc	.+36     	; 0x1cdfe <modf+0x42>
   1cdda:	ab 2f       	mov	r26, r27
   1cddc:	00 24       	eor	r0, r0
   1cdde:	46 95       	lsr	r20
   1cde0:	37 95       	ror	r19
   1cde2:	27 95       	ror	r18
   1cde4:	01 1c       	adc	r0, r1
   1cde6:	a3 95       	inc	r26
   1cde8:	d2 f3       	brmi	.-12     	; 0x1cdde <modf+0x22>
   1cdea:	00 20       	and	r0, r0
   1cdec:	71 f0       	breq	.+28     	; 0x1ce0a <modf+0x4e>
   1cdee:	22 0f       	add	r18, r18
   1cdf0:	33 1f       	adc	r19, r19
   1cdf2:	44 1f       	adc	r20, r20
   1cdf4:	b3 95       	inc	r27
   1cdf6:	da f3       	brmi	.-10     	; 0x1cdee <modf+0x32>
   1cdf8:	0e d0       	rcall	.+28     	; 0x1ce16 <modf+0x5a>
   1cdfa:	0c 94 e9 cb 	jmp	0x197d2	; 0x197d2 <__subsf3>
   1cdfe:	61 30       	cpi	r22, 0x01	; 1
   1ce00:	71 05       	cpc	r23, r1
   1ce02:	a0 e8       	ldi	r26, 0x80	; 128
   1ce04:	8a 07       	cpc	r24, r26
   1ce06:	b9 46       	sbci	r27, 0x69	; 105
   1ce08:	30 f4       	brcc	.+12     	; 0x1ce16 <modf+0x5a>
   1ce0a:	9b 01       	movw	r18, r22
   1ce0c:	ac 01       	movw	r20, r24
   1ce0e:	66 27       	eor	r22, r22
   1ce10:	77 27       	eor	r23, r23
   1ce12:	88 27       	eor	r24, r24
   1ce14:	90 78       	andi	r25, 0x80	; 128
   1ce16:	30 96       	adiw	r30, 0x00	; 0
   1ce18:	21 f0       	breq	.+8      	; 0x1ce22 <modf+0x66>
   1ce1a:	20 83       	st	Z, r18
   1ce1c:	31 83       	std	Z+1, r19	; 0x01
   1ce1e:	42 83       	std	Z+2, r20	; 0x02
   1ce20:	53 83       	std	Z+3, r21	; 0x03
   1ce22:	08 95       	ret

0001ce24 <__udivmodqi4>:
   1ce24:	99 1b       	sub	r25, r25
   1ce26:	79 e0       	ldi	r23, 0x09	; 9
   1ce28:	04 c0       	rjmp	.+8      	; 0x1ce32 <__udivmodqi4_ep>

0001ce2a <__udivmodqi4_loop>:
   1ce2a:	99 1f       	adc	r25, r25
   1ce2c:	96 17       	cp	r25, r22
   1ce2e:	08 f0       	brcs	.+2      	; 0x1ce32 <__udivmodqi4_ep>
   1ce30:	96 1b       	sub	r25, r22

0001ce32 <__udivmodqi4_ep>:
   1ce32:	88 1f       	adc	r24, r24
   1ce34:	7a 95       	dec	r23
   1ce36:	c9 f7       	brne	.-14     	; 0x1ce2a <__udivmodqi4_loop>
   1ce38:	80 95       	com	r24
   1ce3a:	08 95       	ret

0001ce3c <__udivmodhi4>:
   1ce3c:	aa 1b       	sub	r26, r26
   1ce3e:	bb 1b       	sub	r27, r27
   1ce40:	51 e1       	ldi	r21, 0x11	; 17
   1ce42:	07 c0       	rjmp	.+14     	; 0x1ce52 <__udivmodhi4_ep>

0001ce44 <__udivmodhi4_loop>:
   1ce44:	aa 1f       	adc	r26, r26
   1ce46:	bb 1f       	adc	r27, r27
   1ce48:	a6 17       	cp	r26, r22
   1ce4a:	b7 07       	cpc	r27, r23
   1ce4c:	10 f0       	brcs	.+4      	; 0x1ce52 <__udivmodhi4_ep>
   1ce4e:	a6 1b       	sub	r26, r22
   1ce50:	b7 0b       	sbc	r27, r23

0001ce52 <__udivmodhi4_ep>:
   1ce52:	88 1f       	adc	r24, r24
   1ce54:	99 1f       	adc	r25, r25
   1ce56:	5a 95       	dec	r21
   1ce58:	a9 f7       	brne	.-22     	; 0x1ce44 <__udivmodhi4_loop>
   1ce5a:	80 95       	com	r24
   1ce5c:	90 95       	com	r25
   1ce5e:	bc 01       	movw	r22, r24
   1ce60:	cd 01       	movw	r24, r26
   1ce62:	08 95       	ret

0001ce64 <__divmodhi4>:
   1ce64:	97 fb       	bst	r25, 7
   1ce66:	07 2e       	mov	r0, r23
   1ce68:	16 f4       	brtc	.+4      	; 0x1ce6e <__divmodhi4+0xa>
   1ce6a:	00 94       	com	r0
   1ce6c:	06 d0       	rcall	.+12     	; 0x1ce7a <__divmodhi4_neg1>
   1ce6e:	77 fd       	sbrc	r23, 7
   1ce70:	08 d0       	rcall	.+16     	; 0x1ce82 <__divmodhi4_neg2>
   1ce72:	e4 df       	rcall	.-56     	; 0x1ce3c <__udivmodhi4>
   1ce74:	07 fc       	sbrc	r0, 7
   1ce76:	05 d0       	rcall	.+10     	; 0x1ce82 <__divmodhi4_neg2>
   1ce78:	3e f4       	brtc	.+14     	; 0x1ce88 <__divmodhi4_exit>

0001ce7a <__divmodhi4_neg1>:
   1ce7a:	90 95       	com	r25
   1ce7c:	81 95       	neg	r24
   1ce7e:	9f 4f       	sbci	r25, 0xFF	; 255
   1ce80:	08 95       	ret

0001ce82 <__divmodhi4_neg2>:
   1ce82:	70 95       	com	r23
   1ce84:	61 95       	neg	r22
   1ce86:	7f 4f       	sbci	r23, 0xFF	; 255

0001ce88 <__divmodhi4_exit>:
   1ce88:	08 95       	ret

0001ce8a <__udivmodsi4>:
   1ce8a:	a1 e2       	ldi	r26, 0x21	; 33
   1ce8c:	1a 2e       	mov	r1, r26
   1ce8e:	aa 1b       	sub	r26, r26
   1ce90:	bb 1b       	sub	r27, r27
   1ce92:	fd 01       	movw	r30, r26
   1ce94:	0d c0       	rjmp	.+26     	; 0x1ceb0 <__udivmodsi4_ep>

0001ce96 <__udivmodsi4_loop>:
   1ce96:	aa 1f       	adc	r26, r26
   1ce98:	bb 1f       	adc	r27, r27
   1ce9a:	ee 1f       	adc	r30, r30
   1ce9c:	ff 1f       	adc	r31, r31
   1ce9e:	a2 17       	cp	r26, r18
   1cea0:	b3 07       	cpc	r27, r19
   1cea2:	e4 07       	cpc	r30, r20
   1cea4:	f5 07       	cpc	r31, r21
   1cea6:	20 f0       	brcs	.+8      	; 0x1ceb0 <__udivmodsi4_ep>
   1cea8:	a2 1b       	sub	r26, r18
   1ceaa:	b3 0b       	sbc	r27, r19
   1ceac:	e4 0b       	sbc	r30, r20
   1ceae:	f5 0b       	sbc	r31, r21

0001ceb0 <__udivmodsi4_ep>:
   1ceb0:	66 1f       	adc	r22, r22
   1ceb2:	77 1f       	adc	r23, r23
   1ceb4:	88 1f       	adc	r24, r24
   1ceb6:	99 1f       	adc	r25, r25
   1ceb8:	1a 94       	dec	r1
   1ceba:	69 f7       	brne	.-38     	; 0x1ce96 <__udivmodsi4_loop>
   1cebc:	60 95       	com	r22
   1cebe:	70 95       	com	r23
   1cec0:	80 95       	com	r24
   1cec2:	90 95       	com	r25
   1cec4:	9b 01       	movw	r18, r22
   1cec6:	ac 01       	movw	r20, r24
   1cec8:	bd 01       	movw	r22, r26
   1ceca:	cf 01       	movw	r24, r30
   1cecc:	08 95       	ret

0001cece <__divmodsi4>:
   1cece:	05 2e       	mov	r0, r21
   1ced0:	97 fb       	bst	r25, 7
   1ced2:	16 f4       	brtc	.+4      	; 0x1ced8 <__divmodsi4+0xa>
   1ced4:	00 94       	com	r0
   1ced6:	0f d0       	rcall	.+30     	; 0x1cef6 <__negsi2>
   1ced8:	57 fd       	sbrc	r21, 7
   1ceda:	05 d0       	rcall	.+10     	; 0x1cee6 <__divmodsi4_neg2>
   1cedc:	d6 df       	rcall	.-84     	; 0x1ce8a <__udivmodsi4>
   1cede:	07 fc       	sbrc	r0, 7
   1cee0:	02 d0       	rcall	.+4      	; 0x1cee6 <__divmodsi4_neg2>
   1cee2:	46 f4       	brtc	.+16     	; 0x1cef4 <__divmodsi4_exit>
   1cee4:	08 c0       	rjmp	.+16     	; 0x1cef6 <__negsi2>

0001cee6 <__divmodsi4_neg2>:
   1cee6:	50 95       	com	r21
   1cee8:	40 95       	com	r20
   1ceea:	30 95       	com	r19
   1ceec:	21 95       	neg	r18
   1ceee:	3f 4f       	sbci	r19, 0xFF	; 255
   1cef0:	4f 4f       	sbci	r20, 0xFF	; 255
   1cef2:	5f 4f       	sbci	r21, 0xFF	; 255

0001cef4 <__divmodsi4_exit>:
   1cef4:	08 95       	ret

0001cef6 <__negsi2>:
   1cef6:	90 95       	com	r25
   1cef8:	80 95       	com	r24
   1cefa:	70 95       	com	r23
   1cefc:	61 95       	neg	r22
   1cefe:	7f 4f       	sbci	r23, 0xFF	; 255
   1cf00:	8f 4f       	sbci	r24, 0xFF	; 255
   1cf02:	9f 4f       	sbci	r25, 0xFF	; 255
   1cf04:	08 95       	ret

0001cf06 <__tablejump2__>:
   1cf06:	ee 0f       	add	r30, r30
   1cf08:	ff 1f       	adc	r31, r31
   1cf0a:	88 1f       	adc	r24, r24
   1cf0c:	8b bf       	out	0x3b, r24	; 59
   1cf0e:	07 90       	elpm	r0, Z+
   1cf10:	f6 91       	elpm	r31, Z
   1cf12:	e0 2d       	mov	r30, r0
   1cf14:	19 94       	eijmp

0001cf16 <__umulhisi3>:
   1cf16:	a2 9f       	mul	r26, r18
   1cf18:	b0 01       	movw	r22, r0
   1cf1a:	b3 9f       	mul	r27, r19
   1cf1c:	c0 01       	movw	r24, r0
   1cf1e:	a3 9f       	mul	r26, r19
   1cf20:	70 0d       	add	r23, r0
   1cf22:	81 1d       	adc	r24, r1
   1cf24:	11 24       	eor	r1, r1
   1cf26:	91 1d       	adc	r25, r1
   1cf28:	b2 9f       	mul	r27, r18
   1cf2a:	70 0d       	add	r23, r0
   1cf2c:	81 1d       	adc	r24, r1
   1cf2e:	11 24       	eor	r1, r1
   1cf30:	91 1d       	adc	r25, r1
   1cf32:	08 95       	ret

0001cf34 <__muluhisi3>:
   1cf34:	f0 df       	rcall	.-32     	; 0x1cf16 <__umulhisi3>
   1cf36:	a5 9f       	mul	r26, r21
   1cf38:	90 0d       	add	r25, r0
   1cf3a:	b4 9f       	mul	r27, r20
   1cf3c:	90 0d       	add	r25, r0
   1cf3e:	a4 9f       	mul	r26, r20
   1cf40:	80 0d       	add	r24, r0
   1cf42:	91 1d       	adc	r25, r1
   1cf44:	11 24       	eor	r1, r1
   1cf46:	08 95       	ret

0001cf48 <__cmpdi2_s8>:
   1cf48:	00 24       	eor	r0, r0
   1cf4a:	a7 fd       	sbrc	r26, 7
   1cf4c:	00 94       	com	r0
   1cf4e:	2a 17       	cp	r18, r26
   1cf50:	30 05       	cpc	r19, r0
   1cf52:	40 05       	cpc	r20, r0
   1cf54:	50 05       	cpc	r21, r0
   1cf56:	60 05       	cpc	r22, r0
   1cf58:	70 05       	cpc	r23, r0
   1cf5a:	80 05       	cpc	r24, r0
   1cf5c:	90 05       	cpc	r25, r0
   1cf5e:	08 95       	ret

0001cf60 <malloc>:
   1cf60:	0f 93       	push	r16
   1cf62:	1f 93       	push	r17
   1cf64:	cf 93       	push	r28
   1cf66:	df 93       	push	r29
   1cf68:	82 30       	cpi	r24, 0x02	; 2
   1cf6a:	91 05       	cpc	r25, r1
   1cf6c:	10 f4       	brcc	.+4      	; 0x1cf72 <malloc+0x12>
   1cf6e:	82 e0       	ldi	r24, 0x02	; 2
   1cf70:	90 e0       	ldi	r25, 0x00	; 0
   1cf72:	e0 91 d0 1a 	lds	r30, 0x1AD0	; 0x801ad0 <__flp>
   1cf76:	f0 91 d1 1a 	lds	r31, 0x1AD1	; 0x801ad1 <__flp+0x1>
   1cf7a:	20 e0       	ldi	r18, 0x00	; 0
   1cf7c:	30 e0       	ldi	r19, 0x00	; 0
   1cf7e:	a0 e0       	ldi	r26, 0x00	; 0
   1cf80:	b0 e0       	ldi	r27, 0x00	; 0
   1cf82:	30 97       	sbiw	r30, 0x00	; 0
   1cf84:	19 f1       	breq	.+70     	; 0x1cfcc <malloc+0x6c>
   1cf86:	40 81       	ld	r20, Z
   1cf88:	51 81       	ldd	r21, Z+1	; 0x01
   1cf8a:	02 81       	ldd	r16, Z+2	; 0x02
   1cf8c:	13 81       	ldd	r17, Z+3	; 0x03
   1cf8e:	48 17       	cp	r20, r24
   1cf90:	59 07       	cpc	r21, r25
   1cf92:	c8 f0       	brcs	.+50     	; 0x1cfc6 <malloc+0x66>
   1cf94:	84 17       	cp	r24, r20
   1cf96:	95 07       	cpc	r25, r21
   1cf98:	69 f4       	brne	.+26     	; 0x1cfb4 <malloc+0x54>
   1cf9a:	10 97       	sbiw	r26, 0x00	; 0
   1cf9c:	31 f0       	breq	.+12     	; 0x1cfaa <malloc+0x4a>
   1cf9e:	12 96       	adiw	r26, 0x02	; 2
   1cfa0:	0c 93       	st	X, r16
   1cfa2:	12 97       	sbiw	r26, 0x02	; 2
   1cfa4:	13 96       	adiw	r26, 0x03	; 3
   1cfa6:	1c 93       	st	X, r17
   1cfa8:	27 c0       	rjmp	.+78     	; 0x1cff8 <malloc+0x98>
   1cfaa:	00 93 d0 1a 	sts	0x1AD0, r16	; 0x801ad0 <__flp>
   1cfae:	10 93 d1 1a 	sts	0x1AD1, r17	; 0x801ad1 <__flp+0x1>
   1cfb2:	22 c0       	rjmp	.+68     	; 0x1cff8 <malloc+0x98>
   1cfb4:	21 15       	cp	r18, r1
   1cfb6:	31 05       	cpc	r19, r1
   1cfb8:	19 f0       	breq	.+6      	; 0x1cfc0 <malloc+0x60>
   1cfba:	42 17       	cp	r20, r18
   1cfbc:	53 07       	cpc	r21, r19
   1cfbe:	18 f4       	brcc	.+6      	; 0x1cfc6 <malloc+0x66>
   1cfc0:	9a 01       	movw	r18, r20
   1cfc2:	bd 01       	movw	r22, r26
   1cfc4:	ef 01       	movw	r28, r30
   1cfc6:	df 01       	movw	r26, r30
   1cfc8:	f8 01       	movw	r30, r16
   1cfca:	db cf       	rjmp	.-74     	; 0x1cf82 <malloc+0x22>
   1cfcc:	21 15       	cp	r18, r1
   1cfce:	31 05       	cpc	r19, r1
   1cfd0:	f9 f0       	breq	.+62     	; 0x1d010 <malloc+0xb0>
   1cfd2:	28 1b       	sub	r18, r24
   1cfd4:	39 0b       	sbc	r19, r25
   1cfd6:	24 30       	cpi	r18, 0x04	; 4
   1cfd8:	31 05       	cpc	r19, r1
   1cfda:	80 f4       	brcc	.+32     	; 0x1cffc <malloc+0x9c>
   1cfdc:	8a 81       	ldd	r24, Y+2	; 0x02
   1cfde:	9b 81       	ldd	r25, Y+3	; 0x03
   1cfe0:	61 15       	cp	r22, r1
   1cfe2:	71 05       	cpc	r23, r1
   1cfe4:	21 f0       	breq	.+8      	; 0x1cfee <malloc+0x8e>
   1cfe6:	fb 01       	movw	r30, r22
   1cfe8:	93 83       	std	Z+3, r25	; 0x03
   1cfea:	82 83       	std	Z+2, r24	; 0x02
   1cfec:	04 c0       	rjmp	.+8      	; 0x1cff6 <malloc+0x96>
   1cfee:	90 93 d1 1a 	sts	0x1AD1, r25	; 0x801ad1 <__flp+0x1>
   1cff2:	80 93 d0 1a 	sts	0x1AD0, r24	; 0x801ad0 <__flp>
   1cff6:	fe 01       	movw	r30, r28
   1cff8:	32 96       	adiw	r30, 0x02	; 2
   1cffa:	44 c0       	rjmp	.+136    	; 0x1d084 <malloc+0x124>
   1cffc:	fe 01       	movw	r30, r28
   1cffe:	e2 0f       	add	r30, r18
   1d000:	f3 1f       	adc	r31, r19
   1d002:	81 93       	st	Z+, r24
   1d004:	91 93       	st	Z+, r25
   1d006:	22 50       	subi	r18, 0x02	; 2
   1d008:	31 09       	sbc	r19, r1
   1d00a:	39 83       	std	Y+1, r19	; 0x01
   1d00c:	28 83       	st	Y, r18
   1d00e:	3a c0       	rjmp	.+116    	; 0x1d084 <malloc+0x124>
   1d010:	20 91 ce 1a 	lds	r18, 0x1ACE	; 0x801ace <__brkval>
   1d014:	30 91 cf 1a 	lds	r19, 0x1ACF	; 0x801acf <__brkval+0x1>
   1d018:	23 2b       	or	r18, r19
   1d01a:	41 f4       	brne	.+16     	; 0x1d02c <malloc+0xcc>
   1d01c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
   1d020:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
   1d024:	30 93 cf 1a 	sts	0x1ACF, r19	; 0x801acf <__brkval+0x1>
   1d028:	20 93 ce 1a 	sts	0x1ACE, r18	; 0x801ace <__brkval>
   1d02c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
   1d030:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
   1d034:	21 15       	cp	r18, r1
   1d036:	31 05       	cpc	r19, r1
   1d038:	41 f4       	brne	.+16     	; 0x1d04a <malloc+0xea>
   1d03a:	2d b7       	in	r18, 0x3d	; 61
   1d03c:	3e b7       	in	r19, 0x3e	; 62
   1d03e:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
   1d042:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
   1d046:	24 1b       	sub	r18, r20
   1d048:	35 0b       	sbc	r19, r21
   1d04a:	e0 91 ce 1a 	lds	r30, 0x1ACE	; 0x801ace <__brkval>
   1d04e:	f0 91 cf 1a 	lds	r31, 0x1ACF	; 0x801acf <__brkval+0x1>
   1d052:	e2 17       	cp	r30, r18
   1d054:	f3 07       	cpc	r31, r19
   1d056:	a0 f4       	brcc	.+40     	; 0x1d080 <malloc+0x120>
   1d058:	2e 1b       	sub	r18, r30
   1d05a:	3f 0b       	sbc	r19, r31
   1d05c:	28 17       	cp	r18, r24
   1d05e:	39 07       	cpc	r19, r25
   1d060:	78 f0       	brcs	.+30     	; 0x1d080 <malloc+0x120>
   1d062:	ac 01       	movw	r20, r24
   1d064:	4e 5f       	subi	r20, 0xFE	; 254
   1d066:	5f 4f       	sbci	r21, 0xFF	; 255
   1d068:	24 17       	cp	r18, r20
   1d06a:	35 07       	cpc	r19, r21
   1d06c:	48 f0       	brcs	.+18     	; 0x1d080 <malloc+0x120>
   1d06e:	4e 0f       	add	r20, r30
   1d070:	5f 1f       	adc	r21, r31
   1d072:	50 93 cf 1a 	sts	0x1ACF, r21	; 0x801acf <__brkval+0x1>
   1d076:	40 93 ce 1a 	sts	0x1ACE, r20	; 0x801ace <__brkval>
   1d07a:	81 93       	st	Z+, r24
   1d07c:	91 93       	st	Z+, r25
   1d07e:	02 c0       	rjmp	.+4      	; 0x1d084 <malloc+0x124>
   1d080:	e0 e0       	ldi	r30, 0x00	; 0
   1d082:	f0 e0       	ldi	r31, 0x00	; 0
   1d084:	cf 01       	movw	r24, r30
   1d086:	df 91       	pop	r29
   1d088:	cf 91       	pop	r28
   1d08a:	1f 91       	pop	r17
   1d08c:	0f 91       	pop	r16
   1d08e:	08 95       	ret

0001d090 <free>:
   1d090:	cf 93       	push	r28
   1d092:	df 93       	push	r29
   1d094:	00 97       	sbiw	r24, 0x00	; 0
   1d096:	09 f4       	brne	.+2      	; 0x1d09a <free+0xa>
   1d098:	81 c0       	rjmp	.+258    	; 0x1d19c <free+0x10c>
   1d09a:	fc 01       	movw	r30, r24
   1d09c:	32 97       	sbiw	r30, 0x02	; 2
   1d09e:	13 82       	std	Z+3, r1	; 0x03
   1d0a0:	12 82       	std	Z+2, r1	; 0x02
   1d0a2:	a0 91 d0 1a 	lds	r26, 0x1AD0	; 0x801ad0 <__flp>
   1d0a6:	b0 91 d1 1a 	lds	r27, 0x1AD1	; 0x801ad1 <__flp+0x1>
   1d0aa:	10 97       	sbiw	r26, 0x00	; 0
   1d0ac:	81 f4       	brne	.+32     	; 0x1d0ce <free+0x3e>
   1d0ae:	20 81       	ld	r18, Z
   1d0b0:	31 81       	ldd	r19, Z+1	; 0x01
   1d0b2:	82 0f       	add	r24, r18
   1d0b4:	93 1f       	adc	r25, r19
   1d0b6:	20 91 ce 1a 	lds	r18, 0x1ACE	; 0x801ace <__brkval>
   1d0ba:	30 91 cf 1a 	lds	r19, 0x1ACF	; 0x801acf <__brkval+0x1>
   1d0be:	28 17       	cp	r18, r24
   1d0c0:	39 07       	cpc	r19, r25
   1d0c2:	51 f5       	brne	.+84     	; 0x1d118 <free+0x88>
   1d0c4:	f0 93 cf 1a 	sts	0x1ACF, r31	; 0x801acf <__brkval+0x1>
   1d0c8:	e0 93 ce 1a 	sts	0x1ACE, r30	; 0x801ace <__brkval>
   1d0cc:	67 c0       	rjmp	.+206    	; 0x1d19c <free+0x10c>
   1d0ce:	ed 01       	movw	r28, r26
   1d0d0:	20 e0       	ldi	r18, 0x00	; 0
   1d0d2:	30 e0       	ldi	r19, 0x00	; 0
   1d0d4:	ce 17       	cp	r28, r30
   1d0d6:	df 07       	cpc	r29, r31
   1d0d8:	40 f4       	brcc	.+16     	; 0x1d0ea <free+0x5a>
   1d0da:	4a 81       	ldd	r20, Y+2	; 0x02
   1d0dc:	5b 81       	ldd	r21, Y+3	; 0x03
   1d0de:	9e 01       	movw	r18, r28
   1d0e0:	41 15       	cp	r20, r1
   1d0e2:	51 05       	cpc	r21, r1
   1d0e4:	f1 f0       	breq	.+60     	; 0x1d122 <free+0x92>
   1d0e6:	ea 01       	movw	r28, r20
   1d0e8:	f5 cf       	rjmp	.-22     	; 0x1d0d4 <free+0x44>
   1d0ea:	d3 83       	std	Z+3, r29	; 0x03
   1d0ec:	c2 83       	std	Z+2, r28	; 0x02
   1d0ee:	40 81       	ld	r20, Z
   1d0f0:	51 81       	ldd	r21, Z+1	; 0x01
   1d0f2:	84 0f       	add	r24, r20
   1d0f4:	95 1f       	adc	r25, r21
   1d0f6:	c8 17       	cp	r28, r24
   1d0f8:	d9 07       	cpc	r29, r25
   1d0fa:	59 f4       	brne	.+22     	; 0x1d112 <free+0x82>
   1d0fc:	88 81       	ld	r24, Y
   1d0fe:	99 81       	ldd	r25, Y+1	; 0x01
   1d100:	84 0f       	add	r24, r20
   1d102:	95 1f       	adc	r25, r21
   1d104:	02 96       	adiw	r24, 0x02	; 2
   1d106:	91 83       	std	Z+1, r25	; 0x01
   1d108:	80 83       	st	Z, r24
   1d10a:	8a 81       	ldd	r24, Y+2	; 0x02
   1d10c:	9b 81       	ldd	r25, Y+3	; 0x03
   1d10e:	93 83       	std	Z+3, r25	; 0x03
   1d110:	82 83       	std	Z+2, r24	; 0x02
   1d112:	21 15       	cp	r18, r1
   1d114:	31 05       	cpc	r19, r1
   1d116:	29 f4       	brne	.+10     	; 0x1d122 <free+0x92>
   1d118:	f0 93 d1 1a 	sts	0x1AD1, r31	; 0x801ad1 <__flp+0x1>
   1d11c:	e0 93 d0 1a 	sts	0x1AD0, r30	; 0x801ad0 <__flp>
   1d120:	3d c0       	rjmp	.+122    	; 0x1d19c <free+0x10c>
   1d122:	e9 01       	movw	r28, r18
   1d124:	fb 83       	std	Y+3, r31	; 0x03
   1d126:	ea 83       	std	Y+2, r30	; 0x02
   1d128:	49 91       	ld	r20, Y+
   1d12a:	59 91       	ld	r21, Y+
   1d12c:	c4 0f       	add	r28, r20
   1d12e:	d5 1f       	adc	r29, r21
   1d130:	ec 17       	cp	r30, r28
   1d132:	fd 07       	cpc	r31, r29
   1d134:	61 f4       	brne	.+24     	; 0x1d14e <free+0xbe>
   1d136:	80 81       	ld	r24, Z
   1d138:	91 81       	ldd	r25, Z+1	; 0x01
   1d13a:	84 0f       	add	r24, r20
   1d13c:	95 1f       	adc	r25, r21
   1d13e:	02 96       	adiw	r24, 0x02	; 2
   1d140:	e9 01       	movw	r28, r18
   1d142:	99 83       	std	Y+1, r25	; 0x01
   1d144:	88 83       	st	Y, r24
   1d146:	82 81       	ldd	r24, Z+2	; 0x02
   1d148:	93 81       	ldd	r25, Z+3	; 0x03
   1d14a:	9b 83       	std	Y+3, r25	; 0x03
   1d14c:	8a 83       	std	Y+2, r24	; 0x02
   1d14e:	e0 e0       	ldi	r30, 0x00	; 0
   1d150:	f0 e0       	ldi	r31, 0x00	; 0
   1d152:	12 96       	adiw	r26, 0x02	; 2
   1d154:	8d 91       	ld	r24, X+
   1d156:	9c 91       	ld	r25, X
   1d158:	13 97       	sbiw	r26, 0x03	; 3
   1d15a:	00 97       	sbiw	r24, 0x00	; 0
   1d15c:	19 f0       	breq	.+6      	; 0x1d164 <free+0xd4>
   1d15e:	fd 01       	movw	r30, r26
   1d160:	dc 01       	movw	r26, r24
   1d162:	f7 cf       	rjmp	.-18     	; 0x1d152 <free+0xc2>
   1d164:	8d 91       	ld	r24, X+
   1d166:	9c 91       	ld	r25, X
   1d168:	11 97       	sbiw	r26, 0x01	; 1
   1d16a:	9d 01       	movw	r18, r26
   1d16c:	2e 5f       	subi	r18, 0xFE	; 254
   1d16e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d170:	82 0f       	add	r24, r18
   1d172:	93 1f       	adc	r25, r19
   1d174:	20 91 ce 1a 	lds	r18, 0x1ACE	; 0x801ace <__brkval>
   1d178:	30 91 cf 1a 	lds	r19, 0x1ACF	; 0x801acf <__brkval+0x1>
   1d17c:	28 17       	cp	r18, r24
   1d17e:	39 07       	cpc	r19, r25
   1d180:	69 f4       	brne	.+26     	; 0x1d19c <free+0x10c>
   1d182:	30 97       	sbiw	r30, 0x00	; 0
   1d184:	29 f4       	brne	.+10     	; 0x1d190 <free+0x100>
   1d186:	10 92 d1 1a 	sts	0x1AD1, r1	; 0x801ad1 <__flp+0x1>
   1d18a:	10 92 d0 1a 	sts	0x1AD0, r1	; 0x801ad0 <__flp>
   1d18e:	02 c0       	rjmp	.+4      	; 0x1d194 <free+0x104>
   1d190:	13 82       	std	Z+3, r1	; 0x03
   1d192:	12 82       	std	Z+2, r1	; 0x02
   1d194:	b0 93 cf 1a 	sts	0x1ACF, r27	; 0x801acf <__brkval+0x1>
   1d198:	a0 93 ce 1a 	sts	0x1ACE, r26	; 0x801ace <__brkval>
   1d19c:	df 91       	pop	r29
   1d19e:	cf 91       	pop	r28
   1d1a0:	08 95       	ret

0001d1a2 <random_r>:
   1d1a2:	8f 92       	push	r8
   1d1a4:	9f 92       	push	r9
   1d1a6:	af 92       	push	r10
   1d1a8:	bf 92       	push	r11
   1d1aa:	cf 92       	push	r12
   1d1ac:	df 92       	push	r13
   1d1ae:	ef 92       	push	r14
   1d1b0:	ff 92       	push	r15
   1d1b2:	cf 93       	push	r28
   1d1b4:	df 93       	push	r29
   1d1b6:	ec 01       	movw	r28, r24
   1d1b8:	68 81       	ld	r22, Y
   1d1ba:	79 81       	ldd	r23, Y+1	; 0x01
   1d1bc:	8a 81       	ldd	r24, Y+2	; 0x02
   1d1be:	9b 81       	ldd	r25, Y+3	; 0x03
   1d1c0:	61 15       	cp	r22, r1
   1d1c2:	71 05       	cpc	r23, r1
   1d1c4:	81 05       	cpc	r24, r1
   1d1c6:	91 05       	cpc	r25, r1
   1d1c8:	21 f4       	brne	.+8      	; 0x1d1d2 <random_r+0x30>
   1d1ca:	64 e2       	ldi	r22, 0x24	; 36
   1d1cc:	79 ed       	ldi	r23, 0xD9	; 217
   1d1ce:	8b e5       	ldi	r24, 0x5B	; 91
   1d1d0:	97 e0       	ldi	r25, 0x07	; 7
   1d1d2:	2d e1       	ldi	r18, 0x1D	; 29
   1d1d4:	33 ef       	ldi	r19, 0xF3	; 243
   1d1d6:	41 e0       	ldi	r20, 0x01	; 1
   1d1d8:	50 e0       	ldi	r21, 0x00	; 0
   1d1da:	79 de       	rcall	.-782    	; 0x1cece <__divmodsi4>
   1d1dc:	49 01       	movw	r8, r18
   1d1de:	5a 01       	movw	r10, r20
   1d1e0:	9b 01       	movw	r18, r22
   1d1e2:	ac 01       	movw	r20, r24
   1d1e4:	a7 ea       	ldi	r26, 0xA7	; 167
   1d1e6:	b1 e4       	ldi	r27, 0x41	; 65
   1d1e8:	a5 de       	rcall	.-694    	; 0x1cf34 <__muluhisi3>
   1d1ea:	6b 01       	movw	r12, r22
   1d1ec:	7c 01       	movw	r14, r24
   1d1ee:	ac ee       	ldi	r26, 0xEC	; 236
   1d1f0:	b4 ef       	ldi	r27, 0xF4	; 244
   1d1f2:	a5 01       	movw	r20, r10
   1d1f4:	94 01       	movw	r18, r8
   1d1f6:	b6 d3       	rcall	.+1900   	; 0x1d964 <__mulohisi3>
   1d1f8:	dc 01       	movw	r26, r24
   1d1fa:	cb 01       	movw	r24, r22
   1d1fc:	8c 0d       	add	r24, r12
   1d1fe:	9d 1d       	adc	r25, r13
   1d200:	ae 1d       	adc	r26, r14
   1d202:	bf 1d       	adc	r27, r15
   1d204:	b7 ff       	sbrs	r27, 7
   1d206:	03 c0       	rjmp	.+6      	; 0x1d20e <random_r+0x6c>
   1d208:	01 97       	sbiw	r24, 0x01	; 1
   1d20a:	a1 09       	sbc	r26, r1
   1d20c:	b0 48       	sbci	r27, 0x80	; 128
   1d20e:	88 83       	st	Y, r24
   1d210:	99 83       	std	Y+1, r25	; 0x01
   1d212:	aa 83       	std	Y+2, r26	; 0x02
   1d214:	bb 83       	std	Y+3, r27	; 0x03
   1d216:	bc 01       	movw	r22, r24
   1d218:	cd 01       	movw	r24, r26
   1d21a:	9f 77       	andi	r25, 0x7F	; 127
   1d21c:	df 91       	pop	r29
   1d21e:	cf 91       	pop	r28
   1d220:	ff 90       	pop	r15
   1d222:	ef 90       	pop	r14
   1d224:	df 90       	pop	r13
   1d226:	cf 90       	pop	r12
   1d228:	bf 90       	pop	r11
   1d22a:	af 90       	pop	r10
   1d22c:	9f 90       	pop	r9
   1d22e:	8f 90       	pop	r8
   1d230:	08 95       	ret

0001d232 <random>:
   1d232:	8f 92       	push	r8
   1d234:	9f 92       	push	r9
   1d236:	af 92       	push	r10
   1d238:	bf 92       	push	r11
   1d23a:	cf 92       	push	r12
   1d23c:	df 92       	push	r13
   1d23e:	ef 92       	push	r14
   1d240:	ff 92       	push	r15
   1d242:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <next>
   1d246:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <next+0x1>
   1d24a:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <next+0x2>
   1d24e:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <next+0x3>
   1d252:	61 15       	cp	r22, r1
   1d254:	71 05       	cpc	r23, r1
   1d256:	81 05       	cpc	r24, r1
   1d258:	91 05       	cpc	r25, r1
   1d25a:	21 f4       	brne	.+8      	; 0x1d264 <random+0x32>
   1d25c:	64 e2       	ldi	r22, 0x24	; 36
   1d25e:	79 ed       	ldi	r23, 0xD9	; 217
   1d260:	8b e5       	ldi	r24, 0x5B	; 91
   1d262:	97 e0       	ldi	r25, 0x07	; 7
   1d264:	2d e1       	ldi	r18, 0x1D	; 29
   1d266:	33 ef       	ldi	r19, 0xF3	; 243
   1d268:	41 e0       	ldi	r20, 0x01	; 1
   1d26a:	50 e0       	ldi	r21, 0x00	; 0
   1d26c:	30 de       	rcall	.-928    	; 0x1cece <__divmodsi4>
   1d26e:	49 01       	movw	r8, r18
   1d270:	5a 01       	movw	r10, r20
   1d272:	9b 01       	movw	r18, r22
   1d274:	ac 01       	movw	r20, r24
   1d276:	a7 ea       	ldi	r26, 0xA7	; 167
   1d278:	b1 e4       	ldi	r27, 0x41	; 65
   1d27a:	5c de       	rcall	.-840    	; 0x1cf34 <__muluhisi3>
   1d27c:	6b 01       	movw	r12, r22
   1d27e:	7c 01       	movw	r14, r24
   1d280:	ac ee       	ldi	r26, 0xEC	; 236
   1d282:	b4 ef       	ldi	r27, 0xF4	; 244
   1d284:	a5 01       	movw	r20, r10
   1d286:	94 01       	movw	r18, r8
   1d288:	6d d3       	rcall	.+1754   	; 0x1d964 <__mulohisi3>
   1d28a:	dc 01       	movw	r26, r24
   1d28c:	cb 01       	movw	r24, r22
   1d28e:	8c 0d       	add	r24, r12
   1d290:	9d 1d       	adc	r25, r13
   1d292:	ae 1d       	adc	r26, r14
   1d294:	bf 1d       	adc	r27, r15
   1d296:	b7 ff       	sbrs	r27, 7
   1d298:	03 c0       	rjmp	.+6      	; 0x1d2a0 <random+0x6e>
   1d29a:	01 97       	sbiw	r24, 0x01	; 1
   1d29c:	a1 09       	sbc	r26, r1
   1d29e:	b0 48       	sbci	r27, 0x80	; 128
   1d2a0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <next>
   1d2a4:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <next+0x1>
   1d2a8:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <next+0x2>
   1d2ac:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <next+0x3>
   1d2b0:	bc 01       	movw	r22, r24
   1d2b2:	cd 01       	movw	r24, r26
   1d2b4:	9f 77       	andi	r25, 0x7F	; 127
   1d2b6:	ff 90       	pop	r15
   1d2b8:	ef 90       	pop	r14
   1d2ba:	df 90       	pop	r13
   1d2bc:	cf 90       	pop	r12
   1d2be:	bf 90       	pop	r11
   1d2c0:	af 90       	pop	r10
   1d2c2:	9f 90       	pop	r9
   1d2c4:	8f 90       	pop	r8
   1d2c6:	08 95       	ret

0001d2c8 <srandom>:
   1d2c8:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <next>
   1d2cc:	70 93 07 02 	sts	0x0207, r23	; 0x800207 <next+0x1>
   1d2d0:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <next+0x2>
   1d2d4:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <next+0x3>
   1d2d8:	08 95       	ret

0001d2da <abort>:
   1d2da:	81 e0       	ldi	r24, 0x01	; 1
   1d2dc:	90 e0       	ldi	r25, 0x00	; 0
   1d2de:	f8 94       	cli
   1d2e0:	45 c3       	rjmp	.+1674   	; 0x1d96c <_exit>

0001d2e2 <memcpy_P>:
   1d2e2:	fb 01       	movw	r30, r22
   1d2e4:	dc 01       	movw	r26, r24
   1d2e6:	02 c0       	rjmp	.+4      	; 0x1d2ec <memcpy_P+0xa>
   1d2e8:	05 90       	lpm	r0, Z+
   1d2ea:	0d 92       	st	X+, r0
   1d2ec:	41 50       	subi	r20, 0x01	; 1
   1d2ee:	50 40       	sbci	r21, 0x00	; 0
   1d2f0:	d8 f7       	brcc	.-10     	; 0x1d2e8 <memcpy_P+0x6>
   1d2f2:	08 95       	ret

0001d2f4 <strcmp_P>:
   1d2f4:	fb 01       	movw	r30, r22
   1d2f6:	dc 01       	movw	r26, r24
   1d2f8:	8d 91       	ld	r24, X+
   1d2fa:	05 90       	lpm	r0, Z+
   1d2fc:	80 19       	sub	r24, r0
   1d2fe:	01 10       	cpse	r0, r1
   1d300:	d9 f3       	breq	.-10     	; 0x1d2f8 <strcmp_P+0x4>
   1d302:	99 0b       	sbc	r25, r25
   1d304:	08 95       	ret

0001d306 <__strlen_P>:
   1d306:	fc 01       	movw	r30, r24
   1d308:	05 90       	lpm	r0, Z+
   1d30a:	00 20       	and	r0, r0
   1d30c:	e9 f7       	brne	.-6      	; 0x1d308 <__strlen_P+0x2>
   1d30e:	80 95       	com	r24
   1d310:	90 95       	com	r25
   1d312:	8e 0f       	add	r24, r30
   1d314:	9f 1f       	adc	r25, r31
   1d316:	08 95       	ret

0001d318 <memcpy>:
   1d318:	fb 01       	movw	r30, r22
   1d31a:	dc 01       	movw	r26, r24
   1d31c:	02 c0       	rjmp	.+4      	; 0x1d322 <memcpy+0xa>
   1d31e:	01 90       	ld	r0, Z+
   1d320:	0d 92       	st	X+, r0
   1d322:	41 50       	subi	r20, 0x01	; 1
   1d324:	50 40       	sbci	r21, 0x00	; 0
   1d326:	d8 f7       	brcc	.-10     	; 0x1d31e <memcpy+0x6>
   1d328:	08 95       	ret

0001d32a <strcmp>:
   1d32a:	fb 01       	movw	r30, r22
   1d32c:	dc 01       	movw	r26, r24
   1d32e:	8d 91       	ld	r24, X+
   1d330:	01 90       	ld	r0, Z+
   1d332:	80 19       	sub	r24, r0
   1d334:	01 10       	cpse	r0, r1
   1d336:	d9 f3       	breq	.-10     	; 0x1d32e <strcmp+0x4>
   1d338:	99 0b       	sbc	r25, r25
   1d33a:	08 95       	ret

0001d33c <strcpy>:
   1d33c:	fb 01       	movw	r30, r22
   1d33e:	dc 01       	movw	r26, r24
   1d340:	01 90       	ld	r0, Z+
   1d342:	0d 92       	st	X+, r0
   1d344:	00 20       	and	r0, r0
   1d346:	e1 f7       	brne	.-8      	; 0x1d340 <strcpy+0x4>
   1d348:	08 95       	ret

0001d34a <strstr>:
   1d34a:	fb 01       	movw	r30, r22
   1d34c:	51 91       	ld	r21, Z+
   1d34e:	55 23       	and	r21, r21
   1d350:	a9 f0       	breq	.+42     	; 0x1d37c <strstr+0x32>
   1d352:	bf 01       	movw	r22, r30
   1d354:	dc 01       	movw	r26, r24
   1d356:	4d 91       	ld	r20, X+
   1d358:	45 17       	cp	r20, r21
   1d35a:	41 11       	cpse	r20, r1
   1d35c:	e1 f7       	brne	.-8      	; 0x1d356 <strstr+0xc>
   1d35e:	59 f4       	brne	.+22     	; 0x1d376 <strstr+0x2c>
   1d360:	cd 01       	movw	r24, r26
   1d362:	01 90       	ld	r0, Z+
   1d364:	00 20       	and	r0, r0
   1d366:	49 f0       	breq	.+18     	; 0x1d37a <strstr+0x30>
   1d368:	4d 91       	ld	r20, X+
   1d36a:	40 15       	cp	r20, r0
   1d36c:	41 11       	cpse	r20, r1
   1d36e:	c9 f3       	breq	.-14     	; 0x1d362 <strstr+0x18>
   1d370:	fb 01       	movw	r30, r22
   1d372:	41 11       	cpse	r20, r1
   1d374:	ef cf       	rjmp	.-34     	; 0x1d354 <strstr+0xa>
   1d376:	81 e0       	ldi	r24, 0x01	; 1
   1d378:	90 e0       	ldi	r25, 0x00	; 0
   1d37a:	01 97       	sbiw	r24, 0x01	; 1
   1d37c:	08 95       	ret

0001d37e <sprintf>:
   1d37e:	0f 93       	push	r16
   1d380:	1f 93       	push	r17
   1d382:	cf 93       	push	r28
   1d384:	df 93       	push	r29
   1d386:	cd b7       	in	r28, 0x3d	; 61
   1d388:	de b7       	in	r29, 0x3e	; 62
   1d38a:	2e 97       	sbiw	r28, 0x0e	; 14
   1d38c:	0f b6       	in	r0, 0x3f	; 63
   1d38e:	f8 94       	cli
   1d390:	de bf       	out	0x3e, r29	; 62
   1d392:	0f be       	out	0x3f, r0	; 63
   1d394:	cd bf       	out	0x3d, r28	; 61
   1d396:	0e 89       	ldd	r16, Y+22	; 0x16
   1d398:	1f 89       	ldd	r17, Y+23	; 0x17
   1d39a:	86 e0       	ldi	r24, 0x06	; 6
   1d39c:	8c 83       	std	Y+4, r24	; 0x04
   1d39e:	1a 83       	std	Y+2, r17	; 0x02
   1d3a0:	09 83       	std	Y+1, r16	; 0x01
   1d3a2:	8f ef       	ldi	r24, 0xFF	; 255
   1d3a4:	9f e7       	ldi	r25, 0x7F	; 127
   1d3a6:	9e 83       	std	Y+6, r25	; 0x06
   1d3a8:	8d 83       	std	Y+5, r24	; 0x05
   1d3aa:	ae 01       	movw	r20, r28
   1d3ac:	46 5e       	subi	r20, 0xE6	; 230
   1d3ae:	5f 4f       	sbci	r21, 0xFF	; 255
   1d3b0:	68 8d       	ldd	r22, Y+24	; 0x18
   1d3b2:	79 8d       	ldd	r23, Y+25	; 0x19
   1d3b4:	ce 01       	movw	r24, r28
   1d3b6:	01 96       	adiw	r24, 0x01	; 1
   1d3b8:	10 d0       	rcall	.+32     	; 0x1d3da <vfprintf>
   1d3ba:	ef 81       	ldd	r30, Y+7	; 0x07
   1d3bc:	f8 85       	ldd	r31, Y+8	; 0x08
   1d3be:	e0 0f       	add	r30, r16
   1d3c0:	f1 1f       	adc	r31, r17
   1d3c2:	10 82       	st	Z, r1
   1d3c4:	2e 96       	adiw	r28, 0x0e	; 14
   1d3c6:	0f b6       	in	r0, 0x3f	; 63
   1d3c8:	f8 94       	cli
   1d3ca:	de bf       	out	0x3e, r29	; 62
   1d3cc:	0f be       	out	0x3f, r0	; 63
   1d3ce:	cd bf       	out	0x3d, r28	; 61
   1d3d0:	df 91       	pop	r29
   1d3d2:	cf 91       	pop	r28
   1d3d4:	1f 91       	pop	r17
   1d3d6:	0f 91       	pop	r16
   1d3d8:	08 95       	ret

0001d3da <vfprintf>:
   1d3da:	2f 92       	push	r2
   1d3dc:	3f 92       	push	r3
   1d3de:	4f 92       	push	r4
   1d3e0:	5f 92       	push	r5
   1d3e2:	6f 92       	push	r6
   1d3e4:	7f 92       	push	r7
   1d3e6:	8f 92       	push	r8
   1d3e8:	9f 92       	push	r9
   1d3ea:	af 92       	push	r10
   1d3ec:	bf 92       	push	r11
   1d3ee:	cf 92       	push	r12
   1d3f0:	df 92       	push	r13
   1d3f2:	ef 92       	push	r14
   1d3f4:	ff 92       	push	r15
   1d3f6:	0f 93       	push	r16
   1d3f8:	1f 93       	push	r17
   1d3fa:	cf 93       	push	r28
   1d3fc:	df 93       	push	r29
   1d3fe:	cd b7       	in	r28, 0x3d	; 61
   1d400:	de b7       	in	r29, 0x3e	; 62
   1d402:	2b 97       	sbiw	r28, 0x0b	; 11
   1d404:	0f b6       	in	r0, 0x3f	; 63
   1d406:	f8 94       	cli
   1d408:	de bf       	out	0x3e, r29	; 62
   1d40a:	0f be       	out	0x3f, r0	; 63
   1d40c:	cd bf       	out	0x3d, r28	; 61
   1d40e:	6c 01       	movw	r12, r24
   1d410:	7b 01       	movw	r14, r22
   1d412:	8a 01       	movw	r16, r20
   1d414:	fc 01       	movw	r30, r24
   1d416:	17 82       	std	Z+7, r1	; 0x07
   1d418:	16 82       	std	Z+6, r1	; 0x06
   1d41a:	83 81       	ldd	r24, Z+3	; 0x03
   1d41c:	81 ff       	sbrs	r24, 1
   1d41e:	bf c1       	rjmp	.+894    	; 0x1d79e <vfprintf+0x3c4>
   1d420:	ce 01       	movw	r24, r28
   1d422:	01 96       	adiw	r24, 0x01	; 1
   1d424:	3c 01       	movw	r6, r24
   1d426:	f6 01       	movw	r30, r12
   1d428:	93 81       	ldd	r25, Z+3	; 0x03
   1d42a:	f7 01       	movw	r30, r14
   1d42c:	93 fd       	sbrc	r25, 3
   1d42e:	85 91       	lpm	r24, Z+
   1d430:	93 ff       	sbrs	r25, 3
   1d432:	81 91       	ld	r24, Z+
   1d434:	7f 01       	movw	r14, r30
   1d436:	88 23       	and	r24, r24
   1d438:	09 f4       	brne	.+2      	; 0x1d43c <vfprintf+0x62>
   1d43a:	ad c1       	rjmp	.+858    	; 0x1d796 <vfprintf+0x3bc>
   1d43c:	85 32       	cpi	r24, 0x25	; 37
   1d43e:	39 f4       	brne	.+14     	; 0x1d44e <vfprintf+0x74>
   1d440:	93 fd       	sbrc	r25, 3
   1d442:	85 91       	lpm	r24, Z+
   1d444:	93 ff       	sbrs	r25, 3
   1d446:	81 91       	ld	r24, Z+
   1d448:	7f 01       	movw	r14, r30
   1d44a:	85 32       	cpi	r24, 0x25	; 37
   1d44c:	21 f4       	brne	.+8      	; 0x1d456 <vfprintf+0x7c>
   1d44e:	b6 01       	movw	r22, r12
   1d450:	90 e0       	ldi	r25, 0x00	; 0
   1d452:	d6 d1       	rcall	.+940    	; 0x1d800 <fputc>
   1d454:	e8 cf       	rjmp	.-48     	; 0x1d426 <vfprintf+0x4c>
   1d456:	91 2c       	mov	r9, r1
   1d458:	21 2c       	mov	r2, r1
   1d45a:	31 2c       	mov	r3, r1
   1d45c:	ff e1       	ldi	r31, 0x1F	; 31
   1d45e:	f3 15       	cp	r31, r3
   1d460:	d8 f0       	brcs	.+54     	; 0x1d498 <vfprintf+0xbe>
   1d462:	8b 32       	cpi	r24, 0x2B	; 43
   1d464:	79 f0       	breq	.+30     	; 0x1d484 <vfprintf+0xaa>
   1d466:	38 f4       	brcc	.+14     	; 0x1d476 <vfprintf+0x9c>
   1d468:	80 32       	cpi	r24, 0x20	; 32
   1d46a:	79 f0       	breq	.+30     	; 0x1d48a <vfprintf+0xb0>
   1d46c:	83 32       	cpi	r24, 0x23	; 35
   1d46e:	a1 f4       	brne	.+40     	; 0x1d498 <vfprintf+0xbe>
   1d470:	23 2d       	mov	r18, r3
   1d472:	20 61       	ori	r18, 0x10	; 16
   1d474:	1d c0       	rjmp	.+58     	; 0x1d4b0 <vfprintf+0xd6>
   1d476:	8d 32       	cpi	r24, 0x2D	; 45
   1d478:	61 f0       	breq	.+24     	; 0x1d492 <vfprintf+0xb8>
   1d47a:	80 33       	cpi	r24, 0x30	; 48
   1d47c:	69 f4       	brne	.+26     	; 0x1d498 <vfprintf+0xbe>
   1d47e:	23 2d       	mov	r18, r3
   1d480:	21 60       	ori	r18, 0x01	; 1
   1d482:	16 c0       	rjmp	.+44     	; 0x1d4b0 <vfprintf+0xd6>
   1d484:	83 2d       	mov	r24, r3
   1d486:	82 60       	ori	r24, 0x02	; 2
   1d488:	38 2e       	mov	r3, r24
   1d48a:	e3 2d       	mov	r30, r3
   1d48c:	e4 60       	ori	r30, 0x04	; 4
   1d48e:	3e 2e       	mov	r3, r30
   1d490:	2a c0       	rjmp	.+84     	; 0x1d4e6 <vfprintf+0x10c>
   1d492:	f3 2d       	mov	r31, r3
   1d494:	f8 60       	ori	r31, 0x08	; 8
   1d496:	1d c0       	rjmp	.+58     	; 0x1d4d2 <vfprintf+0xf8>
   1d498:	37 fc       	sbrc	r3, 7
   1d49a:	2d c0       	rjmp	.+90     	; 0x1d4f6 <vfprintf+0x11c>
   1d49c:	20 ed       	ldi	r18, 0xD0	; 208
   1d49e:	28 0f       	add	r18, r24
   1d4a0:	2a 30       	cpi	r18, 0x0A	; 10
   1d4a2:	40 f0       	brcs	.+16     	; 0x1d4b4 <vfprintf+0xda>
   1d4a4:	8e 32       	cpi	r24, 0x2E	; 46
   1d4a6:	b9 f4       	brne	.+46     	; 0x1d4d6 <vfprintf+0xfc>
   1d4a8:	36 fc       	sbrc	r3, 6
   1d4aa:	75 c1       	rjmp	.+746    	; 0x1d796 <vfprintf+0x3bc>
   1d4ac:	23 2d       	mov	r18, r3
   1d4ae:	20 64       	ori	r18, 0x40	; 64
   1d4b0:	32 2e       	mov	r3, r18
   1d4b2:	19 c0       	rjmp	.+50     	; 0x1d4e6 <vfprintf+0x10c>
   1d4b4:	36 fe       	sbrs	r3, 6
   1d4b6:	06 c0       	rjmp	.+12     	; 0x1d4c4 <vfprintf+0xea>
   1d4b8:	8a e0       	ldi	r24, 0x0A	; 10
   1d4ba:	98 9e       	mul	r9, r24
   1d4bc:	20 0d       	add	r18, r0
   1d4be:	11 24       	eor	r1, r1
   1d4c0:	92 2e       	mov	r9, r18
   1d4c2:	11 c0       	rjmp	.+34     	; 0x1d4e6 <vfprintf+0x10c>
   1d4c4:	ea e0       	ldi	r30, 0x0A	; 10
   1d4c6:	2e 9e       	mul	r2, r30
   1d4c8:	20 0d       	add	r18, r0
   1d4ca:	11 24       	eor	r1, r1
   1d4cc:	22 2e       	mov	r2, r18
   1d4ce:	f3 2d       	mov	r31, r3
   1d4d0:	f0 62       	ori	r31, 0x20	; 32
   1d4d2:	3f 2e       	mov	r3, r31
   1d4d4:	08 c0       	rjmp	.+16     	; 0x1d4e6 <vfprintf+0x10c>
   1d4d6:	8c 36       	cpi	r24, 0x6C	; 108
   1d4d8:	21 f4       	brne	.+8      	; 0x1d4e2 <vfprintf+0x108>
   1d4da:	83 2d       	mov	r24, r3
   1d4dc:	80 68       	ori	r24, 0x80	; 128
   1d4de:	38 2e       	mov	r3, r24
   1d4e0:	02 c0       	rjmp	.+4      	; 0x1d4e6 <vfprintf+0x10c>
   1d4e2:	88 36       	cpi	r24, 0x68	; 104
   1d4e4:	41 f4       	brne	.+16     	; 0x1d4f6 <vfprintf+0x11c>
   1d4e6:	f7 01       	movw	r30, r14
   1d4e8:	93 fd       	sbrc	r25, 3
   1d4ea:	85 91       	lpm	r24, Z+
   1d4ec:	93 ff       	sbrs	r25, 3
   1d4ee:	81 91       	ld	r24, Z+
   1d4f0:	7f 01       	movw	r14, r30
   1d4f2:	81 11       	cpse	r24, r1
   1d4f4:	b3 cf       	rjmp	.-154    	; 0x1d45c <vfprintf+0x82>
   1d4f6:	98 2f       	mov	r25, r24
   1d4f8:	9f 7d       	andi	r25, 0xDF	; 223
   1d4fa:	95 54       	subi	r25, 0x45	; 69
   1d4fc:	93 30       	cpi	r25, 0x03	; 3
   1d4fe:	28 f4       	brcc	.+10     	; 0x1d50a <vfprintf+0x130>
   1d500:	0c 5f       	subi	r16, 0xFC	; 252
   1d502:	1f 4f       	sbci	r17, 0xFF	; 255
   1d504:	9f e3       	ldi	r25, 0x3F	; 63
   1d506:	99 83       	std	Y+1, r25	; 0x01
   1d508:	0d c0       	rjmp	.+26     	; 0x1d524 <vfprintf+0x14a>
   1d50a:	83 36       	cpi	r24, 0x63	; 99
   1d50c:	31 f0       	breq	.+12     	; 0x1d51a <vfprintf+0x140>
   1d50e:	83 37       	cpi	r24, 0x73	; 115
   1d510:	71 f0       	breq	.+28     	; 0x1d52e <vfprintf+0x154>
   1d512:	83 35       	cpi	r24, 0x53	; 83
   1d514:	09 f0       	breq	.+2      	; 0x1d518 <vfprintf+0x13e>
   1d516:	55 c0       	rjmp	.+170    	; 0x1d5c2 <vfprintf+0x1e8>
   1d518:	20 c0       	rjmp	.+64     	; 0x1d55a <vfprintf+0x180>
   1d51a:	f8 01       	movw	r30, r16
   1d51c:	80 81       	ld	r24, Z
   1d51e:	89 83       	std	Y+1, r24	; 0x01
   1d520:	0e 5f       	subi	r16, 0xFE	; 254
   1d522:	1f 4f       	sbci	r17, 0xFF	; 255
   1d524:	88 24       	eor	r8, r8
   1d526:	83 94       	inc	r8
   1d528:	91 2c       	mov	r9, r1
   1d52a:	53 01       	movw	r10, r6
   1d52c:	12 c0       	rjmp	.+36     	; 0x1d552 <vfprintf+0x178>
   1d52e:	28 01       	movw	r4, r16
   1d530:	f2 e0       	ldi	r31, 0x02	; 2
   1d532:	4f 0e       	add	r4, r31
   1d534:	51 1c       	adc	r5, r1
   1d536:	f8 01       	movw	r30, r16
   1d538:	a0 80       	ld	r10, Z
   1d53a:	b1 80       	ldd	r11, Z+1	; 0x01
   1d53c:	36 fe       	sbrs	r3, 6
   1d53e:	03 c0       	rjmp	.+6      	; 0x1d546 <vfprintf+0x16c>
   1d540:	69 2d       	mov	r22, r9
   1d542:	70 e0       	ldi	r23, 0x00	; 0
   1d544:	02 c0       	rjmp	.+4      	; 0x1d54a <vfprintf+0x170>
   1d546:	6f ef       	ldi	r22, 0xFF	; 255
   1d548:	7f ef       	ldi	r23, 0xFF	; 255
   1d54a:	c5 01       	movw	r24, r10
   1d54c:	4e d1       	rcall	.+668    	; 0x1d7ea <strnlen>
   1d54e:	4c 01       	movw	r8, r24
   1d550:	82 01       	movw	r16, r4
   1d552:	f3 2d       	mov	r31, r3
   1d554:	ff 77       	andi	r31, 0x7F	; 127
   1d556:	3f 2e       	mov	r3, r31
   1d558:	15 c0       	rjmp	.+42     	; 0x1d584 <vfprintf+0x1aa>
   1d55a:	28 01       	movw	r4, r16
   1d55c:	22 e0       	ldi	r18, 0x02	; 2
   1d55e:	42 0e       	add	r4, r18
   1d560:	51 1c       	adc	r5, r1
   1d562:	f8 01       	movw	r30, r16
   1d564:	a0 80       	ld	r10, Z
   1d566:	b1 80       	ldd	r11, Z+1	; 0x01
   1d568:	36 fe       	sbrs	r3, 6
   1d56a:	03 c0       	rjmp	.+6      	; 0x1d572 <vfprintf+0x198>
   1d56c:	69 2d       	mov	r22, r9
   1d56e:	70 e0       	ldi	r23, 0x00	; 0
   1d570:	02 c0       	rjmp	.+4      	; 0x1d576 <vfprintf+0x19c>
   1d572:	6f ef       	ldi	r22, 0xFF	; 255
   1d574:	7f ef       	ldi	r23, 0xFF	; 255
   1d576:	c5 01       	movw	r24, r10
   1d578:	2d d1       	rcall	.+602    	; 0x1d7d4 <strnlen_P>
   1d57a:	4c 01       	movw	r8, r24
   1d57c:	f3 2d       	mov	r31, r3
   1d57e:	f0 68       	ori	r31, 0x80	; 128
   1d580:	3f 2e       	mov	r3, r31
   1d582:	82 01       	movw	r16, r4
   1d584:	33 fc       	sbrc	r3, 3
   1d586:	19 c0       	rjmp	.+50     	; 0x1d5ba <vfprintf+0x1e0>
   1d588:	82 2d       	mov	r24, r2
   1d58a:	90 e0       	ldi	r25, 0x00	; 0
   1d58c:	88 16       	cp	r8, r24
   1d58e:	99 06       	cpc	r9, r25
   1d590:	a0 f4       	brcc	.+40     	; 0x1d5ba <vfprintf+0x1e0>
   1d592:	b6 01       	movw	r22, r12
   1d594:	80 e2       	ldi	r24, 0x20	; 32
   1d596:	90 e0       	ldi	r25, 0x00	; 0
   1d598:	33 d1       	rcall	.+614    	; 0x1d800 <fputc>
   1d59a:	2a 94       	dec	r2
   1d59c:	f5 cf       	rjmp	.-22     	; 0x1d588 <vfprintf+0x1ae>
   1d59e:	f5 01       	movw	r30, r10
   1d5a0:	37 fc       	sbrc	r3, 7
   1d5a2:	85 91       	lpm	r24, Z+
   1d5a4:	37 fe       	sbrs	r3, 7
   1d5a6:	81 91       	ld	r24, Z+
   1d5a8:	5f 01       	movw	r10, r30
   1d5aa:	b6 01       	movw	r22, r12
   1d5ac:	90 e0       	ldi	r25, 0x00	; 0
   1d5ae:	28 d1       	rcall	.+592    	; 0x1d800 <fputc>
   1d5b0:	21 10       	cpse	r2, r1
   1d5b2:	2a 94       	dec	r2
   1d5b4:	21 e0       	ldi	r18, 0x01	; 1
   1d5b6:	82 1a       	sub	r8, r18
   1d5b8:	91 08       	sbc	r9, r1
   1d5ba:	81 14       	cp	r8, r1
   1d5bc:	91 04       	cpc	r9, r1
   1d5be:	79 f7       	brne	.-34     	; 0x1d59e <vfprintf+0x1c4>
   1d5c0:	e1 c0       	rjmp	.+450    	; 0x1d784 <vfprintf+0x3aa>
   1d5c2:	84 36       	cpi	r24, 0x64	; 100
   1d5c4:	11 f0       	breq	.+4      	; 0x1d5ca <vfprintf+0x1f0>
   1d5c6:	89 36       	cpi	r24, 0x69	; 105
   1d5c8:	39 f5       	brne	.+78     	; 0x1d618 <vfprintf+0x23e>
   1d5ca:	f8 01       	movw	r30, r16
   1d5cc:	37 fe       	sbrs	r3, 7
   1d5ce:	07 c0       	rjmp	.+14     	; 0x1d5de <vfprintf+0x204>
   1d5d0:	60 81       	ld	r22, Z
   1d5d2:	71 81       	ldd	r23, Z+1	; 0x01
   1d5d4:	82 81       	ldd	r24, Z+2	; 0x02
   1d5d6:	93 81       	ldd	r25, Z+3	; 0x03
   1d5d8:	0c 5f       	subi	r16, 0xFC	; 252
   1d5da:	1f 4f       	sbci	r17, 0xFF	; 255
   1d5dc:	08 c0       	rjmp	.+16     	; 0x1d5ee <vfprintf+0x214>
   1d5de:	60 81       	ld	r22, Z
   1d5e0:	71 81       	ldd	r23, Z+1	; 0x01
   1d5e2:	07 2e       	mov	r0, r23
   1d5e4:	00 0c       	add	r0, r0
   1d5e6:	88 0b       	sbc	r24, r24
   1d5e8:	99 0b       	sbc	r25, r25
   1d5ea:	0e 5f       	subi	r16, 0xFE	; 254
   1d5ec:	1f 4f       	sbci	r17, 0xFF	; 255
   1d5ee:	f3 2d       	mov	r31, r3
   1d5f0:	ff 76       	andi	r31, 0x6F	; 111
   1d5f2:	3f 2e       	mov	r3, r31
   1d5f4:	97 ff       	sbrs	r25, 7
   1d5f6:	09 c0       	rjmp	.+18     	; 0x1d60a <vfprintf+0x230>
   1d5f8:	90 95       	com	r25
   1d5fa:	80 95       	com	r24
   1d5fc:	70 95       	com	r23
   1d5fe:	61 95       	neg	r22
   1d600:	7f 4f       	sbci	r23, 0xFF	; 255
   1d602:	8f 4f       	sbci	r24, 0xFF	; 255
   1d604:	9f 4f       	sbci	r25, 0xFF	; 255
   1d606:	f0 68       	ori	r31, 0x80	; 128
   1d608:	3f 2e       	mov	r3, r31
   1d60a:	2a e0       	ldi	r18, 0x0A	; 10
   1d60c:	30 e0       	ldi	r19, 0x00	; 0
   1d60e:	a3 01       	movw	r20, r6
   1d610:	33 d1       	rcall	.+614    	; 0x1d878 <__ultoa_invert>
   1d612:	88 2e       	mov	r8, r24
   1d614:	86 18       	sub	r8, r6
   1d616:	44 c0       	rjmp	.+136    	; 0x1d6a0 <vfprintf+0x2c6>
   1d618:	85 37       	cpi	r24, 0x75	; 117
   1d61a:	31 f4       	brne	.+12     	; 0x1d628 <vfprintf+0x24e>
   1d61c:	23 2d       	mov	r18, r3
   1d61e:	2f 7e       	andi	r18, 0xEF	; 239
   1d620:	b2 2e       	mov	r11, r18
   1d622:	2a e0       	ldi	r18, 0x0A	; 10
   1d624:	30 e0       	ldi	r19, 0x00	; 0
   1d626:	25 c0       	rjmp	.+74     	; 0x1d672 <vfprintf+0x298>
   1d628:	93 2d       	mov	r25, r3
   1d62a:	99 7f       	andi	r25, 0xF9	; 249
   1d62c:	b9 2e       	mov	r11, r25
   1d62e:	8f 36       	cpi	r24, 0x6F	; 111
   1d630:	c1 f0       	breq	.+48     	; 0x1d662 <vfprintf+0x288>
   1d632:	18 f4       	brcc	.+6      	; 0x1d63a <vfprintf+0x260>
   1d634:	88 35       	cpi	r24, 0x58	; 88
   1d636:	79 f0       	breq	.+30     	; 0x1d656 <vfprintf+0x27c>
   1d638:	ae c0       	rjmp	.+348    	; 0x1d796 <vfprintf+0x3bc>
   1d63a:	80 37       	cpi	r24, 0x70	; 112
   1d63c:	19 f0       	breq	.+6      	; 0x1d644 <vfprintf+0x26a>
   1d63e:	88 37       	cpi	r24, 0x78	; 120
   1d640:	21 f0       	breq	.+8      	; 0x1d64a <vfprintf+0x270>
   1d642:	a9 c0       	rjmp	.+338    	; 0x1d796 <vfprintf+0x3bc>
   1d644:	e9 2f       	mov	r30, r25
   1d646:	e0 61       	ori	r30, 0x10	; 16
   1d648:	be 2e       	mov	r11, r30
   1d64a:	b4 fe       	sbrs	r11, 4
   1d64c:	0d c0       	rjmp	.+26     	; 0x1d668 <vfprintf+0x28e>
   1d64e:	fb 2d       	mov	r31, r11
   1d650:	f4 60       	ori	r31, 0x04	; 4
   1d652:	bf 2e       	mov	r11, r31
   1d654:	09 c0       	rjmp	.+18     	; 0x1d668 <vfprintf+0x28e>
   1d656:	34 fe       	sbrs	r3, 4
   1d658:	0a c0       	rjmp	.+20     	; 0x1d66e <vfprintf+0x294>
   1d65a:	29 2f       	mov	r18, r25
   1d65c:	26 60       	ori	r18, 0x06	; 6
   1d65e:	b2 2e       	mov	r11, r18
   1d660:	06 c0       	rjmp	.+12     	; 0x1d66e <vfprintf+0x294>
   1d662:	28 e0       	ldi	r18, 0x08	; 8
   1d664:	30 e0       	ldi	r19, 0x00	; 0
   1d666:	05 c0       	rjmp	.+10     	; 0x1d672 <vfprintf+0x298>
   1d668:	20 e1       	ldi	r18, 0x10	; 16
   1d66a:	30 e0       	ldi	r19, 0x00	; 0
   1d66c:	02 c0       	rjmp	.+4      	; 0x1d672 <vfprintf+0x298>
   1d66e:	20 e1       	ldi	r18, 0x10	; 16
   1d670:	32 e0       	ldi	r19, 0x02	; 2
   1d672:	f8 01       	movw	r30, r16
   1d674:	b7 fe       	sbrs	r11, 7
   1d676:	07 c0       	rjmp	.+14     	; 0x1d686 <vfprintf+0x2ac>
   1d678:	60 81       	ld	r22, Z
   1d67a:	71 81       	ldd	r23, Z+1	; 0x01
   1d67c:	82 81       	ldd	r24, Z+2	; 0x02
   1d67e:	93 81       	ldd	r25, Z+3	; 0x03
   1d680:	0c 5f       	subi	r16, 0xFC	; 252
   1d682:	1f 4f       	sbci	r17, 0xFF	; 255
   1d684:	06 c0       	rjmp	.+12     	; 0x1d692 <vfprintf+0x2b8>
   1d686:	60 81       	ld	r22, Z
   1d688:	71 81       	ldd	r23, Z+1	; 0x01
   1d68a:	80 e0       	ldi	r24, 0x00	; 0
   1d68c:	90 e0       	ldi	r25, 0x00	; 0
   1d68e:	0e 5f       	subi	r16, 0xFE	; 254
   1d690:	1f 4f       	sbci	r17, 0xFF	; 255
   1d692:	a3 01       	movw	r20, r6
   1d694:	f1 d0       	rcall	.+482    	; 0x1d878 <__ultoa_invert>
   1d696:	88 2e       	mov	r8, r24
   1d698:	86 18       	sub	r8, r6
   1d69a:	fb 2d       	mov	r31, r11
   1d69c:	ff 77       	andi	r31, 0x7F	; 127
   1d69e:	3f 2e       	mov	r3, r31
   1d6a0:	36 fe       	sbrs	r3, 6
   1d6a2:	0d c0       	rjmp	.+26     	; 0x1d6be <vfprintf+0x2e4>
   1d6a4:	23 2d       	mov	r18, r3
   1d6a6:	2e 7f       	andi	r18, 0xFE	; 254
   1d6a8:	a2 2e       	mov	r10, r18
   1d6aa:	89 14       	cp	r8, r9
   1d6ac:	58 f4       	brcc	.+22     	; 0x1d6c4 <vfprintf+0x2ea>
   1d6ae:	34 fe       	sbrs	r3, 4
   1d6b0:	0b c0       	rjmp	.+22     	; 0x1d6c8 <vfprintf+0x2ee>
   1d6b2:	32 fc       	sbrc	r3, 2
   1d6b4:	09 c0       	rjmp	.+18     	; 0x1d6c8 <vfprintf+0x2ee>
   1d6b6:	83 2d       	mov	r24, r3
   1d6b8:	8e 7e       	andi	r24, 0xEE	; 238
   1d6ba:	a8 2e       	mov	r10, r24
   1d6bc:	05 c0       	rjmp	.+10     	; 0x1d6c8 <vfprintf+0x2ee>
   1d6be:	b8 2c       	mov	r11, r8
   1d6c0:	a3 2c       	mov	r10, r3
   1d6c2:	03 c0       	rjmp	.+6      	; 0x1d6ca <vfprintf+0x2f0>
   1d6c4:	b8 2c       	mov	r11, r8
   1d6c6:	01 c0       	rjmp	.+2      	; 0x1d6ca <vfprintf+0x2f0>
   1d6c8:	b9 2c       	mov	r11, r9
   1d6ca:	a4 fe       	sbrs	r10, 4
   1d6cc:	0f c0       	rjmp	.+30     	; 0x1d6ec <vfprintf+0x312>
   1d6ce:	fe 01       	movw	r30, r28
   1d6d0:	e8 0d       	add	r30, r8
   1d6d2:	f1 1d       	adc	r31, r1
   1d6d4:	80 81       	ld	r24, Z
   1d6d6:	80 33       	cpi	r24, 0x30	; 48
   1d6d8:	21 f4       	brne	.+8      	; 0x1d6e2 <vfprintf+0x308>
   1d6da:	9a 2d       	mov	r25, r10
   1d6dc:	99 7e       	andi	r25, 0xE9	; 233
   1d6de:	a9 2e       	mov	r10, r25
   1d6e0:	09 c0       	rjmp	.+18     	; 0x1d6f4 <vfprintf+0x31a>
   1d6e2:	a2 fe       	sbrs	r10, 2
   1d6e4:	06 c0       	rjmp	.+12     	; 0x1d6f2 <vfprintf+0x318>
   1d6e6:	b3 94       	inc	r11
   1d6e8:	b3 94       	inc	r11
   1d6ea:	04 c0       	rjmp	.+8      	; 0x1d6f4 <vfprintf+0x31a>
   1d6ec:	8a 2d       	mov	r24, r10
   1d6ee:	86 78       	andi	r24, 0x86	; 134
   1d6f0:	09 f0       	breq	.+2      	; 0x1d6f4 <vfprintf+0x31a>
   1d6f2:	b3 94       	inc	r11
   1d6f4:	a3 fc       	sbrc	r10, 3
   1d6f6:	10 c0       	rjmp	.+32     	; 0x1d718 <vfprintf+0x33e>
   1d6f8:	a0 fe       	sbrs	r10, 0
   1d6fa:	06 c0       	rjmp	.+12     	; 0x1d708 <vfprintf+0x32e>
   1d6fc:	b2 14       	cp	r11, r2
   1d6fe:	80 f4       	brcc	.+32     	; 0x1d720 <vfprintf+0x346>
   1d700:	28 0c       	add	r2, r8
   1d702:	92 2c       	mov	r9, r2
   1d704:	9b 18       	sub	r9, r11
   1d706:	0d c0       	rjmp	.+26     	; 0x1d722 <vfprintf+0x348>
   1d708:	b2 14       	cp	r11, r2
   1d70a:	58 f4       	brcc	.+22     	; 0x1d722 <vfprintf+0x348>
   1d70c:	b6 01       	movw	r22, r12
   1d70e:	80 e2       	ldi	r24, 0x20	; 32
   1d710:	90 e0       	ldi	r25, 0x00	; 0
   1d712:	76 d0       	rcall	.+236    	; 0x1d800 <fputc>
   1d714:	b3 94       	inc	r11
   1d716:	f8 cf       	rjmp	.-16     	; 0x1d708 <vfprintf+0x32e>
   1d718:	b2 14       	cp	r11, r2
   1d71a:	18 f4       	brcc	.+6      	; 0x1d722 <vfprintf+0x348>
   1d71c:	2b 18       	sub	r2, r11
   1d71e:	02 c0       	rjmp	.+4      	; 0x1d724 <vfprintf+0x34a>
   1d720:	98 2c       	mov	r9, r8
   1d722:	21 2c       	mov	r2, r1
   1d724:	a4 fe       	sbrs	r10, 4
   1d726:	0f c0       	rjmp	.+30     	; 0x1d746 <vfprintf+0x36c>
   1d728:	b6 01       	movw	r22, r12
   1d72a:	80 e3       	ldi	r24, 0x30	; 48
   1d72c:	90 e0       	ldi	r25, 0x00	; 0
   1d72e:	68 d0       	rcall	.+208    	; 0x1d800 <fputc>
   1d730:	a2 fe       	sbrs	r10, 2
   1d732:	16 c0       	rjmp	.+44     	; 0x1d760 <vfprintf+0x386>
   1d734:	a1 fc       	sbrc	r10, 1
   1d736:	03 c0       	rjmp	.+6      	; 0x1d73e <vfprintf+0x364>
   1d738:	88 e7       	ldi	r24, 0x78	; 120
   1d73a:	90 e0       	ldi	r25, 0x00	; 0
   1d73c:	02 c0       	rjmp	.+4      	; 0x1d742 <vfprintf+0x368>
   1d73e:	88 e5       	ldi	r24, 0x58	; 88
   1d740:	90 e0       	ldi	r25, 0x00	; 0
   1d742:	b6 01       	movw	r22, r12
   1d744:	0c c0       	rjmp	.+24     	; 0x1d75e <vfprintf+0x384>
   1d746:	8a 2d       	mov	r24, r10
   1d748:	86 78       	andi	r24, 0x86	; 134
   1d74a:	51 f0       	breq	.+20     	; 0x1d760 <vfprintf+0x386>
   1d74c:	a1 fe       	sbrs	r10, 1
   1d74e:	02 c0       	rjmp	.+4      	; 0x1d754 <vfprintf+0x37a>
   1d750:	8b e2       	ldi	r24, 0x2B	; 43
   1d752:	01 c0       	rjmp	.+2      	; 0x1d756 <vfprintf+0x37c>
   1d754:	80 e2       	ldi	r24, 0x20	; 32
   1d756:	a7 fc       	sbrc	r10, 7
   1d758:	8d e2       	ldi	r24, 0x2D	; 45
   1d75a:	b6 01       	movw	r22, r12
   1d75c:	90 e0       	ldi	r25, 0x00	; 0
   1d75e:	50 d0       	rcall	.+160    	; 0x1d800 <fputc>
   1d760:	89 14       	cp	r8, r9
   1d762:	30 f4       	brcc	.+12     	; 0x1d770 <vfprintf+0x396>
   1d764:	b6 01       	movw	r22, r12
   1d766:	80 e3       	ldi	r24, 0x30	; 48
   1d768:	90 e0       	ldi	r25, 0x00	; 0
   1d76a:	4a d0       	rcall	.+148    	; 0x1d800 <fputc>
   1d76c:	9a 94       	dec	r9
   1d76e:	f8 cf       	rjmp	.-16     	; 0x1d760 <vfprintf+0x386>
   1d770:	8a 94       	dec	r8
   1d772:	f3 01       	movw	r30, r6
   1d774:	e8 0d       	add	r30, r8
   1d776:	f1 1d       	adc	r31, r1
   1d778:	80 81       	ld	r24, Z
   1d77a:	b6 01       	movw	r22, r12
   1d77c:	90 e0       	ldi	r25, 0x00	; 0
   1d77e:	40 d0       	rcall	.+128    	; 0x1d800 <fputc>
   1d780:	81 10       	cpse	r8, r1
   1d782:	f6 cf       	rjmp	.-20     	; 0x1d770 <vfprintf+0x396>
   1d784:	22 20       	and	r2, r2
   1d786:	09 f4       	brne	.+2      	; 0x1d78a <vfprintf+0x3b0>
   1d788:	4e ce       	rjmp	.-868    	; 0x1d426 <vfprintf+0x4c>
   1d78a:	b6 01       	movw	r22, r12
   1d78c:	80 e2       	ldi	r24, 0x20	; 32
   1d78e:	90 e0       	ldi	r25, 0x00	; 0
   1d790:	37 d0       	rcall	.+110    	; 0x1d800 <fputc>
   1d792:	2a 94       	dec	r2
   1d794:	f7 cf       	rjmp	.-18     	; 0x1d784 <vfprintf+0x3aa>
   1d796:	f6 01       	movw	r30, r12
   1d798:	86 81       	ldd	r24, Z+6	; 0x06
   1d79a:	97 81       	ldd	r25, Z+7	; 0x07
   1d79c:	02 c0       	rjmp	.+4      	; 0x1d7a2 <vfprintf+0x3c8>
   1d79e:	8f ef       	ldi	r24, 0xFF	; 255
   1d7a0:	9f ef       	ldi	r25, 0xFF	; 255
   1d7a2:	2b 96       	adiw	r28, 0x0b	; 11
   1d7a4:	0f b6       	in	r0, 0x3f	; 63
   1d7a6:	f8 94       	cli
   1d7a8:	de bf       	out	0x3e, r29	; 62
   1d7aa:	0f be       	out	0x3f, r0	; 63
   1d7ac:	cd bf       	out	0x3d, r28	; 61
   1d7ae:	df 91       	pop	r29
   1d7b0:	cf 91       	pop	r28
   1d7b2:	1f 91       	pop	r17
   1d7b4:	0f 91       	pop	r16
   1d7b6:	ff 90       	pop	r15
   1d7b8:	ef 90       	pop	r14
   1d7ba:	df 90       	pop	r13
   1d7bc:	cf 90       	pop	r12
   1d7be:	bf 90       	pop	r11
   1d7c0:	af 90       	pop	r10
   1d7c2:	9f 90       	pop	r9
   1d7c4:	8f 90       	pop	r8
   1d7c6:	7f 90       	pop	r7
   1d7c8:	6f 90       	pop	r6
   1d7ca:	5f 90       	pop	r5
   1d7cc:	4f 90       	pop	r4
   1d7ce:	3f 90       	pop	r3
   1d7d0:	2f 90       	pop	r2
   1d7d2:	08 95       	ret

0001d7d4 <strnlen_P>:
   1d7d4:	fc 01       	movw	r30, r24
   1d7d6:	05 90       	lpm	r0, Z+
   1d7d8:	61 50       	subi	r22, 0x01	; 1
   1d7da:	70 40       	sbci	r23, 0x00	; 0
   1d7dc:	01 10       	cpse	r0, r1
   1d7de:	d8 f7       	brcc	.-10     	; 0x1d7d6 <strnlen_P+0x2>
   1d7e0:	80 95       	com	r24
   1d7e2:	90 95       	com	r25
   1d7e4:	8e 0f       	add	r24, r30
   1d7e6:	9f 1f       	adc	r25, r31
   1d7e8:	08 95       	ret

0001d7ea <strnlen>:
   1d7ea:	fc 01       	movw	r30, r24
   1d7ec:	61 50       	subi	r22, 0x01	; 1
   1d7ee:	70 40       	sbci	r23, 0x00	; 0
   1d7f0:	01 90       	ld	r0, Z+
   1d7f2:	01 10       	cpse	r0, r1
   1d7f4:	d8 f7       	brcc	.-10     	; 0x1d7ec <strnlen+0x2>
   1d7f6:	80 95       	com	r24
   1d7f8:	90 95       	com	r25
   1d7fa:	8e 0f       	add	r24, r30
   1d7fc:	9f 1f       	adc	r25, r31
   1d7fe:	08 95       	ret

0001d800 <fputc>:
   1d800:	0f 93       	push	r16
   1d802:	1f 93       	push	r17
   1d804:	cf 93       	push	r28
   1d806:	df 93       	push	r29
   1d808:	fb 01       	movw	r30, r22
   1d80a:	23 81       	ldd	r18, Z+3	; 0x03
   1d80c:	21 fd       	sbrc	r18, 1
   1d80e:	03 c0       	rjmp	.+6      	; 0x1d816 <fputc+0x16>
   1d810:	8f ef       	ldi	r24, 0xFF	; 255
   1d812:	9f ef       	ldi	r25, 0xFF	; 255
   1d814:	2c c0       	rjmp	.+88     	; 0x1d86e <fputc+0x6e>
   1d816:	22 ff       	sbrs	r18, 2
   1d818:	16 c0       	rjmp	.+44     	; 0x1d846 <fputc+0x46>
   1d81a:	46 81       	ldd	r20, Z+6	; 0x06
   1d81c:	57 81       	ldd	r21, Z+7	; 0x07
   1d81e:	24 81       	ldd	r18, Z+4	; 0x04
   1d820:	35 81       	ldd	r19, Z+5	; 0x05
   1d822:	42 17       	cp	r20, r18
   1d824:	53 07       	cpc	r21, r19
   1d826:	44 f4       	brge	.+16     	; 0x1d838 <fputc+0x38>
   1d828:	a0 81       	ld	r26, Z
   1d82a:	b1 81       	ldd	r27, Z+1	; 0x01
   1d82c:	9d 01       	movw	r18, r26
   1d82e:	2f 5f       	subi	r18, 0xFF	; 255
   1d830:	3f 4f       	sbci	r19, 0xFF	; 255
   1d832:	31 83       	std	Z+1, r19	; 0x01
   1d834:	20 83       	st	Z, r18
   1d836:	8c 93       	st	X, r24
   1d838:	26 81       	ldd	r18, Z+6	; 0x06
   1d83a:	37 81       	ldd	r19, Z+7	; 0x07
   1d83c:	2f 5f       	subi	r18, 0xFF	; 255
   1d83e:	3f 4f       	sbci	r19, 0xFF	; 255
   1d840:	37 83       	std	Z+7, r19	; 0x07
   1d842:	26 83       	std	Z+6, r18	; 0x06
   1d844:	14 c0       	rjmp	.+40     	; 0x1d86e <fputc+0x6e>
   1d846:	8b 01       	movw	r16, r22
   1d848:	ec 01       	movw	r28, r24
   1d84a:	fb 01       	movw	r30, r22
   1d84c:	00 84       	ldd	r0, Z+8	; 0x08
   1d84e:	f1 85       	ldd	r31, Z+9	; 0x09
   1d850:	e0 2d       	mov	r30, r0
   1d852:	19 95       	eicall
   1d854:	89 2b       	or	r24, r25
   1d856:	e1 f6       	brne	.-72     	; 0x1d810 <fputc+0x10>
   1d858:	d8 01       	movw	r26, r16
   1d85a:	16 96       	adiw	r26, 0x06	; 6
   1d85c:	8d 91       	ld	r24, X+
   1d85e:	9c 91       	ld	r25, X
   1d860:	17 97       	sbiw	r26, 0x07	; 7
   1d862:	01 96       	adiw	r24, 0x01	; 1
   1d864:	17 96       	adiw	r26, 0x07	; 7
   1d866:	9c 93       	st	X, r25
   1d868:	8e 93       	st	-X, r24
   1d86a:	16 97       	sbiw	r26, 0x06	; 6
   1d86c:	ce 01       	movw	r24, r28
   1d86e:	df 91       	pop	r29
   1d870:	cf 91       	pop	r28
   1d872:	1f 91       	pop	r17
   1d874:	0f 91       	pop	r16
   1d876:	08 95       	ret

0001d878 <__ultoa_invert>:
   1d878:	fa 01       	movw	r30, r20
   1d87a:	aa 27       	eor	r26, r26
   1d87c:	28 30       	cpi	r18, 0x08	; 8
   1d87e:	51 f1       	breq	.+84     	; 0x1d8d4 <__ultoa_invert+0x5c>
   1d880:	20 31       	cpi	r18, 0x10	; 16
   1d882:	81 f1       	breq	.+96     	; 0x1d8e4 <__ultoa_invert+0x6c>
   1d884:	e8 94       	clt
   1d886:	6f 93       	push	r22
   1d888:	6e 7f       	andi	r22, 0xFE	; 254
   1d88a:	6e 5f       	subi	r22, 0xFE	; 254
   1d88c:	7f 4f       	sbci	r23, 0xFF	; 255
   1d88e:	8f 4f       	sbci	r24, 0xFF	; 255
   1d890:	9f 4f       	sbci	r25, 0xFF	; 255
   1d892:	af 4f       	sbci	r26, 0xFF	; 255
   1d894:	b1 e0       	ldi	r27, 0x01	; 1
   1d896:	3e d0       	rcall	.+124    	; 0x1d914 <__ultoa_invert+0x9c>
   1d898:	b4 e0       	ldi	r27, 0x04	; 4
   1d89a:	3c d0       	rcall	.+120    	; 0x1d914 <__ultoa_invert+0x9c>
   1d89c:	67 0f       	add	r22, r23
   1d89e:	78 1f       	adc	r23, r24
   1d8a0:	89 1f       	adc	r24, r25
   1d8a2:	9a 1f       	adc	r25, r26
   1d8a4:	a1 1d       	adc	r26, r1
   1d8a6:	68 0f       	add	r22, r24
   1d8a8:	79 1f       	adc	r23, r25
   1d8aa:	8a 1f       	adc	r24, r26
   1d8ac:	91 1d       	adc	r25, r1
   1d8ae:	a1 1d       	adc	r26, r1
   1d8b0:	6a 0f       	add	r22, r26
   1d8b2:	71 1d       	adc	r23, r1
   1d8b4:	81 1d       	adc	r24, r1
   1d8b6:	91 1d       	adc	r25, r1
   1d8b8:	a1 1d       	adc	r26, r1
   1d8ba:	20 d0       	rcall	.+64     	; 0x1d8fc <__ultoa_invert+0x84>
   1d8bc:	09 f4       	brne	.+2      	; 0x1d8c0 <__ultoa_invert+0x48>
   1d8be:	68 94       	set
   1d8c0:	3f 91       	pop	r19
   1d8c2:	2a e0       	ldi	r18, 0x0A	; 10
   1d8c4:	26 9f       	mul	r18, r22
   1d8c6:	11 24       	eor	r1, r1
   1d8c8:	30 19       	sub	r19, r0
   1d8ca:	30 5d       	subi	r19, 0xD0	; 208
   1d8cc:	31 93       	st	Z+, r19
   1d8ce:	de f6       	brtc	.-74     	; 0x1d886 <__ultoa_invert+0xe>
   1d8d0:	cf 01       	movw	r24, r30
   1d8d2:	08 95       	ret
   1d8d4:	46 2f       	mov	r20, r22
   1d8d6:	47 70       	andi	r20, 0x07	; 7
   1d8d8:	40 5d       	subi	r20, 0xD0	; 208
   1d8da:	41 93       	st	Z+, r20
   1d8dc:	b3 e0       	ldi	r27, 0x03	; 3
   1d8de:	0f d0       	rcall	.+30     	; 0x1d8fe <__ultoa_invert+0x86>
   1d8e0:	c9 f7       	brne	.-14     	; 0x1d8d4 <__ultoa_invert+0x5c>
   1d8e2:	f6 cf       	rjmp	.-20     	; 0x1d8d0 <__ultoa_invert+0x58>
   1d8e4:	46 2f       	mov	r20, r22
   1d8e6:	4f 70       	andi	r20, 0x0F	; 15
   1d8e8:	40 5d       	subi	r20, 0xD0	; 208
   1d8ea:	4a 33       	cpi	r20, 0x3A	; 58
   1d8ec:	18 f0       	brcs	.+6      	; 0x1d8f4 <__ultoa_invert+0x7c>
   1d8ee:	49 5d       	subi	r20, 0xD9	; 217
   1d8f0:	31 fd       	sbrc	r19, 1
   1d8f2:	40 52       	subi	r20, 0x20	; 32
   1d8f4:	41 93       	st	Z+, r20
   1d8f6:	02 d0       	rcall	.+4      	; 0x1d8fc <__ultoa_invert+0x84>
   1d8f8:	a9 f7       	brne	.-22     	; 0x1d8e4 <__ultoa_invert+0x6c>
   1d8fa:	ea cf       	rjmp	.-44     	; 0x1d8d0 <__ultoa_invert+0x58>
   1d8fc:	b4 e0       	ldi	r27, 0x04	; 4
   1d8fe:	a6 95       	lsr	r26
   1d900:	97 95       	ror	r25
   1d902:	87 95       	ror	r24
   1d904:	77 95       	ror	r23
   1d906:	67 95       	ror	r22
   1d908:	ba 95       	dec	r27
   1d90a:	c9 f7       	brne	.-14     	; 0x1d8fe <__ultoa_invert+0x86>
   1d90c:	00 97       	sbiw	r24, 0x00	; 0
   1d90e:	61 05       	cpc	r22, r1
   1d910:	71 05       	cpc	r23, r1
   1d912:	08 95       	ret
   1d914:	9b 01       	movw	r18, r22
   1d916:	ac 01       	movw	r20, r24
   1d918:	0a 2e       	mov	r0, r26
   1d91a:	06 94       	lsr	r0
   1d91c:	57 95       	ror	r21
   1d91e:	47 95       	ror	r20
   1d920:	37 95       	ror	r19
   1d922:	27 95       	ror	r18
   1d924:	ba 95       	dec	r27
   1d926:	c9 f7       	brne	.-14     	; 0x1d91a <__ultoa_invert+0xa2>
   1d928:	62 0f       	add	r22, r18
   1d92a:	73 1f       	adc	r23, r19
   1d92c:	84 1f       	adc	r24, r20
   1d92e:	95 1f       	adc	r25, r21
   1d930:	a0 1d       	adc	r26, r0
   1d932:	08 95       	ret

0001d934 <eeprom_read_byte>:
   1d934:	f9 99       	sbic	0x1f, 1	; 31
   1d936:	fe cf       	rjmp	.-4      	; 0x1d934 <eeprom_read_byte>
   1d938:	92 bd       	out	0x22, r25	; 34
   1d93a:	81 bd       	out	0x21, r24	; 33
   1d93c:	f8 9a       	sbi	0x1f, 0	; 31
   1d93e:	99 27       	eor	r25, r25
   1d940:	80 b5       	in	r24, 0x20	; 32
   1d942:	08 95       	ret

0001d944 <eeprom_write_byte>:
   1d944:	26 2f       	mov	r18, r22

0001d946 <eeprom_write_r18>:
   1d946:	f9 99       	sbic	0x1f, 1	; 31
   1d948:	fe cf       	rjmp	.-4      	; 0x1d946 <eeprom_write_r18>
   1d94a:	1f ba       	out	0x1f, r1	; 31
   1d94c:	92 bd       	out	0x22, r25	; 34
   1d94e:	81 bd       	out	0x21, r24	; 33
   1d950:	20 bd       	out	0x20, r18	; 32
   1d952:	0f b6       	in	r0, 0x3f	; 63
   1d954:	f8 94       	cli
   1d956:	fa 9a       	sbi	0x1f, 2	; 31
   1d958:	f9 9a       	sbi	0x1f, 1	; 31
   1d95a:	0f be       	out	0x3f, r0	; 63
   1d95c:	01 96       	adiw	r24, 0x01	; 1
   1d95e:	08 95       	ret

0001d960 <__mulshisi3>:
   1d960:	b7 ff       	sbrs	r27, 7
   1d962:	e8 ca       	rjmp	.-2608   	; 0x1cf34 <__muluhisi3>

0001d964 <__mulohisi3>:
   1d964:	e7 da       	rcall	.-2610   	; 0x1cf34 <__muluhisi3>
   1d966:	82 1b       	sub	r24, r18
   1d968:	93 0b       	sbc	r25, r19
   1d96a:	08 95       	ret

0001d96c <_exit>:
   1d96c:	f8 94       	cli

0001d96e <__stop_program>:
   1d96e:	ff cf       	rjmp	.-2      	; 0x1d96e <__stop_program>
